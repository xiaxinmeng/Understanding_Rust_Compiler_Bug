{"sha": "66df92aeba64547f3e9600635a30df34b12a11d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ZGY5MmFlYmE2NDU0N2YzZTk2MDA2MzVhMzBkZjM0YjEyYTExZDg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-26T20:30:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-26T20:30:02Z"}, "message": "Auto merge of #4739 - flip1995:rustup, r=flip1995\n\nRustup to rust-lang/rust#65773\n\nchangelog: none", "tree": {"sha": "da631c4691c57c9349d0ee35cbcc580920672f30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da631c4691c57c9349d0ee35cbcc580920672f30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66df92aeba64547f3e9600635a30df34b12a11d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66df92aeba64547f3e9600635a30df34b12a11d8", "html_url": "https://github.com/rust-lang/rust/commit/66df92aeba64547f3e9600635a30df34b12a11d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66df92aeba64547f3e9600635a30df34b12a11d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e402ddd616665538307b66f6e8a582bf5c6c91b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e402ddd616665538307b66f6e8a582bf5c6c91b8", "html_url": "https://github.com/rust-lang/rust/commit/e402ddd616665538307b66f6e8a582bf5c6c91b8"}, {"sha": "4a52dd6c532c266048b1de8d0a863e72d33c36f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a52dd6c532c266048b1de8d0a863e72d33c36f0", "html_url": "https://github.com/rust-lang/rust/commit/4a52dd6c532c266048b1de8d0a863e72d33c36f0"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "c746cfd9d56b9b8b1b530d3aad884195875248e2", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -19,6 +19,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a += 1 + a;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a + 1 or a = a + 1 + a? Consider replacing it with\n    |\n LL |     a += 1;\n@@ -33,6 +34,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a -= a - 1;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a - 1 or a = a - (a - 1)? Consider replacing it with\n    |\n LL |     a -= 1;\n@@ -47,6 +49,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a *= a * 99;\n    |     ^^^^^^^^^^^\n+   |\n help: Did you mean a = a * 99 or a = a * a * 99? Consider replacing it with\n    |\n LL |     a *= 99;\n@@ -61,6 +64,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a *= 42 * a;\n    |     ^^^^^^^^^^^\n+   |\n help: Did you mean a = a * 42 or a = a * 42 * a? Consider replacing it with\n    |\n LL |     a *= 42;\n@@ -75,6 +79,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a /= a / 2;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a / 2 or a = a / (a / 2)? Consider replacing it with\n    |\n LL |     a /= 2;\n@@ -89,6 +94,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a %= a % 5;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a % 5 or a = a % (a % 5)? Consider replacing it with\n    |\n LL |     a %= 5;\n@@ -103,6 +109,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a &= a & 1;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a & 1 or a = a & a & 1? Consider replacing it with\n    |\n LL |     a &= 1;\n@@ -117,6 +124,7 @@ error: variable appears on both sides of an assignment operation\n    |\n LL |     a *= a * a;\n    |     ^^^^^^^^^^\n+   |\n help: Did you mean a = a * a or a = a * a * a? Consider replacing it with\n    |\n LL |     a *= a;"}, {"sha": "b83df6f8138519636108b6316b333895d9d94280", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -72,6 +72,7 @@ error: this boolean expression can be simplified\n    |\n LL |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: try\n    |\n LL |     let _ = a == b && c == 5;\n@@ -84,6 +85,7 @@ error: this boolean expression can be simplified\n    |\n LL |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: try\n    |\n LL |     let _ = a == b && c == 5;\n@@ -120,6 +122,7 @@ error: this boolean expression can be simplified\n    |\n LL |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: try\n    |\n LL |     let _ = c != d || a != b;"}, {"sha": "16bc5a1c1b02d07b1716f212ed2ae00d1b148a95", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -25,6 +25,7 @@ LL | |             println!(\"Hello world!\");\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n@@ -41,6 +42,7 @@ LL | |             println!(\"Hello world!\");\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n@@ -57,6 +59,7 @@ LL | |             println!(\"Hello world!\");\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n@@ -73,6 +76,7 @@ LL | |             println!(\"Hello world!\");\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n@@ -89,6 +93,7 @@ LL | |             println!(\"world!\")\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if 42 == 1337 && 'a' != 'A' {\n@@ -106,6 +111,7 @@ LL | |             println!(\"world!\")\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if y == \"world\" {\n@@ -123,6 +129,7 @@ LL | |             println!(\"world!\")\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if let Some(42) = Some(42) {\n@@ -142,6 +149,7 @@ LL | |         }\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if y == \"world\" {\n@@ -164,6 +172,7 @@ LL | |         }\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if let Some(42) = Some(42) {\n@@ -186,6 +195,7 @@ LL | |         }\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if let Some(42) = Some(42) {\n@@ -208,6 +218,7 @@ LL | |         }\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if x == \"hello\" {\n@@ -230,6 +241,7 @@ LL | |         }\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     } else if let Some(42) = Some(42) {\n@@ -249,6 +261,7 @@ LL | |             println!(\"Hello world!\");\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if x == \"hello\" && y == \"world\" { // Collapsible"}, {"sha": "b8aafe966784663ae87609c6883b4d9935b02395", "filename": "tests/ui/dbg_macro.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fdbg_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fdbg_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdbg_macro.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |     if dbg!(n <= 1) {\n    |        ^^^^^^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |     if n <= 1 {\n@@ -25,6 +26,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |         dbg!(1)\n    |         ^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |         1\n@@ -35,6 +37,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |         dbg!(n * factorial(n - 1))\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |         n * factorial(n - 1)\n@@ -45,6 +48,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |     dbg!(42);\n    |     ^^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |     42;\n@@ -55,6 +59,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |     dbg!(dbg!(dbg!(42)));\n    |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |     dbg!(dbg!(42));\n@@ -65,6 +70,7 @@ error: `dbg!` macro is intended as a debugging tool\n    |\n LL |     foo(3) + dbg!(factorial(4));\n    |              ^^^^^^^^^^^^^^^^^^\n+   |\n help: ensure to avoid having uses of it in version control\n    |\n LL |     foo(3) + factorial(4);"}, {"sha": "241758c542cfbe82aea3c2c00ad1e567fab11d68", "filename": "tests/ui/for_kv_map.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Ffor_kv_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Ffor_kv_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_kv_map.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: you seem to want to iterate on a map's values\n    |\n LL |     for (_, v) in &*m {\n    |                   ^^^\n+   |\n help: use the corresponding method\n    |\n LL |     for v in (*m).values() {\n@@ -25,6 +26,7 @@ error: you seem to want to iterate on a map's values\n    |\n LL |     for (_, v) in &mut m {\n    |                   ^^^^^^\n+   |\n help: use the corresponding method\n    |\n LL |     for v in m.values_mut() {\n@@ -35,6 +37,7 @@ error: you seem to want to iterate on a map's values\n    |\n LL |     for (_, v) in &mut *m {\n    |                   ^^^^^^^\n+   |\n help: use the corresponding method\n    |\n LL |     for v in (*m).values_mut() {\n@@ -45,6 +48,7 @@ error: you seem to want to iterate on a map's keys\n    |\n LL |     for (k, _value) in rm {\n    |                        ^^\n+   |\n help: use the corresponding method\n    |\n LL |     for k in rm.keys() {"}, {"sha": "7454f40f3e2d1461486ce6538f60e3948d42a2b1", "filename": "tests/ui/for_loop_fixable.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Ffor_loop_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Ffor_loop_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop_fixable.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: this range is empty so this for loop will never run\n    |\n LL |     for i in 10..=0 {\n    |              ^^^^^^\n+   |\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..=10).rev() {\n@@ -25,6 +26,7 @@ error: this range is empty so this for loop will never run\n    |\n LL |     for i in MAX_LEN..0 {\n    |              ^^^^^^^^^^\n+   |\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (0..MAX_LEN).rev() {\n@@ -35,6 +37,7 @@ error: this range is empty so this for loop will never run\n    |\n LL |     for i in 10..5 + 4 {\n    |              ^^^^^^^^^\n+   |\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in (5 + 4..10).rev() {\n@@ -45,6 +48,7 @@ error: this range is empty so this for loop will never run\n    |\n LL |     for i in (5 + 2)..(3 - 1) {\n    |              ^^^^^^^^^^^^^^^^\n+   |\n help: consider using the following if you are attempting to iterate over this range in reverse\n    |\n LL |     for i in ((3 - 1)..(5 + 2)).rev() {"}, {"sha": "b73d9716adc7c704c3c6da88fe4618d47b02870c", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -19,6 +19,7 @@ error: impl for `HashMap` should be generalized over different hashers\n    |\n LL | impl<K: Hash + Eq, V> Foo<i8> for (HashMap<K, V>,) {\n    |                                    ^^^^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n@@ -33,6 +34,7 @@ error: impl for `HashMap` should be generalized over different hashers\n    |\n LL | impl Foo<i16> for HashMap<String, String> {\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n@@ -47,6 +49,7 @@ error: impl for `HashSet` should be generalized over different hashers\n    |\n LL | impl<T: Hash + Eq> Foo<i8> for HashSet<T> {\n    |                                ^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n@@ -61,6 +64,7 @@ error: impl for `HashSet` should be generalized over different hashers\n    |\n LL | impl Foo<i16> for HashSet<String> {\n    |                   ^^^^^^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n@@ -75,6 +79,7 @@ error: parameter of type `HashMap` should be generalized over different hashers\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                       ^^^^^^^^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n@@ -85,6 +90,7 @@ error: parameter of type `HashSet` should be generalized over different hashers\n    |\n LL | pub fn foo(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>) {}\n    |                                                     ^^^^^^^^^^^^\n+   |\n help: consider adding a type parameter\n    |\n LL | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}\n@@ -98,6 +104,7 @@ LL |         impl<K: Hash + Eq, V> Foo<u8> for HashMap<K, V> {\n ...\n LL | gen!(impl);\n    | ----------- in this macro invocation\n+   |\n help: consider adding a type parameter\n    |\n LL |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n@@ -115,6 +122,7 @@ LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>)\n ...\n LL | gen!(fn bar);\n    | ------------- in this macro invocation\n+   |\n help: consider adding a type parameter\n    |\n LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {}\n@@ -128,6 +136,7 @@ LL |         pub fn $name(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32>)\n ...\n LL | gen!(fn bar);\n    | ------------- in this macro invocation\n+   |\n help: consider adding a type parameter\n    |\n LL |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {}"}, {"sha": "d3c41ef3c6f30fe1ed35f625305fae2805704a7c", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -27,6 +27,7 @@ error: large size difference between variants\n    |\n LL |     ContainingLargeEnum(LargeEnum),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n LL |     ContainingLargeEnum(Box<LargeEnum>),\n@@ -61,6 +62,7 @@ error: large size difference between variants\n    |\n LL |     StructLikeLarge2 { x: [i32; 8000] },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: consider boxing the large fields to reduce the total size of the enum\n    |\n LL |     StructLikeLarge2 { x: Box<[i32; 8000]> },"}, {"sha": "11e9681f3ec034b44189173d1e61adc3daf9edec", "filename": "tests/ui/let_return.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flet_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flet_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_return.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -20,6 +20,7 @@ LL |         let x = 5;\n    |         ---------- unnecessary let binding\n LL |         x\n    |         ^\n+   |\n help: return the expression directly\n    |\n LL |         "}, {"sha": "eb8482087bcc87711d4c67fbfc0a60115754a04a", "filename": "tests/ui/let_unit.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flet_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Flet_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_unit.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -23,6 +23,7 @@ LL | |         .map(|_| ())\n LL | |         .next()\n LL | |         .unwrap();\n    | |__________________^\n+   |\n help: omit the `let` binding\n    |\n LL |     v"}, {"sha": "9a6388394cd0f5abcda3c894e5ad7a9ee9dadf64", "filename": "tests/ui/literals.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -39,6 +39,7 @@ error: this is a decimal constant\n    |\n LL |     let fail8 = 0123;\n    |                 ^^^^\n+   |\n help: if you mean to use a decimal constant, remove the `0` to avoid confusion\n    |\n LL |     let fail8 = 123;"}, {"sha": "3dbb2155d4de7e52effaabfcebbeaa5929806f0a", "filename": "tests/ui/manual_memcpy.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmanual_memcpy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmanual_memcpy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -35,6 +35,7 @@ error: it looks like you're manually copying between slices\n    |\n LL |     for i in 10..256 {\n    |              ^^^^^^^\n+   |\n help: try replacing the loop by\n    |\n LL |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])"}, {"sha": "2751048f87269c5e9c587ce2de2f9cfc98893391", "filename": "tests/ui/match_bool.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmatch_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmatch_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_bool.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -36,6 +36,7 @@ LL | |             println!(\"Noooo!\");\n LL | |         },\n LL | |     };\n    | |_____^\n+   |\n help: consider using an if/else expression\n    |\n LL |     if !test {\n@@ -53,6 +54,7 @@ LL | |         },\n LL | |         _ => (),\n LL | |     };\n    | |_____^\n+   |\n help: consider using an if/else expression\n    |\n LL |     if !test {\n@@ -70,6 +72,7 @@ LL | |         },\n LL | |         _ => (),\n LL | |     };\n    | |_____^\n+   |\n help: consider using an if/else expression\n    |\n LL |     if !(test && test) {\n@@ -96,6 +99,7 @@ LL | |         },\n LL | |         },\n LL | |     };\n    | |_____^\n+   |\n help: consider using an if/else expression\n    |\n LL |     if test {"}, {"sha": "492f4b9ba206c15b39ef5a49827c1133a39543fb", "filename": "tests/ui/match_ref_pats.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmatch_ref_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fmatch_ref_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -23,6 +23,7 @@ LL | |         &(v, 1) => println!(\"{}\", v),\n LL | |         _ => println!(\"none\"),\n LL | |     }\n    | |_____^\n+   |\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n LL |     match *tup {\n@@ -37,6 +38,7 @@ LL | |         &Some(v) => println!(\"{:?}\", v),\n LL | |         &None => println!(\"none\"),\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     match w {\n@@ -51,6 +53,7 @@ LL | /     if let &None = a {\n LL | |         println!(\"none\");\n LL | |     }\n    | |_____^\n+   |\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n LL |     if let None = *a {\n@@ -63,6 +66,7 @@ LL | /     if let &None = &b {\n LL | |         println!(\"none\");\n LL | |     }\n    | |_____^\n+   |\n help: try\n    |\n LL |     if let None = b {\n@@ -76,6 +80,7 @@ LL | |             &Foo::A => println!(\"A\"),\n LL | |             _ => println!(\"Wild\"),\n LL | |         }\n    | |_________^\n+   |\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n LL |         match *foo_variant!(0) {"}, {"sha": "6cf517c22efb2e4f8fdaebc3430484a7a7be8367", "filename": "tests/ui/needless_pass_by_value.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fneedless_pass_by_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fneedless_pass_by_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_pass_by_value.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -59,6 +59,7 @@ error: this argument is passed by value, but not consumed in the function body\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                             ^^^^^^\n+   |\n help: consider changing the type to\n    |\n LL | fn issue_2114(s: String, t: &str, u: Vec<i32>, v: Vec<i32>) {\n@@ -79,6 +80,7 @@ error: this argument is passed by value, but not consumed in the function body\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: Vec<i32>) {\n    |                                                     ^^^^^^^^\n+   |\n help: consider changing the type to\n    |\n LL | fn issue_2114(s: String, t: String, u: Vec<i32>, v: &[i32]) {"}, {"sha": "f145c11dbc28b49cca87f97b8ffcbd26c1b55460", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: the loop variable `i` is only used to index `ms`.\n    |\n LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &mut ms {\n@@ -25,6 +26,7 @@ error: the loop variable `i` is only used to index `ms`.\n    |\n LL |     for i in 0..ms.len() {\n    |              ^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &mut ms {\n@@ -35,6 +37,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in x..x + 4 {\n    |              ^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter_mut().skip(x).take(4) {\n@@ -45,6 +48,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in x..=x + 4 {\n    |              ^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter_mut().skip(x).take(4 + 1) {\n@@ -55,6 +59,7 @@ error: the loop variable `i` is only used to index `arr`.\n    |\n LL |     for i in 0..3 {\n    |              ^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &arr {\n@@ -65,6 +70,7 @@ error: the loop variable `i` is only used to index `arr`.\n    |\n LL |     for i in 0..2 {\n    |              ^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in arr.iter().take(2) {\n@@ -75,6 +81,7 @@ error: the loop variable `i` is only used to index `arr`.\n    |\n LL |     for i in 1..3 {\n    |              ^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in arr.iter().skip(1) {\n@@ -85,6 +92,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &vec {\n@@ -95,6 +103,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &vec {\n@@ -105,6 +114,7 @@ error: the loop variable `j` is only used to index `STATIC`.\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &STATIC {\n@@ -115,6 +125,7 @@ error: the loop variable `j` is only used to index `CONST`.\n    |\n LL |     for j in 0..4 {\n    |              ^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in &CONST {\n@@ -125,6 +136,7 @@ error: the loop variable `i` is used to index `vec`\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate() {\n@@ -135,6 +147,7 @@ error: the loop variable `i` is only used to index `vec2`.\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec2.iter().take(vec.len()) {\n@@ -145,6 +158,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().skip(5) {\n@@ -155,6 +169,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 0..MAX_LEN {\n    |              ^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(MAX_LEN) {\n@@ -165,6 +180,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 0..=MAX_LEN {\n    |              ^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(MAX_LEN + 1) {\n@@ -175,6 +191,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(10).skip(5) {\n@@ -185,6 +202,7 @@ error: the loop variable `i` is only used to index `vec`.\n    |\n LL |     for i in 5..=10 {\n    |              ^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for <item> in vec.iter().take(10 + 1).skip(5) {\n@@ -195,6 +213,7 @@ error: the loop variable `i` is used to index `vec`\n    |\n LL |     for i in 5..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n@@ -205,6 +224,7 @@ error: the loop variable `i` is used to index `vec`\n    |\n LL |     for i in 5..10 {\n    |              ^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n@@ -215,6 +235,7 @@ error: the loop variable `i` is used to index `vec`\n    |\n LL |     for i in 0..vec.len() {\n    |              ^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n    |\n LL |     for (i, <item>) in vec.iter_mut().enumerate() {"}, {"sha": "5e485d40663f3e9ffb3540ec912a470ed2cffa3f", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -19,6 +19,7 @@ LL | /     pub fn new() -> Self {\n LL | |         Bar\n LL | |     }\n    | |_____^\n+   |\n help: try this\n    |\n LL | #[derive(Default)]\n@@ -31,6 +32,7 @@ LL | /     pub fn new() -> LtKo<'c> {\n LL | |         unimplemented!()\n LL | |     }\n    | |_____^\n+   |\n help: try this\n    |\n LL | impl Default for LtKo<'c> {"}, {"sha": "857b33a4291d51fde3d6b73ea9edf27aad629b9c", "filename": "tests/ui/option_map_or_none.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Foption_map_or_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Foption_map_or_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_or_none.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -14,6 +14,7 @@ LL |       let _ = opt.map_or(None, |x| {\n LL | |                         Some(x + 1)\n LL | |                        });\n    | |_________________________^\n+   |\n help: try using and_then instead\n    |\n LL |     let _ = opt.and_then(|x| {"}, {"sha": "c9e37eab6e1bee9bd430293e45d127c3c8c39062", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: using `print!()` with a format string that ends in a single newline\n    |\n LL |     print!(\"Hello {}/n\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `println!` instead\n    |\n LL |     println!(\"Hello {}\", \"world\");\n@@ -25,6 +26,7 @@ error: using `print!()` with a format string that ends in a single newline\n    |\n LL |     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `println!` instead\n    |\n LL |     println!(\"Hello {} {}\", \"world\", \"#2\");\n@@ -35,6 +37,7 @@ error: using `print!()` with a format string that ends in a single newline\n    |\n LL |     print!(\"{}/n\", 1265);\n    |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `println!` instead\n    |\n LL |     println!(\"{}\", 1265);\n@@ -45,6 +48,7 @@ error: using `print!()` with a format string that ends in a single newline\n    |\n LL |     print!(\"//n\"); // should fail\n    |     ^^^^^^^^^^^^^^\n+   |\n help: use `println!` instead\n    |\n LL |     println!(\"/\"); // should fail\n@@ -58,6 +62,7 @@ LL | |         \"\n LL | | \"\n LL | |     );\n    | |_____^\n+   |\n help: use `println!` instead\n    |\n LL |     println!(\n@@ -72,6 +77,7 @@ LL | |         r\"\n LL | | \"\n LL | |     );\n    | |_____^\n+   |\n help: use `println!` instead\n    |\n LL |     println!("}, {"sha": "314f23497f9716647785e95e7fcae266156a57c6", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -23,6 +23,7 @@ error: writing `&Vec<_>` instead of `&[_]` involves one more reference and canno\n    |\n LL | fn cloned(x: &Vec<u8>) -> Vec<u8> {\n    |              ^^^^^^^^\n+   |\n help: change this to\n    |\n LL | fn cloned(x: &[u8]) -> Vec<u8> {\n@@ -41,6 +42,7 @@ error: writing `&String` instead of `&str` involves a new object where a slice w\n    |\n LL | fn str_cloned(x: &String) -> String {\n    |                  ^^^^^^^\n+   |\n help: change this to\n    |\n LL | fn str_cloned(x: &str) -> String {\n@@ -63,6 +65,7 @@ error: writing `&String` instead of `&str` involves a new object where a slice w\n    |\n LL | fn false_positive_capacity(x: &Vec<u8>, y: &String) {\n    |                                            ^^^^^^^\n+   |\n help: change this to\n    |\n LL | fn false_positive_capacity(x: &Vec<u8>, y: &str) {"}, {"sha": "21ccc684ea9de9e30944abba009a9ce6958f4e5a", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -18,6 +18,7 @@ LL |       foo({\n LL | |         1;\n LL | |     });\n    | |_____^\n+   |\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n LL |     foo(());\n@@ -28,6 +29,7 @@ error: passing a unit value to a function\n    |\n LL |     foo(foo(1));\n    |         ^^^^^^\n+   |\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n LL |     foo(());\n@@ -42,6 +44,7 @@ LL | |         foo(1);\n LL | |         foo(2);\n LL | |     });\n    | |_____^\n+   |\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n LL |     foo(());\n@@ -52,6 +55,7 @@ error: passing a unit value to a function\n    |\n LL |     foo3({}, 2, 2);\n    |          ^^\n+   |\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n LL |     foo3((), 2, 2);\n@@ -65,6 +69,7 @@ LL |       b.bar({\n LL | |         1;\n LL | |     });\n    | |_____^\n+   |\n help: if you intended to pass a unit value, use a unit literal instead\n    |\n LL |     b.bar(());"}, {"sha": "4d95bfeb17f405cfb84cdd61db3d47ea537fc5f6", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66df92aeba64547f3e9600635a30df34b12a11d8/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=66df92aeba64547f3e9600635a30df34b12a11d8", "patch": "@@ -15,6 +15,7 @@ error: using `write!()` with a format string that ends in a single newline\n    |\n LL |     write!(&mut v, \"Hello {}/n\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!(&mut v, \"Hello {}\", \"world\");\n@@ -25,6 +26,7 @@ error: using `write!()` with a format string that ends in a single newline\n    |\n LL |     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!(&mut v, \"Hello {} {}\", \"world\", \"#2\");\n@@ -35,6 +37,7 @@ error: using `write!()` with a format string that ends in a single newline\n    |\n LL |     write!(&mut v, \"{}/n\", 1265);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!(&mut v, \"{}\", 1265);\n@@ -45,6 +48,7 @@ error: using `write!()` with a format string that ends in a single newline\n    |\n LL |     write!(&mut v, \"//n\"); // should fail\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!(&mut v, \"/\"); // should fail\n@@ -59,6 +63,7 @@ LL | |         \"\n LL | | \"\n LL | |     );\n    | |_____^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!(\n@@ -75,6 +80,7 @@ LL | |         r\"\n LL | | \"\n LL | |     );\n    | |_____^\n+   |\n help: use `writeln!()` instead\n    |\n LL |     writeln!("}]}