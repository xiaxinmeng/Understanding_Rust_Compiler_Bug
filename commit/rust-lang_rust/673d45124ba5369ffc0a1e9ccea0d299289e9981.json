{"sha": "673d45124ba5369ffc0a1e9ccea0d299289e9981", "node_id": "C_kwDOAAsO6NoAKDY3M2Q0NTEyNGJhNTM2OWZmYzBhMWU5Y2NlYTBkMjk5Mjg5ZTk5ODE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-05-15T06:10:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-15T06:10:42Z"}, "message": "Rollup merge of #97032 - est31:unused_macro_rules, r=petrochenkov\n\nAllow the unused_macro_rules lint for now\n\nIt was newly added by #96150 with warn by default, which is great as it gave exposure to the community, and their feedback gave me ideas for improvements.\n\nAllowing the lint is good for two reasons:\n\n* It makes the transition easier as e.g. allow directives won't fire the unknown lint warning once it is turned to warn by default in the future. The [commit that allowed the lint in fuchsia](https://fuchsia.googlesource.com/fuchsia/+/9d8f96517c3963de2f0e25598fd36061914524cd%5E%21/) had to allow unknown lints for example.\nThis is especially important compared to other lints in the unused group,\nbecause the _ prefix trick doesn't exist for macro rules, allowing is the\nonly option (either of unused_macro_rules, or of the entire unused group,\nbut that is not as informative to readers). Allowing the lint also makes it\npossible to work on possible heuristics for disabling the macro in specific\ncases.\n* It gives time for implementing heuristics for when to suppress the lint, e.g.\nwhen `compile_error!` is invoked by that arm (so it's only there to yield an error).\n\nSee: https://github.com/rust-lang/rust/pull/96150#issuecomment-1126599107\n\nI would also like this to be backported to the 1.62 beta branch (cc #97016).", "tree": {"sha": "baa3680b46de03049e9728c1978c81fbf21ac377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baa3680b46de03049e9728c1978c81fbf21ac377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/673d45124ba5369ffc0a1e9ccea0d299289e9981", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJigJljCRBK7hj4Ov3rIwAAndIIADxLoav8fTpQ2kl0wf7qz42J\nCbUMMemA2KOjM3U3lM5rG8L7mxCW3JW6RYwrBI7sJG8qDYJHkBHOtLF/3A5UIIm0\n29btTq1L7TDNJ1WQ/cttHwwNIp5r/zPezFVEkwkJqdTt6wqQ0GHc8NzQEAHvI4iO\nrJLGFnGcPJo8LicQPYdSisvn9rXGimJfXd0y5Sm2tzLTPkRrq9+xt+9ZlFJBnsBJ\nboZTp6yntMho72I9/P/7eRuZdYms+oWyiZ5qk4BKUL9+FuFME5ILYPLkMp9zAqTB\nEQ3vzI+D/dNvbhmGvLeQDRwuAwdZ+5LzOdvMq4stzjgYU95tCRG4xOTSrKfK7l4=\n=JM1R\n-----END PGP SIGNATURE-----\n", "payload": "tree baa3680b46de03049e9728c1978c81fbf21ac377\nparent 7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21\nparent 015e2ae76984144a7ece6d8169ff42b6dc7d6870\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1652595042 +0200\ncommitter GitHub <noreply@github.com> 1652595042 +0200\n\nRollup merge of #97032 - est31:unused_macro_rules, r=petrochenkov\n\nAllow the unused_macro_rules lint for now\n\nIt was newly added by #96150 with warn by default, which is great as it gave exposure to the community, and their feedback gave me ideas for improvements.\n\nAllowing the lint is good for two reasons:\n\n* It makes the transition easier as e.g. allow directives won't fire the unknown lint warning once it is turned to warn by default in the future. The [commit that allowed the lint in fuchsia](https://fuchsia.googlesource.com/fuchsia/+/9d8f96517c3963de2f0e25598fd36061914524cd%5E%21/) had to allow unknown lints for example.\nThis is especially important compared to other lints in the unused group,\nbecause the _ prefix trick doesn't exist for macro rules, allowing is the\nonly option (either of unused_macro_rules, or of the entire unused group,\nbut that is not as informative to readers). Allowing the lint also makes it\npossible to work on possible heuristics for disabling the macro in specific\ncases.\n* It gives time for implementing heuristics for when to suppress the lint, e.g.\nwhen `compile_error!` is invoked by that arm (so it's only there to yield an error).\n\nSee: https://github.com/rust-lang/rust/pull/96150#issuecomment-1126599107\n\nI would also like this to be backported to the 1.62 beta branch (cc #97016).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/673d45124ba5369ffc0a1e9ccea0d299289e9981", "html_url": "https://github.com/rust-lang/rust/commit/673d45124ba5369ffc0a1e9ccea0d299289e9981", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/673d45124ba5369ffc0a1e9ccea0d299289e9981/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21", "html_url": "https://github.com/rust-lang/rust/commit/7bf43c3931cbdde2f2d5bfe3456abde92ea1aa21"}, {"sha": "015e2ae76984144a7ece6d8169ff42b6dc7d6870", "url": "https://api.github.com/repos/rust-lang/rust/commits/015e2ae76984144a7ece6d8169ff42b6dc7d6870", "html_url": "https://github.com/rust-lang/rust/commit/015e2ae76984144a7ece6d8169ff42b6dc7d6870"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f942970278399b17e89ba17b641280ba43509aad", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/673d45124ba5369ffc0a1e9ccea0d299289e9981/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/673d45124ba5369ffc0a1e9ccea0d299289e9981/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=673d45124ba5369ffc0a1e9ccea0d299289e9981", "patch": "@@ -790,6 +790,7 @@ declare_lint! {\n     /// ### Example\n     ///\n     /// ```rust\n+    /// #[warn(unused_macro_rules)]\n     /// macro_rules! unused_empty {\n     ///     (hello) => { println!(\"Hello, world!\") }; // This rule is unused\n     ///     () => { println!(\"empty\") }; // This rule is used\n@@ -814,7 +815,7 @@ declare_lint! {\n     ///\n     /// [`macro_export` attribute]: https://doc.rust-lang.org/reference/macros-by-example.html#path-based-scope\n     pub UNUSED_MACRO_RULES,\n-    Warn,\n+    Allow,\n     \"detects macro rules that were not used\"\n }\n "}]}