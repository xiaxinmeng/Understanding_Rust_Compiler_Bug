{"sha": "8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "node_id": "C_kwDOAAsO6NoAKDhiYTBjZDZjOWVhNDRkMTdmMzhjNTg2MmUzYzk1MmE1NGRiMmEyNTY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-07T21:10:38Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-27T18:22:44Z"}, "message": "Make tests unit.", "tree": {"sha": "24c95c16ae67babb70a309bef8b5b513d7252c72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c95c16ae67babb70a309bef8b5b513d7252c72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "html_url": "https://github.com/rust-lang/rust/commit/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7919ef0ec5776c72dace7fec1c68551a617505ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/7919ef0ec5776c72dace7fec1c68551a617505ad", "html_url": "https://github.com/rust-lang/rust/commit/7919ef0ec5776c72dace7fec1c68551a617505ad"}], "stats": {"total": 129, "additions": 37, "deletions": 92}, "files": [{"sha": "924a267f3d8ffe5089f03bb6940d144a50d4defb", "filename": "tests/mir-opt/const_prop/ref_deref.main.ConstProp.diff", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.ConstProp.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -13,14 +13,13 @@\n           StorageLive(_2);                 // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n           _4 = const _;                    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n                                            // mir::Constant\n-                                           // + span: $DIR/ref_deref.rs:6:6: 6:10\n+                                           // + span: $DIR/ref_deref.rs:5:6: 5:10\n                                            // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }\n-          _2 = _4;                         // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n--         _1 = (*_2);                      // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n-+         _1 = const 4_i32;                // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n+          _2 = &(*_4);                     // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n+          _1 = (*_2);                      // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n           StorageDead(_2);                 // scope 0 at $DIR/ref_deref.rs:+1:10: +1:11\n           StorageDead(_1);                 // scope 0 at $DIR/ref_deref.rs:+1:10: +1:11\n-          nop;                             // scope 0 at $DIR/ref_deref.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/ref_deref.rs:+0:11: +2:2\n           return;                          // scope 0 at $DIR/ref_deref.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "015ec4d078c10cc1d9da5bc035cf4134d127af0f", "filename": "tests/mir-opt/const_prop/ref_deref.main.PromoteTemps.diff", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7919ef0ec5776c72dace7fec1c68551a617505ad/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/7919ef0ec5776c72dace7fec1c68551a617505ad/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.main.PromoteTemps.diff?ref=7919ef0ec5776c72dace7fec1c68551a617505ad", "patch": "@@ -1,30 +0,0 @@\n-- // MIR for `main` before PromoteTemps\n-+ // MIR for `main` after PromoteTemps\n-  \n-  fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/ref_deref.rs:+0:11: +0:11\n-      let _1: i32;                         // in scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n-      let mut _2: &i32;                    // in scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-      let _3: i32;                         // in scope 0 at $DIR/ref_deref.rs:+1:8: +1:9\n-+     let mut _4: &i32;                    // in scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-  \n-      bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n-          StorageLive(_2);                 // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n--         StorageLive(_3);                 // scope 0 at $DIR/ref_deref.rs:+1:8: +1:9\n--         _3 = const 4_i32;                // scope 0 at $DIR/ref_deref.rs:+1:8: +1:9\n--         _2 = &_3;                        // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-+         _4 = const _;                    // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/ref_deref.rs:6:6: 6:10\n-+                                          // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }\n-+         _2 = &(*_4);                     // scope 0 at $DIR/ref_deref.rs:+1:6: +1:10\n-          _1 = (*_2);                      // scope 0 at $DIR/ref_deref.rs:+1:5: +1:10\n--         StorageDead(_3);                 // scope 0 at $DIR/ref_deref.rs:+1:10: +1:11\n-          StorageDead(_2);                 // scope 0 at $DIR/ref_deref.rs:+1:10: +1:11\n-          StorageDead(_1);                 // scope 0 at $DIR/ref_deref.rs:+1:10: +1:11\n-          _0 = const ();                   // scope 0 at $DIR/ref_deref.rs:+0:11: +2:2\n-          return;                          // scope 0 at $DIR/ref_deref.rs:+2:2: +2:2\n-      }\n-  }\n-  "}, {"sha": "76e56916af09aa32606552cdfc5b83c92c81f84f", "filename": "tests/mir-opt/const_prop/ref_deref.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref.rs?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -1,5 +1,4 @@\n-// compile-flags: -Zmir-enable-passes=-SimplifyLocals-before-const-prop\n-// EMIT_MIR ref_deref.main.PromoteTemps.diff\n+// unit-test: ConstProp\n // EMIT_MIR ref_deref.main.ConstProp.diff\n \n fn main() {"}, {"sha": "59095b4483713cc3fd806fadb83baae288c0b3a6", "filename": "tests/mir-opt/const_prop/ref_deref_project.main.ConstProp.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.ConstProp.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -13,13 +13,13 @@\n           StorageLive(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n           _4 = const _;                    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n                                            // mir::Constant\n-                                           // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n+                                           // + span: $DIR/ref_deref_project.rs:5:6: 5:17\n                                            // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }\n           _2 = &((*_4).1: i32);            // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n           _1 = (*_2);                      // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17\n           StorageDead(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:17: +1:18\n           StorageDead(_1);                 // scope 0 at $DIR/ref_deref_project.rs:+1:17: +1:18\n-          nop;                             // scope 0 at $DIR/ref_deref_project.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/ref_deref_project.rs:+0:11: +2:2\n           return;                          // scope 0 at $DIR/ref_deref_project.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "cd0616e65baf847974e037b19474cf8f47439f98", "filename": "tests/mir-opt/const_prop/ref_deref_project.main.PromoteTemps.diff", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7919ef0ec5776c72dace7fec1c68551a617505ad/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "raw_url": "https://github.com/rust-lang/rust/raw/7919ef0ec5776c72dace7fec1c68551a617505ad/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.main.PromoteTemps.diff?ref=7919ef0ec5776c72dace7fec1c68551a617505ad", "patch": "@@ -1,30 +0,0 @@\n-- // MIR for `main` before PromoteTemps\n-+ // MIR for `main` after PromoteTemps\n-  \n-  fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/ref_deref_project.rs:+0:11: +0:11\n-      let _1: i32;                         // in scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17\n-      let mut _2: &i32;                    // in scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-      let _3: (i32, i32);                  // in scope 0 at $DIR/ref_deref_project.rs:+1:8: +1:14\n-+     let mut _4: &(i32, i32);             // in scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-  \n-      bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17\n-          StorageLive(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n--         StorageLive(_3);                 // scope 0 at $DIR/ref_deref_project.rs:+1:8: +1:14\n--         _3 = (const 4_i32, const 5_i32); // scope 0 at $DIR/ref_deref_project.rs:+1:8: +1:14\n--         _2 = &(_3.1: i32);               // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-+         _4 = const _;                    // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-+                                          // mir::Constant\n-+                                          // + span: $DIR/ref_deref_project.rs:6:6: 6:17\n-+                                          // + literal: Const { ty: &(i32, i32), val: Unevaluated(main, [], Some(promoted[0])) }\n-+         _2 = &((*_4).1: i32);            // scope 0 at $DIR/ref_deref_project.rs:+1:6: +1:17\n-          _1 = (*_2);                      // scope 0 at $DIR/ref_deref_project.rs:+1:5: +1:17\n--         StorageDead(_3);                 // scope 0 at $DIR/ref_deref_project.rs:+1:17: +1:18\n-          StorageDead(_2);                 // scope 0 at $DIR/ref_deref_project.rs:+1:17: +1:18\n-          StorageDead(_1);                 // scope 0 at $DIR/ref_deref_project.rs:+1:17: +1:18\n-          _0 = const ();                   // scope 0 at $DIR/ref_deref_project.rs:+0:11: +2:2\n-          return;                          // scope 0 at $DIR/ref_deref_project.rs:+2:2: +2:2\n-      }\n-  }\n-  "}, {"sha": "04fc7f8daa1240b9eb5ca2bc02797ca1154fcbaf", "filename": "tests/mir-opt/const_prop/ref_deref_project.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fref_deref_project.rs?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -1,5 +1,4 @@\n-// compile-flags: -Zmir-enable-passes=-SimplifyLocals-before-const-prop\n-// EMIT_MIR ref_deref_project.main.PromoteTemps.diff\n+// unit-test: ConstProp\n // EMIT_MIR ref_deref_project.main.ConstProp.diff\n \n fn main() {"}, {"sha": "b99b83b0cba8540144dc76fd70b47477e79fa405", "filename": "tests/mir-opt/const_prop/slice_len.main.ConstProp.32bit.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.32bit.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -20,7 +20,7 @@\n           StorageLive(_4);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _9 = const _;                    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n                                            // mir::Constant\n-                                           // + span: $DIR/slice_len.rs:6:6: 6:19\n+                                           // + span: $DIR/slice_len.rs:7:6: 7:19\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }\n           _4 = _9;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _3 = _4;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n@@ -33,7 +33,7 @@\n -         assert(move _8, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _8 = const true;                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n-+         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 3_usize, const 1_usize) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n++         assert(const true, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       }\n   \n       bb1: {\n@@ -43,7 +43,7 @@\n           StorageDead(_4);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n           StorageDead(_2);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n           StorageDead(_1);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n-          nop;                             // scope 0 at $DIR/slice_len.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/slice_len.rs:+0:11: +2:2\n           return;                          // scope 0 at $DIR/slice_len.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "b99b83b0cba8540144dc76fd70b47477e79fa405", "filename": "tests/mir-opt/const_prop/slice_len.main.ConstProp.64bit.diff", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.main.ConstProp.64bit.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -20,7 +20,7 @@\n           StorageLive(_4);                 // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _9 = const _;                    // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n                                            // mir::Constant\n-                                           // + span: $DIR/slice_len.rs:6:6: 6:19\n+                                           // + span: $DIR/slice_len.rs:7:6: 7:19\n                                            // + literal: Const { ty: &[u32; 3], val: Unevaluated(main, [], Some(promoted[0])) }\n           _4 = _9;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n           _3 = _4;                         // scope 0 at $DIR/slice_len.rs:+1:6: +1:19\n@@ -33,7 +33,7 @@\n -         assert(move _8, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _7 = const 3_usize;              // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n +         _8 = const true;                 // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n-+         assert(const true, \"index out of bounds: the length is {} but the index is {}\", const 3_usize, const 1_usize) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n++         assert(const true, \"index out of bounds: the length is {} but the index is {}\", move _7, _6) -> bb1; // scope 0 at $DIR/slice_len.rs:+1:5: +1:33\n       }\n   \n       bb1: {\n@@ -43,7 +43,7 @@\n           StorageDead(_4);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n           StorageDead(_2);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n           StorageDead(_1);                 // scope 0 at $DIR/slice_len.rs:+1:33: +1:34\n-          nop;                             // scope 0 at $DIR/slice_len.rs:+0:11: +2:2\n+          _0 = const ();                   // scope 0 at $DIR/slice_len.rs:+0:11: +2:2\n           return;                          // scope 0 at $DIR/slice_len.rs:+2:2: +2:2\n       }\n   }"}, {"sha": "8183def0c63dbda29ffd08a43dd70fa1fb8cfcfb", "filename": "tests/mir-opt/const_prop/slice_len.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop%2Fslice_len.rs?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -1,4 +1,5 @@\n-// compile-flags: -Zmir-enable-passes=-SimplifyLocals-before-const-prop\n+// unit-test: ConstProp\n+// compile-flags: -Zmir-enable-passes=+InstCombine\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n \n // EMIT_MIR slice_len.main.ConstProp.diff"}, {"sha": "b6b542fb79436d3ce1b3b8dacdb4202e57e0aa01", "filename": "tests/mir-opt/const_prop_miscompile.bar.ConstProp.diff", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.bar.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.bar.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop_miscompile.bar.ConstProp.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -4,32 +4,37 @@\n   fn bar() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/const_prop_miscompile.rs:+0:10: +0:10\n       let mut _1: (i32,);                  // in scope 0 at $DIR/const_prop_miscompile.rs:+1:9: +1:14\n-      let mut _2: *mut i32;                // in scope 0 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n-      let mut _4: i32;                     // in scope 0 at $DIR/const_prop_miscompile.rs:+5:13: +5:20\n+      let _2: ();                          // in scope 0 at $DIR/const_prop_miscompile.rs:+2:5: +4:6\n+      let mut _3: *mut i32;                // in scope 0 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n+      let mut _5: i32;                     // in scope 0 at $DIR/const_prop_miscompile.rs:+5:13: +5:20\n       scope 1 {\n           debug v => _1;                   // in scope 1 at $DIR/const_prop_miscompile.rs:+1:9: +1:14\n-          let _3: bool;                    // in scope 1 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n+          let _4: bool;                    // in scope 1 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n           scope 2 {\n           }\n           scope 3 {\n-              debug y => _3;               // in scope 3 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n+              debug y => _4;               // in scope 3 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n           }\n       }\n   \n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/const_prop_miscompile.rs:+1:9: +1:14\n           Deinit(_1);                      // scope 0 at $DIR/const_prop_miscompile.rs:+1:17: +1:21\n           (_1.0: i32) = const 1_i32;       // scope 0 at $DIR/const_prop_miscompile.rs:+1:17: +1:21\n-          StorageLive(_2);                 // scope 2 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n-          _2 = &raw mut (_1.0: i32);       // scope 2 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n-          (*_2) = const 5_i32;             // scope 2 at $DIR/const_prop_miscompile.rs:+3:9: +3:26\n-          StorageDead(_2);                 // scope 2 at $DIR/const_prop_miscompile.rs:+3:26: +3:27\n-          StorageLive(_3);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n-          StorageLive(_4);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:13: +5:20\n-          _4 = (_1.0: i32);                // scope 1 at $DIR/const_prop_miscompile.rs:+5:15: +5:18\n-          _3 = Eq(move _4, const 5_i32);   // scope 1 at $DIR/const_prop_miscompile.rs:+5:13: +5:25\n-          StorageDead(_4);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:24: +5:25\n-          StorageDead(_3);                 // scope 1 at $DIR/const_prop_miscompile.rs:+6:1: +6:2\n+          StorageLive(_2);                 // scope 1 at $DIR/const_prop_miscompile.rs:+2:5: +4:6\n+          StorageLive(_3);                 // scope 2 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n+          _3 = &raw mut (_1.0: i32);       // scope 2 at $DIR/const_prop_miscompile.rs:+3:10: +3:22\n+          (*_3) = const 5_i32;             // scope 2 at $DIR/const_prop_miscompile.rs:+3:9: +3:26\n+          StorageDead(_3);                 // scope 2 at $DIR/const_prop_miscompile.rs:+3:26: +3:27\n+          _2 = const ();                   // scope 2 at $DIR/const_prop_miscompile.rs:+2:5: +4:6\n+          StorageDead(_2);                 // scope 1 at $DIR/const_prop_miscompile.rs:+4:5: +4:6\n+          StorageLive(_4);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:9: +5:10\n+          StorageLive(_5);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:13: +5:20\n+          _5 = (_1.0: i32);                // scope 1 at $DIR/const_prop_miscompile.rs:+5:15: +5:18\n+          _4 = Eq(move _5, const 5_i32);   // scope 1 at $DIR/const_prop_miscompile.rs:+5:13: +5:25\n+          StorageDead(_5);                 // scope 1 at $DIR/const_prop_miscompile.rs:+5:24: +5:25\n+          _0 = const ();                   // scope 0 at $DIR/const_prop_miscompile.rs:+0:10: +6:2\n+          StorageDead(_4);                 // scope 1 at $DIR/const_prop_miscompile.rs:+6:1: +6:2\n           StorageDead(_1);                 // scope 0 at $DIR/const_prop_miscompile.rs:+6:1: +6:2\n           return;                          // scope 0 at $DIR/const_prop_miscompile.rs:+6:2: +6:2\n       }"}, {"sha": "e43735fd9e145057c6ea8395c378fc5aeb5e2657", "filename": "tests/mir-opt/const_prop_miscompile.foo.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.foo.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.foo.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop_miscompile.foo.ConstProp.diff?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -27,6 +27,7 @@\n           _4 = (_1.0: i32);                // scope 1 at $DIR/const_prop_miscompile.rs:+3:15: +3:18\n           _3 = Eq(move _4, const 5_i32);   // scope 1 at $DIR/const_prop_miscompile.rs:+3:13: +3:25\n           StorageDead(_4);                 // scope 1 at $DIR/const_prop_miscompile.rs:+3:24: +3:25\n+          _0 = const ();                   // scope 0 at $DIR/const_prop_miscompile.rs:+0:10: +4:2\n           StorageDead(_3);                 // scope 1 at $DIR/const_prop_miscompile.rs:+4:1: +4:2\n           StorageDead(_1);                 // scope 0 at $DIR/const_prop_miscompile.rs:+4:1: +4:2\n           return;                          // scope 0 at $DIR/const_prop_miscompile.rs:+4:2: +4:2"}, {"sha": "dbbe5ee08408f4b9c7d4ea1a783bf4cac5566da6", "filename": "tests/mir-opt/const_prop_miscompile.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ba0cd6c9ea44d17f38c5862e3c952a54db2a256/tests%2Fmir-opt%2Fconst_prop_miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fconst_prop_miscompile.rs?ref=8ba0cd6c9ea44d17f38c5862e3c952a54db2a256", "patch": "@@ -1,3 +1,4 @@\n+// unit-test: ConstProp\n #![feature(raw_ref_op)]\n \n // EMIT_MIR const_prop_miscompile.foo.ConstProp.diff"}]}