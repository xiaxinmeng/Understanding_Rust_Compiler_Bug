{"sha": "8375a22b16ae6d746ccfd1f725a26562f55a82ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNzVhMjJiMTZhZTZkNzQ2Y2NmZDFmNzI1YTI2NTYyZjU1YTgyYmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-30T18:37:01Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-30T18:37:01Z"}, "message": "native: Always open a file with Open/Write modes\n\nPreviously, windows was using the CREATE_NEW flag which fails if the file\npreviously existed, which differed from the unix semantics. This alters the\nopening to use the OPEN_ALWAYS flag to mirror the unix semantics.\n\nCloses #13861", "tree": {"sha": "6feb1937e652a1c0a0b58529be35c06c976a22b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6feb1937e652a1c0a0b58529be35c06c976a22b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8375a22b16ae6d746ccfd1f725a26562f55a82ba", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8375a22b16ae6d746ccfd1f725a26562f55a82ba", "html_url": "https://github.com/rust-lang/rust/commit/8375a22b16ae6d746ccfd1f725a26562f55a82ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8375a22b16ae6d746ccfd1f725a26562f55a82ba/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e9f3ea42361a5a938a4f22beff28bb2ade48af4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e9f3ea42361a5a938a4f22beff28bb2ade48af4", "html_url": "https://github.com/rust-lang/rust/commit/7e9f3ea42361a5a938a4f22beff28bb2ade48af4"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "f85c6b7380b0113f117b8f52436ba28f29fb6f1e", "filename": "src/libnative/io/file_win32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8375a22b16ae6d746ccfd1f725a26562f55a82ba/src%2Flibnative%2Fio%2Ffile_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8375a22b16ae6d746ccfd1f725a26562f55a82ba/src%2Flibnative%2Fio%2Ffile_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile_win32.rs?ref=8375a22b16ae6d746ccfd1f725a26562f55a82ba", "patch": "@@ -274,7 +274,7 @@ pub fn open(path: &CString, fm: io::FileMode, fa: io::FileAccess)\n         (io::Truncate, io::Read) => libc::TRUNCATE_EXISTING,\n         (io::Truncate, _) => libc::CREATE_ALWAYS,\n         (io::Open, io::Read) => libc::OPEN_EXISTING,\n-        (io::Open, _) => libc::CREATE_NEW,\n+        (io::Open, _) => libc::OPEN_ALWAYS,\n         (io::Append, io::Read) => {\n             dwDesiredAccess |= libc::FILE_APPEND_DATA;\n             libc::OPEN_EXISTING"}, {"sha": "cd304250b19281a8ea4e917317d1870ebc8ddd33", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8375a22b16ae6d746ccfd1f725a26562f55a82ba/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8375a22b16ae6d746ccfd1f725a26562f55a82ba/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=8375a22b16ae6d746ccfd1f725a26562f55a82ba", "patch": "@@ -1255,11 +1255,31 @@ mod test {\n         match File::open_mode(&tmpdir.join(\"a\"), io::Open, io::Read) {\n             Ok(..) => fail!(), Err(..) => {}\n         }\n+\n+        // Perform each one twice to make sure that it succeeds the second time\n+        // (where the file exists)\n+        check!(File::open_mode(&tmpdir.join(\"b\"), io::Open, io::Write));\n+        assert!(tmpdir.join(\"b\").exists());\n         check!(File::open_mode(&tmpdir.join(\"b\"), io::Open, io::Write));\n+\n         check!(File::open_mode(&tmpdir.join(\"c\"), io::Open, io::ReadWrite));\n+        assert!(tmpdir.join(\"c\").exists());\n+        check!(File::open_mode(&tmpdir.join(\"c\"), io::Open, io::ReadWrite));\n+\n+        check!(File::open_mode(&tmpdir.join(\"d\"), io::Append, io::Write));\n+        assert!(tmpdir.join(\"d\").exists());\n         check!(File::open_mode(&tmpdir.join(\"d\"), io::Append, io::Write));\n+\n+        check!(File::open_mode(&tmpdir.join(\"e\"), io::Append, io::ReadWrite));\n+        assert!(tmpdir.join(\"e\").exists());\n         check!(File::open_mode(&tmpdir.join(\"e\"), io::Append, io::ReadWrite));\n+\n         check!(File::open_mode(&tmpdir.join(\"f\"), io::Truncate, io::Write));\n+        assert!(tmpdir.join(\"f\").exists());\n+        check!(File::open_mode(&tmpdir.join(\"f\"), io::Truncate, io::Write));\n+\n+        check!(File::open_mode(&tmpdir.join(\"g\"), io::Truncate, io::ReadWrite));\n+        assert!(tmpdir.join(\"g\").exists());\n         check!(File::open_mode(&tmpdir.join(\"g\"), io::Truncate, io::ReadWrite));\n \n         check!(File::create(&tmpdir.join(\"h\")).write(\"foo\".as_bytes()));"}]}