{"sha": "94c45ef1089bfd9fa4304cf67dedce4788883051", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YzQ1ZWYxMDg5YmZkOWZhNDMwNGNmNjdkZWRjZTQ3ODg4ODMwNTE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-02T20:09:23Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-02T20:09:23Z"}, "message": "Update generator tests", "tree": {"sha": "e45502f1d7e576e7400b3ba571ee2fa260eb3c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e45502f1d7e576e7400b3ba571ee2fa260eb3c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94c45ef1089bfd9fa4304cf67dedce4788883051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94c45ef1089bfd9fa4304cf67dedce4788883051", "html_url": "https://github.com/rust-lang/rust/commit/94c45ef1089bfd9fa4304cf67dedce4788883051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94c45ef1089bfd9fa4304cf67dedce4788883051/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3127419e2b2cb4ad2e44a06d30af6a015daf4557", "url": "https://api.github.com/repos/rust-lang/rust/commits/3127419e2b2cb4ad2e44a06d30af6a015daf4557", "html_url": "https://github.com/rust-lang/rust/commit/3127419e2b2cb4ad2e44a06d30af6a015daf4557"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "e410180bfff6fa837640c4411e42b69a5aa0b170", "filename": "src/test/codegen/async-fn-debug-msvc.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/94c45ef1089bfd9fa4304cf67dedce4788883051/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94c45ef1089bfd9fa4304cf67dedce4788883051/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs?ref=94c45ef1089bfd9fa4304cf67dedce4788883051", "patch": "@@ -17,33 +17,33 @@ async fn async_fn_test() {\n // FIXME: No way to reliably check the filename.\n \n // CHECK-DAG:  [[ASYNC_FN:!.*]] = !DINamespace(name: \"async_fn_test\"\n-// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator-0\", scope: [[ASYNC_FN]]\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator-0\"\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant0\", scope: [[GEN]],\n // For brevity, we only check the struct name and members of the last variant.\n // CHECK-SAME: file: [[FILE:![0-9]*]], line: 11,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant1\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 15,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant2\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 15,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant3\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 12,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant4\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 14,\n // CHECK-SAME: baseType: [[VARIANT:![0-9]*]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[ASYNC_FN]],\n+// CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"RUST$ENUM$DISR\", scope: [[S1]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant$\", scope: [[S1]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[S1]]\n // CHECK-NOT:  flags: DIFlagArtificial"}, {"sha": "7edb07d224c3646865aaa169f27c6b11a0a06826", "filename": "src/test/codegen/generator-debug-msvc.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/94c45ef1089bfd9fa4304cf67dedce4788883051/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94c45ef1089bfd9fa4304cf67dedce4788883051/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs?ref=94c45ef1089bfd9fa4304cf67dedce4788883051", "patch": "@@ -21,33 +21,33 @@ fn generator_test() -> impl Generator<Yield = i32, Return = ()> {\n // FIXME: No way to reliably check the filename.\n \n // CHECK-DAG:  [[GEN_FN:!.*]] = !DINamespace(name: \"generator_test\"\n-// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator-0\", scope: [[GEN_FN]]\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK-DAG:  [[GEN:!.*]] = !DICompositeType(tag: DW_TAG_union_type, name: \"generator-0\"\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant0\", scope: [[GEN]],\n // For brevity, we only check the struct name and members of the last variant.\n // CHECK-SAME: file: [[FILE:![0-9]*]], line: 14,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant1\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 18,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant2\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 18,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant3\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 15,\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, scope: [[GEN]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant4\", scope: [[GEN]],\n // CHECK-SAME: file: [[FILE]], line: 17,\n // CHECK-SAME: baseType: [[VARIANT:![0-9]*]]\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN_FN]],\n+// CHECK:      [[S1:!.*]] = !DICompositeType(tag: DW_TAG_structure_type, name: \"Suspend1\", scope: [[GEN]],\n // CHECK-NOT:  flags: DIFlagArtificial\n // CHECK-SAME: )\n-// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"RUST$ENUM$DISR\", scope: [[S1]],\n+// CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"variant$\", scope: [[S1]],\n // CHECK-SAME: flags: DIFlagArtificial\n // CHECK:      {{!.*}} = !DIDerivedType(tag: DW_TAG_member, name: \"s\", scope: [[S1]]\n // CHECK-NOT:  flags: DIFlagArtificial"}]}