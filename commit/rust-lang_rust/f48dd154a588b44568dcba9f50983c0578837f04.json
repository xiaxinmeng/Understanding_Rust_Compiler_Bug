{"sha": "f48dd154a588b44568dcba9f50983c0578837f04", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0OGRkMTU0YTU4OGI0NDU2OGRjYmE5ZjUwOTgzYzA1Nzg4MzdmMDQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-05T18:15:07Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-05T18:15:07Z"}, "message": "Use more assoc. type aliases in the chalk interner\n\nMakes it sligthly easier to swap out these types", "tree": {"sha": "a51551137dbd8d81d49d2d2d085bfc5ef6664e49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a51551137dbd8d81d49d2d2d085bfc5ef6664e49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f48dd154a588b44568dcba9f50983c0578837f04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f48dd154a588b44568dcba9f50983c0578837f04", "html_url": "https://github.com/rust-lang/rust/commit/f48dd154a588b44568dcba9f50983c0578837f04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f48dd154a588b44568dcba9f50983c0578837f04/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c91b5376835ab54cd4bca02953625ef1f1fabeba", "url": "https://api.github.com/repos/rust-lang/rust/commits/c91b5376835ab54cd4bca02953625ef1f1fabeba", "html_url": "https://github.com/rust-lang/rust/commit/c91b5376835ab54cd4bca02953625ef1f1fabeba"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "bd9395b7ed125b1112db13f2eea8adda14769214", "filename": "crates/hir_ty/src/traits/chalk/interner.rs", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f48dd154a588b44568dcba9f50983c0578837f04/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f48dd154a588b44568dcba9f50983c0578837f04/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs?ref=f48dd154a588b44568dcba9f50983c0578837f04", "patch": "@@ -192,59 +192,58 @@ impl chalk_ir::interner::Interner for Interner {\n         tls::with_current_program(|prog| Some(prog?.debug_quantified_where_clauses(clauses, fmt)))\n     }\n \n-    fn intern_ty(&self, kind: chalk_ir::TyKind<Self>) -> Arc<chalk_ir::TyData<Self>> {\n+    fn intern_ty(&self, kind: chalk_ir::TyKind<Self>) -> Self::InternedType {\n         let flags = kind.compute_flags(self);\n         Arc::new(chalk_ir::TyData { kind, flags })\n     }\n \n-    fn ty_data<'a>(&self, ty: &'a Arc<chalk_ir::TyData<Self>>) -> &'a chalk_ir::TyData<Self> {\n+    fn ty_data<'a>(&self, ty: &'a Self::InternedType) -> &'a chalk_ir::TyData<Self> {\n         ty\n     }\n \n-    fn intern_lifetime(\n-        &self,\n-        lifetime: chalk_ir::LifetimeData<Self>,\n-    ) -> chalk_ir::LifetimeData<Self> {\n+    fn intern_lifetime(&self, lifetime: chalk_ir::LifetimeData<Self>) -> Self::InternedLifetime {\n         lifetime\n     }\n \n     fn lifetime_data<'a>(\n         &self,\n-        lifetime: &'a chalk_ir::LifetimeData<Self>,\n+        lifetime: &'a Self::InternedLifetime,\n     ) -> &'a chalk_ir::LifetimeData<Self> {\n         lifetime\n     }\n \n-    fn intern_const(&self, constant: chalk_ir::ConstData<Self>) -> Arc<chalk_ir::ConstData<Self>> {\n+    fn intern_const(&self, constant: chalk_ir::ConstData<Self>) -> Self::InternedConst {\n         Arc::new(constant)\n     }\n \n-    fn const_data<'a>(\n-        &self,\n-        constant: &'a Arc<chalk_ir::ConstData<Self>>,\n-    ) -> &'a chalk_ir::ConstData<Self> {\n+    fn const_data<'a>(&self, constant: &'a Self::InternedConst) -> &'a chalk_ir::ConstData<Self> {\n         constant\n     }\n \n-    fn const_eq(&self, _ty: &Arc<chalk_ir::TyData<Self>>, _c1: &(), _c2: &()) -> bool {\n+    fn const_eq(\n+        &self,\n+        _ty: &Self::InternedType,\n+        _c1: &Self::InternedConcreteConst,\n+        _c2: &Self::InternedConcreteConst,\n+    ) -> bool {\n         true\n     }\n \n     fn intern_generic_arg(\n         &self,\n         parameter: chalk_ir::GenericArgData<Self>,\n-    ) -> chalk_ir::GenericArgData<Self> {\n+    ) -> Self::InternedGenericArg {\n         parameter\n     }\n \n     fn generic_arg_data<'a>(\n         &self,\n-        parameter: &'a chalk_ir::GenericArgData<Self>,\n+        parameter: &'a Self::InternedGenericArg,\n     ) -> &'a chalk_ir::GenericArgData<Self> {\n         parameter\n     }\n \n-    fn intern_goal(&self, goal: GoalData<Self>) -> Arc<GoalData<Self>> {\n+    fn intern_goal(&self, goal: GoalData<Self>) -> Self::InternedGoal {\n         Arc::new(goal)\n     }\n \n@@ -255,11 +254,11 @@ impl chalk_ir::interner::Interner for Interner {\n         data.into_iter().collect()\n     }\n \n-    fn goal_data<'a>(&self, goal: &'a Arc<GoalData<Self>>) -> &'a GoalData<Self> {\n+    fn goal_data<'a>(&self, goal: &'a Self::InternedGoal) -> &'a GoalData<Self> {\n         goal\n     }\n \n-    fn goals_data<'a>(&self, goals: &'a Vec<Goal<Interner>>) -> &'a [Goal<Interner>] {\n+    fn goals_data<'a>(&self, goals: &'a Self::InternedGoals) -> &'a [Goal<Interner>] {\n         goals\n     }\n \n@@ -280,27 +279,27 @@ impl chalk_ir::interner::Interner for Interner {\n     fn intern_program_clause(\n         &self,\n         data: chalk_ir::ProgramClauseData<Self>,\n-    ) -> Arc<chalk_ir::ProgramClauseData<Self>> {\n+    ) -> Self::InternedProgramClause {\n         Arc::new(data)\n     }\n \n     fn program_clause_data<'a>(\n         &self,\n-        clause: &'a Arc<chalk_ir::ProgramClauseData<Self>>,\n+        clause: &'a Self::InternedProgramClause,\n     ) -> &'a chalk_ir::ProgramClauseData<Self> {\n         clause\n     }\n \n     fn intern_program_clauses<E>(\n         &self,\n         data: impl IntoIterator<Item = Result<chalk_ir::ProgramClause<Self>, E>>,\n-    ) -> Result<Arc<[chalk_ir::ProgramClause<Self>]>, E> {\n+    ) -> Result<Self::InternedProgramClauses, E> {\n         data.into_iter().collect()\n     }\n \n     fn program_clauses_data<'a>(\n         &self,\n-        clauses: &'a Arc<[chalk_ir::ProgramClause<Self>]>,\n+        clauses: &'a Self::InternedProgramClauses,\n     ) -> &'a [chalk_ir::ProgramClause<Self>] {\n         &clauses\n     }"}]}