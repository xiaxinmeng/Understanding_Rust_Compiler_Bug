{"sha": "b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MmY0M2YzOGU0ZjNjYTRlYmEyMjYxZTdkMmE5ZGNjODFmOWE3YmI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-09-04T15:39:48Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-09-04T15:45:36Z"}, "message": "Revert \"Remove all `union` stuffs\"\n\nThis reverts commit 888c34ad70e9f4491a404c4f0cb5a6241e4a12c1.\nThis rustups to rustc 1.13.0-nightly (70598e04f 2016-09-03).", "tree": {"sha": "2b8b244646db73e03f14e12628e06e205d12d270", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b8b244646db73e03f14e12628e06e205d12d270"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJXzEG3AAoJEF5CfHlMukXochkQAICiPhw77+3+/we/9CUDBs6V\nPda8D7q5LFnSK6RuZUWf+bXO9N7RNxIoFLtCqbLG7FFVsbHQW9q/qLeTYYq9Vlnf\nFKOXdGVY8tZSd8WfRht4FPA7vM5LcPh0qv+iqdlbp5y8UvbQG1zintoKBNFVNzzS\n0dX+zQbysbgU1ycl9bxbCdaDcgOaNbLF/7LKoMoRQHollaq3BuVe6pAr6srn+hwy\nTkaHW+ChlK9/hR4nhZELC2jlRmorc8KtxiiMD4X+qS83qcTZZqW9UWBF2wfu8nTu\nXC/1N5baOCVwqOxiZ2yCAuZAy9eCUV6joKVwgUN3VOx+G+BqADOQaHA96b4etOJn\nI3cW10OBPjjICYClRNyXO3xZS0vav2dxtTpYYYzVQz10gFTjGK5+OjdfLlBZdGXP\nlifFI+RuIv+gjuUeV85fI0ayiBIkZSccmRuCjOUao1+uVggjKG4Jmu2xN7AqqunS\n0m6Dz9PHEV0SF/ROItIc9t2uff1tC2xNhe6WtmsA+HdWvsb8asAIX4HRTb8MuUVs\nRcCRDOab3bL/MpX3vw+d2sQ7s/vCOkwD3isXVn15+ZscFQX5LzsKdmJChOtjfMGi\npemJVyzk93vvYCBfx2QeCQVhL7/WYYcS3ECy+j4dZoZaCsQ2aSJe/dhMzSiIAqsk\nF6VlKBVHC7FKC9VsglSK\n=TCCW\n-----END PGP SIGNATURE-----", "payload": "tree 2b8b244646db73e03f14e12628e06e205d12d270\nparent 322c1a07ef992f6a28456038286205c9e583e1e3\nauthor mcarton <cartonmartin+git@gmail.com> 1473003588 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1473003936 +0200\n\nRevert \"Remove all `union` stuffs\"\n\nThis reverts commit 888c34ad70e9f4491a404c4f0cb5a6241e4a12c1.\nThis rustups to rustc 1.13.0-nightly (70598e04f 2016-09-03).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "html_url": "https://github.com/rust-lang/rust/commit/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "322c1a07ef992f6a28456038286205c9e583e1e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/322c1a07ef992f6a28456038286205c9e583e1e3", "html_url": "https://github.com/rust-lang/rust/commit/322c1a07ef992f6a28456038286205c9e583e1e3"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "17d17a445afd53e09b4751e941a4678f054fe69c", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "patch": "@@ -141,7 +141,7 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, item: &Item, trait_ref\n         }\n \n         match ty.sty {\n-            //FIXME:unions: TypeVariants::TyUnion(..) => return,\n+            TypeVariants::TyUnion(..) => return,\n \n             // Some types are not Clone by default but could be cloned \u201cby hand\u201d if necessary\n             TypeVariants::TyEnum(def, substs) |"}, {"sha": "f574e6b7f388e42b0024bec131372d498a6735a1", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "patch": "@@ -215,8 +215,8 @@ fn has_is_empty(cx: &LateContext, expr: &Expr) -> bool {\n         }\n         ty::TyProjection(_) => ty.ty_to_def_id().map_or(false, |id| has_is_empty_impl(cx, &id)),\n         ty::TyEnum(id, _) |\n-        ty::TyStruct(id, _) /*FIXME:unions: |\n-        ty::TyUnion(id, _)*/ => has_is_empty_impl(cx, &id.did),\n+        ty::TyStruct(id, _) |\n+        ty::TyUnion(id, _) => has_is_empty_impl(cx, &id.did),\n         ty::TyArray(..) | ty::TyStr => true,\n         _ => false,\n     }"}, {"sha": "454f591756bb5d878f171636f7c9e229d6f5b7a3", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "patch": "@@ -123,7 +123,7 @@ impl LateLintPass for MissingDoc {\n             hir::ItemStruct(..) => \"a struct\",\n             hir::ItemTrait(..) => \"a trait\",\n             hir::ItemTy(..) => \"a type alias\",\n-            //FIXME:unions: hir::ItemUnion(..) => \"a union\",\n+            hir::ItemUnion(..) => \"a union\",\n             hir::ItemDefaultImpl(..) |\n             hir::ItemExternCrate(..) |\n             hir::ItemForeignMod(..) |"}, {"sha": "cf4467f30a59271abe40ea019cf4efdf1890db6f", "filename": "tests/compile-fail/derive.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/tests%2Fcompile-fail%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/tests%2Fcompile-fail%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fderive.rs?ref=b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "patch": "@@ -1,7 +1,7 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n-//FIXME:unions: #![feature(untagged_unions)]\n+#![feature(untagged_unions)]\n \n #![deny(warnings)]\n #![allow(dead_code)]\n@@ -47,7 +47,6 @@ impl Clone for Qux {\n     fn clone(&self) -> Self { Qux }\n }\n \n-/* FIXME:unions\n // looks like unions don't support deriving Clone for now\n #[derive(Copy)]\n union Union {\n@@ -61,7 +60,6 @@ impl Clone for Union {\n         }\n     }\n }\n-*/\n \n // See #666\n #[derive(Copy)]"}, {"sha": "6616f7bdc86c03a4ee2a0f95fdc2521056768068", "filename": "tests/compile-fail/no_effect.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/tests%2Fcompile-fail%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb/tests%2Fcompile-fail%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fno_effect.rs?ref=b82f43f38e4f3ca4eba2261e7d2a9dcc81f9a7bb", "patch": "@@ -4,7 +4,7 @@\n #![deny(no_effect, unnecessary_operation)]\n #![allow(dead_code)]\n #![allow(path_statements)]\n-//FIXME:unions #![feature(untagged_unions)]\n+#![feature(untagged_unions)]\n \n struct Unit;\n struct Tuple(i32);\n@@ -16,12 +16,10 @@ enum Enum {\n     Struct { field: i32 },\n }\n \n-/*FIXME:unions:\n union Union {\n     a: u8,\n     b: f64,\n }\n-*/\n \n fn get_number() -> i32 { 0 }\n fn get_struct() -> Struct { Struct { field: 0 } }\n@@ -38,7 +36,7 @@ fn main() {\n     Tuple(0); //~ERROR statement with no effect\n     Struct { field: 0 }; //~ERROR statement with no effect\n     Struct { ..s }; //~ERROR statement with no effect\n-    //FIXME:unions: Union { a: 0 }; // /**FIXME*~***/ ERROR statement with no effect\n+    Union { a: 0 }; //~ERROR statement with no effect\n     Enum::Tuple(0); //~ERROR statement with no effect\n     Enum::Struct { field: 0 }; //~ERROR statement with no effect\n     5 + 6; //~ERROR statement with no effect"}]}