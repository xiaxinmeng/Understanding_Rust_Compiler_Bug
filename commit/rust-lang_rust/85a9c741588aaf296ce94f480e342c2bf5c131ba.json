{"sha": "85a9c741588aaf296ce94f480e342c2bf5c131ba", "node_id": "C_kwDOAAsO6NoAKDg1YTljNzQxNTg4YWFmMjk2Y2U5NGY0ODBlMzQyYzJiZjVjMTMxYmE", "commit": {"author": {"name": "AngelicosPhosphoros", "email": "xuzin.timur@gmail.com", "date": "2022-07-17T20:33:29Z"}, "committer": {"name": "AngelicosPhosphoros", "email": "xuzin.timur@gmail.com", "date": "2022-07-17T20:34:42Z"}, "message": "Add tests that check `Vec::retain` predicate execution order.", "tree": {"sha": "58f776115b7f2f65cec332eeeaebb9ed238ce48b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58f776115b7f2f65cec332eeeaebb9ed238ce48b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85a9c741588aaf296ce94f480e342c2bf5c131ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85a9c741588aaf296ce94f480e342c2bf5c131ba", "html_url": "https://github.com/rust-lang/rust/commit/85a9c741588aaf296ce94f480e342c2bf5c131ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85a9c741588aaf296ce94f480e342c2bf5c131ba/comments", "author": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AngelicosPhosphoros", "id": 13154246, "node_id": "MDQ6VXNlcjEzMTU0MjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/13154246?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AngelicosPhosphoros", "html_url": "https://github.com/AngelicosPhosphoros", "followers_url": "https://api.github.com/users/AngelicosPhosphoros/followers", "following_url": "https://api.github.com/users/AngelicosPhosphoros/following{/other_user}", "gists_url": "https://api.github.com/users/AngelicosPhosphoros/gists{/gist_id}", "starred_url": "https://api.github.com/users/AngelicosPhosphoros/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AngelicosPhosphoros/subscriptions", "organizations_url": "https://api.github.com/users/AngelicosPhosphoros/orgs", "repos_url": "https://api.github.com/users/AngelicosPhosphoros/repos", "events_url": "https://api.github.com/users/AngelicosPhosphoros/events{/privacy}", "received_events_url": "https://api.github.com/users/AngelicosPhosphoros/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ada8c80bedb713b320af00aacab97d01d9cb5933", "url": "https://api.github.com/repos/rust-lang/rust/commits/ada8c80bedb713b320af00aacab97d01d9cb5933", "html_url": "https://github.com/rust-lang/rust/commit/ada8c80bedb713b320af00aacab97d01d9cb5933"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "b17f7a8eebc569b6fa3762fec48bb971664f44b3", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/85a9c741588aaf296ce94f480e342c2bf5c131ba/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85a9c741588aaf296ce94f480e342c2bf5c131ba/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=85a9c741588aaf296ce94f480e342c2bf5c131ba", "patch": "@@ -292,6 +292,22 @@ fn test_retain() {\n     assert_eq!(vec, [2, 4]);\n }\n \n+#[test]\n+fn test_retain_predicate_order() {\n+    for to_keep in [true, false] {\n+        let mut number_of_executions = 0;\n+        let mut vec = vec![1, 2, 3, 4];\n+        let mut next_expected = 1;\n+        vec.retain(|&x| {\n+            assert_eq!(next_expected, x);\n+            next_expected += 1;\n+            number_of_executions += 1;\n+            to_keep\n+        });\n+        assert_eq!(number_of_executions, 4);\n+    }\n+}\n+\n #[test]\n fn test_retain_pred_panic_with_hole() {\n     let v = (0..5).map(Rc::new).collect::<Vec<_>>();\n@@ -353,6 +369,35 @@ fn test_retain_drop_panic() {\n     assert!(v.iter().all(|r| Rc::strong_count(r) == 1));\n }\n \n+#[test]\n+fn test_retain_maybeuninits() {\n+    // This test aimed to be run under miri.\n+    use core::mem::MaybeUninit;\n+    let mut vec: Vec<_> = [1i32, 2, 3, 4].map(|v| MaybeUninit::new(vec![v])).into();\n+    vec.retain(|x| {\n+        // SAFETY: Retain must visit every element of Vec in original order and exactly once.\n+        // Our values is initialized at creation of Vec.\n+        let v = unsafe { x.assume_init_ref()[0] };\n+        if v & 1 == 0 {\n+            return true;\n+        }\n+        // SAFETY: Value is initialized.\n+        // Value wouldn't be dropped by `Vec::retain`\n+        // because `MaybeUninit` doesn't drop content.\n+        drop(unsafe { x.assume_init_read() });\n+        false\n+    });\n+    let vec: Vec<i32> = vec\n+        .into_iter()\n+        .map(|x| unsafe {\n+            // SAFETY: All values dropped in retain predicate must be removed by `Vec::retain`.\n+            // Remaining values are initialized.\n+            x.assume_init()[0]\n+        })\n+        .collect();\n+    assert_eq!(vec, [2, 4]);\n+}\n+\n #[test]\n fn test_dedup() {\n     fn case(a: Vec<i32>, b: Vec<i32>) {"}]}