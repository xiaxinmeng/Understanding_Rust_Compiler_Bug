{"sha": "a37a59f45e40434cff2b5a23402b0bec42cce848", "node_id": "C_kwDOAAsO6NoAKGEzN2E1OWY0NWU0MDQzNGNmZjJiNWEyMzQwMmIwYmVjNDJjY2U4NDg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-01T04:54:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-01T04:54:39Z"}, "message": "Rollup merge of #107499 - compiler-errors:deduce_sig_from_projection-generator-tweak, r=michaelwoerister\n\nDo not depend on Generator trait when deducing closure signature\n\n1. Do not depend on `Generator` trait when deducing closure signature.\n2. Compare the name of the `Generator::Return` associated item, rather than its order in the trait. Seems more stable this way.", "tree": {"sha": "fade9a83dabf61f89d0a034cbd918b7061ee1fbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fade9a83dabf61f89d0a034cbd918b7061ee1fbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a37a59f45e40434cff2b5a23402b0bec42cce848", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj2fCPCRBK7hj4Ov3rIwAAIvUIAKlI5vXHmTzNQ2UT/B7ZceGC\nnoKYeZuLR3mms4s1Mq2700gENWI7eCqCDI9oxMxy1G43kvUQ5WhpfpZxgqO3X/Uk\nc5rYucxi2AzXdX4Dol5Rmt8yb2B2bud50aKA0rssvq5e8NRHaWR6NHXshTkoTS4R\n2uXNNJ74/2oRd75vNna11phfTq7HFtr+T9W3Fxvrk04u8Cm9lfRMZIF7fykJslTU\nc9NU+6dRAkCpwYhXJTErhuV3m3sN7D7HQR2G2GRuwVumdTl/WW3eDKkYMoLUJZbd\njQbeH4bAwvYuJ7ArK5x8fJJK6IZ7vD6CPiZpDlr6m80+q4jsfm10Ps9MtT/95o8=\n=9iXN\n-----END PGP SIGNATURE-----\n", "payload": "tree fade9a83dabf61f89d0a034cbd918b7061ee1fbb\nparent 6390d25eab41efdbb96e6d42a67fd98d64469317\nparent 7892cc3c5f6532a18338ce989ea1639af5e417b4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675227279 +0100\ncommitter GitHub <noreply@github.com> 1675227279 +0100\n\nRollup merge of #107499 - compiler-errors:deduce_sig_from_projection-generator-tweak, r=michaelwoerister\n\nDo not depend on Generator trait when deducing closure signature\n\n1. Do not depend on `Generator` trait when deducing closure signature.\n2. Compare the name of the `Generator::Return` associated item, rather than its order in the trait. Seems more stable this way.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a37a59f45e40434cff2b5a23402b0bec42cce848", "html_url": "https://github.com/rust-lang/rust/commit/a37a59f45e40434cff2b5a23402b0bec42cce848", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a37a59f45e40434cff2b5a23402b0bec42cce848/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6390d25eab41efdbb96e6d42a67fd98d64469317", "url": "https://api.github.com/repos/rust-lang/rust/commits/6390d25eab41efdbb96e6d42a67fd98d64469317", "html_url": "https://github.com/rust-lang/rust/commit/6390d25eab41efdbb96e6d42a67fd98d64469317"}, {"sha": "7892cc3c5f6532a18338ce989ea1639af5e417b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7892cc3c5f6532a18338ce989ea1639af5e417b4", "html_url": "https://github.com/rust-lang/rust/commit/7892cc3c5f6532a18338ce989ea1639af5e417b4"}], "stats": {"total": 56, "additions": 10, "deletions": 46}, "files": [{"sha": "90c4e5b6540b0ed511edacc08a34ec8b8628f11b", "filename": "compiler/rustc_hir_typeck/src/closure.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a37a59f45e40434cff2b5a23402b0bec42cce848/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37a59f45e40434cff2b5a23402b0bec42cce848/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fclosure.rs?ref=a37a59f45e40434cff2b5a23402b0bec42cce848", "patch": "@@ -15,6 +15,7 @@ use rustc_middle::ty::visit::TypeVisitable;\n use rustc_middle::ty::{self, Ty, TypeSuperVisitable, TypeVisitor};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::source_map::Span;\n+use rustc_span::sym;\n use rustc_target::spec::abi::Abi;\n use rustc_trait_selection::traits;\n use rustc_trait_selection::traits::error_reporting::ArgKind;\n@@ -288,21 +289,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let trait_def_id = projection.trait_def_id(tcx);\n \n         let is_fn = tcx.is_fn_trait(trait_def_id);\n-        let gen_trait = tcx.require_lang_item(LangItem::Generator, cause_span);\n-        let is_gen = gen_trait == trait_def_id;\n+\n+        let gen_trait = tcx.lang_items().gen_trait();\n+        let is_gen = gen_trait == Some(trait_def_id);\n+\n         if !is_fn && !is_gen {\n             debug!(\"not fn or generator\");\n             return None;\n         }\n \n-        if is_gen {\n-            // Check that we deduce the signature from the `<_ as std::ops::Generator>::Return`\n-            // associated item and not yield.\n-            let return_assoc_item = self.tcx.associated_item_def_ids(gen_trait)[1];\n-            if return_assoc_item != projection.projection_def_id() {\n-                debug!(\"not return assoc item of generator\");\n-                return None;\n-            }\n+        // Check that we deduce the signature from the `<_ as std::ops::Generator>::Return`\n+        // associated item and not yield.\n+        if is_gen && self.tcx.associated_item(projection.projection_def_id()).name != sym::Return {\n+            debug!(\"not `Return` assoc item of `Generator`\");\n+            return None;\n         }\n \n         let input_tys = if is_fn {"}, {"sha": "9b9aff38e524ee3ba6ac99920b2bd04dd10105fa", "filename": "tests/ui/lang-items/lang-item-missing-generator.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6390d25eab41efdbb96e6d42a67fd98d64469317/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6390d25eab41efdbb96e6d42a67fd98d64469317/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Flang-item-missing-generator.rs?ref=6390d25eab41efdbb96e6d42a67fd98d64469317", "patch": "@@ -1,21 +0,0 @@\n-// error-pattern: requires `generator` lang_item\n-#![feature(no_core, lang_items, unboxed_closures, tuple_trait)]\n-#![no_core]\n-\n-#[lang = \"sized\"] pub trait Sized { }\n-\n-#[lang = \"tuple_trait\"] pub trait Tuple { }\n-\n-#[lang = \"fn_once\"]\n-#[rustc_paren_sugar]\n-pub trait FnOnce<Args: Tuple> {\n-    type Output;\n-\n-    extern \"rust-call\" fn call_once(self, args: Args) -> Self::Output;\n-}\n-\n-pub fn abc() -> impl FnOnce(f32) {\n-    |_| {}\n-}\n-\n-fn main() {}"}, {"sha": "a24fdb5fb6506402239d1a2feaad67d0f70ccf70", "filename": "tests/ui/lang-items/lang-item-missing-generator.stderr", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6390d25eab41efdbb96e6d42a67fd98d64469317/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6390d25eab41efdbb96e6d42a67fd98d64469317/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Flang-item-missing-generator.stderr?ref=6390d25eab41efdbb96e6d42a67fd98d64469317", "patch": "@@ -1,15 +0,0 @@\n-error[E0635]: unknown feature `tuple_trait`\n-  --> $DIR/lang-item-missing-generator.rs:2:51\n-   |\n-LL | #![feature(no_core, lang_items, unboxed_closures, tuple_trait)]\n-   |                                                   ^^^^^^^^^^^\n-\n-error: requires `generator` lang_item\n-  --> $DIR/lang-item-missing-generator.rs:17:17\n-   |\n-LL | pub fn abc() -> impl FnOnce(f32) {\n-   |                 ^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0635`."}]}