{"sha": "cf34f9f9a9503ac8852f6ac7426388734eb867b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzRmOWY5YTk1MDNhYzg4NTJmNmFjNzQyNjM4ODczNGViODY3YjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-26T01:18:52Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-26T01:20:33Z"}, "message": "librustc: Allow intra-crate start functions, for runtimeless operation.", "tree": {"sha": "2d61ae4c6be2c7f92394d6f18cf37ce5f296444b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d61ae4c6be2c7f92394d6f18cf37ce5f296444b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf34f9f9a9503ac8852f6ac7426388734eb867b5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf34f9f9a9503ac8852f6ac7426388734eb867b5", "html_url": "https://github.com/rust-lang/rust/commit/cf34f9f9a9503ac8852f6ac7426388734eb867b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf34f9f9a9503ac8852f6ac7426388734eb867b5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f8b51dc599cf1fb7f3f72252bef5e5b717f6bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f8b51dc599cf1fb7f3f72252bef5e5b717f6bd", "html_url": "https://github.com/rust-lang/rust/commit/e2f8b51dc599cf1fb7f3f72252bef5e5b717f6bd"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "283505cc3f731b7cc04951e850177f4f4ff3664c", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cf34f9f9a9503ac8852f6ac7426388734eb867b5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf34f9f9a9503ac8852f6ac7426388734eb867b5/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=cf34f9f9a9503ac8852f6ac7426388734eb867b5", "patch": "@@ -2329,9 +2329,7 @@ pub fn create_entry_wrapper(ccx: @CrateContext,\n             llvm::LLVMPositionBuilderAtEnd(bld, llbb);\n \n             let start_def_id = ccx.tcx.lang_items.start_fn();\n-            if start_def_id.crate == ast::local_crate {\n-                ccx.sess.bug(\"start lang item is never in the local crate\")\n-            } else {\n+            if start_def_id.crate != ast::local_crate {\n                 let start_fn_type = csearch::get_type(ccx.tcx,\n                                                       start_def_id).ty;\n                 trans_external_path(ccx, start_def_id, start_fn_type);\n@@ -2348,8 +2346,7 @@ pub fn create_entry_wrapper(ccx: @CrateContext,\n             let (start_fn, args) = if use_start_lang_item {\n                 let start_def_id = ccx.tcx.lang_items.start_fn();\n                 let start_fn = if start_def_id.crate == ast::local_crate {\n-                    ccx.sess.bug(\"start lang item is never in the local \\\n-                                  crate\")\n+                    get_item_val(ccx, start_def_id.node)\n                 } else {\n                     let start_fn_type = csearch::get_type(ccx.tcx,\n                             start_def_id).ty;"}]}