{"sha": "f854070bb820501d88d1b029660bfde663595530", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NTQwNzBiYjgyMDUwMWQ4OGQxYjAyOTY2MGJmZGU2NjM1OTU1MzA=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-03-20T22:46:40Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T01:26:37Z"}, "message": "Forward OsStr::clone_into to the inner Vec\n\nDespite OS differences, they're all just `Vec<u8>` inside, so we can\njust forward `clone_into` calls to that optimized implementation.", "tree": {"sha": "834344f0f196a8aa8733510370c63201fc895fac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/834344f0f196a8aa8733510370c63201fc895fac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f854070bb820501d88d1b029660bfde663595530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f854070bb820501d88d1b029660bfde663595530", "html_url": "https://github.com/rust-lang/rust/commit/f854070bb820501d88d1b029660bfde663595530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f854070bb820501d88d1b029660bfde663595530/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b80fa76ee0a160fffa04e337b8e33ef655a80649", "url": "https://api.github.com/repos/rust-lang/rust/commits/b80fa76ee0a160fffa04e337b8e33ef655a80649", "html_url": "https://github.com/rust-lang/rust/commit/b80fa76ee0a160fffa04e337b8e33ef655a80649"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "4fde33169733e60268a505f881a55962e596d3e2", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=f854070bb820501d88d1b029660bfde663595530", "patch": "@@ -1120,8 +1120,7 @@ impl ToOwned for OsStr {\n         self.to_os_string()\n     }\n     fn clone_into(&self, target: &mut OsString) {\n-        target.clear();\n-        target.push(self);\n+        self.inner.clone_into(&mut target.inner)\n     }\n }\n "}, {"sha": "2f5fc72ab44c2553ede8bffee6c8e506ee94957a", "filename": "src/libstd/sys/windows/os_str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fos_str.rs?ref=f854070bb820501d88d1b029660bfde663595530", "patch": "@@ -159,6 +159,10 @@ impl Slice {\n         Buf { inner: buf }\n     }\n \n+    pub fn clone_into(&self, buf: &mut Buf) {\n+        self.inner.clone_into(&mut buf.inner)\n+    }\n+\n     #[inline]\n     pub fn into_box(&self) -> Box<Slice> {\n         unsafe { mem::transmute(self.inner.into_box()) }"}, {"sha": "984c032e2a388829d5f0c0b13d6cd35c9d380a90", "filename": "src/libstd/sys_common/os_str_bytes.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fos_str_bytes.rs?ref=f854070bb820501d88d1b029660bfde663595530", "patch": "@@ -173,6 +173,10 @@ impl Slice {\n         Buf { inner: self.inner.to_vec() }\n     }\n \n+    pub fn clone_into(&self, buf: &mut Buf) {\n+        self.inner.clone_into(&mut buf.inner)\n+    }\n+\n     #[inline]\n     pub fn into_box(&self) -> Box<Slice> {\n         let boxed: Box<[u8]> = self.inner.into();"}, {"sha": "a98407da44850f50bc0de5e684177172a748baa5", "filename": "src/libstd/sys_common/wtf8.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f854070bb820501d88d1b029660bfde663595530/src%2Flibstd%2Fsys_common%2Fwtf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fwtf8.rs?ref=f854070bb820501d88d1b029660bfde663595530", "patch": "@@ -613,6 +613,10 @@ impl Wtf8 {\n         }\n     }\n \n+    pub fn clone_into(&self, buf: &mut Wtf8Buf) {\n+        self.bytes.clone_into(&mut buf.bytes)\n+    }\n+\n     /// Boxes this `Wtf8`.\n     #[inline]\n     pub fn into_box(&self) -> Box<Wtf8> {"}]}