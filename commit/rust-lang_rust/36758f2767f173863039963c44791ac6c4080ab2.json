{"sha": "36758f2767f173863039963c44791ac6c4080ab2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NzU4ZjI3NjdmMTczODYzMDM5OTYzYzQ0NzkxYWM2YzQwODBhYjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-21T12:56:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-21T12:56:27Z"}, "message": "Resimplify", "tree": {"sha": "5f90b034ccc56e423b69e3b166f9136c8c0a7b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f90b034ccc56e423b69e3b166f9136c8c0a7b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36758f2767f173863039963c44791ac6c4080ab2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36758f2767f173863039963c44791ac6c4080ab2", "html_url": "https://github.com/rust-lang/rust/commit/36758f2767f173863039963c44791ac6c4080ab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36758f2767f173863039963c44791ac6c4080ab2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c37d1c5b381365ce2d07dfe4b871e43995ccea2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c37d1c5b381365ce2d07dfe4b871e43995ccea2d", "html_url": "https://github.com/rust-lang/rust/commit/c37d1c5b381365ce2d07dfe4b871e43995ccea2d"}], "stats": {"total": 29, "additions": 6, "deletions": 23}, "files": [{"sha": "1bc9c17607694f7d4e67aa265c27b84bdd9234db", "filename": "crates/ra_hir_def/src/resolver.rs", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/36758f2767f173863039963c44791ac6c4080ab2/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36758f2767f173863039963c44791ac6c4080ab2/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fresolver.rs?ref=36758f2767f173863039963c44791ac6c4080ab2", "patch": "@@ -18,7 +18,7 @@ use crate::{\n     path::{Path, PathKind},\n     AdtId, AstItemDef, ConstId, ContainerId, CrateModuleId, DefWithBodyId, EnumId, EnumVariantId,\n     FunctionId, GenericDefId, ImplId, Lookup, ModuleDefId, ModuleId, StaticId, StructId, TraitId,\n-    TypeAliasId, UnionId,\n+    TypeAliasId,\n };\n \n #[derive(Debug, Clone, Default)]\n@@ -507,36 +507,19 @@ impl HasResolver for TraitId {\n     }\n }\n \n-impl HasResolver for AdtId {\n+impl<T: Into<AdtId>> HasResolver for T {\n     fn resolver(self, db: &impl DefDatabase2) -> Resolver {\n-        let module = match self {\n+        let def = self.into();\n+        let module = match def {\n             AdtId::StructId(it) => it.0.module(db),\n             AdtId::UnionId(it) => it.0.module(db),\n             AdtId::EnumId(it) => it.module(db),\n         };\n \n         module\n             .resolver(db)\n-            .push_generic_params_scope(db, self.into())\n-            .push_scope(Scope::AdtScope(self.into()))\n-    }\n-}\n-\n-impl HasResolver for StructId {\n-    fn resolver(self, db: &impl DefDatabase2) -> Resolver {\n-        AdtId::from(self).resolver(db)\n-    }\n-}\n-\n-impl HasResolver for UnionId {\n-    fn resolver(self, db: &impl DefDatabase2) -> Resolver {\n-        AdtId::from(self).resolver(db)\n-    }\n-}\n-\n-impl HasResolver for EnumId {\n-    fn resolver(self, db: &impl DefDatabase2) -> Resolver {\n-        AdtId::from(self).resolver(db)\n+            .push_generic_params_scope(db, def.into())\n+            .push_scope(Scope::AdtScope(def))\n     }\n }\n "}]}