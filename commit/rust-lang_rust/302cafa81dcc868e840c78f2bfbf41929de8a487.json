{"sha": "302cafa81dcc868e840c78f2bfbf41929de8a487", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMmNhZmE4MWRjYzg2OGU4NDBjNzhmMmJmYmY0MTkyOWRlOGE0ODc=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-02-04T14:46:10Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-02-04T14:46:10Z"}, "message": "Factor the parsing of \"type foo\" into parse_type_decl.", "tree": {"sha": "bfc383e61d2ec8ceb88cc105036409a6b4414813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc383e61d2ec8ceb88cc105036409a6b4414813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/302cafa81dcc868e840c78f2bfbf41929de8a487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/302cafa81dcc868e840c78f2bfbf41929de8a487", "html_url": "https://github.com/rust-lang/rust/commit/302cafa81dcc868e840c78f2bfbf41929de8a487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/302cafa81dcc868e840c78f2bfbf41929de8a487/comments", "author": null, "committer": null, "parents": [{"sha": "be97a77be81d286b1ae90c1050da1c7c0477ea3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/be97a77be81d286b1ae90c1050da1c7c0477ea3f", "html_url": "https://github.com/rust-lang/rust/commit/be97a77be81d286b1ae90c1050da1c7c0477ea3f"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "1d54a6e15ff830cb303a26d4e0831e2a8f207935", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/302cafa81dcc868e840c78f2bfbf41929de8a487/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/302cafa81dcc868e840c78f2bfbf41929de8a487/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=302cafa81dcc868e840c78f2bfbf41929de8a487", "patch": "@@ -1577,15 +1577,12 @@ impure fn parse_item_mod(parser p) -> @ast.item {\n     ret @spanned(lo, hi, item);\n }\n \n-\n impure fn parse_item_native_type(parser p) -> @ast.native_item {\n-    auto lo = p.get_span();\n-    expect(p, token.TYPE);\n-    auto id = parse_ident(p);\n+    auto t = parse_type_decl(p);\n     auto hi = p.get_span();\n     expect(p, token.SEMI);\n-    auto item = ast.native_item_ty(id, p.next_def_id());\n-    ret @spanned(lo, hi, item);\n+    auto item = ast.native_item_ty(t._1, p.next_def_id());\n+    ret @spanned(t._0, hi, item);\n }\n \n impure fn parse_native_item(parser p) -> @ast.native_item {\n@@ -1624,18 +1621,23 @@ impure fn parse_item_native_mod(parser p) -> @ast.item {\n     ret @spanned(lo, hi, item);\n }\n \n-impure fn parse_item_type(parser p) -> @ast.item {\n+impure fn parse_type_decl(parser p) -> tup(span, ast.ident) {\n     auto lo = p.get_span();\n     expect(p, token.TYPE);\n     auto id = parse_ident(p);\n+    ret tup(lo, id);\n+}\n+\n+impure fn parse_item_type(parser p) -> @ast.item {\n+    auto t = parse_type_decl(p);\n     auto tps = parse_ty_params(p);\n \n     expect(p, token.EQ);\n     auto ty = parse_ty(p);\n     auto hi = p.get_span();\n     expect(p, token.SEMI);\n-    auto item = ast.item_ty(id, ty, tps, p.next_def_id(), ast.ann_none);\n-    ret @spanned(lo, hi, item);\n+    auto item = ast.item_ty(t._1, ty, tps, p.next_def_id(), ast.ann_none);\n+    ret @spanned(t._0, hi, item);\n }\n \n impure fn parse_item_tag(parser p) -> @ast.item {"}]}