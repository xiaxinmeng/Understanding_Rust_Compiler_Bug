{"sha": "6530fd340119362e346f28c03e1efc772c18fbba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1MzBmZDM0MDExOTM2MmUzNDZmMjhjMDNlMWVmYzc3MmMxOGZiYmE=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakubw@jakubw.net", "date": "2012-12-15T23:12:26Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-12-18T00:50:40Z"}, "message": "When matching a slice, the tail should have the same lifetime", "tree": {"sha": "b655b5a6386ae2320e67d9ba080e23beabdd2db1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b655b5a6386ae2320e67d9ba080e23beabdd2db1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6530fd340119362e346f28c03e1efc772c18fbba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6530fd340119362e346f28c03e1efc772c18fbba", "html_url": "https://github.com/rust-lang/rust/commit/6530fd340119362e346f28c03e1efc772c18fbba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6530fd340119362e346f28c03e1efc772c18fbba/comments", "author": null, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fdfd3b1d60b49a9f3c248781c7a82c617c55769", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fdfd3b1d60b49a9f3c248781c7a82c617c55769", "html_url": "https://github.com/rust-lang/rust/commit/1fdfd3b1d60b49a9f3c248781c7a82c617c55769"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "95f44af48e171161239f68451fa2392e4ce6bcd9", "filename": "src/librustc/middle/typeck/check/alt.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6530fd340119362e346f28c03e1efc772c18fbba/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6530fd340119362e346f28c03e1efc772c18fbba/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Falt.rs?ref=6530fd340119362e346f28c03e1efc772c18fbba", "patch": "@@ -526,8 +526,26 @@ fn check_pat(pcx: pat_ctxt, pat: @ast::pat, expected: ty::t) {\n         }\n       }\n       ast::pat_vec(elts, tail) => {\n-        let elt_type = match structure_of(fcx, pat.span, expected) {\n-          ty::ty_evec(mt, _) | ty::ty_unboxed_vec(mt) => mt,\n+        let default_region_var =\n+            fcx.infcx().next_region_var_with_lb(\n+                pat.span, pcx.block_region\n+            );\n+\n+        let (elt_type, region_var) = match structure_of(\n+          fcx, pat.span, expected\n+        ) {\n+          ty::ty_evec(mt, vstore) => {\n+            let region_var = match vstore {\n+                ty::vstore_slice(r) => r,\n+                ty::vstore_box | ty::vstore_uniq | ty::vstore_fixed(_) => {\n+                    default_region_var\n+                }\n+            };\n+            (mt, region_var)\n+          }\n+          ty::ty_unboxed_vec(mt) => {\n+            (mt, default_region_var)\n+          },\n           _ => {\n             tcx.sess.span_fatal(\n                 pat.span,\n@@ -543,9 +561,6 @@ fn check_pat(pcx: pat_ctxt, pat: @ast::pat, expected: ty::t) {\n \n         match tail {\n             Some(tail_pat) => {\n-                let region_var = fcx.infcx().next_region_var_with_lb(\n-                    pat.span, pcx.block_region\n-                );\n                 let slice_ty = ty::mk_evec(tcx,\n                     {ty: elt_type.ty, mutbl: elt_type.mutbl},\n                     ty::vstore_slice(region_var)"}]}