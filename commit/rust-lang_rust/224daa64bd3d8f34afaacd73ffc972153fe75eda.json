{"sha": "224daa64bd3d8f34afaacd73ffc972153fe75eda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNGRhYTY0YmQzZDhmMzRhZmFhY2Q3M2ZmYzk3MjE1M2ZlNzVlZGE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T23:30:54Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:40:23Z"}, "message": "Remove `LocalInternedString::get`.\n\nIt has a single use, which is easily changed to something better.", "tree": {"sha": "99f01f3abe297935bbce98016b13e35599c1f2a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99f01f3abe297935bbce98016b13e35599c1f2a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224daa64bd3d8f34afaacd73ffc972153fe75eda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224daa64bd3d8f34afaacd73ffc972153fe75eda", "html_url": "https://github.com/rust-lang/rust/commit/224daa64bd3d8f34afaacd73ffc972153fe75eda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224daa64bd3d8f34afaacd73ffc972153fe75eda/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69ae8d9dfd9927d3db9d1d2676ca429c76007405", "url": "https://api.github.com/repos/rust-lang/rust/commits/69ae8d9dfd9927d3db9d1d2676ca429c76007405", "html_url": "https://github.com/rust-lang/rust/commit/69ae8d9dfd9927d3db9d1d2676ca429c76007405"}], "stats": {"total": 11, "additions": 1, "deletions": 10}, "files": [{"sha": "9f25e98052ec49934581b628002fc66d2a64fe17", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/224daa64bd3d8f34afaacd73ffc972153fe75eda/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224daa64bd3d8f34afaacd73ffc972153fe75eda/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=224daa64bd3d8f34afaacd73ffc972153fe75eda", "patch": "@@ -336,7 +336,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let local = &self.body.local_decls[local_index];\n         match local.name {\n             Some(name) if !local.from_compiler_desugaring() => {\n-                buf.push_str(name.as_str().get());\n+                buf.push_str(&name.as_str());\n                 Ok(())\n             }\n             _ => Err(()),"}, {"sha": "6c47ff823b96b014b5899776c7e33fe86bccec7d", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/224daa64bd3d8f34afaacd73ffc972153fe75eda/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224daa64bd3d8f34afaacd73ffc972153fe75eda/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=224daa64bd3d8f34afaacd73ffc972153fe75eda", "patch": "@@ -1168,15 +1168,6 @@ impl LocalInternedString {\n             string: unsafe { std::mem::transmute::<&str, &str>(string) }\n         }\n     }\n-\n-    #[inline]\n-    pub fn get(&self) -> &str {\n-        // This returns a valid string since we ensure that `self` outlives the interner\n-        // by creating the interner on a thread which outlives threads which can access it.\n-        // This type cannot move to a thread which outlives the interner since it does\n-        // not implement Send.\n-        self.string\n-    }\n }\n \n impl<U: ?Sized> std::convert::AsRef<U> for LocalInternedString"}]}