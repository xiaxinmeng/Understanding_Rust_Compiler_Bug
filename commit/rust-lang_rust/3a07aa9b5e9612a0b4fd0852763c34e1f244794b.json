{"sha": "3a07aa9b5e9612a0b4fd0852763c34e1f244794b", "node_id": "C_kwDOAAsO6NoAKDNhMDdhYTliNWU5NjEyYTBiNGZkMDg1Mjc2M2MzNGUxZjI0NDc5NGI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-12-07T00:50:29Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-12-07T00:50:29Z"}, "message": "Stop passing -export-dynamic to wasm-ld.\n\n-export-dynamic was a temporary hack added in the early days of the Rust\nwasm32 target when Rust didn't have a way to specify wasm exports in the\nsource code. This flag causes all global symbols, and some compiler-internal\nsymbols, to be exported, which is often more than needed.\n\nRust now does have a way to specify exports in the source code:\n`#[export_name = \"...\"]`.\n\nSo as the original comment suggests, -export-dynamic can now be removed,\nallowing users to have smaller binaries and better encapsulation in\ntheir wasm32-unknown-unknown modules.\n\nIt's possible that this change will require existing wasm32-unknown-unknown\nusers will to add explicit `#[export_name = \"...\"]` directives to\nexporrt the symbols that their programs depend on having exported.", "tree": {"sha": "a77f5d811b132534dcb6149bf238ec2cd9aeb926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a77f5d811b132534dcb6149bf238ec2cd9aeb926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a07aa9b5e9612a0b4fd0852763c34e1f244794b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a07aa9b5e9612a0b4fd0852763c34e1f244794b", "html_url": "https://github.com/rust-lang/rust/commit/3a07aa9b5e9612a0b4fd0852763c34e1f244794b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a07aa9b5e9612a0b4fd0852763c34e1f244794b/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53728ff751df4c271d4ea565b6871057a3504fc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/53728ff751df4c271d4ea565b6871057a3504fc5", "html_url": "https://github.com/rust-lang/rust/commit/53728ff751df4c271d4ea565b6871057a3504fc5"}], "stats": {"total": 7, "additions": 0, "deletions": 7}, "files": [{"sha": "06529c2e4039d768b198ecac3558adaf95cda447", "filename": "compiler/rustc_target/src/spec/wasm32_unknown_unknown.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3a07aa9b5e9612a0b4fd0852763c34e1f244794b/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_unknown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a07aa9b5e9612a0b4fd0852763c34e1f244794b/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_unknown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fwasm32_unknown_unknown.rs?ref=3a07aa9b5e9612a0b4fd0852763c34e1f244794b", "patch": "@@ -33,12 +33,6 @@ pub fn target() -> Target {\n             // For now this target just never has an entry symbol no matter the output\n             // type, so unconditionally pass this.\n             \"--no-entry\",\n-            // Rust really needs a way for users to specify exports and imports in\n-            // the source code. --export-dynamic isn't the right tool for this job,\n-            // however it does have the side effect of automatically exporting a lot\n-            // of symbols, which approximates what people want when compiling for\n-            // wasm32-unknown-unknown expect, so use it for now.\n-            \"--export-dynamic\",\n         ],\n     );\n     options.add_pre_link_args(\n@@ -48,7 +42,6 @@ pub fn target() -> Target {\n             // otherwise\n             \"--target=wasm32-unknown-unknown\",\n             \"-Wl,--no-entry\",\n-            \"-Wl,--export-dynamic\",\n         ],\n     );\n "}]}