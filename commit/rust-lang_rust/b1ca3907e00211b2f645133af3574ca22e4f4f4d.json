{"sha": "b1ca3907e00211b2f645133af3574ca22e4f4f4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxY2EzOTA3ZTAwMjExYjJmNjQ1MTMzYWYzNTc0Y2EyMmU0ZjRmNGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-30T03:57:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-30T03:57:53Z"}, "message": "Auto merge of #55221 - matthewjasper:fewer-duplicate-migrate-messages, r=pnkfelix\n\nDon't emit cannot move errors twice in migrate mode\n\nCloses #55154\ncc #53004\n\nr? @pnkfelix", "tree": {"sha": "effc17d4fac4d3896da1a0ec36d14c007b4e9d8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/effc17d4fac4d3896da1a0ec36d14c007b4e9d8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1ca3907e00211b2f645133af3574ca22e4f4f4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ca3907e00211b2f645133af3574ca22e4f4f4d", "html_url": "https://github.com/rust-lang/rust/commit/b1ca3907e00211b2f645133af3574ca22e4f4f4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1ca3907e00211b2f645133af3574ca22e4f4f4d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "html_url": "https://github.com/rust-lang/rust/commit/fb2446ad581c9d54b9b4dce1106ad9138438a2ef"}, {"sha": "42a541e0f152441204a00ae77dc23a82bf1fec02", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a541e0f152441204a00ae77dc23a82bf1fec02", "html_url": "https://github.com/rust-lang/rust/commit/42a541e0f152441204a00ae77dc23a82bf1fec02"}], "stats": {"total": 870, "additions": 48, "deletions": 822}, "files": [{"sha": "ddea7e522602492135d16e9f1001a4efec5c3e75", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -1831,7 +1831,10 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             | Write(wk @ WriteKind::StorageDeadOrDrop)\n             | Write(wk @ WriteKind::MutableBorrow(BorrowKind::Shared))\n             | Write(wk @ WriteKind::MutableBorrow(BorrowKind::Shallow)) => {\n-                if let Err(_place_err) = self.is_mutable(place, is_local_mutation_allowed) {\n+                if let (Err(_place_err), true) = (\n+                    self.is_mutable(place, is_local_mutation_allowed),\n+                    self.errors_buffer.is_empty()\n+                ) {\n                     if self.infcx.tcx.migrate_borrowck() {\n                         // rust-lang/rust#46908: In pure NLL mode this\n                         // code path should be unreachable (and thus\n@@ -1855,12 +1858,11 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                             location,\n                         );\n                     } else {\n-                        self.infcx.tcx.sess.delay_span_bug(\n+                        span_bug!(\n                             span,\n-                            &format!(\n-                                \"Accessing `{:?}` with the kind `{:?}` shouldn't be possible\",\n-                                place, kind\n-                            ),\n+                            \"Accessing `{:?}` with the kind `{:?}` shouldn't be possible\",\n+                            place,\n+                            kind,\n                         );\n                     }\n                 }"}, {"sha": "7afe2c67adc9b8e5bbf26dcc892535986ec1d6bc", "filename": "src/librustc_mir/borrow_check/mutability_errors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmutability_errors.rs?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -180,9 +180,9 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n             AccessKind::Move => {\n                 err = self.infcx.tcx\n                     .cannot_move_out_of(span, &(item_msg + &reason), Origin::Mir);\n-                act = \"move\";\n-                acted_on = \"moved\";\n-                span\n+                err.span_label(span, \"cannot move\");\n+                err.buffer(&mut self.errors_buffer);\n+                return;\n             }\n             AccessKind::Mutate => {\n                 err = self.infcx.tcx"}, {"sha": "b9de60f43f703f72c82096ffa92e995bea3c211d", "filename": "src/test/ui/access-mode-in-closures.nll.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -13,18 +13,6 @@ note: move occurs because `v` has type `std::vec::Vec<isize>`, which does not im\n LL |         match *s { sty(v) => v } //~ ERROR cannot move out\n    |                        ^\n \n-error[E0507]: cannot move out of `s.0` which is behind a `&` reference\n-  --> $DIR/access-mode-in-closures.rs:19:24\n-   |\n-LL |     let _foo = unpack(|s| {\n-   |                        - help: consider changing this to be a mutable reference: `&mut sty`\n-LL |         // Test that `s` is moved here.\n-LL |         match *s { sty(v) => v } //~ ERROR cannot move out\n-   |                        ^\n-   |                        |\n-   |                        cannot move out of `s.0` which is behind a `&` reference\n-   |                        `s` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "545a60f6770d9471d24ffd0230fc4c8c0de8c17a", "filename": "src/test/ui/binop/binop-move-semantics.nll.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fbinop%2Fbinop-move-semantics.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fbinop%2Fbinop-move-semantics.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fbinop-move-semantics.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -32,18 +32,6 @@ error[E0507]: cannot move out of borrowed content\n LL |     *n;  //~ ERROR: cannot move out of borrowed content\n    |     ^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of `*n` which is behind a `&` reference\n-  --> $DIR/binop-move-semantics.rs:42:5\n-   |\n-LL |     let n = &y;\n-   |             -- help: consider changing this to be a mutable reference: `&mut y`\n-...\n-LL |     *n;  //~ ERROR: cannot move out of borrowed content\n-   |     ^^\n-   |     |\n-   |     cannot move out of `*n` which is behind a `&` reference\n-   |     `n` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0502]: cannot borrow `f` as immutable because it is also borrowed as mutable\n   --> $DIR/binop-move-semantics.rs:64:5\n    |\n@@ -74,7 +62,7 @@ LL | |     &mut f;  //~ ERROR: cannot borrow `f` as mutable because it is also b\n    |       |    immutable borrow later used here\n    |       mutable borrow occurs here\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 6 previous errors\n \n Some errors occurred: E0382, E0502, E0507.\n For more information about an error, try `rustc --explain E0382`."}, {"sha": "b171a48ac508180e0ee0bce78df917998b8ea79c", "filename": "src/test/ui/borrowck/borrowck-fn-in-const-a.ast.nll.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-fn-in-const-a.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-fn-in-const-a.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-fn-in-const-a.ast.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,20 +0,0 @@\n-error[E0507]: cannot move out of borrowed content\n-  --> $DIR/borrowck-fn-in-const-a.rs:19:16\n-   |\n-LL |         return *x //[ast]~ ERROR cannot move out of borrowed content [E0507]\n-   |                ^^ cannot move out of borrowed content\n-\n-error[E0507]: cannot move out of `*x` which is behind a `&` reference\n-  --> $DIR/borrowck-fn-in-const-a.rs:19:16\n-   |\n-LL |     fn broken(x: &String) -> String {\n-   |                  ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |         return *x //[ast]~ ERROR cannot move out of borrowed content [E0507]\n-   |                ^^\n-   |                |\n-   |                cannot move out of `*x` which is behind a `&` reference\n-   |                `x` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "25eb69ad9377dfe21b260a35ad50463847956d75", "filename": "src/test/ui/borrowck/borrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -1,13 +1,3 @@\n-error[E0507]: cannot move out of `*__next` which is behind a `&` reference\n-  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:22:10\n-   |\n-LL |     for &a in x.iter() {    //~ ERROR cannot move out\n-   |         -^\n-   |         ||\n-   |         |cannot move out of `*__next` which is behind a `&` reference\n-   |         |`__next` is a `&` reference, so the data it refers to cannot be moved\n-   |         help: consider changing this to be a mutable reference: `&mut a`\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:22:15\n    |\n@@ -23,16 +13,6 @@ note: move occurs because `a` has type `&mut i32`, which does not implement the\n LL |     for &a in x.iter() {    //~ ERROR cannot move out\n    |          ^\n \n-error[E0507]: cannot move out of `*__next` which is behind a `&` reference\n-  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:28:10\n-   |\n-LL |     for &a in &f.a {  //~ ERROR cannot move out\n-   |         -^\n-   |         ||\n-   |         |cannot move out of `*__next` which is behind a `&` reference\n-   |         |`__next` is a `&` reference, so the data it refers to cannot be moved\n-   |         help: consider changing this to be a mutable reference: `&mut a`\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:28:15\n    |\n@@ -48,16 +28,6 @@ note: move occurs because `a` has type `std::boxed::Box<isize>`, which does not\n LL |     for &a in &f.a {  //~ ERROR cannot move out\n    |          ^\n \n-error[E0507]: cannot move out of `*__next` which is behind a `&` reference\n-  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:32:10\n-   |\n-LL |     for &a in x.iter() {    //~ ERROR cannot move out\n-   |         -^\n-   |         ||\n-   |         |cannot move out of `*__next` which is behind a `&` reference\n-   |         |`__next` is a `&` reference, so the data it refers to cannot be moved\n-   |         help: consider changing this to be a mutable reference: `&mut a`\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:32:15\n    |\n@@ -73,6 +43,6 @@ note: move occurs because `a` has type `std::boxed::Box<i32>`, which does not im\n LL |     for &a in x.iter() {    //~ ERROR cannot move out\n    |          ^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "45fa1764f7027230af918979f7648d00e8a418cb", "filename": "src/test/ui/borrowck/borrowck-in-static.nll.stderr", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -6,21 +6,6 @@ LL |     let x = Box::new(0);\n LL |     Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n    |                 ^ cannot move out of captured variable in an `Fn` closure\n \n-error[E0507]: cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-  --> $DIR/borrowck-in-static.rs:15:17\n-   |\n-LL |     Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n-   |                 ^\n-   |                 |\n-   |                 cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-   |                 cannot move\n-   |\n-help: consider changing this to accept closures that implement `FnMut`\n-  --> $DIR/borrowck-in-static.rs:15:14\n-   |\n-LL |     Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n-   |              ^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "cdbfab8bd054a1903c2d53ce953bc577d7f9faeb", "filename": "src/test/ui/borrowck/borrowck-issue-2657-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,17 +7,6 @@ LL |         let _b = *y; //~ ERROR cannot move out\n    |                  cannot move out of borrowed content\n    |                  help: consider removing the `*`: `y`\n \n-error[E0507]: cannot move out of `*y` which is behind a `&` reference\n-  --> $DIR/borrowck-issue-2657-2.rs:17:18\n-   |\n-LL |       Some(ref y) => {\n-   |            ----- help: consider changing this to be a mutable reference: `ref mut y`\n-LL |         let _b = *y; //~ ERROR cannot move out\n-   |                  ^^\n-   |                  |\n-   |                  cannot move out of `*y` which is behind a `&` reference\n-   |                  `y` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "e7dbc6f6e3ba04ab0ebed1a372805711cd37ed82", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.edition.stderr", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.edition.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -8,17 +8,3 @@ LL |                 (|| { let bar = foo; bar.take() })();\n            It represents potential unsoundness in your code.\n            This warning will become a hard error in the future.\n \n-warning[E0507]: cannot move out of `foo`, as it is immutable for the pattern guard\n-  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n-   |\n-LL |                 (|| { let bar = foo; bar.take() })();\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                 |\n-   |                 cannot move out of `foo`, as it is immutable for the pattern guard\n-   |                 cannot move\n-   |\n-   = note: variables bound in patterns are immutable until the end of the pattern guard\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n-"}, {"sha": "e7dbc6f6e3ba04ab0ebed1a372805711cd37ed82", "filename": "src/test/ui/borrowck/borrowck-migrate-to-nll.zflag.stderr", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-migrate-to-nll.zflag.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -8,17 +8,3 @@ LL |                 (|| { let bar = foo; bar.take() })();\n            It represents potential unsoundness in your code.\n            This warning will become a hard error in the future.\n \n-warning[E0507]: cannot move out of `foo`, as it is immutable for the pattern guard\n-  --> $DIR/borrowck-migrate-to-nll.rs:35:17\n-   |\n-LL |                 (|| { let bar = foo; bar.take() })();\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |                 |\n-   |                 cannot move out of `foo`, as it is immutable for the pattern guard\n-   |                 cannot move\n-   |\n-   = note: variables bound in patterns are immutable until the end of the pattern guard\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n-"}, {"sha": "2df520a936c9d4a9975563d5eb6221917fda2853", "filename": "src/test/ui/borrowck/borrowck-move-error-with-note.nll.stderr", "status": "modified", "additions": 1, "deletions": 49, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -24,42 +24,6 @@ LL |                   num2) => (),\n LL |         Foo::Foo2(num) => (),\n    |                   ^^^\n \n-error[E0507]: cannot move out of `f.0` which is behind a `&` reference\n-  --> $DIR/borrowck-move-error-with-note.rs:23:19\n-   |\n-LL |     let f = &Foo::Foo1(box 1, box 2);\n-   |             ------------------------ help: consider changing this to be a mutable reference: `&mut Foo::Foo1(box 1, box 2)`\n-...\n-LL |         Foo::Foo1(num1,\n-   |                   ^^^^\n-   |                   |\n-   |                   cannot move out of `f.0` which is behind a `&` reference\n-   |                   `f` is a `&` reference, so the data it refers to cannot be moved\n-\n-error[E0507]: cannot move out of `f.1` which is behind a `&` reference\n-  --> $DIR/borrowck-move-error-with-note.rs:24:19\n-   |\n-LL |     let f = &Foo::Foo1(box 1, box 2);\n-   |             ------------------------ help: consider changing this to be a mutable reference: `&mut Foo::Foo1(box 1, box 2)`\n-...\n-LL |                   num2) => (),\n-   |                   ^^^^\n-   |                   |\n-   |                   cannot move out of `f.1` which is behind a `&` reference\n-   |                   `f` is a `&` reference, so the data it refers to cannot be moved\n-\n-error[E0507]: cannot move out of `f.0` which is behind a `&` reference\n-  --> $DIR/borrowck-move-error-with-note.rs:25:19\n-   |\n-LL |     let f = &Foo::Foo1(box 1, box 2);\n-   |             ------------------------ help: consider changing this to be a mutable reference: `&mut Foo::Foo1(box 1, box 2)`\n-...\n-LL |         Foo::Foo2(num) => (),\n-   |                   ^^^\n-   |                   |\n-   |                   cannot move out of `f.0` which is behind a `&` reference\n-   |                   `f` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-error-with-note.rs:39:11\n    |\n@@ -97,19 +61,7 @@ note: move occurs because `n` has type `std::boxed::Box<isize>`, which does not\n LL |         n => {\n    |         ^\n \n-error[E0507]: cannot move out of `a.a` which is behind a `&` reference\n-  --> $DIR/borrowck-move-error-with-note.rs:59:9\n-   |\n-LL |     let a = &A { a: box 1 };\n-   |             --------------- help: consider changing this to be a mutable reference: `&mut A { a: box 1 }`\n-...\n-LL |         n => {\n-   |         ^\n-   |         |\n-   |         cannot move out of `a.a` which is behind a `&` reference\n-   |         `a` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 7 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors occurred: E0507, E0509.\n For more information about an error, try `rustc --explain E0507`."}, {"sha": "c3a2180b9f082e062f9afab0ede465a7511ac8f3", "filename": "src/test/ui/borrowck/borrowck-move-from-unsafe-ptr.nll.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,17 +7,6 @@ LL |     let y = *x; //~ ERROR cannot move out of dereference of raw pointer\n    |             cannot move out of dereference of raw pointer\n    |             help: consider removing the `*`: `x`\n \n-error[E0507]: cannot move out of `*x` which is behind a `*const` pointer\n-  --> $DIR/borrowck-move-from-unsafe-ptr.rs:13:13\n-   |\n-LL | unsafe fn foo(x: *const Box<isize>) -> Box<isize> {\n-   |                  ----------------- help: consider changing this to be a mutable pointer: `*mut std::boxed::Box<isize>`\n-LL |     let y = *x; //~ ERROR cannot move out of dereference of raw pointer\n-   |             ^^\n-   |             |\n-   |             cannot move out of `*x` which is behind a `*const` pointer\n-   |             `x` is a `*const` pointer, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "49c2ec0dcf4e7c996e77b3f918f482664288f74f", "filename": "src/test/ui/borrowck/borrowck-move-in-irrefut-pat.ast.nll.stderr", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -14,15 +14,6 @@ note: move occurs because `_x` has type `std::string::String`, which does not im\n LL | fn arg_item(&_x: &String) {}\n    |              ^^\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-move-in-irrefut-pat.rs:16:14\n-   |\n-LL | fn arg_item(&_x: &String) {}\n-   |              ^^\n-   |              |\n-   |              cannot move out of data in a `&` reference\n-   |              cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:21:11\n    |\n@@ -39,24 +30,6 @@ note: move occurs because `_x` has type `std::string::String`, which does not im\n LL |     with(|&_x| ())\n    |            ^^\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-move-in-irrefut-pat.rs:21:12\n-   |\n-LL |     with(|&_x| ())\n-   |            ^^\n-   |            |\n-   |            cannot move out of data in a `&` reference\n-   |            cannot move\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-move-in-irrefut-pat.rs:27:10\n-   |\n-LL |     let &_x = &\"hi\".to_string();\n-   |          ^^\n-   |          |\n-   |          cannot move out of data in a `&` reference\n-   |          cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:27:15\n    |\n@@ -72,6 +45,6 @@ note: move occurs because `_x` has type `std::string::String`, which does not im\n LL |     let &_x = &\"hi\".to_string();\n    |          ^^\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "d58beabb3038af551493e03d3d7a35312c100b9f", "filename": "src/test/ui/borrowck/borrowck-move-out-of-overloaded-auto-deref.ast.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-auto-deref.ast.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -4,15 +4,6 @@ error[E0507]: cannot move out of an `Rc`\n LL |     let _x = Rc::new(vec![1, 2]).into_iter();\n    |              ^^^^^^^^^^^^^^^^^^^ cannot move out of an `Rc`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-move-out-of-overloaded-auto-deref.rs:17:14\n-   |\n-LL |     let _x = Rc::new(vec![1, 2]).into_iter();\n-   |              ^^^^^^^^^^^^^^^^^^^\n-   |              |\n-   |              cannot move out of data in a `&` reference\n-   |              cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "c9c8cf104ce2e769fa4aa36749ce6b14f9c1894f", "filename": "src/test/ui/borrowck/borrowck-move-out-of-overloaded-deref.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-deref.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-deref.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-overloaded-deref.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,15 +7,6 @@ LL |     let _x = *Rc::new(\"hi\".to_string());\n    |              cannot move out of an `Rc`\n    |              help: consider removing the `*`: `Rc::new(\"hi\".to_string())`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-move-out-of-overloaded-deref.rs:14:14\n-   |\n-LL |     let _x = *Rc::new(\"hi\".to_string());\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |              |\n-   |              cannot move out of data in a `&` reference\n-   |              cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "675458d8c2b85fc83c441d7369b947014deadb0b", "filename": "src/test/ui/borrowck/borrowck-move-out-of-static-item.ast.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-static-item.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-static-item.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-static-item.ast.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,18 +0,0 @@\n-error[E0507]: cannot move out of static item\n-  --> $DIR/borrowck-move-out-of-static-item.rs:28:10\n-   |\n-LL |     test(BAR); //[ast]~ ERROR cannot move out of static item [E0507]\n-   |          ^^^ cannot move out of static item\n-\n-error[E0507]: cannot move out of immutable static item `BAR`\n-  --> $DIR/borrowck-move-out-of-static-item.rs:28:10\n-   |\n-LL |     test(BAR); //[ast]~ ERROR cannot move out of static item [E0507]\n-   |          ^^^\n-   |          |\n-   |          cannot move out of immutable static item `BAR`\n-   |          cannot move\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "f3430ba4e06c9038310a8f087594447e8b89dbce", "filename": "src/test/ui/borrowck/borrowck-move-out-of-vec-tail.nll.stderr", "status": "modified", "additions": 2, "deletions": 27, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -26,31 +26,6 @@ LL |                 //~| to prevent move\n LL |                   Foo { string: b }] => {\n    |\n \n-error[E0507]: cannot move out of `tail[..].string` which is behind a `&` reference\n-  --> $DIR/borrowck-move-out-of-vec-tail.rs:30:33\n-   |\n-LL |         [_, ref tail..] => {\n-   |             -------- help: consider changing this to be a mutable reference: `ref mut tail`\n-LL |             match tail {\n-LL |                 &[Foo { string: a },\n-   |                                 ^\n-   |                                 |\n-   |                                 cannot move out of `tail[..].string` which is behind a `&` reference\n-   |                                 `tail` is a `&` reference, so the data it refers to cannot be moved\n-\n-error[E0507]: cannot move out of `tail[..].string` which is behind a `&` reference\n-  --> $DIR/borrowck-move-out-of-vec-tail.rs:34:33\n-   |\n-LL |         [_, ref tail..] => {\n-   |             -------- help: consider changing this to be a mutable reference: `ref mut tail`\n-...\n-LL |                   Foo { string: b }] => {\n-   |                                 ^\n-   |                                 |\n-   |                                 cannot move out of `tail[..].string` which is behind a `&` reference\n-   |                                 `tail` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0507, E0508.\n-For more information about an error, try `rustc --explain E0507`.\n+For more information about this error, try `rustc --explain E0508`."}, {"sha": "92e10c258c269efbd9cca6855d1dcd0e351bf573", "filename": "src/test/ui/borrowck/borrowck-overloaded-index-move-from-vec.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,15 +7,6 @@ LL |     let bad = v[0];\n    |               cannot move out of borrowed content\n    |               help: consider borrowing here: `&v[0]`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/borrowck-overloaded-index-move-from-vec.rs:30:15\n-   |\n-LL |     let bad = v[0];\n-   |               ^^^^\n-   |               |\n-   |               cannot move out of data in a `&` reference\n-   |               cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "d4340938eebc14880e7b4409021344c26f733c86", "filename": "src/test/ui/borrowck/issue-51415.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-51415.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -13,15 +13,6 @@ note: move occurs because `s` has type `std::string::String`, which does not imp\n LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n    |                                               ^\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-51415.rs:16:47\n-   |\n-LL |     let opt = a.iter().enumerate().find(|(_, &s)| {\n-   |                                               ^\n-   |                                               |\n-   |                                               cannot move out of data in a `&` reference\n-   |                                               cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "d25fc759775428da39a6dc856f7e691206257975", "filename": "src/test/ui/borrowck/move-in-static-initializer-issue-38520.ast.nll.stderr", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.ast.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,33 +0,0 @@\n-error[E0507]: cannot move out of borrowed content\n-  --> $DIR/move-in-static-initializer-issue-38520.rs:25:23\n-   |\n-LL | static Y: usize = get(*&X); //[ast]~ ERROR E0507\n-   |                       ^^^ cannot move out of borrowed content\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/move-in-static-initializer-issue-38520.rs:25:23\n-   |\n-LL | static Y: usize = get(*&X); //[ast]~ ERROR E0507\n-   |                       ^^^\n-   |                       |\n-   |                       cannot move out of data in a `&` reference\n-   |                       cannot move\n-\n-error[E0507]: cannot move out of borrowed content\n-  --> $DIR/move-in-static-initializer-issue-38520.rs:27:22\n-   |\n-LL | const Z: usize = get(*&X); //[ast]~ ERROR E0507\n-   |                      ^^^ cannot move out of borrowed content\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/move-in-static-initializer-issue-38520.rs:27:22\n-   |\n-LL | const Z: usize = get(*&X); //[ast]~ ERROR E0507\n-   |                      ^^^\n-   |                      |\n-   |                      cannot move out of data in a `&` reference\n-   |                      cannot move\n-\n-error: aborting due to 4 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "0eb5fc8c324356ad358fa2438ac9bb1c992834a0", "filename": "src/test/ui/borrowck/unboxed-closures-move-upvar-from-non-once-ref-closure.nll.stderr", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,25 +7,6 @@ LL |     call(|| {\n LL |         y.into_iter();\n    |         ^ cannot move out of captured variable in an `Fn` closure\n \n-error[E0507]: cannot move out of `y`, as it is a captured variable in a `Fn` closure\n-  --> $DIR/unboxed-closures-move-upvar-from-non-once-ref-closure.rs:21:9\n-   |\n-LL |         y.into_iter();\n-   |         ^\n-   |         |\n-   |         cannot move out of `y`, as it is a captured variable in a `Fn` closure\n-   |         cannot move\n-   |\n-help: consider changing this to accept closures that implement `FnMut`\n-  --> $DIR/unboxed-closures-move-upvar-from-non-once-ref-closure.rs:20:10\n-   |\n-LL |       call(|| {\n-   |  __________^\n-LL | |         y.into_iter();\n-LL | |         //~^ ERROR cannot move out of captured outer variable in an `Fn` closure\n-LL | |     });\n-   | |_____^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "491b5b5bd74abef53a40f7b6d0e963f9c0683bd5", "filename": "src/test/ui/by-move-pattern-binding.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,15 +16,6 @@ note: move occurs because `identifier` has type `std::string::String`, which doe\n LL |         &E::Bar(identifier) => f(identifier.clone())  //~ ERROR cannot move\n    |                 ^^^^^^^^^^\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/by-move-pattern-binding.rs:26:17\n-   |\n-LL |         &E::Bar(identifier) => f(identifier.clone())  //~ ERROR cannot move\n-   |                 ^^^^^^^^^^\n-   |                 |\n-   |                 cannot move out of data in a `&` reference\n-   |                 cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "5522e22fb1fa28089a33a6c8851a39b7b52cf70a", "filename": "src/test/ui/check-static-values-constraints.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -58,22 +58,13 @@ LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                             cannot move out of static item\n    |                                             help: consider borrowing here: `&x`\n \n-error[E0507]: cannot move out of immutable static item `x`\n-  --> $DIR/check-static-values-constraints.rs:120:45\n-   |\n-LL |     let y = { static x: Box<isize> = box 3; x };\n-   |                                             ^\n-   |                                             |\n-   |                                             cannot move out of immutable static item `x`\n-   |                                             cannot move\n-\n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:120:38\n    |\n LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                      ^^^^^ allocation not allowed in statics\n \n-error: aborting due to 11 previous errors\n+error: aborting due to 10 previous errors\n \n Some errors occurred: E0010, E0015, E0493, E0507.\n For more information about an error, try `rustc --explain E0010`."}, {"sha": "0aa85d3ed7a3d36f248e6d25c10b99f68c55adbd", "filename": "src/test/ui/dst/dst-index.nll.stderr", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fdst%2Fdst-index.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fdst%2Fdst-index.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdst%2Fdst-index.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,31 +16,13 @@ error[E0507]: cannot move out of borrowed content\n LL |     S[0];\n    |     ^^^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/dst-index.rs:41:5\n-   |\n-LL |     S[0];\n-   |     ^^^^\n-   |     |\n-   |     cannot move out of data in a `&` reference\n-   |     cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/dst-index.rs:44:5\n    |\n LL |     T[0];\n    |     ^^^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/dst-index.rs:44:5\n-   |\n-LL |     T[0];\n-   |     ^^^^\n-   |     |\n-   |     cannot move out of data in a `&` reference\n-   |     cannot move\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors occurred: E0161, E0507.\n For more information about an error, try `rustc --explain E0161`."}, {"sha": "b120da773a24a3448d80882dfaf46fa498d4be5d", "filename": "src/test/ui/dst/dst-rvalue.nll.stderr", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fdst%2Fdst-rvalue.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fdst%2Fdst-rvalue.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdst%2Fdst-rvalue.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,33 +16,13 @@ error[E0507]: cannot move out of borrowed content\n LL |     let _x: Box<str> = box *\"hello world\";\n    |                            ^^^^^^^^^^^^^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/dst-rvalue.rs:16:28\n-   |\n-LL |     let _x: Box<str> = box *\"hello world\";\n-   |                            ^^^^^^^^^^^^^^\n-   |                            |\n-   |                            cannot move out of data in a `&` reference\n-   |                            cannot move\n-\n error[E0508]: cannot move out of type `[isize]`, a non-copy slice\n   --> $DIR/dst-rvalue.rs:21:32\n    |\n LL |     let _x: Box<[isize]> = box *array;\n    |                                ^^^^^^ cannot move out of here\n \n-error[E0507]: cannot move out of `*array` which is behind a `&` reference\n-  --> $DIR/dst-rvalue.rs:21:32\n-   |\n-LL |     let array: &[isize] = &[1, 2, 3];\n-   |                           ---------- help: consider changing this to be a mutable reference: `&mut [1, 2, 3]`\n-LL |     let _x: Box<[isize]> = box *array;\n-   |                                ^^^^^^\n-   |                                |\n-   |                                cannot move out of `*array` which is behind a `&` reference\n-   |                                `array` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n Some errors occurred: E0161, E0507, E0508.\n For more information about an error, try `rustc --explain E0161`."}, {"sha": "43795e5224ddc92567a8281eb7b1ff511088d758", "filename": "src/test/ui/error-codes/E0507.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Ferror-codes%2FE0507.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Ferror-codes%2FE0507.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0507.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,18 +0,0 @@\n-error[E0507]: cannot move out of borrowed content\n-  --> $DIR/E0507.rs:22:5\n-   |\n-LL |     x.borrow().nothing_is_true(); //~ ERROR E0507\n-   |     ^^^^^^^^^^ cannot move out of borrowed content\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/E0507.rs:22:5\n-   |\n-LL |     x.borrow().nothing_is_true(); //~ ERROR E0507\n-   |     ^^^^^^^^^^\n-   |     |\n-   |     cannot move out of data in a `&` reference\n-   |     cannot move\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "72d21d47d86fa765985da974e0b8b2664837d7fa", "filename": "src/test/ui/issues/issue-12567.nll.stderr", "status": "modified", "additions": 2, "deletions": 39, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12567.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -40,43 +40,6 @@ LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n LL |         (&[hd1, ..], &[hd2, ..])\n    |            ^^^\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-12567.rs:16:17\n-   |\n-LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n-   |                 ^^\n-   |                 |\n-   |                 cannot move out of data in a `&` reference\n-   |                 cannot move\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-12567.rs:16:31\n-   |\n-LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n-   |                               ^^\n-   |                               |\n-   |                               cannot move out of data in a `&` reference\n-   |                               cannot move\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-12567.rs:20:12\n-   |\n-LL |         (&[hd1, ..], &[hd2, ..])\n-   |            ^^^\n-   |            |\n-   |            cannot move out of data in a `&` reference\n-   |            cannot move\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-12567.rs:20:24\n-   |\n-LL |         (&[hd1, ..], &[hd2, ..])\n-   |                        ^^^\n-   |                        |\n-   |                        cannot move out of data in a `&` reference\n-   |                        cannot move\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors occurred: E0507, E0508.\n-For more information about an error, try `rustc --explain E0507`.\n+For more information about this error, try `rustc --explain E0508`."}, {"sha": "f8da3c3d5989eceb45282da4c0f45502ba96354c", "filename": "src/test/ui/issues/issue-17718-static-move.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-17718-static-move.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-17718-static-move.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-static-move.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,15 +7,6 @@ LL |     let _a = FOO; //~ ERROR: cannot move out of static item\n    |              cannot move out of static item\n    |              help: consider borrowing here: `&FOO`\n \n-error[E0507]: cannot move out of immutable static item `FOO`\n-  --> $DIR/issue-17718-static-move.rs:16:14\n-   |\n-LL |     let _a = FOO; //~ ERROR: cannot move out of static item\n-   |              ^^^\n-   |              |\n-   |              cannot move out of immutable static item `FOO`\n-   |              cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "362778b26c861911d2624046c87cd15c65d575ea", "filename": "src/test/ui/issues/issue-20801.nll.stderr", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20801.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,15 +16,6 @@ LL |     let b = unsafe { *imm_ref() };\n    |                      cannot move out of borrowed content\n    |                      help: consider removing the `*`: `imm_ref()`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-20801.rs:39:22\n-   |\n-LL |     let b = unsafe { *imm_ref() };\n-   |                      ^^^^^^^^^^\n-   |                      |\n-   |                      cannot move out of data in a `&` reference\n-   |                      cannot move\n-\n error[E0507]: cannot move out of dereference of raw pointer\n   --> $DIR/issue-20801.rs:42:22\n    |\n@@ -43,15 +34,6 @@ LL |     let d = unsafe { *const_ptr() };\n    |                      cannot move out of dereference of raw pointer\n    |                      help: consider removing the `*`: `const_ptr()`\n \n-error[E0507]: cannot move out of data in a `*const` pointer\n-  --> $DIR/issue-20801.rs:45:22\n-   |\n-LL |     let d = unsafe { *const_ptr() };\n-   |                      ^^^^^^^^^^^^\n-   |                      |\n-   |                      cannot move out of data in a `*const` pointer\n-   |                      cannot move\n-\n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "fa2df26498a061dc0fa0ac12d94550dcb349c01f", "filename": "src/test/ui/issues/issue-2590.nll.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-2590.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-2590.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2590.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -4,17 +4,6 @@ error[E0507]: cannot move out of borrowed content\n LL |         self.tokens //~ ERROR cannot move out of borrowed content\n    |         ^^^^^^^^^^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of `self.tokens` which is behind a `&` reference\n-  --> $DIR/issue-2590.rs:22:9\n-   |\n-LL |     fn parse(&self) -> Vec<isize> {\n-   |              ----- help: consider changing this to be a mutable reference: `&mut self`\n-LL |         self.tokens //~ ERROR cannot move out of borrowed content\n-   |         ^^^^^^^^^^^\n-   |         |\n-   |         cannot move out of `self.tokens` which is behind a `&` reference\n-   |         `self` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "fdf8157dcf833918233aacc1107973455570d2df", "filename": "src/test/ui/issues/issue-30355.nll.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-30355.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-30355.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30355.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,16 +16,7 @@ error[E0508]: cannot move out of type `[u8]`, a non-copy slice\n LL |     &X(*Y)\n    |        ^^ cannot move out of here\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-30355.rs:15:8\n-   |\n-LL |     &X(*Y)\n-   |        ^^\n-   |        |\n-   |        cannot move out of data in a `&` reference\n-   |        cannot move\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors occurred: E0161, E0507, E0508.\n+Some errors occurred: E0161, E0508.\n For more information about an error, try `rustc --explain E0161`."}, {"sha": "9020d3778c3730820347651be4554a9b7d9c1f0b", "filename": "src/test/ui/issues/issue-40402-ref-hints/issue-40402-1.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-1.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,15 +7,6 @@ LL |     let e = f.v[0]; //~ ERROR cannot move out of indexed content\n    |             cannot move out of borrowed content\n    |             help: consider borrowing here: `&f.v[0]`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-40402-1.rs:19:13\n-   |\n-LL |     let e = f.v[0]; //~ ERROR cannot move out of indexed content\n-   |             ^^^^^^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "a80e9a5fe091f70343247033078fb2881a09d61d", "filename": "src/test/ui/issues/issue-40402-ref-hints/issue-40402-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -1,21 +1,3 @@\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-40402-2.rs:15:10\n-   |\n-LL |     let (a, b) = x[0]; //~ ERROR cannot move out of indexed content\n-   |          ^\n-   |          |\n-   |          cannot move out of data in a `&` reference\n-   |          cannot move\n-\n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/issue-40402-2.rs:15:13\n-   |\n-LL |     let (a, b) = x[0]; //~ ERROR cannot move out of indexed content\n-   |             ^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/issue-40402-2.rs:15:18\n    |\n@@ -33,6 +15,6 @@ note: move occurs because these variables have types that don't implement the `C\n LL |     let (a, b) = x[0]; //~ ERROR cannot move out of indexed content\n    |          ^  ^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "d31eddfa5b65deb908818dac6eee2ab8c0accbd9", "filename": "src/test/ui/issues/issue-4335.nll.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-4335.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fissues%2Fissue-4335.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4335.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -6,15 +6,6 @@ LL | fn f<'r, T>(v: &'r T) -> Box<FnMut() -> T + 'r> {\n LL |     id(Box::new(|| *v))\n    |                    ^^ cannot move out of captured variable in an `FnMut` closure\n \n-error[E0507]: cannot move out of `*v` which is behind a `&` reference\n-  --> $DIR/issue-4335.rs:16:20\n-   |\n-LL |     id(Box::new(|| *v))\n-   |                    ^^\n-   |                    |\n-   |                    cannot move out of `*v` which is behind a `&` reference\n-   |                    cannot move\n-\n error[E0373]: closure may outlive the current function, but it borrows `v`, which is owned by the current function\n   --> $DIR/issue-4335.rs:16:17\n    |\n@@ -33,7 +24,7 @@ help: to force the closure to take ownership of `v` (and any other referenced va\n LL |     id(Box::new(move || *v))\n    |                 ^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors occurred: E0373, E0507.\n For more information about an error, try `rustc --explain E0373`."}, {"sha": "1f22ab148185296bbf3ca71abe0a75ca06630a3d", "filename": "src/test/ui/moves/moves-based-on-type-block-bad.nll.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-block-bad.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -16,18 +16,6 @@ note: move occurs because `x` has type `std::boxed::Box<isize>`, which does not\n LL |                 box E::Bar(x) => println!(\"{}\", x.to_string()),\n    |                            ^\n \n-error[E0507]: cannot move out of `hellothere.x.0` which is behind a `&` reference\n-  --> $DIR/moves-based-on-type-block-bad.rs:37:28\n-   |\n-LL |         f(&s, |hellothere| {\n-   |                ---------- help: consider changing this to be a mutable reference: `&mut S`\n-...\n-LL |                 box E::Bar(x) => println!(\"{}\", x.to_string()),\n-   |                            ^\n-   |                            |\n-   |                            cannot move out of `hellothere.x.0` which is behind a `&` reference\n-   |                            `hellothere` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "13a6fc15ce3185b7ebbbd5093d018c515fad9293", "filename": "src/test/ui/moves/moves-based-on-type-move-out-of-closure-env-issue-1965.nll.stderr", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-move-out-of-closure-env-issue-1965.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-move-out-of-closure-env-issue-1965.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmoves-based-on-type-move-out-of-closure-env-issue-1965.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -6,21 +6,6 @@ LL |     let i = box 3;\n LL |     let _f = to_fn(|| test(i)); //~ ERROR cannot move out\n    |                            ^ cannot move out of captured variable in an `Fn` closure\n \n-error[E0507]: cannot move out of `i`, as it is a captured variable in a `Fn` closure\n-  --> $DIR/moves-based-on-type-move-out-of-closure-env-issue-1965.rs:21:28\n-   |\n-LL |     let _f = to_fn(|| test(i)); //~ ERROR cannot move out\n-   |                            ^\n-   |                            |\n-   |                            cannot move out of `i`, as it is a captured variable in a `Fn` closure\n-   |                            cannot move\n-   |\n-help: consider changing this to accept closures that implement `FnMut`\n-  --> $DIR/moves-based-on-type-move-out-of-closure-env-issue-1965.rs:21:20\n-   |\n-LL |     let _f = to_fn(|| test(i)); //~ ERROR cannot move out\n-   |                    ^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "6a4c8f2e8d81570161b7d251523acb9c6483235f", "filename": "src/test/ui/nll/cannot-move-block-spans.nll.stderr", "status": "modified", "additions": 1, "deletions": 71, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fcannot-move-block-spans.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,17 +7,6 @@ LL |     let x = { *r }; //~ ERROR\n    |               cannot move out of borrowed content\n    |               help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:15:15\n-   |\n-LL | pub fn deref(r: &String) {\n-   |                 ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |     let x = { *r }; //~ ERROR\n-   |               ^^\n-   |               |\n-   |               cannot move out of `*r` which is behind a `&` reference\n-   |               `r` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:16:22\n    |\n@@ -27,18 +16,6 @@ LL |     let y = unsafe { *r }; //~ ERROR\n    |                      cannot move out of borrowed content\n    |                      help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:16:22\n-   |\n-LL | pub fn deref(r: &String) {\n-   |                 ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |     let x = { *r }; //~ ERROR\n-LL |     let y = unsafe { *r }; //~ ERROR\n-   |                      ^^\n-   |                      |\n-   |                      cannot move out of `*r` which is behind a `&` reference\n-   |                      `r` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:17:26\n    |\n@@ -48,18 +25,6 @@ LL |     let z = loop { break *r; }; //~ ERROR\n    |                          cannot move out of borrowed content\n    |                          help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:17:26\n-   |\n-LL | pub fn deref(r: &String) {\n-   |                 ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-...\n-LL |     let z = loop { break *r; }; //~ ERROR\n-   |                          ^^\n-   |                          |\n-   |                          cannot move out of `*r` which is behind a `&` reference\n-   |                          `r` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0508]: cannot move out of type `[std::string::String; 2]`, a non-copy array\n   --> $DIR/cannot-move-block-spans.rs:21:15\n    |\n@@ -96,17 +61,6 @@ LL |     let x = { let mut u = 0; u += 1; *r }; //~ ERROR\n    |                                      cannot move out of borrowed content\n    |                                      help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:27:38\n-   |\n-LL | pub fn additional_statement_cases(r: &String) {\n-   |                                      ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |     let x = { let mut u = 0; u += 1; *r }; //~ ERROR\n-   |                                      ^^\n-   |                                      |\n-   |                                      cannot move out of `*r` which is behind a `&` reference\n-   |                                      `r` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:28:45\n    |\n@@ -116,18 +70,6 @@ LL |     let y = unsafe { let mut u = 0; u += 1; *r }; //~ ERROR\n    |                                             cannot move out of borrowed content\n    |                                             help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:28:45\n-   |\n-LL | pub fn additional_statement_cases(r: &String) {\n-   |                                      ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |     let x = { let mut u = 0; u += 1; *r }; //~ ERROR\n-LL |     let y = unsafe { let mut u = 0; u += 1; *r }; //~ ERROR\n-   |                                             ^^\n-   |                                             |\n-   |                                             cannot move out of `*r` which is behind a `&` reference\n-   |                                             `r` is a `&` reference, so the data it refers to cannot be moved\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/cannot-move-block-spans.rs:29:49\n    |\n@@ -137,19 +79,7 @@ LL |     let z = loop { let mut u = 0; u += 1; break *r; u += 2; }; //~ ERROR\n    |                                                 cannot move out of borrowed content\n    |                                                 help: consider removing the `*`: `r`\n \n-error[E0507]: cannot move out of `*r` which is behind a `&` reference\n-  --> $DIR/cannot-move-block-spans.rs:29:49\n-   |\n-LL | pub fn additional_statement_cases(r: &String) {\n-   |                                      ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-...\n-LL |     let z = loop { let mut u = 0; u += 1; break *r; u += 2; }; //~ ERROR\n-   |                                                 ^^\n-   |                                                 |\n-   |                                                 cannot move out of `*r` which is behind a `&` reference\n-   |                                                 `r` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 15 previous errors\n+error: aborting due to 9 previous errors\n \n Some errors occurred: E0507, E0508.\n For more information about an error, try `rustc --explain E0507`."}, {"sha": "afb85c69990f9851fb3702ae4b689c8b52d78856", "filename": "src/test/ui/nll/match-guards-always-borrow.ast.nll.stderr", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmatch-guards-always-borrow.ast.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -8,20 +8,6 @@ LL |             (|| { let bar = foo; bar.take() })();\n            It represents potential unsoundness in your code.\n            This warning will become a hard error in the future.\n \n-warning[E0507]: cannot move out of `foo`, as it is immutable for the pattern guard\n-  --> $DIR/match-guards-always-borrow.rs:23:13\n-   |\n-LL |             (|| { let bar = foo; bar.take() })();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |             |\n-   |             cannot move out of `foo`, as it is immutable for the pattern guard\n-   |             cannot move\n-   |\n-   = note: variables bound in patterns are immutable until the end of the pattern guard\n-   = warning: This error has been downgraded to a warning for backwards compatibility with previous releases.\n-           It represents potential unsoundness in your code.\n-           This warning will become a hard error in the future.\n-\n error: compilation successful\n   --> $DIR/match-guards-always-borrow.rs:57:1\n    |"}, {"sha": "35a400b15089ff19a6bc00b0da5b7afaab78da42", "filename": "src/test/ui/static/static-items-cant-move.nll.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fstatic%2Fstatic-items-cant-move.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Fstatic%2Fstatic-items-cant-move.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-items-cant-move.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,18 +0,0 @@\n-error[E0507]: cannot move out of static item\n-  --> $DIR/static-items-cant-move.rs:28:10\n-   |\n-LL |     test(BAR); //~ ERROR cannot move out of static item\n-   |          ^^^ cannot move out of static item\n-\n-error[E0507]: cannot move out of immutable static item `BAR`\n-  --> $DIR/static-items-cant-move.rs:28:10\n-   |\n-LL |     test(BAR); //~ ERROR cannot move out of static item\n-   |          ^^^\n-   |          |\n-   |          cannot move out of immutable static item `BAR`\n-   |          cannot move\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "e6b612fed85885c1a24cae4ce2bfc59e0b3b87f3", "filename": "src/test/ui/std-uncopyable-atomics.nll.stderr", "status": "modified", "additions": 1, "deletions": 37, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fstd-uncopyable-atomics.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Fstd-uncopyable-atomics.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstd-uncopyable-atomics.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -7,15 +7,6 @@ LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n    |             cannot move out of borrowed content\n    |             help: consider removing the `*`: `&x`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/std-uncopyable-atomics.rs:19:13\n-   |\n-LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n-   |             ^^^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/std-uncopyable-atomics.rs:21:13\n    |\n@@ -25,15 +16,6 @@ LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n    |             cannot move out of borrowed content\n    |             help: consider removing the `*`: `&x`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/std-uncopyable-atomics.rs:21:13\n-   |\n-LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n-   |             ^^^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/std-uncopyable-atomics.rs:23:13\n    |\n@@ -43,15 +25,6 @@ LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n    |             cannot move out of borrowed content\n    |             help: consider removing the `*`: `&x`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/std-uncopyable-atomics.rs:23:13\n-   |\n-LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n-   |             ^^^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n error[E0507]: cannot move out of borrowed content\n   --> $DIR/std-uncopyable-atomics.rs:25:13\n    |\n@@ -61,15 +34,6 @@ LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n    |             cannot move out of borrowed content\n    |             help: consider removing the `*`: `&x`\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/std-uncopyable-atomics.rs:25:13\n-   |\n-LL |     let x = *&x; //~ ERROR: cannot move out of borrowed content\n-   |             ^^^\n-   |             |\n-   |             cannot move out of data in a `&` reference\n-   |             cannot move\n-\n-error: aborting due to 8 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "9f56bf05384364a0b9181b3bb880ad8023dec91c", "filename": "src/test/ui/trivial-bounds/trivial-bounds-leak-copy.nll.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak-copy.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fb2446ad581c9d54b9b4dce1106ad9138438a2ef/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak-copy.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak-copy.nll.stderr?ref=fb2446ad581c9d54b9b4dce1106ad9138438a2ef", "patch": "@@ -1,20 +0,0 @@\n-error[E0507]: cannot move out of borrowed content\n-  --> $DIR/trivial-bounds-leak-copy.rs:19:5\n-   |\n-LL |     *t //~ ERROR\n-   |     ^^ cannot move out of borrowed content\n-\n-error[E0507]: cannot move out of `*t` which is behind a `&` reference\n-  --> $DIR/trivial-bounds-leak-copy.rs:19:5\n-   |\n-LL | fn move_out_string(t: &String) -> String {\n-   |                       ------- help: consider changing this to be a mutable reference: `&mut std::string::String`\n-LL |     *t //~ ERROR\n-   |     ^^\n-   |     |\n-   |     cannot move out of `*t` which is behind a `&` reference\n-   |     `t` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0507`."}, {"sha": "4baa54e34c75532750ffba07c939ae627e9639c8", "filename": "src/test/ui/unboxed-closures/unboxed-closure-illegal-move.nll.stderr", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-illegal-move.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-illegal-move.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-illegal-move.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -6,21 +6,6 @@ LL |         let x = Box::new(0);\n LL |         let f = to_fn(|| drop(x)); //~ ERROR cannot move\n    |                               ^ cannot move out of captured variable in an `Fn` closure\n \n-error[E0507]: cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-  --> $DIR/unboxed-closure-illegal-move.rs:25:31\n-   |\n-LL |         let f = to_fn(|| drop(x)); //~ ERROR cannot move\n-   |                               ^\n-   |                               |\n-   |                               cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-   |                               cannot move\n-   |\n-help: consider changing this to accept closures that implement `FnMut`\n-  --> $DIR/unboxed-closure-illegal-move.rs:25:23\n-   |\n-LL |         let f = to_fn(|| drop(x)); //~ ERROR cannot move\n-   |                       ^^^^^^^^^^\n-\n error[E0507]: cannot move out of captured variable in an `FnMut` closure\n   --> $DIR/unboxed-closure-illegal-move.rs:29:35\n    |\n@@ -37,21 +22,6 @@ LL |         let x = Box::new(0);\n LL |         let f = to_fn(move || drop(x)); //~ ERROR cannot move\n    |                                    ^ cannot move out of captured variable in an `Fn` closure\n \n-error[E0507]: cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-  --> $DIR/unboxed-closure-illegal-move.rs:38:36\n-   |\n-LL |         let f = to_fn(move || drop(x)); //~ ERROR cannot move\n-   |                                    ^\n-   |                                    |\n-   |                                    cannot move out of `x`, as it is a captured variable in a `Fn` closure\n-   |                                    cannot move\n-   |\n-help: consider changing this to accept closures that implement `FnMut`\n-  --> $DIR/unboxed-closure-illegal-move.rs:38:23\n-   |\n-LL |         let f = to_fn(move || drop(x)); //~ ERROR cannot move\n-   |                       ^^^^^^^^^^^^^^^\n-\n error[E0507]: cannot move out of captured variable in an `FnMut` closure\n   --> $DIR/unboxed-closure-illegal-move.rs:42:40\n    |\n@@ -60,6 +30,6 @@ LL |         let x = Box::new(0);\n LL |         let f = to_fn_mut(move || drop(x)); //~ ERROR cannot move\n    |                                        ^ cannot move out of captured variable in an `FnMut` closure\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0507`."}, {"sha": "111940aab2c322764150b4a5be8539b966a6a6ad", "filename": "src/test/ui/unop-move-semantics.nll.stderr", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funop-move-semantics.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funop-move-semantics.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funop-move-semantics.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -21,19 +21,7 @@ error[E0507]: cannot move out of borrowed content\n LL |     !*n;  //~ ERROR: cannot move out of borrowed content\n    |      ^^ cannot move out of borrowed content\n \n-error[E0507]: cannot move out of `*n` which is behind a `&` reference\n-  --> $DIR/unop-move-semantics.rs:36:6\n-   |\n-LL |     let n = &y;\n-   |             -- help: consider changing this to be a mutable reference: `&mut y`\n-...\n-LL |     !*n;  //~ ERROR: cannot move out of borrowed content\n-   |      ^^\n-   |      |\n-   |      cannot move out of `*n` which is behind a `&` reference\n-   |      `n` is a `&` reference, so the data it refers to cannot be moved\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n Some errors occurred: E0382, E0507.\n For more information about an error, try `rustc --explain E0382`."}, {"sha": "a94414ef5603b7a10464c3d687c133dc4111b9bd", "filename": "src/test/ui/unsized-locals/unsized-exprs2.nll.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1ca3907e00211b2f645133af3574ca22e4f4f4d/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.nll.stderr?ref=b1ca3907e00211b2f645133af3574ca22e4f4f4d", "patch": "@@ -4,16 +4,6 @@ error[E0508]: cannot move out of type `[u8]`, a non-copy slice\n LL |     udrop::<[u8]>(foo()[..]);\n    |                   ^^^^^^^^^ cannot move out of here\n \n-error[E0507]: cannot move out of data in a `&` reference\n-  --> $DIR/unsized-exprs2.rs:22:19\n-   |\n-LL |     udrop::<[u8]>(foo()[..]);\n-   |                   ^^^^^^^^^\n-   |                   |\n-   |                   cannot move out of data in a `&` reference\n-   |                   cannot move\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-Some errors occurred: E0507, E0508.\n-For more information about an error, try `rustc --explain E0507`.\n+For more information about this error, try `rustc --explain E0508`."}]}