{"sha": "bf82582d6f8de744df5c34e80a04ad72f40afed7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmODI1ODJkNmY4ZGU3NDRkZjVjMzRlODBhMDRhZDcyZjQwYWZlZDc=", "commit": {"author": {"name": "Mikhail Babenko", "email": "misha-babenko@yandex.ru", "date": "2020-02-07T15:27:12Z"}, "committer": {"name": "Mikhail Babenko", "email": "misha-babenko@yandex.ru", "date": "2020-02-07T15:27:12Z"}, "message": "add hir printing", "tree": {"sha": "36c9155c937d08d9b492024eafc29f410a4a5f1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36c9155c937d08d9b492024eafc29f410a4a5f1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf82582d6f8de744df5c34e80a04ad72f40afed7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf82582d6f8de744df5c34e80a04ad72f40afed7", "html_url": "https://github.com/rust-lang/rust/commit/bf82582d6f8de744df5c34e80a04ad72f40afed7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf82582d6f8de744df5c34e80a04ad72f40afed7/comments", "author": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "basil-cow", "id": 25266609, "node_id": "MDQ6VXNlcjI1MjY2NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/25266609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/basil-cow", "html_url": "https://github.com/basil-cow", "followers_url": "https://api.github.com/users/basil-cow/followers", "following_url": "https://api.github.com/users/basil-cow/following{/other_user}", "gists_url": "https://api.github.com/users/basil-cow/gists{/gist_id}", "starred_url": "https://api.github.com/users/basil-cow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/basil-cow/subscriptions", "organizations_url": "https://api.github.com/users/basil-cow/orgs", "repos_url": "https://api.github.com/users/basil-cow/repos", "events_url": "https://api.github.com/users/basil-cow/events{/privacy}", "received_events_url": "https://api.github.com/users/basil-cow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab6ea2bba771836ebbf8759e718fedd2c6d229d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab6ea2bba771836ebbf8759e718fedd2c6d229d2", "html_url": "https://github.com/rust-lang/rust/commit/ab6ea2bba771836ebbf8759e718fedd2c6d229d2"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "071c3de4b1c2c8d247b31664697bf83d6d17f602", "filename": "src/librustc_hir/print.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf82582d6f8de744df5c34e80a04ad72f40afed7/src%2Flibrustc_hir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf82582d6f8de744df5c34e80a04ad72f40afed7/src%2Flibrustc_hir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fprint.rs?ref=bf82582d6f8de744df5c34e80a04ad72f40afed7", "patch": "@@ -454,14 +454,17 @@ impl<'a> State<'a> {\n     fn print_associated_type(\n         &mut self,\n         ident: ast::Ident,\n+        generics: &hir::Generics<'_>,\n         bounds: Option<hir::GenericBounds<'_>>,\n         ty: Option<&hir::Ty<'_>>,\n     ) {\n         self.word_space(\"type\");\n         self.print_ident(ident);\n+        self.print_generic_params(&generics.params);\n         if let Some(bounds) = bounds {\n             self.print_bounds(\":\", bounds);\n         }\n+        self.print_where_clause(&generics.where_clause);\n         if let Some(ty) = ty {\n             self.s.space();\n             self.word_space(\"=\");\n@@ -902,6 +905,7 @@ impl<'a> State<'a> {\n             hir::TraitItemKind::Type(ref bounds, ref default) => {\n                 self.print_associated_type(\n                     ti.ident,\n+                    &ti.generics,\n                     Some(bounds),\n                     default.as_ref().map(|ty| &**ty),\n                 );\n@@ -930,7 +934,7 @@ impl<'a> State<'a> {\n                 self.ann.nested(self, Nested::Body(body));\n             }\n             hir::ImplItemKind::TyAlias(ref ty) => {\n-                self.print_associated_type(ii.ident, None, Some(ty));\n+                self.print_associated_type(ii.ident, &ii.generics, None, Some(ty));\n             }\n             hir::ImplItemKind::OpaqueTy(bounds) => {\n                 self.word_space(\"type\");"}]}