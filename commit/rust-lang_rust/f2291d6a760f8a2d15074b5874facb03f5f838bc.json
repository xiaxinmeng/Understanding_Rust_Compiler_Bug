{"sha": "f2291d6a760f8a2d15074b5874facb03f5f838bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyMjkxZDZhNzYwZjhhMmQxNTA3NGI1ODc0ZmFjYjAzZjVmODM4YmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T11:44:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-11T11:44:12Z"}, "message": "doc symbols", "tree": {"sha": "00faff0402a675c4a041966e71b1789bfb086dcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00faff0402a675c4a041966e71b1789bfb086dcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2291d6a760f8a2d15074b5874facb03f5f838bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2291d6a760f8a2d15074b5874facb03f5f838bc", "html_url": "https://github.com/rust-lang/rust/commit/f2291d6a760f8a2d15074b5874facb03f5f838bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2291d6a760f8a2d15074b5874facb03f5f838bc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7afd84febc76a75a3ed1be75c57ff35d7b8b3de6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7afd84febc76a75a3ed1be75c57ff35d7b8b3de6", "html_url": "https://github.com/rust-lang/rust/commit/7afd84febc76a75a3ed1be75c57ff35d7b8b3de6"}], "stats": {"total": 4821, "additions": 2422, "deletions": 2399}, "files": [{"sha": "2910204e80a76c3fde2f3ce3ed67dfa32029167f", "filename": "code/.vscode/settings.json", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2F.vscode%2Fsettings.json", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2F.vscode%2Fsettings.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/code%2F.vscode%2Fsettings.json?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -1,10 +1,10 @@\n // Place your settings in this file to overwrite default and user settings.\n {\n     \"files.exclude\": {\n-        \"out\": true,\n-        \"node_modules\": true\n+        \"out\": true\n+        // \"node_modules\": true\n     },\n     \"search.exclude\": {\n         \"out\": true // set this to false to include \"out\" folder in search results\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "00798750712d6439be3f9fc500a6067259ce1d13", "filename": "code/package-lock.json", "status": "modified", "additions": 2350, "deletions": 2343, "changes": 4693, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/code%2Fpackage-lock.json?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc"}, {"sha": "327fbfb81015ac7e63acda8c8caf67cd9f61d424", "filename": "code/package.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/code%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/code%2Fpackage.json?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -14,7 +14,7 @@\n     \"postinstall\": \"node ./node_modules/vscode/bin/install\"\n   },\n   \"dependencies\": {\n-    \"vscode-languageclient\": \"^4.3.0\"\n+    \"vscode-languageclient\": \"^4.4.0\"\n   },\n   \"devDependencies\": {\n     \"@types/node\": \"^7.0.56\","}, {"sha": "b6e9139c75d6345f4553ea83896723558f5b26a6", "filename": "crates/cli/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fcli%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fcli%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcli%2Fsrc%2Fmain.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -10,7 +10,7 @@ use std::{\n };\n use clap::{App, Arg, SubCommand};\n use tools::collect_tests;\n-use libeditor::{File, syntax_tree, symbols};\n+use libeditor::{File, syntax_tree, file_symbols};\n \n type Result<T> = ::std::result::Result<T, failure::Error>;\n \n@@ -51,7 +51,7 @@ fn main() -> Result<()> {\n         }\n         (\"symbols\", _) => {\n             let file = file()?;\n-            for s in symbols(&file) {\n+            for s in file_symbols(&file) {\n                 println!(\"{:?}\", s);\n             }\n         }"}, {"sha": "013d274508182f0a96a692c8f0ae1f15305e1a83", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -7,7 +7,7 @@ mod line_index;\n \n use libsyntax2::{\n     ast::{self, NameOwner},\n-    SyntaxNodeRef, AstNode,\n+    AstNode,\n     algo::walk,\n     SyntaxKind::*,\n };\n@@ -100,19 +100,6 @@ pub fn syntax_tree(file: &ast::File) -> String {\n     ::libsyntax2::utils::dump_tree(&file.syntax())\n }\n \n-pub fn symbols(file: &ast::File) -> Vec<Symbol> {\n-    let syntax = file.syntax();\n-    let res: Vec<Symbol> = walk::preorder(syntax.as_ref())\n-        .filter_map(Declaration::cast)\n-        .filter_map(|decl| {\n-            let name = decl.name()?;\n-            let range = decl.range();\n-            Some(Symbol { name, range })\n-        })\n-        .collect();\n-    res // NLL :-(\n-}\n-\n pub fn runnables(file: &ast::File) -> Vec<Runnable> {\n     file\n         .functions()\n@@ -134,27 +121,3 @@ pub fn runnables(file: &ast::File) -> Vec<Runnable> {\n         })\n         .collect()\n }\n-\n-\n-struct Declaration<'f> (SyntaxNodeRef<'f>);\n-\n-impl<'f> Declaration<'f> {\n-    fn cast(node: SyntaxNodeRef<'f>) -> Option<Declaration<'f>> {\n-        match node.kind() {\n-            | STRUCT | ENUM | FUNCTION | TRAIT\n-            | CONST_ITEM | STATIC_ITEM | MODULE | NAMED_FIELD\n-            | TYPE_ITEM => Some(Declaration(node)),\n-            _ => None\n-        }\n-    }\n-\n-    fn name(&self) -> Option<String> {\n-        let name = self.0.children()\n-            .find(|child| child.kind() == NAME)?;\n-        Some(name.text())\n-    }\n-\n-    fn range(&self) -> TextRange {\n-        self.0.range()\n-    }\n-}"}, {"sha": "4c25b06e069107e28ccc108250fca55c9b28c089", "filename": "crates/server/Cargo.toml", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2FCargo.toml?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -5,7 +5,6 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n [dependencies]\n failure = \"0.1.2\"\n-languageserver-types = \"0.48.0\"\n serde_json = \"1.0.24\"\n serde = \"1.0.71\"\n serde_derive = \"1.0.71\"\n@@ -14,8 +13,13 @@ crossbeam-channel = \"0.2.4\"\n threadpool = \"1.7.1\"\n flexi_logger = \"0.9.0\"\n log = \"0.4.3\"\n-url = \"1.1.0\"\n url_serde = \"0.2.0\"\n \n+libsyntax2 = { path = \"../libsyntax2\" }\n libeditor = { path = \"../libeditor\" }\n libanalysis = { path = \"../libanalysis\" }\n+\n+[dependencies.languageserver-types]\n+git = \"https://github.com/matklad/languageserver-types\"\n+rev = \"70e6bf548b901f01dc249c20378d26dd4996c25f\"\n+"}, {"sha": "dca07ebc987b4cfff27fe0a7f09981d102695703", "filename": "crates/server/src/caps.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fcaps.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -23,7 +23,7 @@ pub const SERVER_CAPABILITIES: ServerCapabilities = ServerCapabilities {\n     implementation_provider: None,\n     references_provider: None,\n     document_highlight_provider: None,\n-    document_symbol_provider: None,\n+    document_symbol_provider: Some(true),\n     workspace_symbol_provider: None,\n     code_action_provider: None,\n     code_lens_provider: None,"}, {"sha": "51e940ef7c73dd8cb4776f657e704b4eb2078a91", "filename": "crates/server/src/handlers.rs", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fhandlers.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -1,5 +1,5 @@\n-use url::Url;\n-use languageserver_types::{Range, Position, Diagnostic, DiagnosticSeverity};\n+use languageserver_types::{Range, Position, Diagnostic, DiagnosticSeverity, Url, DocumentSymbol, SymbolKind};\n+use libsyntax2::SyntaxKind;\n use libanalysis::World;\n use libeditor::{self, LineIndex, LineCol, TextRange, TextUnit};\n \n@@ -34,6 +34,50 @@ pub fn handle_extend_selection(\n     Ok(req::ExtendSelectionResult { selections })\n }\n \n+pub fn handle_document_symbol(\n+    world: World,\n+    params: req::DocumentSymbolParams,\n+) -> Result<Option<req::DocumentSymbolResponse>> {\n+    let path = params.text_document.file_path()?;\n+    let file = world.file_syntax(&path)?;\n+    let line_index = world.file_line_index(&path)?;\n+\n+    let mut res: Vec<DocumentSymbol> = Vec::new();\n+\n+    for symbol in libeditor::file_symbols(&file) {\n+        let doc_symbol = DocumentSymbol {\n+            name: symbol.name.clone(),\n+            detail: Some(symbol.name),\n+            kind: to_symbol_kind(symbol.kind),\n+            deprecated: None,\n+            range: to_vs_range(&line_index, symbol.node_range),\n+            selection_range: to_vs_range(&line_index, symbol.name_range),\n+            children: None,\n+        };\n+        if let Some(idx) = symbol.parent {\n+            let children = &mut res[idx].children;\n+            if children.is_none() {\n+                *children = Some(Vec::new());\n+            }\n+            children.as_mut().unwrap().push(doc_symbol);\n+        } else {\n+            res.push(doc_symbol);\n+        }\n+    }\n+    Ok(Some(req::DocumentSymbolResponse::Nested(res)))\n+}\n+\n+fn to_symbol_kind(kind: SyntaxKind) -> SymbolKind {\n+    match kind {\n+        SyntaxKind::FUNCTION => SymbolKind::Function,\n+        SyntaxKind::STRUCT => SymbolKind::Struct,\n+        SyntaxKind::ENUM => SymbolKind::Enum,\n+        SyntaxKind::TRAIT => SymbolKind::Interface,\n+        SyntaxKind::MODULE => SymbolKind::Module,\n+        _ => SymbolKind::Variable,\n+    }\n+}\n+\n pub fn publish_diagnostics(world: World, uri: Url) -> Result<req::PublishDiagnosticsParams> {\n     let path = uri.file_path()?;\n     let file = world.file_syntax(&path)?;"}, {"sha": "916638d49aa7beeb1a319c8a8174144ed53a330f", "filename": "crates/server/src/main.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fmain.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -11,11 +11,11 @@ extern crate crossbeam_channel;\n extern crate threadpool;\n #[macro_use]\n extern crate log;\n-extern crate url;\n extern crate url_serde;\n extern crate flexi_logger;\n extern crate libeditor;\n extern crate libanalysis;\n+extern crate libsyntax2;\n \n mod io;\n mod caps;\n@@ -27,12 +27,13 @@ mod util;\n use threadpool::ThreadPool;\n use crossbeam_channel::{bounded, Sender, Receiver};\n use flexi_logger::Logger;\n-use url::Url;\n+use languageserver_types::Url;\n use libanalysis::{WorldState, World};\n \n use ::{\n     io::{Io, RawMsg, RawRequest},\n-    handlers::{handle_syntax_tree, handle_extend_selection, publish_diagnostics, publish_decorations},\n+    handlers::{handle_syntax_tree, handle_extend_selection, publish_diagnostics, publish_decorations,\n+               handle_document_symbol},\n     util::{FilePath, FnBox}\n };\n \n@@ -178,6 +179,9 @@ fn main_loop(\n                 handle_request_on_threadpool::<req::ExtendSelection>(\n                     &mut req, pool, world, &sender, handle_extend_selection\n                 )?;\n+                handle_request_on_threadpool::<req::DocumentSymbolRequest>(\n+                    &mut req, pool, world, &sender, handle_document_symbol\n+                )?;\n                 let mut shutdown = false;\n                 dispatch::handle_request::<req::Shutdown, _>(&mut req, |(), resp| {\n                     resp.result(io, ())?;"}, {"sha": "6a0926084934de8431e32f662f1a692f14979340", "filename": "crates/server/src/req.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Freq.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -1,11 +1,11 @@\n use serde::{ser::Serialize, de::DeserializeOwned};\n-use url::Url;\n-use languageserver_types::{TextDocumentIdentifier, Range};\n+use languageserver_types::{TextDocumentIdentifier, Range, Url};\n use url_serde;\n \n pub use languageserver_types::{\n     request::*, notification::*,\n     InitializeResult, PublishDiagnosticsParams,\n+    DocumentSymbolParams, DocumentSymbolResponse\n };\n \n "}, {"sha": "e4c226f9390788c50780edda4df0140feb3ed310", "filename": "crates/server/src/util.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2291d6a760f8a2d15074b5874facb03f5f838bc/crates%2Fserver%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Futil.rs?ref=f2291d6a760f8a2d15074b5874facb03f5f838bc", "patch": "@@ -1,5 +1,6 @@\n use std::path::PathBuf;\n-use languageserver_types::{TextDocumentItem, VersionedTextDocumentIdentifier, TextDocumentIdentifier};\n+use languageserver_types::{TextDocumentItem, VersionedTextDocumentIdentifier,\n+                           TextDocumentIdentifier, Url};\n use ::{Result};\n \n pub trait FnBox<A, R>: Send {\n@@ -34,7 +35,7 @@ impl FilePath for TextDocumentIdentifier {\n     }\n }\n \n-impl FilePath for ::url::Url {\n+impl FilePath for Url {\n     fn file_path(&self) -> Result<PathBuf> {\n         self.to_file_path()\n             .map_err(|()| format_err!(\"invalid uri: {}\", self))"}]}