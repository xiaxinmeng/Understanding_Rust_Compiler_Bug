{"sha": "839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "node_id": "C_kwDOAAsO6NoAKDgzOWMxMjBiNDBiZjE0Y2Y0ZGQ1MWIwM2IwYWYzY2U3ZWFmMDUwMmQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-29T14:09:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-29T14:09:18Z"}, "message": "fmt", "tree": {"sha": "fc2f5594433ae9385b6a5b2e8e5e2b81aedcc2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc2f5594433ae9385b6a5b2e8e5e2b81aedcc2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "html_url": "https://github.com/rust-lang/rust/commit/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f389d46b04c42c3f85ceeb182eabeac94a392b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f389d46b04c42c3f85ceeb182eabeac94a392b7b", "html_url": "https://github.com/rust-lang/rust/commit/f389d46b04c42c3f85ceeb182eabeac94a392b7b"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "5926832011583e5ffe9d41f2c65368493829f486", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 26, "deletions": 13, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "patch": "@@ -877,11 +877,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"atomic_fence_acqrel\" => this.atomic_fence(args, AtomicFenceOp::AcqRel)?,\n             \"atomic_fence_seqcst\" => this.atomic_fence(args, AtomicFenceOp::SeqCst)?,\n \n-            \"atomic_singlethreadfence_acquire\" => this.compiler_fence(args, AtomicFenceOp::Acquire)?,\n-            \"atomic_singlethreadfence_release\" => this.compiler_fence(args, AtomicFenceOp::Release)?,\n+            \"atomic_singlethreadfence_acquire\" =>\n+                this.compiler_fence(args, AtomicFenceOp::Acquire)?,\n+            \"atomic_singlethreadfence_release\" =>\n+                this.compiler_fence(args, AtomicFenceOp::Release)?,\n             \"atomic_singlethreadfence_acqrel\" =>\n                 this.compiler_fence(args, AtomicFenceOp::AcqRel)?,\n-            \"atomic_singlethreadfence_seqcst\" => this.compiler_fence(args, AtomicFenceOp::SeqCst)?,\n+            \"atomic_singlethreadfence_seqcst\" =>\n+                this.compiler_fence(args, AtomicFenceOp::SeqCst)?,\n \n             \"atomic_xchg_seqcst\" => this.atomic_exchange(args, dest, AtomicRwOp::SeqCst)?,\n             \"atomic_xchg_acquire\" => this.atomic_exchange(args, dest, AtomicRwOp::Acquire)?,\n@@ -1036,27 +1039,37 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             \"atomic_xsub_relaxed\" =>\n                 this.atomic_op(args, dest, AtomicOp::MirOp(BinOp::Sub, false), AtomicRwOp::Relaxed)?,\n             \"atomic_min_seqcst\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::SeqCst)?,\n-            \"atomic_min_acquire\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Acquire)?,\n-            \"atomic_min_release\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Release)?,\n+            \"atomic_min_acquire\" =>\n+                this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Acquire)?,\n+            \"atomic_min_release\" =>\n+                this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Release)?,\n             \"atomic_min_acqrel\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::AcqRel)?,\n             \"atomic_min_relaxed\" =>\n                 this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Relaxed)?,\n             \"atomic_max_seqcst\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::SeqCst)?,\n-            \"atomic_max_acquire\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Acquire)?,\n-            \"atomic_max_release\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Release)?,\n+            \"atomic_max_acquire\" =>\n+                this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Acquire)?,\n+            \"atomic_max_release\" =>\n+                this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Release)?,\n             \"atomic_max_acqrel\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::AcqRel)?,\n             \"atomic_max_relaxed\" =>\n                 this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Relaxed)?,\n-            \"atomic_umin_seqcst\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::SeqCst)?,\n-            \"atomic_umin_acquire\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Acquire)?,\n-            \"atomic_umin_release\" => this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Release)?,\n+            \"atomic_umin_seqcst\" =>\n+                this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::SeqCst)?,\n+            \"atomic_umin_acquire\" =>\n+                this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Acquire)?,\n+            \"atomic_umin_release\" =>\n+                this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Release)?,\n             \"atomic_umin_acqrel\" =>\n                 this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::AcqRel)?,\n             \"atomic_umin_relaxed\" =>\n                 this.atomic_op(args, dest, AtomicOp::Min, AtomicRwOp::Relaxed)?,\n-            \"atomic_umax_seqcst\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::SeqCst)?,\n-            \"atomic_umax_acquire\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Acquire)?,\n-            \"atomic_umax_release\" => this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Release)?,\n+            \"atomic_umax_seqcst\" =>\n+                this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::SeqCst)?,\n+            \"atomic_umax_acquire\" =>\n+                this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Acquire)?,\n+            \"atomic_umax_release\" =>\n+                this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::Release)?,\n             \"atomic_umax_acqrel\" =>\n                 this.atomic_op(args, dest, AtomicOp::Max, AtomicRwOp::AcqRel)?,\n             \"atomic_umax_relaxed\" =>"}, {"sha": "b0c3cc889d5567dd64843f1b1df906534d8c856e", "filename": "tests/pass/atomic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d/tests%2Fpass%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/839c120b40bf14cf4dd51b03b0af3ce7eaf0502d/tests%2Fpass%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fatomic.rs?ref=839c120b40bf14cf4dd51b03b0af3ce7eaf0502d", "patch": "@@ -46,7 +46,6 @@ fn atomic_all_ops() {\n     static ATOMIC: AtomicIsize = AtomicIsize::new(0);\n     static ATOMIC_UNSIGNED: AtomicU64 = AtomicU64::new(0);\n \n-\n     // loads\n     for o in [Relaxed, Acquire, SeqCst] {\n         ATOMIC.load(o);"}]}