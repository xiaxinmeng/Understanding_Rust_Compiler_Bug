{"sha": "aef2ca6681cb2d5fb9ae613df8e94ad906c05085", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjJjYTY2ODFjYjJkNWZiOWFlNjEzZGY4ZTk0YWQ5MDZjMDUwODU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-05T23:07:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-05T23:07:32Z"}, "message": "Rollup merge of #74025 - tmiasko:try-unwrap, r=Amanieu\n\nRemove unnecessary release from Arc::try_unwrap\n\nThe thread that recovers the unique access to Arc inner value (e.g., drop\nwhen ref-count strong reaches zero, successful try_unwrap), ensures that\nother operations on Arc inner value happened before by synchronizing\nwith release operations performed when decrementing the reference counter.\n\nWhen try_unwrap succeeds, the current thread recovers the unique access\nto Arc inner value, so release is unnecessary.\n\nr? @Amanieu", "tree": {"sha": "11eba59c14a893f5ef4da0dd779b5b1df106eec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11eba59c14a893f5ef4da0dd779b5b1df106eec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef2ca6681cb2d5fb9ae613df8e94ad906c05085", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfAl00CRBK7hj4Ov3rIwAAdHIIAGgX5sb/eX7PH7DTUpiof3zD\nrUAR0LlJeG9tE0pB+zd0wogZ4GoMffHSzGdCIWVx+LMHpMHQYBJ9GJ1aP6VqoVmo\njmPekw1XEoL+BWz4FWihpdESInZhm86ylV6OmiC6uI1ibiD52SMSr7Akgj3Jxikk\nRoos5Djvd87Gg/cy4nGoUyuB6VX9u/Utkv3Ry/GX46G6vNjFgVhTEmfWWqC7Dc5W\n6svTaoXEzA/LUf/Y4YfvSoT4kJKRMuKyVskwRe9uWwpLkKEHHdNnUgIWYKHhmiZH\nAJYr6T/Ob+0Dt2RChca3eOMw7W2faqzlSv/z+JzhAToJkHinQAmathr4m6pUP4U=\n=Zor+\n-----END PGP SIGNATURE-----\n", "payload": "tree 11eba59c14a893f5ef4da0dd779b5b1df106eec5\nparent 0eadeda94509ef8e15af539fb3ae771aa84c98ad\nparent 8900502a887d98a8f5a6b8774f1c756e89d4c29f\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593990452 -0700\ncommitter GitHub <noreply@github.com> 1593990452 -0700\n\nRollup merge of #74025 - tmiasko:try-unwrap, r=Amanieu\n\nRemove unnecessary release from Arc::try_unwrap\n\nThe thread that recovers the unique access to Arc inner value (e.g., drop\nwhen ref-count strong reaches zero, successful try_unwrap), ensures that\nother operations on Arc inner value happened before by synchronizing\nwith release operations performed when decrementing the reference counter.\n\nWhen try_unwrap succeeds, the current thread recovers the unique access\nto Arc inner value, so release is unnecessary.\n\nr? @Amanieu\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef2ca6681cb2d5fb9ae613df8e94ad906c05085", "html_url": "https://github.com/rust-lang/rust/commit/aef2ca6681cb2d5fb9ae613df8e94ad906c05085", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef2ca6681cb2d5fb9ae613df8e94ad906c05085/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eadeda94509ef8e15af539fb3ae771aa84c98ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eadeda94509ef8e15af539fb3ae771aa84c98ad", "html_url": "https://github.com/rust-lang/rust/commit/0eadeda94509ef8e15af539fb3ae771aa84c98ad"}, {"sha": "8900502a887d98a8f5a6b8774f1c756e89d4c29f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8900502a887d98a8f5a6b8774f1c756e89d4c29f", "html_url": "https://github.com/rust-lang/rust/commit/8900502a887d98a8f5a6b8774f1c756e89d4c29f"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "2d6a3917c764e30eb33fb3e60eb47cb0653ddca5", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aef2ca6681cb2d5fb9ae613df8e94ad906c05085/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef2ca6681cb2d5fb9ae613df8e94ad906c05085/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=aef2ca6681cb2d5fb9ae613df8e94ad906c05085", "patch": "@@ -419,8 +419,7 @@ impl<T> Arc<T> {\n     #[inline]\n     #[stable(feature = \"arc_unique\", since = \"1.4.0\")]\n     pub fn try_unwrap(this: Self) -> Result<T, Self> {\n-        // See `drop` for why all these atomics are like this\n-        if this.inner().strong.compare_exchange(1, 0, Release, Relaxed).is_err() {\n+        if this.inner().strong.compare_exchange(1, 0, Relaxed, Relaxed).is_err() {\n             return Err(this);\n         }\n "}]}