{"sha": "473d0480954ac12bd6c73aa8dab20674ff74a21a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3M2QwNDgwOTU0YWMxMmJkNmM3M2FhOGRhYjIwNjc0ZmY3NGEyMWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T23:24:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:31Z"}, "message": "librustc: De-`@mut` several instances of `io::Writer`.\n\nThere are a few more related to pretty printing.", "tree": {"sha": "63464b8aca00e07dc09605975ef8adef8590efbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63464b8aca00e07dc09605975ef8adef8590efbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/473d0480954ac12bd6c73aa8dab20674ff74a21a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/473d0480954ac12bd6c73aa8dab20674ff74a21a", "html_url": "https://github.com/rust-lang/rust/commit/473d0480954ac12bd6c73aa8dab20674ff74a21a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/473d0480954ac12bd6c73aa8dab20674ff74a21a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992696fd2793f73c3ccc63df1d88650cfabff8c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/992696fd2793f73c3ccc63df1d88650cfabff8c4", "html_url": "https://github.com/rust-lang/rust/commit/992696fd2793f73c3ccc63df1d88650cfabff8c4"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "cda664213a5ed13f9e1f0d7826f67d96713311be", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=473d0480954ac12bd6c73aa8dab20674ff74a21a", "patch": "@@ -569,13 +569,14 @@ pub fn pretty_print_input(sess: Session,\n \n     let src = sess.codemap.get_filemap(source_name(input)).src;\n     let rdr = @mut MemReader::new(src.as_bytes().to_owned());\n+    let stdout = io::stdout();\n     pprust::print_crate(sess.codemap,\n                         token::get_ident_interner(),\n                         sess.span_diagnostic,\n                         &crate,\n                         source_name(input),\n                         rdr as @mut io::Reader,\n-                        @mut io::stdout() as @mut io::Writer,\n+                        @mut stdout as @mut io::Writer,\n                         annotation,\n                         is_expanded);\n }\n@@ -1080,7 +1081,7 @@ pub fn early_error(emitter: @diagnostic::Emitter, msg: &str) -> ! {\n     fail!();\n }\n \n-pub fn list_metadata(sess: Session, path: &Path, out: @mut io::Writer) {\n+pub fn list_metadata(sess: Session, path: &Path, out: &mut io::Writer) {\n     metadata::loader::list_file_metadata(\n         token::get_ident_interner(),\n         session::sess_os_to_meta_os(sess.targ_cfg.os), path, out);"}, {"sha": "a9f67e3108998e38fcbdd996b72e78385b612aad", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=473d0480954ac12bd6c73aa8dab20674ff74a21a", "patch": "@@ -275,8 +275,9 @@ pub fn run_compiler(args: &[~str], demitter: @diagnostic::Emitter) {\n     if ls {\n         match input {\n           d::file_input(ref ifile) => {\n+            let mut stdout = io::stdout();\n             d::list_metadata(sess, &(*ifile),\n-                                  @mut io::stdout() as @mut io::Writer);\n+                                  &mut stdout as &mut io::Writer);\n           }\n           d::str_input(_) => {\n             d::early_error(demitter, \"can not list metadata for stdin\");"}, {"sha": "b9a3bc47eb35fded2d90ec94216218f7868d5080", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=473d0480954ac12bd6c73aa8dab20674ff74a21a", "patch": "@@ -1110,7 +1110,7 @@ fn get_attributes(md: ebml::Doc) -> ~[ast::Attribute] {\n }\n \n fn list_crate_attributes(intr: @ident_interner, md: ebml::Doc, hash: &str,\n-                         out: @mut io::Writer) {\n+                         out: &mut io::Writer) {\n     write!(out, \"=Crate Attributes ({})=\\n\", hash);\n \n     let r = get_attributes(md);\n@@ -1153,7 +1153,7 @@ pub fn get_crate_deps(data: &[u8]) -> ~[CrateDep] {\n     return deps;\n }\n \n-fn list_crate_deps(data: &[u8], out: @mut io::Writer) {\n+fn list_crate_deps(data: &[u8], out: &mut io::Writer) {\n     write!(out, \"=External Dependencies=\\n\");\n \n     let r = get_crate_deps(data);\n@@ -1180,7 +1180,7 @@ pub fn get_crate_vers(data: &[u8]) -> @str {\n }\n \n pub fn list_crate_metadata(intr: @ident_interner, bytes: &[u8],\n-                           out: @mut io::Writer) {\n+                           out: &mut io::Writer) {\n     let hash = get_crate_hash(bytes);\n     let md = reader::Doc(bytes);\n     list_crate_attributes(intr, md, hash, out);"}, {"sha": "e954fc06c9435f9bc9c1759f65ca4859283172e3", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/473d0480954ac12bd6c73aa8dab20674ff74a21a/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=473d0480954ac12bd6c73aa8dab20674ff74a21a", "patch": "@@ -380,7 +380,7 @@ pub fn read_meta_section_name(os: Os) -> &'static str {\n pub fn list_file_metadata(intr: @ident_interner,\n                           os: Os,\n                           path: &Path,\n-                          out: @mut io::Writer) {\n+                          out: &mut io::Writer) {\n     match get_metadata_section(os, path) {\n       option::Some(bytes) => decoder::list_crate_metadata(intr,\n                                                           bytes.as_slice(),"}]}