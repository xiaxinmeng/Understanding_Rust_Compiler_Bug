{"sha": "b842177cfac47668376c98932a931eaf47eed542", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NDIxNzdjZmFjNDc2NjgzNzZjOTg5MzJhOTMxZWFmNDdlZWQ1NDI=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-06T22:43:11Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-07-07T21:08:43Z"}, "message": "Add the `alloc::prelude` module\n\nIt contains the re-exports that are in `std::prelude::v1`\nbut not in `core::prelude::v1`.\n\nCalling it prelude is somewhat of a misnomer since (unlike those modules\nin `std` or `core`) its contents are never implicitly imported in modules.\nRather it is intended to be used with an explicit glob import like\n`use alloc::prelude::*;`.\nHowever there is precedent for the same misnomer with `std::io::prelude`,\nfor example.\n\nThis new module is unstable with the same feature name as the `alloc` care.\nThey are proposed for stabilization together in RFC\nhttps://github.com/rust-lang/rfcs/pull/2480", "tree": {"sha": "52927db780f043931d98cdc8e550136a97feb75f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52927db780f043931d98cdc8e550136a97feb75f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b842177cfac47668376c98932a931eaf47eed542", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b842177cfac47668376c98932a931eaf47eed542", "html_url": "https://github.com/rust-lang/rust/commit/b842177cfac47668376c98932a931eaf47eed542", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b842177cfac47668376c98932a931eaf47eed542/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e06c875442e91cc2c597135d1e807a69e73eee26", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06c875442e91cc2c597135d1e807a69e73eee26", "html_url": "https://github.com/rust-lang/rust/commit/e06c875442e91cc2c597135d1e807a69e73eee26"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "ef619527e064a34d2f8f387881619570393cde5d", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b842177cfac47668376c98932a931eaf47eed542/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b842177cfac47668376c98932a931eaf47eed542/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=b842177cfac47668376c98932a931eaf47eed542", "patch": "@@ -169,7 +169,7 @@ pub mod collections;\n pub mod sync;\n pub mod rc;\n pub mod raw_vec;\n-\n+pub mod prelude;\n pub mod borrow;\n pub mod fmt;\n pub mod slice;"}, {"sha": "53b5e93a66e26d923d25d9d1d7ea94f2e0f8807c", "filename": "src/liballoc/prelude.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b842177cfac47668376c98932a931eaf47eed542/src%2Fliballoc%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b842177cfac47668376c98932a931eaf47eed542/src%2Fliballoc%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fprelude.rs?ref=b842177cfac47668376c98932a931eaf47eed542", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The alloc Prelude\n+//!\n+//! The purpose of this module is to alleviate imports of commonly-used\n+//! items of the `alloc` crate by adding a glob import to the top of modules:\n+//!\n+//! ```\n+//! # #![allow(unused_imports)]\n+//! # #![feature(alloc)]\n+//! extern crate alloc;\n+//! use alloc::prelude::*;\n+//! ```\n+\n+#![unstable(feature = \"alloc\", issue = \"27783\")]\n+\n+#[unstable(feature = \"alloc\", issue = \"27783\")] pub use borrow::ToOwned;\n+#[unstable(feature = \"alloc\", issue = \"27783\")] pub use boxed::Box;\n+#[unstable(feature = \"alloc\", issue = \"27783\")] pub use slice::SliceConcatExt;\n+#[unstable(feature = \"alloc\", issue = \"27783\")] pub use string::{String, ToString};\n+#[unstable(feature = \"alloc\", issue = \"27783\")] pub use vec::Vec;"}]}