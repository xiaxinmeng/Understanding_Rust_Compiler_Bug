{"sha": "f0683f98fa114cc4f9e795031f44be3eebb65790", "node_id": "C_kwDOAAsO6NoAKGYwNjgzZjk4ZmExMTRjYzRmOWU3OTUwMzFmNDRiZTNlZWJiNjU3OTA", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-11-24T03:22:29Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2021-11-25T03:41:47Z"}, "message": "Move themes and version into rustdoc-vars\n\nWe had been injecting the list of themes and the rustdoc version into\nmain.js by rewriting it at doc generation time. By avoiding this\nrewrite, we can make it easier to edit main.js without regenerating all\nthe docs.\n\nAdded a more convenient accessor for rustdoc-vars.\n\nChanged storage.js to not rely on resourcesSuffix. It could in theory\nuse rustdoc-vars, but because rustdoc-vars is at the end of the HTML,\nit's not available when storage.js runs (very early in page load).", "tree": {"sha": "8e63e8f5420674b0c742d1570b0ae0f3b8198340", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e63e8f5420674b0c742d1570b0ae0f3b8198340"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0683f98fa114cc4f9e795031f44be3eebb65790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0683f98fa114cc4f9e795031f44be3eebb65790", "html_url": "https://github.com/rust-lang/rust/commit/f0683f98fa114cc4f9e795031f44be3eebb65790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0683f98fa114cc4f9e795031f44be3eebb65790/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3649b90b33acbc0248efa0bc35675081977aefc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3649b90b33acbc0248efa0bc35675081977aefc2", "html_url": "https://github.com/rust-lang/rust/commit/3649b90b33acbc0248efa0bc35675081977aefc2"}], "stats": {"total": 86, "additions": 37, "deletions": 49}, "files": [{"sha": "17094aac4bed447574b6d741c4c3d2c3a5e3c804", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=f0683f98fa114cc4f9e795031f44be3eebb65790", "patch": "@@ -54,6 +54,7 @@ struct PageLayout<'a> {\n     sidebar: String,\n     content: String,\n     krate_with_trailing_slash: String,\n+    crate rustdoc_version: &'a str,\n }\n \n crate fn render<T: Print, S: Print>(\n@@ -71,6 +72,7 @@ crate fn render<T: Print, S: Print>(\n         .map(StylePath::basename)\n         .collect::<Result<_, Error>>()\n         .unwrap_or_default();\n+    let rustdoc_version = rustc_interface::util::version_str().unwrap_or(\"unknown version\");\n     let content = Buffer::html().to_display(t); // Note: This must happen before making the sidebar.\n     let sidebar = Buffer::html().to_display(sidebar);\n     let teractx = tera::Context::from_serialize(PageLayout {\n@@ -81,6 +83,7 @@ crate fn render<T: Print, S: Print>(\n         sidebar,\n         content,\n         krate_with_trailing_slash,\n+        rustdoc_version,\n     })\n     .unwrap();\n     templates.render(\"page.html\", &teractx).unwrap()"}, {"sha": "cbb5755863613e2c479edc3a19b7d8429e315bf9", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 2, "deletions": 32, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=f0683f98fa114cc4f9e795031f44be3eebb65790", "patch": "@@ -265,45 +265,15 @@ pub(super) fn write_shared(\n     let mut themes: Vec<&String> = themes.iter().collect();\n     themes.sort();\n \n-    // FIXME: this should probably not be a toolchain file since it depends on `--theme`.\n-    // But it seems a shame to copy it over and over when it's almost always the same.\n-    // Maybe we can change the representation to move this out of main.js?\n-    write_minify(\n-        \"main.js\",\n-        static_files::MAIN_JS\n-            .replace(\n-                \"/* INSERT THEMES HERE */\",\n-                &format!(\" = {}\", serde_json::to_string(&themes).unwrap()),\n-            )\n-            .replace(\n-                \"/* INSERT RUSTDOC_VERSION HERE */\",\n-                &format!(\n-                    \"rustdoc {}\",\n-                    rustc_interface::util::version_str().unwrap_or(\"unknown version\")\n-                ),\n-            ),\n-        cx,\n-        options,\n-    )?;\n+    write_minify(\"main.js\", static_files::MAIN_JS, cx, options)?;\n     write_minify(\"search.js\", static_files::SEARCH_JS, cx, options)?;\n     write_minify(\"settings.js\", static_files::SETTINGS_JS, cx, options)?;\n \n     if cx.include_sources {\n         write_minify(\"source-script.js\", static_files::sidebar::SOURCE_SCRIPT, cx, options)?;\n     }\n \n-    {\n-        write_minify(\n-            \"storage.js\",\n-            format!(\n-                \"var resourcesSuffix = \\\"{}\\\";{}\",\n-                cx.shared.resource_suffix,\n-                static_files::STORAGE_JS\n-            ),\n-            cx,\n-            options,\n-        )?;\n-    }\n+    write_minify(\"storage.js\", static_files::STORAGE_JS, cx, options)?;\n \n     if cx.shared.layout.scrape_examples_extension {\n         cx.write_minify("}, {"sha": "4843aa575b8c3ee2610b7361dd603b63993e5cd3", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=f0683f98fa114cc4f9e795031f44be3eebb65790", "patch": "@@ -37,14 +37,29 @@ if (!DOMTokenList.prototype.remove) {\n     };\n }\n \n-(function () {\n-    var rustdocVars = document.getElementById(\"rustdoc-vars\");\n-    if (rustdocVars) {\n-        window.rootPath = rustdocVars.attributes[\"data-root-path\"].value;\n-        window.currentCrate = rustdocVars.attributes[\"data-current-crate\"].value;\n-        window.searchJS = rustdocVars.attributes[\"data-search-js\"].value;\n-        window.searchIndexJS = rustdocVars.attributes[\"data-search-index-js\"].value;\n+// Get a value from the rustdoc-vars div, which is used to convey data from\n+// Rust to the JS. If there is no such element, return null.\n+function getVar(name) {\n+    var el = document.getElementById(\"rustdoc-vars\");\n+    if (el) {\n+        return el.attributes[\"data-\" + name].value;\n+    } else {\n+        return null;\n     }\n+}\n+\n+// Given a basename (e.g. \"storage\") and an extension (e.g. \".js\"), return a URL\n+// for a resource under the root-path, with the resource-suffix.\n+function resourcePath(basename, extension) {\n+    return getVar(\"root-path\") + basename + getVar(\"resource-suffix\") + extension;\n+}\n+\n+\n+(function () {\n+    window.rootPath = getVar(\"root-path\");\n+    window.currentCrate = getVar(\"current-crate\");\n+    window.searchJS =  resourcePath(\"search\", \"js\");\n+    window.searchIndexJS = resourcePath(\"search-index\", \"js\");\n     var sidebarVars = document.getElementById(\"sidebar-vars\");\n     if (sidebarVars) {\n         window.sidebarCurrent = {\n@@ -115,7 +130,7 @@ function hideThemeButtonState() {\n (function () {\n     var themeChoices = getThemesElement();\n     var themePicker = getThemePickerElement();\n-    var availableThemes/* INSERT THEMES HERE */;\n+    var availableThemes = getVar(\"themes\").split(\",\");\n \n     function switchThemeButtonState() {\n         if (themeChoices.style.display === \"block\") {\n@@ -980,7 +995,7 @@ function hideThemeButtonState() {\n         var rustdoc_version = document.createElement(\"span\");\n         rustdoc_version.className = \"bottom\";\n         var rustdoc_version_code = document.createElement(\"code\");\n-        rustdoc_version_code.innerText = \"/* INSERT RUSTDOC_VERSION HERE */\";\n+        rustdoc_version_code.innerText = \"rustdoc \" + getVar(\"rustdoc-version\");\n         rustdoc_version.appendChild(rustdoc_version_code);\n \n         container.appendChild(rustdoc_version);"}, {"sha": "606c237aea7d01bd5d5c728720043d0f3285d33c", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=f0683f98fa114cc4f9e795031f44be3eebb65790", "patch": "@@ -1,5 +1,3 @@\n-// From rust:\n-/* global resourcesSuffix */\n var darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n window.mainTheme = document.getElementById(\"mainThemeStyle\");\n@@ -107,9 +105,8 @@ function getCurrentValue(name) {\n }\n \n function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n-    var fullBasicCss = \"rustdoc\" + resourcesSuffix + \".css\";\n-    var fullNewTheme = newTheme + resourcesSuffix + \".css\";\n-    var newHref = mainStyleElem.href.replace(fullBasicCss, fullNewTheme);\n+    var newHref = mainStyleElem.href.replace(\n+        /\\/rustdoc([^/]*)\\.css/, \"/\" + newTheme + \"$1\" + \".css\");\n \n     // If this new value comes from a system setting or from the previously\n     // saved theme, no need to save it."}, {"sha": "44a3518828daf2b2a852877cb97b6918eb11b332", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/f0683f98fa114cc4f9e795031f44be3eebb65790/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=f0683f98fa114cc4f9e795031f44be3eebb65790", "patch": "@@ -14,12 +14,13 @@\n           id=\"mainThemeStyle\"> {#- -#}\n     {%- for theme in themes -%}\n         <link rel=\"stylesheet\" type=\"text/css\" {# -#}\n+            href=\"{{static_root_path | safe}}{{theme}}{{page.resource_suffix}}.css\" {#- -#}\n         {%- if theme == \"light\" -%}\n             id=\"themeStyle\"\n         {%- else -%}\n             disabled\n         {%- endif -%}\n-            href=\"{{static_root_path | safe}}{{theme}}{{page.resource_suffix}}.css\"> {#- -#}\n+        >\n     {%- endfor -%}\n     <script id=\"default-settings\" {# -#}\n       {% for k, v in layout.default_settings %}\n@@ -122,8 +123,10 @@\n     <div id=\"rustdoc-vars\" {# -#}\n          data-root-path=\"{{page.root_path | safe}}\" {# -#}\n          data-current-crate=\"{{layout.krate}}\" {# -#}\n-         data-search-index-js=\"{{page.root_path | safe}}search-index{{page.resource_suffix}}.js\" {# -#}\n-         data-search-js=\"{{static_root_path | safe}}search{{page.resource_suffix}}.js\"> {#- -#}\n+         data-themes=\"{{themes | join(sep=\",\") }}\" {# -#}\n+         data-resource-suffix=\"{{page.resource_suffix}}\" {# -#}\n+         data-rustdoc-version=\"{{rustdoc_version}}\" {# -#}\n+    > {#- -#}\n     </div>\n </body> {#- -#}\n </html> {#- -#}"}]}