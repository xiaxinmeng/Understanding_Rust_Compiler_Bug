{"sha": "0adcd641149bd32cb3d6d7ea8a8140322e500ae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZGNkNjQxMTQ5YmQzMmNiM2Q2ZDdlYThhODE0MDMyMmU1MDBhZTE=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-05T12:07:38Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2016-03-05T21:22:38Z"}, "message": "Add tests", "tree": {"sha": "c916c58017f72035f7e88bb02b5c2aeca14abb14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c916c58017f72035f7e88bb02b5c2aeca14abb14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0adcd641149bd32cb3d6d7ea8a8140322e500ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0adcd641149bd32cb3d6d7ea8a8140322e500ae1", "html_url": "https://github.com/rust-lang/rust/commit/0adcd641149bd32cb3d6d7ea8a8140322e500ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0adcd641149bd32cb3d6d7ea8a8140322e500ae1/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c20cd8fac97fe4d4594d6f78b3adb0e9b171c3bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c20cd8fac97fe4d4594d6f78b3adb0e9b171c3bf", "html_url": "https://github.com/rust-lang/rust/commit/c20cd8fac97fe4d4594d6f78b3adb0e9b171c3bf"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "86d7aef3d58eb38989e2277ba6f6337f560e81e6", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0adcd641149bd32cb3d6d7ea8a8140322e500ae1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0adcd641149bd32cb3d6d7ea8a8140322e500ae1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=0adcd641149bd32cb3d6d7ea8a8140322e500ae1", "patch": "@@ -1706,6 +1706,20 @@ mod test_map {\n         assert_eq!(*m.get(&2).unwrap(), 4);\n     }\n \n+    #[test]\n+    fn test_clone() {\n+        let mut m = HashMap::new();\n+        assert_eq!(m.len(), 0);\n+        assert!(m.insert(1, 2).is_none());\n+        assert_eq!(m.len(), 1);\n+        assert!(m.insert(2, 4).is_none());\n+        assert_eq!(m.len(), 2);\n+        let m2 = m.clone();\n+        assert_eq!(*m2.get(&1).unwrap(), 2);\n+        assert_eq!(*m2.get(&2).unwrap(), 4);\n+        assert_eq!(m2.len(), 2);\n+    }\n+\n     thread_local! { static DROP_VECTOR: RefCell<Vec<isize>> = RefCell::new(Vec::new()) }\n \n     #[derive(Hash, PartialEq, Eq)]\n@@ -1797,7 +1811,7 @@ mod test_map {\n     }\n \n     #[test]\n-    fn test_move_iter_drops() {\n+    fn test_into_iter_drops() {\n         DROP_VECTOR.with(|v| {\n             *v.borrow_mut() = vec![0; 200];\n         });\n@@ -1862,11 +1876,35 @@ mod test_map {\n     }\n \n     #[test]\n-    fn test_empty_pop() {\n+    fn test_empty_remove() {\n         let mut m: HashMap<isize, bool> = HashMap::new();\n         assert_eq!(m.remove(&0), None);\n     }\n \n+    #[test]\n+    fn test_empty_entry() {\n+        let mut m: HashMap<isize, bool> = HashMap::new();\n+        match m.entry(0) {\n+            Occupied(_) => panic!(),\n+            Vacant(_) => {}\n+        }\n+        assert!(*m.entry(0).or_insert(true));\n+        assert_eq!(m.len(), 1);\n+    }\n+\n+    #[test]\n+    fn test_empty_iter() {\n+        let mut m: HashMap<isize, bool> = HashMap::new();\n+        assert_eq!(m.drain().next(), None);\n+        assert_eq!(m.keys().next(), None);\n+        assert_eq!(m.values().next(), None);\n+        assert_eq!(m.iter().next(), None);\n+        assert_eq!(m.iter_mut().next(), None);\n+        assert_eq!(m.len(), 0);\n+        assert!(m.is_empty());\n+        assert_eq!(m.into_iter().next(), None);\n+    }\n+\n     #[test]\n     fn test_lots_of_insertions() {\n         let mut m = HashMap::new();"}]}