{"sha": "c6377f8e17cd7f3cf906397f3f48b522b0521471", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2Mzc3ZjhlMTdjZDdmM2NmOTA2Mzk3ZjNmNDhiNTIyYjA1MjE0NzE=", "commit": {"author": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-23T08:08:16Z"}, "committer": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2018-01-23T08:08:16Z"}, "message": "Avoid underflow in render_source_line\n\nWhile testing rust-lang/rust#47655 I was able to make the compiler panic\nwhen it's compiled with debug assertions:\n\n```shell\n> rustc /dev/null --crate-type proc-macro\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.25.0-dev running on x86_64-apple-darwin\n\nnote: run with `RUST_BACKTRACE=1` for a backtrace\n\nthread 'rustc' panicked at 'attempt to subtract with overflow', librustc_errors/emitter.rs:287:49\n```\n\nWithout debug assertions the following warning is emitted:\n\n```shell\n> rustc /dev/null --crate-type proc-macro\n\nwarning: unused variable: `registrar`\n --> /dev/null:0:1\n  |\n  |\n  = note: #[warn(unused_variables)] on by default\n  = note: to avoid this warning, consider using `_registrar` instead\n```\n\nThe panic is due to the unused variable warning being spanned to\n`/dev/null:0:1`. When `render_source_line` subtracts 1 from the line\nnumber to look up the source line it panics due to underflow. Without\ndebug assertions this would wrap and cause us to return a blank string\ninstead.\n\nFix by explicitly testing for 0 and exiting early. I'm unsure how to\nautomatically test this now that rust-lang/rust#46655 has been approved.", "tree": {"sha": "1f7f5665069becdbb55ff659f07f8103ab9c09ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f7f5665069becdbb55ff659f07f8103ab9c09ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6377f8e17cd7f3cf906397f3f48b522b0521471", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6377f8e17cd7f3cf906397f3f48b522b0521471", "html_url": "https://github.com/rust-lang/rust/commit/c6377f8e17cd7f3cf906397f3f48b522b0521471", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6377f8e17cd7f3cf906397f3f48b522b0521471/comments", "author": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56", "url": "https://api.github.com/repos/rust-lang/rust/commits/47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56", "html_url": "https://github.com/rust-lang/rust/commit/47a8eb7c4e24b61a8a9ab4eaff60ef65291aaa56"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "62ae8d855897e2e5a295da4e7e5f87f55fb3ab49", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c6377f8e17cd7f3cf906397f3f48b522b0521471/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6377f8e17cd7f3cf906397f3f48b522b0521471/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=c6377f8e17cd7f3cf906397f3f48b522b0521471", "patch": "@@ -284,6 +284,10 @@ impl EmitterWriter {\n                           line: &Line,\n                           width_offset: usize,\n                           code_offset: usize) -> Vec<(usize, Style)> {\n+        if line.line_index == 0 {\n+            return Vec::new();\n+        }\n+\n         let source_string = match file.get_line(line.line_index - 1) {\n             Some(s) => s,\n             None => return Vec::new(),"}]}