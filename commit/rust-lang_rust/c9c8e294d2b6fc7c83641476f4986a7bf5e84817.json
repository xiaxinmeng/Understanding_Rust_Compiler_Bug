{"sha": "c9c8e294d2b6fc7c83641476f4986a7bf5e84817", "node_id": "C_kwDOAAsO6NoAKGM5YzhlMjk0ZDJiNmZjN2M4MzY0MTQ3NmY0OTg2YTdiZjVlODQ4MTc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T03:26:54Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-19T15:31:57Z"}, "message": "HACK: self ty ambiguity hack", "tree": {"sha": "c44c6d5476daf00073f4cd3ff77220a9c51d5373", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c44c6d5476daf00073f4cd3ff77220a9c51d5373"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c8e294d2b6fc7c83641476f4986a7bf5e84817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c8e294d2b6fc7c83641476f4986a7bf5e84817", "html_url": "https://github.com/rust-lang/rust/commit/c9c8e294d2b6fc7c83641476f4986a7bf5e84817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c8e294d2b6fc7c83641476f4986a7bf5e84817/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "280f69d8585b676b0441cdb476634882ebe1b983", "url": "https://api.github.com/repos/rust-lang/rust/commits/280f69d8585b676b0441cdb476634882ebe1b983", "html_url": "https://github.com/rust-lang/rust/commit/280f69d8585b676b0441cdb476634882ebe1b983"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "2c92e7eb9ad3fa6ca5bc6d05d1c798b8ba4d2c53", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c9c8e294d2b6fc7c83641476f4986a7bf5e84817/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c8e294d2b6fc7c83641476f4986a7bf5e84817/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=c9c8e294d2b6fc7c83641476f4986a7bf5e84817", "patch": "@@ -1,7 +1,7 @@\n //! Code shared by trait and projection goals for candidate assembly.\n \n use super::infcx_ext::InferCtxtExt;\n-use super::{CanonicalResponse, EvalCtxt, Goal, QueryResult};\n+use super::{CanonicalResponse, Certainty, EvalCtxt, Goal, MaybeCause, QueryResult};\n use rustc_hir::def_id::DefId;\n use rustc_infer::traits::query::NoSolution;\n use rustc_infer::traits::util::elaborate_predicates;\n@@ -124,6 +124,16 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n         &mut self,\n         goal: Goal<'tcx, G>,\n     ) -> Vec<Candidate<'tcx>> {\n+        // HACK: `_: Trait` is ambiguous, because it may be satisfied via a builtin rule,\n+        // object bound, alias bound, etc. We are unable to determine this until we can at\n+        // least structually resolve the type one layer.\n+        if goal.predicate.self_ty().is_ty_var() {\n+            return vec![Candidate {\n+                source: CandidateSource::BuiltinImpl,\n+                result: self.make_canonical_response(Certainty::Maybe(MaybeCause::Ambiguity)).unwrap(),\n+            }];\n+        }\n+\n         let mut candidates = Vec::new();\n \n         self.assemble_candidates_after_normalizing_self_ty(goal, &mut candidates);"}]}