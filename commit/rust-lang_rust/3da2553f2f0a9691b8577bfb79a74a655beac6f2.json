{"sha": "3da2553f2f0a9691b8577bfb79a74a655beac6f2", "node_id": "C_kwDOAAsO6NoAKDNkYTI1NTNmMmYwYTk2OTFiODU3N2JmYjc5YTc0YTY1NWJlYWM2ZjI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-14T10:51:38Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-07-24T11:10:04Z"}, "message": "Add support for `#[rustc_must_implement_one_of]` to rustdoc", "tree": {"sha": "6a9c67b5878a8e90691cb8d8e70aaadcb21f8ca3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a9c67b5878a8e90691cb8d8e70aaadcb21f8ca3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da2553f2f0a9691b8577bfb79a74a655beac6f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da2553f2f0a9691b8577bfb79a74a655beac6f2", "html_url": "https://github.com/rust-lang/rust/commit/3da2553f2f0a9691b8577bfb79a74a655beac6f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da2553f2f0a9691b8577bfb79a74a655beac6f2/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a061724802377a21fc6dac1ebcbb9b8d1f558a", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a061724802377a21fc6dac1ebcbb9b8d1f558a", "html_url": "https://github.com/rust-lang/rust/commit/35a061724802377a21fc6dac1ebcbb9b8d1f558a"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "2c63f381851f4e33ac80ec21426b1ebcbf90c385", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -1991,6 +1991,7 @@ fn clean_maybe_renamed_item<'tcx>(\n             ItemKind::Trait(_, _, generics, bounds, item_ids) => {\n                 let items =\n                     item_ids.iter().map(|ti| cx.tcx.hir().trait_item(ti.id).clean(cx)).collect();\n+\n                 TraitItem(Trait {\n                     def_id,\n                     items,"}, {"sha": "82b06ae02bdcafdb07df4e68b7c30a8d9df428b3", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -1,9 +1,5 @@\n use clean::AttributesExt;\n \n-use std::cmp::Ordering;\n-use std::fmt;\n-use std::rc::Rc;\n-\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n@@ -15,6 +11,9 @@ use rustc_middle::ty::{Adt, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::abi::{Layout, Primitive, TagEncoding, Variants};\n+use std::cmp::Ordering;\n+use std::fmt;\n+use std::rc::Rc;\n \n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_section,\n@@ -37,6 +36,7 @@ use crate::html::markdown::{HeadingOffset, MarkdownSummaryLine};\n use crate::html::url_parts_builder::UrlPartsBuilder;\n \n use askama::Template;\n+use itertools::Itertools;\n \n const ITEM_TABLE_OPEN: &str = \"<div class=\\\"item-table\\\">\";\n const ITEM_TABLE_CLOSE: &str = \"</div>\";\n@@ -539,6 +539,8 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     let count_types = required_types.len() + provided_types.len();\n     let count_consts = required_consts.len() + provided_consts.len();\n     let count_methods = required_methods.len() + provided_methods.len();\n+    let must_implement_one_of_functions =\n+        cx.tcx().trait_def(t.def_id).must_implement_one_of.clone();\n \n     // Output the trait definition\n     wrap_into_docblock(w, |w| {\n@@ -784,13 +786,22 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     }\n \n     // Output the documentation for each function individually\n-    if !required_methods.is_empty() {\n+    if !required_methods.is_empty() || must_implement_one_of_functions.is_some() {\n         write_small_section_header(\n             w,\n             \"required-methods\",\n             \"Required Methods\",\n             \"<div class=\\\"methods\\\">\",\n         );\n+\n+        if let Some(list) = must_implement_one_of_functions.as_deref() {\n+            write!(\n+                w,\n+                \"<div class=\\\"stab must_implement\\\">At least one of {} methods is required.</div>\",\n+                list.iter().join(\", \")\n+            );\n+        }\n+\n         for m in required_methods {\n             trait_item(w, cx, m, it);\n         }"}, {"sha": "0329c7c4b74807114248aa3235507274f1f1defc", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -1110,7 +1110,7 @@ table,\n \tpadding: 0 20px 20px 17px;\n }\n \n-.item-info .stab {\n+.item-info,.methods .stab {\n \tdisplay: inline-block;\n }\n .stab {"}, {"sha": "11e68a155f8bdc9c0c98be6bf87f8f8ac4de3dd7", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -209,7 +209,8 @@ details.rustdoc-toggle > summary::before {\n .stab.unstable,\n .stab.deprecated,\n .stab.portability,\n-.stab.empty-impl {\n+.stab.empty-impl,\n+.stab.must_implement {\n \tcolor: #c5c5c5;\n \tbackground: #314559 !important;\n \tborder-style: none !important;"}, {"sha": "62d9eaa02e6a7e645b8969972c1d199e087b6f81", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -180,6 +180,7 @@ details.rustdoc-toggle > summary::before {\n .stab.empty-impl { background: #FFF5D6; border-color: #FFC600; color: #2f2f2f; }\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; color: #2f2f2f; }\n .stab.deprecated { background: #ffc4c4; border-color: #db7b7b; color: #2f2f2f; }\n+.stab.must_implement { background: #F3DFFF; border-color: #b07bdb; color: #2f2f2f; }\n .stab.portability { background: #F3DFFF; border-color: #b07bdb; color: #2f2f2f; }\n .stab.portability > code { background: none; }\n "}, {"sha": "b751acff152cb4b2863fcd600999bc4c57728033", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/3da2553f2f0a9691b8577bfb79a74a655beac6f2/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=3da2553f2f0a9691b8577bfb79a74a655beac6f2", "patch": "@@ -163,6 +163,7 @@ details.rustdoc-toggle > summary::before {\n .stab.empty-impl { background: #FFF5D6; border-color: #FFC600; }\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; }\n .stab.deprecated { background: #ffc4c4; border-color: #db7b7b; }\n+.stab.must_implement { background: #F3DFFF; border-color: #b07bdb; }\n .stab.portability { background: #F3DFFF; border-color: #b07bdb; }\n .stab.portability > code { background: none; }\n "}]}