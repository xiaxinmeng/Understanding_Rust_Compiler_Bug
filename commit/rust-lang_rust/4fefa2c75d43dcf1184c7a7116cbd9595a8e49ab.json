{"sha": "4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZWZhMmM3NWQ0M2RjZjExODRjN2E3MTE2Y2JkOTU5NWE4ZTQ5YWI=", "commit": {"author": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T19:57:13Z"}, "committer": {"name": "Naz\u0131m Can Alt\u0131nova", "email": "canaltinova@gmail.com", "date": "2020-07-17T19:57:13Z"}, "message": "Make unreachable_unchecked a const fn", "tree": {"sha": "62c35c8ddaacb6b5a6fc2ca60116115cff4f1d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62c35c8ddaacb6b5a6fc2ca60116115cff4f1d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "html_url": "https://github.com/rust-lang/rust/commit/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/comments", "author": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canova", "id": 466239, "node_id": "MDQ6VXNlcjQ2NjIzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/466239?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canova", "html_url": "https://github.com/canova", "followers_url": "https://api.github.com/users/canova/followers", "following_url": "https://api.github.com/users/canova/following{/other_user}", "gists_url": "https://api.github.com/users/canova/gists{/gist_id}", "starred_url": "https://api.github.com/users/canova/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canova/subscriptions", "organizations_url": "https://api.github.com/users/canova/orgs", "repos_url": "https://api.github.com/users/canova/repos", "events_url": "https://api.github.com/users/canova/events{/privacy}", "received_events_url": "https://api.github.com/users/canova/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3014f23ddd437d2ba9947383c4565d09c1eb39f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3014f23ddd437d2ba9947383c4565d09c1eb39f2", "html_url": "https://github.com/rust-lang/rust/commit/3014f23ddd437d2ba9947383c4565d09c1eb39f2"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "3116815f5d655a03461d6cfbc19f19a056aa78ec", "filename": "src/libcore/hint.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Fhint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Fhint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhint.rs?ref=4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "patch": "@@ -45,7 +45,8 @@ use crate::intrinsics;\n /// ```\n #[inline]\n #[stable(feature = \"unreachable\", since = \"1.27.0\")]\n-pub unsafe fn unreachable_unchecked() -> ! {\n+#[rustc_const_unstable(feature = \"const_unreachable_unchecked\", issue = \"53188\")]\n+pub const unsafe fn unreachable_unchecked() -> ! {\n     // SAFETY: the safety contract for `intrinsics::unreachable` must\n     // be upheld by the caller.\n     unsafe { intrinsics::unreachable() }"}, {"sha": "8f0cf4361e708c87b6d9fee3ce184897a83e7e52", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "patch": "@@ -932,6 +932,7 @@ extern \"rust-intrinsic\" {\n     ///\n     /// The stabilized version of this intrinsic is\n     /// [`std::hint::unreachable_unchecked`](../../std/hint/fn.unreachable_unchecked.html).\n+    #[rustc_const_unstable(feature = \"const_unreachable_unchecked\", issue = \"53188\")]\n     pub fn unreachable() -> !;\n \n     /// Informs the optimizer that a condition is always true."}, {"sha": "a8c9b8f2577002021aea1b9ba47d929d92a72b37", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "patch": "@@ -91,6 +91,7 @@\n #![feature(const_slice_ptr_len)]\n #![feature(const_type_name)]\n #![feature(const_likely)]\n+#![feature(const_unreachable_unchecked)]\n #![feature(custom_inner_attributes)]\n #![feature(decl_macro)]\n #![feature(doc_cfg)]"}, {"sha": "5836fc9c95a80af6cb330c332a4446f3094665e6", "filename": "src/librustc_mir/interpret/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fintrinsics.rs?ref=4fefa2c75d43dcf1184c7a7116cbd9595a8e49ab", "patch": "@@ -95,6 +95,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         let (dest, ret) = match ret {\n             None => match intrinsic_name {\n                 sym::transmute => throw_ub_format!(\"transmuting to uninhabited type\"),\n+                sym::unreachable => throw_ub!(Unreachable),\n                 sym::abort => M::abort(self)?,\n                 // Unsupported diverging intrinsic.\n                 _ => return Ok(false),"}]}