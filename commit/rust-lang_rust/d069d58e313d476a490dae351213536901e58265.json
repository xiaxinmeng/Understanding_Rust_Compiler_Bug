{"sha": "d069d58e313d476a490dae351213536901e58265", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNjlkNThlMzEzZDQ3NmE0OTBkYWUzNTEyMTM1MzY5MDFlNTgyNjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-19T23:06:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-19T23:06:40Z"}, "message": "auto merge of #11060 : pcwalton/rust/tydecode-pod, r=pcwalton\n\nr? @brson", "tree": {"sha": "467c9835701d52a541a9748e928d7bc0e83de5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/467c9835701d52a541a9748e928d7bc0e83de5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d069d58e313d476a490dae351213536901e58265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d069d58e313d476a490dae351213536901e58265", "html_url": "https://github.com/rust-lang/rust/commit/d069d58e313d476a490dae351213536901e58265", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d069d58e313d476a490dae351213536901e58265/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3906823765b1ec241df4906527a990ec945c4392", "url": "https://api.github.com/repos/rust-lang/rust/commits/3906823765b1ec241df4906527a990ec945c4392", "html_url": "https://github.com/rust-lang/rust/commit/3906823765b1ec241df4906527a990ec945c4392"}, {"sha": "b982f08a66a76306bf0dae04d8ce053beeec059b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b982f08a66a76306bf0dae04d8ce053beeec059b", "html_url": "https://github.com/rust-lang/rust/commit/b982f08a66a76306bf0dae04d8ce053beeec059b"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "9f91fa6ed8fb000f07bb40bbfffde7939a6ae6ea", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d069d58e313d476a490dae351213536901e58265/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d069d58e313d476a490dae351213536901e58265/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=d069d58e313d476a490dae351213536901e58265", "patch": "@@ -590,14 +590,17 @@ fn parse_bounds(st: &mut PState, conv: conv_did) -> ty::ParamBounds {\n             'Z' => {\n                 param_bounds.builtin_bounds.add(ty::BoundSized);\n             }\n+            'P' => {\n+                param_bounds.builtin_bounds.add(ty::BoundPod);\n+            }\n             'I' => {\n                 param_bounds.trait_bounds.push(@parse_trait_ref(st, |x,y| conv(x,y)));\n             }\n             '.' => {\n                 return param_bounds;\n             }\n-            _ => {\n-                fail!(\"parse_bounds: bad bounds\")\n+            c => {\n+                fail!(\"parse_bounds: bad bounds ('{}')\", c)\n             }\n         }\n     }"}, {"sha": "a8f8dbf318d2fd69a18f9cfa49907e20127e0e3a", "filename": "src/test/auxiliary/kinds_in_metadata.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fkinds_in_metadata.rs?ref=d069d58e313d476a490dae351213536901e58265", "patch": "@@ -0,0 +1,9 @@\n+/* Any copyright is dedicated to the Public Domain.\n+ * http://creativecommons.org/publicdomain/zero/1.0/ */\n+\n+// Tests that metadata serialization works for the `Pod` kind.\n+\n+#[crate_type=\"lib\"];\n+\n+pub fn f<T:Pod>() {}\n+"}, {"sha": "2345724e8c25173bdcb4e909f2c9e1e83dad3731", "filename": "src/test/auxiliary/trait_superkinds_in_metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Fauxiliary%2Ftrait_superkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Fauxiliary%2Ftrait_superkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait_superkinds_in_metadata.rs?ref=d069d58e313d476a490dae351213536901e58265", "patch": "@@ -15,3 +15,4 @@\n \n pub trait RequiresFreeze : Freeze { }\n pub trait RequiresRequiresFreezeAndSend : RequiresFreeze + Send { }\n+pub trait RequiresPod : Pod { }"}, {"sha": "f285275f5e2196cba932723fc8f7bdc5247ee7d8", "filename": "src/test/run-pass/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs?ref=d069d58e313d476a490dae351213536901e58265", "patch": "@@ -16,11 +16,14 @@\n \n extern mod trait_superkinds_in_metadata;\n use trait_superkinds_in_metadata::{RequiresRequiresFreezeAndSend, RequiresFreeze};\n+use trait_superkinds_in_metadata::{RequiresPod};\n \n struct X<T>(T);\n \n impl <T:Freeze> RequiresFreeze for X<T> { }\n \n impl <T:Freeze+Send> RequiresRequiresFreezeAndSend for X<T> { }\n \n+impl <T:Pod> RequiresPod for X<T> { }\n+\n fn main() { }"}, {"sha": "857cfccee9b19f18dcf39c12a6d96ca08f915dfb", "filename": "src/test/run-pass/kinds-in-metadata.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d069d58e313d476a490dae351213536901e58265/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkinds-in-metadata.rs?ref=d069d58e313d476a490dae351213536901e58265", "patch": "@@ -0,0 +1,16 @@\n+// xfail-fast\n+// aux-build:kinds_in_metadata.rs\n+\n+/* Any copyright is dedicated to the Public Domain.\n+ * http://creativecommons.org/publicdomain/zero/1.0/ */\n+\n+// Tests that metadata serialization works for the `Pod` kind.\n+\n+extern mod kinds_in_metadata;\n+\n+use kinds_in_metadata::f;\n+\n+pub fn main() {\n+    f::<int>();\n+}\n+"}]}