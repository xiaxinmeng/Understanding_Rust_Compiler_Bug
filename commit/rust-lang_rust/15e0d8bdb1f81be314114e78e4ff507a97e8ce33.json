{"sha": "15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "node_id": "C_kwDOAAsO6NoAKDE1ZTBkOGJkYjFmODFiZTMxNDExNGU3OGU0ZmY1MDdhOTdlOGNlMzM", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-04T14:36:40Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-06-03T16:46:20Z"}, "message": "Remove support for -Zast-json and -Zast-json-noexpand", "tree": {"sha": "6e16bf971c20ece9d39bff8a973879af7e01d4b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e16bf971c20ece9d39bff8a973879af7e01d4b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "html_url": "https://github.com/rust-lang/rust/commit/15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2591639ec714a4c415ae432353ae3413ac18b67", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2591639ec714a4c415ae432353ae3413ac18b67", "html_url": "https://github.com/rust-lang/rust/commit/a2591639ec714a4c415ae432353ae3413ac18b67"}], "stats": {"total": 114, "additions": 2, "deletions": 112}, "files": [{"sha": "09a3e53c7f0b312e9e14066ae4bcf7b2ca8c8182", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "patch": "@@ -41,9 +41,6 @@ use std::convert::TryFrom;\n use std::fmt;\n use std::mem;\n \n-#[cfg(test)]\n-mod tests;\n-\n /// A \"Label\" is an identifier of some point in sources,\n /// e.g. in the following code:\n ///"}, {"sha": "8ba55bf037b12bd15f1fdd1aeaeba8225442e215", "filename": "compiler/rustc_ast/src/ast/tests.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/compiler%2Frustc_ast%2Fsrc%2Fast%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/compiler%2Frustc_ast%2Fsrc%2Fast%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast%2Ftests.rs?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1,11 +0,0 @@\n-use super::*;\n-\n-// Are ASTs encodable?\n-#[test]\n-fn check_asts_encodable() {\n-    fn assert_encodable<\n-        T: for<'a> rustc_serialize::Encodable<rustc_serialize::json::Encoder<'a>>,\n-    >() {\n-    }\n-    assert_encodable::<Crate>();\n-}"}, {"sha": "179a184536efa5c0904666fae87a4cc8b280c620", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "patch": "@@ -343,10 +343,7 @@ fn run_compiler(\n                 return early_exit();\n             }\n \n-            if sess.opts.debugging_opts.parse_only\n-                || sess.opts.debugging_opts.show_span.is_some()\n-                || sess.opts.debugging_opts.ast_json_noexpand\n-            {\n+            if sess.opts.debugging_opts.parse_only || sess.opts.debugging_opts.show_span.is_some() {\n                 return early_exit();\n             }\n \n@@ -375,7 +372,7 @@ fn run_compiler(\n \n             queries.global_ctxt()?;\n \n-            if sess.opts.debugging_opts.no_analysis || sess.opts.debugging_opts.ast_json {\n+            if sess.opts.debugging_opts.no_analysis {\n                 return early_exit();\n             }\n "}, {"sha": "3c867e308c40e8666b7451a70a4cd8024f0f13fd", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "patch": "@@ -27,7 +27,6 @@ use rustc_passes::{self, hir_stats, layout_test};\n use rustc_plugin_impl as plugin;\n use rustc_query_impl::{OnDiskCache, Queries as TcxQueries};\n use rustc_resolve::{Resolver, ResolverArenas};\n-use rustc_serialize::json;\n use rustc_session::config::{CrateType, Input, OutputFilenames, OutputType};\n use rustc_session::cstore::{MetadataLoader, MetadataLoaderDyn};\n use rustc_session::output::{filename_for_input, filename_for_metadata};\n@@ -59,10 +58,6 @@ pub fn parse<'a>(sess: &'a Session, input: &Input) -> PResult<'a, ast::Crate> {\n         }\n     })?;\n \n-    if sess.opts.debugging_opts.ast_json_noexpand {\n-        println!(\"{}\", json::as_json(&krate));\n-    }\n-\n     if sess.opts.debugging_opts.input_stats {\n         eprintln!(\"Lines of code:             {}\", sess.source_map().count_lines());\n         eprintln!(\"Pre-expansion node count:  {}\", count_nodes(&krate));\n@@ -423,10 +418,6 @@ pub fn configure_and_expand(\n         hir_stats::print_ast_stats(&krate, \"POST EXPANSION AST STATS\");\n     }\n \n-    if sess.opts.debugging_opts.ast_json {\n-        println!(\"{}\", json::as_json(&krate));\n-    }\n-\n     resolver.resolve_crate(&krate);\n \n     // Needs to go *after* expansion to be able to check the results of macro expansion."}, {"sha": "a178cca6d108953633b02707ad48e4fd32e45f8c", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "patch": "@@ -644,8 +644,6 @@ fn test_debugging_options_tracking_hash() {\n     // Make sure that changing an [UNTRACKED] option leaves the hash unchanged.\n     // This list is in alphabetical order.\n     untracked!(assert_incr_state, Some(String::from(\"loaded\")));\n-    untracked!(ast_json, true);\n-    untracked!(ast_json_noexpand, true);\n     untracked!(borrowck, String::from(\"other\"));\n     untracked!(deduplicate_diagnostics, false);\n     untracked!(dep_tasks, true);"}, {"sha": "ae32fd2dee9220e0e6c0615432d8cd152f3604b9", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15e0d8bdb1f81be314114e78e4ff507a97e8ce33/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=15e0d8bdb1f81be314114e78e4ff507a97e8ce33", "patch": "@@ -1207,10 +1207,6 @@ options! {\n     assert_incr_state: Option<String> = (None, parse_opt_string, [UNTRACKED],\n         \"assert that the incremental cache is in given state: \\\n          either `loaded` or `not-loaded`.\"),\n-    ast_json: bool = (false, parse_bool, [UNTRACKED],\n-        \"print the AST as JSON and halt (default: no)\"),\n-    ast_json_noexpand: bool = (false, parse_bool, [UNTRACKED],\n-        \"print the pre-expansion AST as JSON and halt (default: no)\"),\n     binary_dep_depinfo: bool = (false, parse_bool, [TRACKED],\n         \"include artifacts (sysroot, crate dependencies) used during compilation in dep-info \\\n         (default: no)\"),"}, {"sha": "ce93e4b5d4b2dc9526f36e0d9d2875d6c54d5087", "filename": "src/test/ui/ast-json/ast-json-ice.rs", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-ice.rs?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1,56 +0,0 @@\n-// Test that AST json serialization doesn't ICE (#63728).\n-\n-// revisions: expand noexpand\n-\n-//[expand] compile-flags: -Zast-json\n-//[noexpand] compile-flags: -Zast-json-noexpand\n-\n-// check-pass\n-// dont-check-compiler-stdout - don't check for any AST change.\n-\n-enum V {\n-    A(i32),\n-    B { f: [i64; 3 + 4] }\n-}\n-\n-trait X {\n-    type Output;\n-    fn read(&self) -> Self::Output;\n-    fn write(&mut self, _: Self::Output);\n-}\n-\n-macro_rules! call_println {\n-    ($y:ident) => { println!(\"{}\", $y) }\n-}\n-\n-fn main() {\n-    let x: (i32) = 35;\n-    let y = x as i64<> + 5;\n-\n-    call_println!(y);\n-\n-    struct A;\n-}\n-\n-// Regressions tests for issues #78398 and #78510 (captured tokens in associated and foreign items)\n-\n-struct S;\n-\n-macro_rules! mac_extern {\n-    ($i:item) => {\n-        extern \"C\" { $i }\n-    }\n-}\n-macro_rules! mac_assoc {\n-    ($i:item) => {\n-        impl S { $i }\n-        trait Bar { $i }\n-    }\n-}\n-\n-mac_extern! {\n-    fn foo();\n-}\n-mac_assoc! {\n-    fn foo() {}\n-}"}, {"sha": "cba539f0065393ccc2ee66d3ae637e56b585cc2a", "filename": "src/test/ui/ast-json/ast-json-noexpand-output.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.rs?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1,10 +0,0 @@\n-// Check that AST json printing works.\n-#![crate_type = \"lib\"]\n-\n-// check-pass\n-// compile-flags: -Zast-json-noexpand\n-// normalize-stdout-test \":\\d+\" -> \":0\"\n-\n-// Only include a single item to reduce how often the test output needs\n-// updating.\n-extern crate core;"}, {"sha": "6f6e9b38e94245869caa66026c3552fb2ae9a2b2", "filename": "src/test/ui/ast-json/ast-json-noexpand-output.stdout", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1 +0,0 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"variant\":\"Ast\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"spans\":{\"inner_span\":{\"lo\":0,\"hi\":0},\"inject_use_span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"is_placeholder\":false}"}, {"sha": "2e009149ed68d3c38edbe621a0a81f3a3c5ce3c3", "filename": "src/test/ui/ast-json/ast-json-output.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.rs?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1,10 +0,0 @@\n-// Check that AST json printing works.\n-#![crate_type = \"lib\"]\n-\n-// check-pass\n-// compile-flags: -Zast-json\n-// normalize-stdout-test \":\\d+\" -> \":0\"\n-\n-// Only include a single item to reduce how often the test output needs\n-// updating.\n-extern crate core;"}, {"sha": "5637ce596b3144f9126130135f57ef1e9ba82f8c", "filename": "src/test/ui/ast-json/ast-json-output.stdout", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a2591639ec714a4c415ae432353ae3413ac18b67/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout?ref=a2591639ec714a4c415ae432353ae3413ac18b67", "patch": "@@ -1 +0,0 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"variant\":\"Ast\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"prelude_import\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"Use\",\"fields\":[{\"prefix\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"{{root}}\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"prelude\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"rust_2015\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"kind\":\"Glob\",\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"macro_use\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null},{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"spans\":{\"inner_span\":{\"lo\":0,\"hi\":0},\"inject_use_span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"is_placeholder\":false}"}]}