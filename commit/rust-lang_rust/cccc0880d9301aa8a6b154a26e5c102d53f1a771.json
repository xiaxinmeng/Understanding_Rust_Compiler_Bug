{"sha": "cccc0880d9301aa8a6b154a26e5c102d53f1a771", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjY2MwODgwZDkzMDFhYThhNmIxNTRhMjZlNWMxMDJkNTNmMWE3NzE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-02T01:40:15Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-02T23:50:13Z"}, "message": "Add `filename` to Parser", "tree": {"sha": "128fb62164497667dfcc8c7531219bd9d5a3076a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/128fb62164497667dfcc8c7531219bd9d5a3076a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cccc0880d9301aa8a6b154a26e5c102d53f1a771", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cccc0880d9301aa8a6b154a26e5c102d53f1a771", "html_url": "https://github.com/rust-lang/rust/commit/cccc0880d9301aa8a6b154a26e5c102d53f1a771", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cccc0880d9301aa8a6b154a26e5c102d53f1a771/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9e61c9f403e89415a3787fae90fef5aad8ee477", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9e61c9f403e89415a3787fae90fef5aad8ee477", "html_url": "https://github.com/rust-lang/rust/commit/b9e61c9f403e89415a3787fae90fef5aad8ee477"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "e166a36721967eb933824499da2288e41dfea944", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cccc0880d9301aa8a6b154a26e5c102d53f1a771/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cccc0880d9301aa8a6b154a26e5c102d53f1a771/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cccc0880d9301aa8a6b154a26e5c102d53f1a771", "patch": "@@ -273,6 +273,7 @@ pub struct Parser<'a> {\n     /// extra detail when the same error is seen twice\n     pub obsolete_set: HashSet<ObsoleteSyntax>,\n     /// Used to determine the path to externally loaded source files\n+    pub filename: Option<String>,\n     pub mod_path_stack: Vec<InternedString>,\n     /// Stack of spans of open delimiters. Used for error message.\n     pub open_braces: Vec<Span>,\n@@ -354,6 +355,9 @@ impl<'a> Parser<'a> {\n     {\n         let tok0 = rdr.real_token();\n         let span = tok0.sp;\n+        let filename = if span != codemap::DUMMY_SP {\n+            Some(sess.codemap().span_to_filename(span))\n+        } else { None };\n         let placeholder = TokenAndSpan {\n             tok: token::Underscore,\n             sp: span,\n@@ -382,6 +386,7 @@ impl<'a> Parser<'a> {\n             quote_depth: 0,\n             obsolete_set: HashSet::new(),\n             mod_path_stack: Vec::new(),\n+            filename: filename,\n             open_braces: Vec::new(),\n             owns_directory: true,\n             root_module_name: None,\n@@ -5325,7 +5330,7 @@ impl<'a> Parser<'a> {\n                    id: ast::Ident,\n                    outer_attrs: &[ast::Attribute],\n                    id_sp: Span) -> PResult<'a, ModulePathSuccess> {\n-        let mut prefix = PathBuf::from(&self.sess.codemap().span_to_filename(self.span));\n+        let mut prefix = PathBuf::from(self.filename.as_ref().unwrap());\n         prefix.pop();\n         let mut dir_path = prefix;\n         for part in &self.mod_path_stack {"}]}