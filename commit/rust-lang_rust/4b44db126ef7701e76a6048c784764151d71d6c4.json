{"sha": "4b44db126ef7701e76a6048c784764151d71d6c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNDRkYjEyNmVmNzcwMWU3NmE2MDQ4Yzc4NDc2NDE1MWQ3MWQ2YzQ=", "commit": {"author": {"name": "Eh2406", "email": "YeomanYaacov@gmail.com", "date": "2018-06-27T22:15:57Z"}, "committer": {"name": "Eh2406", "email": "YeomanYaacov@gmail.com", "date": "2018-06-28T14:18:32Z"}, "message": "each_affected_by_dirty", "tree": {"sha": "5a860b4f54d97d343532f65fc9eb4bc2063406e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a860b4f54d97d343532f65fc9eb4bc2063406e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b44db126ef7701e76a6048c784764151d71d6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b44db126ef7701e76a6048c784764151d71d6c4", "html_url": "https://github.com/rust-lang/rust/commit/4b44db126ef7701e76a6048c784764151d71d6c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b44db126ef7701e76a6048c784764151d71d6c4/comments", "author": {"login": "Eh2406", "id": 3709504, "node_id": "MDQ6VXNlcjM3MDk1MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3709504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eh2406", "html_url": "https://github.com/Eh2406", "followers_url": "https://api.github.com/users/Eh2406/followers", "following_url": "https://api.github.com/users/Eh2406/following{/other_user}", "gists_url": "https://api.github.com/users/Eh2406/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eh2406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eh2406/subscriptions", "organizations_url": "https://api.github.com/users/Eh2406/orgs", "repos_url": "https://api.github.com/users/Eh2406/repos", "events_url": "https://api.github.com/users/Eh2406/events{/privacy}", "received_events_url": "https://api.github.com/users/Eh2406/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Eh2406", "id": 3709504, "node_id": "MDQ6VXNlcjM3MDk1MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3709504?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Eh2406", "html_url": "https://github.com/Eh2406", "followers_url": "https://api.github.com/users/Eh2406/followers", "following_url": "https://api.github.com/users/Eh2406/following{/other_user}", "gists_url": "https://api.github.com/users/Eh2406/gists{/gist_id}", "starred_url": "https://api.github.com/users/Eh2406/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Eh2406/subscriptions", "organizations_url": "https://api.github.com/users/Eh2406/orgs", "repos_url": "https://api.github.com/users/Eh2406/repos", "events_url": "https://api.github.com/users/Eh2406/events{/privacy}", "received_events_url": "https://api.github.com/users/Eh2406/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bd2a63f29d4a64643aa6c25fe2e8390fa14b277", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bd2a63f29d4a64643aa6c25fe2e8390fa14b277", "html_url": "https://github.com/rust-lang/rust/commit/9bd2a63f29d4a64643aa6c25fe2e8390fa14b277"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "154db25145e35632fe5225b2e96c887094e1e410", "filename": "src/librustc_mir/borrow_check/nll/constraint_set.rs", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4b44db126ef7701e76a6048c784764151d71d6c4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b44db126ef7701e76a6048c784764151d71d6c4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fconstraint_set.rs?ref=4b44db126ef7701e76a6048c784764151d71d6c4", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n-use rustc_data_structures::fx::FxHashSet;\n-use rustc::ty::RegionVid;\n use rustc::mir::Location;\n+use rustc::ty::RegionVid;\n+use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n \n use std::fmt;\n use syntax_pos::Span;\n@@ -23,15 +23,11 @@ crate struct ConstraintSet {\n }\n \n impl ConstraintSet {\n-    pub fn new() -> Self {\n-        Default::default()\n-    }\n-\n     pub fn push(&mut self, constraint: OutlivesConstraint) {\n-        debug!(\"add_outlives({:?}: {:?} @ {:?}\",\n-               constraint.sup,\n-               constraint.sub,\n-               constraint.point);\n+        debug!(\n+            \"add_outlives({:?}: {:?} @ {:?}\",\n+            constraint.sup, constraint.sub, constraint.point\n+        );\n         if constraint.sup == constraint.sub {\n             // 'a: 'a is pretty uninteresting\n             return;\n@@ -57,6 +53,17 @@ impl ConstraintSet {\n \n         map\n     }\n+\n+    pub fn each_affected_by_dirty(\n+        &self,\n+        mut opt_dep_idx: Option<ConstraintIndex>,\n+        mut op: impl FnMut(ConstraintIndex),\n+    ) {\n+        while let Some(dep_idx) = opt_dep_idx {\n+            op(dep_idx);\n+            opt_dep_idx = self.constraints[dep_idx].next;\n+        }\n+    }\n }\n \n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n@@ -105,4 +112,3 @@ impl fmt::Debug for OutlivesConstraint {\n }\n \n newtype_index!(ConstraintIndex { DEBUG_FORMAT = \"ConstraintIndex({})\" });\n-"}, {"sha": "488223e22e2e3516873a5f600fc28f349801737d", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b44db126ef7701e76a6048c784764151d71d6c4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b44db126ef7701e76a6048c784764151d71d6c4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=4b44db126ef7701e76a6048c784764151d71d6c4", "patch": "@@ -466,13 +466,11 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n                 debug!(\"propagate_constraints:   sub={:?}\", constraint.sub);\n                 debug!(\"propagate_constraints:   sup={:?}\", constraint.sup);\n \n-                let mut opt_dep_idx = dependency_map[constraint.sup];\n-                while let Some(dep_idx) = opt_dep_idx {\n+                self.constraints.each_affected_by_dirty(dependency_map[constraint.sup], |dep_idx| {\n                     if clean_bit_vec.remove(dep_idx.index()) {\n                         dirty_list.push(dep_idx);\n                     }\n-                    opt_dep_idx = self.constraints.inner()[dep_idx].next;\n-                }\n+                });\n             }\n \n             debug!(\"\\n\");"}]}