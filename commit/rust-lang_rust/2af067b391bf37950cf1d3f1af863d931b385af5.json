{"sha": "2af067b391bf37950cf1d3f1af863d931b385af5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZjA2N2IzOTFiZjM3OTUwY2YxZDNmMWFmODYzZDkzMWIzODVhZjU=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-16T20:21:36Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-16T22:06:41Z"}, "message": "Resolve impl generic params", "tree": {"sha": "18d3174869ea831f7a2a975a78bde4d162a7b8c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18d3174869ea831f7a2a975a78bde4d162a7b8c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2af067b391bf37950cf1d3f1af863d931b385af5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2af067b391bf37950cf1d3f1af863d931b385af5", "html_url": "https://github.com/rust-lang/rust/commit/2af067b391bf37950cf1d3f1af863d931b385af5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2af067b391bf37950cf1d3f1af863d931b385af5/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7056245d9b59a4b3af7266dd271bab58cb6527", "url": "https://api.github.com/repos/rust-lang/rust/commits/da7056245d9b59a4b3af7266dd271bab58cb6527", "html_url": "https://github.com/rust-lang/rust/commit/da7056245d9b59a4b3af7266dd271bab58cb6527"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "7ecf8c368dc3fee0916099bbaf4b578f50b3c5e0", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2af067b391bf37950cf1d3f1af863d931b385af5/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af067b391bf37950cf1d3f1af863d931b385af5/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=2af067b391bf37950cf1d3f1af863d931b385af5", "patch": "@@ -106,7 +106,9 @@ impl ImplBlock {\n \n     pub fn resolver(&self, db: &impl HirDatabase) -> Resolver {\n         let r = self.module().resolver(db);\n-        // TODO: add generics\n+        // add generic params, if present\n+        let p = self.generic_params(db);\n+        let r = if !p.params.is_empty() { r.push_generic_params_scope(p) } else { r };\n         let r = r.push_impl_block_scope(self.clone());\n         r\n     }"}]}