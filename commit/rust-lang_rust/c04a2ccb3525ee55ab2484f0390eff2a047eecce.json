{"sha": "c04a2ccb3525ee55ab2484f0390eff2a047eecce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwNGEyY2NiMzUyNWVlNTVhYjI0ODRmMDM5MGVmZjJhMDQ3ZWVjY2U=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-05-31T19:15:59Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-06-04T16:46:00Z"}, "message": "Add new error-format value to use annotate-snippet output", "tree": {"sha": "bae76de8f873a78f754d465e96d3866f63137226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bae76de8f873a78f754d465e96d3866f63137226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c04a2ccb3525ee55ab2484f0390eff2a047eecce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJEBAABCgAuFiEEj4U0bmbiMSg/mWqvgqphyqETl+YFAlz2oEsQHGRldkBwaGFu\nc2NoLm5ldAAKCRCCqmHKoROX5p/YD/4wgkBpgzQQCZ3lMx6rUxjt/za+UzHS+e4r\ncEVwMDksKnrLnrZN5e0d+4HlIBzp/nG5eidWxDNIMTQsWmZumAT0VMsEftbC+5Ju\ntuHEhSPKBAldguBoDzS5WIzgKybx45gh4fNJwnNLl79SYZub52maj3oZFpwfA27T\nTO/CySL45B8HBatuOqIfyd6DXLgn1E4R1I74NvqyMOWMDcveAdSCpOJmbscU4JyT\nG+JX1BToXipNsXTZmgpsU7aB7D/RNyFjfCIZEQWTiGP5dGUi14HCTzGOSESd9AN8\njPc9jTqfbnmr3UbFvoxuSZV0MotEvFZ1pLCMAHzC4fRmwVd5XlfyhN46bBHhv+tL\ngHetKhWj533H09vaOtVCwnUfjv0dD+eBBLnNkc5ocPdd/n5j5WEjTl4wJOVitFkC\nCO587uy1wpk4XRtxVVwLbV7FdnljecT32oeZLrYUvZGWlBMgII29AmeeQLU3bO9C\nJirbM2e0gtQgk9js5YdOtVowsPDUykt6e2JhcVJaRFdTodowZ43yaUfuueqs3ru3\nbFRHQEEnCANTk8T9sNEs+n/Cgt1Le0n5Ao9OWPx+J9Oj8gL/5NVmYTdEbpx52XxI\nIrNCln7SwZGbCQUSMFd6PH7zNiBsebwl8r/iHUXDc9EkhcFRVii3VJYFYUjbAMn7\natbR7OXqMQ==\n=RrAK\n-----END PGP SIGNATURE-----", "payload": "tree bae76de8f873a78f754d465e96d3866f63137226\nparent 3f727aeeb7eb5a3d9a30131bdc462905900b6996\nauthor Philipp Hansch <dev@phansch.net> 1559330159 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1559666760 +0200\n\nAdd new error-format value to use annotate-snippet output\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c04a2ccb3525ee55ab2484f0390eff2a047eecce", "html_url": "https://github.com/rust-lang/rust/commit/c04a2ccb3525ee55ab2484f0390eff2a047eecce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c04a2ccb3525ee55ab2484f0390eff2a047eecce/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f727aeeb7eb5a3d9a30131bdc462905900b6996", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f727aeeb7eb5a3d9a30131bdc462905900b6996", "html_url": "https://github.com/rust-lang/rust/commit/3f727aeeb7eb5a3d9a30131bdc462905900b6996"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "6a35906d20c2f531dbd9a011d3c74a0652c2523b", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=c04a2ccb3525ee55ab2484f0390eff2a047eecce", "patch": "@@ -2002,6 +2002,9 @@ pub fn build_session_options_and_crate_config(\n         match matches.opt_str(\"error-format\").as_ref().map(|s| &s[..]) {\n             None |\n             Some(\"human\") => ErrorOutputType::HumanReadable(HumanReadableErrorType::Default(color)),\n+            Some(\"human-annotate-rs\") => {\n+                ErrorOutputType::HumanReadable(HumanReadableErrorType::AnnotateRs(color))\n+            },\n             Some(\"json\") => ErrorOutputType::Json { pretty: false, json_rendered },\n             Some(\"pretty-json\") => ErrorOutputType::Json { pretty: true, json_rendered },\n             Some(\"short\") => ErrorOutputType::HumanReadable(HumanReadableErrorType::Short(color)),\n@@ -2038,6 +2041,13 @@ pub fn build_session_options_and_crate_config(\n                 \"--error-format=pretty-json is unstable\",\n             );\n         }\n+        if let ErrorOutputType::HumanReadable(HumanReadableErrorType::AnnotateRs(_)) =\n+            error_format {\n+            early_error(\n+                ErrorOutputType::Json { pretty: false, json_rendered },\n+                \"--error-format=human-annotate-rs is unstable\",\n+            );\n+        }\n     }\n \n     if debugging_opts.pgo_gen.enabled() && debugging_opts.pgo_use.is_some() {"}, {"sha": "b3a9d764b1db01cc4b9766187f253eaf802815c0", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=c04a2ccb3525ee55ab2484f0390eff2a047eecce", "patch": "@@ -23,6 +23,8 @@ use rustc_data_structures::sync::{\n \n use errors::{DiagnosticBuilder, DiagnosticId, Applicability};\n use errors::emitter::{Emitter, EmitterWriter};\n+use errors::emitter::HumanReadableErrorType;\n+use errors::annotate_rs_emitter::{AnnotateRsEmitterWriter};\n use syntax::ast::{self, NodeId};\n use syntax::edition::Edition;\n use syntax::feature_gate::{self, AttributeType};\n@@ -1031,22 +1033,31 @@ fn default_emitter(\n     match (sopts.error_format, emitter_dest) {\n         (config::ErrorOutputType::HumanReadable(kind), dst) => {\n             let (short, color_config) = kind.unzip();\n-            let emitter = match dst {\n-                None => EmitterWriter::stderr(\n-                    color_config,\n-                    Some(source_map.clone()),\n-                    short,\n-                    sopts.debugging_opts.teach,\n-                ),\n-                Some(dst) => EmitterWriter::new(\n-                    dst,\n+\n+            if let HumanReadableErrorType::AnnotateRs(_) = kind {\n+                let emitter = AnnotateRsEmitterWriter::new(\n                     Some(source_map.clone()),\n                     short,\n-                    false, // no teach messages when writing to a buffer\n-                    false, // no colors when writing to a buffer\n-                ),\n-            };\n-            Box::new(emitter.ui_testing(sopts.debugging_opts.ui_testing))\n+                );\n+                Box::new(emitter.ui_testing(sopts.debugging_opts.ui_testing))\n+            } else {\n+                let emitter = match dst {\n+                    None => EmitterWriter::stderr(\n+                        color_config,\n+                        Some(source_map.clone()),\n+                        short,\n+                        sopts.debugging_opts.teach,\n+                    ),\n+                    Some(dst) => EmitterWriter::new(\n+                        dst,\n+                        Some(source_map.clone()),\n+                        short,\n+                        false, // no teach messages when writing to a buffer\n+                        false, // no colors when writing to a buffer\n+                    ),\n+                };\n+                Box::new(emitter.ui_testing(sopts.debugging_opts.ui_testing))\n+            }\n         },\n         (config::ErrorOutputType::Json { pretty, json_rendered }, None) => Box::new(\n             JsonEmitter::stderr("}, {"sha": "e52a81ec161ba382448636ca239456b4092efc6e", "filename": "src/test/ui/annotate-snippet/missing-type.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c04a2ccb3525ee55ab2484f0390eff2a047eecce/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fannotate-snippet%2Fmissing-type.rs?ref=c04a2ccb3525ee55ab2484f0390eff2a047eecce", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags: --error-format human-annotate-rs\n+\n+pub fn main() {\n+    let x: Iter;\n+}"}]}