{"sha": "b37cc851e65bd018556ccf7fc2cba1c7647b08db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzN2NjODUxZTY1YmQwMTg1NTZjY2Y3ZmMyY2JhMWM3NjQ3YjA4ZGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-05-29T15:31:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-01T15:00:18Z"}, "message": "rework to report errors from crates in a consistent order\n\nWe first collect unused crates into a map and then walk all extern\ncrates in crate order.", "tree": {"sha": "b915e795a7c442bbf820e6ba5e58c9925f7e45ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b915e795a7c442bbf820e6ba5e58c9925f7e45ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b37cc851e65bd018556ccf7fc2cba1c7647b08db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b37cc851e65bd018556ccf7fc2cba1c7647b08db", "html_url": "https://github.com/rust-lang/rust/commit/b37cc851e65bd018556ccf7fc2cba1c7647b08db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b37cc851e65bd018556ccf7fc2cba1c7647b08db/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b39808ffebbd185f0aae5bb0f14a9d09950b519", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b39808ffebbd185f0aae5bb0f14a9d09950b519", "html_url": "https://github.com/rust-lang/rust/commit/8b39808ffebbd185f0aae5bb0f14a9d09950b519"}], "stats": {"total": 156, "additions": 74, "deletions": 82}, "files": [{"sha": "41adde0d4a1887c16cc599f870289814b5b26486", "filename": "src/librustc_typeck/check_unused.rs", "status": "modified", "additions": 41, "deletions": 49, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Flibrustc_typeck%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Flibrustc_typeck%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck_unused.rs?ref=b37cc851e65bd018556ccf7fc2cba1c7647b08db", "patch": "@@ -120,62 +120,68 @@ fn unused_crates_lint<'tcx>(tcx: TyCtxt<'_, 'tcx, 'tcx>) {\n         .cloned()\n         .collect();\n \n-    // Issue lints for fully unused crates that suggest removing them.\n-    for (&def_id, &span) in &unused_extern_crates {\n-        assert_eq!(def_id.krate, LOCAL_CRATE);\n-        let hir_id = tcx.hir.definitions().def_index_to_hir_id(def_id.index);\n-        let id = tcx.hir.hir_to_node_id(hir_id);\n-        let msg = \"unused extern crate\";\n-        tcx.struct_span_lint_node(lint, id, span, msg)\n-            .span_suggestion_short(span, \"remove it\", \"\".to_string())\n-            .emit();\n-    }\n-\n-    // If we are not in Rust 2018 edition, we are done.\n-    if !tcx.sess.rust_2018() {\n-        return;\n-    }\n-\n-    // Otherwise, we can *also* suggest rewriting `extern crate`\n-    // into `use` etc.\n-    let mut crates_to_convert_to_use = vec![];\n+    // Collect all the extern crates (in a reliable order).\n+    let mut crates_to_lint = vec![];\n     tcx.hir.krate().visit_all_item_likes(&mut CollectExternCrateVisitor {\n         tcx,\n-        unused_extern_crates: &unused_extern_crates,\n-        crates_to_convert_to_use: &mut crates_to_convert_to_use,\n+        crates_to_lint: &mut crates_to_lint,\n     });\n \n-    for to_convert in &crates_to_convert_to_use {\n-        assert_eq!(to_convert.def_id.krate, LOCAL_CRATE);\n-        let hir_id = tcx.hir.definitions().def_index_to_hir_id(to_convert.def_id.index);\n+    for extern_crate in &crates_to_lint {\n+        assert!(extern_crate.def_id.is_local());\n+\n+        // If the crate is fully unused, we suggest removing it altogether.\n+        // We do this in any edition.\n+        if let Some(&span) = unused_extern_crates.get(&extern_crate.def_id) {\n+            assert_eq!(extern_crate.def_id.krate, LOCAL_CRATE);\n+            let hir_id = tcx.hir.definitions().def_index_to_hir_id(extern_crate.def_id.index);\n+            let id = tcx.hir.hir_to_node_id(hir_id);\n+            let msg = \"unused extern crate\";\n+            tcx.struct_span_lint_node(lint, id, span, msg)\n+                .span_suggestion_short(span, \"remove it\", \"\".to_string())\n+                .emit();\n+            continue;\n+        }\n+\n+        // If we are not in Rust 2018 edition, then we don't make any further\n+        // suggestions.\n+        if !tcx.sess.rust_2018() {\n+            continue;\n+        }\n+\n+        // If the extern crate has any attributes, they may have funky\n+        // semantics we can't faithfully represent using `use` (most\n+        // notably `#[macro_use]`). Ignore it.\n+        if !tcx.get_attrs(extern_crate.def_id).is_empty() {\n+            continue;\n+        }\n+\n+        // Otherwise, we can convert it into a `use` of some kind.\n+        let hir_id = tcx.hir.definitions().def_index_to_hir_id(extern_crate.def_id.index);\n         let id = tcx.hir.hir_to_node_id(hir_id);\n         let item = tcx.hir.expect_item(id);\n         let msg = \"`extern crate` is not idiomatic in the new edition\";\n-\n         let help = format!(\n             \"convert it to a `{}`\",\n             visibility_qualified(&item.vis, \"use\")\n         );\n-\n-        let base_replacement = match to_convert.orig_name {\n+        let base_replacement = match extern_crate.orig_name {\n             Some(orig_name) => format!(\"use {} as {};\", orig_name, item.name),\n             None => format!(\"use {};\", item.name),\n         };\n         let replacement = visibility_qualified(&item.vis, &base_replacement);\n-\n-        tcx.struct_span_lint_node(lint, id, to_convert.span, msg)\n-            .span_suggestion_short(to_convert.span, &help, replacement)\n+        tcx.struct_span_lint_node(lint, id, extern_crate.span, msg)\n+            .span_suggestion_short(extern_crate.span, &help, replacement)\n             .emit();\n     }\n }\n \n struct CollectExternCrateVisitor<'a, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n-    unused_extern_crates: &'a FxHashMap<DefId, Span>,\n-    crates_to_convert_to_use: &'a mut Vec<ExternCrateToConvertToUse>,\n+    crates_to_lint: &'a mut Vec<ExternCrateToLint>,\n }\n \n-struct ExternCrateToConvertToUse {\n+struct ExternCrateToLint {\n     /// def-id of the extern crate\n     def_id: DefId,\n \n@@ -192,22 +198,8 @@ impl<'a, 'tcx, 'v> ItemLikeVisitor<'v> for CollectExternCrateVisitor<'a, 'tcx> {\n     fn visit_item(&mut self, item: &hir::Item) {\n         if let hir::ItemExternCrate(orig_name) = item.node {\n             let extern_crate_def_id = self.tcx.hir.local_def_id(item.id);\n-\n-            // If the crate is fully unused, we are going to suggest\n-            // removing it anyway, so ignore it.\n-            if self.unused_extern_crates.contains_key(&extern_crate_def_id) {\n-                return;\n-            }\n-\n-            // If the extern crate has any attributes, they may have funky\n-            // semantics we can't entirely understand. Ignore it.\n-            if !self.tcx.get_attrs(extern_crate_def_id).is_empty() {\n-                return;\n-            }\n-\n-            // Otherwise, we can convert it into a `use` of some kind.\n-            self.crates_to_convert_to_use.push(\n-                ExternCrateToConvertToUse {\n+            self.crates_to_lint.push(\n+                ExternCrateToLint {\n                     def_id: extern_crate_def_id,\n                     span: item.span,\n                     orig_name,"}, {"sha": "a4307112157b068e6929388aad3faf9c90127ce6", "filename": "src/test/ui-fulldeps/unnecessary-extern-crate.stderr", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Funnecessary-extern-crate.stderr?ref=b37cc851e65bd018556ccf7fc2cba1c7647b08db", "patch": "@@ -1,8 +1,8 @@\n error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:51:5\n+  --> $DIR/unnecessary-extern-crate.rs:16:1\n    |\n-LL |     extern crate alloc;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: remove it\n+LL | extern crate alloc;\n+   | ^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n   --> $DIR/unnecessary-extern-crate.rs:13:9\n@@ -16,30 +16,6 @@ error: unused extern crate\n LL | extern crate alloc as x;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n-error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:55:5\n-   |\n-LL |     extern crate alloc as x;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n-\n-error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:68:9\n-   |\n-LL |         extern crate alloc;\n-   |         ^^^^^^^^^^^^^^^^^^^ help: remove it\n-\n-error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:16:1\n-   |\n-LL | extern crate alloc;\n-   | ^^^^^^^^^^^^^^^^^^^ help: remove it\n-\n-error: unused extern crate\n-  --> $DIR/unnecessary-extern-crate.rs:72:9\n-   |\n-LL |         extern crate alloc as x;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n-\n error: `extern crate` is not idiomatic in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:26:1\n    |\n@@ -76,6 +52,18 @@ error: `extern crate` is not idiomatic in the new edition\n LL |     pub(super) extern crate libc as d;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub(super) use`\n \n+error: unused extern crate\n+  --> $DIR/unnecessary-extern-crate.rs:51:5\n+   |\n+LL |     extern crate alloc;\n+   |     ^^^^^^^^^^^^^^^^^^^ help: remove it\n+\n+error: unused extern crate\n+  --> $DIR/unnecessary-extern-crate.rs:55:5\n+   |\n+LL |     extern crate alloc as x;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+\n error: `extern crate` is not idiomatic in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:59:5\n    |\n@@ -88,6 +76,18 @@ error: `extern crate` is not idiomatic in the new edition\n LL |     pub extern crate test as y;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert it to a `pub use`\n \n+error: unused extern crate\n+  --> $DIR/unnecessary-extern-crate.rs:68:9\n+   |\n+LL |         extern crate alloc;\n+   |         ^^^^^^^^^^^^^^^^^^^ help: remove it\n+\n+error: unused extern crate\n+  --> $DIR/unnecessary-extern-crate.rs:72:9\n+   |\n+LL |         extern crate alloc as x;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+\n error: `extern crate` is not idiomatic in the new edition\n   --> $DIR/unnecessary-extern-crate.rs:76:9\n    |"}, {"sha": "f2eed27a2669391ad97f746eaaad535ecf11ad56", "filename": "src/test/ui/suggestions/removing-extern-crate.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b37cc851e65bd018556ccf7fc2cba1c7647b08db/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fremoving-extern-crate.stderr?ref=b37cc851e65bd018556ccf7fc2cba1c7647b08db", "patch": "@@ -1,8 +1,8 @@\n warning: unused extern crate\n-  --> $DIR/removing-extern-crate.rs:24:5\n+  --> $DIR/removing-extern-crate.rs:19:1\n    |\n-LL |     extern crate std;\n-   |     ^^^^^^^^^^^^^^^^^ help: remove it\n+LL | extern crate std as foo;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n    |\n note: lint level defined here\n   --> $DIR/removing-extern-crate.rs:16:9\n@@ -24,8 +24,8 @@ LL |     extern crate std as foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n \n warning: unused extern crate\n-  --> $DIR/removing-extern-crate.rs:19:1\n+  --> $DIR/removing-extern-crate.rs:24:5\n    |\n-LL | extern crate std as foo;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove it\n+LL |     extern crate std;\n+   |     ^^^^^^^^^^^^^^^^^ help: remove it\n "}]}