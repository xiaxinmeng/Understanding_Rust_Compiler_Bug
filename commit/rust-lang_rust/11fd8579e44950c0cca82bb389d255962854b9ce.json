{"sha": "11fd8579e44950c0cca82bb389d255962854b9ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZmQ4NTc5ZTQ0OTUwYzBjY2E4MmJiMzg5ZDI1NTk2Mjg1NGI5Y2U=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-30T11:56:26Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-30T11:56:26Z"}, "message": "Emit explanatory note for functions in trait and impl items as well", "tree": {"sha": "66f66aec8861a311130c1abe796f075aa32bafce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66f66aec8861a311130c1abe796f075aa32bafce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11fd8579e44950c0cca82bb389d255962854b9ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11fd8579e44950c0cca82bb389d255962854b9ce", "html_url": "https://github.com/rust-lang/rust/commit/11fd8579e44950c0cca82bb389d255962854b9ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11fd8579e44950c0cca82bb389d255962854b9ce/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2586e962e0924d832c708a7308d88da27d8bc01b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2586e962e0924d832c708a7308d88da27d8bc01b", "html_url": "https://github.com/rust-lang/rust/commit/2586e962e0924d832c708a7308d88da27d8bc01b"}], "stats": {"total": 93, "additions": 83, "deletions": 10}, "files": [{"sha": "de38c41e93ccd87f442f23cce5d8f1eb8d03c06e", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -683,11 +683,23 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n             let encl_item_id = self.tcx.hir().get_parent_item(expr.hir_id);\n \n-            // Somewhat confusingly, get_parent_item() does not necessarily return an\n-            // item -- it can also return a Foreign-/Impl-/TraitItem or a Crate (see\n-            // issue #86721). If it does, we still report the same error.\n-            if let Some(hir::Node::Item(encl_item)) = self.tcx.hir().find(encl_item_id) {\n-                if let hir::ItemKind::Fn(..) = encl_item.kind {\n+            if self.tcx.hir().maybe_body_owned_by(encl_item_id).is_some() {\n+                if let Some(hir::Node::Item(hir::Item {\n+                    kind: hir::ItemKind::Fn(..),\n+                    span: encl_fn_span,\n+                    ..\n+                }))\n+                | Some(hir::Node::TraitItem(hir::TraitItem {\n+                    kind: hir::TraitItemKind::Fn(..),\n+                    span: encl_fn_span,\n+                    ..\n+                }))\n+                | Some(hir::Node::ImplItem(hir::ImplItem {\n+                    kind: hir::ImplItemKind::Fn(..),\n+                    span: encl_fn_span,\n+                    ..\n+                })) = self.tcx.hir().find(encl_item_id)\n+                {\n                     // We are inside a function body, so reporting \"return statement\n                     // outside of function body\" needs an explanation.\n \n@@ -701,7 +713,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     let encl_body = self.tcx.hir().body(encl_body_id);\n \n                     err.encl_body_span = Some(encl_body.value.span);\n-                    err.encl_fn_span = Some(encl_item.span);\n+                    err.encl_fn_span = Some(*encl_fn_span);\n                 }\n             }\n "}, {"sha": "4f076fa0693839cafcfbd01ecc7285ea9cc26ba0", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.rs?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -12,6 +12,25 @@ const C: [(); 42] = {\n     }]\n };\n \n+struct S {}\n+trait Tr {\n+    fn foo();\n+    fn bar() {\n+    //~^ NOTE: ...not the enclosing function body\n+        [(); return];\n+        //~^ ERROR: return statement outside of function body [E0572]\n+        //~| NOTE: the return is part of this body...\n+    }\n+}\n+impl Tr for S {\n+    fn foo() {\n+    //~^ NOTE: ...not the enclosing function body\n+        [(); return];\n+        //~^ ERROR: return statement outside of function body [E0572]\n+        //~| NOTE: the return is part of this body...\n+    }\n+}\n+\n fn main() {\n //~^ NOTE: ...not the enclosing function body\n     [(); return || {"}, {"sha": "d7eeb3a729099c5ca5d5c6628e93aefd1f4492d2", "filename": "src/test/ui/return/issue-86188-return-not-in-fn-body.stderr", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freturn%2Fissue-86188-return-not-in-fn-body.stderr?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -9,7 +9,31 @@ LL | |     }]\n    | |_____^\n \n error[E0572]: return statement outside of function body\n-  --> $DIR/issue-86188-return-not-in-fn-body.rs:17:10\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:20:14\n+   |\n+LL | /     fn bar() {\n+LL | |\n+LL | |         [(); return];\n+   | |              ^^^^^^ the return is part of this body...\n+LL | |\n+LL | |\n+LL | |     }\n+   | |_____- ...not the enclosing function body\n+\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:28:14\n+   |\n+LL | /     fn foo() {\n+LL | |\n+LL | |         [(); return];\n+   | |              ^^^^^^ the return is part of this body...\n+LL | |\n+LL | |\n+LL | |     }\n+   | |_____- ...not the enclosing function body\n+\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86188-return-not-in-fn-body.rs:36:10\n    |\n LL |  / fn main() {\n LL |  |\n@@ -23,6 +47,6 @@ LL | ||     }];\n LL |  | }\n    |  |_- ...not the enclosing function body\n \n-error: aborting due to 2 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0572`."}, {"sha": "b1111fcf1484c9ed77ae6bed29a9dae69e008c88", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rev1.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev1.stderr?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -1,5 +1,5 @@\n error[E0572]: return statement outside of function body\n-  --> $DIR/issue-86721-return-expr-ice.rs:6:22\n+  --> $DIR/issue-86721-return-expr-ice.rs:9:22\n    |\n LL |     const U: usize = return;\n    |                      ^^^^^^", "previous_filename": "src/test/ui/typeck/issue-86721-return-expr-ice.stderr"}, {"sha": "f489ae2002a1376fd5d680d5c32971a5c4b5e9da", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rev2.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rev2.stderr?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -0,0 +1,9 @@\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86721-return-expr-ice.rs:15:20\n+   |\n+LL |     fn foo(a: [(); return]);\n+   |                    ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0572`."}, {"sha": "cd7135f18b11241c7d9db761c948eee10b25e97f", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11fd8579e44950c0cca82bb389d255962854b9ce/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs?ref=11fd8579e44950c0cca82bb389d255962854b9ce", "patch": "@@ -1,8 +1,17 @@\n // Regression test for the ICE described in #86721.\n \n+// revisions: rev1 rev2\n+#![cfg_attr(any(), rev1, rev2)]\n #![crate_type=\"lib\"]\n \n+#[cfg(any(rev1))]\n trait T {\n     const U: usize = return;\n-    //~^ ERROR: return statement outside of function body [E0572]\n+    //[rev1]~^ ERROR: return statement outside of function body [E0572]\n+}\n+\n+#[cfg(any(rev2))]\n+trait T2 {\n+    fn foo(a: [(); return]);\n+    //[rev2]~^ ERROR: return statement outside of function body [E0572]\n }"}]}