{"sha": "ee073b5ec54a13b393071298acc54e1fd28cfcdf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDczYjVlYzU0YTEzYjM5MzA3MTI5OGFjYzU0ZTFmZDI4Y2ZjZGY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-11-08T17:17:37Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-12-16T10:33:52Z"}, "message": "cg_llvm: split dwarf filename and comp dir\n\nllvm-dwp concatenates `DW_AT_comp_dir` with `DW_AT_GNU_dwo_name` (only\nwhen `DW_AT_comp_dir` exists), which can result in it failing to find\nthe DWARF object files.\n\nIn earlier testing, `DW_AT_comp_dir` wasn't present in the final\nobject and the current directory was the output directory.\n\nWhen running tests through compiletest, the working directory of the\ncompilation is different from output directory and that resulted in\n`DW_AT_comp_dir` being in the object file (and set to the current\nworking directory, rather than the output directory), and\n`DW_AT_GNU_dwo_name` being set to the full path (rather than just\nthe filename), so llvm-dwp was failing.\n\nThis commit changes the compilation directory provided to LLVM to match\nthe output directory, where DWARF objects are output; and ensures that\nonly the filename is used for `DW_AT_GNU_dwo_name`.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "f25b341a81c834fae5e49f595c3f418808dd4489", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f25b341a81c834fae5e49f595c3f418808dd4489"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee073b5ec54a13b393071298acc54e1fd28cfcdf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl/Z4pAACgkQJZLnbIc4\nH9mh7w//UgONJd3euja/FI0K+pgOsBfp+ATR+UOX/etY9u0Cd89CyXKARk6x97nt\n4RUDUaEeDP720iiHDqEXEEVv+chk66lXhyaRz5qcb+Cyy+pZWvgQSYEJudbJOthU\nEKXU+yRszGrFd+pPPSeAiGL6Us/CqSPtS7nCs9eiFl9hy+XjxQbTzcfdYxzHwRVc\nUltTfnaMp464Fsp0D/BQJ5nYwOOZ45cfbZvhLjWJN8YvGwXdcjRGu40QwLwA9Q67\nl5HdUWpxLWHzcamDXzD7syqr7X9SSN4/3SrEh/tJoy7H/HsRDswmJMCIlcrIYOwn\nfcBdiBYmlCqwEOgjk6bbxcDAVFwBf+qWoMv1YwBlQk0tuEaObUn9fLDA92hqsw/L\n+EQIHjfMsuda132S7YFbzTPTW9iJWVQUodybAmJgnXqWoqpWY8ovRUKc1+V7F4oO\neieVZR+JN1FE5q2+YF8bV90s/u4Cpcmtw73WaBhQH7aQdm9qv5ctLtNU4L8OMgQH\n9sedZyEeKfCcBMSzUKuWftYKtS1pR3opoPfcYatVwPgkyaY4q2xZGpi+ld1sbNeI\nbtynhPfQ7MZqzsUR7A3G5aCMxB2JQ5HdxT9kxcsIR6YzKtI6fZCRhhcoLf7UMhQc\nUP+Mq+pZ9T14clnj/fDAkLUJEQVKk/hmDWaLyf90lXcSTXtSkVs=\n=ZM5D\n-----END PGP SIGNATURE-----", "payload": "tree f25b341a81c834fae5e49f595c3f418808dd4489\nparent 99ad915e32744eb771e9a0968bf7d0d1f52a9a07\nauthor David Wood <david@davidtw.co> 1604855857 +0000\ncommitter David Wood <david@davidtw.co> 1608114832 +0000\n\ncg_llvm: split dwarf filename and comp dir\n\nllvm-dwp concatenates `DW_AT_comp_dir` with `DW_AT_GNU_dwo_name` (only\nwhen `DW_AT_comp_dir` exists), which can result in it failing to find\nthe DWARF object files.\n\nIn earlier testing, `DW_AT_comp_dir` wasn't present in the final\nobject and the current directory was the output directory.\n\nWhen running tests through compiletest, the working directory of the\ncompilation is different from output directory and that resulted in\n`DW_AT_comp_dir` being in the object file (and set to the current\nworking directory, rather than the output directory), and\n`DW_AT_GNU_dwo_name` being set to the full path (rather than just\nthe filename), so llvm-dwp was failing.\n\nThis commit changes the compilation directory provided to LLVM to match\nthe output directory, where DWARF objects are output; and ensures that\nonly the filename is used for `DW_AT_GNU_dwo_name`.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee073b5ec54a13b393071298acc54e1fd28cfcdf", "html_url": "https://github.com/rust-lang/rust/commit/ee073b5ec54a13b393071298acc54e1fd28cfcdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee073b5ec54a13b393071298acc54e1fd28cfcdf/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99ad915e32744eb771e9a0968bf7d0d1f52a9a07", "url": "https://api.github.com/repos/rust-lang/rust/commits/99ad915e32744eb771e9a0968bf7d0d1f52a9a07", "html_url": "https://github.com/rust-lang/rust/commit/99ad915e32744eb771e9a0968bf7d0d1f52a9a07"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "29415973ed0739a7d1cc43d4e44e7b07255453f2", "filename": "compiler/rustc_codegen_llvm/src/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Flto.rs?ref=ee073b5ec54a13b393071298acc54e1fd28cfcdf", "patch": "@@ -734,7 +734,7 @@ pub unsafe fn optimize_thin_module(\n     let module_name = &thin_module.shared.module_names[thin_module.idx];\n     let split_dwarf_file = cgcx\n         .output_filenames\n-        .split_dwarf_file(cgcx.split_dwarf_kind, Some(module_name.to_str().unwrap()));\n+        .split_dwarf_filename(cgcx.split_dwarf_kind, Some(module_name.to_str().unwrap()));\n     let tm_factory_config = TargetMachineFactoryConfig { split_dwarf_file };\n     let tm =\n         (cgcx.tm_factory)(tm_factory_config).map_err(|e| write::llvm_err(&diag_handler, &e))?;"}, {"sha": "3fda1e26dae9e0d04ca7eab93ad2b8b77c1db82b", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=ee073b5ec54a13b393071298acc54e1fd28cfcdf", "patch": "@@ -95,7 +95,7 @@ pub fn create_informational_target_machine(sess: &Session) -> &'static mut llvm:\n pub fn create_target_machine(tcx: TyCtxt<'_>, mod_name: &str) -> &'static mut llvm::TargetMachine {\n     let split_dwarf_file = tcx\n         .output_filenames(LOCAL_CRATE)\n-        .split_dwarf_file(tcx.sess.opts.debugging_opts.split_dwarf, Some(mod_name));\n+        .split_dwarf_filename(tcx.sess.opts.debugging_opts.split_dwarf, Some(mod_name));\n     let config = TargetMachineFactoryConfig { split_dwarf_file };\n     target_machine_factory(&tcx.sess, tcx.backend_optimization_level(LOCAL_CRATE))(config)\n         .unwrap_or_else(|err| llvm_err(tcx.sess.diagnostic(), &err).raise())"}, {"sha": "fa285f3488f8415f28e28be1bbc0b81f44c71720", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=ee073b5ec54a13b393071298acc54e1fd28cfcdf", "patch": "@@ -993,12 +993,14 @@ pub fn compile_unit_metadata(\n     let producer = format!(\"clang LLVM ({})\", rustc_producer);\n \n     let name_in_debuginfo = name_in_debuginfo.to_string_lossy();\n-    let work_dir = tcx.sess.working_dir.0.to_string_lossy();\n     let flags = \"\\0\";\n+\n+    let out_dir = &tcx.output_filenames(LOCAL_CRATE).out_directory;\n     let split_name = tcx\n         .output_filenames(LOCAL_CRATE)\n-        .split_dwarf_file(tcx.sess.opts.debugging_opts.split_dwarf, Some(codegen_unit_name))\n+        .split_dwarf_filename(tcx.sess.opts.debugging_opts.split_dwarf, Some(codegen_unit_name))\n         .unwrap_or_default();\n+    let out_dir = out_dir.to_str().unwrap();\n     let split_name = split_name.to_str().unwrap();\n \n     // FIXME(#60020):\n@@ -1024,8 +1026,8 @@ pub fn compile_unit_metadata(\n             debug_context.builder,\n             name_in_debuginfo.as_ptr().cast(),\n             name_in_debuginfo.len(),\n-            work_dir.as_ptr().cast(),\n-            work_dir.len(),\n+            out_dir.as_ptr().cast(),\n+            out_dir.len(),\n             llvm::ChecksumKind::None,\n             ptr::null(),\n             0,"}, {"sha": "a58c2fbd8ab2c2219af509bac12afcd9268a357a", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=ee073b5ec54a13b393071298acc54e1fd28cfcdf", "patch": "@@ -356,7 +356,7 @@ impl ModuleLlvm {\n \n             let split_dwarf_file = cgcx\n                 .output_filenames\n-                .split_dwarf_file(cgcx.split_dwarf_kind, Some(name.to_str().unwrap()));\n+                .split_dwarf_filename(cgcx.split_dwarf_kind, Some(name.to_str().unwrap()));\n             let tm_factory_config = TargetMachineFactoryConfig { split_dwarf_file };\n \n             let tm = match (cgcx.tm_factory)(tm_factory_config) {"}, {"sha": "c20b11656b22960b0147a7a2b6b3bd626b19dafe", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee073b5ec54a13b393071298acc54e1fd28cfcdf/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=ee073b5ec54a13b393071298acc54e1fd28cfcdf", "patch": "@@ -617,9 +617,20 @@ impl OutputFilenames {\n         path\n     }\n \n+    /// Returns the name of the Split DWARF file - this can differ depending on which Split DWARF\n+    /// mode is being used, which is the logic that this function is intended to encapsulate.\n+    pub fn split_dwarf_filename(\n+        &self,\n+        split_dwarf_kind: SplitDwarfKind,\n+        cgu_name: Option<&str>,\n+    ) -> Option<PathBuf> {\n+        self.split_dwarf_path(split_dwarf_kind, cgu_name)\n+            .map(|path| path.strip_prefix(&self.out_directory).unwrap_or(&path).to_path_buf())\n+    }\n+\n     /// Returns the path for the Split DWARF file - this can differ depending on which Split DWARF\n     /// mode is being used, which is the logic that this function is intended to encapsulate.\n-    pub fn split_dwarf_file(\n+    pub fn split_dwarf_path(\n         &self,\n         split_dwarf_kind: SplitDwarfKind,\n         cgu_name: Option<&str>,"}]}