{"sha": "597360f49995c3c79f955ff7d61a52082382a412", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NzM2MGY0OTk5NWMzYzc5Zjk1NWZmN2Q2MWE1MjA4MjM4MmE0MTI=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-09-07T16:31:28Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-09-07T16:31:28Z"}, "message": "Simplify read_timespec error handling", "tree": {"sha": "211c820426185d81a6215a8696aad82f4ae765bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/211c820426185d81a6215a8696aad82f4ae765bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/597360f49995c3c79f955ff7d61a52082382a412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/597360f49995c3c79f955ff7d61a52082382a412", "html_url": "https://github.com/rust-lang/rust/commit/597360f49995c3c79f955ff7d61a52082382a412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/597360f49995c3c79f955ff7d61a52082382a412/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33e928c9ca456f36ac662657333d6ca046be17bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e928c9ca456f36ac662657333d6ca046be17bd", "html_url": "https://github.com/rust-lang/rust/commit/33e928c9ca456f36ac662657333d6ca046be17bd"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "9e4bc21ab1b382ca1f1c7f6e39e5eadca8980819", "filename": "src/helpers.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/597360f49995c3c79f955ff7d61a52082382a412/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/597360f49995c3c79f955ff7d61a52082382a412/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=597360f49995c3c79f955ff7d61a52082382a412", "patch": "@@ -530,23 +530,17 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let nanoseconds_scalar = this.read_scalar(nanoseconds_place.into())?;\n         let nanoseconds = nanoseconds_scalar.to_machine_isize(this)?;\n \n-        let seconds: u64 = if let Ok(s) = seconds.try_into() {\n-            s\n-        } else {\n+        Ok((move || {\n             // tv_sec must be non-negative.\n-            return Ok(None);\n-        };\n-        let nanoseconds: u32 = if let Ok(ns) = nanoseconds.try_into() {\n-            if ns >= 1_000_000_000 {\n+            let seconds: u64 = seconds.try_into().ok()?;\n+            // tv_nsec must be non-negative.\n+            let nanoseconds: u32 = nanoseconds.try_into().ok()?;\n+            if nanoseconds >= 1_000_000_000 {\n                 // tv_nsec must not be greater than 999,999,999.\n-                return Ok(None);\n+                return None;\n             }\n-            ns\n-        } else {\n-            // tv_nsec must be non-negative.\n-            return Ok(None);\n-        };\n-        Ok(Some(Duration::new(seconds, nanoseconds)))\n+            Some(Duration::new(seconds, nanoseconds))\n+        })())\n     }\n }\n "}]}