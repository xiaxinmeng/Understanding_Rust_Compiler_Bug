{"sha": "e5493a5ea260a4f112a081c4bc488d85049ca36c", "node_id": "C_kwDOAAsO6NoAKGU1NDkzYTVlYTI2MGE0ZjExMmEwODFjNGJjNDg4ZDg1MDQ5Y2EzNmM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-18T15:19:29Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-18T15:25:47Z"}, "message": "Remove Instance param of DebugContext::define_function", "tree": {"sha": "683dff1da11967a1e21b98f49609631680881e5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/683dff1da11967a1e21b98f49609631680881e5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5493a5ea260a4f112a081c4bc488d85049ca36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5493a5ea260a4f112a081c4bc488d85049ca36c", "html_url": "https://github.com/rust-lang/rust/commit/e5493a5ea260a4f112a081c4bc488d85049ca36c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5493a5ea260a4f112a081c4bc488d85049ca36c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a49416da6ddcbcbd40f7aadb06b71d77c23e8220", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49416da6ddcbcbd40f7aadb06b71d77c23e8220", "html_url": "https://github.com/rust-lang/rust/commit/a49416da6ddcbcbd40f7aadb06b71d77c23e8220"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b35f02e2d2d75a5567b91cb60fdaa2cd86138bef", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5493a5ea260a4f112a081c4bc488d85049ca36c/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5493a5ea260a4f112a081c4bc488d85049ca36c/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=e5493a5ea260a4f112a081c4bc488d85049ca36c", "patch": "@@ -14,11 +14,11 @@ use crate::prelude::*;\n use crate::pretty_clif::CommentWriter;\n \n struct CodegenedFunction<'tcx> {\n-    instance: Instance<'tcx>,\n     symbol_name: SymbolName<'tcx>,\n     func_id: FuncId,\n     func: Function,\n     clif_comments: CommentWriter,\n+    function_span: Span,\n     source_info_set: IndexSet<SourceInfo>,\n }\n \n@@ -108,8 +108,8 @@ fn codegen_fn<'tcx>(\n     tcx.sess.time(\"codegen clif ir\", || codegen_fn_body(&mut fx, start_block));\n \n     // Recover all necessary data from fx, before accessing func will prevent future access to it.\n-    let instance = fx.instance;\n     let clif_comments = fx.clif_comments;\n+    let function_span = fx.mir.span;\n     let source_info_set = fx.source_info_set;\n \n     fx.constants_cx.finalize(fx.tcx, &mut *fx.module);\n@@ -128,7 +128,7 @@ fn codegen_fn<'tcx>(\n     // Verify function\n     verify_func(tcx, &clif_comments, &func);\n \n-    CodegenedFunction { instance, symbol_name, func_id, func, clif_comments, source_info_set }\n+    CodegenedFunction { symbol_name, func_id, func, clif_comments, function_span, source_info_set }\n }\n \n fn compile_fn<'tcx>(\n@@ -214,10 +214,10 @@ fn compile_fn<'tcx>(\n     cx.profiler.verbose_generic_activity(\"generate debug info\").run(|| {\n         if let Some(debug_context) = debug_context {\n             debug_context.define_function(\n-                codegened_func.instance,\n                 codegened_func.func_id,\n                 codegened_func.symbol_name.name,\n                 context,\n+                codegened_func.function_span,\n                 &codegened_func.source_info_set,\n             );\n         }"}, {"sha": "9a0787508b751c34e7a8b9b4441cb4036a876867", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5493a5ea260a4f112a081c4bc488d85049ca36c/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5493a5ea260a4f112a081c4bc488d85049ca36c/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=e5493a5ea260a4f112a081c4bc488d85049ca36c", "patch": "@@ -97,14 +97,13 @@ impl<'tcx> DebugContext<'tcx> {\n \n     pub(crate) fn define_function(\n         &mut self,\n-        instance: Instance<'tcx>,\n         func_id: FuncId,\n         name: &str,\n         context: &Context,\n+        function_span: Span,\n         source_info_set: &indexmap::IndexSet<SourceInfo>,\n     ) {\n         let symbol = func_id.as_u32() as usize;\n-        let mir = self.tcx.instance_mir(instance.def);\n \n         // FIXME: add to appropriate scope instead of root\n         let scope = self.dwarf.unit.root();\n@@ -116,7 +115,8 @@ impl<'tcx> DebugContext<'tcx> {\n         entry.set(gimli::DW_AT_name, AttributeValue::StringRef(name_id));\n         entry.set(gimli::DW_AT_linkage_name, AttributeValue::StringRef(name_id));\n \n-        let end = self.create_debug_lines(symbol, entry_id, context, mir.span, source_info_set);\n+        let end =\n+            self.create_debug_lines(symbol, entry_id, context, function_span, source_info_set);\n \n         self.unit_range_list.0.push(Range::StartLength {\n             begin: Address::Symbol { symbol, addend: 0 },"}]}