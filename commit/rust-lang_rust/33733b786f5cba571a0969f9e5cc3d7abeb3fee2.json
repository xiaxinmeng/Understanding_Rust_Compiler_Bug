{"sha": "33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNzMzYjc4NmY1Y2JhNTcxYTA5NjlmOWU1Y2MzZDdhYmViM2ZlZTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-14T17:55:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-14T17:55:59Z"}, "message": "rollup merge of #24399: brson/stab", "tree": {"sha": "7351f19a6a8b6b9ca7188f458dceb0f08f73b7ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7351f19a6a8b6b9ca7188f458dceb0f08f73b7ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "html_url": "https://github.com/rust-lang/rust/commit/33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33733b786f5cba571a0969f9e5cc3d7abeb3fee2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84e4a724dcd48597336405c946061ab64ba3b19d", "url": "https://api.github.com/repos/rust-lang/rust/commits/84e4a724dcd48597336405c946061ab64ba3b19d", "html_url": "https://github.com/rust-lang/rust/commit/84e4a724dcd48597336405c946061ab64ba3b19d"}, {"sha": "942c97bce5a2266c86663b8a5cc13f0f1d0b3330", "url": "https://api.github.com/repos/rust-lang/rust/commits/942c97bce5a2266c86663b8a5cc13f0f1d0b3330", "html_url": "https://github.com/rust-lang/rust/commit/942c97bce5a2266c86663b8a5cc13f0f1d0b3330"}], "stats": {"total": 84, "additions": 56, "deletions": 28}, "files": [{"sha": "39a8c45b4d70705d5840f9126ed8259d561c5ee3", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 38, "deletions": 28, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/33733b786f5cba571a0969f9e5cc3d7abeb3fee2/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33733b786f5cba571a0969f9e5cc3d7abeb3fee2/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "patch": "@@ -57,36 +57,49 @@ impl<'a> Annotator<'a> {\n                    attrs: &Vec<Attribute>, item_sp: Span, f: F, required: bool) where\n         F: FnOnce(&mut Annotator),\n     {\n-        debug!(\"annotate(id = {:?}, attrs = {:?})\", id, attrs);\n-        match attr::find_stability(self.sess.diagnostic(), attrs, item_sp) {\n-            Some(stab) => {\n-                debug!(\"annotate: found {:?}\", stab);\n-                self.index.local.insert(id, stab.clone());\n-\n-                // Don't inherit #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-                if stab.level != attr::Stable {\n-                    let parent = replace(&mut self.parent, Some(stab));\n-                    f(self);\n-                    self.parent = parent;\n-                } else {\n+        if self.index.staged_api {\n+            debug!(\"annotate(id = {:?}, attrs = {:?})\", id, attrs);\n+            match attr::find_stability(self.sess.diagnostic(), attrs, item_sp) {\n+                Some(stab) => {\n+                    debug!(\"annotate: found {:?}\", stab);\n+                    self.index.local.insert(id, stab.clone());\n+\n+                    // Don't inherit #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+                    if stab.level != attr::Stable {\n+                        let parent = replace(&mut self.parent, Some(stab));\n+                        f(self);\n+                        self.parent = parent;\n+                    } else {\n+                        f(self);\n+                    }\n+                }\n+                None => {\n+                    debug!(\"annotate: not found, use_parent = {:?}, parent = {:?}\",\n+                           use_parent, self.parent);\n+                    if use_parent {\n+                        if let Some(stab) = self.parent.clone() {\n+                            self.index.local.insert(id, stab);\n+                        } else if self.index.staged_api && required\n+                            && self.export_map.contains(&id)\n+                            && !self.sess.opts.test {\n+                                self.sess.span_err(item_sp,\n+                                                   \"This node does not have a stability attribute\");\n+                            }\n+                    }\n                     f(self);\n                 }\n             }\n-            None => {\n-                debug!(\"annotate: not found, use_parent = {:?}, parent = {:?}\",\n-                       use_parent, self.parent);\n-                if use_parent {\n-                    if let Some(stab) = self.parent.clone() {\n-                        self.index.local.insert(id, stab);\n-                    } else if self.index.staged_api && required\n-                           && self.export_map.contains(&id)\n-                           && !self.sess.opts.test {\n-                        self.sess.span_err(item_sp,\n-                                           \"This node does not have a stability attribute\");\n-                    }\n+        } else {\n+            // Emit warnings for non-staged-api crates. These should be errors.\n+            for attr in attrs {\n+                let tag = attr.name();\n+                if tag == \"unstable\" || tag == \"stable\" || tag == \"deprecated\" {\n+                    attr::mark_used(attr);\n+                    self.sess.span_warn(attr.span(),\n+                                        \"stability attributes are deprecated and will soon become errors\");\n                 }\n-                f(self);\n             }\n+            f(self);\n         }\n     }\n }\n@@ -157,9 +170,6 @@ impl<'a, 'v> Visitor<'v> for Annotator<'a> {\n impl Index {\n     /// Construct the stability index for a crate being compiled.\n     pub fn build(&mut self, sess: &Session, krate: &Crate, export_map: &PublicItems) {\n-        if !self.staged_api {\n-            return;\n-        }\n         let mut annotator = Annotator {\n             sess: sess,\n             index: self,"}, {"sha": "db16e7c0138242e298e7c687af5aef9462204463", "filename": "src/test/compile-fail/stability-attribute-non-staged.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/33733b786f5cba571a0969f9e5cc3d7abeb3fee2/src%2Ftest%2Fcompile-fail%2Fstability-attribute-non-staged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33733b786f5cba571a0969f9e5cc3d7abeb3fee2/src%2Ftest%2Fcompile-fail%2Fstability-attribute-non-staged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstability-attribute-non-staged.rs?ref=33733b786f5cba571a0969f9e5cc3d7abeb3fee2", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// These two generate an error to satisfy the compile-fail test\n+#![deny(warnings)]\n+#![feature(blah)] //~ ERROR\n+\n+#[unstable] //~ WARNING: stability attributes are deprecated\n+#[stable] //~ WARNING: stability attributes are deprecated\n+#[deprecated] //~ WARNING: stability attributes are deprecated\n+fn main() { }"}]}