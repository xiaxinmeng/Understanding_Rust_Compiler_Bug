{"sha": "22aa680c44024531293c5ed8b963eb6aade3f7d0", "node_id": "C_kwDOAAsO6NoAKDIyYWE2ODBjNDQwMjQ1MzEyOTNjNWVkOGI5NjNlYjZhYWRlM2Y3ZDA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-03T05:30:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-03T05:30:23Z"}, "message": "Rollup merge of #107500 - bryangarza:future-sizes-baseline-test, r=compiler-errors\n\nAdd tests to assert current behavior of large future sizes\n\nBased on a couple of sources:\n- https://swatinem.de/blog/future-size/\n- https://github.com/rust-lang/rust/issues/62958", "tree": {"sha": "404bd93be25c8a2f70f940109f0fd5df5aeba9b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/404bd93be25c8a2f70f940109f0fd5df5aeba9b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22aa680c44024531293c5ed8b963eb6aade3f7d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3JvvCRBK7hj4Ov3rIwAAI8cIAEKXM083kQ1G5DlF4I8cpf2M\nEI8BVvQOxnEN6oIhYCav4O/GF6EKZVpJ50pttM029DBE3ZMHFZAtaezSr4cKANuR\nA6ZEseBKqYQYYhMJCDrnPAOgPlO6LvRv7+vq6he9llGT7/SruLLBW0ITVZ0nbTon\n19P9ZDCE+k+xefbdwdZsLahIGJIfcYyc/MDzk5QbO67ciOh3jIUA/evdmjTPVhFP\n+kjC1Hcrm3PsCus7A9OIDfQV7O8tGj4ImrFaAYFXjXC/bnpiX/zgRAziVUQwUVy1\naaB7i/KYTjzb3KQgKsUaONeOwjP+60X4xBEGy8N2tFfPFHsQ0dZ1QoU/tVBRjqA=\n=dI9Q\n-----END PGP SIGNATURE-----\n", "payload": "tree 404bd93be25c8a2f70f940109f0fd5df5aeba9b4\nparent 2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9\nparent 1a65219a49cb9797f228b04929ac02236d690435\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675402223 +0100\ncommitter GitHub <noreply@github.com> 1675402223 +0100\n\nRollup merge of #107500 - bryangarza:future-sizes-baseline-test, r=compiler-errors\n\nAdd tests to assert current behavior of large future sizes\n\nBased on a couple of sources:\n- https://swatinem.de/blog/future-size/\n- https://github.com/rust-lang/rust/issues/62958\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22aa680c44024531293c5ed8b963eb6aade3f7d0", "html_url": "https://github.com/rust-lang/rust/commit/22aa680c44024531293c5ed8b963eb6aade3f7d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22aa680c44024531293c5ed8b963eb6aade3f7d0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "html_url": "https://github.com/rust-lang/rust/commit/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9"}, {"sha": "1a65219a49cb9797f228b04929ac02236d690435", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a65219a49cb9797f228b04929ac02236d690435", "html_url": "https://github.com/rust-lang/rust/commit/1a65219a49cb9797f228b04929ac02236d690435"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "93c69b05254dc393810ea30ac1d13e430bca82f8", "filename": "tests/ui/async-await/future-sizes/future-as-arg.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Ffuture-as-arg.rs?ref=22aa680c44024531293c5ed8b963eb6aade3f7d0", "patch": "@@ -0,0 +1,16 @@\n+// edition: 2021\n+// run-pass\n+\n+async fn test(_arg: [u8; 16]) {}\n+\n+async fn use_future(fut: impl std::future::Future<Output = ()>) {\n+    fut.await\n+}\n+\n+fn main() {\n+    let actual = std::mem::size_of_val(\n+        &use_future(use_future(use_future(use_future(use_future(test([0; 16])))))));\n+    // Not using an exact number in case it slightly changes over different commits\n+    let expected = 550;\n+    assert!(actual > expected, \"expected: >{expected}, actual: {actual}\");\n+}"}, {"sha": "7e7ff9d8d00e841e97ab81e74fb09b55aa1d3279", "filename": "tests/ui/async-await/future-sizes/large-arg.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.rs?ref=22aa680c44024531293c5ed8b963eb6aade3f7d0", "patch": "@@ -0,0 +1,18 @@\n+// compile-flags: -Z print-type-sizes --crate-type=lib\n+// edition: 2021\n+// build-pass\n+// ignore-pass\n+\n+pub async fn test() {\n+    let _ = a([0u8; 1024]).await;\n+}\n+\n+pub async fn a<T>(t: T) -> T {\n+    b(t).await\n+}\n+async fn b<T>(t: T) -> T {\n+    c(t).await\n+}\n+async fn c<T>(t: T) -> T {\n+    t\n+}"}, {"sha": "c206d793170754dbcb6f7f23aaac6f9aa103ae5b", "filename": "tests/ui/async-await/future-sizes/large-arg.stdout", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/22aa680c44024531293c5ed8b963eb6aade3f7d0/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Ffuture-sizes%2Flarge-arg.stdout?ref=22aa680c44024531293c5ed8b963eb6aade3f7d0", "patch": "@@ -0,0 +1,60 @@\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:6:21: 8:2]`: 3076 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 3075 bytes\n+print-type-size         local `.__awaitee`: 3075 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Unresumed`: 0 bytes\n+print-type-size     variant `Returned`: 0 bytes\n+print-type-size     variant `Panicked`: 0 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:10:30: 12:2]`: 3075 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 3074 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         local `.__awaitee`: 2050 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:10:30: 12:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 3075 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:10:30: 12:2]>`: 3075 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 3075 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 3075 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:13:26: 15:2]`: 2050 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Suspend0`: 2049 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size         local `.__awaitee`: 1025 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:13:26: 15:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 2050 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:13:26: 15:2]>`: 2050 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 2050 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 2050 bytes\n+print-type-size type: `[async fn body@$DIR/large-arg.rs:16:26: 18:2]`: 1025 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Unresumed`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Returned`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size     variant `Panicked`: 1024 bytes\n+print-type-size         upvar `.t`: 1024 bytes, offset: 0 bytes, alignment: 1 bytes\n+print-type-size type: `std::mem::ManuallyDrop<[async fn body@$DIR/large-arg.rs:16:26: 18:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     field `.value`: 1025 bytes\n+print-type-size type: `std::mem::MaybeUninit<[async fn body@$DIR/large-arg.rs:16:26: 18:2]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     variant `MaybeUninit`: 1025 bytes\n+print-type-size         field `.uninit`: 0 bytes\n+print-type-size         field `.value`: 1025 bytes\n+print-type-size type: `std::task::Poll<[u8; 1024]>`: 1025 bytes, alignment: 1 bytes\n+print-type-size     discriminant: 1 bytes\n+print-type-size     variant `Ready`: 1024 bytes\n+print-type-size         field `.0`: 1024 bytes\n+print-type-size     variant `Pending`: 0 bytes"}]}