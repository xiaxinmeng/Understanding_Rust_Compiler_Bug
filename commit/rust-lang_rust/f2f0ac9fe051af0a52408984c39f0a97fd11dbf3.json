{"sha": "f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZjBhYzlmZTA1MWFmMGE1MjQwODk4NGMzOWYwYTk3ZmQxMWRiZjM=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-24T01:25:29Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-25T19:22:44Z"}, "message": "libstd: serialization should use &strs.", "tree": {"sha": "a39fa80eccd1284511e4f7f52cd0b29d91bf3dca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a39fa80eccd1284511e4f7f52cd0b29d91bf3dca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "html_url": "https://github.com/rust-lang/rust/commit/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb5c07922f20559af1e40d63a15b1be0402e5fe4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5c07922f20559af1e40d63a15b1be0402e5fe4", "html_url": "https://github.com/rust-lang/rust/commit/bb5c07922f20559af1e40d63a15b1be0402e5fe4"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "11cd17515dac3b6d3c9b4c889354485d7db45fae", "filename": "src/libstd/ebml.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Febml.rs?ref=f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "patch": "@@ -320,7 +320,7 @@ enum ebml_serializer_tag {\n \n trait serializer_priv {\n     fn _emit_tagged_uint(t: ebml_serializer_tag, v: uint);\n-    fn _emit_label(label: ~str);\n+    fn _emit_label(label: &str);\n }\n \n impl ebml::writer: serializer_priv {\n@@ -330,7 +330,7 @@ impl ebml::writer: serializer_priv {\n         self.wr_tagged_u32(t as uint, v as u32);\n     }\n \n-    fn _emit_label(label: ~str) {\n+    fn _emit_label(label: &str) {\n         // There are various strings that we have access to, such as\n         // the name of a record field, which do not actually appear in\n         // the serialized EBML (normally).  This is just for\n@@ -365,11 +365,11 @@ impl ebml::writer: serialization::serializer {\n \n     fn emit_str(v: &str) { self.wr_tagged_str(es_str as uint, v) }\n \n-    fn emit_enum(name: ~str, f: fn()) {\n+    fn emit_enum(name: &str, f: fn()) {\n         self._emit_label(name);\n         self.wr_tag(es_enum as uint, f)\n     }\n-    fn emit_enum_variant(_v_name: ~str, v_id: uint, _cnt: uint, f: fn()) {\n+    fn emit_enum_variant(_v_name: &str, v_id: uint, _cnt: uint, f: fn()) {\n         self._emit_tagged_uint(es_enum_vid, v_id);\n         self.wr_tag(es_enum_body as uint, f)\n     }\n@@ -389,7 +389,7 @@ impl ebml::writer: serialization::serializer {\n     fn emit_box(f: fn()) { f() }\n     fn emit_uniq(f: fn()) { f() }\n     fn emit_rec(f: fn()) { f() }\n-    fn emit_rec_field(f_name: ~str, _f_idx: uint, f: fn()) {\n+    fn emit_rec_field(f_name: &str, _f_idx: uint, f: fn()) {\n         self._emit_label(f_name);\n         f()\n     }"}, {"sha": "259bb4eb612e32e38d17270400bbe5ac6f3cade5", "filename": "src/libstd/prettyprint.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Fprettyprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Fprettyprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprettyprint.rs?ref=f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "patch": "@@ -67,11 +67,11 @@ impl Writer: serializer {\n         self.write_str(fmt!(\"%?\", v));\n     }\n \n-    fn emit_enum(_name: ~str, f: fn()) {\n+    fn emit_enum(_name: &str, f: fn()) {\n         f();\n     }\n \n-    fn emit_enum_variant(v_name: ~str, _v_id: uint, sz: uint, f: fn()) {\n+    fn emit_enum_variant(v_name: &str, _v_id: uint, sz: uint, f: fn()) {\n         self.write_str(v_name);\n         if sz > 0u { self.write_str(~\"(\"); }\n         f();\n@@ -110,7 +110,7 @@ impl Writer: serializer {\n         self.write_str(~\"}\");\n     }\n \n-    fn emit_rec_field(f_name: ~str, f_idx: uint, f: fn()) {\n+    fn emit_rec_field(f_name: &str, f_idx: uint, f: fn()) {\n         if f_idx > 0u { self.write_str(~\", \"); }\n         self.write_str(f_name);\n         self.write_str(~\": \");"}, {"sha": "b41d9a6dbec3eef6447bfb7f1ee2ef950aa7928d", "filename": "src/libstd/serialization.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Fserialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f0ac9fe051af0a52408984c39f0a97fd11dbf3/src%2Flibstd%2Fserialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fserialization.rs?ref=f2f0ac9fe051af0a52408984c39f0a97fd11dbf3", "patch": "@@ -26,15 +26,15 @@ trait serializer {\n     fn emit_str(v: &str);\n \n     // Compound types:\n-    fn emit_enum(name: ~str, f: fn());\n-    fn emit_enum_variant(v_name: ~str, v_id: uint, sz: uint, f: fn());\n+    fn emit_enum(name: &str, f: fn());\n+    fn emit_enum_variant(v_name: &str, v_id: uint, sz: uint, f: fn());\n     fn emit_enum_variant_arg(idx: uint, f: fn());\n     fn emit_vec(len: uint, f: fn());\n     fn emit_vec_elt(idx: uint, f: fn());\n     fn emit_box(f: fn());\n     fn emit_uniq(f: fn());\n     fn emit_rec(f: fn());\n-    fn emit_rec_field(f_name: ~str, f_idx: uint, f: fn());\n+    fn emit_rec_field(f_name: &str, f_idx: uint, f: fn());\n     fn emit_tup(sz: uint, f: fn());\n     fn emit_tup_elt(idx: uint, f: fn());\n }"}]}