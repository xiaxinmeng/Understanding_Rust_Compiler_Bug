{"sha": "b7c8bc7a752588104858d6d73a724db414447e0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YzhiYzdhNzUyNTg4MTA0ODU4ZDZkNzNhNzI0ZGI0MTQ0NDdlMGQ=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-01-29T14:08:17Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2021-01-29T17:38:04Z"}, "message": "Update dist-various to Ubuntu 20.04\n\nThis updates the dist-various-1 and dist-various-2 images to Ubuntu\n20.04. This requires some adjustments:\n\n * `DEBIAN_FRONTEND=noninteractive` required for apt install.\n * `team-gcc-argm-embedded` PPA does not support focal. However,\n   we can simply use the distro-provided `gcc-arm-none-eabi`. Per\n   the comment, the PPA was only used to get a newer version.\n * rumprun has to be updated to avoid a linker error.\n * We need to build rumrun with `NOGCCERROR`, which disables use\n   of `-Werror` and allows building with a newer compiler.\n * We need to install `libtinfo5`, which appears to be a dependency\n   of the clang used during the fuchsia build.\n * We need to switch to `g++-8` rather than `g++-7`, as at least\n   `g++-7-arm-linux-gnueabi` is not available on focal.\n * We need to upgrade to GCC 6.5 for the Solaris build, as GCC 6.4\n   does not support the newer libisl version.", "tree": {"sha": "2efa639b5d4b5ca4cfabb1e8f3c25f64ad8d18d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2efa639b5d4b5ca4cfabb1e8f3c25f64ad8d18d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7c8bc7a752588104858d6d73a724db414447e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c8bc7a752588104858d6d73a724db414447e0d", "html_url": "https://github.com/rust-lang/rust/commit/b7c8bc7a752588104858d6d73a724db414447e0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7c8bc7a752588104858d6d73a724db414447e0d/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b122908617436af187252572ed5db96850551380", "url": "https://api.github.com/repos/rust-lang/rust/commits/b122908617436af187252572ed5db96850551380", "html_url": "https://github.com/rust-lang/rust/commit/b122908617436af187252572ed5db96850551380"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "4906f183b485e1ff53443e5ecfa5fe181f55fd96", "filename": "src/ci/docker/host-x86_64/dist-various-1/Dockerfile", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2FDockerfile?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -1,6 +1,6 @@\n-FROM ubuntu:16.04\n+FROM ubuntu:20.04\n \n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n   g++ \\\n   automake \\\n   bison \\\n@@ -30,6 +30,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   g++-aarch64-linux-gnu \\\n   g++-mips64-linux-gnuabi64 \\\n   g++-mips64el-linux-gnuabi64 \\\n+  gcc-arm-none-eabi \\\n   gcc-sparc64-linux-gnu \\\n   libc6-dev-sparc64-cross \\\n   bzip2 \\\n@@ -43,11 +44,6 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n \n WORKDIR /build\n \n-# Use the team-gcc-arm-embedded PPA for a newer version of Arm GCC\n-RUN add-apt-repository ppa:team-gcc-arm-embedded/ppa && \\\n-    apt-get update && \\\n-    apt-get install -y --no-install-recommends gcc-arm-embedded\n-\n COPY host-x86_64/dist-various-1/build-rumprun.sh /build\n RUN ./build-rumprun.sh\n "}, {"sha": "bee2d7a476cbcfd3b2c345751951851fb8ddb4c8", "filename": "src/ci/docker/host-x86_64/dist-various-1/build-rumprun.sh", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2Fbuild-rumprun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2Fbuild-rumprun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-1%2Fbuild-rumprun.sh?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -20,9 +20,10 @@ exit 1\n \n git clone https://github.com/rumpkernel/rumprun\n cd rumprun\n-git reset --hard 39a97f37a85e44c69b662f6b97b688fbe892603b\n+git reset --hard b04d42225a12a6fae57a78a9c1cf23642e46cd00\n git submodule update --init\n \n-CC=cc hide_output ./build-rr.sh -d /usr/local hw\n+# Disable -Werror, to avoid breaking the build with newer compilers.\n+CC=cc NOGCCERROR=1 hide_output ./build-rr.sh -d /usr/local hw\n cd ..\n rm -rf rumprun"}, {"sha": "6cfacc3b8ce68d0bfc2a938b9be859c4244b9629", "filename": "src/ci/docker/host-x86_64/dist-various-2/Dockerfile", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2FDockerfile?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -1,4 +1,4 @@\n-FROM ubuntu:18.04\n+FROM ubuntu:20.04\n \n COPY scripts/cross-apt-packages.sh /scripts/\n RUN sh /scripts/cross-apt-packages.sh\n@@ -9,12 +9,13 @@ RUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\n RUN apt-get update && apt-get build-dep -y clang llvm && apt-get install -y --no-install-recommends \\\n   build-essential \\\n # gcc-multilib can not be installed together with gcc-arm-linux-gnueabi\n-  gcc-7-multilib \\\n+  g++-8-multilib \\\n   libedit-dev \\\n   libgmp-dev \\\n   libisl-dev \\\n   libmpc-dev \\\n   libmpfr-dev \\\n+  libtinfo5 \\\n   ninja-build \\\n   nodejs \\\n   python3-dev \\\n@@ -23,7 +24,7 @@ RUN apt-get update && apt-get build-dep -y clang llvm && apt-get install -y --no\n   # Needed for apt-key to work:\n   dirmngr \\\n   gpg-agent \\\n-  g++-7-arm-linux-gnueabi\n+  g++-8-arm-linux-gnueabi\n \n RUN apt-key adv --batch --yes --keyserver keyserver.ubuntu.com --recv-keys 74DA7924C5513486\n RUN add-apt-repository -y 'deb http://apt.dilos.org/dilos dilos2 main'\n@@ -41,8 +42,8 @@ ENV \\\n     AR_x86_64_sun_solaris=x86_64-sun-solaris2.10-ar \\\n     CC_x86_64_sun_solaris=x86_64-sun-solaris2.10-gcc \\\n     CXX_x86_64_sun_solaris=x86_64-sun-solaris2.10-g++ \\\n-    CC_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-gcc-7 \\\n-    CXX_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-g++-7 \\\n+    CC_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-gcc-8 \\\n+    CXX_armv7_unknown_linux_gnueabi=arm-linux-gnueabi-g++-8 \\\n     AR_x86_64_fortanix_unknown_sgx=ar \\\n     CC_x86_64_fortanix_unknown_sgx=x86_64-fortanix-unknown-sgx-clang-11 \\\n     CFLAGS_x86_64_fortanix_unknown_sgx=\"-mlvi-hardening -mllvm -x86-experimental-lvi-inline-asm-hardening\" \\\n@@ -51,14 +52,14 @@ ENV \\\n     AR_i686_unknown_freebsd=i686-unknown-freebsd11-ar \\\n     CC_i686_unknown_freebsd=i686-unknown-freebsd11-clang \\\n     CXX_i686_unknown_freebsd=i686-unknown-freebsd11-clang++ \\\n-    CC=gcc-7 \\\n-    CXX=g++-7\n+    CC=gcc-8 \\\n+    CXX=g++-8\n \n WORKDIR /build\n COPY scripts/musl.sh /build\n RUN env \\\n-    CC=arm-linux-gnueabi-gcc-7 CFLAGS=\"-march=armv7-a\" \\\n-    CXX=arm-linux-gnueabi-g++-7 CXXFLAGS=\"-march=armv7-a\" \\\n+    CC=arm-linux-gnueabi-gcc-8 CFLAGS=\"-march=armv7-a\" \\\n+    CXX=arm-linux-gnueabi-g++-8 CXXFLAGS=\"-march=armv7-a\" \\\n     bash musl.sh armv7 && \\\n     rm -rf /build/*\n \n@@ -108,7 +109,7 @@ ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,i686-unknown-freebsd\n \n # As per https://bugs.launchpad.net/ubuntu/+source/gcc-defaults/+bug/1300211\n-# we need asm in the search path for gcc-7 (for gnux32) but not in the search path of the\n+# we need asm in the search path for gcc-8 (for gnux32) but not in the search path of the\n # cross compilers.\n # Luckily one of the folders is /usr/local/include so symlink /usr/include/asm-generic there\n RUN ln -s /usr/include/asm-generic /usr/local/include/asm"}, {"sha": "14fb399aff5e2d55ad0d316c882691a6f485c8df", "filename": "src/ci/docker/host-x86_64/dist-various-2/build-solaris-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-solaris-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-solaris-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-solaris-toolchain.sh?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -7,7 +7,7 @@ ARCH=$1\n LIB_ARCH=$2\n APT_ARCH=$3\n BINUTILS=2.28.1\n-GCC=6.4.0\n+GCC=6.5.0\n \n # First up, build binutils\n mkdir binutils"}, {"sha": "f7acedcfb4758e4500efe549e5a569fd0e720f5a", "filename": "src/ci/docker/host-x86_64/dist-various-2/build-x86_64-fortanix-unknown-sgx-toolchain.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-x86_64-fortanix-unknown-sgx-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-x86_64-fortanix-unknown-sgx-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fdist-various-2%2Fbuild-x86_64-fortanix-unknown-sgx-toolchain.sh?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -7,7 +7,7 @@ target=\"x86_64-fortanix-unknown-sgx\"\n \n install_prereq() {\n     curl https://apt.llvm.org/llvm-snapshot.gpg.key|apt-key add -\n-    add-apt-repository -y 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-11 main'\n+    add-apt-repository -y 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main'\n     apt-get update\n     apt-get install -y --no-install-recommends \\\n             build-essential \\"}, {"sha": "2f8bf119424d0f3c7b3c54cfba29b11e81f61192", "filename": "src/ci/docker/scripts/cross-apt-packages.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b7c8bc7a752588104858d6d73a724db414447e0d/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fcross-apt-packages.sh?ref=b7c8bc7a752588104858d6d73a724db414447e0d", "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-apt-get update && apt-get install -y --no-install-recommends \\\n+apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n   automake \\\n   bison \\\n   bzip2 \\"}]}