{"sha": "0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "node_id": "C_kwDOAAsO6NoAKDBhOWFhZWM4ZWJjYzdlMDBiZGQwMmZlMTk2YWU3ZjJlNzZkYjJjNjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-20T22:37:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-20T22:37:35Z"}, "message": "Rollup merge of #93086 - c410-f3r:let-guard, r=Mark-Simulacrum\n\nAdd tests to ensure that `let_chains` works with `if_let_guard`\n\nThe current machinery already makes such combination possible but lacks tests.\n\ncc `@matthewjasper`", "tree": {"sha": "09dd7f8428c71725449d1d2253a8be83c42a12d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09dd7f8428c71725449d1d2253a8be83c42a12d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh6eQvCRBK7hj4Ov3rIwAAFgYIACkiWGj9vEGnKWuFJcc9W6cY\nB6gLxF6wz9mKAFM8Bm+obsZYdhJgy3UDqacPGZrCzucsSHfdLTOwqqFxGMrZ7rK+\n9Y6A0pxxoN8If9Vmm9dy4aJmsqSKeflKimmkNhcSW3iiNmkTL9KnwF0zXWpIIK5T\nofR3ypTj9Bt7qN2tXrbLw/ZxgmU84zvEkDdfpVn60CRt0SWix4/lTs+Ieu0gndVW\niwoJcOMD7yuYPnVywkfLNvysWDyjRSacuA0lVUHLO+3Nx756aY+wd53plCOCV2hB\n+RPrl8PXDE70mrnPZAfO6qqmAQHtff9wnFVVmco4aXc5y38DkMkeCE9KjbRGJhw=\n=1/D7\n-----END PGP SIGNATURE-----\n", "payload": "tree 09dd7f8428c71725449d1d2253a8be83c42a12d8\nparent 35a53b229f383db60eac08b19338424c45f4206a\nparent f491a9f601a8ad0efe7f38de5b807a2c07774ae1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642718255 +0100\ncommitter GitHub <noreply@github.com> 1642718255 +0100\n\nRollup merge of #93086 - c410-f3r:let-guard, r=Mark-Simulacrum\n\nAdd tests to ensure that `let_chains` works with `if_let_guard`\n\nThe current machinery already makes such combination possible but lacks tests.\n\ncc `@matthewjasper`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "html_url": "https://github.com/rust-lang/rust/commit/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a53b229f383db60eac08b19338424c45f4206a", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a53b229f383db60eac08b19338424c45f4206a", "html_url": "https://github.com/rust-lang/rust/commit/35a53b229f383db60eac08b19338424c45f4206a"}, {"sha": "f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f491a9f601a8ad0efe7f38de5b807a2c07774ae1", "html_url": "https://github.com/rust-lang/rust/commit/f491a9f601a8ad0efe7f38de5b807a2c07774ae1"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "945c665e35d28539e2d6d4c60509d9b4cda4f289", "filename": "src/test/ui/rfc-2497-if-let-chains/irrefutable-lets.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Firrefutable-lets.rs?ref=0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "patch": "@@ -1,6 +1,6 @@\n // check-pass\n \n-#![feature(let_chains)]\n+#![feature(if_let_guard, let_chains)]\n \n use std::ops::Range;\n \n@@ -16,6 +16,16 @@ fn main() {\n         && let None = local_start {\n     }\n \n+    match opt {\n+        Some(ref first) if let second = first && let _third = second => {},\n+        _ => {}\n+    }\n+    match opt {\n+        Some(ref first) if let Range { start: local_start, end: _ } = first\n+            && let None = local_start => {},\n+        _ => {}\n+    }\n+\n     while let first = &opt && let Some(ref second) = first && let None = second.start {\n     }\n     while let Some(ref first) = opt && let second = first && let _third = second {"}, {"sha": "e061174f667d97a68384d77c36e295d0d52979de", "filename": "src/test/ui/rfc-2497-if-let-chains/then-else-blocks.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fthen-else-blocks.rs?ref=0a9aaec8ebcc7e00bdd02fe196ae7f2e76db2c68", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(let_chains)]\n+#![feature(if_let_guard, let_chains)]\n \n fn check_if_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     if let Some(first) = opt\n@@ -15,6 +15,17 @@ fn check_if_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     }\n }\n \n+fn check_let_guard(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n+    match opt {\n+        Some(first) if let Some(second) = first && let Some(third) = second && third == value => {\n+            true\n+        }\n+        _ => {\n+            false\n+        }\n+    }\n+}\n+\n fn check_while_let(opt: Option<Option<Option<i32>>>, value: i32) -> bool {\n     while let Some(first) = opt\n         && let Some(second) = first\n@@ -30,6 +41,9 @@ fn main() {\n     assert_eq!(check_if_let(Some(Some(Some(1))), 1), true);\n     assert_eq!(check_if_let(Some(Some(Some(1))), 9), false);\n \n+    assert_eq!(check_let_guard(Some(Some(Some(1))), 1), true);\n+    assert_eq!(check_let_guard(Some(Some(Some(1))), 9), false);\n+\n     assert_eq!(check_while_let(Some(Some(Some(1))), 1), true);\n     assert_eq!(check_while_let(Some(Some(Some(1))), 9), false);\n }"}]}