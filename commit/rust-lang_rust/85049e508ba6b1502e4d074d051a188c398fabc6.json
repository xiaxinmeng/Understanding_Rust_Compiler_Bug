{"sha": "85049e508ba6b1502e4d074d051a188c398fabc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MDQ5ZTUwOGJhNmIxNTAyZTRkMDc0ZDA1MWExODhjMzk4ZmFiYzY=", "commit": {"author": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-03-12T14:10:07Z"}, "committer": {"name": "Djzin", "email": "djzin@users.noreply.github.com", "date": "2017-03-12T14:10:22Z"}, "message": "avoid recursion", "tree": {"sha": "83484f24aeaac906e9af7e6857f29ba7687dc846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83484f24aeaac906e9af7e6857f29ba7687dc846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85049e508ba6b1502e4d074d051a188c398fabc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85049e508ba6b1502e4d074d051a188c398fabc6", "html_url": "https://github.com/rust-lang/rust/commit/85049e508ba6b1502e4d074d051a188c398fabc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85049e508ba6b1502e4d074d051a188c398fabc6/comments", "author": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "djzin", "id": 22416015, "node_id": "MDQ6VXNlcjIyNDE2MDE1", "avatar_url": "https://avatars.githubusercontent.com/u/22416015?v=4", "gravatar_id": "", "url": "https://api.github.com/users/djzin", "html_url": "https://github.com/djzin", "followers_url": "https://api.github.com/users/djzin/followers", "following_url": "https://api.github.com/users/djzin/following{/other_user}", "gists_url": "https://api.github.com/users/djzin/gists{/gist_id}", "starred_url": "https://api.github.com/users/djzin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/djzin/subscriptions", "organizations_url": "https://api.github.com/users/djzin/orgs", "repos_url": "https://api.github.com/users/djzin/repos", "events_url": "https://api.github.com/users/djzin/events{/privacy}", "received_events_url": "https://api.github.com/users/djzin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bcfbc36c672f0f30176a31c5a6e529bebd6fbcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcfbc36c672f0f30176a31c5a6e529bebd6fbcc", "html_url": "https://github.com/rust-lang/rust/commit/4bcfbc36c672f0f30176a31c5a6e529bebd6fbcc"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "748d63362463afba24270bcc3fdcc52da5ecf544", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/85049e508ba6b1502e4d074d051a188c398fabc6/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85049e508ba6b1502e4d074d051a188c398fabc6/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=85049e508ba6b1502e4d074d051a188c398fabc6", "patch": "@@ -450,11 +450,14 @@ pub fn swap<T>(x: &mut T, y: &mut T) {\n         let x = x as *mut T as *mut u8;\n         let y = y as *mut T as *mut u8;\n \n-        // use an xor-swap as x & y are guaranteed to never alias\n-        for i in 0..size_of::<T>() as isize {\n+        // can't use a for loop as the `range` impl calls `mem::swap` recursively\n+        let mut i = 0;\n+        while i < size_of::<T>() as isize {\n+            // use an xor-swap as x & y are guaranteed to never alias\n             *x.offset(i) ^= *y.offset(i);\n             *y.offset(i) ^= *x.offset(i);\n             *x.offset(i) ^= *y.offset(i);\n+            i += 1;\n         }\n     }\n }"}]}