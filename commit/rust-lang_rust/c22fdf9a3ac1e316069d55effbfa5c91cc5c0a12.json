{"sha": "c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmZkZjlhM2FjMWUzMTYwNjlkNTVlZmZiZmE1YzkxY2M1YzBhMTI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-13T18:58:20Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-13T22:37:47Z"}, "message": "use `tcx.crate_name(LOCAL_CRATE)` rather than `LinkMeta::crate_name`", "tree": {"sha": "91be22c71315737d0269e09b67f0751f70f62b84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91be22c71315737d0269e09b67f0751f70f62b84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "html_url": "https://github.com/rust-lang/rust/commit/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f59079f8a36af1d8b5ff5a218f16a8e4806a542", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f59079f8a36af1d8b5ff5a218f16a8e4806a542", "html_url": "https://github.com/rust-lang/rust/commit/3f59079f8a36af1d8b5ff5a218f16a8e4806a542"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "cbbfeacadb4087a2e8912bb415986d57435ec605", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -53,7 +53,6 @@ pub use self::NativeLibraryKind::*;\n \n #[derive(Clone, Debug)]\n pub struct LinkMeta {\n-    pub crate_name: Symbol,\n     pub crate_hash: Svh,\n }\n "}, {"sha": "6b136d0fa0cbbd425c198fa421f877c2d11367c0", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -1140,7 +1140,7 @@ pub fn phase_6_link_output(sess: &Session,\n                            outputs: &OutputFilenames) {\n     time(sess.time_passes(),\n          \"linking\",\n-         || link::link_binary(sess, trans, outputs, &trans.link.crate_name.as_str()));\n+         || link::link_binary(sess, trans, outputs, &trans.crate_name.as_str()));\n }\n \n fn escape_dep_filename(filename: &str) -> String {"}, {"sha": "3bf22f8a6c82729d70aa48f61f9d0d114f0d6852", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -14,7 +14,7 @@ use schema::*;\n \n use rustc::middle::cstore::{LinkMeta, LinkagePreference, NativeLibrary,\n                             EncodedMetadata, EncodedMetadataHash};\n-use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefIndex, DefId};\n+use rustc::hir::def_id::{CrateNum, CRATE_DEF_INDEX, DefIndex, DefId, LOCAL_CRATE};\n use rustc::hir::map::definitions::DefPathTable;\n use rustc::middle::dependency_format::Linkage;\n use rustc::middle::lang_items;\n@@ -1380,7 +1380,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         let link_meta = self.link_meta;\n         let is_proc_macro = tcx.sess.crate_types.borrow().contains(&CrateTypeProcMacro);\n         let root = self.lazy(&CrateRoot {\n-            name: link_meta.crate_name,\n+            name: tcx.crate_name(LOCAL_CRATE),\n             triple: tcx.sess.opts.target_triple.clone(),\n             hash: link_meta.crate_hash,\n             disambiguator: tcx.sess.local_crate_disambiguator(),"}, {"sha": "7468f4ace1b16d760d811f728bd94caafa444925", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -47,7 +47,6 @@ use std::str;\n use flate;\n use syntax::ast;\n use syntax::attr;\n-use syntax::symbol::Symbol;\n use syntax_pos::Span;\n \n /// The LLVM module name containing crate-metadata. This includes a `.` on\n@@ -136,11 +135,8 @@ pub fn find_crate_name(sess: Option<&Session>,\n     \"rust_out\".to_string()\n }\n \n-pub fn build_link_meta(incremental_hashes_map: &IncrementalHashesMap,\n-                       name: &str)\n-                       -> LinkMeta {\n+pub fn build_link_meta(incremental_hashes_map: &IncrementalHashesMap) -> LinkMeta {\n     let r = LinkMeta {\n-        crate_name: Symbol::intern(name),\n         crate_hash: Svh::new(incremental_hashes_map[&DepNode::Krate].to_smaller_hash()),\n     };\n     info!(\"{:?}\", r);"}, {"sha": "e8ca2bd5e6c103bb8d3d1a2f1771a9ee7afd3908", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -1063,12 +1063,12 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     // particular items that will be processed.\n     let krate = tcx.hir.krate();\n \n-    let ty::CrateAnalysis { reachable, name, .. } = analysis;\n+    let ty::CrateAnalysis { reachable, .. } = analysis;\n     let exported_symbols = find_exported_symbols(tcx, reachable);\n \n     let check_overflow = tcx.sess.overflow_checks();\n \n-    let link_meta = link::build_link_meta(incremental_hashes_map, &name);\n+    let link_meta = link::build_link_meta(incremental_hashes_map);\n \n     let shared_ccx = SharedCrateContext::new(tcx,\n                                              link_meta.clone(),\n@@ -1096,6 +1096,7 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         let empty_exported_symbols = ExportedSymbols::empty();\n         let linker_info = LinkerInfo::new(&shared_ccx, &empty_exported_symbols);\n         return CrateTranslation {\n+            crate_name: tcx.crate_name(LOCAL_CRATE),\n             modules: vec![],\n             metadata_module: metadata_module,\n             link: link_meta,\n@@ -1307,6 +1308,7 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     });\n \n     CrateTranslation {\n+        crate_name: tcx.crate_name(LOCAL_CRATE),\n         modules: modules,\n         metadata_module: metadata_module,\n         link: link_meta,"}, {"sha": "0d7e70f6dd1a06c8827ecd9357cd083d2b0a247e", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -13,7 +13,7 @@ use llvm::{ContextRef, ModuleRef, ValueRef};\n use rustc::dep_graph::{DepGraph, DepGraphSafe, DepNode, DepTrackingMap, DepTrackingMapConfig};\n use middle::cstore::LinkMeta;\n use rustc::hir;\n-use rustc::hir::def_id::DefId;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::traits;\n use debuginfo;\n use callee;\n@@ -439,7 +439,7 @@ impl<'b, 'tcx> SharedCrateContext<'b, 'tcx> {\n \n     pub fn metadata_symbol_name(&self) -> String {\n         format!(\"rust_metadata_{}_{}\",\n-                self.link_meta().crate_name,\n+                self.tcx().crate_name(LOCAL_CRATE),\n                 self.link_meta().crate_hash)\n     }\n }"}, {"sha": "1f4756a94ea33518b14740dd227ed339e2eb455c", "filename": "src/librustc_trans/debuginfo/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmetadata.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -26,7 +26,7 @@ use llvm::debuginfo::{DIType, DIFile, DIScope, DIDescriptor,\n                       DICompositeType, DILexicalBlock, DIFlags};\n \n use rustc::hir::def::CtorKind;\n-use rustc::hir::def_id::DefId;\n+use rustc::hir::def_id::{DefId, LOCAL_CRATE};\n use rustc::ty::fold::TypeVisitor;\n use rustc::ty::subst::Substs;\n use rustc::ty::util::TypeIdHasher;\n@@ -810,7 +810,7 @@ pub fn compile_unit_metadata(scc: &SharedCrateContext,\n     };\n \n     fn fallback_path(scc: &SharedCrateContext) -> CString {\n-        CString::new(scc.link_meta().crate_name.to_string()).unwrap()\n+        CString::new(scc.tcx().crate_name(LOCAL_CRATE).to_string()).unwrap()\n     }\n }\n "}, {"sha": "abda358bc4f87c8d36d3c05255f3eade1e302b88", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=c22fdf9a3ac1e316069d55effbfa5c91cc5c0a12", "patch": "@@ -40,6 +40,7 @@\n #![feature(conservative_impl_trait)]\n \n use rustc::dep_graph::WorkProduct;\n+use syntax_pos::symbol::Symbol;\n \n extern crate flate;\n extern crate libc;\n@@ -165,6 +166,7 @@ unsafe impl Send for ModuleTranslation { }\n unsafe impl Sync for ModuleTranslation { }\n \n pub struct CrateTranslation {\n+    pub crate_name: Symbol,\n     pub modules: Vec<ModuleTranslation>,\n     pub metadata_module: ModuleTranslation,\n     pub link: middle::cstore::LinkMeta,"}]}