{"sha": "44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTViZjFiN2Q4ZDE2ZTczYWI1NjMxYzRkZDZiZDUxMDcwNzljNWY=", "commit": {"author": {"name": "Colin Walters", "email": "walters@verbum.org", "date": "2015-04-23T20:59:36Z"}, "committer": {"name": "Colin Walters", "email": "walters@verbum.org", "date": "2015-05-14T01:14:15Z"}, "message": "libstd/env: Add non-Rust synchronization warnings for setenv()\n\nSee:\nhttps://sourceware.org/bugzilla/show_bug.cgi?id=4887#c9\nhttps://bugs.freedesktop.org/show_bug.cgi?id=65681\n\nI just noticed this while talking to someone who was using\n`os.environ['FOO'] = 'BAR'` in Python and since I'm learning Rust, I\nwas curious if it did anything special here.  It looks like Rust has\nan internal mutex, which helps for apps that are pure Rust, but it\nwill be an evil trap for someone later adding in native code (apps\nlike Servo and games will be at risk).\n\nJava got this right by disallowing `setenv()` from the start.\n\nI suggest Rust program authors only use `setenv()` early in main.", "tree": {"sha": "83a63e9df086dbaa72f906b6d54999e4f0b44449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83a63e9df086dbaa72f906b6d54999e4f0b44449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f", "html_url": "https://github.com/rust-lang/rust/commit/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f/comments", "author": {"login": "cgwalters", "id": 244096, "node_id": "MDQ6VXNlcjI0NDA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/244096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgwalters", "html_url": "https://github.com/cgwalters", "followers_url": "https://api.github.com/users/cgwalters/followers", "following_url": "https://api.github.com/users/cgwalters/following{/other_user}", "gists_url": "https://api.github.com/users/cgwalters/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgwalters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgwalters/subscriptions", "organizations_url": "https://api.github.com/users/cgwalters/orgs", "repos_url": "https://api.github.com/users/cgwalters/repos", "events_url": "https://api.github.com/users/cgwalters/events{/privacy}", "received_events_url": "https://api.github.com/users/cgwalters/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cgwalters", "id": 244096, "node_id": "MDQ6VXNlcjI0NDA5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/244096?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cgwalters", "html_url": "https://github.com/cgwalters", "followers_url": "https://api.github.com/users/cgwalters/followers", "following_url": "https://api.github.com/users/cgwalters/following{/other_user}", "gists_url": "https://api.github.com/users/cgwalters/gists{/gist_id}", "starred_url": "https://api.github.com/users/cgwalters/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cgwalters/subscriptions", "organizations_url": "https://api.github.com/users/cgwalters/orgs", "repos_url": "https://api.github.com/users/cgwalters/repos", "events_url": "https://api.github.com/users/cgwalters/events{/privacy}", "received_events_url": "https://api.github.com/users/cgwalters/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "222cd73b8a422d2c4124375f6aaffd2663bb9718", "url": "https://api.github.com/repos/rust-lang/rust/commits/222cd73b8a422d2c4124375f6aaffd2663bb9718", "html_url": "https://github.com/rust-lang/rust/commit/222cd73b8a422d2c4124375f6aaffd2663bb9718"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "126ef38b9188fc657c3ca386a28a704239d1d866", "filename": "src/libstd/env.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=44a5bf1b7d8d16e73ab5631c4dd6bd5107079c5f", "patch": "@@ -243,6 +243,17 @@ impl Error for VarError {\n /// Sets the environment variable `k` to the value `v` for the currently running\n /// process.\n ///\n+/// Note that while concurrent access to environment variables is safe in Rust,\n+/// some platforms only expose inherently unsafe non-threadsafe APIs for\n+/// inspecting the environment. As a result extra care needs to be taken when\n+/// auditing calls to unsafe external FFI functions to ensure that any external\n+/// environment accesses are properly synchronized with accesses in Rust.\n+///\n+/// Discussion of this unsafety on Unix may be found in:\n+///\n+///  - [Austin Group Bugzilla](http://austingroupbugs.net/view.php?id=188)\n+///  - [GNU C library Bugzilla](https://sourceware.org/bugzilla/show_bug.cgi?id=15607#c2)\n+///\n /// # Examples\n ///\n /// ```\n@@ -260,6 +271,17 @@ pub fn set_var<K: AsRef<OsStr>, V: AsRef<OsStr>>(k: K, v: V) {\n \n /// Removes an environment variable from the environment of the currently running process.\n ///\n+/// Note that while concurrent access to environment variables is safe in Rust,\n+/// some platforms only expose inherently unsafe non-threadsafe APIs for\n+/// inspecting the environment. As a result extra care needs to be taken when\n+/// auditing calls to unsafe external FFI functions to ensure that any external\n+/// environment accesses are properly synchronized with accesses in Rust.\n+///\n+/// Discussion of this unsafety on Unix may be found in:\n+///\n+///  - [Austin Group Bugzilla](http://austingroupbugs.net/view.php?id=188)\n+///  - [GNU C library Bugzilla](https://sourceware.org/bugzilla/show_bug.cgi?id=15607#c2)\n+///\n /// # Examples\n ///\n /// ```"}]}