{"sha": "19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5ZGRmYjU0NWJiNmU3MGJhMzI4MWJkY2U0ZjQwYWU4ZTU2NGE1M2E=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-28T16:38:07Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-12-02T14:43:40Z"}, "message": "Update miri unleashed tests", "tree": {"sha": "66aa6b93044a2807b604ce4b6ebfa22c515aa6a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66aa6b93044a2807b604ce4b6ebfa22c515aa6a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "html_url": "https://github.com/rust-lang/rust/commit/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e61e4cadc72141f9e4c80ca8615509f2eaeb51f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e61e4cadc72141f9e4c80ca8615509f2eaeb51f", "html_url": "https://github.com/rust-lang/rust/commit/5e61e4cadc72141f9e4c80ca8615509f2eaeb51f"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "972f59549ea7415806e1ce8e64098e9a9adbb7c6", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.rs?ref=19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "patch": "@@ -1,6 +1,7 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n \n #![feature(const_raw_ptr_deref)]\n+#![feature(const_mut_refs)]\n #![deny(const_err)]\n \n use std::cell::UnsafeCell;\n@@ -12,7 +13,7 @@ const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n const MUTATING_BEHIND_RAW: () = {\n     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n     unsafe {\n-        *MUTABLE_BEHIND_RAW = 99 //~ ERROR constant contains unimplemented expression type\n+        *MUTABLE_BEHIND_RAW = 99 //~ ERROR any use of this value will cause an error\n     }\n };\n "}, {"sha": "9daca765c7cd0760cd698778ba1a4c40ecea7bf2", "filename": "src/test/ui/consts/miri_unleashed/mutable_const.stderr", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_const.stderr?ref=19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "patch": "@@ -1,15 +1,26 @@\n warning: skipping const checks\n-  --> $DIR/mutable_const.rs:9:38\n+  --> $DIR/mutable_const.rs:10:38\n    |\n LL | const MUTABLE_BEHIND_RAW: *mut i32 = &UnsafeCell::new(42) as *const _ as *mut _;\n    |                                      ^^^^^^^^^^^^^^^^^^^^\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/mutable_const.rs:15:9\n+error: any use of this value will cause an error\n+  --> $DIR/mutable_const.rs:16:9\n    |\n-LL |         *MUTABLE_BEHIND_RAW = 99\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | / const MUTATING_BEHIND_RAW: () = {\n+LL | |     // Test that `MUTABLE_BEHIND_RAW` is actually immutable, by doing this at const time.\n+LL | |     unsafe {\n+LL | |         *MUTABLE_BEHIND_RAW = 99\n+   | |         ^^^^^^^^^^^^^^^^^^^^^^^^ tried to modify constant memory\n+LL | |     }\n+LL | | };\n+   | |__-\n+   |\n+note: lint level defined here\n+  --> $DIR/mutable_const.rs:5:9\n+   |\n+LL | #![deny(const_err)]\n+   |         ^^^^^^^^^\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0019`."}, {"sha": "fe3c4ee70f2a21ee9b81282bd32ed05c8d05a442", "filename": "src/test/ui/consts/miri_unleashed/mutable_references.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.rs?ref=19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "patch": "@@ -6,12 +6,16 @@ use std::cell::UnsafeCell;\n \n // a test demonstrating what things we could allow with a smarter const qualification\n \n+// this is fine because is not possible to mutate through an immutable reference.\n static FOO: &&mut u32 = &&mut 42;\n \n+// this is fine because accessing an immutable static `BAR` is equivalent to accessing `*&BAR`\n+// which puts the mutable reference behind an immutable one.\n static BAR: &mut () = &mut ();\n \n struct Foo<T>(T);\n \n+// this is fine for the same reason as `BAR`.\n static BOO: &mut Foo<()> = &mut Foo(());\n \n struct Meh {\n@@ -25,6 +29,7 @@ static MEH: Meh = Meh {\n     //~^ WARN: skipping const checks\n };\n \n+// this is fine for the same reason as `BAR`.\n static OH_YES: &mut i32 = &mut 42;\n \n fn main() {"}, {"sha": "3e1300c63c17d6a737ecea4fd9806b2d5c6fb6bb", "filename": "src/test/ui/consts/miri_unleashed/mutable_references.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fmutable_references.stderr?ref=19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "patch": "@@ -1,11 +1,11 @@\n warning: skipping const checks\n-  --> $DIR/mutable_references.rs:24:8\n+  --> $DIR/mutable_references.rs:28:8\n    |\n LL |     x: &UnsafeCell::new(42),\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error[E0594]: cannot assign to `*OH_YES`, as `OH_YES` is an immutable static item\n-  --> $DIR/mutable_references.rs:34:5\n+  --> $DIR/mutable_references.rs:39:5\n    |\n LL |     *OH_YES = 99;\n    |     ^^^^^^^^^^^^ cannot assign"}, {"sha": "821c501c9fcc5e4cec5cc3a73283e58bd45a1352", "filename": "src/test/ui/consts/miri_unleashed/read_from_static.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fread_from_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19ddfb545bb6e70ba3281bdce4f40ae8e564a53a/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fread_from_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fread_from_static.rs?ref=19ddfb545bb6e70ba3281bdce4f40ae8e564a53a", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+// compile-flags: -Zunleash-the-miri-inside-of-you\n+#![feature(const_mut_refs)]\n+#![allow(const_err)]\n+\n+static OH_YES: &mut i32 = &mut 42;\n+\n+fn main() {\n+    // Make sure `OH_YES` can be read.\n+    assert_eq!(*OH_YES, 42);\n+}"}]}