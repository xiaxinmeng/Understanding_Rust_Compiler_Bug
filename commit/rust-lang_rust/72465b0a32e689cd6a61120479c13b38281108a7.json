{"sha": "72465b0a32e689cd6a61120479c13b38281108a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNDY1YjBhMzJlNjg5Y2Q2YTYxMTIwNDc5YzEzYjM4MjgxMTA4YTc=", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-07-17T05:05:57Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2021-07-27T19:47:49Z"}, "message": "Prohibit `#[default]` in invalid places", "tree": {"sha": "bb393cd6798d720ac4bee1b48e213e5df02f6c0d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb393cd6798d720ac4bee1b48e213e5df02f6c0d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72465b0a32e689cd6a61120479c13b38281108a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQTgxeqBxcDGar1sVhy4DhnkZitapAUCYQBi5QAKCRC4DhnkZita\npDCtAQCVWANlDrFDjYzquu1E7iPDZhggK8G3A5mK603/SHWfHgD+NJsAsBJodlSF\nzgZTqK38l6uFzG1ArApwoU7VdZwnQgU=\n=zkbQ\n-----END PGP SIGNATURE-----", "payload": "tree bb393cd6798d720ac4bee1b48e213e5df02f6c0d\nparent 5ae2371cebbe9c82603739980eea20bad6dadcdb\nauthor Jacob Pratt <jacob@jhpratt.dev> 1626498357 -0400\ncommitter Jacob Pratt <jacob@jhpratt.dev> 1627415269 -0400\n\nProhibit `#[default]` in invalid places\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72465b0a32e689cd6a61120479c13b38281108a7", "html_url": "https://github.com/rust-lang/rust/commit/72465b0a32e689cd6a61120479c13b38281108a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72465b0a32e689cd6a61120479c13b38281108a7/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae2371cebbe9c82603739980eea20bad6dadcdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae2371cebbe9c82603739980eea20bad6dadcdb", "html_url": "https://github.com/rust-lang/rust/commit/5ae2371cebbe9c82603739980eea20bad6dadcdb"}], "stats": {"total": 160, "additions": 131, "deletions": 29}, "files": [{"sha": "8c53094b6249669d0ef78dd9b80ed48a3f242d39", "filename": "compiler/rustc_builtin_macros/src/deriving/default.rs", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/72465b0a32e689cd6a61120479c13b38281108a7/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72465b0a32e689cd6a61120479c13b38281108a7/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs?ref=72465b0a32e689cd6a61120479c13b38281108a7", "patch": "@@ -2,6 +2,7 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n \n use rustc_ast::ptr::P;\n+use rustc_ast::walk_list;\n use rustc_ast::EnumDef;\n use rustc_ast::VariantData;\n use rustc_ast::{Expr, MetaItem};\n@@ -19,6 +20,8 @@ pub fn expand_deriving_default(\n     item: &Annotatable,\n     push: &mut dyn FnMut(Annotatable),\n ) {\n+    item.visit_with(&mut DetectNonVariantDefaultAttr { cx });\n+\n     let inline = cx.meta_word(span, sym::inline);\n     let attrs = vec![cx.attribute(inline)];\n     let trait_def = TraitDef {\n@@ -184,9 +187,12 @@ fn extract_default_variant<'a>(\n     };\n \n     if !matches!(variant.data, VariantData::Unit(..)) {\n-        cx.struct_span_err(variant.ident.span, \"`#[default]` may only be used on unit variants\")\n-            .help(\"consider a manual implementation of `Default`\")\n-            .emit();\n+        cx.struct_span_err(\n+            variant.ident.span,\n+            \"the `#[default]` attribute may only be used on unit enum variants\",\n+        )\n+        .help(\"consider a manual implementation of `Default`\")\n+        .emit();\n \n         return Err(());\n     }\n@@ -253,3 +259,31 @@ fn validate_default_attribute(\n     }\n     Ok(())\n }\n+\n+struct DetectNonVariantDefaultAttr<'a, 'b> {\n+    cx: &'a ExtCtxt<'b>,\n+}\n+\n+impl<'a, 'b> rustc_ast::visit::Visitor<'a> for DetectNonVariantDefaultAttr<'a, 'b> {\n+    fn visit_attribute(&mut self, attr: &'a rustc_ast::Attribute) {\n+        if attr.has_name(kw::Default) {\n+            self.cx\n+                .struct_span_err(\n+                    attr.span,\n+                    \"the `#[default]` attribute may only be used on unit enum variants\",\n+                )\n+                .emit();\n+        }\n+\n+        rustc_ast::visit::walk_attribute(self, attr);\n+    }\n+    fn visit_variant(&mut self, v: &'a rustc_ast::Variant) {\n+        self.visit_ident(v.ident);\n+        self.visit_vis(&v.vis);\n+        self.visit_variant_data(&v.data);\n+        walk_list!(self, visit_anon_const, &v.disr_expr);\n+        for attr in &v.attrs {\n+            rustc_ast::visit::walk_attribute(self, attr);\n+        }\n+    }\n+}"}, {"sha": "faacc6f081d31cdf0205d9852561f0b247927a59", "filename": "src/test/ui/macros/macros-nonfatal-errors.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/72465b0a32e689cd6a61120479c13b38281108a7/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72465b0a32e689cd6a61120479c13b38281108a7/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs?ref=72465b0a32e689cd6a61120479c13b38281108a7", "patch": "@@ -5,8 +5,40 @@\n \n #![feature(asm, llvm_asm)]\n #![feature(trace_macros, concat_idents)]\n+#![feature(stmt_expr_attributes, arbitrary_enum_discriminant)]\n #![feature(derive_default_enum)]\n \n+#[derive(Default)]\n+struct DefaultInnerAttrStruct {\n+    #[default] //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n+    foo: (),\n+}\n+\n+#[derive(Default)]\n+struct DefaultInnerAttrTupleStruct(#[default] ());\n+//~^ ERROR the `#[default]` attribute may only be used on unit enum variants\n+\n+#[derive(Default)]\n+#[default] //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n+struct DefaultOuterAttrStruct {}\n+\n+#[derive(Default)]\n+#[default] //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n+enum DefaultOuterAttrEnum {\n+    #[default]\n+    Foo,\n+}\n+\n+#[rustfmt::skip] // needs some work to handle this case\n+#[repr(u8)]\n+#[derive(Default)]\n+enum AttrOnInnerExpression {\n+    Foo = #[default] 0, //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n+    Bar([u8; #[default] 1]), //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n+    #[default]\n+    Baz,\n+}\n+\n #[derive(Default)] //~ ERROR no default declared\n enum NoDeclaredDefault {\n     Foo,\n@@ -50,7 +82,7 @@ enum ManyDefaultAttrs {\n #[derive(Default)]\n enum DefaultHasFields {\n     #[default]\n-    Foo {}, //~ ERROR `#[default]` may only be used on unit variants\n+    Foo {}, //~ ERROR the `#[default]` attribute may only be used on unit enum variants\n     Bar,\n }\n "}, {"sha": "e0ed8522bf6523f7ac4bf1af9a9d7c8881b778b5", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 61, "deletions": 25, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/72465b0a32e689cd6a61120479c13b38281108a7/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/72465b0a32e689cd6a61120479c13b38281108a7/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=72465b0a32e689cd6a61120479c13b38281108a7", "patch": "@@ -1,5 +1,41 @@\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:13:5\n+   |\n+LL |     #[default]\n+   |     ^^^^^^^^^^\n+\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:18:36\n+   |\n+LL | struct DefaultInnerAttrTupleStruct(#[default] ());\n+   |                                    ^^^^^^^^^^\n+\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:22:1\n+   |\n+LL | #[default]\n+   | ^^^^^^^^^^\n+\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:26:1\n+   |\n+LL | #[default]\n+   | ^^^^^^^^^^\n+\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:36:11\n+   |\n+LL |     Foo = #[default] 0,\n+   |           ^^^^^^^^^^\n+\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:37:14\n+   |\n+LL |     Bar([u8; #[default] 1]),\n+   |              ^^^^^^^^^^\n+\n error: no default declared\n-  --> $DIR/macros-nonfatal-errors.rs:10:10\n+  --> $DIR/macros-nonfatal-errors.rs:42:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -8,7 +44,7 @@ LL | #[derive(Default)]\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: multiple declared defaults\n-  --> $DIR/macros-nonfatal-errors.rs:16:10\n+  --> $DIR/macros-nonfatal-errors.rs:48:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -26,15 +62,15 @@ LL |     Baz,\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `#[default]` attribute does not accept a value\n-  --> $DIR/macros-nonfatal-errors.rs:28:5\n+  --> $DIR/macros-nonfatal-errors.rs:60:5\n    |\n LL |     #[default = 1]\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: try using `#[default]`\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:36:5\n+  --> $DIR/macros-nonfatal-errors.rs:68:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -45,13 +81,13 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing this\n-  --> $DIR/macros-nonfatal-errors.rs:35:5\n+  --> $DIR/macros-nonfatal-errors.rs:67:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:46:5\n+  --> $DIR/macros-nonfatal-errors.rs:78:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -63,7 +99,7 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing these\n-  --> $DIR/macros-nonfatal-errors.rs:43:5\n+  --> $DIR/macros-nonfatal-errors.rs:75:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n@@ -72,16 +108,16 @@ LL |     #[default]\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n-error: `#[default]` may only be used on unit variants\n-  --> $DIR/macros-nonfatal-errors.rs:53:5\n+error: the `#[default]` attribute may only be used on unit enum variants\n+  --> $DIR/macros-nonfatal-errors.rs:85:5\n    |\n LL |     Foo {},\n    |     ^^^\n    |\n    = help: consider a manual implementation of `Default`\n \n error: default variant must be exhaustive\n-  --> $DIR/macros-nonfatal-errors.rs:61:5\n+  --> $DIR/macros-nonfatal-errors.rs:93:5\n    |\n LL |     #[non_exhaustive]\n    |     ----------------- declared `#[non_exhaustive]` here\n@@ -91,51 +127,51 @@ LL |     Foo,\n    = help: consider a manual implementation of `Default`\n \n error: asm template must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:66:10\n+  --> $DIR/macros-nonfatal-errors.rs:98:10\n    |\n LL |     asm!(invalid);\n    |          ^^^^^^^\n \n error: inline assembly must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:67:15\n+  --> $DIR/macros-nonfatal-errors.rs:99:15\n    |\n LL |     llvm_asm!(invalid);\n    |               ^^^^^^^\n \n error: concat_idents! requires ident args.\n-  --> $DIR/macros-nonfatal-errors.rs:69:5\n+  --> $DIR/macros-nonfatal-errors.rs:101:5\n    |\n LL |     concat_idents!(\"not\", \"idents\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:71:17\n+  --> $DIR/macros-nonfatal-errors.rs:103:17\n    |\n LL |     option_env!(invalid);\n    |                 ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:72:10\n+  --> $DIR/macros-nonfatal-errors.rs:104:10\n    |\n LL |     env!(invalid);\n    |          ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:73:10\n+  --> $DIR/macros-nonfatal-errors.rs:105:10\n    |\n LL |     env!(foo, abr, baz);\n    |          ^^^\n \n error: environment variable `RUST_HOPEFULLY_THIS_DOESNT_EXIST` not defined\n-  --> $DIR/macros-nonfatal-errors.rs:74:5\n+  --> $DIR/macros-nonfatal-errors.rs:106:5\n    |\n LL |     env!(\"RUST_HOPEFULLY_THIS_DOESNT_EXIST\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: format argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:76:13\n+  --> $DIR/macros-nonfatal-errors.rs:108:13\n    |\n LL |     format!(invalid);\n    |             ^^^^^^^\n@@ -146,44 +182,44 @@ LL |     format!(\"{}\", invalid);\n    |             ^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:78:14\n+  --> $DIR/macros-nonfatal-errors.rs:110:14\n    |\n LL |     include!(invalid);\n    |              ^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:80:18\n+  --> $DIR/macros-nonfatal-errors.rs:112:18\n    |\n LL |     include_str!(invalid);\n    |                  ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:81:5\n+  --> $DIR/macros-nonfatal-errors.rs:113:5\n    |\n LL |     include_str!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_str` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:82:20\n+  --> $DIR/macros-nonfatal-errors.rs:114:20\n    |\n LL |     include_bytes!(invalid);\n    |                    ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:83:5\n+  --> $DIR/macros-nonfatal-errors.rs:115:5\n    |\n LL |     include_bytes!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trace_macros! accepts only `true` or `false`\n-  --> $DIR/macros-nonfatal-errors.rs:85:5\n+  --> $DIR/macros-nonfatal-errors.rs:117:5\n    |\n LL |     trace_macros!(invalid);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 21 previous errors\n+error: aborting due to 27 previous errors\n "}]}