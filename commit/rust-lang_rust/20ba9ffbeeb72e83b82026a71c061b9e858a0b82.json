{"sha": "20ba9ffbeeb72e83b82026a71c061b9e858a0b82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYmE5ZmZiZWViNzJlODNiODIwMjZhNzFjMDYxYjllODU4YTBiODI=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-10-24T12:12:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-24T12:12:08Z"}, "message": "Rollup merge of #78250 - camelid:document-inline-const, r=spastorino\n\nDocument inline-const\n\nPart of #76001.\n\nr? @spastorino", "tree": {"sha": "3a50962f0faa990a16c596cbe0e703b57df61137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a50962f0faa990a16c596cbe0e703b57df61137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20ba9ffbeeb72e83b82026a71c061b9e858a0b82", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJflBoYCRBK7hj4Ov3rIwAAdHIIACyL194U7EggMqC0KZgzNjIH\n4jTe7riV0RTUbmIXfIO37Y6rKyVKVCK9UVXeAutsjzuPxjk+H7o9wrT7eoK1cXwO\noGnjjl2NpQHD8BZuXJ7rH/wdnDnO/QLeujDBWqP60ZF21qfdwERBIoe4wEBFJaEN\nq4Qx+4w6ot+OrYT8Tr8/7jhUBu+bJzlrKZPN2+u+OeQvFf0lHZIUl9nqJBWgbMNM\nmn+Syb+C3j5RrW/SYf6wYOobF/TB/EgD4oqUyGt0JQ6uCQ/75k+wSx9OntImsLLH\nuvCuvMZd07+CS+2ykPKMJwdrsYdw7m2DWFStoHdhKHqRUDxMdBytgxFDNGGrzgE=\n=MrXI\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a50962f0faa990a16c596cbe0e703b57df61137\nparent 77cd5b5485a9ba13ff291cc993cff44cf81e1901\nparent 9775ac60dcc92dbb04861863a69eacfafeea5c4c\nauthor Jonas Schievink <jonasschievink@gmail.com> 1603541528 +0200\ncommitter GitHub <noreply@github.com> 1603541528 +0200\n\nRollup merge of #78250 - camelid:document-inline-const, r=spastorino\n\nDocument inline-const\n\nPart of #76001.\n\nr? @spastorino\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20ba9ffbeeb72e83b82026a71c061b9e858a0b82", "html_url": "https://github.com/rust-lang/rust/commit/20ba9ffbeeb72e83b82026a71c061b9e858a0b82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20ba9ffbeeb72e83b82026a71c061b9e858a0b82/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77cd5b5485a9ba13ff291cc993cff44cf81e1901", "url": "https://api.github.com/repos/rust-lang/rust/commits/77cd5b5485a9ba13ff291cc993cff44cf81e1901", "html_url": "https://github.com/rust-lang/rust/commit/77cd5b5485a9ba13ff291cc993cff44cf81e1901"}, {"sha": "9775ac60dcc92dbb04861863a69eacfafeea5c4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9775ac60dcc92dbb04861863a69eacfafeea5c4c", "html_url": "https://github.com/rust-lang/rust/commit/9775ac60dcc92dbb04861863a69eacfafeea5c4c"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "00e1c79ca3ff39bf7de34f33a4d0f0e0f25215b3", "filename": "src/doc/unstable-book/src/language-features/inline-const.md", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/20ba9ffbeeb72e83b82026a71c061b9e858a0b82/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Finline-const.md", "raw_url": "https://github.com/rust-lang/rust/raw/20ba9ffbeeb72e83b82026a71c061b9e858a0b82/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Finline-const.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Finline-const.md?ref=20ba9ffbeeb72e83b82026a71c061b9e858a0b82", "patch": "@@ -0,0 +1,45 @@\n+# `inline_const`\n+\n+The tracking issue for this feature is: [#76001]\n+\n+------\n+\n+This feature allows you to use inline constant expressions. For example, you can\n+turn this code:\n+\n+```rust\n+# fn add_one(x: i32) -> i32 { x + 1 }\n+const MY_COMPUTATION: i32 = 1 + 2 * 3 / 4;\n+\n+fn main() {\n+    let x = add_one(MY_COMPUTATION);\n+}\n+```\n+\n+into this code:\n+\n+```rust\n+#![feature(inline_const)]\n+\n+# fn add_one(x: i32) -> i32 { x + 1 }\n+fn main() {\n+    let x = add_one(const { 1 + 2 * 3 / 4 });\n+}\n+```\n+\n+You can also use inline constant expressions in patterns:\n+\n+```rust\n+#![feature(inline_const)]\n+\n+const fn one() -> i32 { 1 }\n+\n+let some_int = 3;\n+match some_int {\n+    const { 1 + 2 } => println!(\"Matched 1 + 2\"),\n+    const { one() } => println!(\"Matched const fn returning 1\"),\n+    _ => println!(\"Didn't match anything :(\"),\n+}\n+```\n+\n+[#76001]: https://github.com/rust-lang/rust/issues/76001"}]}