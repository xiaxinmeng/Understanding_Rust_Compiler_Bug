{"sha": "7c4eb66c1acf10216fa866e05d646bdaea229ded", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNGViNjZjMWFjZjEwMjE2ZmE4NjZlMDVkNjQ2YmRhZWEyMjlkZWQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-22T14:56:59Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-23T10:32:14Z"}, "message": "Merge hir::MacroDef::is_* into hir::MacroDef::kind", "tree": {"sha": "89df7b614ec5f88d7a4e43313e84d62c12cbceee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89df7b614ec5f88d7a4e43313e84d62c12cbceee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c4eb66c1acf10216fa866e05d646bdaea229ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c4eb66c1acf10216fa866e05d646bdaea229ded", "html_url": "https://github.com/rust-lang/rust/commit/7c4eb66c1acf10216fa866e05d646bdaea229ded", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c4eb66c1acf10216fa866e05d646bdaea229ded/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bad4e48672f928644457cece3b7e21dd78ea1e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bad4e48672f928644457cece3b7e21dd78ea1e9b", "html_url": "https://github.com/rust-lang/rust/commit/bad4e48672f928644457cece3b7e21dd78ea1e9b"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "5da6a034045879c942de2185572245c44f752a9c", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=7c4eb66c1acf10216fa866e05d646bdaea229ded", "patch": "@@ -1116,6 +1116,14 @@ impl BuiltinType {\n     }\n }\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub enum MacroKind {\n+    Declarative,\n+    ProcMacro,\n+    Derive,\n+    BuiltIn,\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct MacroDef {\n     pub(crate) id: MacroDefId,\n@@ -1140,20 +1148,15 @@ impl MacroDef {\n         }\n     }\n \n-    /// Indicate it is a proc-macro\n-    pub fn is_proc_macro(&self) -> bool {\n-        matches!(self.id.kind, MacroDefKind::ProcMacro(..))\n-    }\n-\n-    /// Indicate it is a derive macro\n-    pub fn is_derive_macro(&self) -> bool {\n-        // FIXME: wrong for `ProcMacro`\n-        matches!(self.id.kind, MacroDefKind::ProcMacro(..) | MacroDefKind::BuiltInDerive(..))\n-    }\n-\n-    /// Indicate it is a declarative macro\n-    pub fn is_declarative(&self) -> bool {\n-        matches!(self.id.kind, MacroDefKind::Declarative(..))\n+    pub fn kind(&self) -> MacroKind {\n+        match self.id.kind {\n+            MacroDefKind::Declarative(_) => MacroKind::Declarative,\n+            MacroDefKind::BuiltIn(_, _) => MacroKind::BuiltIn,\n+            MacroDefKind::BuiltInDerive(_, _) => MacroKind::Derive,\n+            MacroDefKind::BuiltInEager(_, _) => MacroKind::BuiltIn,\n+            // FIXME might be a derive\n+            MacroDefKind::ProcMacro(_, _) => MacroKind::ProcMacro,\n+        }\n     }\n }\n "}, {"sha": "b1505c74b4ee968a971bc6d3ae1e340e3184d50d", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=7c4eb66c1acf10216fa866e05d646bdaea229ded", "patch": "@@ -246,7 +246,8 @@ fn get_derive_names_in_scope(ctx: &CompletionContext) -> FxHashSet<String> {\n     let mut result = FxHashSet::default();\n     ctx.scope.process_all_names(&mut |name, scope_def| {\n         if let hir::ScopeDef::MacroDef(mac) = scope_def {\n-            if mac.is_derive_macro() {\n+            // FIXME kind() doesn't check whether proc-macro is a derive\n+            if mac.kind() == hir::MacroKind::Derive || mac.kind() == hir::MacroKind::ProcMacro {\n                 result.insert(name.to_string());\n             }\n         }"}, {"sha": "ff958c757c5df45871f70854f473124272cb2b71", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4eb66c1acf10216fa866e05d646bdaea229ded/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=7c4eb66c1acf10216fa866e05d646bdaea229ded", "patch": "@@ -257,7 +257,7 @@ impl Definition {\n         };\n \n         if let Definition::Macro(macro_def) = self {\n-            if macro_def.is_declarative() {\n+            if macro_def.kind() == hir::MacroKind::Declarative {\n                 return if macro_def.attrs(db).by_key(\"macro_export\").exists() {\n                     rev_dep_scope()\n                 } else {"}]}