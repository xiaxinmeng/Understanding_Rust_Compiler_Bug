{"sha": "3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNzY0Zjk3ZWI0ZjA3ZjZjZjVhYjc2ZWNkZDVhOTAyYzQ2NDVmNDM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T11:44:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-03T11:48:23Z"}, "message": "hardcode vec macro", "tree": {"sha": "8ecd92761eed9b6285c4009955deb06ceb483fe8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ecd92761eed9b6285c4009955deb06ceb483fe8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "html_url": "https://github.com/rust-lang/rust/commit/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d29e98dd975c6d72a62f3d3e178fef1e2ae8fc6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29e98dd975c6d72a62f3d3e178fef1e2ae8fc6a", "html_url": "https://github.com/rust-lang/rust/commit/d29e98dd975c6d72a62f3d3e178fef1e2ae8fc6a"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "35e153ca07420dac2afdc86da50b5e38137bed58", "filename": "crates/ra_analysis/src/syntax_highlighting.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsyntax_highlighting.rs?ref=3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "patch": "@@ -43,6 +43,7 @@ mod tests {\n             \"\n             fn main() {\n                 ctry!({ let x = 92; x});\n+                vec![{ let x = 92; x}];\n             }\n             \",\n         );\n@@ -53,10 +54,17 @@ mod tests {\n                 HighlightedRange { range: [41; 46), tag: \"macro\" },\n                 HighlightedRange { range: [49; 52), tag: \"keyword\" },\n                 HighlightedRange { range: [57; 59), tag: \"literal\" },\n+                HighlightedRange { range: [82; 86), tag: \"macro\" },\n+                HighlightedRange { range: [89; 92), tag: \"keyword\" },\n+                HighlightedRange { range: [97; 99), tag: \"literal\" },\n                 HighlightedRange { range: [49; 52), tag: \"keyword\" },\n                 HighlightedRange { range: [53; 54), tag: \"function\" },\n                 HighlightedRange { range: [57; 59), tag: \"literal\" },\n-                HighlightedRange { range: [61; 62), tag: \"text\" }]\"#,\n+                HighlightedRange { range: [61; 62), tag: \"text\" },\n+                HighlightedRange { range: [89; 92), tag: \"keyword\" },\n+                HighlightedRange { range: [93; 94), tag: \"function\" },\n+                HighlightedRange { range: [97; 99), tag: \"literal\" },\n+                HighlightedRange { range: [101; 102), tag: \"text\" }]\"#,\n             &highlights,\n         )\n     }"}, {"sha": "1b378c97731d35349088bb5b11badfd9f40cbaa5", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=3e764f97eb4f07f6cf5ab76ecdd5a902c4645f43", "patch": "@@ -21,6 +21,7 @@ use crate::{HirDatabase, MacroCallId};\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum MacroDef {\n     CTry,\n+    Vec,\n     QueryGroup,\n }\n \n@@ -40,6 +41,8 @@ impl MacroDef {\n             let name_ref = path.segment()?.name_ref()?;\n             if name_ref.text() == \"ctry\" {\n                 MacroDef::CTry\n+            } else if name_ref.text() == \"vec\" {\n+                MacroDef::Vec\n             } else if name_ref.text() == \"query_group\" {\n                 MacroDef::QueryGroup\n             } else {\n@@ -59,6 +62,7 @@ impl MacroDef {\n     fn expand(self, input: MacroInput) -> Option<MacroExpansion> {\n         match self {\n             MacroDef::CTry => self.expand_ctry(input),\n+            MacroDef::Vec => self.expand_vec(input),\n             MacroDef::QueryGroup => self.expand_query_group(input),\n         }\n     }\n@@ -86,6 +90,20 @@ impl MacroDef {\n         };\n         Some(res)\n     }\n+    fn expand_vec(self, input: MacroInput) -> Option<MacroExpansion> {\n+        let text = format!(r\"fn dummy() {{ {}; }}\", input.text);\n+        let file = SourceFileNode::parse(&text);\n+        let array_expr = file.syntax().descendants().find_map(ast::ArrayExpr::cast)?;\n+        let ptr = LocalSyntaxPtr::new(array_expr.syntax());\n+        let src_range = TextRange::offset_len(0.into(), TextUnit::of_str(&input.text));\n+        let ranges_map = vec![(src_range, array_expr.syntax().range())];\n+        let res = MacroExpansion {\n+            text,\n+            ranges_map,\n+            ptr,\n+        };\n+        Some(res)\n+    }\n     fn expand_query_group(self, input: MacroInput) -> Option<MacroExpansion> {\n         let anchor = \"trait \";\n         let pos = input.text.find(anchor)? + anchor.len();"}]}