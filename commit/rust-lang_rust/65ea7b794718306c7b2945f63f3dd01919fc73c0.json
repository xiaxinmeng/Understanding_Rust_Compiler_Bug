{"sha": "65ea7b794718306c7b2945f63f3dd01919fc73c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZWE3Yjc5NDcxODMwNmM3YjI5NDVmNjNmM2RkMDE5MTlmYzczYzA=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-10T17:25:50Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-11T14:36:46Z"}, "message": "rustdoc: Replace HirVec with slices in doctree", "tree": {"sha": "1f3e113d3e61beff7ca7bd14386019161643bf26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f3e113d3e61beff7ca7bd14386019161643bf26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65ea7b794718306c7b2945f63f3dd01919fc73c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65ea7b794718306c7b2945f63f3dd01919fc73c0", "html_url": "https://github.com/rust-lang/rust/commit/65ea7b794718306c7b2945f63f3dd01919fc73c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65ea7b794718306c7b2945f63f3dd01919fc73c0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee36cfaff97116bcc6230408015dbeb3fb5e2bb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee36cfaff97116bcc6230408015dbeb3fb5e2bb9", "html_url": "https://github.com/rust-lang/rust/commit/ee36cfaff97116bcc6230408015dbeb3fb5e2bb9"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "6e453561f6da20f06d283b1e666dbc958f4a3032", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/65ea7b794718306c7b2945f63f3dd01919fc73c0/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ea7b794718306c7b2945f63f3dd01919fc73c0/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=65ea7b794718306c7b2945f63f3dd01919fc73c0", "patch": "@@ -13,7 +13,7 @@ use rustc::hir::ptr::P;\n \n pub struct Module<'hir> {\n     pub name: Option<Name>,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub where_outer: Span,\n     pub where_inner: Span,\n     pub extern_crates: Vec<ExternCrate<'hir>>,\n@@ -41,7 +41,7 @@ pub struct Module<'hir> {\n impl Module<'hir> {\n     pub fn new(\n         name: Option<Name>,\n-        attrs: &'hir hir::HirVec<ast::Attribute>,\n+        attrs: &'hir [ast::Attribute],\n         vis: &'hir hir::Visibility,\n     ) -> Module<'hir> {\n         Module {\n@@ -89,7 +89,7 @@ pub struct Struct<'hir> {\n     pub struct_type: StructType,\n     pub name: Name,\n     pub generics: &'hir hir::Generics,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub fields: &'hir [hir::StructField],\n     pub whence: Span,\n }\n@@ -100,7 +100,7 @@ pub struct Union<'hir> {\n     pub struct_type: StructType,\n     pub name: Name,\n     pub generics: &'hir hir::Generics,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub fields: &'hir [hir::StructField],\n     pub whence: Span,\n }\n@@ -109,7 +109,7 @@ pub struct Enum<'hir> {\n     pub vis: &'hir hir::Visibility,\n     pub variants: Vec<Variant<'hir>>,\n     pub generics: &'hir hir::Generics,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub id: hir::HirId,\n     pub whence: Span,\n     pub name: Name,\n@@ -118,14 +118,14 @@ pub struct Enum<'hir> {\n pub struct Variant<'hir> {\n     pub name: Name,\n     pub id: hir::HirId,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub def: &'hir hir::VariantData,\n     pub whence: Span,\n }\n \n pub struct Function<'hir> {\n     pub decl: &'hir hir::FnDecl,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub id: hir::HirId,\n     pub name: Name,\n     pub vis: &'hir hir::Visibility,\n@@ -140,7 +140,7 @@ pub struct Typedef<'hir> {\n     pub gen: &'hir hir::Generics,\n     pub name: Name,\n     pub id: hir::HirId,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n     pub vis: &'hir hir::Visibility,\n }\n@@ -149,7 +149,7 @@ pub struct OpaqueTy<'hir> {\n     pub opaque_ty: &'hir hir::OpaqueTy,\n     pub name: Name,\n     pub id: hir::HirId,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n     pub vis: &'hir hir::Visibility,\n }\n@@ -160,7 +160,7 @@ pub struct Static<'hir> {\n     pub mutability: hir::Mutability,\n     pub expr: hir::BodyId,\n     pub name: Name,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub vis: &'hir hir::Visibility,\n     pub id: hir::HirId,\n     pub whence: Span,\n@@ -170,7 +170,7 @@ pub struct Constant<'hir> {\n     pub type_: &'hir P<hir::Ty>,\n     pub expr: hir::BodyId,\n     pub name: Name,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub vis: &'hir hir::Visibility,\n     pub id: hir::HirId,\n     pub whence: Span,\n@@ -182,8 +182,8 @@ pub struct Trait<'hir> {\n     pub name: Name,\n     pub items: Vec<&'hir hir::TraitItem>,\n     pub generics: &'hir hir::Generics,\n-    pub bounds: &'hir hir::HirVec<hir::GenericBound>,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub bounds: &'hir [hir::GenericBound],\n+    pub attrs: &'hir [ast::Attribute],\n     pub id: hir::HirId,\n     pub whence: Span,\n     pub vis: &'hir hir::Visibility,\n@@ -192,8 +192,8 @@ pub struct Trait<'hir> {\n pub struct TraitAlias<'hir> {\n     pub name: Name,\n     pub generics: &'hir hir::Generics,\n-    pub bounds: &'hir hir::HirVec<hir::GenericBound>,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub bounds: &'hir [hir::GenericBound],\n+    pub attrs: &'hir [ast::Attribute],\n     pub id: hir::HirId,\n     pub whence: Span,\n     pub vis: &'hir hir::Visibility,\n@@ -208,7 +208,7 @@ pub struct Impl<'hir> {\n     pub trait_: &'hir Option<hir::TraitRef>,\n     pub for_: &'hir P<hir::Ty>,\n     pub items: Vec<&'hir hir::ImplItem>,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n     pub vis: &'hir hir::Visibility,\n     pub id: hir::HirId,\n@@ -219,7 +219,7 @@ pub struct ForeignItem<'hir> {\n     pub id: hir::HirId,\n     pub name: Name,\n     pub kind: &'hir hir::ForeignItemKind,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n }\n \n@@ -229,7 +229,7 @@ pub struct Macro<'hir> {\n     pub name: Name,\n     pub hid: hir::HirId,\n     pub def_id: hir::def_id::DefId,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n     pub matchers: hir::HirVec<Span>,\n     pub imported_from: Option<Name>,\n@@ -240,15 +240,15 @@ pub struct ExternCrate<'hir> {\n     pub cnum: CrateNum,\n     pub path: Option<String>,\n     pub vis: &'hir hir::Visibility,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n }\n \n pub struct Import<'hir> {\n     pub name: Name,\n     pub id: hir::HirId,\n     pub vis: &'hir hir::Visibility,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub path: &'hir hir::Path,\n     pub glob: bool,\n     pub whence: Span,\n@@ -259,7 +259,7 @@ pub struct ProcMacro<'hir> {\n     pub id: hir::HirId,\n     pub kind: MacroKind,\n     pub helpers: Vec<Name>,\n-    pub attrs: &'hir hir::HirVec<ast::Attribute>,\n+    pub attrs: &'hir [ast::Attribute],\n     pub whence: Span,\n }\n "}]}