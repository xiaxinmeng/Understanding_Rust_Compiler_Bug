{"sha": "7173fd78c62c84dffbf0c05c895a2ec57fe170af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxNzNmZDc4YzYyYzg0ZGZmYmYwYzA1Yzg5NWEyZWM1N2ZlMTcwYWY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-18T23:58:22Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-04-23T17:28:14Z"}, "message": "in unit tests, use `note` to dump multiple program clauses\n\n(rather than issuing multiple errors)\n\nAlso, reorder so that the annotations are considered \"used\" when the\nlint runs.", "tree": {"sha": "2902f9ef428d2423a553c7159e6d45383d92b099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2902f9ef428d2423a553c7159e6d45383d92b099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7173fd78c62c84dffbf0c05c895a2ec57fe170af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7173fd78c62c84dffbf0c05c895a2ec57fe170af", "html_url": "https://github.com/rust-lang/rust/commit/7173fd78c62c84dffbf0c05c895a2ec57fe170af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7173fd78c62c84dffbf0c05c895a2ec57fe170af/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94639ca40697b0cb06a6c6ec77c42ec152b9b899", "url": "https://api.github.com/repos/rust-lang/rust/commits/94639ca40697b0cb06a6c6ec77c42ec152b9b899", "html_url": "https://github.com/rust-lang/rust/commit/94639ca40697b0cb06a6c6ec77c42ec152b9b899"}], "stats": {"total": 171, "additions": 61, "deletions": 110}, "files": [{"sha": "2fb811eba1e9a197eb6ec0cae4edb099b0a74723", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -1155,6 +1155,10 @@ where\n                 }\n             });\n \n+            time(sess, \"dumping chalk-like clauses\", || {\n+                rustc_traits::lowering::dump_program_clauses(tcx);\n+            });\n+\n             time(sess, \"MIR effect checking\", || {\n                 for def_id in tcx.body_owners() {\n                     mir::transform::check_unsafety::check_unsafety(tcx, def_id)\n@@ -1178,10 +1182,6 @@ where\n \n             time(sess, \"lint checking\", || lint::check_crate(tcx));\n \n-            time(sess, \"dumping chalk-like clauses\", || {\n-                rustc_traits::lowering::dump_program_clauses(tcx)\n-            });\n-\n             return Ok(f(tcx, analysis, rx, tcx.sess.compile_status()));\n         },\n     )"}, {"sha": "942cf7a657130a8bc2eb4f16900fd27cffa975c1", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -319,19 +319,32 @@ impl<'a, 'tcx> ClauseDumper<'a, 'tcx> {\n     fn process_attrs(&mut self, node_id: ast::NodeId, attrs: &[ast::Attribute]) {\n         let def_id = self.tcx.hir.local_def_id(node_id);\n         for attr in attrs {\n+            let mut clauses = None;\n+\n             if attr.check_name(\"rustc_dump_program_clauses\") {\n-                let clauses = self.tcx.program_clauses_for(def_id);\n-                for clause in *clauses {\n+                clauses = Some(self.tcx.program_clauses_for(def_id));\n+            }\n+\n+            if attr.check_name(\"rustc_dump_env_program_clauses\") {\n+                let param_env = self.tcx.param_env(def_id);\n+                clauses = Some(self.tcx.program_clauses_for_env(param_env));\n+            }\n+\n+            if let Some(clauses) = clauses {\n+                let mut err = self.tcx\n+                    .sess\n+                    .struct_span_err(attr.span, \"program clause dump\");\n+\n+                for clause in clauses.iter() {\n                     // Skip the top-level binder for a less verbose output\n                     let program_clause = match clause {\n                         Clause::Implies(program_clause) => program_clause,\n                         Clause::ForAll(program_clause) => program_clause.skip_binder(),\n                     };\n-                    self.tcx\n-                        .sess\n-                        .struct_span_err(attr.span, &format!(\"{}\", program_clause))\n-                        .emit();\n+                    err.note(&format!(\"{}\", program_clause));\n                 }\n+\n+                err.emit();\n             }\n         }\n     }"}, {"sha": "b38b87cdb1236133197e8b42f825d80e258ff70d", "filename": "src/test/ui/chalkify/lower_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -12,15 +12,15 @@\n \n trait Foo { }\n \n-#[rustc_dump_program_clauses] //~ ERROR Implemented(T: Foo) :-\n+#[rustc_dump_program_clauses] //~ ERROR program clause dump\n impl<T: 'static> Foo for T where T: Iterator<Item = i32> { }\n \n trait Bar {\n     type Assoc;\n }\n \n impl<T> Bar for T where T: Iterator<Item = i32> {\n-    #[rustc_dump_program_clauses] //~ ERROR Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :-\n+    #[rustc_dump_program_clauses] //~ ERROR program clause dump\n     type Assoc = Vec<T>;\n }\n "}, {"sha": "c497d76f8d4f964e9bcaed31ca1808e1bc4cd194", "filename": "src/test/ui/chalkify/lower_impl.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_impl.stderr?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -1,14 +1,18 @@\n-error: Implemented(T: Foo) :- ProjectionEq(<T as std::iter::Iterator>::Item == i32), TypeOutlives(T : 'static), Implemented(T: std::iter::Iterator), Implemented(T: std::marker::Sized).\n+error: program clause dump\n   --> $DIR/lower_impl.rs:15:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(T: Foo) :-\n+LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: Implemented(T: Foo) :- ProjectionEq(<T as std::iter::Iterator>::Item == i32), TypeOutlives(T : 'static), Implemented(T: std::iter::Iterator), Implemented(T: std::marker::Sized).\n \n-error: Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :- Implemented(T: Bar).\n+error: program clause dump\n   --> $DIR/lower_impl.rs:23:5\n    |\n-LL |     #[rustc_dump_program_clauses] //~ ERROR Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :-\n+LL |     #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: Normalize(<T as Bar>::Assoc == std::vec::Vec<T>) :- Implemented(T: Bar).\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7c0f233a645cb00efece3fbe5a2bca54be6e0559", "filename": "src/test/ui/chalkify/lower_trait.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -10,10 +10,7 @@\n \n #![feature(rustc_attrs)]\n \n-#[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n+#[rustc_dump_program_clauses] //~ ERROR program clause dump\n trait Foo<S, T, U> {\n     fn s(S) -> S;\n     fn t(T) -> T;"}, {"sha": "2bd836a8fc1431d54122febeac9104f749b9f2f6", "filename": "src/test/ui/chalkify/lower_trait.stderr", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait.stderr?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -1,26 +1,13 @@\n-error: Implemented(Self: Foo<S, T, U>) :- FromEnv(Self: Foo<S, T, U>).\n+error: program clause dump\n   --> $DIR/lower_trait.rs:13:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n+LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(S: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n-  --> $DIR/lower_trait.rs:13:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(T: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n-  --> $DIR/lower_trait.rs:13:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(U: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n-  --> $DIR/lower_trait.rs:13:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: Implemented(Self: Foo<S, T, U>) :- FromEnv(Self: Foo<S, T, U>).\n+   = note: FromEnv(S: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n+   = note: FromEnv(T: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n+   = note: FromEnv(U: std::marker::Sized) :- FromEnv(Self: Foo<S, T, U>).\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error\n "}, {"sha": "47e9398d3647eefc2646210fdd7f4f7ff8df0195", "filename": "src/test/ui/chalkify/lower_trait_higher_rank.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -10,10 +10,7 @@\n \n #![feature(rustc_attrs)]\n \n-#[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<F>) :-\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n+#[rustc_dump_program_clauses] //~ ERROR program clause dump\n trait Foo<F> where for<'a> F: Fn(&'a (u8, u16)) -> &'a u8\n {\n     fn s(F) -> F;"}, {"sha": "11dc87401802a29fe565d9e017b694ebbbf7335c", "filename": "src/test/ui/chalkify/lower_trait_higher_rank.stderr", "status": "modified", "additions": 7, "deletions": 20, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_higher_rank.stderr?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -1,26 +1,13 @@\n-error: Implemented(Self: Foo<F>) :- FromEnv(Self: Foo<F>).\n+error: program clause dump\n   --> $DIR/lower_trait_higher_rank.rs:13:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<F>) :-\n+LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(F: std::marker::Sized) :- FromEnv(Self: Foo<F>).\n-  --> $DIR/lower_trait_higher_rank.rs:13:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<F>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(F: std::ops::Fn<(&'a (u8, u16),)>) :- FromEnv(Self: Foo<F>).\n-  --> $DIR/lower_trait_higher_rank.rs:13:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<F>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(<F as std::ops::FnOnce<(&'a (u8, u16),)>>::Output == &'a u8) :- FromEnv(Self: Foo<F>).\n-  --> $DIR/lower_trait_higher_rank.rs:13:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<F>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: Implemented(Self: Foo<F>) :- FromEnv(Self: Foo<F>).\n+   = note: FromEnv(F: std::marker::Sized) :- FromEnv(Self: Foo<F>).\n+   = note: FromEnv(F: std::ops::Fn<(&'a (u8, u16),)>) :- FromEnv(Self: Foo<F>).\n+   = note: FromEnv(<F as std::ops::FnOnce<(&'a (u8, u16),)>>::Output == &'a u8) :- FromEnv(Self: Foo<F>).\n \n-error: aborting due to 4 previous errors\n+error: aborting due to previous error\n "}, {"sha": "67ee7c28b6a4e55941e28ccdd24eb521bd7cb986", "filename": "src/test/ui/chalkify/lower_trait_where_clause.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.rs?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -13,13 +13,7 @@\n use std::fmt::{Debug, Display};\n use std::borrow::Borrow;\n \n-#[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n-                              //~| ERROR FromEnv\n-                              //~| ERROR RegionOutlives\n-                              //~| ERROR TypeOutlives\n+#[rustc_dump_program_clauses] //~ ERROR program clause dump\n trait Foo<'a, 'b, S, T, U> where S: Debug, T: Borrow<U>, U: ?Sized, 'a: 'b, U: 'b {\n     fn s(S) -> S;\n     fn t(T) -> T;"}, {"sha": "cfea1379dabefdd324a26f1255f37e8d57ca0711", "filename": "src/test/ui/chalkify/lower_trait_where_clause.stderr", "status": "modified", "additions": 11, "deletions": 39, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7173fd78c62c84dffbf0c05c895a2ec57fe170af/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fchalkify%2Flower_trait_where_clause.stderr?ref=7173fd78c62c84dffbf0c05c895a2ec57fe170af", "patch": "@@ -1,44 +1,16 @@\n-error: Implemented(Self: Foo<'a, 'b, S, T, U>) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+error: program clause dump\n   --> $DIR/lower_trait_where_clause.rs:16:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n+LL | #[rustc_dump_program_clauses] //~ ERROR program clause dump\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(S: std::marker::Sized) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(T: std::marker::Sized) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(S: std::fmt::Debug) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: FromEnv(T: std::borrow::Borrow<U>) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: RegionOutlives('a : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n    |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: TypeOutlives(U : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n-  --> $DIR/lower_trait_where_clause.rs:16:1\n-   |\n-LL | #[rustc_dump_program_clauses] //~ ERROR Implemented(Self: Foo<'a, 'b, S, T, U>) :-\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 7 previous errors\n+   = note: Implemented(Self: Foo<'a, 'b, S, T, U>) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: FromEnv(S: std::marker::Sized) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: FromEnv(T: std::marker::Sized) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: FromEnv(S: std::fmt::Debug) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: FromEnv(T: std::borrow::Borrow<U>) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: RegionOutlives('a : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+   = note: TypeOutlives(U : 'b) :- FromEnv(Self: Foo<'a, 'b, S, T, U>).\n+\n+error: aborting due to previous error\n "}]}