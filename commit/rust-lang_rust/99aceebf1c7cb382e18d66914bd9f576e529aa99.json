{"sha": "99aceebf1c7cb382e18d66914bd9f576e529aa99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YWNlZWJmMWM3Y2IzODJlMThkNjY5MTRiZDlmNTc2ZTUyOWFhOTk=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T03:38:41Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T03:38:41Z"}, "message": "Use the spans of the entire `for` loops for suggestions", "tree": {"sha": "02c3379aa95e9e9b28d7e0359279f96b0260472e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02c3379aa95e9e9b28d7e0359279f96b0260472e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99aceebf1c7cb382e18d66914bd9f576e529aa99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99aceebf1c7cb382e18d66914bd9f576e529aa99", "html_url": "https://github.com/rust-lang/rust/commit/99aceebf1c7cb382e18d66914bd9f576e529aa99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99aceebf1c7cb382e18d66914bd9f576e529aa99/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c71352b18ee7a48e825aefd2862b8e0d16ea45b", "html_url": "https://github.com/rust-lang/rust/commit/5c71352b18ee7a48e825aefd2862b8e0d16ea45b"}], "stats": {"total": 219, "additions": 140, "deletions": 79}, "files": [{"sha": "7c8b6f483bcbf9174e0e5bd845dc21847c63fc70", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/99aceebf1c7cb382e18d66914bd9f576e529aa99/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99aceebf1c7cb382e18d66914bd9f576e529aa99/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=99aceebf1c7cb382e18d66914bd9f576e529aa99", "patch": "@@ -779,6 +779,17 @@ fn check_for_loop<'tcx>(\n     detect_same_item_push(cx, pat, arg, body, expr);\n }\n \n+// this function assumes the given expression is a `for` loop.\n+fn get_span_of_entire_for_loop(expr: &Expr<'_>) -> Span {\n+    // for some reason this is the only way to get the `Span`\n+    // of the entire `for` loop\n+    if let ExprKind::Match(_, arms, _) = &expr.kind {\n+        arms[0].body.span\n+    } else {\n+        unreachable!()\n+    }\n+}\n+\n fn same_var<'tcx>(cx: &LateContext<'tcx>, expr: &Expr<'_>, var: HirId) -> bool {\n     if_chain! {\n         if let ExprKind::Path(qpath) = &expr.kind;\n@@ -1138,7 +1149,7 @@ fn build_manual_memcpy_suggestion<'tcx>(\n     };\n \n     format!(\n-        \"{}.clone_from_slice(&{}[{}..{}])\",\n+        \"{}.clone_from_slice(&{}[{}..{}]);\",\n         dst,\n         src_base_str,\n         src_offset.maybe_par(),\n@@ -1218,7 +1229,7 @@ fn detect_manual_memcpy<'tcx>(\n                 span_lint_and_sugg(\n                     cx,\n                     MANUAL_MEMCPY,\n-                    expr.span,\n+                    get_span_of_entire_for_loop(expr),\n                     \"it looks like you're manually copying between slices\",\n                     \"try replacing the loop by\",\n                     big_sugg,\n@@ -1734,13 +1745,7 @@ fn check_for_loop_explicit_counter<'tcx>(\n                 then {\n                     let mut applicability = Applicability::MachineApplicable;\n \n-                    // for some reason this is the only way to get the `Span`\n-                    // of the entire `for` loop\n-                    let for_span = if let ExprKind::Match(_, arms, _) = &expr.kind {\n-                        arms[0].body.span\n-                    } else {\n-                        unreachable!()\n-                    };\n+                    let for_span = get_span_of_entire_for_loop(expr);\n \n                     span_lint_and_sugg(\n                         cx,"}, {"sha": "db62ed90d97d66ee408c627c8318913dad341ecb", "filename": "tests/ui/manual_memcpy.stderr", "status": "modified", "additions": 126, "deletions": 70, "changes": 196, "blob_url": "https://github.com/rust-lang/rust/blob/99aceebf1c7cb382e18d66914bd9f576e529aa99/tests%2Fui%2Fmanual_memcpy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/99aceebf1c7cb382e18d66914bd9f576e529aa99/tests%2Fui%2Fmanual_memcpy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy.stderr?ref=99aceebf1c7cb382e18d66914bd9f576e529aa99", "patch": "@@ -1,148 +1,204 @@\n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:7:14\n+  --> $DIR/manual_memcpy.rs:7:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i] = src[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..]);`\n    |\n    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:12:14\n+  --> $DIR/manual_memcpy.rs:12:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i + 10] = src[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:17:14\n+  --> $DIR/manual_memcpy.rs:17:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..(src.len() + 10)])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i] = src[i + 10];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..(src.len() + 10)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:22:14\n+  --> $DIR/manual_memcpy.rs:22:5\n    |\n-LL |     for i in 11..src.len() {\n-   |              ^^^^^^^^^^^^^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)])`\n+LL | /     for i in 11..src.len() {\n+LL | |         dst[i] = src[i - 10];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:27:14\n+  --> $DIR/manual_memcpy.rs:27:5\n    |\n-LL |     for i in 0..dst.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()])`\n+LL | /     for i in 0..dst.len() {\n+LL | |         dst[i] = src[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:40:14\n+  --> $DIR/manual_memcpy.rs:40:5\n    |\n-LL |     for i in 10..256 {\n-   |              ^^^^^^^\n+LL | /     for i in 10..256 {\n+LL | |         dst[i] = src[i - 5];\n+LL | |         dst2[i + 500] = src[i]\n+LL | |     }\n+   | |_____^\n    |\n help: try replacing the loop by\n    |\n-LL |     for i in dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)])\n-LL |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]) {\n+LL |     dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)]);\n+LL |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]);\n    |\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:52:14\n+  --> $DIR/manual_memcpy.rs:52:5\n    |\n-LL |     for i in 10..LOOP_OFFSET {\n-   |              ^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)])`\n+LL | /     for i in 10..LOOP_OFFSET {\n+LL | |         dst[i + LOOP_OFFSET] = src[i - some_var];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:65:14\n+  --> $DIR/manual_memcpy.rs:65:5\n    |\n-LL |     for i in 0..src_vec.len() {\n-   |              ^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..])`\n+LL | /     for i in 0..src_vec.len() {\n+LL | |         dst_vec[i] = src_vec[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:94:14\n+  --> $DIR/manual_memcpy.rs:94:5\n    |\n-LL |     for i in from..from + src.len() {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..(from + src.len())].clone_from_slice(&src[..(from + src.len() - from)])`\n+LL | /     for i in from..from + src.len() {\n+LL | |         dst[i] = src[i - from];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[from..(from + src.len())].clone_from_slice(&src[..(from + src.len() - from)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:98:14\n+  --> $DIR/manual_memcpy.rs:98:5\n    |\n-LL |     for i in from..from + 3 {\n-   |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..(from + 3)].clone_from_slice(&src[..(from + 3 - from)])`\n+LL | /     for i in from..from + 3 {\n+LL | |         dst[i] = src[i - from];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[from..(from + 3)].clone_from_slice(&src[..(from + 3 - from)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:103:14\n+  --> $DIR/manual_memcpy.rs:103:5\n    |\n-LL |     for i in 0..5 {\n-   |              ^^^^ help: try replacing the loop by: `dst[..5].clone_from_slice(&src[..5])`\n+LL | /     for i in 0..5 {\n+LL | |         dst[i - 0] = src[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..5].clone_from_slice(&src[..5]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:108:14\n+  --> $DIR/manual_memcpy.rs:108:5\n    |\n-LL |     for i in 0..0 {\n-   |              ^^^^ help: try replacing the loop by: `dst[..0].clone_from_slice(&src[..0])`\n+LL | /     for i in 0..0 {\n+LL | |         dst[i] = src[i];\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..0].clone_from_slice(&src[..0]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:120:14\n+  --> $DIR/manual_memcpy.rs:120:5\n    |\n-LL |     for i in 3..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)])`\n+LL | /     for i in 3..src.len() {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:126:14\n+  --> $DIR/manual_memcpy.rs:126:5\n    |\n-LL |     for i in 3..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..])`\n+LL | /     for i in 3..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:132:14\n+  --> $DIR/manual_memcpy.rs:132:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:138:14\n+  --> $DIR/manual_memcpy.rs:138:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:144:14\n+  --> $DIR/manual_memcpy.rs:144:5\n    |\n-LL |     for i in 3..(3 + src.len()) {\n-   |              ^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)])`\n+LL | /     for i in 3..(3 + src.len()) {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:150:14\n+  --> $DIR/manual_memcpy.rs:150:5\n    |\n-LL |     for i in 5..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)])`\n+LL | /     for i in 5..src.len() {\n+LL | |         dst[i] = src[count - 2];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:156:14\n+  --> $DIR/manual_memcpy.rs:156:5\n    |\n-LL |     for i in 3..10 {\n-   |              ^^^^^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)])`\n+LL | /     for i in 3..10 {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:163:14\n+  --> $DIR/manual_memcpy.rs:163:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         dst2[count2] = src[i];\n+LL | |         count += 1;\n+LL | |         count2 += 1;\n+LL | |     }\n+   | |_____^\n    |\n help: try replacing the loop by\n    |\n-LL |     for i in dst[3..(src.len() + 3)].clone_from_slice(&src[..])\n-LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]) {\n+LL |     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n+LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n    |\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:173:14\n+  --> $DIR/manual_memcpy.rs:173:5\n    |\n-LL |     for i in 0..1 << 1 {\n-   |              ^^^^^^^^^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)])`\n+LL | /     for i in 0..1 << 1 {\n+LL | |         dst[count] = src[i + 2];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:181:14\n+  --> $DIR/manual_memcpy.rs:181:5\n    |\n-LL |     for i in 0..src.len() {\n-   |              ^^^^^^^^^^^^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..])`\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i] = src[i].clone();\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..]);`\n \n error: aborting due to 22 previous errors\n "}]}