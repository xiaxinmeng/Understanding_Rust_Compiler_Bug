{"sha": "40a9481f8776446bf4bce3f89d81330791b179cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwYTk0ODFmODc3NjQ0NmJmNGJjZTNmODlkODEzMzA3OTFiMTc5Y2Y=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2015-12-30T15:27:55Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2015-12-30T15:27:55Z"}, "message": "Limit line length to below 100 chars", "tree": {"sha": "c9cba65da216f233621399dba7b0308c2feb4f88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9cba65da216f233621399dba7b0308c2feb4f88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40a9481f8776446bf4bce3f89d81330791b179cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40a9481f8776446bf4bce3f89d81330791b179cf", "html_url": "https://github.com/rust-lang/rust/commit/40a9481f8776446bf4bce3f89d81330791b179cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40a9481f8776446bf4bce3f89d81330791b179cf/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94434f1f6c58e7872a7a80b8b71bc2cbcc0cf260", "url": "https://api.github.com/repos/rust-lang/rust/commits/94434f1f6c58e7872a7a80b8b71bc2cbcc0cf260", "html_url": "https://github.com/rust-lang/rust/commit/94434f1f6c58e7872a7a80b8b71bc2cbcc0cf260"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "939b3f0fc58bdd17fb4f254215f1ff720c793ede", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/40a9481f8776446bf4bce3f89d81330791b179cf/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40a9481f8776446bf4bce3f89d81330791b179cf/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=40a9481f8776446bf4bce3f89d81330791b179cf", "patch": "@@ -4617,11 +4617,13 @@ impl<'a> Parser<'a> {\n                     _ => false,\n                 };\n                 if is_macro_rules {\n-                    self.diagnostic().struct_span_err(span, \"can't qualify macro_rules invocation with `pub`\")\n+                    self.diagnostic().struct_span_err(span, \"can't qualify macro_rules \\\n+                                                             invocation with `pub`\")\n                                      .fileline_help(span, \"did you mean #[macro_export]?\")\n                                      .emit();\n                 } else {\n-                    self.diagnostic().struct_span_err(span, \"can't qualify macro invocation with `pub`\")\n+                    self.diagnostic().struct_span_err(span, \"can't qualify macro \\\n+                                                             invocation with `pub`\")\n                                      .fileline_help(span, \"try adjusting the macro to put `pub` \\\n                                                            inside the invocation\")\n                                      .emit();"}]}