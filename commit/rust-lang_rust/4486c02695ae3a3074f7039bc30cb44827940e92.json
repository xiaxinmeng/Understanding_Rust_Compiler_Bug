{"sha": "4486c02695ae3a3074f7039bc30cb44827940e92", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODZjMDI2OTVhZTNhMzA3NGY3MDM5YmMzMGNiNDQ4Mjc5NDBlOTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-19T20:48:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-19T20:48:52Z"}, "message": "Rollup merge of #63252 - nrc:arc-doc, r=alexcrichton\n\nRemove recommendation about idiomatic syntax for Arc::clone\n\nI believe we should not make this recommendation. I don't want to argue that `Arc::clone` is less idiomatic than `arc.clone`, but that the choice is not clear cut and that we should not be making this kind of call in the docs.\n\nThe `.clone()` form has advantages too: it is more succinct, it is more likely to be understood by beginners, and it is more uniform with other `clone` calls, indeed with most other method calls.\n\nWhichever approach is better, I think that this discussion belongs in a style guide or textbook, rather than the library docs. We don't talk much about idiomatic code in the docs, this place is pretty exceptional.\n\nThe recommendation is also not followed in this repo. It is hard to figure out how many calls there are of the `.clone()` form, but there are 1550 uses of `Arc` and only 65 uses of `Arc::clone`. The recommendation has existed for over two years.\n\nThe recommendation was added in https://github.com/rust-lang/rust/pull/42137, as a result of https://github.com/rust-lang/rfcs/pull/1954. However, note that that RFC was closed because it was not necessary to change the docs (the original RFC proposed a new function instead). So I don't think an RFC is necessary here (and I'm not trying to re-litigate the discussion on that RFC (which favoured `Arc::clone` as idiomatic) in any case).\n\ncc @nical (who added the docs in the first place; sorry :-) )\n\nr? @alexcrichton (or someone else on @rust-lang/libs )", "tree": {"sha": "b1595f7cc90d17f435724c37e2ba2ccefdff3c34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1595f7cc90d17f435724c37e2ba2ccefdff3c34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4486c02695ae3a3074f7039bc30cb44827940e92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdWws1CRBK7hj4Ov3rIwAAdHIIABHt4hkOrwfU2BrPCQktP5W1\ndztz9xyP0J+6QOqwquhwoZLpppAasm59ZomyNnLxntyfXgVNOwtBy03r8U1Jj4dA\nAJLouOEeJ8vugd4+/pbnAmUXRymLAT+V2eah1vjW2Cc81eyvUUcybmvOcJlwGrLP\n5Ipgj91xzsLaUu5DyUaMnIOpupYhByJ3MrDKRRc4rApwm3xzIVvlo9SFRp1U2l0K\nrBmVnhSIEGNMdOns56gn1AJ1EyU5G4Hn+6TznTs+TQC6Qj5U2eGUUt7cmc/w2Dof\nme0VN0RVm6hKEDAWLPLv96rJqSyS7PvQA7p/w2ztyFGahZrMlGf9oCMrU3YaboQ=\n=GqSA\n-----END PGP SIGNATURE-----\n", "payload": "tree b1595f7cc90d17f435724c37e2ba2ccefdff3c34\nparent 29a54035c77cb2ba7ea2c24b2437760d0495a2c8\nparent 47b16b656376021041110df42e71c551fb2c4881\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1566247732 +0200\ncommitter GitHub <noreply@github.com> 1566247732 +0200\n\nRollup merge of #63252 - nrc:arc-doc, r=alexcrichton\n\nRemove recommendation about idiomatic syntax for Arc::clone\n\nI believe we should not make this recommendation. I don't want to argue that `Arc::clone` is less idiomatic than `arc.clone`, but that the choice is not clear cut and that we should not be making this kind of call in the docs.\n\nThe `.clone()` form has advantages too: it is more succinct, it is more likely to be understood by beginners, and it is more uniform with other `clone` calls, indeed with most other method calls.\n\nWhichever approach is better, I think that this discussion belongs in a style guide or textbook, rather than the library docs. We don't talk much about idiomatic code in the docs, this place is pretty exceptional.\n\nThe recommendation is also not followed in this repo. It is hard to figure out how many calls there are of the `.clone()` form, but there are 1550 uses of `Arc` and only 65 uses of `Arc::clone`. The recommendation has existed for over two years.\n\nThe recommendation was added in https://github.com/rust-lang/rust/pull/42137, as a result of https://github.com/rust-lang/rfcs/pull/1954. However, note that that RFC was closed because it was not necessary to change the docs (the original RFC proposed a new function instead). So I don't think an RFC is necessary here (and I'm not trying to re-litigate the discussion on that RFC (which favoured `Arc::clone` as idiomatic) in any case).\n\ncc @nical (who added the docs in the first place; sorry :-) )\n\nr? @alexcrichton (or someone else on @rust-lang/libs )\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4486c02695ae3a3074f7039bc30cb44827940e92", "html_url": "https://github.com/rust-lang/rust/commit/4486c02695ae3a3074f7039bc30cb44827940e92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4486c02695ae3a3074f7039bc30cb44827940e92/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29a54035c77cb2ba7ea2c24b2437760d0495a2c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/29a54035c77cb2ba7ea2c24b2437760d0495a2c8", "html_url": "https://github.com/rust-lang/rust/commit/29a54035c77cb2ba7ea2c24b2437760d0495a2c8"}, {"sha": "47b16b656376021041110df42e71c551fb2c4881", "url": "https://api.github.com/repos/rust-lang/rust/commits/47b16b656376021041110df42e71c551fb2c4881", "html_url": "https://github.com/rust-lang/rust/commit/47b16b656376021041110df42e71c551fb2c4881"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "9ffc1673e5ab8e43954374a2f68a70a935c69baa", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4486c02695ae3a3074f7039bc30cb44827940e92/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4486c02695ae3a3074f7039bc30cb44827940e92/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=4486c02695ae3a3074f7039bc30cb44827940e92", "patch": "@@ -107,10 +107,6 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n /// // a, b, and foo are all Arcs that point to the same memory location\n /// ```\n ///\n-/// The [`Arc::clone(&from)`] syntax is the most idiomatic because it conveys more explicitly\n-/// the meaning of the code. In the example above, this syntax makes it easier to see that\n-/// this code is creating a new reference rather than copying the whole content of foo.\n-///\n /// ## `Deref` behavior\n ///\n /// `Arc<T>` automatically dereferences to `T` (via the [`Deref`][deref] trait),"}]}