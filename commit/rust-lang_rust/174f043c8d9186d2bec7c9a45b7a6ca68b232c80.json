{"sha": "174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3NGYwNDNjOGQ5MTg2ZDJiZWM3YzlhNDViN2E2Y2E2OGIyMzJjODA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-08T21:14:08Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-08T21:14:08Z"}, "message": "Add `=` to pattern recovery", "tree": {"sha": "ce526f46adb8a3e61e5c79adb2bb4eeb4ab0b8b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce526f46adb8a3e61e5c79adb2bb4eeb4ab0b8b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "html_url": "https://github.com/rust-lang/rust/commit/174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/174f043c8d9186d2bec7c9a45b7a6ca68b232c80/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c5df9b171730ad69e130e074584684cee35014", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c5df9b171730ad69e130e074584684cee35014", "html_url": "https://github.com/rust-lang/rust/commit/96c5df9b171730ad69e130e074584684cee35014"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "787eb2fd3f36cdad3ca17d324e713df0d2c72793", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/174f043c8d9186d2bec7c9a45b7a6ca68b232c80/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/174f043c8d9186d2bec7c9a45b7a6ca68b232c80/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "patch": "@@ -313,7 +313,8 @@ impl<'a> CompletionContext<'a> {\n                         cov_mark::hit!(expected_type_let_with_leading_char);\n                         cov_mark::hit!(expected_type_let_without_leading_char);\n                         let ty = it.pat()\n-                            .and_then(|pat| self.sema.type_of_pat(&pat));\n+                            .and_then(|pat| self.sema.type_of_pat(&pat))\n+                            .or_else(|| it.initializer().and_then(|it| self.sema.type_of_expr(&it)));\n                         let name = if let Some(ast::Pat::IdentPat(ident)) = it.pat() {\n                             ident.name().map(NameOrNameRef::Name)\n                         } else {\n@@ -719,6 +720,26 @@ fn foo() {\n         );\n     }\n \n+    #[test]\n+    fn expected_type_let_pat() {\n+        check_expected_type_and_name(\n+            r#\"\n+fn foo() {\n+    let x$0 = 0u32;\n+}\n+\"#,\n+            expect![[r#\"ty: u32, name: ?\"#]],\n+        );\n+        check_expected_type_and_name(\n+            r#\"\n+fn foo() {\n+    let $0 = 0u32;\n+}\n+\"#,\n+            expect![[r#\"ty: u32, name: ?\"#]],\n+        );\n+    }\n+\n     #[test]\n     fn expected_type_fn_param_without_leading_char() {\n         cov_mark::check!(expected_type_fn_param_without_leading_char);"}, {"sha": "f1d1f9eaa60c6f77887a257d755c93780f1886a6", "filename": "crates/parser/src/grammar/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/174f043c8d9186d2bec7c9a45b7a6ca68b232c80/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/174f043c8d9186d2bec7c9a45b7a6ca68b232c80/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=174f043c8d9186d2bec7c9a45b7a6ca68b232c80", "patch": "@@ -83,7 +83,7 @@ fn pattern_single_r(p: &mut Parser, recovery_set: TokenSet) {\n }\n \n const PAT_RECOVERY_SET: TokenSet =\n-    TokenSet::new(&[T![let], T![if], T![while], T![loop], T![match], T![')'], T![,]]);\n+    TokenSet::new(&[T![let], T![if], T![while], T![loop], T![match], T![')'], T![,], T![=]]);\n \n fn atom_pat(p: &mut Parser, recovery_set: TokenSet) -> Option<CompletedMarker> {\n     let m = match p.nth(0) {"}]}