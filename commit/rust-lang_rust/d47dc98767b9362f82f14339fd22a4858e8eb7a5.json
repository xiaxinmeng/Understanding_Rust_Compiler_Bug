{"sha": "d47dc98767b9362f82f14339fd22a4858e8eb7a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0N2RjOTg3NjdiOTM2MmY4MmYxNDMzOWZkMjJhNDg1OGU4ZWI3YTU=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-16T06:48:32Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-05-21T09:12:40Z"}, "message": "rustc: avoid using intern_*(it.collect()) when mk_*(it) works better.", "tree": {"sha": "97914d11023909ffa414d4248f8d4565f31592db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97914d11023909ffa414d4248f8d4565f31592db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d47dc98767b9362f82f14339fd22a4858e8eb7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d47dc98767b9362f82f14339fd22a4858e8eb7a5", "html_url": "https://github.com/rust-lang/rust/commit/d47dc98767b9362f82f14339fd22a4858e8eb7a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d47dc98767b9362f82f14339fd22a4858e8eb7a5/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98686ca2944db341b0933e341b1e9029a905e322", "url": "https://api.github.com/repos/rust-lang/rust/commits/98686ca2944db341b0933e341b1e9029a905e322", "html_url": "https://github.com/rust-lang/rust/commit/98686ca2944db341b0933e341b1e9029a905e322"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "f4f8bb68b3b65e0051fffcde4b87e3d0093a10c7", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d47dc98767b9362f82f14339fd22a4858e8eb7a5/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47dc98767b9362f82f14339fd22a4858e8eb7a5/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=d47dc98767b9362f82f14339fd22a4858e8eb7a5", "patch": "@@ -2678,11 +2678,11 @@ fn adt_sized_constraint<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                   -> &'tcx [Ty<'tcx>] {\n     let def = tcx.adt_def(def_id);\n \n-    let result = tcx.intern_type_list(&def.variants.iter().flat_map(|v| {\n+    let result = tcx.mk_type_list(def.variants.iter().flat_map(|v| {\n         v.fields.last()\n     }).flat_map(|f| {\n         def.sized_constraint_for_ty(tcx, tcx.type_of(f.did))\n-    }).collect::<Vec<_>>());\n+    }));\n \n     debug!(\"adt_sized_constraint: {:?} => {:?}\", def, result);\n "}, {"sha": "7603ed7102327e1b4bd9b03426a0cd3d1c761416", "filename": "src/librustc/ty/relate.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d47dc98767b9362f82f14339fd22a4858e8eb7a5/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47dc98767b9362f82f14339fd22a4858e8eb7a5/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=d47dc98767b9362f82f14339fd22a4858e8eb7a5", "patch": "@@ -24,7 +24,6 @@ use std::rc::Rc;\n use std::iter;\n use rustc_target::spec::abi;\n use hir as ast;\n-use rustc_data_structures::accumulate_vec::AccumulateVec;\n \n pub type RelateResult<'tcx, T> = Result<T, TypeError<'tcx>>;\n \n@@ -154,6 +153,8 @@ impl<'tcx> Relate<'tcx> for ty::FnSig<'tcx> {\n                            -> RelateResult<'tcx, ty::FnSig<'tcx>>\n         where R: TypeRelation<'a, 'gcx, 'tcx>, 'gcx: 'a+'tcx, 'tcx: 'a\n     {\n+        let tcx = relation.tcx();\n+\n         if a.variadic != b.variadic {\n             return Err(TypeError::VariadicMismatch(\n                 expected_found(relation, &a.variadic, &b.variadic)));\n@@ -175,9 +176,9 @@ impl<'tcx> Relate<'tcx> for ty::FnSig<'tcx> {\n                 } else {\n                     relation.relate_with_variance(ty::Contravariant, &a, &b)\n                 }\n-            }).collect::<Result<AccumulateVec<[_; 8]>, _>>()?;\n+            });\n         Ok(ty::FnSig {\n-            inputs_and_output: relation.tcx().intern_type_list(&inputs_and_output),\n+            inputs_and_output: tcx.mk_type_list(inputs_and_output)?,\n             variadic: a.variadic,\n             unsafety,\n             abi,"}]}