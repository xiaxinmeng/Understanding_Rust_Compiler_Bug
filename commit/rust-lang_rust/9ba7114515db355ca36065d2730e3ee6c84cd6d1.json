{"sha": "9ba7114515db355ca36065d2730e3ee6c84cd6d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliYTcxMTQ1MTVkYjM1NWNhMzYwNjVkMjczMGUzZWU2Yzg0Y2Q2ZDE=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-31T22:28:37Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-02-01T04:13:56Z"}, "message": "implement container::Mutable for SmallIntMap", "tree": {"sha": "bd2791fd1b815b2fa7aee1b3f2fc4de5fa7606df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2791fd1b815b2fa7aee1b3f2fc4de5fa7606df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ba7114515db355ca36065d2730e3ee6c84cd6d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ba7114515db355ca36065d2730e3ee6c84cd6d1", "html_url": "https://github.com/rust-lang/rust/commit/9ba7114515db355ca36065d2730e3ee6c84cd6d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ba7114515db355ca36065d2730e3ee6c84cd6d1/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aac91267e3ea650649ee443b042fe04cd502da6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aac91267e3ea650649ee443b042fe04cd502da6c", "html_url": "https://github.com/rust-lang/rust/commit/aac91267e3ea650649ee443b042fe04cd502da6c"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "59ae9f68d6e414abfaf72cd304b87f1e3848c585", "filename": "src/libstd/smallintmap.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9ba7114515db355ca36065d2730e3ee6c84cd6d1/src%2Flibstd%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ba7114515db355ca36065d2730e3ee6c84cd6d1/src%2Flibstd%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsmallintmap.rs?ref=9ba7114515db355ca36065d2730e3ee6c84cd6d1", "patch": "@@ -95,6 +95,10 @@ impl<V> SmallIntMap<V>: Container {\n     pure fn is_empty(&self) -> bool { self.len() == 0 }\n }\n \n+impl<V> SmallIntMap<V>: Mutable {\n+    fn clear(&mut self) { self.v.set(~[]) }\n+}\n+\n /// Implements the map::map interface for smallintmap\n impl<V: Copy> SmallIntMap<V> {\n     #[inline(always)]\n@@ -111,9 +115,6 @@ impl<V: Copy> SmallIntMap<V> {\n         self.v.set_elt(key, None);\n         old.is_some()\n     }\n-    fn clear() {\n-        self.v.set(~[]);\n-    }\n     pure fn contains_key(key: uint) -> bool {\n         contains_key(self, key)\n     }\n@@ -191,6 +192,19 @@ mod tests {\n         assert !map.is_empty();\n     }\n \n+    #[test]\n+    fn test_clear() {\n+        let mut map = mk();\n+        map.insert(5, 20);\n+        map.insert(11, 12);\n+        map.insert(14, 22);\n+        map.clear();\n+        assert map.is_empty();\n+        assert map.find(5).is_none();\n+        assert map.find(11).is_none();\n+        assert map.find(14).is_none();\n+    }\n+\n     #[test]\n     fn test_insert_with_key() {\n         let map: SmallIntMap<uint> = mk();"}]}