{"sha": "9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMjhmNjEwMGM5YmZlMmMyYzIyZDg1Y2NlYzkyZjAxMTY2ZjVkMjU=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-01-29T13:31:47Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-01-29T13:31:47Z"}, "message": "Fix a few impl stability attributes\n\nThe versions show up in rustdoc.", "tree": {"sha": "105ea91f8eee10021f4484f281b1cc1409dcd65e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/105ea91f8eee10021f4484f281b1cc1409dcd65e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "html_url": "https://github.com/rust-lang/rust/commit/9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "010c3e25c453d0217b114aa125a956cd99f60c88", "url": "https://api.github.com/repos/rust-lang/rust/commits/010c3e25c453d0217b114aa125a956cd99f60c88", "html_url": "https://github.com/rust-lang/rust/commit/010c3e25c453d0217b114aa125a956cd99f60c88"}], "stats": {"total": 209, "additions": 116, "deletions": 93}, "files": [{"sha": "23e0295ba5401b998749699796088c25bae7cec2", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -1088,7 +1088,7 @@ impl<'a, T: 'a> ExactSizeIterator for Drain<'a, T> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T: 'a> FusedIterator for Drain<'a, T> {}\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[stable(feature = \"binary_heap_extras_15\", since = \"1.5.0\")]\n impl<T: Ord> From<Vec<T>> for BinaryHeap<T> {\n     fn from(vec: Vec<T>) -> BinaryHeap<T> {\n         let mut heap = BinaryHeap { data: vec };\n@@ -1097,7 +1097,7 @@ impl<T: Ord> From<Vec<T>> for BinaryHeap<T> {\n     }\n }\n \n-#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[stable(feature = \"binary_heap_extras_15\", since = \"1.5.0\")]\n impl<T> From<BinaryHeap<T>> for Vec<T> {\n     fn from(heap: BinaryHeap<T>) -> Vec<T> {\n         heap.data"}, {"sha": "78764091cf03275a3569dc30bae907ff275292d7", "filename": "src/libcore/char.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -588,7 +588,7 @@ impl ExactSizeIterator for EscapeUnicode {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl FusedIterator for EscapeUnicode {}\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n+#[stable(feature = \"char_struct_display\", since = \"1.16.0\")]\n impl fmt::Display for EscapeUnicode {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         for c in self.clone() {\n@@ -701,7 +701,7 @@ impl ExactSizeIterator for EscapeDefault {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl FusedIterator for EscapeDefault {}\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n+#[stable(feature = \"char_struct_display\", since = \"1.16.0\")]\n impl fmt::Display for EscapeDefault {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         for c in self.clone() {\n@@ -735,7 +735,7 @@ impl ExactSizeIterator for EscapeDebug { }\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl FusedIterator for EscapeDebug {}\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n+#[unstable(feature = \"char_escape_debug\", issue = \"35068\")]\n impl fmt::Display for EscapeDebug {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Display::fmt(&self.0, f)"}, {"sha": "9a7914064fdd56bb176fe19d1d811a288ff6ba79", "filename": "src/libcore/internal_macros.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Finternal_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Finternal_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Finternal_macros.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -13,7 +13,11 @@\n // based on \"op T\" where T is expected to be `Copy`able\n macro_rules! forward_ref_unop {\n     (impl $imp:ident, $method:ident for $t:ty) => {\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        forward_ref_unop!(impl $imp, $method for $t,\n+                #[stable(feature = \"rust1\", since = \"1.0.0\")]);\n+    };\n+    (impl $imp:ident, $method:ident for $t:ty, #[$attr:meta]) => {\n+        #[$attr]\n         impl<'a> $imp for &'a $t {\n             type Output = <$t as $imp>::Output;\n \n@@ -29,7 +33,11 @@ macro_rules! forward_ref_unop {\n // based on \"T op U\" where T and U are expected to be `Copy`able\n macro_rules! forward_ref_binop {\n     (impl $imp:ident, $method:ident for $t:ty, $u:ty) => {\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        forward_ref_binop!(impl $imp, $method for $t, $u,\n+                #[stable(feature = \"rust1\", since = \"1.0.0\")]);\n+    };\n+    (impl $imp:ident, $method:ident for $t:ty, $u:ty, #[$attr:meta]) => {\n+        #[$attr]\n         impl<'a> $imp<$u> for &'a $t {\n             type Output = <$t as $imp<$u>>::Output;\n \n@@ -39,7 +47,7 @@ macro_rules! forward_ref_binop {\n             }\n         }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[$attr]\n         impl<'a> $imp<&'a $u> for $t {\n             type Output = <$t as $imp<$u>>::Output;\n \n@@ -49,7 +57,7 @@ macro_rules! forward_ref_binop {\n             }\n         }\n \n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        #[$attr]\n         impl<'a, 'b> $imp<&'a $u> for &'b $t {\n             type Output = <$t as $imp<$u>>::Output;\n "}, {"sha": "3e8d0600e1971998506cbf4ad167d3bb1d427569", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -603,38 +603,42 @@ pub trait Product<A = Self>: Sized {\n \n // NB: explicitly use Add and Mul here to inherit overflow checks\n macro_rules! integer_sum_product {\n-    (@impls $zero:expr, $one:expr, $($a:ty)*) => ($(\n-        #[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]\n+    (@impls $zero:expr, $one:expr, #[$attr:meta], $($a:ty)*) => ($(\n+        #[$attr]\n         impl Sum for $a {\n             fn sum<I: Iterator<Item=$a>>(iter: I) -> $a {\n                 iter.fold($zero, Add::add)\n             }\n         }\n \n-        #[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]\n+        #[$attr]\n         impl Product for $a {\n             fn product<I: Iterator<Item=$a>>(iter: I) -> $a {\n                 iter.fold($one, Mul::mul)\n             }\n         }\n \n-        #[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]\n+        #[$attr]\n         impl<'a> Sum<&'a $a> for $a {\n             fn sum<I: Iterator<Item=&'a $a>>(iter: I) -> $a {\n                 iter.fold($zero, Add::add)\n             }\n         }\n \n-        #[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")]\n+        #[$attr]\n         impl<'a> Product<&'a $a> for $a {\n             fn product<I: Iterator<Item=&'a $a>>(iter: I) -> $a {\n                 iter.fold($one, Mul::mul)\n             }\n         }\n     )*);\n     ($($a:ty)*) => (\n-        integer_sum_product!(@impls 0, 1, $($a)+);\n-        integer_sum_product!(@impls Wrapping(0), Wrapping(1), $(Wrapping<$a>)+);\n+        integer_sum_product!(@impls 0, 1,\n+                #[stable(feature = \"iter_arith_traits\", since = \"1.12.0\")],\n+                $($a)+);\n+        integer_sum_product!(@impls Wrapping(0), Wrapping(1),\n+                #[stable(feature = \"wrapping_iter_arith\", since = \"1.14.0\")],\n+                $(Wrapping<$a>)+);\n     );\n }\n "}, {"sha": "3b1612a4ee29f8d051c0a8ec4b2cef9fa314c634", "filename": "src/libcore/num/int_macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fint_macros.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -12,12 +12,12 @@\n \n macro_rules! int_module {\n     ($T:ident) => (int_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n-    ($T:ident, $($attr: tt)*) => (\n+    ($T:ident, #[$attr:meta]) => (\n         /// The smallest value that can be represented by this integer type.\n-        $($attr)*\n+        #[$attr]\n         pub const MIN: $T = $T::min_value();\n         /// The largest value that can be represented by this integer type.\n-        $($attr)*\n+        #[$attr]\n         pub const MAX: $T = $T::max_value();\n     )\n }"}, {"sha": "f7e1f78d69ebf64396ae21e6cbff0323b4056b5b", "filename": "src/libcore/num/uint_macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fuint_macros.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -12,12 +12,12 @@\n \n macro_rules! uint_module {\n     ($T:ident) => (uint_module!($T, #[stable(feature = \"rust1\", since = \"1.0.0\")]););\n-    ($T:ident, $($attr: tt)*) => (\n+    ($T:ident, #[$attr:meta]) => (\n         /// The smallest value that can be represented by this integer type.\n-        $($attr)*\n+        #[$attr]\n         pub const MIN: $T = $T::min_value();\n         /// The largest value that can be represented by this integer type.\n-        $($attr)*\n+        #[$attr]\n         pub const MAX: $T = $T::max_value();\n     )\n }"}, {"sha": "5d9e6ab1294683d7760f3425dbb217d834888997", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -131,7 +131,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0.wrapping_add(other.0))\n             }\n         }\n-        forward_ref_binop! { impl Add, add for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl Add, add for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl AddAssign for Wrapping<$t> {\n@@ -150,7 +151,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0.wrapping_sub(other.0))\n             }\n         }\n-        forward_ref_binop! { impl Sub, sub for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl Sub, sub for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl SubAssign for Wrapping<$t> {\n@@ -169,7 +171,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0.wrapping_mul(other.0))\n             }\n         }\n-        forward_ref_binop! { impl Mul, mul for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl Mul, mul for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl MulAssign for Wrapping<$t> {\n@@ -188,7 +191,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0.wrapping_div(other.0))\n             }\n         }\n-        forward_ref_binop! { impl Div, div for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl Div, div for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl DivAssign for Wrapping<$t> {\n@@ -207,7 +211,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0.wrapping_rem(other.0))\n             }\n         }\n-        forward_ref_binop! { impl Rem, rem for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl Rem, rem for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl RemAssign for Wrapping<$t> {\n@@ -226,7 +231,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(!self.0)\n             }\n         }\n-        forward_ref_unop! { impl Not, not for Wrapping<$t> }\n+        forward_ref_unop! { impl Not, not for Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl BitXor for Wrapping<$t> {\n@@ -237,7 +243,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0 ^ other.0)\n             }\n         }\n-        forward_ref_binop! { impl BitXor, bitxor for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl BitXor, bitxor for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl BitXorAssign for Wrapping<$t> {\n@@ -256,7 +263,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0 | other.0)\n             }\n         }\n-        forward_ref_binop! { impl BitOr, bitor for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl BitOr, bitor for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl BitOrAssign for Wrapping<$t> {\n@@ -275,7 +283,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(self.0 & other.0)\n             }\n         }\n-        forward_ref_binop! { impl BitAnd, bitand for Wrapping<$t>, Wrapping<$t> }\n+        forward_ref_binop! { impl BitAnd, bitand for Wrapping<$t>, Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n \n         #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n         impl BitAndAssign for Wrapping<$t> {\n@@ -293,7 +302,8 @@ macro_rules! wrapping_impl {\n                 Wrapping(0) - self\n             }\n         }\n-        forward_ref_unop! { impl Neg, neg for Wrapping<$t> }\n+        forward_ref_unop! { impl Neg, neg for Wrapping<$t>,\n+                #[stable(feature = \"wrapping_ref\", since = \"1.14.0\")] }\n     )*)\n }\n "}, {"sha": "1a482b75731c102fc36b1e92d772822f2e8a07fd", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -616,7 +616,7 @@ pub trait SliceIndex<T> {\n     fn index_mut(self, slice: &mut [T]) -> &mut Self::Output;\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[stable(feature = \"slice-get-slice-impls\", since = \"1.15.0\")]\n impl<T> SliceIndex<T> for usize {\n     type Output = T;\n \n@@ -665,7 +665,7 @@ impl<T> SliceIndex<T> for usize {\n     }\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[stable(feature = \"slice-get-slice-impls\", since = \"1.15.0\")]\n impl<T> SliceIndex<T> for  ops::Range<usize> {\n     type Output = [T];\n \n@@ -726,7 +726,7 @@ impl<T> SliceIndex<T> for  ops::Range<usize> {\n     }\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[stable(feature = \"slice-get-slice-impls\", since = \"1.15.0\")]\n impl<T> SliceIndex<T> for ops::RangeTo<usize> {\n     type Output = [T];\n \n@@ -761,7 +761,7 @@ impl<T> SliceIndex<T> for ops::RangeTo<usize> {\n     }\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[stable(feature = \"slice-get-slice-impls\", since = \"1.15.0\")]\n impl<T> SliceIndex<T> for ops::RangeFrom<usize> {\n     type Output = [T];\n \n@@ -796,7 +796,7 @@ impl<T> SliceIndex<T> for ops::RangeFrom<usize> {\n     }\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[stable(feature = \"slice-get-slice-impls\", since = \"1.15.0\")]\n impl<T> SliceIndex<T> for ops::RangeFull {\n     type Output = [T];\n \n@@ -832,7 +832,7 @@ impl<T> SliceIndex<T> for ops::RangeFull {\n }\n \n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n impl<T> SliceIndex<T> for ops::RangeInclusive<usize> {\n     type Output = [T];\n \n@@ -895,7 +895,7 @@ impl<T> SliceIndex<T> for ops::RangeInclusive<usize> {\n     }\n }\n \n-#[stable(feature = \"slice-get-slice-impls\", since = \"1.13.0\")]\n+#[unstable(feature = \"inclusive_range\", reason = \"recently added, follows RFC\", issue = \"28237\")]\n impl<T> SliceIndex<T> for ops::RangeToInclusive<usize> {\n     type Output = [T];\n "}, {"sha": "35c388ba076cef69d9c2eb32608275ff884d3a79", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -399,7 +399,7 @@ impl ExactSizeIterator for EscapeDefault {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl FusedIterator for EscapeDefault {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for EscapeDefault {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"EscapeDefault { .. }\")"}, {"sha": "2a4826f804581d0f45bc629d1aa7b7e4e310c779", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -1276,7 +1276,7 @@ impl<'a, K, V> Clone for Iter<'a, K, V> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: Debug, V: Debug> fmt::Debug for Iter<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n@@ -1311,7 +1311,7 @@ impl<'a, K, V> Clone for Keys<'a, K, V> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: Debug, V: Debug> fmt::Debug for Keys<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n@@ -1334,7 +1334,7 @@ impl<'a, K, V> Clone for Values<'a, K, V> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: Debug, V: Debug> fmt::Debug for Values<'a, K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n@@ -1584,7 +1584,7 @@ impl<'a, K, V> ExactSizeIterator for IterMut<'a, K, V> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, K, V> FusedIterator for IterMut<'a, K, V> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K, V> fmt::Debug for IterMut<'a, K, V>\n     where K: fmt::Debug,\n           V: fmt::Debug,\n@@ -1619,7 +1619,7 @@ impl<K, V> ExactSizeIterator for IntoIter<K, V> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<K, V> FusedIterator for IntoIter<K, V> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<K: Debug, V: Debug> fmt::Debug for IntoIter<K, V> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n@@ -1697,7 +1697,7 @@ impl<'a, K, V> ExactSizeIterator for ValuesMut<'a, K, V> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, K, V> FusedIterator for ValuesMut<'a, K, V> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K, V> fmt::Debug for ValuesMut<'a, K, V>\n     where K: fmt::Debug,\n           V: fmt::Debug,\n@@ -1732,7 +1732,7 @@ impl<'a, K, V> ExactSizeIterator for Drain<'a, K, V> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, K, V> FusedIterator for Drain<'a, K, V> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K, V> fmt::Debug for Drain<'a, K, V>\n     where K: fmt::Debug,\n           V: fmt::Debug,\n@@ -2220,7 +2220,7 @@ impl Default for RandomState {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for RandomState {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"RandomState { .. }\")"}, {"sha": "a3f7e13bbf9131615f369a5ee328947e1cdfc8b2", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -948,7 +948,7 @@ impl<'a, K> ExactSizeIterator for Iter<'a, K> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, K> FusedIterator for Iter<'a, K> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: fmt::Debug> fmt::Debug for Iter<'a, K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_list()\n@@ -977,7 +977,7 @@ impl<K> ExactSizeIterator for IntoIter<K> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<K> FusedIterator for IntoIter<K> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<K: fmt::Debug> fmt::Debug for IntoIter<K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         let entries_iter = self.iter.inner.iter().map(|(k, _)| k);\n@@ -1007,7 +1007,7 @@ impl<'a, K> ExactSizeIterator for Drain<'a, K> {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, K> FusedIterator for Drain<'a, K> {}\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: fmt::Debug> fmt::Debug for Drain<'a, K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         let entries_iter = self.iter.inner.iter().map(|(k, _)| k);\n@@ -1050,7 +1050,7 @@ impl<'a, T, S> Iterator for Intersection<'a, T, S>\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Intersection<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n           S: BuildHasher,\n@@ -1109,7 +1109,7 @@ impl<'a, T, S> FusedIterator for Difference<'a, T, S>\n {\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Difference<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n           S: BuildHasher,\n@@ -1150,7 +1150,7 @@ impl<'a, T, S> FusedIterator for SymmetricDifference<'a, T, S>\n {\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for SymmetricDifference<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n           S: BuildHasher,\n@@ -1176,7 +1176,7 @@ impl<'a, T, S> FusedIterator for Union<'a, T, S>\n {\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Union<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n           S: BuildHasher,"}, {"sha": "29f2ac6ab444c05463ac2eb6d87ded54ade44121", "filename": "src/libstd/env.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -145,7 +145,7 @@ impl Iterator for Vars {\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Vars {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Vars { .. }\")\n@@ -159,7 +159,7 @@ impl Iterator for VarsOs {\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for VarsOs {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"VarsOs { .. }\")\n@@ -382,7 +382,7 @@ impl<'a> Iterator for SplitPaths<'a> {\n     fn size_hint(&self) -> (usize, Option<usize>) { self.inner.size_hint() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a> fmt::Debug for SplitPaths<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"SplitPaths { .. }\")\n@@ -665,7 +665,7 @@ impl DoubleEndedIterator for Args {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Args {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Args { .. }\")\n@@ -690,7 +690,7 @@ impl DoubleEndedIterator for ArgsOs {\n     fn next_back(&mut self) -> Option<OsString> { self.inner.next_back() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ArgsOs {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"ArgsOs { .. }\")"}, {"sha": "e5562d05f10ae92472aebb2a3fbe2c114f82f372", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -869,7 +869,7 @@ impl Metadata {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Metadata {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"Metadata\")"}, {"sha": "8cb7b2bda7554239a9e2684f51843ad96aae8167", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -1450,7 +1450,7 @@ pub struct Chain<T, U> {\n     done_first: bool,\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: fmt::Debug, U: fmt::Debug> fmt::Debug for Chain<T, U> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"Chain\")"}, {"sha": "e16e8019b5f735fb6e2af5192363d2941bf6b869", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -282,7 +282,7 @@ impl Stdin {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdin {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Stdin { .. }\")\n@@ -321,7 +321,7 @@ impl<'a> BufRead for StdinLock<'a> {\n     fn consume(&mut self, n: usize) { self.inner.consume(n) }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a> fmt::Debug for StdinLock<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"StdinLock { .. }\")\n@@ -438,7 +438,7 @@ impl Stdout {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdout {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Stdout { .. }\")\n@@ -470,7 +470,7 @@ impl<'a> Write for StdoutLock<'a> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a> fmt::Debug for StdoutLock<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"StdoutLock { .. }\")\n@@ -573,7 +573,7 @@ impl Stderr {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stderr {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Stderr { .. }\")\n@@ -605,7 +605,7 @@ impl<'a> Write for StderrLock<'a> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a> fmt::Debug for StderrLock<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"StderrLock { .. }\")"}, {"sha": "4163187488e6544d378808bde18689977623edf3", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -98,7 +98,7 @@ impl BufRead for Empty {\n     fn consume(&mut self, _n: usize) {}\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Empty {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Empty { .. }\")\n@@ -141,7 +141,7 @@ impl Read for Repeat {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Repeat {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Repeat { .. }\")\n@@ -180,7 +180,7 @@ impl Write for Sink {\n     fn flush(&mut self) -> io::Result<()> { Ok(()) }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Sink {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Sink { .. }\")"}, {"sha": "b0d2e3e4687b44c24e4fee5cf64a14b9109261c0", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -106,7 +106,10 @@ impl Iterator for LookupHost {\n     fn next(&mut self) -> Option<SocketAddr> { self.0.next() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[unstable(feature = \"lookup_host\", reason = \"unsure about the returned \\\n+                                              iterator and returning socket \\\n+                                              addresses\",\n+           issue = \"27705\")]\n impl fmt::Debug for LookupHost {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"LookupHost { .. }\")"}, {"sha": "68d4ca900195c5ed8c3161eaa5d9853942fb5500", "filename": "src/libstd/os/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fos%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fos%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fraw.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -73,7 +73,7 @@ pub enum c_void {\n     #[doc(hidden)] __variant2,\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for c_void {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"c_void\")"}, {"sha": "ac0d0d2afb80328042a8a3109c7cffa366e520b5", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -297,7 +297,7 @@ impl<R, F: FnOnce() -> R> FnOnce<()> for AssertUnwindSafe<F> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: fmt::Debug> fmt::Debug for AssertUnwindSafe<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_tuple(\"AssertUnwindSafe\")"}, {"sha": "e44c01e32a128ebe467b72d0d7a59624838a65e3", "filename": "src/libstd/process.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -114,7 +114,7 @@ impl IntoInner<imp::Process> for Child {\n     fn into_inner(self) -> imp::Process { self.handle }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Child {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"Child\")\n@@ -160,7 +160,7 @@ impl FromInner<AnonPipe> for ChildStdin {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStdin {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"ChildStdin { .. }\")\n@@ -201,7 +201,7 @@ impl FromInner<AnonPipe> for ChildStdout {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStdout {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"ChildStdout { .. }\")\n@@ -242,7 +242,7 @@ impl FromInner<AnonPipe> for ChildStderr {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for ChildStderr {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"ChildStderr { .. }\")\n@@ -696,7 +696,7 @@ impl FromInner<imp::Stdio> for Stdio {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Stdio {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Stdio { .. }\")"}, {"sha": "fc4fd4ce92b1b6fbe6f37e8fc3d998e90d68b8e4", "filename": "src/libstd/sync/barrier.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fbarrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fbarrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fbarrier.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -55,7 +55,7 @@ struct BarrierState {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BarrierWaitResult(bool);\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Barrier {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Barrier { .. }\")\n@@ -110,7 +110,7 @@ impl Barrier {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for BarrierWaitResult {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"BarrierWaitResult\")"}, {"sha": "d5bfc331c4ef18a25f5337ad7a0061c88d8912ff", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -240,7 +240,7 @@ impl Condvar {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Condvar {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Condvar { .. }\")"}, {"sha": "0d6ad5e38e98b0bcdec7b57e691a3675359e546f", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -428,7 +428,7 @@ impl<'a, T: ?Sized> Drop for MutexGuard<'a, T> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T: ?Sized + fmt::Debug> fmt::Debug for MutexGuard<'a, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"MutexGuard\")"}, {"sha": "ba99375139139c7d2a1cd71ed5e9c3961e8233df", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -330,7 +330,7 @@ impl Once {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl fmt::Debug for Once {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"Once { .. }\")"}, {"sha": "a3db0adeda00dc6042c2c8f26dc77d6c3b65162c", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -361,7 +361,7 @@ impl<'rwlock, T: ?Sized> RwLockWriteGuard<'rwlock, T> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T: fmt::Debug> fmt::Debug for RwLockReadGuard<'a, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"RwLockReadGuard\")\n@@ -370,7 +370,7 @@ impl<'a, T: fmt::Debug> fmt::Debug for RwLockReadGuard<'a, T> {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T: fmt::Debug> fmt::Debug for RwLockWriteGuard<'a, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"RwLockWriteGuard\")"}, {"sha": "5166ddf8a21b620bc516150da11ae1dd51926055", "filename": "src/libstd/thread/local.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fthread%2Flocal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fthread%2Flocal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Flocal.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -99,7 +99,7 @@ pub struct LocalKey<T: 'static> {\n     init: fn() -> T,\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T: 'static> fmt::Debug for LocalKey<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"LocalKey { .. }\")\n@@ -332,7 +332,6 @@ pub mod os {\n         marker: marker::PhantomData<Cell<T>>,\n     }\n \n-    #[stable(feature = \"std_debug\", since = \"1.15.0\")]\n     impl<T> fmt::Debug for Key<T> {\n         fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n             f.pad(\"Key { .. }\")"}, {"sha": "93e320c45223c5978b06f523002e01be941b889b", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -698,7 +698,7 @@ impl ThreadId {\n     }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[unstable(feature = \"thread_id\", issue = \"21507\")]\n impl fmt::Debug for ThreadId {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"ThreadId { .. }\")\n@@ -1002,7 +1002,7 @@ impl<T> IntoInner<imp::Thread> for JoinHandle<T> {\n     fn into_inner(self) -> imp::Thread { self.0.native.unwrap() }\n }\n \n-#[stable(feature = \"std_debug\", since = \"1.15.0\")]\n+#[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<T> fmt::Debug for JoinHandle<T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.pad(\"JoinHandle { .. }\")"}, {"sha": "4269ce8534bd032e056a76dabec6fd88359e1669", "filename": "src/libstd_unicode/char.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd_unicode%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9128f6100c9bfe2c2c22d85ccec92f01166f5d25/src%2Flibstd_unicode%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd_unicode%2Fchar.rs?ref=9128f6100c9bfe2c2c22d85ccec92f01166f5d25", "patch": "@@ -131,7 +131,6 @@ impl Iterator for CaseMappingIter {\n     }\n }\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n impl fmt::Display for CaseMappingIter {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match *self {\n@@ -152,14 +151,14 @@ impl fmt::Display for CaseMappingIter {\n     }\n }\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n+#[stable(feature = \"char_struct_display\", since = \"1.16.0\")]\n impl fmt::Display for ToLowercase {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Display::fmt(&self.0, f)\n     }\n }\n \n-#[stable(feature = \"char_struct_display\", since = \"1.17.0\")]\n+#[stable(feature = \"char_struct_display\", since = \"1.16.0\")]\n impl fmt::Display for ToUppercase {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Display::fmt(&self.0, f)"}]}