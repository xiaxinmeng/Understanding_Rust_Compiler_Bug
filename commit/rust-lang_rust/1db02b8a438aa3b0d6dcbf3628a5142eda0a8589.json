{"sha": "1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "node_id": "C_kwDOAAsO6NoAKDFkYjAyYjhhNDM4YWEzYjBkNmRjYmYzNjI4YTUxNDJlZGEwYTg1ODk", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-15T23:49:03Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T02:20:17Z"}, "message": "Change wording of missing return type suggestion", "tree": {"sha": "22b3622ba95c0d1fb2fee67aa5e1e098b9660e15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22b3622ba95c0d1fb2fee67aa5e1e098b9660e15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "html_url": "https://github.com/rust-lang/rust/commit/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b09420f95a719c85e60b501955d356b1c34abf16", "url": "https://api.github.com/repos/rust-lang/rust/commits/b09420f95a719c85e60b501955d356b1c34abf16", "html_url": "https://github.com/rust-lang/rust/commit/b09420f95a719c85e60b501955d356b1c34abf16"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "e6a98ad6dc051aa8ce3cf97584b60b28db604284", "filename": "compiler/rustc_typeck/src/check/fn_ctxt/suggestions.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Ffn_ctxt%2Fsuggestions.rs?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -530,13 +530,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 err.span_suggestion(\n                     span,\n                     \"try adding a return type\",\n-                    format!(\"-> {} \", self.resolve_vars_with_obligations(found)),\n+                    format!(\"-> {} \", found),\n                     Applicability::MachineApplicable,\n                 );\n                 true\n             }\n             (&hir::FnRetTy::DefaultReturn(span), false, true, true) => {\n-                err.span_label(span, \"possibly return type missing here?\");\n+                // FIXME: if `found` could be `impl Iterator` or `impl Fn*`, we should suggest\n+                // that.\n+                err.span_suggestion(\n+                    span,\n+                    \"a return type might be missing here\",\n+                    \"-> _ \".to_string(),\n+                    Applicability::HasPlaceholders,\n+                );\n                 true\n             }\n             (&hir::FnRetTy::DefaultReturn(span), _, false, true) => {"}, {"sha": "e9ca0ad9029e6e0bdb69f9dbbd4a84c3e00453a2", "filename": "src/test/ui/block-result/issue-20862.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-20862.rs:2:5\n    |\n LL | fn foo(x: i32) {\n-   |                - possibly return type missing here?\n+   |                - help: a return type might be missing here: `-> _`\n LL |     |y| x + y\n    |     ^^^^^^^^^ expected `()`, found closure\n    |"}, {"sha": "4b5b8c45d5939c0eb5946797a8b8c54b9e6bf553", "filename": "src/test/ui/never_type/diverging-tuple-parts-39485.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Fnever_type%2Fdiverging-tuple-parts-39485.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Fnever_type%2Fdiverging-tuple-parts-39485.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fdiverging-tuple-parts-39485.stderr?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -1,13 +1,15 @@\n error[E0308]: mismatched types\n   --> $DIR/diverging-tuple-parts-39485.rs:8:5\n    |\n-LL | fn g() {\n-   |        - possibly return type missing here?\n LL |     &panic!()\n    |     ^^^^^^^^^ expected `()`, found reference\n    |\n    = note: expected unit type `()`\n               found reference `&_`\n+help: a return type might be missing here\n+   |\n+LL | fn g() -> _ {\n+   |        ++++\n help: consider removing the borrow\n    |\n LL -     &panic!()"}, {"sha": "633c7b11aa2f89d6359fcc0cdd48db1d927c9726", "filename": "src/test/ui/typeck/issue-91334.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-91334.stderr?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -40,7 +40,7 @@ error[E0308]: mismatched types\n LL | fn f(){||yield(((){),\n    |       -^^^^^^^^^^^^^^^ expected `()`, found generator\n    |       |\n-   |       possibly return type missing here?\n+   |       help: a return type might be missing here: `-> _`\n    |\n    = note: expected unit type `()`\n               found generator `[generator@$DIR/issue-91334.rs:10:8: 10:23]`"}, {"sha": "29624e08a2e805862890a8fae3ec698a3ef099f0", "filename": "src/test/ui/typeck/return_type_containing_closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.rs?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -1,10 +1,10 @@\n #[allow(unused)]\n-fn foo() {\n-    //~^ NOTE possibly return type missing here?\n+fn foo() { //~ HELP a return type might be missing here\n     vec!['a'].iter().map(|c| c)\n     //~^ ERROR mismatched types [E0308]\n     //~| NOTE expected `()`, found struct `Map`\n     //~| NOTE expected unit type `()`\n+    //~| HELP consider using a semicolon here\n }\n \n fn main() {}"}, {"sha": "ae72b1477c8852954efd44baf880f9179dc266a5", "filename": "src/test/ui/typeck/return_type_containing_closure.stderr", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Freturn_type_containing_closure.stderr?ref=1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "patch": "@@ -1,16 +1,19 @@\n error[E0308]: mismatched types\n-  --> $DIR/return_type_containing_closure.rs:4:5\n+  --> $DIR/return_type_containing_closure.rs:3:5\n    |\n-LL | fn foo() {\n-   |          - possibly return type missing here?\n-LL |\n LL |     vec!['a'].iter().map(|c| c)\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^- help: consider using a semicolon here: `;`\n-   |     |\n-   |     expected `()`, found struct `Map`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `()`, found struct `Map`\n    |\n    = note: expected unit type `()`\n-                 found struct `Map<std::slice::Iter<'_, char>, [closure@$DIR/return_type_containing_closure.rs:4:26: 4:31]>`\n+                 found struct `Map<std::slice::Iter<'_, char>, [closure@$DIR/return_type_containing_closure.rs:3:26: 3:31]>`\n+help: consider using a semicolon here\n+   |\n+LL |     vec!['a'].iter().map(|c| c);\n+   |                                +\n+help: a return type might be missing here\n+   |\n+LL | fn foo() -> _ {\n+   |          ++++\n \n error: aborting due to previous error\n "}]}