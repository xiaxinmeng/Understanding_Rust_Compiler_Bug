{"sha": "f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1NzY1NzkzYjY1MGU0NWU4YzliYzg5ZGZjN2E0ZGM2MjgxMjNjYjc=", "commit": {"author": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-03-14T23:09:26Z"}, "committer": {"name": "Tamir Duberstein", "email": "tamird@gmail.com", "date": "2015-03-15T18:25:43Z"}, "message": "Strip trailing whitespace", "tree": {"sha": "36adbe36349138ea5a4578d3341a74825348570e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36adbe36349138ea5a4578d3341a74825348570e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "html_url": "https://github.com/rust-lang/rust/commit/f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/comments", "author": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamird", "id": 1535036, "node_id": "MDQ6VXNlcjE1MzUwMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1535036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamird", "html_url": "https://github.com/tamird", "followers_url": "https://api.github.com/users/tamird/followers", "following_url": "https://api.github.com/users/tamird/following{/other_user}", "gists_url": "https://api.github.com/users/tamird/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamird/subscriptions", "organizations_url": "https://api.github.com/users/tamird/orgs", "repos_url": "https://api.github.com/users/tamird/repos", "events_url": "https://api.github.com/users/tamird/events{/privacy}", "received_events_url": "https://api.github.com/users/tamird/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d51047ded072b412ec18a6f78c1fb80835a477f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d51047ded072b412ec18a6f78c1fb80835a477f5", "html_url": "https://github.com/rust-lang/rust/commit/d51047ded072b412ec18a6f78c1fb80835a477f5"}], "stats": {"total": 298, "additions": 149, "deletions": 149}, "files": [{"sha": "f92fc653e0ef32719d45f95e5a842d85e8d3bece", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -64,7 +64,7 @@ Read [\"Installing Rust\"] from [The Book].\n    # Choose one based on platform:\n    $ pacman -S mingw-w64-i686-toolchain\n    $ pacman -S mingw-w64-x86_64-toolchain\n-   \n+\n    $ pacman -S base-devel\n    ```\n "}, {"sha": "1ea3c7d7bd9d87924cab902b7c69fa34238752e0", "filename": "src/doc/grammar.md", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -290,7 +290,7 @@ transcriber : '(' transcriber * ')' | '[' transcriber * ']'\n \n # Items and attributes\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ## Items\n \n@@ -301,7 +301,7 @@ item : mod_item | fn_item | type_item | struct_item | enum_item\n \n ### Type Parameters\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Modules\n \n@@ -338,35 +338,35 @@ path_item : ident | \"mod\" ;\n \n ### Functions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Generic functions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Unsafety\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ##### Unsafe functions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ##### Unsafe blocks\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Diverging functions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Type definitions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Structures\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Constant items\n \n@@ -382,15 +382,15 @@ static_item : \"static\" ident ':' type '=' expr ';' ;\n \n #### Mutable statics\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Traits\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Implementations\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### External blocks\n \n@@ -401,11 +401,11 @@ extern_block : [ foreign_fn ] * ;\n \n ## Visibility and Privacy\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Re-exporting and Visibility\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ## Attributes\n \n@@ -420,19 +420,19 @@ meta_seq : meta_item [ ',' meta_seq ] ? ;\n \n ## Statements\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Declaration statements\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n A _declaration statement_ is one that introduces one or more *names* into the\n enclosing statement block. The declared names may denote new slots or new\n items.\n \n #### Item declarations\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n An _item declaration statement_ has a syntactic form identical to an\n [item](#items) declaration within a module. Declaring an item &mdash; a\n@@ -450,35 +450,35 @@ init : [ '=' ] expr ;\n \n ### Expression statements\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ## Expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Lvalues, rvalues and temporaries\n \n-**FIXME:** grammar?  \n+**FIXME:** grammar?\n \n #### Moved and copied types\n \n-**FIXME:** Do we want to capture this in the grammar as different productions? \n+**FIXME:** Do we want to capture this in the grammar as different productions?\n \n ### Literal expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Path expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Tuple expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Unit expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Structure expressions\n \n@@ -527,7 +527,7 @@ idx_expr : expr '[' expr ']' ;\n \n ### Unary operator expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Binary operator expressions\n \n@@ -537,31 +537,31 @@ binop_expr : expr binop expr ;\n \n #### Arithmetic operators\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Bitwise operators\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Lazy boolean operators\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Comparison operators\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Type cast expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Assignment expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Compound assignment expressions\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Operator precedence\n \n@@ -680,49 +680,49 @@ return_expr : \"return\" expr ? ;\n \n # Type system\n \n-**FIXME:** is this entire chapter relevant here? Or should it all have been covered by some production already? \n+**FIXME:** is this entire chapter relevant here? Or should it all have been covered by some production already?\n \n ## Types\n \n ### Primitive types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Machine types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n #### Machine-dependent integer types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Textual types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Tuple types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Array, and Slice types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Structure types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Enumerated types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Pointer types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Function types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Closure types\n \n@@ -739,23 +739,23 @@ bound := path | lifetime\n \n ### Object types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Type parameters\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ### Self types\n \n-**FIXME:** grammar? \n+**FIXME:** grammar?\n \n ## Type kinds\n \n **FIXME:** this this probably not relevant to the grammar...\n \n # Memory and concurrency models\n \n-**FIXME:** is this entire chapter relevant here? Or should it all have been covered by some production already? \n+**FIXME:** is this entire chapter relevant here? Or should it all have been covered by some production already?\n \n ## Memory model\n "}, {"sha": "5d0f314e8c62ec5556b804303a7ef7884647c793", "filename": "src/doc/trpl/arrays-vectors-and-slices.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Farrays-vectors-and-slices.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Farrays-vectors-and-slices.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Farrays-vectors-and-slices.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -49,7 +49,7 @@ languages.\n \n A *vector* is a dynamic or \"growable\" array, implemented as the standard\n library type [`Vec<T>`](../std/vec/) (we'll talk about what the `<T>` means\n-later). Vectors always allocate their data on the heap. Vectors are to slices \n+later). Vectors always allocate their data on the heap. Vectors are to slices\n what `String` is to `&str`. You can create them with the `vec!` macro:\n \n ```{rust}"}, {"sha": "f6f6046b9b458367045dc12350613a223ec6eeaa", "filename": "src/doc/trpl/crates-and-modules.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fcrates-and-modules.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -551,9 +551,9 @@ module, we now have a `phrases::japanese::hello()` function and a\n `phrases::japanese::farewells::goodbye()`. Our internal organization doesn't\n define our external interface.\n \n-Here we have a `pub use` for each function we want to bring into the \n+Here we have a `pub use` for each function we want to bring into the\n `japanese` scope. We could alternatively use the wildcard syntax to include\n-everything from `greetings` into the current scope: `pub use self::greetings::*`. \n+everything from `greetings` into the current scope: `pub use self::greetings::*`.\n \n What about the `self`? Well, by default, `use` declarations are absolute paths,\n starting from your crate root. `self` makes that path relative to your current"}, {"sha": "8e5b3b6a7f0afa2f25c1b7938de9cf525d9ecd45", "filename": "src/doc/trpl/documentation.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fdocumentation.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fdocumentation.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -306,23 +306,23 @@ println!(\"{}\", x + y);\n Here's the same explanation, in raw text:\n \n > First, we set `x` to five:\n-> \n+>\n > ```text\n > let x = 5;\n > # let y = 6;\n > # println!(\"{}\", x + y);\n > ```\n-> \n+>\n > Next, we set `y` to six:\n-> \n+>\n > ```text\n > # let x = 5;\n > let y = 6;\n > # println!(\"{}\", x + y);\n > ```\n-> \n+>\n > Finally, we print the sum of `x` and `y`:\n-> \n+>\n > ```text\n > # let x = 5;\n > # let y = 6;"}, {"sha": "0ca42c3b12db2d4282bfaae449ee6508b8357b0c", "filename": "src/doc/trpl/method-syntax.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmethod-syntax.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -61,15 +61,15 @@ struct Circle {\n \n impl Circle {\n     fn reference(&self) {\n-       println!(\"taking self by reference!\"); \n+       println!(\"taking self by reference!\");\n     }\n \n     fn mutable_reference(&mut self) {\n-       println!(\"taking self by mutable reference!\"); \n+       println!(\"taking self by mutable reference!\");\n     }\n \n     fn takes_ownership(self) {\n-       println!(\"taking ownership of self!\"); \n+       println!(\"taking ownership of self!\");\n     }\n }\n ```"}, {"sha": "a7794814156e63fd330d21713d219cff2d7fd550", "filename": "src/doc/trpl/static-and-dynamic-dispatch.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fstatic-and-dynamic-dispatch.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Fstatic-and-dynamic-dispatch.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fstatic-and-dynamic-dispatch.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -95,7 +95,7 @@ However, the common case is that it is more efficient to use static dispatch,\n and one can always have a thin statically-dispatched wrapper function that does\n a dynamic dispatch, but not vice versa, meaning static calls are more flexible.\n The standard library tries to be statically dispatched where possible for this\n-reason. \n+reason.\n \n ## Dynamic dispatch\n "}, {"sha": "537e100d7d830354782734de580653d90733dae2", "filename": "src/doc/trpl/testing.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fdoc%2Ftrpl%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftesting.md?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -1,7 +1,7 @@\n % Testing\n \n > Program testing can be a very effective way to show the presence of bugs, but\n-> it is hopelessly inadequate for showing their absence. \n+> it is hopelessly inadequate for showing their absence.\n >\n > Edsger W. Dijkstra, \"The Humble Programmer\" (1972)\n \n@@ -308,7 +308,7 @@ extern crate adder;\n #[test]\n fn it_works() {\n     assert_eq!(4, adder::add_two(2));\n-}   \n+}\n ```\n \n This looks similar to our previous tests, but slightly different. We now have"}, {"sha": "e36e6abde9178dd6b5c1515ff6d4a7a33854f9d1", "filename": "src/etc/mingw-fix-include/README.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fetc%2Fmingw-fix-include%2FREADME.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Fetc%2Fmingw-fix-include%2FREADME.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmingw-fix-include%2FREADME.txt?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -1,6 +1,6 @@\n The purpose of these headers is to fix issues with mingw v4.0, as described in #9246.\n \n-This works by adding this directory to GCC include search path before mingw system headers directories, \n+This works by adding this directory to GCC include search path before mingw system headers directories,\n so we can intercept their inclusions and add missing definitions without having to modify files in mingw/include.\n \n Once mingw fixes all 3 issues mentioned in #9246, this directory and all references to it from rust/mk/* may be removed."}, {"sha": "437289982927dc29c6acec1f4a1e8746afe6c872", "filename": "src/libbacktrace/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FMakefile.am?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -6,12 +6,12 @@\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer. \n+#     notice, this list of conditions and the following disclaimer.\n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.  \n+#     distribution.\n \n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without"}, {"sha": "93ccec2dbf92f4f6753fa62d75979d62719ef319", "filename": "src/libbacktrace/Makefile.in", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FMakefile.in?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -23,12 +23,12 @@\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer. \n+#     notice, this list of conditions and the following disclaimer.\n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.  \n+#     distribution.\n \n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without\n@@ -117,10 +117,10 @@ LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t$(LDFLAGS) -o $@\n SOURCES = $(libbacktrace_la_SOURCES) $(EXTRA_libbacktrace_la_SOURCES) \\\n \t$(btest_SOURCES)\n-MULTISRCTOP = \n-MULTIBUILDTOP = \n-MULTIDIRS = \n-MULTISUBDIR = \n+MULTISRCTOP =\n+MULTIBUILDTOP =\n+MULTIDIRS =\n+MULTISUBDIR =\n MULTIDO = true\n MULTICLEAN = true\n ETAGS = etags\n@@ -362,7 +362,7 @@ config.h: stamp-h1\n stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n \t@rm -f stamp-h1\n \tcd $(top_builddir) && $(SHELL) ./config.status config.h\n-$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) \n+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n \t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n \trm -f stamp-h1\n \ttouch $@\n@@ -380,7 +380,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libbacktrace.la: $(libbacktrace_la_OBJECTS) $(libbacktrace_la_DEPENDENCIES) \n+libbacktrace.la: $(libbacktrace_la_OBJECTS) $(libbacktrace_la_DEPENDENCIES)\n \t$(LINK)  $(libbacktrace_la_OBJECTS) $(libbacktrace_la_LIBADD) $(LIBS)\n \n clean-checkPROGRAMS:\n@@ -391,7 +391,7 @@ clean-checkPROGRAMS:\n \tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n \techo \" rm -f\" $$list; \\\n \trm -f $$list\n-btest$(EXEEXT): $(btest_OBJECTS) $(btest_DEPENDENCIES) \n+btest$(EXEEXT): $(btest_OBJECTS) $(btest_DEPENDENCIES)\n \t@rm -f btest$(EXEEXT)\n \t$(btest_LINK) $(btest_OBJECTS) $(btest_LDADD) $(LIBS)\n "}, {"sha": "4aa85d050fd179681c419d9dad91984f7afdb3f4", "filename": "src/libbacktrace/alloc.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Falloc.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Falloc.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Falloc.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "b31fa64c798c8e4aae266fd735d5328194168133", "filename": "src/libbacktrace/atomic.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fatomic.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fatomic.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fatomic.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "28488167c4e2b9f94944eebb1ae73af1c7fdcd16", "filename": "src/libbacktrace/backtrace-supported.h.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace-supported.h.in", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace-supported.h.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace-supported.h.in?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "4b90357df5f806f46159ec9a71ae450d4199a156", "filename": "src/libbacktrace/backtrace.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "3f77093f767edc092cf8e4108f49495fc54c61b6", "filename": "src/libbacktrace/backtrace.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace.h", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbacktrace.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace.h?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "a1818f1ef8311bf602e6cde217e3cac0f1dbd861", "filename": "src/libbacktrace/btest.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbtest.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fbtest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbtest.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -460,7 +460,7 @@ f23 (int f1line, int f2line)\n \t\t       (unsigned int) bdata.index, j + 1);\n \t      bdata.failed = 1;\n \t    }\n-\t}      \n+\t}\n \n       check (\"test3\", 0, all, f3line, \"f23\", &bdata.failed);\n       check (\"test3\", 1, all, f2line, \"f22\", &bdata.failed);"}, {"sha": "d661c7b2560fca6acd60cbc67c804938509004ee", "filename": "src/libbacktrace/configure.ac", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure.ac?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -6,13 +6,13 @@\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer. \n+#     notice, this list of conditions and the following disclaimer.\n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.  \n-    \n+#     distribution.\n+\n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without\n #     specific prior written permission."}, {"sha": "5ecae711792e294d2cb16c686ca163e53b1bbe2c", "filename": "src/libbacktrace/dwarf.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fdwarf.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fdwarf.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -1241,7 +1241,7 @@ add_unit_ranges (struct backtrace_state *state, uintptr_t base_address,\n \n static int\n find_address_ranges (struct backtrace_state *state, uintptr_t base_address,\n-\t\t     struct dwarf_buf *unit_buf, \n+\t\t     struct dwarf_buf *unit_buf,\n \t\t     const unsigned char *dwarf_str, size_t dwarf_str_size,\n \t\t     const unsigned char *dwarf_ranges,\n \t\t     size_t dwarf_ranges_size,\n@@ -1599,7 +1599,7 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n \n   if (!advance (line_buf, hdrlen))\n     return 0;\n-  \n+\n   hdr->min_insn_len = read_byte (&hdr_buf);\n   if (hdr->version < 4)\n     hdr->max_ops_per_insn = 1;\n@@ -1608,7 +1608,7 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n \n   /* We don't care about default_is_stmt.  */\n   read_byte (&hdr_buf);\n-  \n+\n   hdr->line_base = read_sbyte (&hdr_buf);\n   hdr->line_range = read_byte (&hdr_buf);\n "}, {"sha": "5fc74add05c1814174ffdeb07842df72c9e0b1ba", "filename": "src/libbacktrace/elf.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Felf.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Felf.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "f45cccff71306f3926cc50065eeddcf6c0dbefc1", "filename": "src/libbacktrace/fileline.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Ffileline.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Ffileline.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Ffileline.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "3736622e67739cf97ea710b95a4fdbd66fbb9921", "filename": "src/libbacktrace/hashtab.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fhashtab.h", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fhashtab.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fhashtab.h?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -1,4 +1,4 @@\n-/* An expandable hash tables datatype.  \n+/* An expandable hash tables datatype.\n    Copyright (C) 1999, 2000, 2002, 2003, 2004, 2005, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov (vmakarov@cygnus.com).\n@@ -61,7 +61,7 @@ typedef int (*htab_eq) (const void *, const void *);\n /* Cleanup function called whenever a live element is removed from\n    the hash table.  */\n typedef void (*htab_del) (void *);\n-  \n+\n /* Function called by htab_traverse for each live element.  The first\n    arg is the slot of the element (which can be passed to htab_clear_slot\n    if desired), the second arg is the auxiliary pointer handed to"}, {"sha": "a13c775b628737d4ffb60f15cde3b241fa27af8c", "filename": "src/libbacktrace/internal.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Finternal.h", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Finternal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Finternal.h?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "1c691b02e7cfa6db80eedcf817d2d31a1d080c96", "filename": "src/libbacktrace/mmap.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fmmap.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fmmap.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fmmap.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "8b8f124da9a6d729a89116ab5af0d0585c0aa7d1", "filename": "src/libbacktrace/mmapio.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fmmapio.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fmmapio.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fmmapio.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "f8fdbdc85acb4f6c1cde3144650674cce3760231", "filename": "src/libbacktrace/nounwind.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fnounwind.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fnounwind.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fnounwind.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "7f1c35ab9707d0ce2165a7ba899fea0f3043f83c", "filename": "src/libbacktrace/posix.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fposix.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fposix.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fposix.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "70e347f62c290fefd8480f4436b28ffd0da1cbfc", "filename": "src/libbacktrace/print.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fprint.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fprint.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fprint.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "e373b61de2e6c8c7f43c38f595ecd6e0da13fb00", "filename": "src/libbacktrace/read.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fread.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fread.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fread.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "dd70f831de74a5c5f85e5903ad9320b91de82556", "filename": "src/libbacktrace/simple.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fsimple.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fsimple.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fsimple.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "bef47bd1a0f541494c1d3cdc8237261de97dea73", "filename": "src/libbacktrace/state.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fstate.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Fstate.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fstate.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "e5e8421b3a994c0cbfe4a0d6163380bfab23f12d", "filename": "src/libbacktrace/unknown.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Funknown.c", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibbacktrace%2Funknown.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Funknown.c?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -7,13 +7,13 @@ modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer. \n+    notice, this list of conditions and the following disclaimer.\n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.  \n-    \n+    distribution.\n+\n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "9b364768208ebfabbb333cdf84d36b7b697af1fb", "filename": "src/librustc/README.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustc%2FREADME.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustc%2FREADME.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FREADME.txt?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -40,7 +40,7 @@ crates is preferable):\n   driver that orchestrates all the other passes and various other bits\n   of miscellany. In general it contains code that runs towards the\n   end of the compilation process.\n-  \n+\n Roughly speaking the \"order\" of the three crates is as follows:\n \n     libsyntax -> librustc -> librustc_trans"}, {"sha": "dd85e40e64548e19b4571c86ec4ec1111bad4401", "filename": "src/librustdoc/html/static/Heuristica-LICENSE.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FHeuristica-LICENSE.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FHeuristica-LICENSE.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2FHeuristica-LICENSE.txt?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -1,7 +1,7 @@\n Copyright 1989, 1991 Adobe Systems Incorporated. All rights reserved.\n Utopia is either a registered trademark or trademark of Adobe Systems\n Incorporated in the United States and/or other countries. Used under\n-license. \n+license.\n \n Copyright 2006 Han The Thanh, Vntopia font family, http://vntex.sf.net\n \n@@ -26,7 +26,7 @@ with others.\n \n The OFL allows the licensed fonts to be used, studied, modified and\n redistributed freely as long as they are not sold by themselves. The\n-fonts, including any derivative works, can be bundled, embedded, \n+fonts, including any derivative works, can be bundled, embedded,\n redistributed and/or sold with any software provided that any reserved\n names are not used by derivative works. The fonts and derivatives,\n however, cannot be released under any other type of license. The"}, {"sha": "07542572e33bdc15739d047cc3b72da24d71ccef", "filename": "src/librustdoc/html/static/SourceCodePro-LICENSE.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceCodePro-LICENSE.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceCodePro-LICENSE.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceCodePro-LICENSE.txt?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -18,7 +18,7 @@ with others.\n \n The OFL allows the licensed fonts to be used, studied, modified and\n redistributed freely as long as they are not sold by themselves. The\n-fonts, including any derivative works, can be bundled, embedded, \n+fonts, including any derivative works, can be bundled, embedded,\n redistributed and/or sold with any software provided that any reserved\n names are not used by derivative works. The fonts and derivatives,\n however, cannot be released under any other type of license. The"}, {"sha": "b77d653ad4f0dd68026dc96e5b1be332a56e6bd9", "filename": "src/librustdoc/html/static/SourceSerifPro-LICENSE.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceSerifPro-LICENSE.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceSerifPro-LICENSE.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2FSourceSerifPro-LICENSE.txt?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -18,7 +18,7 @@ with others.\n \n The OFL allows the licensed fonts to be used, studied, modified and\n redistributed freely as long as they are not sold by themselves. The\n-fonts, including any derivative works, can be bundled, embedded, \n+fonts, including any derivative works, can be bundled, embedded,\n redistributed and/or sold with any software provided that any reserved\n names are not used by derivative works. The fonts and derivatives,\n however, cannot be released under any other type of license. The"}, {"sha": "edf8e9df465dc23e825d18a1bee7bade996eb494", "filename": "src/test/run-make/many-crates-but-no-match/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Ftest%2Frun-make%2Fmany-crates-but-no-match%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Ftest%2Frun-make%2Fmany-crates-but-no-match%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmany-crates-but-no-match%2FMakefile?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -16,7 +16,7 @@ A3=$(TMPDIR)/a3\n # A hack to match distinct lines of output from a single run.\n LOG=$(TMPDIR)/log.txt\n \n-all: \n+all:\n \tmkdir -p $(A1) $(A2) $(A3)\n \t$(RUSTC) --crate-type=rlib crateA1.rs\n \tmv $(TMPDIR)/$(call RLIB_GLOB,crateA) $(A1)"}, {"sha": "275658047d3cec690de04572d4da06eb3b09ef8c", "filename": "src/test/run-make/missing-crate-dependency/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Ftest%2Frun-make%2Fmissing-crate-dependency%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f5765793b650e45e8c9bc89dfc7a4dc628123cb7/src%2Ftest%2Frun-make%2Fmissing-crate-dependency%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmissing-crate-dependency%2FMakefile?ref=f5765793b650e45e8c9bc89dfc7a4dc628123cb7", "patch": "@@ -1,6 +1,6 @@\n -include ../tools.mk\n \n-all: \n+all:\n \t$(RUSTC) --crate-type=rlib crateA.rs\n \t$(RUSTC) --crate-type=rlib crateB.rs\n \t$(call REMOVE_RLIBS,crateA)"}]}