{"sha": "2b14529a7cc106d5d808529cd14d71aa158c7789", "node_id": "C_kwDOAAsO6NoAKDJiMTQ1MjlhN2NjMTA2ZDVkODA4NTI5Y2QxNGQ3MWFhMTU4Yzc3ODk", "commit": {"author": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2022-04-12T14:31:03Z"}, "committer": {"name": "Martin Gammels\u00e6ter", "email": "martin@mg.am", "date": "2022-04-12T15:29:22Z"}, "message": "Optimize line offset parsing in <SourceFile as Decodable>::decode\n\nBy inverting parsing loop, avoiding continually re-checking bytes_per_diff.", "tree": {"sha": "7e7473ae17cfd6a6251e1510b14e211961c26a21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e7473ae17cfd6a6251e1510b14e211961c26a21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b14529a7cc106d5d808529cd14d71aa158c7789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b14529a7cc106d5d808529cd14d71aa158c7789", "html_url": "https://github.com/rust-lang/rust/commit/2b14529a7cc106d5d808529cd14d71aa158c7789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b14529a7cc106d5d808529cd14d71aa158c7789/comments", "author": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "committer": {"login": "martingms", "id": 458783, "node_id": "MDQ6VXNlcjQ1ODc4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/458783?v=4", "gravatar_id": "", "url": "https://api.github.com/users/martingms", "html_url": "https://github.com/martingms", "followers_url": "https://api.github.com/users/martingms/followers", "following_url": "https://api.github.com/users/martingms/following{/other_user}", "gists_url": "https://api.github.com/users/martingms/gists{/gist_id}", "starred_url": "https://api.github.com/users/martingms/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/martingms/subscriptions", "organizations_url": "https://api.github.com/users/martingms/orgs", "repos_url": "https://api.github.com/users/martingms/repos", "events_url": "https://api.github.com/users/martingms/events{/privacy}", "received_events_url": "https://api.github.com/users/martingms/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1927db3c399fa34dc71992bd5dbec09f945c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1927db3c399fa34dc71992bd5dbec09f945c3d", "html_url": "https://github.com/rust-lang/rust/commit/4e1927db3c399fa34dc71992bd5dbec09f945c3d"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "68401d5ca7cbaea4b249820a33b8bbe694e53ade", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2b14529a7cc106d5d808529cd14d71aa158c7789/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b14529a7cc106d5d808529cd14d71aa158c7789/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=2b14529a7cc106d5d808529cd14d71aa158c7789", "patch": "@@ -1318,17 +1318,26 @@ impl<D: Decoder> Decodable<D> for SourceFile {\n                 let mut line_start: BytePos = Decodable::decode(d);\n                 lines.push(line_start);\n \n-                for _ in 1..num_lines {\n-                    let diff = match bytes_per_diff {\n-                        1 => d.read_u8() as u32,\n-                        2 => d.read_u16() as u32,\n-                        4 => d.read_u32(),\n-                        _ => unreachable!(),\n-                    };\n-\n-                    line_start = line_start + BytePos(diff);\n-\n-                    lines.push(line_start);\n+                match bytes_per_diff {\n+                    1 => {\n+                        for _ in 1..num_lines {\n+                            line_start = line_start + BytePos(d.read_u8() as u32);\n+                            lines.push(line_start);\n+                        }\n+                    }\n+                    2 => {\n+                        for _ in 1..num_lines {\n+                            line_start = line_start + BytePos(d.read_u16() as u32);\n+                            lines.push(line_start);\n+                        }\n+                    }\n+                    4 => {\n+                        for _ in 1..num_lines {\n+                            line_start = line_start + BytePos(d.read_u32());\n+                            lines.push(line_start);\n+                        }\n+                    }\n+                    _ => unreachable!(),\n                 }\n             }\n "}]}