{"sha": "7a8329f5dacae9352a0ea72f9ab136c38403d20a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhODMyOWY1ZGFjYWU5MzUyYTBlYTcyZjlhYjEzNmMzODQwM2QyMGE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-12T10:18:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-12T10:18:11Z"}, "message": "Rollup merge of #59894 - Xanewok:save-assoc-ty-qpath, r=eddyb\n\nsave-analysis: Pull associated type definition using `qpath_def`\n\nCloses https://github.com/rust-lang/rls/issues/1390\n\nThis (probably?) fixes the case where we run the save-analysis code on the following snippet:\n```rust\ntrait Test<'a> {\n    type Thing: Test2;\n}\n\ntrait Test2 {\n    fn print();\n}\n\n#[allow(unused)]\nfn example<T>(t: T)\n    where T: for<'a> Test<'a>\n{\n    T::Thing::print(); //~ ERROR cannot extract an associated type from a higher-ranked trait bound in this context\n    // ^ only errors in save-analysis mode\n}\n```\n\nThe chain is as follows:\n- culprit is `hir_ty_to_ty`\n- which calls `ast_ty_to_ty` in the `ItemCtxt`\n- which calls `associated_path_to_ty`\n- which finally fails on `projected_ty_from_poly_trait_ref`\nhttps://github.com/rust-lang/rust/blob/3de0106789468b211bcc3a25c09c0cf07119186d/src/librustc_typeck/collect.rs#L212-L224\n\nI'm not exactly sure why `hir_ty_to_ty` fails - is it because it needs more setup from typeck to work correctly? I'm guessing the fix is okay since we just pull the already typeck'd data (we run save-analysis after all the analysis passes are complete) from the tables.\n\nWith this change we can 'go to def' on all segments in the `T::Thing::print()` path.", "tree": {"sha": "6fc44d52d9a8943b358cebb476639118444126da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fc44d52d9a8943b358cebb476639118444126da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a8329f5dacae9352a0ea72f9ab136c38403d20a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsGXjCRBK7hj4Ov3rIwAAdHIIADAI/dmekZVeBjQzEOgplTZe\nXj3nnC5q0sZm4bvJZBznCdaOB6v9hVwd/MOAcQFucwESK22kfSDSvJOzgNCzyQGH\n2hIybYVeBRwXV626xf1f8A0vr4IOTbXCc4XtEVA86gsIajQDBIrmPKr3tIr/IsUq\nNYY/2MFG3WVa0GCU5MNPwQVUMLMvH1KDyPZS8wukidnlvql+tc0x7o/Hw0HUAkE5\nOhA4BxSPqff4Fl3ZAUycgrpuLQpIj7XdqcsJ6mfvO5iqngtLDP/JKT/nBLqMxuz+\nj2v9DC8g+i45sMISgc6olp6bzJsy+HvynnlLbk6KFvjUjOWg31qfjpo04mEgviA=\n=+6uY\n-----END PGP SIGNATURE-----\n", "payload": "tree 6fc44d52d9a8943b358cebb476639118444126da\nparent dddcd928dd0e6d9a88f7e59a79b5b1027aebf92f\nparent bcd263e1f13494197503ec2f3eba554fe6055595\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555064291 +0200\ncommitter GitHub <noreply@github.com> 1555064291 +0200\n\nRollup merge of #59894 - Xanewok:save-assoc-ty-qpath, r=eddyb\n\nsave-analysis: Pull associated type definition using `qpath_def`\n\nCloses https://github.com/rust-lang/rls/issues/1390\n\nThis (probably?) fixes the case where we run the save-analysis code on the following snippet:\n```rust\ntrait Test<'a> {\n    type Thing: Test2;\n}\n\ntrait Test2 {\n    fn print();\n}\n\n#[allow(unused)]\nfn example<T>(t: T)\n    where T: for<'a> Test<'a>\n{\n    T::Thing::print(); //~ ERROR cannot extract an associated type from a higher-ranked trait bound in this context\n    // ^ only errors in save-analysis mode\n}\n```\n\nThe chain is as follows:\n- culprit is `hir_ty_to_ty`\n- which calls `ast_ty_to_ty` in the `ItemCtxt`\n- which calls `associated_path_to_ty`\n- which finally fails on `projected_ty_from_poly_trait_ref`\nhttps://github.com/rust-lang/rust/blob/3de0106789468b211bcc3a25c09c0cf07119186d/src/librustc_typeck/collect.rs#L212-L224\n\nI'm not exactly sure why `hir_ty_to_ty` fails - is it because it needs more setup from typeck to work correctly? I'm guessing the fix is okay since we just pull the already typeck'd data (we run save-analysis after all the analysis passes are complete) from the tables.\n\nWith this change we can 'go to def' on all segments in the `T::Thing::print()` path.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a8329f5dacae9352a0ea72f9ab136c38403d20a", "html_url": "https://github.com/rust-lang/rust/commit/7a8329f5dacae9352a0ea72f9ab136c38403d20a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a8329f5dacae9352a0ea72f9ab136c38403d20a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dddcd928dd0e6d9a88f7e59a79b5b1027aebf92f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dddcd928dd0e6d9a88f7e59a79b5b1027aebf92f", "html_url": "https://github.com/rust-lang/rust/commit/dddcd928dd0e6d9a88f7e59a79b5b1027aebf92f"}, {"sha": "bcd263e1f13494197503ec2f3eba554fe6055595", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcd263e1f13494197503ec2f3eba554fe6055595", "html_url": "https://github.com/rust-lang/rust/commit/bcd263e1f13494197503ec2f3eba554fe6055595"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "d6923b4490d59f13d86cd3d22df776135ac1da4f", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7a8329f5dacae9352a0ea72f9ab136c38403d20a/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a8329f5dacae9352a0ea72f9ab136c38403d20a/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=7a8329f5dacae9352a0ea72f9ab136c38403d20a", "patch": "@@ -23,7 +23,6 @@ use rustc::middle::cstore::ExternCrate;\n use rustc::session::config::{CrateType, Input, OutputType};\n use rustc::ty::{self, DefIdTree, TyCtxt};\n use rustc::{bug, span_bug};\n-use rustc_typeck::hir_ty_to_ty;\n use rustc_codegen_utils::link::{filename_for_metadata, out_filename};\n use rustc_data_structures::sync::Lrc;\n \n@@ -648,6 +647,10 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             Node::Pat(&hir::Pat {\n                 node: hir::PatKind::TupleStruct(ref qpath, ..),\n                 ..\n+            }) |\n+            Node::Ty(&hir::Ty {\n+                node: hir::TyKind::Path(ref qpath),\n+                ..\n             }) => {\n                 let hir_id = self.tcx.hir().node_to_hir_id(id);\n                 self.tables.qpath_def(qpath, hir_id)\n@@ -658,25 +661,6 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 ..\n             }) => HirDef::Local(self.tcx.hir().hir_to_node_id(canonical_id)),\n \n-            Node::Ty(ty) => if let hir::Ty {\n-                node: hir::TyKind::Path(ref qpath),\n-                ..\n-            } = *ty\n-            {\n-                match *qpath {\n-                    hir::QPath::Resolved(_, ref path) => path.def,\n-                    hir::QPath::TypeRelative(..) => {\n-                        let ty = hir_ty_to_ty(self.tcx, ty);\n-                        if let ty::Projection(proj) = ty.sty {\n-                            return HirDef::AssociatedTy(proj.item_def_id);\n-                        }\n-                        HirDef::Err\n-                    }\n-                }\n-            } else {\n-                HirDef::Err\n-            },\n-\n             _ => HirDef::Err,\n         }\n     }"}, {"sha": "710c84a6bc980f04b855cb5a84f221a6d4606868", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a8329f5dacae9352a0ea72f9ab136c38403d20a/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a8329f5dacae9352a0ea72f9ab136c38403d20a/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=7a8329f5dacae9352a0ea72f9ab136c38403d20a", "patch": "@@ -379,7 +379,7 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>)\n     }\n }\n \n-/// A quasi-deprecated helper used in rustdoc and save-analysis to get\n+/// A quasi-deprecated helper used in rustdoc and clippy to get\n /// the type from a HIR node.\n pub fn hir_ty_to_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, hir_ty: &hir::Ty) -> Ty<'tcx> {\n     // In case there are any projections etc, find the \"environment\""}]}