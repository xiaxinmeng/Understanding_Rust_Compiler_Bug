{"sha": "4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "node_id": "C_kwDOAAsO6NoAKDRkMGQ2ODhhM2NmZDNkNThjYmQ1ZDgwNjVhN2FmNzc0YTdiYjgyYjY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-25T22:20:01Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-25T22:34:25Z"}, "message": "Recover some items that expect braces and don't take semicolons", "tree": {"sha": "c72acae92de5d053ca511c65197ace59d0e3a9d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c72acae92de5d053ca511c65197ace59d0e3a9d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "html_url": "https://github.com/rust-lang/rust/commit/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fafbb006ee98635874f73e480655912b465e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fafbb006ee98635874f73e480655912b465e65", "html_url": "https://github.com/rust-lang/rust/commit/f3fafbb006ee98635874f73e480655912b465e65"}], "stats": {"total": 89, "additions": 78, "deletions": 11}, "files": [{"sha": "07dd03e6e504e57bcdc8a1c9d1a5f6eaf228effc", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -158,3 +158,6 @@ parser_remove_let = expected pattern, found `let`\n \n parser_use_eq_instead = unexpected `==`\n     .suggestion = try using `=` instead\n+\n+parser_use_empty_block_not_semi = expected { \"`{}`\" }, found `;`\n+    .suggestion = try using { \"`{}`\" } instead"}, {"sha": "8750873c3a4a3d0098d401910e445ce71a51739a", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -745,6 +745,14 @@ pub(crate) struct UseEqInstead {\n     pub span: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(parser::use_empty_block_not_semi)]\n+pub(crate) struct UseEmptyBlockNotSemi {\n+    #[primary_span]\n+    #[suggestion_hidden(applicability = \"machine-applicable\", code = \"{{}}\")]\n+    pub span: Span,\n+}\n+\n // SnapshotParser is used to create a snapshot of the parser\n // without causing duplicate errors being emitted when the `Parser`\n // is dropped."}, {"sha": "802dfc048f82592b098da0d0c952716db0465757", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -1,4 +1,4 @@\n-use super::diagnostics::{dummy_arg, ConsumeClosingDelim, Error};\n+use super::diagnostics::{dummy_arg, ConsumeClosingDelim, Error, UseEmptyBlockNotSemi};\n use super::ty::{AllowPlus, RecoverQPath, RecoverReturnSign};\n use super::{AttrWrapper, FollowedByType, ForceCollect, Parser, PathStyle, TrailingToken};\n \n@@ -664,6 +664,14 @@ impl<'a> Parser<'a> {\n         mut parse_item: impl FnMut(&mut Parser<'a>) -> PResult<'a, Option<Option<T>>>,\n     ) -> PResult<'a, Vec<T>> {\n         let open_brace_span = self.token.span;\n+\n+        // Recover `impl Ty;` instead of `impl Ty {}`\n+        if self.token == TokenKind::Semi {\n+            self.sess.emit_err(UseEmptyBlockNotSemi { span: self.token.span });\n+            self.bump();\n+            return Ok(vec![]);\n+        }\n+\n         self.expect(&token::OpenDelim(Delimiter::Brace))?;\n         attrs.extend(self.parse_inner_attributes()?);\n \n@@ -1305,12 +1313,19 @@ impl<'a> Parser<'a> {\n         let mut generics = self.parse_generics()?;\n         generics.where_clause = self.parse_where_clause()?;\n \n-        let (variants, _) = self\n-            .parse_delim_comma_seq(Delimiter::Brace, |p| p.parse_enum_variant())\n-            .map_err(|e| {\n-                self.recover_stmt();\n-                e\n-            })?;\n+        // Possibly recover `enum Foo;` instead of `enum Foo {}`\n+        let (variants, _) = if self.token == TokenKind::Semi {\n+            self.sess.emit_err(UseEmptyBlockNotSemi { span: self.token.span });\n+            self.bump();\n+            (vec![], false)\n+        } else {\n+            self.parse_delim_comma_seq(Delimiter::Brace, |p| p.parse_enum_variant()).map_err(\n+                |e| {\n+                    self.recover_stmt();\n+                    e\n+                },\n+            )?\n+        };\n \n         let enum_definition = EnumDef { variants: variants.into_iter().flatten().collect() };\n         Ok((id, ItemKind::Enum(enum_definition, generics)))"}, {"sha": "2485f5b8552020a256c7bbed7eb6a7a98d9827d4", "filename": "src/test/ui/parser/empty-impl-semicolon.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.rs?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -1 +1,4 @@\n-impl Foo; //~ ERROR expected one of `!`, `(`, `+`, `::`, `<`, `for`, `where`, or `{`, found `;`\n+struct Foo;\n+impl Foo; //~ ERROR expected `{}`, found `;`\n+\n+fn main() {}"}, {"sha": "6ed309eba9392e15ad7471dd9073f3acd8fe6902", "filename": "src/test/ui/parser/empty-impl-semicolon.stderr", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fempty-impl-semicolon.stderr?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -1,8 +1,10 @@\n-error: expected one of `!`, `(`, `+`, `::`, `<`, `for`, `where`, or `{`, found `;`\n-  --> $DIR/empty-impl-semicolon.rs:1:9\n+error: expected `{}`, found `;`\n+  --> $DIR/empty-impl-semicolon.rs:2:9\n    |\n LL | impl Foo;\n-   |         ^ expected one of 8 possible tokens\n+   |         ^\n+   |\n+   = help: try using `{}` instead\n \n error: aborting due to previous error\n "}, {"sha": "4edac588eee9770fb265057b3c7b2a8430a06d99", "filename": "src/test/ui/parser/item-needs-block.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.rs?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -0,0 +1,10 @@\n+trait Trait;\n+//~^ ERROR expected `{}`, found `;`\n+\n+impl Trait for ();\n+//~^ ERROR expected `{}`, found `;`\n+\n+enum Enum;\n+//~^ ERROR expected `{}`, found `;`\n+\n+fn main() {}"}, {"sha": "3cabd0c73a3c93918d4089395ebcb41fd33e9334", "filename": "src/test/ui/parser/item-needs-block.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fitem-needs-block.stderr?ref=4d0d688a3cfd3d58cbd5d8065a7af774a7bb82b6", "patch": "@@ -0,0 +1,26 @@\n+error: expected `{}`, found `;`\n+  --> $DIR/item-needs-block.rs:1:12\n+   |\n+LL | trait Trait;\n+   |            ^\n+   |\n+   = help: try using `{}` instead\n+\n+error: expected `{}`, found `;`\n+  --> $DIR/item-needs-block.rs:4:18\n+   |\n+LL | impl Trait for ();\n+   |                  ^\n+   |\n+   = help: try using `{}` instead\n+\n+error: expected `{}`, found `;`\n+  --> $DIR/item-needs-block.rs:7:10\n+   |\n+LL | enum Enum;\n+   |          ^\n+   |\n+   = help: try using `{}` instead\n+\n+error: aborting due to 3 previous errors\n+"}]}