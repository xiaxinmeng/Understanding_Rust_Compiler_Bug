{"sha": "5675e0cd409ab4d3ca0c1717e7ec41825d4a3315", "node_id": "C_kwDOAAsO6NoAKDU2NzVlMGNkNDA5YWI0ZDNjYTBjMTcxN2U3ZWM0MTgyNWQ0YTMzMTU", "commit": {"author": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-10T18:46:47Z"}, "committer": {"name": "Jeroen Vannevel", "email": "jer_vannevel@outlook.com", "date": "2022-01-14T01:32:10Z"}, "message": "test cases with more branches", "tree": {"sha": "c37de4e3db60f096637f4328747c98742a70f1f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37de4e3db60f096637f4328747c98742a70f1f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEEEzoFOOQgvfPzrDpfeO9fUvOMSb0FAmHg0poACgkQeO9fUvOM\nSb2KJQwAjqf2c0wYQ3KjmE54831vLd+9tUuYgI6lIBJmLfbTe9RuAN/cHeFH0pmP\nO3Bl4Y95e2kgM75iMbNLZSXyaPprz9NRjVxYUmuH66lm3YNr7pHtCko/Pr2+1srn\nWJGRvCQZ7xgIeb1lahBW7b2UrpJGPcZ5/Y3S493tPa6Mi0EJy7d/+84UvHWtPk9v\n9lpjRzThBMZSki7azSHlwXjBNZy98n8wqdEFFfXoKlYmxWzSgMcKOAIM1zHKqVXk\n5yYXldmd0Hoa+MMHVbgEV7wnswt4G3FRvPtNrWsuu9CJiVZBcnlpnW9mzFA7DUVV\nU/Qy5L6O/kLzGNAZRbwbvY+tiKJPhz8sPJiQ6wFkSKHLblmZnOHxKp65XQ61WGQ0\nQsbidusRiRcq9QtaNUbFLS5TQDBDb2wqIVnwreKMdgq9lKmI+bCDGPW4PDK+baHU\n6v+PT6QcLFOTg/1CMn3qYxhpKoPB0VtTkNcEURBjOZ+3JFWtz3rpguFMqHfqcpaM\nQbxWjzHH\n=L9bU\n-----END PGP SIGNATURE-----", "payload": "tree c37de4e3db60f096637f4328747c98742a70f1f7\nparent 130f11f27087fb722d3f5c578886e29fa2863272\nauthor Jeroen Vannevel <jer_vannevel@outlook.com> 1641840407 +0000\ncommitter Jeroen Vannevel <jer_vannevel@outlook.com> 1642123930 +0000\n\ntest cases with more branches\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315", "html_url": "https://github.com/rust-lang/rust/commit/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315/comments", "author": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Vannevelj", "id": 2777107, "node_id": "MDQ6VXNlcjI3NzcxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2777107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Vannevelj", "html_url": "https://github.com/Vannevelj", "followers_url": "https://api.github.com/users/Vannevelj/followers", "following_url": "https://api.github.com/users/Vannevelj/following{/other_user}", "gists_url": "https://api.github.com/users/Vannevelj/gists{/gist_id}", "starred_url": "https://api.github.com/users/Vannevelj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Vannevelj/subscriptions", "organizations_url": "https://api.github.com/users/Vannevelj/orgs", "repos_url": "https://api.github.com/users/Vannevelj/repos", "events_url": "https://api.github.com/users/Vannevelj/events{/privacy}", "received_events_url": "https://api.github.com/users/Vannevelj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "130f11f27087fb722d3f5c578886e29fa2863272", "url": "https://api.github.com/repos/rust-lang/rust/commits/130f11f27087fb722d3f5c578886e29fa2863272", "html_url": "https://github.com/rust-lang/rust/commit/130f11f27087fb722d3f5c578886e29fa2863272"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "8983aada34a47b0d2c7c6435c19183cc7937570d", "filename": "crates/ide_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5675e0cd409ab4d3ca0c1717e7ec41825d4a3315/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=5675e0cd409ab4d3ca0c1717e7ec41825d4a3315", "patch": "@@ -325,6 +325,64 @@ fn func() {\n         Ok(x) | Err(x) => x.1.classify(),\n     };\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn merge_match_arms_same_type_subsequent_arm_with_different_type_in_other() {\n+        check_assist(\n+            merge_match_arms,\n+            r#\"\n+enum MyEnum {\n+    OptionA(f32),\n+    OptionB(f32),\n+    OptionC(f64)\n+}\n+\n+fn func(e: MyEnum) {\n+    match e {\n+        MyEnum::OptionA(x) => $0x.classify(),\n+        MyEnum::OptionB(x) => x.classify(),\n+        MyEnum::OptionC(x) => x.classify(),\n+    };\n+}\n+\"#,\n+            r#\"\n+enum MyEnum {\n+    OptionA(f32),\n+    OptionB(f32),\n+    OptionC(f64)\n+}\n+\n+fn func(e: MyEnum) {\n+    match e {\n+        MyEnum::OptionA(x) | MyEnum::OptionB(x) => x.classify(),\n+        MyEnum::OptionC(x) => x.classify(),\n+    };\n+}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn merge_match_arms_same_type_skip_arm_with_different_type_in_between() {\n+        check_assist_not_applicable(\n+            merge_match_arms,\n+            r#\"\n+enum MyEnum {\n+    OptionA(f32),\n+    OptionB(f64),\n+    OptionC(f32)\n+}\n+\n+fn func(e: MyEnum) {\n+    match e {\n+        MyEnum::OptionA(x) => $0x.classify(),\n+        MyEnum::OptionB(x) => x.classify(),\n+        MyEnum::OptionC(x) => x.classify(),\n+    };\n+}\n \"#,\n         );\n     }"}]}