{"sha": "c29ee66b94fea672f459374942a4e311dc9cef5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyOWVlNjZiOTRmZWE2NzJmNDU5Mzc0OTQyYTRlMzExZGM5Y2VmNWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-04T22:20:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-04T22:20:14Z"}, "message": "make naming more consistent", "tree": {"sha": "a43ff33f380bf54747c6908da0eb7dd720cea971", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a43ff33f380bf54747c6908da0eb7dd720cea971"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c29ee66b94fea672f459374942a4e311dc9cef5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c29ee66b94fea672f459374942a4e311dc9cef5e", "html_url": "https://github.com/rust-lang/rust/commit/c29ee66b94fea672f459374942a4e311dc9cef5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c29ee66b94fea672f459374942a4e311dc9cef5e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63887ed4132dc362e4d5a271672f352c74154613", "url": "https://api.github.com/repos/rust-lang/rust/commits/63887ed4132dc362e4d5a271672f352c74154613", "html_url": "https://github.com/rust-lang/rust/commit/63887ed4132dc362e4d5a271672f352c74154613"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "8c69710e3595b71c27d77a378048258bfb5c8c48", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c29ee66b94fea672f459374942a4e311dc9cef5e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c29ee66b94fea672f459374942a4e311dc9cef5e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c29ee66b94fea672f459374942a4e311dc9cef5e", "patch": "@@ -287,7 +287,7 @@ fn fmt_ast(krate: &ast::Crate,\n // Formatting done on a char by char or line by line basis.\n // TODO(#209) warn on bad license\n // TODO(#20) other stuff for parity with make tidy\n-fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n+fn format_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     let mut truncate_todo = Vec::new();\n     let mut report = FormatReport { file_error_map: HashMap::new() };\n \n@@ -403,7 +403,7 @@ fn format_string(input: String, config: &Config) -> FileMap {\n     file_map\n }\n \n-fn format(file: &Path, config: &Config) -> FileMap {\n+fn format_file(file: &Path, config: &Config) -> FileMap {\n     let codemap = Rc::new(CodeMap::new());\n \n     let tty_handler = Handler::with_tty_emitter(ColorConfig::Auto,\n@@ -430,11 +430,11 @@ fn format(file: &Path, config: &Config) -> FileMap {\n \n pub fn format_input(input: Input, config: &Config) -> (FileMap, FormatReport) {\n     let mut file_map = match input {\n-        Input::File(ref file) => format(file, config),\n+        Input::File(ref file) => format_file(file, config),\n         Input::Text(text) => format_string(text, config),\n     };\n \n-    let report = fmt_lines(&mut file_map, config);\n+    let report = format_lines(&mut file_map, config);\n     (file_map, report)\n }\n "}]}