{"sha": "4ffe34cacee85685652d3fcea7e3874b5e23ed73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZmUzNGNhY2VlODU2ODU2NTJkM2ZjZWE3ZTM4NzRiNWUyM2VkNzM=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-24T21:33:21Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-24T22:06:56Z"}, "message": "Updating the comments in kind.rs to better reflect the current state of things.", "tree": {"sha": "dbfbf1210bfd080398a73c7a47171273863a70cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbfbf1210bfd080398a73c7a47171273863a70cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ffe34cacee85685652d3fcea7e3874b5e23ed73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ffe34cacee85685652d3fcea7e3874b5e23ed73", "html_url": "https://github.com/rust-lang/rust/commit/4ffe34cacee85685652d3fcea7e3874b5e23ed73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ffe34cacee85685652d3fcea7e3874b5e23ed73/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b6bfc96cba80dd59c244acbb27487e28ef8280f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b6bfc96cba80dd59c244acbb27487e28ef8280f", "html_url": "https://github.com/rust-lang/rust/commit/8b6bfc96cba80dd59c244acbb27487e28ef8280f"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "0b2df1f94c3ac3d31307d234e17e9c3d5551b6b5", "filename": "src/rustc/middle/kind.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4ffe34cacee85685652d3fcea7e3874b5e23ed73/src%2Frustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ffe34cacee85685652d3fcea7e3874b5e23ed73/src%2Frustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fkind.rs?ref=4ffe34cacee85685652d3fcea7e3874b5e23ed73", "patch": "@@ -9,15 +9,28 @@ import util::ppaux::{ty_to_str, tys_to_str};\n import syntax::print::pprust::expr_to_str;\n import freevars::freevar_entry;\n \n-// Kind analysis pass. There are three kinds:\n+// Kind analysis pass.\n //\n-//  sendable: scalar types, and unique types containing only sendable types\n-//  copyable: boxes, closures, and uniques containing copyable types\n-//  noncopyable: resources, or unique types containing resources\n+// There are several kinds defined by various operations. The most restrictive\n+// kind is noncopyable. The noncopyable kind can be extended with any number\n+// of the following attributes.\n+//\n+//  send: Things that can be sent on channels or included in spawned closures.\n+//  copy: Things that can be copied.\n+//  const: Things thare are deeply immutable. They are guaranteed never to\n+//    change, and can be safely shared without copying between tasks.\n+//\n+// Send includes scalar types, resources and unique types containing only\n+// sendable types.\n+//\n+// Copy includes boxes, closure and unique types containing copyable types.\n+//\n+// Const include scalar types, things without non-const fields, and pointers\n+// to const things.\n //\n // This pass ensures that type parameters are only instantiated with types\n // whose kinds are equal or less general than the way the type parameter was\n-// annotated (with the `send` or `copy` keyword).\n+// annotated (with the `send`, `copy` or `const` keyword).\n //\n // It also verifies that noncopyable kinds are not copied. Sendability is not\n // applied, since none of our language primitives send. Instead, the sending"}]}