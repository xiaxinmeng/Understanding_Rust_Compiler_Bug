{"sha": "4c18ee4abd572ad778aee89e2bee17e7d097f31e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMThlZTRhYmQ1NzJhZDc3OGFlZTg5ZTJiZWUxN2U3ZDA5N2YzMWU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-20T01:20:22Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:20:01Z"}, "message": "Update const generics tests\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "480064fb193fba7e274b1deca39b74ebd7962fd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/480064fb193fba7e274b1deca39b74ebd7962fd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c18ee4abd572ad778aee89e2bee17e7d097f31e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c18ee4abd572ad778aee89e2bee17e7d097f31e", "html_url": "https://github.com/rust-lang/rust/commit/4c18ee4abd572ad778aee89e2bee17e7d097f31e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c18ee4abd572ad778aee89e2bee17e7d097f31e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54b935b9b99a8cf276bc55906b9817f8cf44bfbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b935b9b99a8cf276bc55906b9817f8cf44bfbb", "html_url": "https://github.com/rust-lang/rust/commit/54b935b9b99a8cf276bc55906b9817f8cf44bfbb"}], "stats": {"total": 83, "additions": 30, "deletions": 53}, "files": [{"sha": "0883caa5c70756eb1026804264a42b91da6fd25d", "filename": "src/test/ui/const-generics/const-expression-parameter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -2,7 +2,6 @@\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n fn u32_identity<const X: u32>() -> u32 {\n-    //~^ ERROR const generics in any position are currently unsupported\n     5\n }\n \n@@ -16,6 +15,8 @@ fn foo_b() {\n \n fn foo_c() {\n     u32_identity::< -1 >(); // ok\n+    // FIXME(const_generics)\n+    //~^^ ERROR cannot apply unary operator `-` to type `u32` [E0600]\n }\n \n fn main() {"}, {"sha": "8871aa45788e1ff65db7270e4350d5df4088ccd9", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -1,11 +1,11 @@\n error: expected identifier, found `<-`\n-  --> $DIR/const-expression-parameter.rs:10:19\n+  --> $DIR/const-expression-parameter.rs:9:19\n    |\n LL |     u32_identity::<-1>(); //~ ERROR expected identifier, found `<-`\n    |                   ^^ expected identifier\n \n error: expected one of `,` or `>`, found `+`\n-  --> $DIR/const-expression-parameter.rs:14:22\n+  --> $DIR/const-expression-parameter.rs:13:22\n    |\n LL |     u32_identity::<1 + 2>(); //~ ERROR expected one of `,` or `>`, found `+`\n    |                      ^ expected one of `,` or `>` here\n@@ -16,11 +16,14 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n \n-error: const generics in any position are currently unsupported\n-  --> $DIR/const-expression-parameter.rs:4:23\n+error[E0600]: cannot apply unary operator `-` to type `u32`\n+  --> $DIR/const-expression-parameter.rs:17:21\n    |\n-LL | fn u32_identity<const X: u32>() -> u32 {\n-   |                       ^\n+LL |     u32_identity::< -1 >(); // ok\n+   |                     ^^ cannot apply unary operator `-`\n+   |\n+   = note: unsigned values cannot be negated\n \n error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0600`."}, {"sha": "f36bf3875c34999bf57b84c5faf530c8a20d28e8", "filename": "src/test/ui/const-generics/const-fn-with-const-param.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.rs?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -3,7 +3,6 @@\n \n const fn const_u32_identity<const X: u32>() -> u32 {\n     //~^ ERROR const parameters are not permitted in `const fn`\n-    //~^^ ERROR const generics in any position are currently unsupported\n     X\n }\n "}, {"sha": "94d2afa25b4f0f79d7fd461dc79f67bd3bc76fa3", "filename": "src/test/ui/const-generics/const-fn-with-const-param.stderr", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-fn-with-const-param.stderr?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -9,16 +9,9 @@ error: const parameters are not permitted in `const fn`\n    |\n LL | / const fn const_u32_identity<const X: u32>() -> u32 {\n LL | |     //~^ ERROR const parameters are not permitted in `const fn`\n-LL | |     //~^^ ERROR const generics in any position are currently unsupported\n LL | |     X\n LL | | }\n    | |_^\n \n-error: const generics in any position are currently unsupported\n-  --> $DIR/const-fn-with-const-param.rs:4:35\n-   |\n-LL | const fn const_u32_identity<const X: u32>() -> u32 {\n-   |                                   ^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "188b5dce31ea80e6211ae53b70d646c93ac73d6b", "filename": "src/test/ui/const-generics/const-param-before-other-params.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.rs?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -1,14 +1,12 @@\n #![feature(const_generics)]\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n-fn foo<const X: (), T>(_: T) {\n+fn foo<const X: (), T>(_: &T) {\n     //~^ ERROR type parameters must be declared prior to const parameters\n-    //~^^ ERROR const generics in any position are currently unsupported\n }\n \n fn bar<const X: (), 'a>(_: &'a ()) {\n     //~^ ERROR lifetime parameters must be declared prior to const parameters\n-    //~^^ ERROR const generics in any position are currently unsupported\n }\n \n fn main() {}"}, {"sha": "78f129e79ea24363b8123a97c23e0babd7772351", "filename": "src/test/ui/const-generics/const-param-before-other-params.stderr", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-before-other-params.stderr?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -7,26 +7,14 @@ LL | #![feature(const_generics)]\n error: type parameters must be declared prior to const parameters\n   --> $DIR/const-param-before-other-params.rs:4:21\n    |\n-LL | fn foo<const X: (), T>(_: T) {\n+LL | fn foo<const X: (), T>(_: &T) {\n    |       --------------^- help: reorder the parameters: lifetimes, then types, then consts: `<T, const X: ()>`\n \n error: lifetime parameters must be declared prior to const parameters\n-  --> $DIR/const-param-before-other-params.rs:9:21\n+  --> $DIR/const-param-before-other-params.rs:8:21\n    |\n LL | fn bar<const X: (), 'a>(_: &'a ()) {\n    |       --------------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, const X: ()>`\n \n-error: const generics in any position are currently unsupported\n-  --> $DIR/const-param-before-other-params.rs:4:14\n-   |\n-LL | fn foo<const X: (), T>(_: T) {\n-   |              ^\n-\n-error: const generics in any position are currently unsupported\n-  --> $DIR/const-param-before-other-params.rs:9:14\n-   |\n-LL | fn bar<const X: (), 'a>(_: &'a ()) {\n-   |              ^\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n "}, {"sha": "6534bcf5ce64c91bad8eb7c288860f9209e1f5fe", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.rs?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -2,7 +2,6 @@\n //~^ WARN the feature `const_generics` is incomplete and may cause the compiler to crash\n \n fn foo<const X: u32>() {\n-    //~^ ERROR const generics in any position are currently unsupported\n     fn bar() -> u32 {\n         X //~ ERROR can't use generic parameters from outer function\n     }"}, {"sha": "f40b527d716079d773f2a540321e32ccdb28216a", "filename": "src/test/ui/const-generics/const-param-from-outer-fn.stderr", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-from-outer-fn.stderr?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -5,22 +5,15 @@ LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n \n error[E0401]: can't use generic parameters from outer function\n-  --> $DIR/const-param-from-outer-fn.rs:7:9\n+  --> $DIR/const-param-from-outer-fn.rs:6:9\n    |\n LL | fn foo<const X: u32>() {\n    |              - const variable from outer function\n-LL |     //~^ ERROR const generics in any position are currently unsupported\n LL |     fn bar() -> u32 {\n    |        --- try adding a local generic parameter in this method instead\n LL |         X //~ ERROR can't use generic parameters from outer function\n    |         ^ use of generic parameter from outer function\n \n-error: const generics in any position are currently unsupported\n-  --> $DIR/const-param-from-outer-fn.rs:4:14\n-   |\n-LL | fn foo<const X: u32>() {\n-   |              ^\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0401`."}, {"sha": "164205dd75cbc6749cc2af478e3b9a396ee06c59", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.rs?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -4,5 +4,7 @@\n #![deny(non_upper_case_globals)]\n \n fn noop<const x: u32>() {\n-    //~^ ERROR const generics in any position are currently unsupported\n+    //~^ ERROR const parameter `x` should have an upper case name\n }\n+\n+fn main() {}"}, {"sha": "190798d202bead803980e7d480304278ee235d52", "filename": "src/test/ui/const-generics/const-parameter-uppercase-lint.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c18ee4abd572ad778aee89e2bee17e7d097f31e/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-parameter-uppercase-lint.stderr?ref=4c18ee4abd572ad778aee89e2bee17e7d097f31e", "patch": "@@ -4,16 +4,17 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n \n-error[E0601]: `main` function not found in crate `const_parameter_uppercase_lint`\n-   |\n-   = note: consider adding a `main` function to `$DIR/const-parameter-uppercase-lint.rs`\n-\n-error: const generics in any position are currently unsupported\n+error: const parameter `x` should have an upper case name\n   --> $DIR/const-parameter-uppercase-lint.rs:6:15\n    |\n LL | fn noop<const x: u32>() {\n-   |               ^\n+   |               ^ help: convert the identifier to upper case: `X`\n+   |\n+note: lint level defined here\n+  --> $DIR/const-parameter-uppercase-lint.rs:4:9\n+   |\n+LL | #![deny(non_upper_case_globals)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0601`."}]}