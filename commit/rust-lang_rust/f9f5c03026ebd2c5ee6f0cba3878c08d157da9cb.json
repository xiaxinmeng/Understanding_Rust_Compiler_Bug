{"sha": "f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZjVjMDMwMjZlYmQyYzVlZTZmMGNiYTM4NzhjMDhkMTU3ZGE5Y2I=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-20T10:20:10Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-11-20T11:28:32Z"}, "message": "Add comment on why `RefCell::unwrap` is safe", "tree": {"sha": "4980623531f02bcd321a4b5350548c7de8373fbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4980623531f02bcd321a4b5350548c7de8373fbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "html_url": "https://github.com/rust-lang/rust/commit/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd5ce5ae2f254cc42763518909f6e7c486d9502a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ce5ae2f254cc42763518909f6e7c486d9502a", "html_url": "https://github.com/rust-lang/rust/commit/dd5ce5ae2f254cc42763518909f6e7c486d9502a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c4d0bec83eaa76661e7386c0db00a98602ff25ec", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "patch": "@@ -258,6 +258,9 @@ impl<T> RefCell<T> {\n     /// Consumes the `RefCell`, returning the wrapped value.\n     #[unstable = \"may be renamed, depending on global conventions\"]\n     pub fn unwrap(self) -> T {\n+        // Since this function takes `self` (the `RefCell`) by value, the\n+        // compiler statically verifies that it is not currently borrowed.\n+        // Therefore the following assertion is just a `debug_assert!`.\n         debug_assert!(self.borrow.get() == UNUSED);\n         unsafe{self.value.unwrap()}\n     }"}]}