{"sha": "02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZTgwNGJiYThlMmU4MmU2ZTIxMTJjZWIyOTdmZmIyMzdiNDJlYTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-17T22:57:37Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-17T22:58:21Z"}, "message": "test: Fix some broken test cases", "tree": {"sha": "b57688f192299c0a543641d2f4bfe1d8dfe9429b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b57688f192299c0a543641d2f4bfe1d8dfe9429b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "html_url": "https://github.com/rust-lang/rust/commit/02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe9294ef71a36a7d63a1d9fff07cf5601864869a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe9294ef71a36a7d63a1d9fff07cf5601864869a", "html_url": "https://github.com/rust-lang/rust/commit/fe9294ef71a36a7d63a1d9fff07cf5601864869a"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "ca72181b5fbdb67c64897dc2564b6648d267fc48", "filename": "src/test/run-pass/borrowck-preserve-box-in-arm-not-taken.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-preserve-box-in-arm-not-taken.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -13,7 +13,7 @@\n fn main() {\n     let x: @mut @Option<~int> = @mut @None;\n     match x {\n-      @@Some(y) => {\n+      @@Some(ref y) => {\n         // here, the refcount of `*x` is bumped so\n         // `y` remains valid even if `*x` is modified.\n         *x = @None;\n@@ -24,4 +24,4 @@ fn main() {\n         // works.\n       }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "b7f5ffb896dd2e2ee2831f2e726c71f190747bd6", "filename": "src/test/run-pass/boxed-trait-with-vstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fboxed-trait-with-vstore.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n trait Foo {\n-    fn foo() {}\n+    fn foo();\n }\n \n impl int : Foo {"}, {"sha": "5d3dc42c41e356cb69e09042722283ca53a4956b", "filename": "src/test/run-pass/default-method-simple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait Foo {\n     fn f() {\n         io::println(\"Hello!\");"}, {"sha": "632fe348d8d943472a5b3db66e1919e001ed1a69", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -220,7 +220,7 @@ mod pingpong {\n \n     fn liberate_ping(-p: ping) -> pipes::send_packet<pong> unsafe {\n         let addr : *pipes::send_packet<pong> = match &p {\n-          &ping(x) => { cast::transmute(ptr::addr_of(&x)) }\n+          &ping(ref x) => { cast::transmute(ptr::addr_of(x)) }\n         };\n         let liberated_value = move *addr;\n         cast::forget(move p);\n@@ -229,7 +229,7 @@ mod pingpong {\n \n     fn liberate_pong(-p: pong) -> pipes::send_packet<ping> unsafe {\n         let addr : *pipes::send_packet<ping> = match &p {\n-          &pong(x) => { cast::transmute(ptr::addr_of(&x)) }\n+          &pong(ref x) => { cast::transmute(ptr::addr_of(x)) }\n         };\n         let liberated_value = move *addr;\n         cast::forget(move p);"}, {"sha": "d4b343a88b771144cd51a5a9d4c27f7a4c866bde", "filename": "src/test/run-pass/issue-3683.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fissue-3683.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Fissue-3683.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3683.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait Foo {\n     fn a() -> int;\n     fn b() -> int {"}, {"sha": "adf07818e0c8adfd25e8ff2b122330941d15dcaf", "filename": "src/test/run-pass/trait-default-method-bound-subst3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst3.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait A {\n     fn g<T>(x: T, y: T) -> (T, T) { (move x, move y) }\n }"}, {"sha": "0b34691ff6eda75902b8d8e21ae6067e712086cc", "filename": "src/test/run-pass/trait-default-method-bound-subst4.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound-subst4.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait A<T> {\n     fn g(x: uint) -> uint { move x }\n }"}, {"sha": "28e15e094965b6bc8f455ee35221ef1cf7132494", "filename": "src/test/run-pass/trait-default-method-bound.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-default-method-bound.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait A {\n     fn g() -> int { 10 }\n }"}, {"sha": "9e49b249c180045606a796aa885d2d2ff9e4b112", "filename": "src/test/run-pass/traits-default-method-macro.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftraits-default-method-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftraits-default-method-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits-default-method-macro.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait Foo {\n     fn bar() -> ~str {\n         fmt!(\"test\")\n@@ -24,4 +26,4 @@ impl Baz: Foo {\n fn main() {\n     let q = Quux;\n     assert q.bar() == ~\"test\";\n-}\n\\ No newline at end of file\n+}"}, {"sha": "9dbb26af4418838fcfeb006e6711471b952fc74d", "filename": "src/test/run-pass/traits-default-method-trivial.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftraits-default-method-trivial.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02e804bba8e2e82e6e2112ceb297ffb237b42ea6/src%2Ftest%2Frun-pass%2Ftraits-default-method-trivial.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits-default-method-trivial.rs?ref=02e804bba8e2e82e6e2112ceb297ffb237b42ea6", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[allow(default_methods)];\n+\n trait Cat {\n     fn meow() -> bool;\n     fn scratch() -> bool;"}]}