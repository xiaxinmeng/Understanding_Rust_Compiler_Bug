{"sha": "3be40b22c83491e4a4d34e2ad06aa81b804b9fad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZTQwYjIyYzgzNDkxZTRhNGQzNGUyYWQwNmFhODFiODA0YjlmYWQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-12T19:20:17Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-13T12:09:10Z"}, "message": "Fix AtomicPtr::from_mut align check: Avoid generic arg in const expr.\n\nSee #76200.", "tree": {"sha": "5eafb0d1e29963034392f7aedceaf4bb4349ed3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eafb0d1e29963034392f7aedceaf4bb4349ed3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3be40b22c83491e4a4d34e2ad06aa81b804b9fad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3be40b22c83491e4a4d34e2ad06aa81b804b9fad", "html_url": "https://github.com/rust-lang/rust/commit/3be40b22c83491e4a4d34e2ad06aa81b804b9fad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3be40b22c83491e4a4d34e2ad06aa81b804b9fad/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "458aaba08467dc6b8d04b79f955a46be779d94f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/458aaba08467dc6b8d04b79f955a46be779d94f1", "html_url": "https://github.com/rust-lang/rust/commit/458aaba08467dc6b8d04b79f955a46be779d94f1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "920a82f5af481ca7e21bc139bd794d08c7e55e0e", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3be40b22c83491e4a4d34e2ad06aa81b804b9fad/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3be40b22c83491e4a4d34e2ad06aa81b804b9fad/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=3be40b22c83491e4a4d34e2ad06aa81b804b9fad", "patch": "@@ -858,7 +858,7 @@ impl<T> AtomicPtr<T> {\n     #[inline]\n     #[unstable(feature = \"atomic_from_mut\", issue = \"76314\")]\n     pub fn from_mut(v: &mut *mut T) -> &Self {\n-        let [] = [(); align_of::<Self>() - align_of::<*mut T>()];\n+        let [] = [(); align_of::<AtomicPtr<()>>() - align_of::<*mut ()>()];\n         // SAFETY:\n         //  - the mutable reference guarantees unique ownership.\n         //  - the alignment of `*mut T` and `Self` is the same on all platforms"}]}