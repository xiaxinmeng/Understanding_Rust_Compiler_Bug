{"sha": "af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMWU2NjhmMzNkNWM4YjRkOTNlMzViMzFiZThlNzhmZWMxOGZjZjQ=", "commit": {"author": {"name": "Benedikt Terhechte", "email": "terhechte@gmail.com", "date": "2019-08-11T18:31:01Z"}, "committer": {"name": "Benedikt Terhechte", "email": "terhechte@gmail.com", "date": "2019-08-11T18:31:01Z"}, "message": "Add initial files for iOS catalyst / macabi support\n\nThis is a first attempt of adding support for the new Apple Catalyst ABI (i.e. running iOS apps on macOS). Currently, `rustc` supports the iOS and iOS simulator targets for iOS:\n- iOS: ARM cpu, iOS SDK, linked agains the iOS ABI\n- Simulator: X86_64 cpu, iOS SDK, linked against the iOS ABI\n\nApple Catalyst will add an additional target:\n- Macabi: X86_64 CPU, iOS SDK, linked again the macOS ABI.\n\nNote, it the actual SDK is the also the macOS 10.15 SDK, but the symbols are the iOS SDK symbols as they were added to macOS with 10.15.\n\nThis commits adds the files for this new target triple.", "tree": {"sha": "a1ebf89006e86e8ce8a968255b43146b7bddd5c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1ebf89006e86e8ce8a968255b43146b7bddd5c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "html_url": "https://github.com/rust-lang/rust/commit/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/comments", "author": {"login": "terhechte", "id": 132234, "node_id": "MDQ6VXNlcjEzMjIzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/132234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terhechte", "html_url": "https://github.com/terhechte", "followers_url": "https://api.github.com/users/terhechte/followers", "following_url": "https://api.github.com/users/terhechte/following{/other_user}", "gists_url": "https://api.github.com/users/terhechte/gists{/gist_id}", "starred_url": "https://api.github.com/users/terhechte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terhechte/subscriptions", "organizations_url": "https://api.github.com/users/terhechte/orgs", "repos_url": "https://api.github.com/users/terhechte/repos", "events_url": "https://api.github.com/users/terhechte/events{/privacy}", "received_events_url": "https://api.github.com/users/terhechte/received_events", "type": "User", "site_admin": false}, "committer": {"login": "terhechte", "id": 132234, "node_id": "MDQ6VXNlcjEzMjIzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/132234?v=4", "gravatar_id": "", "url": "https://api.github.com/users/terhechte", "html_url": "https://github.com/terhechte", "followers_url": "https://api.github.com/users/terhechte/followers", "following_url": "https://api.github.com/users/terhechte/following{/other_user}", "gists_url": "https://api.github.com/users/terhechte/gists{/gist_id}", "starred_url": "https://api.github.com/users/terhechte/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/terhechte/subscriptions", "organizations_url": "https://api.github.com/users/terhechte/orgs", "repos_url": "https://api.github.com/users/terhechte/repos", "events_url": "https://api.github.com/users/terhechte/events{/privacy}", "received_events_url": "https://api.github.com/users/terhechte/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b78e10ac1454d2d4190c575f6ece03f484ac398", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b78e10ac1454d2d4190c575f6ece03f484ac398", "html_url": "https://github.com/rust-lang/rust/commit/2b78e10ac1454d2d4190c575f6ece03f484ac398"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "6d3900c0b203f372fe64112322a29d73d7cca658", "filename": "src/librustc_target/spec/apple_ios_base.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_ios_base.rs?ref=af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "patch": "@@ -13,7 +13,8 @@ pub enum Arch {\n     Armv7s,\n     Arm64,\n     I386,\n-    X86_64\n+    X86_64,\n+    X86_64_macabi,\n }\n \n impl Arch {\n@@ -23,7 +24,8 @@ impl Arch {\n             Armv7s => \"armv7s\",\n             Arm64 => \"arm64\",\n             I386 => \"i386\",\n-            X86_64 => \"x86_64\"\n+            X86_64 => \"x86_64\",\n+            X86_64_macabi => \"x86_64\"\n         }\n     }\n }\n@@ -67,7 +69,8 @@ pub fn get_sdk_root(sdk_name: &str) -> Result<String, String> {\n fn build_pre_link_args(arch: Arch) -> Result<LinkArgs, String> {\n     let sdk_name = match arch {\n         Armv7 | Armv7s | Arm64 => \"iphoneos\",\n-        I386 | X86_64 => \"iphonesimulator\"\n+        I386 | X86_64 => \"iphonesimulator\",\n+        X86_64_macabi => \"macosx10.15\",\n     };\n \n     let arch_name = arch.to_string();\n@@ -93,6 +96,7 @@ fn target_cpu(arch: Arch) -> String {\n         Arm64 => \"cyclone\",\n         I386 => \"yonah\",\n         X86_64 => \"core2\",\n+        X86_64_macabi => \"core2\",\n     }.to_string()\n }\n "}, {"sha": "bb68f2a833c293d82f2e6b6f58bdad36578eb409", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "patch": "@@ -425,6 +425,7 @@ supported_targets! {\n     (\"aarch64-apple-ios\", aarch64_apple_ios),\n     (\"armv7-apple-ios\", armv7_apple_ios),\n     (\"armv7s-apple-ios\", armv7s_apple_ios),\n+    (\"x86_64-apple-ios-macabi\", x86_64_apple_ios_macabi),\n \n     (\"armebv7r-none-eabi\", armebv7r_none_eabi),\n     (\"armebv7r-none-eabihf\", armebv7r_none_eabihf),"}, {"sha": "2ce77282e90222ce27903e167cab919e513a059f", "filename": "src/librustc_target/spec/x86_64_apple_ios_macabi.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios_macabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af1e668f33d5c8b4d93e35b31be8e78fec18fcf4/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios_macabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fx86_64_apple_ios_macabi.rs?ref=af1e668f33d5c8b4d93e35b31be8e78fec18fcf4", "patch": "@@ -0,0 +1,23 @@\n+use crate::spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+use super::apple_ios_base::{opts, Arch};\n+\n+pub fn target() -> TargetResult {\n+    let base = opts(Arch::X86_64_macabi)?;\n+    Ok(Target {\n+        llvm_target: \"x86_64-apple-ios13.0-macabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"64\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:o-i64:64-f80:128-n8:16:32:64-S128\".to_string(),\n+        arch: \"x86_64\".to_string(),\n+        target_os: \"ios\".to_string(),\n+        target_env: String::new(),\n+        target_vendor: \"apple\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+        options: TargetOptions {\n+            max_atomic_width: Some(64),\n+            stack_probes: true,\n+            .. base\n+        }\n+    })\n+}"}]}