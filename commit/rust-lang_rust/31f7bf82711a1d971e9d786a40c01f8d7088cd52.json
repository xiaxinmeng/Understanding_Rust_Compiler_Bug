{"sha": "31f7bf82711a1d971e9d786a40c01f8d7088cd52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZjdiZjgyNzExYTFkOTcxZTlkNzg2YTQwYzAxZjhkNzA4OGNkNTI=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-07-27T23:59:46Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-08-19T19:02:39Z"}, "message": "Add a comment about `OptionFileHandle`.", "tree": {"sha": "1c7cbbead5d3574f3b526728f3007833e858c62b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c7cbbead5d3574f3b526728f3007833e858c62b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31f7bf82711a1d971e9d786a40c01f8d7088cd52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31f7bf82711a1d971e9d786a40c01f8d7088cd52", "html_url": "https://github.com/rust-lang/rust/commit/31f7bf82711a1d971e9d786a40c01f8d7088cd52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31f7bf82711a1d971e9d786a40c01f8d7088cd52/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b4dbdbf47a73de688df06d50dada7ba80df9458", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b4dbdbf47a73de688df06d50dada7ba80df9458", "html_url": "https://github.com/rust-lang/rust/commit/6b4dbdbf47a73de688df06d50dada7ba80df9458"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "2d561ad476a2a119970448e2a0f472c9d5126ef7", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31f7bf82711a1d971e9d786a40c01f8d7088cd52/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31f7bf82711a1d971e9d786a40c01f8d7088cd52/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=31f7bf82711a1d971e9d786a40c01f8d7088cd52", "patch": "@@ -58,6 +58,10 @@ pub struct OwnedHandle {\n /// where `INVALID_HANDLE_VALUE` is used as the sentry value, and null values\n /// are not used at all, such as in the return value of `CreateFileW`.\n ///\n+/// The main thing you can do with an `OptionFileHandle` is to convert it into\n+/// an `OwnedHandle` using its [`TryFrom`] implementation, and this conversion\n+/// takes care of the check for `INVALID_HANDLE_VALUE`.\n+///\n /// If this holds an owned handle, it closes the handle on drop.\n ///\n /// This uses `repr(transparent)` and has the representation of a host handle,"}]}