{"sha": "31b2963da98595a54a7233720f526c1096819109", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYjI5NjNkYTk4NTk1YTU0YTcyMzM3MjBmNTI2YzEwOTY4MTkxMDk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-04-23T15:13:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-23T15:13:25Z"}, "message": "Merge pull request #1163 from mominul/target_cpu\n\nSupport -Ctarget-cpu", "tree": {"sha": "53dc781be5db82663b758147f33bc6f31bd4b0de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53dc781be5db82663b758147f33bc6f31bd4b0de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31b2963da98595a54a7233720f526c1096819109", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgguQVCRBK7hj4Ov3rIwAAUO4IAACdYRbscVRfbFLCh5hEplzB\nQKWPkSu7gq06M1F4HQp8e2WYYiwXJHSADm4C99zT4if8v59q9i7tg/JYBhDJPXLd\nlehW6HhD2+bM45YhpnUQTYCPBXQKUT528z+/eL2dmTmREWBODXD5A0rUNbkbraMd\ny/sKa4I3ZkhvEpwo0VRJmbydRr0z3UEHtEYw7dC5KJxrE1pZztgOzxbhegvgKNP/\nRhB7XyN+H82UpOnFl/l/YcYABzoE2JjZOdDSO/N8RMkskklNR8CzUicXxZkSViZ/\ntx07wtn5c+QPiHboSxrm5tLc6ZR1gunzXXsY3o8X/iv8Kayasc54htKL83OlPUo=\n=2+id\n-----END PGP SIGNATURE-----\n", "payload": "tree 53dc781be5db82663b758147f33bc6f31bd4b0de\nparent cdc0aa188e72ee100bd61943cf7c81ac28be9a81\nparent c4f50fb06ff22e2f566e7eb8dc6b7efc2d91811a\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1619190805 +0200\ncommitter GitHub <noreply@github.com> 1619190805 +0200\n\nMerge pull request #1163 from mominul/target_cpu\n\nSupport -Ctarget-cpu"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31b2963da98595a54a7233720f526c1096819109", "html_url": "https://github.com/rust-lang/rust/commit/31b2963da98595a54a7233720f526c1096819109", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31b2963da98595a54a7233720f526c1096819109/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdc0aa188e72ee100bd61943cf7c81ac28be9a81", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdc0aa188e72ee100bd61943cf7c81ac28be9a81", "html_url": "https://github.com/rust-lang/rust/commit/cdc0aa188e72ee100bd61943cf7c81ac28be9a81"}, {"sha": "c4f50fb06ff22e2f566e7eb8dc6b7efc2d91811a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4f50fb06ff22e2f566e7eb8dc6b7efc2d91811a", "html_url": "https://github.com/rust-lang/rust/commit/c4f50fb06ff22e2f566e7eb8dc6b7efc2d91811a"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "e6792def56796c2cc1ba0e328c73bb251a3404be", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/31b2963da98595a54a7233720f526c1096819109/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/31b2963da98595a54a7233720f526c1096819109/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=31b2963da98595a54a7233720f526c1096819109", "patch": "@@ -306,6 +306,7 @@ dependencies = [\n  \"cranelift-frontend\",\n  \"cranelift-jit\",\n  \"cranelift-module\",\n+ \"cranelift-native\",\n  \"cranelift-object\",\n  \"gimli\",\n  \"indexmap\","}, {"sha": "2789207c65581ab380463f0ff114ddeb7a601159", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/31b2963da98595a54a7233720f526c1096819109/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/31b2963da98595a54a7233720f526c1096819109/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=31b2963da98595a54a7233720f526c1096819109", "patch": "@@ -12,6 +12,7 @@ crate-type = [\"dylib\"]\n cranelift-codegen = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\", features = [\"unwind\"] }\n cranelift-frontend = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n cranelift-module = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n+cranelift-native = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n cranelift-jit = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\", optional = true }\n cranelift-object = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n target-lexicon = \"0.12.0\"\n@@ -28,6 +29,7 @@ smallvec = \"1.6.1\"\n #cranelift-codegen = { path = \"../wasmtime/cranelift/codegen\" }\n #cranelift-frontend = { path = \"../wasmtime/cranelift/frontend\" }\n #cranelift-module = { path = \"../wasmtime/cranelift/module\" }\n+#cranelift-native = { path = ../wasmtime/cranelift/native\" }\n #cranelift-jit = { path = \"../wasmtime/cranelift/jit\" }\n #cranelift-object = { path = \"../wasmtime/cranelift/object\" }\n "}, {"sha": "32f403957025a649b8b87763ce0ae0a4377bd6c3", "filename": "src/lib.rs", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/31b2963da98595a54a7233720f526c1096819109/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31b2963da98595a54a7233720f526c1096819109/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=31b2963da98595a54a7233720f526c1096819109", "patch": "@@ -272,10 +272,28 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n     let flags = settings::Flags::new(flags_builder);\n \n     let variant = cranelift_codegen::isa::BackendVariant::MachInst;\n-    let mut isa_builder = cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n-    // Don't use \"haswell\", as it implies `has_lzcnt`.macOS CI is still at Ivy Bridge EP, so `lzcnt`\n-    // is interpreted as `bsr`.\n-    isa_builder.enable(\"nehalem\").unwrap();\n+\n+    let isa_builder = match sess.opts.cg.target_cpu.as_deref() {\n+        Some(\"native\") => {\n+            let builder = cranelift_native::builder_with_options(variant, true).unwrap();\n+            builder\n+        }\n+        Some(value) => {\n+            let mut builder = cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n+            if let Err(_) = builder.enable(value) {\n+                sess.fatal(\"The specified target cpu isn't currently supported by Cranelift.\");\n+            }\n+            builder\n+        }\n+        None => {\n+            let mut builder = cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n+            // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n+            // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n+            builder.enable(\"nehalem\").unwrap();\n+            builder\n+        }\n+    };\n+    \n     isa_builder.finish(flags)\n }\n "}]}