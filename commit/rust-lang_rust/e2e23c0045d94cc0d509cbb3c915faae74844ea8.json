{"sha": "e2e23c0045d94cc0d509cbb3c915faae74844ea8", "node_id": "C_kwDOAAsO6NoAKGUyZTIzYzAwNDVkOTRjYzBkNTA5Y2JiM2M5MTVmYWFlNzQ4NDRlYTg", "commit": {"author": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2023-02-09T21:41:45Z"}, "committer": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2023-02-09T21:41:45Z"}, "message": "Add docs and update tests", "tree": {"sha": "dd18113e9c8ab8c589c4744bb7062207248bbac0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd18113e9c8ab8c589c4744bb7062207248bbac0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2e23c0045d94cc0d509cbb3c915faae74844ea8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCY+VomQAKCRAnUl7150IK\nUAcDAP4xSUbcAEy2vVlWgIgKXVi9YUIeAyovMPEF3KS4lkzgjgD/cBKO6b6RASGv\nrkQ+pPRwPJ+dFQrs4TTrPDcsHE4O9g8=\n=Mcsu\n-----END PGP SIGNATURE-----", "payload": "tree dd18113e9c8ab8c589c4744bb7062207248bbac0\nparent 8eac9e359ec84a7621ee009aadeac91bf22c75b2\nauthor Christian Poveda <git@pvdrz.com> 1675978905 -0500\ncommitter Christian Poveda <git@pvdrz.com> 1675978905 -0500\n\nAdd docs and update tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2e23c0045d94cc0d509cbb3c915faae74844ea8", "html_url": "https://github.com/rust-lang/rust/commit/e2e23c0045d94cc0d509cbb3c915faae74844ea8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2e23c0045d94cc0d509cbb3c915faae74844ea8/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eac9e359ec84a7621ee009aadeac91bf22c75b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eac9e359ec84a7621ee009aadeac91bf22c75b2", "html_url": "https://github.com/rust-lang/rust/commit/8eac9e359ec84a7621ee009aadeac91bf22c75b2"}], "stats": {"total": 87, "additions": 66, "deletions": 21}, "files": [{"sha": "2d04118c69412f5b6cff4d69aba1261c394f3898", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -665,13 +665,13 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         ))\n     });\n     let doc_valid_idents = conf.doc_valid_idents.iter().cloned().collect::<FxHashSet<_>>();\n-    let only_check_missing_docs_in_crate_items = conf.only_check_missing_docs_in_crate_items;\n+    let missing_docs_in_crate_items = conf.missing_docs_in_crate_items;\n     store.register_late_pass(move |_| Box::new(doc::DocMarkdown::new(doc_valid_idents.clone())));\n     store.register_late_pass(|_| Box::new(neg_multiply::NegMultiply));\n     store.register_late_pass(|_| Box::new(mem_forget::MemForget));\n     store.register_late_pass(|_| Box::new(let_if_seq::LetIfSeq));\n     store.register_late_pass(|_| Box::new(mixed_read_write_in_expression::EvalOrderDependence));\n-    store.register_late_pass(move |_| Box::new(missing_doc::MissingDoc::new(only_check_missing_docs_in_crate_items)));\n+    store.register_late_pass(move |_| Box::new(missing_doc::MissingDoc::new(missing_docs_in_crate_items)));\n     store.register_late_pass(|_| Box::new(missing_inline::MissingInline));\n     store.register_late_pass(move |_| Box::new(exhaustive_items::ExhaustiveItems));\n     store.register_late_pass(|_| Box::new(match_result_ok::MatchResultOk));"}, {"sha": "a5d8a500cca7968e5b03a9b694b60a69638f2b49", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -8,6 +8,7 @@\n use clippy_utils::attrs::is_doc_hidden;\n use clippy_utils::diagnostics::span_lint;\n use clippy_utils::is_from_proc_macro;\n+use hir::def_id::LocalDefId;\n use if_chain::if_chain;\n use rustc_ast::ast::{self, MetaItem, MetaItemKind};\n use rustc_hir as hir;\n@@ -35,7 +36,7 @@ declare_clippy_lint! {\n }\n \n pub struct MissingDoc {\n-    /// FIXME: docs\n+    /// Whether to only check for missing docs in `pub(crate)` items.\n     crate_items_only: bool,\n     /// Stack of whether #[doc(hidden)] is set\n     /// at each level which has lint attributes.\n@@ -79,6 +80,7 @@ impl MissingDoc {\n     fn check_missing_docs_attrs(\n         &self,\n         cx: &LateContext<'_>,\n+        def_id: LocalDefId,\n         attrs: &[ast::Attribute],\n         sp: Span,\n         article: &'static str,\n@@ -99,6 +101,13 @@ impl MissingDoc {\n             return;\n         }\n \n+        if self.crate_items_only && def_id != CRATE_DEF_ID {\n+            let vis = cx.tcx.visibility(def_id);\n+            if vis != Visibility::Public && vis != Visibility::Restricted(CRATE_DEF_ID.into()) {\n+                return;\n+            }\n+        }\n+\n         let has_doc = attrs\n             .iter()\n             .any(|a| a.doc_str().is_some() || Self::has_include(a.meta()));\n@@ -127,17 +136,10 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n \n     fn check_crate(&mut self, cx: &LateContext<'tcx>) {\n         let attrs = cx.tcx.hir().attrs(hir::CRATE_HIR_ID);\n-        self.check_missing_docs_attrs(cx, attrs, cx.tcx.def_span(CRATE_DEF_ID), \"the\", \"crate\");\n+        self.check_missing_docs_attrs(cx, CRATE_DEF_ID, attrs, cx.tcx.def_span(CRATE_DEF_ID), \"the\", \"crate\");\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx hir::Item<'_>) {\n-        if self.crate_items_only {\n-            let vis = cx.tcx.visibility(it.owner_id.to_def_id());\n-            if vis != Visibility::Public && vis != Visibility::Restricted(CRATE_DEF_ID.into()) {\n-                return;\n-            }\n-        }\n-\n         match it.kind {\n             hir::ItemKind::Fn(..) => {\n                 // ignore main()\n@@ -170,7 +172,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n \n         let attrs = cx.tcx.hir().attrs(it.hir_id());\n         if !is_from_proc_macro(cx, it) {\n-            self.check_missing_docs_attrs(cx, attrs, it.span, article, desc);\n+            self.check_missing_docs_attrs(cx, it.owner_id.def_id, attrs, it.span, article, desc);\n         }\n     }\n \n@@ -179,7 +181,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n \n         let attrs = cx.tcx.hir().attrs(trait_item.hir_id());\n         if !is_from_proc_macro(cx, trait_item) {\n-            self.check_missing_docs_attrs(cx, attrs, trait_item.span, article, desc);\n+            self.check_missing_docs_attrs(cx, trait_item.owner_id.def_id, attrs, trait_item.span, article, desc);\n         }\n     }\n \n@@ -196,23 +198,23 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n         let (article, desc) = cx.tcx.article_and_description(impl_item.owner_id.to_def_id());\n         let attrs = cx.tcx.hir().attrs(impl_item.hir_id());\n         if !is_from_proc_macro(cx, impl_item) {\n-            self.check_missing_docs_attrs(cx, attrs, impl_item.span, article, desc);\n+            self.check_missing_docs_attrs(cx, impl_item.owner_id.def_id, attrs, impl_item.span, article, desc);\n         }\n     }\n \n     fn check_field_def(&mut self, cx: &LateContext<'tcx>, sf: &'tcx hir::FieldDef<'_>) {\n         if !sf.is_positional() {\n             let attrs = cx.tcx.hir().attrs(sf.hir_id);\n             if !is_from_proc_macro(cx, sf) {\n-                self.check_missing_docs_attrs(cx, attrs, sf.span, \"a\", \"struct field\");\n+                self.check_missing_docs_attrs(cx, sf.def_id, attrs, sf.span, \"a\", \"struct field\");\n             }\n         }\n     }\n \n     fn check_variant(&mut self, cx: &LateContext<'tcx>, v: &'tcx hir::Variant<'_>) {\n         let attrs = cx.tcx.hir().attrs(v.hir_id);\n         if !is_from_proc_macro(cx, v) {\n-            self.check_missing_docs_attrs(cx, attrs, v.span, \"a\", \"variant\");\n+            self.check_missing_docs_attrs(cx, v.def_id, attrs, v.span, \"a\", \"variant\");\n         }\n     }\n }"}, {"sha": "86a17a40930f1332718c4c73a9cfad67e9f27f94", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -456,8 +456,8 @@ define_Conf! {\n     (suppress_restriction_lint_in_const: bool = false),\n     /// Lint: MISSING_DOCS_IN_PRIVATE_ITEMS.\n     ///\n-    /// FIXME: docs\n-    (only_check_missing_docs_in_crate_items: bool = false),\n+    /// Whether to **only** check for missing docmuentation in `pub(crate)` items.\n+    (missing_docs_in_crate_items: bool = false),\n }\n \n /// Search for the configuration file."}, {"sha": "ec210a987830588e5bd6fb52b5bb5b50a307fc4a", "filename": "tests/ui-toml/pub_crate_missing_docs/clippy.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fclippy.toml?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -1 +1 @@\n-only-check-missing-docs-in-crate-items = true\n+missing-docs-in-crate-items = true"}, {"sha": "f2edb737d59cc9bc80cb1a8455cc16021f97e43e", "filename": "tests/ui-toml/pub_crate_missing_docs/pub_crate_missing_doc.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.rs?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -24,6 +24,25 @@ mod my_mod {\n         pub(super) fn sub_super_with_docs() {}\n         pub(super) fn sub_super_no_docs() {}\n     }\n+\n+    /// some docs\n+    pub(crate) struct CrateStructWithDocs {\n+        /// some docs\n+        pub(crate) crate_field_with_docs: (),\n+        pub(crate) crate_field_no_docs: (),\n+        /// some docs\n+        priv_field_with_docs: (),\n+        priv_field_no_docs: (),\n+    }\n+\n+    pub(crate) struct CrateStructNoDocs {\n+        /// some docs\n+        pub(crate) crate_field_with_docs: (),\n+        pub(crate) crate_field_no_docs: (),\n+        /// some docs\n+        priv_field_with_docs: (),\n+        priv_field_no_docs: (),\n+    }\n }\n \n fn main() {"}, {"sha": "89927abd87bfedee904e42a9869a16ad56473190", "filename": "tests/ui-toml/pub_crate_missing_docs/pub_crate_missing_doc.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stderr?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -18,5 +18,29 @@ error: missing documentation for a function\n LL |         pub(crate) fn sub_crate_no_docs() {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 3 previous errors\n+error: missing documentation for a struct field\n+  --> $DIR/pub_crate_missing_doc.rs:32:9\n+   |\n+LL |         pub(crate) crate_field_no_docs: (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: missing documentation for a struct\n+  --> $DIR/pub_crate_missing_doc.rs:38:5\n+   |\n+LL | /     pub(crate) struct CrateStructNoDocs {\n+LL | |         /// some docs\n+LL | |         pub(crate) crate_field_with_docs: (),\n+LL | |         pub(crate) crate_field_no_docs: (),\n+...  |\n+LL | |         priv_field_no_docs: (),\n+LL | |     }\n+   | |_____^\n+\n+error: missing documentation for a struct field\n+  --> $DIR/pub_crate_missing_doc.rs:41:9\n+   |\n+LL |         pub(crate) crate_field_no_docs: (),\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 6 previous errors\n "}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui-toml/pub_crate_missing_docs/pub_crate_missing_doc.stdout", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fpub_crate_missing_docs%2Fpub_crate_missing_doc.stdout?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8"}, {"sha": "6a246afac76e056a05b9e89b8c2bb9043011dac7", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e2e23c0045d94cc0d509cbb3c915faae74844ea8/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=e2e23c0045d94cc0d509cbb3c915faae74844ea8", "patch": "@@ -33,8 +33,8 @@ error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown fie\n            max-struct-bools\n            max-suggested-slice-pattern-length\n            max-trait-bounds\n+           missing-docs-in-crate-items\n            msrv\n-           only-check-missing-docs-in-crate-items\n            pass-by-value-size-limit\n            single-char-binding-names-threshold\n            standard-macro-braces"}]}