{"sha": "9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliNmFlNTliMjJhZTdiYWUwNzdiMWUwNjA2ZmVkMmFkMjM5YTY1ZTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-20T02:55:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-20T02:55:58Z"}, "message": "Fix pp blank-line insertion after isolated comments in cboxes.", "tree": {"sha": "cd3c989dba868927e870deb20a2639b3f480d7cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd3c989dba868927e870deb20a2639b3f480d7cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "html_url": "https://github.com/rust-lang/rust/commit/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7380ccec2ebb7809b05d43d6241206650ab02b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7380ccec2ebb7809b05d43d6241206650ab02b", "html_url": "https://github.com/rust-lang/rust/commit/3f7380ccec2ebb7809b05d43d6241206650ab02b"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "3ae3eafa5b004655014031b5518d0e90af0abc38", "filename": "src/comp/pretty/pp.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpp.rs?ref=9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "patch": "@@ -234,6 +234,11 @@ obj printer(io::writer out,\n \n             // buffered indentation to avoid writing trailing whitespace\n             mutable int pending_indentation) {\n+\n+    fn last_token() -> token {\n+        ret token.(right);\n+    }\n+\n     fn pretty_print(token t) {\n         log #fmt(\"pp [%u,%u]\", left, right);\n         alt (t) {\n@@ -508,6 +513,11 @@ fn zerobreak(printer p) { spaces(p, 0u); }\n fn space(printer p) { spaces(p, 1u); }\n \n fn hardbreak(printer p) { spaces(p, 0xffffu); }\n+\n+fn hardbreak_tok() -> token {\n+    ret BREAK(rec(offset=0, blank_space=0xffff));\n+}\n+\n //\n // Local Variables:\n // mode: rust"}, {"sha": "37687bc3c2f8c0464cfc97531610b0d475777205", "filename": "src/comp/pretty/ppaux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fppaux.rs?ref=9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "patch": "@@ -236,9 +236,7 @@ fn print_comment(&ps s, lexer::cmnt cmnt) {\n         }\n         case (lexer::isolated) {\n             hardbreak(s.s);\n-            ibox(s, 0u);\n             for (str line in cmnt.lines) { word(s.s, line); hardbreak(s.s); }\n-            end(s);\n         }\n         case (lexer::trailing) {\n             word(s.s, \" \");"}, {"sha": "1f370a735655c75ad37ae3026fa7632355fd8f07", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b6ae59b22ae7bae077b1e0606fed2ad239a65e8/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=9b6ae59b22ae7bae077b1e0606fed2ad239a65e8", "patch": "@@ -99,13 +99,10 @@ fn pclose(&ps s) { word(s.s, \")\"); }\n \n fn head(&ps s, str w) {\n     // outer-box is consistent\n-\n     cbox(s, indent_unit);\n     // head-box is inconsistent\n-\n     ibox(s, str::char_len(w) + 1u);\n     // keyword that starts the head\n-\n     word_nbsp(s, w);\n }\n \n@@ -123,6 +120,11 @@ fn bclose(&ps s, common::span span) {\n \n }\n \n+fn space_if_not_hardbreak(&ps s) {\n+    if (s.s.last_token() != pp::hardbreak_tok()) {\n+        space(s.s);\n+    }\n+}\n \n // Synthesizes a comment that was not textually present in the original source\n // file.\n@@ -157,7 +159,7 @@ fn commasep_cmnt[IN](&ps s, breaks b, vec[IN] elts, fn(&ps, &IN)  op,\n             word(s.s, \",\");\n             maybe_print_trailing_comment(s, get_span(elt),\n                                          some(get_span(elts.(i)).hi));\n-            space(s.s);\n+            space_if_not_hardbreak(s);\n         }\n     }\n     end(s);\n@@ -461,7 +463,10 @@ fn print_stmt(&ps s, &ast::stmt st) {\n     maybe_print_comment(s, st.span.lo);\n     alt (st.node) {\n         case (ast::stmt_decl(?decl, _)) { print_decl(s, decl); }\n-        case (ast::stmt_expr(?expr, _)) { space(s.s); print_expr(s, expr); }\n+        case (ast::stmt_expr(?expr, _)) {\n+            space_if_not_hardbreak(s);\n+            print_expr(s, expr);\n+        }\n     }\n     if (front::parser::stmt_ends_with_semi(st)) { word(s.s, \";\"); }\n     maybe_print_trailing_comment(s, st.span, none[uint]);\n@@ -473,7 +478,7 @@ fn print_block(&ps s, ast::block blk) {\n     for (@ast::stmt st in blk.node.stmts) { print_stmt(s, *st) }\n     alt (blk.node.expr) {\n         case (some(?expr)) {\n-            space(s.s);\n+            space_if_not_hardbreak(s);\n             print_expr(s, expr);\n             maybe_print_trailing_comment(s, expr.span, some(blk.span.hi));\n         }"}]}