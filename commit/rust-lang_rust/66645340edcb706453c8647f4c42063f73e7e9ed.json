{"sha": "66645340edcb706453c8647f4c42063f73e7e9ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NjQ1MzQwZWRjYjcwNjQ1M2M4NjQ3ZjRjNDIwNjNmNzNlN2U5ZWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-26T01:50:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-26T01:50:25Z"}, "message": "Rollup merge of #60285 - estebank:icent, r=varkor\n\nDo not ICE when checking types against foreign fn\n\nFix #60275.", "tree": {"sha": "3847b4a4020990dd4229f50d0f304e2107fa7370", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3847b4a4020990dd4229f50d0f304e2107fa7370"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66645340edcb706453c8647f4c42063f73e7e9ed", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcwmPhCRBK7hj4Ov3rIwAAdHIIAF3hsCf8CpAZiJ/asyFqX9x1\nFjzv0Gs5Txk635yc+hb1BEUtxSk86XKlmBrxBAWBq0XPP1TWBV0+DMcMs4Ef37vZ\nEytrKxE+KTudeVfMgxpiQCyg9L/H9IEOxoBPw/nqcD8aELyRnVaR4dVnv2o/E6n7\ns2k17+gM8FljUthKf489PoQW/sSCqMt8wsSrPSMTgeis4LN/AXdFVwqN61TB80yG\nSxtHg3tpxhF0HtKzE8fEI6Y2XS0rV+p5eUXabi997qVpQwrpfZlM9v298RyR+4f5\nJ6xLVtw2bw13zzlAsI3Y5XIaaXg85qEY0f+l1ggZ/vaTLUW/ZJ3L/uO2o11igdw=\n=htmQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3847b4a4020990dd4229f50d0f304e2107fa7370\nparent 3a907cee97e9e2b7bc7f5947028e05b3133123ad\nparent 6b190d6de5e34bcb3e66d088dd0503c6810d357b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556243425 +0200\ncommitter GitHub <noreply@github.com> 1556243425 +0200\n\nRollup merge of #60285 - estebank:icent, r=varkor\n\nDo not ICE when checking types against foreign fn\n\nFix #60275.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66645340edcb706453c8647f4c42063f73e7e9ed", "html_url": "https://github.com/rust-lang/rust/commit/66645340edcb706453c8647f4c42063f73e7e9ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66645340edcb706453c8647f4c42063f73e7e9ed/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a907cee97e9e2b7bc7f5947028e05b3133123ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a907cee97e9e2b7bc7f5947028e05b3133123ad", "html_url": "https://github.com/rust-lang/rust/commit/3a907cee97e9e2b7bc7f5947028e05b3133123ad"}, {"sha": "6b190d6de5e34bcb3e66d088dd0503c6810d357b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b190d6de5e34bcb3e66d088dd0503c6810d357b", "html_url": "https://github.com/rust-lang/rust/commit/6b190d6de5e34bcb3e66d088dd0503c6810d357b"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "d1ca05780930aae22a28854174b9713195467b4d", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/66645340edcb706453c8647f4c42063f73e7e9ed/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66645340edcb706453c8647f4c42063f73e7e9ed/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=66645340edcb706453c8647f4c42063f73e7e9ed", "patch": "@@ -443,13 +443,16 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n     ) -> bool /* did we suggest to call a function because of missing parenthesis? */ {\n         err.span_label(span, ty.to_string());\n         if let FnDef(def_id, _) = ty.sty {\n+            let source_map = self.tcx.sess.source_map();\n+            let hir_id = match self.tcx.hir().as_local_hir_id(def_id) {\n+                Some(hir_id) => hir_id,\n+                None => return false,\n+            };\n             if self.tcx.has_typeck_tables(def_id) == false {\n                 return false;\n             }\n-            let source_map = self.tcx.sess.source_map();\n-            let hir_id = &self.tcx.hir().as_local_hir_id(def_id).unwrap();\n             let fn_sig = {\n-                match self.tcx.typeck_tables_of(def_id).liberated_fn_sigs().get(*hir_id) {\n+                match self.tcx.typeck_tables_of(def_id).liberated_fn_sigs().get(hir_id) {\n                     Some(f) => f.clone(),\n                     None => {\n                         bug!(\"No fn-sig entry for def_id={:?}\", def_id);\n@@ -458,11 +461,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             };\n \n             let other_ty = if let FnDef(def_id, _) = other_ty.sty {\n+                let hir_id = match self.tcx.hir().as_local_hir_id(def_id) {\n+                    Some(hir_id) => hir_id,\n+                    None => return false,\n+                };\n                 if self.tcx.has_typeck_tables(def_id) == false {\n                     return false;\n                 }\n-                let hir_id = &self.tcx.hir().as_local_hir_id(def_id).unwrap();\n-                match self.tcx.typeck_tables_of(def_id).liberated_fn_sigs().get(*hir_id) {\n+                match self.tcx.typeck_tables_of(def_id).liberated_fn_sigs().get(hir_id) {\n                     Some(f) => f.clone().output(),\n                     None => {\n                         bug!(\"No fn-sig entry for def_id={:?}\", def_id);"}]}