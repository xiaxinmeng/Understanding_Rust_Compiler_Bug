{"sha": "c816720242ac75fb4131102e4365baef20963028", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MTY3MjAyNDJhYzc1ZmI0MTMxMTAyZTQzNjViYWVmMjA5NjMwMjg=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-09-27T00:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-27T00:29:47Z"}, "message": "Rollup merge of #36574 - japaric:link-arg, r=alexcrichton\n\nrustc: implement -C link-arg\n\nthis flag lets you pass a _single_ argument to the linker but can be\nused _repeatedly_. For example, instead of using:\n\n```\nrustc -C link-args='-l bar' (..)\n```\n\nyou could write\n\n```\nrustc -C link-arg='-l' -C link-arg='bar' (..)\n```\n\nThis new flag can be used with RUSTFLAGS where `-C link-args` has\nproblems with \"nested\" spaces:\n\n```\nRUSTFLAGS='-C link-args=\"-Tlayout.ld -nostartfiles\"'\n```\n\nThis passes three arguments to rustc: `-C` `link-args=\"-Tlayout.ld` and\n`-nostartfiles\"` to `rustc`. That's not what we meant. But this does\nwhat we want:\n\n```\nRUSTFLAGS='-C link-arg=-Tlayout.ld -C link-arg=-nostartfiles`\n```\n\ncc rust-lang/rfcs#1509\n\nr? @alexcrichton\ncc @Zoxc\n\nThis needs a test. Any suggestion?", "tree": {"sha": "a6d4e9fd696f1ffbcbfa57c9db2c2ebc5c9a22bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6d4e9fd696f1ffbcbfa57c9db2c2ebc5c9a22bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c816720242ac75fb4131102e4365baef20963028", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c816720242ac75fb4131102e4365baef20963028", "html_url": "https://github.com/rust-lang/rust/commit/c816720242ac75fb4131102e4365baef20963028", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c816720242ac75fb4131102e4365baef20963028/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3ffde855a8c76dab84d5ca2e5c045538e52869a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ffde855a8c76dab84d5ca2e5c045538e52869a", "html_url": "https://github.com/rust-lang/rust/commit/e3ffde855a8c76dab84d5ca2e5c045538e52869a"}, {"sha": "2f71fa7150f9d6d9292b0a2c5f2beaf43d2058d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f71fa7150f9d6d9292b0a2c5f2beaf43d2058d3", "html_url": "https://github.com/rust-lang/rust/commit/2f71fa7150f9d6d9292b0a2c5f2beaf43d2058d3"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "5907bdd2f594a5367e91d69fe264b154f943d11d", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c816720242ac75fb4131102e4365baef20963028/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c816720242ac75fb4131102e4365baef20963028/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=c816720242ac75fb4131102e4365baef20963028", "patch": "@@ -606,6 +606,7 @@ macro_rules! options {\n         pub const parse_opt_bool: Option<&'static str> =\n             Some(\"one of: `y`, `yes`, `on`, `n`, `no`, or `off`\");\n         pub const parse_string: Option<&'static str> = Some(\"a string\");\n+        pub const parse_string_push: Option<&'static str> = Some(\"a string\");\n         pub const parse_opt_string: Option<&'static str> = Some(\"a string\");\n         pub const parse_list: Option<&'static str> = Some(\"a space-separated list of strings\");\n         pub const parse_opt_list: Option<&'static str> = Some(\"a space-separated list of strings\");\n@@ -668,6 +669,13 @@ macro_rules! options {\n             }\n         }\n \n+        fn parse_string_push(slot: &mut Vec<String>, v: Option<&str>) -> bool {\n+            match v {\n+                Some(s) => { slot.push(s.to_string()); true },\n+                None => false,\n+            }\n+        }\n+\n         fn parse_list(slot: &mut Vec<String>, v: Option<&str>)\n                       -> bool {\n             match v {\n@@ -743,6 +751,8 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n         \"tool to assemble archives with\"),\n     linker: Option<String> = (None, parse_opt_string, [UNTRACKED],\n         \"system linker to link outputs with\"),\n+    link_arg: Vec<String> = (vec![], parse_string_push, [UNTRACKED],\n+        \"a single extra argument to pass to the linker (can be used several times)\"),\n     link_args: Option<Vec<String>> = (None, parse_opt_list, [UNTRACKED],\n         \"extra arguments to pass to the linker (space separated)\"),\n     link_dead_code: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "5dab82dbc7ac4f786fc1c387469a14be2ba83310", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c816720242ac75fb4131102e4365baef20963028/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c816720242ac75fb4131102e4365baef20963028/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=c816720242ac75fb4131102e4365baef20963028", "patch": "@@ -754,7 +754,8 @@ fn link_args(cmd: &mut Linker,\n         let empty_vec = Vec::new();\n         let empty_str = String::new();\n         let args = sess.opts.cg.link_args.as_ref().unwrap_or(&empty_vec);\n-        let mut args = args.iter().chain(used_link_args.iter());\n+        let more_args = &sess.opts.cg.link_arg;\n+        let mut args = args.iter().chain(more_args.iter()).chain(used_link_args.iter());\n         let relocation_model = sess.opts.cg.relocation_model.as_ref()\n                                    .unwrap_or(&empty_str);\n         if (t.options.relocation_model == \"pic\" || *relocation_model == \"pic\")\n@@ -844,6 +845,7 @@ fn link_args(cmd: &mut Linker,\n     if let Some(ref args) = sess.opts.cg.link_args {\n         cmd.args(args);\n     }\n+    cmd.args(&sess.opts.cg.link_arg);\n     cmd.args(&used_link_args);\n }\n "}, {"sha": "0ee239af0fa6c796182f3f86682cebe1393bf9bb", "filename": "src/test/run-make/link-arg/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c816720242ac75fb4131102e4365baef20963028/src%2Ftest%2Frun-make%2Flink-arg%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c816720242ac75fb4131102e4365baef20963028/src%2Ftest%2Frun-make%2Flink-arg%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flink-arg%2FMakefile?ref=c816720242ac75fb4131102e4365baef20963028", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+RUSTC_FLAGS = -C link-arg=\"-lfoo\" -C link-arg=\"-lbar\" -Z print-link-args\n+\n+all:\n+\t$(RUSTC) $(RUSTC_FLAGS) empty.rs | grep lfoo | grep lbar"}, {"sha": "2b76fb24e5f1eb994ba0d792dc451a5bf8faac71", "filename": "src/test/run-make/link-arg/empty.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c816720242ac75fb4131102e4365baef20963028/src%2Ftest%2Frun-make%2Flink-arg%2Fempty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c816720242ac75fb4131102e4365baef20963028/src%2Ftest%2Frun-make%2Flink-arg%2Fempty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flink-arg%2Fempty.rs?ref=c816720242ac75fb4131102e4365baef20963028", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() { }"}]}