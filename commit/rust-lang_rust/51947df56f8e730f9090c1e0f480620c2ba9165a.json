{"sha": "51947df56f8e730f9090c1e0f480620c2ba9165a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOTQ3ZGY1NmY4ZTczMGY5MDkwYzFlMGY0ODA2MjBjMmJhOTE2NWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-21T23:49:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-21T23:49:51Z"}, "message": "Auto merge of #6485 - phansch:macro-check-large-enum-variant, r=llogiq\n\nDon't trigger large_enum_variant in external macros\n\nCloses #1776 (the potential JSON output issue is not something we can fix in Clippy and I can't reproduce it anymore)\n\nchangelog: Don't trigger [`large_enum_variant`] in external macros", "tree": {"sha": "285e95964a7eb8ad62f9554c73049aacce77f27e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/285e95964a7eb8ad62f9554c73049aacce77f27e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51947df56f8e730f9090c1e0f480620c2ba9165a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51947df56f8e730f9090c1e0f480620c2ba9165a", "html_url": "https://github.com/rust-lang/rust/commit/51947df56f8e730f9090c1e0f480620c2ba9165a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51947df56f8e730f9090c1e0f480620c2ba9165a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "400d40b4ceb15baf92225ebffd1b4a385b950ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/400d40b4ceb15baf92225ebffd1b4a385b950ab1", "html_url": "https://github.com/rust-lang/rust/commit/400d40b4ceb15baf92225ebffd1b4a385b950ab1"}, {"sha": "12bd244caa4547b4b84108d892e85bf953b1a408", "url": "https://api.github.com/repos/rust-lang/rust/commits/12bd244caa4547b4b84108d892e85bf953b1a408", "html_url": "https://github.com/rust-lang/rust/commit/12bd244caa4547b4b84108d892e85bf953b1a408"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "ad9b4f357a74dbbe8a489176075d158c0b45cb38", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51947df56f8e730f9090c1e0f480620c2ba9165a/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51947df56f8e730f9090c1e0f480620c2ba9165a/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=51947df56f8e730f9090c1e0f480620c2ba9165a", "patch": "@@ -4,6 +4,7 @@ use crate::utils::{snippet_opt, span_lint_and_then};\n use rustc_errors::Applicability;\n use rustc_hir::{Item, ItemKind, VariantData};\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_target::abi::LayoutOf;\n \n@@ -58,6 +59,9 @@ impl_lint_pass!(LargeEnumVariant => [LARGE_ENUM_VARIANT]);\n \n impl<'tcx> LateLintPass<'tcx> for LargeEnumVariant {\n     fn check_item(&mut self, cx: &LateContext<'_>, item: &Item<'_>) {\n+        if in_external_macro(cx.tcx.sess, item.span) {\n+            return;\n+        }\n         let did = cx.tcx.hir().local_def_id(item.hir_id);\n         if let ItemKind::Enum(ref def, _) = item.kind {\n             let ty = cx.tcx.type_of(did);"}, {"sha": "1832482346820af414a29bddccd0992cbf7442a2", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=51947df56f8e730f9090c1e0f480620c2ba9165a", "patch": "@@ -84,3 +84,13 @@ macro_rules! as_conv {\n         0u32 as u64\n     };\n }\n+\n+#[macro_export]\n+macro_rules! large_enum_variant {\n+    () => {\n+        enum LargeEnumInMacro {\n+            A(i32),\n+            B([i32; 8000]),\n+        }\n+    };\n+}"}, {"sha": "d22fee3f27b05818c3ed86e1127c010726bb7afa", "filename": "tests/ui/large_enum_variant.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.rs?ref=51947df56f8e730f9090c1e0f480620c2ba9165a", "patch": "@@ -1,7 +1,12 @@\n+// aux-build:macro_rules.rs\n+\n #![allow(dead_code)]\n #![allow(unused_variables)]\n #![warn(clippy::large_enum_variant)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n enum LargeEnum {\n     A(i32),\n     B([i32; 8000]),\n@@ -51,4 +56,6 @@ enum LargeEnumOk {\n     LargeB([i32; 8001]),\n }\n \n-fn main() {}\n+fn main() {\n+    large_enum_variant!();\n+}"}, {"sha": "d39a4d462aabde949de878d8821d11950cecfc73", "filename": "tests/ui/large_enum_variant.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Flarge_enum_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/51947df56f8e730f9090c1e0f480620c2ba9165a/tests%2Fui%2Flarge_enum_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flarge_enum_variant.stderr?ref=51947df56f8e730f9090c1e0f480620c2ba9165a", "patch": "@@ -1,12 +1,12 @@\n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:7:5\n+  --> $DIR/large_enum_variant.rs:12:5\n    |\n LL |     B([i32; 8000]),\n    |     ^^^^^^^^^^^^^^ this variant is 32000 bytes\n    |\n    = note: `-D clippy::large-enum-variant` implied by `-D warnings`\n note: and the second-largest variant is 4 bytes:\n-  --> $DIR/large_enum_variant.rs:6:5\n+  --> $DIR/large_enum_variant.rs:11:5\n    |\n LL |     A(i32),\n    |     ^^^^^^\n@@ -16,13 +16,13 @@ LL |     B(Box<[i32; 8000]>),\n    |       ^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:31:5\n+  --> $DIR/large_enum_variant.rs:36:5\n    |\n LL |     ContainingLargeEnum(LargeEnum),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this variant is 32004 bytes\n    |\n note: and the second-largest variant is 8 bytes:\n-  --> $DIR/large_enum_variant.rs:30:5\n+  --> $DIR/large_enum_variant.rs:35:5\n    |\n LL |     VariantOk(i32, u32),\n    |     ^^^^^^^^^^^^^^^^^^^\n@@ -32,30 +32,30 @@ LL |     ContainingLargeEnum(Box<LargeEnum>),\n    |                         ^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:41:5\n+  --> $DIR/large_enum_variant.rs:46:5\n    |\n LL |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this variant is 32004 bytes\n    |\n note: and the second-largest variant is 8 bytes:\n-  --> $DIR/large_enum_variant.rs:40:5\n+  --> $DIR/large_enum_variant.rs:45:5\n    |\n LL |     VariantOk(i32, u32),\n    |     ^^^^^^^^^^^^^^^^^^^\n help: consider boxing the large fields to reduce the total size of the enum\n-  --> $DIR/large_enum_variant.rs:41:5\n+  --> $DIR/large_enum_variant.rs:46:5\n    |\n LL |     StructLikeLarge { x: [i32; 8000], y: i32 },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: large size difference between variants\n-  --> $DIR/large_enum_variant.rs:46:5\n+  --> $DIR/large_enum_variant.rs:51:5\n    |\n LL |     StructLikeLarge2 { x: [i32; 8000] },\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ this variant is 32000 bytes\n    |\n note: and the second-largest variant is 8 bytes:\n-  --> $DIR/large_enum_variant.rs:45:5\n+  --> $DIR/large_enum_variant.rs:50:5\n    |\n LL |     VariantOk(i32, u32),\n    |     ^^^^^^^^^^^^^^^^^^^"}]}