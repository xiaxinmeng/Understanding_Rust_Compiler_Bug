{"sha": "8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOTJmNGZiOTEyZTQyZDdiYjE3N2IxYzVhNmVlNGI1MzAxNzJmNDU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-14T04:59:39Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-16T21:32:15Z"}, "message": "Remove unused `cx` parameter from `pathvec_std` and `path_std`.", "tree": {"sha": "98bb0ef827b59a6a6acb2c89bbdbef56f165fbaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98bb0ef827b59a6a6acb2c89bbdbef56f165fbaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "html_url": "https://github.com/rust-lang/rust/commit/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ee1b62c811a6eb68d6db6dfb91f66a49956749b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ee1b62c811a6eb68d6db6dfb91f66a49956749b", "html_url": "https://github.com/rust-lang/rust/commit/6ee1b62c811a6eb68d6db6dfb91f66a49956749b"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "86e875934780df9cec6a57ced596a0a0f622eb47", "filename": "src/librustc_builtin_macros/deriving/bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -16,7 +16,7 @@ pub fn expand_deriving_copy(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, marker::Copy),\n+        path: path_std!(marker::Copy),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "471894828f594b6e58b6496601f093a487484605", "filename": "src/librustc_builtin_macros/deriving/clone.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -56,7 +56,7 @@ pub fn expand_deriving_clone(\n                 }\n             }\n             ItemKind::Union(..) => {\n-                bounds = vec![Literal(path_std!(cx, marker::Copy))];\n+                bounds = vec![Literal(path_std!(marker::Copy))];\n                 is_shallow = true;\n                 substructure = combine_substructure(Box::new(|c, s, sub| {\n                     cs_clone_shallow(\"Clone\", c, s, sub, true)\n@@ -78,7 +78,7 @@ pub fn expand_deriving_clone(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, clone::Clone),\n+        path: path_std!(clone::Clone),\n         additional_bounds: bounds,\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "b14f8a245b99eb828c0850b781897160a984c59e", "filename": "src/librustc_builtin_macros/deriving/cmp/eq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -22,7 +22,7 @@ pub fn expand_deriving_eq(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, cmp::Eq),\n+        path: path_std!(cmp::Eq),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n@@ -47,7 +47,7 @@ pub fn expand_deriving_eq(\n         cx,\n         span,\n         item,\n-        path_std!(cx, marker::StructuralEq),\n+        path_std!(marker::StructuralEq),\n         push,\n     );\n "}, {"sha": "06ef7826b6452c07011b543513cc723dd3ba8a1e", "filename": "src/librustc_builtin_macros/deriving/cmp/ord.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -20,7 +20,7 @@ pub fn expand_deriving_ord(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, cmp::Ord),\n+        path: path_std!(cmp::Ord),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n@@ -30,7 +30,7 @@ pub fn expand_deriving_ord(\n             generics: LifetimeBounds::empty(),\n             explicit_self: borrowed_explicit_self(),\n             args: vec![(borrowed_self(), \"other\")],\n-            ret_ty: Literal(path_std!(cx, cmp::Ordering)),\n+            ret_ty: Literal(path_std!(cmp::Ordering)),\n             attributes: attrs,\n             is_unsafe: false,\n             unify_fieldless_variants: true,"}, {"sha": "3c209a66790c7ce01f378463e74fd300ba97b5c8", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -85,7 +85,7 @@ pub fn expand_deriving_partial_eq(\n         cx,\n         span,\n         item,\n-        path_std!(cx, marker::StructuralPartialEq),\n+        path_std!(marker::StructuralPartialEq),\n         push,\n     );\n \n@@ -100,7 +100,7 @@ pub fn expand_deriving_partial_eq(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, cmp::PartialEq),\n+        path: path_std!(cmp::PartialEq),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "e9afacbe4b5c5ef92356a87291db668a697301d1", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -37,9 +37,9 @@ pub fn expand_deriving_partial_ord(\n         }};\n     }\n \n-    let ordering_ty = Literal(path_std!(cx, cmp::Ordering));\n+    let ordering_ty = Literal(path_std!(cmp::Ordering));\n     let ret_ty = Literal(Path::new_(\n-        pathvec_std!(cx, option::Option),\n+        pathvec_std!(option::Option),\n         None,\n         vec![Box::new(ordering_ty)],\n         PathKind::Std,\n@@ -80,7 +80,7 @@ pub fn expand_deriving_partial_ord(\n     let trait_def = TraitDef {\n         span,\n         attributes: vec![],\n-        path: path_std!(cx, cmp::PartialOrd),\n+        path: path_std!(cmp::PartialOrd),\n         additional_bounds: vec![],\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "29badee4e4a2fb67c9b5d52b6defc0afb9558a09", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -18,12 +18,12 @@ pub fn expand_deriving_debug(\n ) {\n     // &mut ::std::fmt::Formatter\n     let fmtr =\n-        Ptr(Box::new(Literal(path_std!(cx, fmt::Formatter))), Borrowed(None, ast::Mutability::Mut));\n+        Ptr(Box::new(Literal(path_std!(fmt::Formatter))), Borrowed(None, ast::Mutability::Mut));\n \n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, fmt::Debug),\n+        path: path_std!(fmt::Debug),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,\n@@ -33,7 +33,7 @@ pub fn expand_deriving_debug(\n             generics: LifetimeBounds::empty(),\n             explicit_self: borrowed_explicit_self(),\n             args: vec![(fmtr, \"f\")],\n-            ret_ty: Literal(path_std!(cx, fmt::Result)),\n+            ret_ty: Literal(path_std!(fmt::Result)),\n             attributes: Vec::new(),\n             is_unsafe: false,\n             unify_fieldless_variants: false,"}, {"sha": "9d6177c6c99c22884733309f994ff9db75af7855", "filename": "src/librustc_builtin_macros/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -44,7 +44,7 @@ pub fn expand_deriving_rustc_decodable(\n                 \"d\",\n             )],\n             ret_ty: Literal(Path::new_(\n-                pathvec_std!(cx, result::Result),\n+                pathvec_std!(result::Result),\n                 None,\n                 vec![\n                     Box::new(Self_),"}, {"sha": "54a64edeac34995f7ca195b03268d45b0fb4781d", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -21,7 +21,7 @@ pub fn expand_deriving_default(\n     let trait_def = TraitDef {\n         span,\n         attributes: Vec::new(),\n-        path: path_std!(cx, default::Default),\n+        path: path_std!(default::Default),\n         additional_bounds: Vec::new(),\n         generics: LifetimeBounds::empty(),\n         is_unsafe: false,"}, {"sha": "e6dffc6db1dc740a026a47f82b2b766d7d197146", "filename": "src/librustc_builtin_macros/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -128,7 +128,7 @@ pub fn expand_deriving_rustc_encodable(\n                 \"s\",\n             )],\n             ret_ty: Literal(Path::new_(\n-                pathvec_std!(cx, result::Result),\n+                pathvec_std!(result::Result),\n                 None,\n                 vec![\n                     Box::new(Tuple(Vec::new())),"}, {"sha": "5c8a5501a208e500af0d0096cdb1e9c3a6902a28", "filename": "src/librustc_builtin_macros/deriving/hash.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -15,7 +15,7 @@ pub fn expand_deriving_hash(\n     item: &Annotatable,\n     push: &mut dyn FnMut(Annotatable),\n ) {\n-    let path = Path::new_(pathvec_std!(cx, hash::Hash), None, vec![], PathKind::Std);\n+    let path = Path::new_(pathvec_std!(hash::Hash), None, vec![], PathKind::Std);\n \n     let typaram = \"__H\";\n \n@@ -32,7 +32,7 @@ pub fn expand_deriving_hash(\n             name: sym::hash,\n             generics: LifetimeBounds {\n                 lifetimes: Vec::new(),\n-                bounds: vec![(typaram, vec![path_std!(cx, hash::Hasher)])],\n+                bounds: vec![(typaram, vec![path_std!(hash::Hasher)])],\n             },\n             explicit_self: borrowed_explicit_self(),\n             args: vec![(Ptr(Box::new(Literal(arg)), Borrowed(None, Mutability::Mut)), \"state\")],"}, {"sha": "777640035677a96a06d3109509a16fead784a65b", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e92f4fb912e42d7bb177b1c5a6ee4b530172f45/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=8e92f4fb912e42d7bb177b1c5a6ee4b530172f45", "patch": "@@ -10,7 +10,7 @@ macro path_local($x:ident) {\n     generic::ty::Path::new_local(stringify!($x))\n }\n \n-macro pathvec_std($cx:expr, $($rest:ident)::+) {{\n+macro pathvec_std($($rest:ident)::+) {{\n     vec![ $( stringify!($rest) ),+ ]\n }}\n "}]}