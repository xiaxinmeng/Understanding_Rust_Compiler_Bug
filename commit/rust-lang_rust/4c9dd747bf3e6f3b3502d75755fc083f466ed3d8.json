{"sha": "4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjOWRkNzQ3YmYzZTZmM2IzNTAyZDc1NzU1ZmMwODNmNDY2ZWQzZDg=", "commit": {"author": {"name": "Erik Johnston", "email": "erikj@jki.re", "date": "2016-04-07T19:24:30Z"}, "committer": {"name": "Erik Johnston", "email": "erikj@jki.re", "date": "2016-04-07T19:29:05Z"}, "message": "Fix long generic indent", "tree": {"sha": "da1f24c2cc0bb70150f63c098b6473766c0b3002", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da1f24c2cc0bb70150f63c098b6473766c0b3002"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "html_url": "https://github.com/rust-lang/rust/commit/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/comments", "author": {"login": "erikjohnston", "id": 8428120, "node_id": "MDQ6VXNlcjg0MjgxMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/8428120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikjohnston", "html_url": "https://github.com/erikjohnston", "followers_url": "https://api.github.com/users/erikjohnston/followers", "following_url": "https://api.github.com/users/erikjohnston/following{/other_user}", "gists_url": "https://api.github.com/users/erikjohnston/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikjohnston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikjohnston/subscriptions", "organizations_url": "https://api.github.com/users/erikjohnston/orgs", "repos_url": "https://api.github.com/users/erikjohnston/repos", "events_url": "https://api.github.com/users/erikjohnston/events{/privacy}", "received_events_url": "https://api.github.com/users/erikjohnston/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikjohnston", "id": 8428120, "node_id": "MDQ6VXNlcjg0MjgxMjA=", "avatar_url": "https://avatars.githubusercontent.com/u/8428120?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikjohnston", "html_url": "https://github.com/erikjohnston", "followers_url": "https://api.github.com/users/erikjohnston/followers", "following_url": "https://api.github.com/users/erikjohnston/following{/other_user}", "gists_url": "https://api.github.com/users/erikjohnston/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikjohnston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikjohnston/subscriptions", "organizations_url": "https://api.github.com/users/erikjohnston/orgs", "repos_url": "https://api.github.com/users/erikjohnston/repos", "events_url": "https://api.github.com/users/erikjohnston/events{/privacy}", "received_events_url": "https://api.github.com/users/erikjohnston/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4edc6f1a4e069dcb46d1fc583dccefba7e4aae44", "url": "https://api.github.com/repos/rust-lang/rust/commits/4edc6f1a4e069dcb46d1fc583dccefba7e4aae44", "html_url": "https://github.com/rust-lang/rust/commit/4edc6f1a4e069dcb46d1fc583dccefba7e4aae44"}], "stats": {"total": 171, "additions": 158, "deletions": 13}, "files": [{"sha": "04bb2ec4a4c65fba575942893507507b550cd721", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -1290,12 +1290,13 @@ fn rewrite_fn_base(context: &RewriteContext,\n     };\n \n     // Args.\n-    let (mut one_line_budget, multi_line_budget, mut arg_indent) =\n+    let (mut one_line_budget, mut multi_line_budget, mut arg_indent) =\n         compute_budgets_for_args(context, &result, indent, ret_str_len, newline_brace);\n \n     if context.config.fn_args_layout == FnArgLayoutStyle::Block ||\n        context.config.fn_args_layout == FnArgLayoutStyle::BlockAlways {\n         arg_indent = indent.block_indent(context.config);\n+        multi_line_budget = context.config.max_width - arg_indent.width();\n     }\n \n     debug!(\"rewrite_fn: one_line_budget: {}, multi_line_budget: {}, arg_indent: {:?}\",\n@@ -1569,6 +1570,8 @@ fn rewrite_args(context: &RewriteContext,\n         _ => multi_line_budget,\n     };\n \n+    debug!(\"rewrite_args: budget: {}, tactic: {:?}\", budget, tactic);\n+\n     let end_with_newline = match context.config.fn_args_layout {\n         FnArgLayoutStyle::Block | FnArgLayoutStyle::BlockAlways => true,\n         _ => false,"}, {"sha": "1f2d740a075da5eeb8211762374e663ccd423e42", "filename": "tests/source/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-6.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_layout: Block\n+// rustfmt-fn_args_layout: BlockAlways\n // rustfmt-where_indent: Inherit\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents."}, {"sha": "27c97867d265274ea1125121bc9c46122e569138", "filename": "tests/source/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-7.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_layout: Block\n+// rustfmt-fn_args_layout: BlockAlways\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_arg_indent: Tabbed\n // rustfmt-fn_brace_style: AlwaysNextLine"}, {"sha": "a1aebf1f38c805fe1fb0b8fdaab45e8ce18c67d3", "filename": "tests/source/fn-custom-8.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-8.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -0,0 +1,50 @@\n+// rustfmt-fn_args_layout: Block\n+// rustfmt-where_indent: Inherit\n+// rustfmt-fn_brace_style: PreferSameLine\n+// Test different indents.\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {\n+    foo();\n+}\n+\n+fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String {\n+    foo();\n+}\n+\n+fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) -> String {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) where T: UUUUUUUUUUU {\n+    foo();\n+}\n+\n+fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) where T: UUUUUUUUUUU {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String where T: UUUUUUUUUUU {\n+    foo();\n+}\n+\n+fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) -> String where T: UUUUUUUUUUU {\n+    bar();\n+}\n+\n+trait Test {\n+    fn foo(\n+        a: u8) {\n+\n+    }\n+\n+    fn bar(a: u8)\n+    -> String {\n+\n+    }\n+\n+    fn bar(a: u8) -> String where Foo: foooo, Bar: barrr {}\n+}"}, {"sha": "b87158a4d7f8b0a827ce5ed18dd07a794d175045", "filename": "tests/source/fn_args_layout-block.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn_args_layout-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Fsource%2Ffn_args_layout-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn_args_layout-block.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -62,12 +62,16 @@ fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Looooo\n     foo();\n }\n \n-fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Loooooooooooooooong>(a: Aaaaaaaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd) {\n-    foo();\n-}\n-\n trait Test {\n     fn foo(a: u8) {}\n \n     fn bar(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd, e: Eeeeeeeeeeeeeee) -> String {}\n }\n+\n+fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Loooooooooooooooong>(a: Aaaaaaaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd) {\n+    foo();\n+}\n+\n+fn foo() -> (Looooooooooooooooooooooooooong, Reeeeeeeeeeeeeeeeeeeeeeeeeeeeeturn, iiiiiiiiiiiiiis, Loooooooooooooooooooooong) {\n+    foo();\n+}"}, {"sha": "74e6765847e8cc6edb579c4a2cabc8840b14ca89", "filename": "tests/target/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-6.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_layout: Block\n+// rustfmt-fn_args_layout: BlockAlways\n // rustfmt-where_indent: Inherit\n // rustfmt-fn_brace_style: PreferSameLine\n // Test different indents."}, {"sha": "82260d8c8632c0b11d5bb021492a93eb60715d94", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_args_layout: Block\n+// rustfmt-fn_args_layout: BlockAlways\n // rustfmt-fn_args_density: Vertical\n // rustfmt-fn_arg_indent: Tabbed\n // rustfmt-fn_brace_style: AlwaysNextLine"}, {"sha": "bd4a379969b0b3a1b86be90c2faba2345bca32b9", "filename": "tests/target/fn-custom-8.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-8.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -0,0 +1,74 @@\n+// rustfmt-fn_args_layout: Block\n+// rustfmt-where_indent: Inherit\n+// rustfmt-fn_brace_style: PreferSameLine\n+// Test different indents.\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {\n+    foo();\n+}\n+\n+fn bar(\n+    a: Aaaaaaaaaaaaaa,\n+    b: Bbbbbbbbbbbbbb,\n+    c: Cccccccccccccccccc,\n+    d: Dddddddddddddddd,\n+    e: Eeeeeeeeeeeeeee\n+) {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String {\n+    foo();\n+}\n+\n+fn bar(\n+    a: Aaaaaaaaaaaaaa,\n+    b: Bbbbbbbbbbbbbb,\n+    c: Cccccccccccccccccc,\n+    d: Dddddddddddddddd,\n+    e: Eeeeeeeeeeeeeee\n+) -> String {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb)\n+where T: UUUUUUUUUUU {\n+    foo();\n+}\n+\n+fn bar(\n+    a: Aaaaaaaaaaaaaa,\n+    b: Bbbbbbbbbbbbbb,\n+    c: Cccccccccccccccccc,\n+    d: Dddddddddddddddd,\n+    e: Eeeeeeeeeeeeeee\n+) where T: UUUUUUUUUUU {\n+    bar();\n+}\n+\n+fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) -> String\n+where T: UUUUUUUUUUU {\n+    foo();\n+}\n+\n+fn bar(\n+    a: Aaaaaaaaaaaaaa,\n+    b: Bbbbbbbbbbbbbb,\n+    c: Cccccccccccccccccc,\n+    d: Dddddddddddddddd,\n+    e: Eeeeeeeeeeeeeee\n+) -> String\n+where T: UUUUUUUUUUU {\n+    bar();\n+}\n+\n+trait Test {\n+    fn foo(a: u8) {}\n+\n+    fn bar(a: u8) -> String {}\n+\n+    fn bar(a: u8) -> String\n+    where Foo: foooo,\n+          Bar: barrr {\n+    }\n+}"}, {"sha": "cf380c649c8d132586be9f9e7f4d4150ae2e89a0", "filename": "tests/target/fn_args_layout-block.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn_args_layout-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c9dd747bf3e6f3b3502d75755fc083f466ed3d8/tests%2Ftarget%2Ffn_args_layout-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn_args_layout-block.rs?ref=4c9dd747bf3e6f3b3502d75755fc083f466ed3d8", "patch": "@@ -98,10 +98,6 @@ fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Looooo\n     foo();\n }\n \n-fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Loooooooooooooooong>(a: Aaaaaaaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbbb, c: Cccccccccccccccccc, d: Dddddddddddddddd) {\n-    foo();\n-}\n-\n trait Test {\n     fn foo(a: u8) {}\n \n@@ -114,3 +110,21 @@ trait Test {\n     ) -> String {\n     }\n }\n+\n+fn foo<L: Loooooooooooooooooooong, G: Geeeeeeeeeeneric, I: iiiiiiiiis, L: Loooooooooooooooong>(\n+    a: Aaaaaaaaaaaaaaaaaaaa,\n+    b: Bbbbbbbbbbbbbbbbb,\n+    c: Cccccccccccccccccc,\n+    d: Dddddddddddddddd\n+) {\n+    foo();\n+}\n+\n+fn foo()\n+    -> (Looooooooooooooooooooooooooong,\n+        Reeeeeeeeeeeeeeeeeeeeeeeeeeeeeturn,\n+        iiiiiiiiiiiiiis,\n+        Loooooooooooooooooooooong)\n+{\n+    foo();\n+}"}]}