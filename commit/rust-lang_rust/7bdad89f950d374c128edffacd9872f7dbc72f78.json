{"sha": "7bdad89f950d374c128edffacd9872f7dbc72f78", "node_id": "C_kwDOAAsO6NoAKDdiZGFkODlmOTUwZDM3NGMxMjhlZGZmYWNkOTg3MmY3ZGJjNzJmNzg", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-02-09T23:12:17Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-02-22T20:40:46Z"}, "message": "Stabilize Termination and ExitCode", "tree": {"sha": "281fc7a46708f2c5ec71afe7d27eabd3fd873d42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/281fc7a46708f2c5ec71afe7d27eabd3fd873d42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bdad89f950d374c128edffacd9872f7dbc72f78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bdad89f950d374c128edffacd9872f7dbc72f78", "html_url": "https://github.com/rust-lang/rust/commit/7bdad89f950d374c128edffacd9872f7dbc72f78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bdad89f950d374c128edffacd9872f7dbc72f78/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d9a0ae210dcd078b3985e3550b59064e6603bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d9a0ae210dcd078b3985e3550b59064e6603bc", "html_url": "https://github.com/rust-lang/rust/commit/75d9a0ae210dcd078b3985e3550b59064e6603bc"}], "stats": {"total": 68, "additions": 45, "deletions": 23}, "files": [{"sha": "a39793d9c220ce8ec75dd07e3e7e8d761f8e1202", "filename": "library/std/src/process.rs", "status": "modified", "additions": 44, "deletions": 19, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/7bdad89f950d374c128edffacd9872f7dbc72f78/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdad89f950d374c128edffacd9872f7dbc72f78/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=7bdad89f950d374c128edffacd9872f7dbc72f78", "patch": "@@ -1404,6 +1404,15 @@ impl From<fs::File> for Stdio {\n /// For proper error reporting of failed processes, print the value of `ExitStatus` or\n /// `ExitStatusError` using their implementations of [`Display`](crate::fmt::Display).\n ///\n+/// # Differences from `ExitStatus`\n+///\n+/// `ExitCode` is intended for terminating the currently running process, via\n+/// the `Termination` trait, in contrast to [`ExitStatus`], which represents the\n+/// termination of a child process. These APIs are separate due to platform\n+/// compatibility differences and their expected usage; it is not generally\n+/// possible to exactly reproduce an ExitStatus from a child for the current\n+/// process after the fact.\n+///\n /// [`status`]: Command::status\n /// [`wait`]: Child::wait\n //\n@@ -1636,8 +1645,16 @@ impl fmt::Display for ExitStatusError {\n #[unstable(feature = \"exit_status_error\", issue = \"84908\")]\n impl crate::error::Error for ExitStatusError {}\n \n-/// This type represents the status code a process can return to its\n-/// parent under normal termination.\n+/// This type represents the status code the current process can return\n+/// to its parent under normal termination.\n+///\n+/// ExitCode is intended to be consumed only by the standard library (via\n+/// `Termination::report()`), and intentionally does not provide accessors like\n+/// `PartialEq`, `Eq`, or `Hash`. Instead the standard library provides the\n+/// canonical `SUCCESS` and `FAILURE` exit codes as well as `From<u8> for\n+/// ExitCode` for constructing other arbitrary exit codes.\n+///\n+/// # Portability\n ///\n /// Numeric values used in this type don't have portable meanings, and\n /// different platforms may mask different amounts of them.\n@@ -1648,31 +1665,34 @@ impl crate::error::Error for ExitStatusError {}\n /// [`SUCCESS`]: ExitCode::SUCCESS\n /// [`FAILURE`]: ExitCode::FAILURE\n ///\n-/// **Warning**: While various forms of this were discussed in [RFC #1937],\n-/// it was ultimately cut from that RFC, and thus this type is more subject\n-/// to change even than the usual unstable item churn.\n+/// # Differences from `ExitStatus`\n ///\n-/// [RFC #1937]: https://github.com/rust-lang/rfcs/pull/1937\n+/// `ExitCode` is intended for terminating the currently running process, via\n+/// the `Termination` trait, in contrast to [`ExitStatus`], which represents the\n+/// termination of a child process. These APIs are separate due to platform\n+/// compatibility differences and their expected usage; it is not generally\n+/// possible to exactly reproduce an ExitStatus from a child for the current\n+/// process after the fact.\n #[derive(Clone, Copy, Debug)]\n-#[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n pub struct ExitCode(imp::ExitCode);\n \n-#[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n impl ExitCode {\n     /// The canonical ExitCode for successful termination on this platform.\n     ///\n     /// Note that a `()`-returning `main` implicitly results in a successful\n     /// termination, so there's no need to return this from `main` unless\n     /// you're also returning other possible codes.\n-    #[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+    #[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n     pub const SUCCESS: ExitCode = ExitCode(imp::ExitCode::SUCCESS);\n \n     /// The canonical ExitCode for unsuccessful termination on this platform.\n     ///\n     /// If you're only returning this and `SUCCESS` from `main`, consider\n     /// instead returning `Err(_)` and `Ok(())` respectively, which will\n     /// return the same codes (but will also `eprintln!` the error).\n-    #[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+    #[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n     pub const FAILURE: ExitCode = ExitCode(imp::ExitCode::FAILURE);\n }\n \n@@ -1684,14 +1704,18 @@ impl ExitCode {\n     //\n     // More info: https://internals.rust-lang.org/t/mini-pre-rfc-redesigning-process-exitstatus/5426\n     /// Convert an ExitCode into an i32\n-    #[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+    #[unstable(\n+        feature = \"process_exitcode_internals\",\n+        reason = \"exposed only for libstd\",\n+        issue = \"none\"\n+    )]\n     #[inline]\n     pub fn to_i32(self) -> i32 {\n         self.0.as_i32()\n     }\n }\n \n-#[unstable(feature = \"process_exitcode_placeholder\", issue = \"48711\")]\n+#[stable(feature = \"process_exitcode\", since = \"1.60.0\")]\n impl From<u8> for ExitCode {\n     /// Construct an exit code from an arbitrary u8 value.\n     fn from(code: u8) -> Self {\n@@ -2031,26 +2055,27 @@ pub fn id() -> u32 {\n /// The default implementations are returning `libc::EXIT_SUCCESS` to indicate\n /// a successful execution. In case of a failure, `libc::EXIT_FAILURE` is returned.\n #[cfg_attr(not(test), lang = \"termination\")]\n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n #[rustc_on_unimplemented(\n     message = \"`main` has invalid return type `{Self}`\",\n     label = \"`main` can only return types that implement `{Termination}`\"\n )]\n pub trait Termination {\n     /// Is called to get the representation of the value as status code.\n     /// This status code is returned to the operating system.\n+    #[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n     fn report(self) -> ExitCode;\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl Termination for () {\n     #[inline]\n     fn report(self) -> ExitCode {\n         ExitCode::SUCCESS.report()\n     }\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl<E: fmt::Debug> Termination for Result<(), E> {\n     fn report(self) -> ExitCode {\n         match self {\n@@ -2060,14 +2085,14 @@ impl<E: fmt::Debug> Termination for Result<(), E> {\n     }\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl Termination for ! {\n     fn report(self) -> ExitCode {\n         self\n     }\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl<E: fmt::Debug> Termination for Result<!, E> {\n     fn report(self) -> ExitCode {\n         let Err(err) = self;\n@@ -2076,15 +2101,15 @@ impl<E: fmt::Debug> Termination for Result<!, E> {\n     }\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl<E: fmt::Debug> Termination for Result<Infallible, E> {\n     fn report(self) -> ExitCode {\n         let Err(err) = self;\n         Err::<!, _>(err).report()\n     }\n }\n \n-#[unstable(feature = \"termination_trait_lib\", issue = \"43301\")]\n+#[stable(feature = \"termination_trait_lib\", since = \"1.60.0\")]\n impl Termination for ExitCode {\n     #[inline]\n     fn report(self) -> ExitCode {"}, {"sha": "ff923528c39ce6c6113430a81fbf19d986dad87b", "filename": "library/test/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bdad89f950d374c128edffacd9872f7dbc72f78/library%2Ftest%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdad89f950d374c128edffacd9872f7dbc72f78/library%2Ftest%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Flib.rs?ref=7bdad89f950d374c128edffacd9872f7dbc72f78", "patch": "@@ -19,8 +19,7 @@\n #![feature(bench_black_box)]\n #![feature(internal_output_capture)]\n #![feature(staged_api)]\n-#![feature(termination_trait_lib)]\n-#![feature(process_exitcode_placeholder)]\n+#![feature(process_exitcode_internals)]\n #![feature(test)]\n #![feature(total_cmp)]\n "}, {"sha": "6d4c1562053b659f5ecbd9fdc22abea81f458cff", "filename": "src/test/ui/rfcs/rfc-1937-termination-trait/termination-trait-for-exitcode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bdad89f950d374c128edffacd9872f7dbc72f78/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdad89f950d374c128edffacd9872f7dbc72f78/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs?ref=7bdad89f950d374c128edffacd9872f7dbc72f78", "patch": "@@ -1,5 +1,4 @@\n // run-pass\n-#![feature(process_exitcode_placeholder)]\n \n use std::process::ExitCode;\n "}, {"sha": "c06a135dcbc203b0b32c58b3425cbf3765f56d6d", "filename": "src/test/ui/rfcs/rfc-1937-termination-trait/termination-trait-for-impl-termination.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bdad89f950d374c128edffacd9872f7dbc72f78/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bdad89f950d374c128edffacd9872f7dbc72f78/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-1937-termination-trait%2Ftermination-trait-for-impl-termination.rs?ref=7bdad89f950d374c128edffacd9872f7dbc72f78", "patch": "@@ -1,4 +1,3 @@\n // run-pass\n-#![feature(termination_trait_lib)]\n \n fn main() -> impl std::process::Termination { }"}]}