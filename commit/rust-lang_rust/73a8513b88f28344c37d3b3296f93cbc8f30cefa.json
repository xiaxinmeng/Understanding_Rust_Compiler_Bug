{"sha": "73a8513b88f28344c37d3b3296f93cbc8f30cefa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYTg1MTNiODhmMjgzNDRjMzdkM2IzMjk2ZjkzY2JjOGYzMGNlZmE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-02-15T00:14:31Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-02-15T00:14:31Z"}, "message": "Rebasing", "tree": {"sha": "e3f06d4aea1ff2bab8b3c108924b398d53cb630f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3f06d4aea1ff2bab8b3c108924b398d53cb630f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a8513b88f28344c37d3b3296f93cbc8f30cefa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a8513b88f28344c37d3b3296f93cbc8f30cefa", "html_url": "https://github.com/rust-lang/rust/commit/73a8513b88f28344c37d3b3296f93cbc8f30cefa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a8513b88f28344c37d3b3296f93cbc8f30cefa/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e1a6f6b363a04218583ab10bdf3cbe6bca41f00", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e1a6f6b363a04218583ab10bdf3cbe6bca41f00", "html_url": "https://github.com/rust-lang/rust/commit/4e1a6f6b363a04218583ab10bdf3cbe6bca41f00"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "59e79200568a05f46144b5875a545028c96b5e52", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73a8513b88f28344c37d3b3296f93cbc8f30cefa/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a8513b88f28344c37d3b3296f93cbc8f30cefa/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=73a8513b88f28344c37d3b3296f93cbc8f30cefa", "patch": "@@ -3254,7 +3254,7 @@ impl<'a> Parser<'a> {\n                     if self.token == token::CloseDelim(token::Brace) {\n                         self.bump();\n                     }\n-                    return Ok(self.mk_expr(lo, hi, ExprMatch(discriminant, arms), attrs));\n+                    return Ok(self.mk_expr(lo, hi, ExprKind::Match(discriminant, arms), attrs));\n                 }\n             }\n         }\n@@ -3772,7 +3772,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse a statement. may include decl.\n     pub fn parse_stmt(&mut self) -> PResult<'a, Option<Stmt>> {\n-        Ok(self.parse_stmt_().map(P))\n+        Ok(self.parse_stmt_())\n     }\n \n     // Eat tokens until we can be relatively sure we reached the end of the"}]}