{"sha": "74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YTc5ZmZmM2FhMTM3NGU2ZGM1ZWY3NWRlYjhmMjE2Y2IzMTM2Yzk=", "commit": {"author": {"name": "Michael Bebenita", "email": "mbebenita@mozilla.com", "date": "2010-07-28T23:58:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-29T03:30:30Z"}, "message": "Add a bunch of comm tests.", "tree": {"sha": "a8637f58321ac19e1eab66040b2bb7e446a98804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8637f58321ac19e1eab66040b2bb7e446a98804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "html_url": "https://github.com/rust-lang/rust/commit/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/comments", "author": {"login": "mbebenita", "id": 311082, "node_id": "MDQ6VXNlcjMxMTA4Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/311082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbebenita", "html_url": "https://github.com/mbebenita", "followers_url": "https://api.github.com/users/mbebenita/followers", "following_url": "https://api.github.com/users/mbebenita/following{/other_user}", "gists_url": "https://api.github.com/users/mbebenita/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbebenita/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbebenita/subscriptions", "organizations_url": "https://api.github.com/users/mbebenita/orgs", "repos_url": "https://api.github.com/users/mbebenita/repos", "events_url": "https://api.github.com/users/mbebenita/events{/privacy}", "received_events_url": "https://api.github.com/users/mbebenita/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70212c86976b1dc1396279ebddadf380a95909", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70212c86976b1dc1396279ebddadf380a95909", "html_url": "https://github.com/rust-lang/rust/commit/fa70212c86976b1dc1396279ebddadf380a95909"}], "stats": {"total": 173, "additions": 167, "deletions": 6}, "files": [{"sha": "c9081b8c7f7df3eca5c4d0adb277c7dba6a1187a", "filename": "src/Makefile", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -374,6 +374,7 @@ TEST_XFAILS_X86 :=  test/run-pass/bind-obj-ctor.rs \\\n                     test/run-pass/task-comm-2.rs \\\n                     test/run-pass/task-comm-3.rs \\\n                     test/run-pass/task-comm-5.rs \\\n+                    test/run-pass/task-comm-6.rs \\\n                     test/compile-fail/bad-recv.rs \\\n                     test/compile-fail/bad-send.rs \\\n                     test/compile-fail/infinite-tag-type-recursion.rs \\\n@@ -479,6 +480,10 @@ TEST_XFAILS_LLVM := $(addprefix test/run-pass/, \\\n                       task-comm-3.rs \\\n                       task-comm-4.rs \\\n                       task-comm-5.rs \\\n+                      task-comm-6.rs \\\n+                      task-comm-7.rs \\\n+                      task-comm-8.rs \\\n+                      task-comm-9.rs \\\n                       threads.rs \\\n                       type-sizes.rs \\\n                       u8-incr.rs \\"}, {"sha": "9c85da34cc20e4fdcaa76d9f9d8fe533bb6af507", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -1,8 +1,8 @@\n-fn main() -> () {\n-   log \"===== THREADS =====\";\n-   test00(true);\n-   log \"====== TASKS ======\";\n-   test00(false);\n+fn main() -> () {    \n+    log \"===== THREADS =====\";\n+    test00(true);\n+    log \"====== TASKS ======\";\n+   // test00(false);\n }\n \n fn start(int task_number) {\n@@ -15,7 +15,7 @@ fn start(int task_number) {\n }\n     \n fn test00(bool create_threads) {\n-    let int number_of_tasks = 32;\n+    let int number_of_tasks = 0;\n     \n     let int i = 0;\n     let vec[task] tasks = vec();\n@@ -31,4 +31,6 @@ fn test00(bool create_threads) {\n     for (task t in tasks) {\n         join t;\n     }\n+    \n+    log \"Joined all task.\";\n }\n\\ No newline at end of file"}, {"sha": "c579a98ca0a2e355bd67fb646cda010ba650b568", "filename": "src/test/run-pass/task-comm-6.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-6.rs?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -0,0 +1,36 @@\n+io fn main() -> () {\n+   test00();\n+}\n+\n+io fn test00() {\n+    let int r = 0;    \n+    let int sum = 0;\n+    let port[int] p = port();\n+    \n+    let chan[int] c0 = chan(p);\n+    let chan[int] c1 = chan(p);\n+    let chan[int] c2 = chan(p);\n+    let chan[int] c3 = chan(p);\n+    \n+    let int number_of_messages = 1000;\n+\n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        c0 <| i;\n+        c1 <| i;\n+        c2 <| i;\n+        c3 <| i;\n+        i += 1;\n+    }\n+\n+    i = 0;\n+    while (i < number_of_messages) {\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        i += 1;\n+    }\n+    \n+    check (sum == 4 * ((number_of_messages * (number_of_messages - 1)) / 2));\n+}\n\\ No newline at end of file"}, {"sha": "bb59807d5c57b4da8427cd15919f01a87f3db871", "filename": "src/test/run-pass/task-comm-7.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -0,0 +1,44 @@\n+io fn main() -> () {\n+   test00();\n+}\n+\n+io fn test00_start(chan[int] c, int start, int number_of_messages) {\n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        c <| start + i;\n+        i += 1;\n+    }    \n+}\n+\n+io fn test00() {\n+    let int r = 0;    \n+    let int sum = 0;\n+    let port[int] p = port();\n+    let int number_of_messages = 10;\n+        \n+    let task t0 = spawn test00_start(chan(p), \n+                        number_of_messages * 0, number_of_messages);\n+    let task t1 = spawn test00_start(chan(p), \n+                        number_of_messages * 1, number_of_messages);\n+    let task t2 = spawn test00_start(chan(p), \n+                        number_of_messages * 2, number_of_messages);\n+    let task t3 = spawn test00_start(chan(p), \n+                        number_of_messages * 3, number_of_messages);\n+    \n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        i += 1;\n+    }\n+            \n+    join t0;\n+    join t1;\n+    join t2;\n+    join t3;\n+    \n+    check (sum == (((number_of_messages * 4) * \n+                   ((number_of_messages * 4) - 1)) / 2));\n+}\n\\ No newline at end of file"}, {"sha": "c5f73a3f08e415dfe5983bc3a312c0db2d70a860", "filename": "src/test/run-pass/task-comm-8.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -0,0 +1,44 @@\n+io fn main() -> () {\n+   test00();\n+}\n+\n+io fn test00_start(chan[int] c, int start, int number_of_messages) {\n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        c <| start + i;\n+        i += 1;\n+    }    \n+}\n+\n+io fn test00() {\n+    let int r = 0;    \n+    let int sum = 0;\n+    let port[int] p = port();\n+    let int number_of_messages = 10;\n+        \n+    let task t0 = spawn thread test00_start(chan(p), \n+                               number_of_messages * 0, number_of_messages);\n+    let task t1 = spawn thread test00_start(chan(p), \n+                               number_of_messages * 1, number_of_messages);\n+    let task t2 = spawn thread test00_start(chan(p), \n+                               number_of_messages * 2, number_of_messages);\n+    let task t3 = spawn thread test00_start(chan(p), \n+                               number_of_messages * 3, number_of_messages);\n+    \n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        r <- p; sum += r;\n+        i += 1;\n+    }\n+            \n+    join t0;\n+    join t1;\n+    join t2;\n+    join t3;\n+    \n+    check (sum == (((number_of_messages * 4) * \n+                   ((number_of_messages * 4) - 1)) / 2));\n+}\n\\ No newline at end of file"}, {"sha": "e6ca84f5fe306a98d1d53fed8cd2c253201fd25e", "filename": "src/test/run-pass/task-comm-9.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74a79fff3aa1374e6dc5ef75deb8f216cb3136c9/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=74a79fff3aa1374e6dc5ef75deb8f216cb3136c9", "patch": "@@ -0,0 +1,30 @@\n+io fn main() -> () {\n+   test00();\n+}\n+\n+io fn test00_start(chan[int] c, int number_of_messages) {\n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        c <| i;\n+        i += 1;\n+    }    \n+}\n+\n+io fn test00() {\n+    let int r = 0;    \n+    let int sum = 0;\n+    let port[int] p = port();\n+    let int number_of_messages = 10;\n+        \n+    let task t0 = spawn thread test00_start(chan(p), number_of_messages);\n+    \n+    let int i = 0;\n+    while (i < number_of_messages) {\n+        r <- p; sum += r; log (r);\n+        i += 1;\n+    }\n+            \n+    join t0;\n+    \n+    check (sum == (number_of_messages * (number_of_messages - 1)) / 2);\n+}\n\\ No newline at end of file"}]}