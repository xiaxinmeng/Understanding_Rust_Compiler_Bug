{"sha": "c9c1346874299b3dac07b3f310429c00fe91c998", "node_id": "C_kwDOAAsO6NoAKGM5YzEzNDY4NzQyOTliM2RhYzA3YjNmMzEwNDI5YzAwZmU5MWM5OTg", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-03-24T14:48:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-24T14:48:40Z"}, "message": "Clarify that we are doing ptr.addr() internally\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "8e6f7fbcd879bb0349b382193f012bbf9d587559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e6f7fbcd879bb0349b382193f012bbf9d587559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9c1346874299b3dac07b3f310429c00fe91c998", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkHbhICRBK7hj4Ov3rIwAAqe0IAFlWQ9yS3ZCyX7Ynfuce6i3Q\nqee5jC2KIJ8im6Ki+n+pAz+atwd+UgDfhqcbDQGUXa+DTiQ+60ozGKdE0e2WlZ+6\nhx4hCQRq91hKLTF1JBMsI3GyWaTNXilj/S40dYTWL4Y7NV5ah/nv0+o2qeDU/fx+\ndCfEthv2139/TUBnx5kse2R8LaVT821D1A2xg/pROP6RSZKNBBeW/Ex0OV1dPD7N\n8KqYgcQ6ao5qu5th6hvXOoD6Jf47Y0uDEduTGEd4dJJWiWlUeBsLyFqu6+8HfXRk\nDqZsZp6aMpKUE3+jcCpRpQ9D+LOiGQP7Vl6Ut3pWyEnWx9dziBXfoSLkw2TyWPk=\n=AE+t\n-----END PGP SIGNATURE-----\n", "payload": "tree 8e6f7fbcd879bb0349b382193f012bbf9d587559\nparent 5896f8672da837e973bcabd9c415019205f3f8ef\nauthor Ben Kimock <kimockb@gmail.com> 1679669320 -0400\ncommitter GitHub <noreply@github.com> 1679669320 -0400\n\nClarify that we are doing ptr.addr() internally\n\nCo-authored-by: Ralf Jung <post@ralfj.de>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9c1346874299b3dac07b3f310429c00fe91c998", "html_url": "https://github.com/rust-lang/rust/commit/c9c1346874299b3dac07b3f310429c00fe91c998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9c1346874299b3dac07b3f310429c00fe91c998/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5896f8672da837e973bcabd9c415019205f3f8ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/5896f8672da837e973bcabd9c415019205f3f8ef", "html_url": "https://github.com/rust-lang/rust/commit/5896f8672da837e973bcabd9c415019205f3f8ef"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "694102388cfff0a8b38c149382ad53fff15b504d", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9c1346874299b3dac07b3f310429c00fe91c998/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9c1346874299b3dac07b3f310429c00fe91c998/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=c9c1346874299b3dac07b3f310429c00fe91c998", "patch": "@@ -136,7 +136,7 @@ fn insert_alignment_check<'tcx>(\n         .statements\n         .push(Statement { source_info, kind: StatementKind::Assign(Box::new((thin_ptr, rvalue))) });\n \n-    // Cast the pointer to a usize\n+    // Transmute the pointer to a usize (equivalent to `ptr.addr()`)\n     let rvalue = Rvalue::Cast(CastKind::Transmute, Operand::Copy(thin_ptr), tcx.types.usize);\n     let addr = local_decls.push(LocalDecl::with_source_info(tcx.types.usize, source_info)).into();\n     block_data"}]}