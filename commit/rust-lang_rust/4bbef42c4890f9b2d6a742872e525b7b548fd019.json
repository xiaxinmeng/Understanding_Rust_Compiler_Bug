{"sha": "4bbef42c4890f9b2d6a742872e525b7b548fd019", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmVmNDJjNDg5MGY5YjJkNmE3NDI4NzJlNTI1YjdiNTQ4ZmQwMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-07T10:01:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-07T10:01:46Z"}, "message": "Auto merge of #6272 - camsteffen:unnecesary-lazy-eval-type, r=llogiq\n\nFix unnecessary_lazy_eval suggestion applicability\n\nchangelog: Fix unnecessary_lazy_eval suggestion applicability when breaking type inference\n\nFixes #6240", "tree": {"sha": "708b22ef7f541e2d5fda3201ddf5d4a001e7574a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/708b22ef7f541e2d5fda3201ddf5d4a001e7574a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbef42c4890f9b2d6a742872e525b7b548fd019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbef42c4890f9b2d6a742872e525b7b548fd019", "html_url": "https://github.com/rust-lang/rust/commit/4bbef42c4890f9b2d6a742872e525b7b548fd019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbef42c4890f9b2d6a742872e525b7b548fd019/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ea08e1c534455c2867c34ed51582f900861a084", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ea08e1c534455c2867c34ed51582f900861a084", "html_url": "https://github.com/rust-lang/rust/commit/2ea08e1c534455c2867c34ed51582f900861a084"}, {"sha": "a6611de75a9c6cf8b0ccfa371491a646a743667f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6611de75a9c6cf8b0ccfa371491a646a743667f", "html_url": "https://github.com/rust-lang/rust/commit/a6611de75a9c6cf8b0ccfa371491a646a743667f"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "a867bdb326d722dfc0c089fda2fa6f8b6adc71d2", "filename": "clippy_lints/src/methods/unnecessary_lazy_eval.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4bbef42c4890f9b2d6a742872e525b7b548fd019/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbef42c4890f9b2d6a742872e525b7b548fd019/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_lazy_eval.rs?ref=4bbef42c4890f9b2d6a742872e525b7b548fd019", "patch": "@@ -33,6 +33,17 @@ pub(super) fn lint<'tcx>(\n                 } else {\n                     \"unnecessary closure used to substitute value for `Result::Err`\"\n                 };\n+                let applicability = if body\n+                    .params\n+                    .iter()\n+                    // bindings are checked to be unused above\n+                    .all(|param| matches!(param.pat.kind, hir::PatKind::Binding(..) | hir::PatKind::Wild))\n+                {\n+                    Applicability::MachineApplicable\n+                } else {\n+                    // replacing the lambda may break type inference\n+                    Applicability::MaybeIncorrect\n+                };\n \n                 span_lint_and_sugg(\n                     cx,\n@@ -46,7 +57,7 @@ pub(super) fn lint<'tcx>(\n                         simplify_using,\n                         snippet(cx, body_expr.span, \"..\"),\n                     ),\n-                    Applicability::MachineApplicable,\n+                    applicability,\n                 );\n             }\n         }"}, {"sha": "2e923bc97a2ef9036bc6309f24a1fe85437e70e2", "filename": "tests/ui/unnecessary_lazy_eval_unfixable.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4bbef42c4890f9b2d6a742872e525b7b548fd019/tests%2Fui%2Funnecessary_lazy_eval_unfixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbef42c4890f9b2d6a742872e525b7b548fd019/tests%2Fui%2Funnecessary_lazy_eval_unfixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval_unfixable.rs?ref=4bbef42c4890f9b2d6a742872e525b7b548fd019", "patch": "@@ -0,0 +1,18 @@\n+#![warn(clippy::unnecessary_lazy_evaluations)]\n+\n+struct Deep(Option<usize>);\n+\n+#[derive(Copy, Clone)]\n+struct SomeStruct {\n+    some_field: usize,\n+}\n+\n+fn main() {\n+    // fix will break type inference\n+    let _ = Ok(1).unwrap_or_else(|()| 2);\n+    mod e {\n+        pub struct E;\n+    }\n+    let _ = Ok(1).unwrap_or_else(|e::E| 2);\n+    let _ = Ok(1).unwrap_or_else(|SomeStruct { .. }| 2);\n+}"}, {"sha": "581d641cbf54bae9401667832921742285982ff7", "filename": "tests/ui/unnecessary_lazy_eval_unfixable.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4bbef42c4890f9b2d6a742872e525b7b548fd019/tests%2Fui%2Funnecessary_lazy_eval_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bbef42c4890f9b2d6a742872e525b7b548fd019/tests%2Fui%2Funnecessary_lazy_eval_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_lazy_eval_unfixable.stderr?ref=4bbef42c4890f9b2d6a742872e525b7b548fd019", "patch": "@@ -0,0 +1,22 @@\n+error: unnecessary closure used to substitute value for `Result::Err`\n+  --> $DIR/unnecessary_lazy_eval_unfixable.rs:12:13\n+   |\n+LL |     let _ = Ok(1).unwrap_or_else(|()| 2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `unwrap_or` instead: `Ok(1).unwrap_or(2)`\n+   |\n+   = note: `-D clippy::unnecessary-lazy-evaluations` implied by `-D warnings`\n+\n+error: unnecessary closure used to substitute value for `Result::Err`\n+  --> $DIR/unnecessary_lazy_eval_unfixable.rs:16:13\n+   |\n+LL |     let _ = Ok(1).unwrap_or_else(|e::E| 2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `unwrap_or` instead: `Ok(1).unwrap_or(2)`\n+\n+error: unnecessary closure used to substitute value for `Result::Err`\n+  --> $DIR/unnecessary_lazy_eval_unfixable.rs:17:13\n+   |\n+LL |     let _ = Ok(1).unwrap_or_else(|SomeStruct { .. }| 2);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Use `unwrap_or` instead: `Ok(1).unwrap_or(2)`\n+\n+error: aborting due to 3 previous errors\n+"}]}