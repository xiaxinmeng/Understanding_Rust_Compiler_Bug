{"sha": "a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZDdmMGJiZTk2MjgxMWQyZTUyMDc3NjJhYTkyYzIwNTljMzNkMWE=", "commit": {"author": {"name": "Matthias Schiffer", "email": "mschiffer@universe-factory.net", "date": "2020-04-13T22:21:19Z"}, "committer": {"name": "Matthias Schiffer", "email": "mschiffer@universe-factory.net", "date": "2020-05-19T23:16:11Z"}, "message": "Add tests for `#[ffi_const]` and `#[ffi_pure]` function attributes\n\nBased on the work of gnzlbg <gonzalobg88@gmail.com>.", "tree": {"sha": "6756d577c66c6b68d4a674eccced564bb31b8b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6756d577c66c6b68d4a674eccced564bb31b8b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "html_url": "https://github.com/rust-lang/rust/commit/a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/comments", "author": {"login": "NeoRaider", "id": 419139, "node_id": "MDQ6VXNlcjQxOTEzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/419139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeoRaider", "html_url": "https://github.com/NeoRaider", "followers_url": "https://api.github.com/users/NeoRaider/followers", "following_url": "https://api.github.com/users/NeoRaider/following{/other_user}", "gists_url": "https://api.github.com/users/NeoRaider/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeoRaider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeoRaider/subscriptions", "organizations_url": "https://api.github.com/users/NeoRaider/orgs", "repos_url": "https://api.github.com/users/NeoRaider/repos", "events_url": "https://api.github.com/users/NeoRaider/events{/privacy}", "received_events_url": "https://api.github.com/users/NeoRaider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NeoRaider", "id": 419139, "node_id": "MDQ6VXNlcjQxOTEzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/419139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NeoRaider", "html_url": "https://github.com/NeoRaider", "followers_url": "https://api.github.com/users/NeoRaider/followers", "following_url": "https://api.github.com/users/NeoRaider/following{/other_user}", "gists_url": "https://api.github.com/users/NeoRaider/gists{/gist_id}", "starred_url": "https://api.github.com/users/NeoRaider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NeoRaider/subscriptions", "organizations_url": "https://api.github.com/users/NeoRaider/orgs", "repos_url": "https://api.github.com/users/NeoRaider/repos", "events_url": "https://api.github.com/users/NeoRaider/events{/privacy}", "received_events_url": "https://api.github.com/users/NeoRaider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc236414b4bd609513899e651c41f314f71bac4", "url": "https://api.github.com/repos/rust-lang/rust/commits/abc236414b4bd609513899e651c41f314f71bac4", "html_url": "https://github.com/rust-lang/rust/commit/abc236414b4bd609513899e651c41f314f71bac4"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "440d022a12cba0ce3a6ba8cc5e466809e09f70dd", "filename": "src/test/codegen/ffi-const.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fcodegen%2Fffi-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fcodegen%2Fffi-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fffi-const.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: -C no-prepopulate-passes\n+#![crate_type = \"lib\"]\n+#![feature(ffi_const)]\n+\n+pub fn bar() { unsafe { foo() } }\n+\n+extern {\n+    // CHECK-LABEL: declare void @foo()\n+    // CHECK-SAME: [[ATTRS:#[0-9]+]]\n+    // CHECK-DAG: attributes [[ATTRS]] = { {{.*}}readnone{{.*}} }\n+    #[ffi_const] pub fn foo();\n+}"}, {"sha": "f0ebc1caa09bd1b4d21380773c199399f6ed1de4", "filename": "src/test/codegen/ffi-pure.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fcodegen%2Fffi-pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fcodegen%2Fffi-pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fffi-pure.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: -C no-prepopulate-passes\n+#![crate_type = \"lib\"]\n+#![feature(ffi_pure)]\n+\n+pub fn bar() { unsafe { foo() } }\n+\n+extern {\n+    // CHECK-LABEL: declare void @foo()\n+    // CHECK-SAME: [[ATTRS:#[0-9]+]]\n+    // CHECK-DAG: attributes [[ATTRS]] = { {{.*}}readonly{{.*}} }\n+    #[ffi_pure] pub fn foo();\n+}"}, {"sha": "27323b1b602806bac69f68b34e817af854c610d7", "filename": "src/test/ui/feature-gates/feature-gate-ffi_const.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,6 @@\n+#![crate_type = \"lib\"]\n+\n+extern {\n+    #[ffi_const] //~ ERROR the `#[ffi_const]` attribute is an experimental feature\n+    pub fn foo();\n+}"}, {"sha": "bed6a2ce48825d4d04d433118aa11123e3e549eb", "filename": "src/test/ui/feature-gates/feature-gate-ffi_const.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_const.stderr?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: the `#[ffi_const]` attribute is an experimental feature\n+  --> $DIR/feature-gate-ffi_const.rs:4:5\n+   |\n+LL |     #[ffi_const]\n+   |     ^^^^^^^^^^^^\n+   |\n+   = note: see issue #58328 <https://github.com/rust-lang/rust/issues/58328> for more information\n+   = help: add `#![feature(ffi_const)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "e24a686853c88f919eb0a996205df590cdd5bd5b", "filename": "src/test/ui/feature-gates/feature-gate-ffi_pure.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,6 @@\n+#![crate_type = \"lib\"]\n+\n+extern {\n+    #[ffi_pure] //~ ERROR the `#[ffi_pure]` attribute is an experimental feature\n+    pub fn foo();\n+}"}, {"sha": "2b0308fd661c2519303e07fd8acbbcb4d7663d6e", "filename": "src/test/ui/feature-gates/feature-gate-ffi_pure.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_pure.stderr?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: the `#[ffi_pure]` attribute is an experimental feature\n+  --> $DIR/feature-gate-ffi_pure.rs:4:5\n+   |\n+LL |     #[ffi_pure]\n+   |     ^^^^^^^^^^^\n+   |\n+   = note: see issue #58329 <https://github.com/rust-lang/rust/issues/58329> for more information\n+   = help: add `#![feature(ffi_pure)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "7aeb5a49a1b58a5be8ff5f799e5d5c4b8fb1c5f1", "filename": "src/test/ui/ffi_const.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_const.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,5 @@\n+#![feature(ffi_const)]\n+#![crate_type = \"lib\"]\n+\n+#[ffi_const] //~ ERROR `#[ffi_const]` may only be used on foreign functions\n+pub fn foo() {}"}, {"sha": "623551cc07bbb4ba288590180afa449d6c0bcf18", "filename": "src/test/ui/ffi_const.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_const.stderr?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,8 @@\n+error[E0756]: `#[ffi_const]` may only be used on foreign functions\n+  --> $DIR/ffi_const.rs:4:1\n+   |\n+LL | #[ffi_const]\n+   | ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "4bd9637f0832c74286d11040519eaa01512f0be4", "filename": "src/test/ui/ffi_const2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_const2.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,11 @@\n+#![feature(ffi_const, ffi_pure)]\n+\n+extern {\n+    #[ffi_pure] //~ ERROR `#[ffi_const]` function cannot be `#[ffi_pure]`\n+    #[ffi_const]\n+    pub fn baz();\n+}\n+\n+fn main() {\n+    unsafe { baz() };\n+}"}, {"sha": "0b401942c4792661797020c75891bf05be36a239", "filename": "src/test/ui/ffi_const2.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_const2.stderr?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,8 @@\n+error[E0757]: `#[ffi_const]` function cannot be `#[ffi_pure]`\n+  --> $DIR/ffi_const2.rs:4:5\n+   |\n+LL |     #[ffi_pure]\n+   |     ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "c37d34c8784bbf373cb003d1529c9175a15e3385", "filename": "src/test/ui/ffi_pure.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_pure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_pure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_pure.rs?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,5 @@\n+#![feature(ffi_pure)]\n+#![crate_type = \"lib\"]\n+\n+#[ffi_pure] //~ ERROR `#[ffi_pure]` may only be used on foreign functions\n+pub fn foo() {}"}, {"sha": "3a849c0bca79c2b3bbbff1bca646961bd8a75610", "filename": "src/test/ui/ffi_pure.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_pure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7d7f0bbe962811d2e5207762aa92c2059c33d1a/src%2Ftest%2Fui%2Fffi_pure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_pure.stderr?ref=a7d7f0bbe962811d2e5207762aa92c2059c33d1a", "patch": "@@ -0,0 +1,8 @@\n+error[E0755]: `#[ffi_pure]` may only be used on foreign functions\n+  --> $DIR/ffi_pure.rs:4:1\n+   |\n+LL | #[ffi_pure]\n+   | ^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}