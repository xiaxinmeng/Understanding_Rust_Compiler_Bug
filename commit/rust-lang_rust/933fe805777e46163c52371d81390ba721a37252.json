{"sha": "933fe805777e46163c52371d81390ba721a37252", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzM2ZlODA1Nzc3ZTQ2MTYzYzUyMzcxZDgxMzkwYmE3MjFhMzcyNTI=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-22T06:48:39Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-06-22T06:48:39Z"}, "message": "num_counters to u32, after implementing TypeFoldable", "tree": {"sha": "967af554f95725fa2c752e36911ecb9b92d6bc57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/967af554f95725fa2c752e36911ecb9b92d6bc57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/933fe805777e46163c52371d81390ba721a37252", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/933fe805777e46163c52371d81390ba721a37252", "html_url": "https://github.com/rust-lang/rust/commit/933fe805777e46163c52371d81390ba721a37252", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/933fe805777e46163c52371d81390ba721a37252/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c7c84b4e8923779ff56a518e4cd39c1c600c7d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c7c84b4e8923779ff56a518e4cd39c1c600c7d0", "html_url": "https://github.com/rust-lang/rust/commit/8c7c84b4e8923779ff56a518e4cd39c1c600c7d0"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "c6e7820a60ed481560859cba6f5d57feacec6584", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=933fe805777e46163c52371d81390ba721a37252", "patch": "@@ -146,7 +146,7 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n                 let (mangled_fn_name, _len_val) = self.const_str(mangled_fn.name);\n                 let hash = self.const_u64(coverage_data.hash);\n                 let index = args[0].immediate();\n-                let num_counters = self.const_u32(coverage_data.num_counters as u32);\n+                let num_counters = self.const_u32(coverage_data.num_counters);\n                 debug!(\n                     \"count_code_region to LLVM intrinsic instrprof.increment(fn_name={}, hash={:?}, num_counters={:?}, index={:?})\",\n                     mangled_fn.name, hash, index, num_counters"}, {"sha": "e88329db992f59c1e3aab9b863e9b7c91cf834b3", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=933fe805777e46163c52371d81390ba721a37252", "patch": "@@ -98,7 +98,7 @@ pub struct CoverageData {\n     pub hash: u64,\n \n     /// The total number of coverage region counters added to this MIR Body.\n-    pub num_counters: usize,\n+    pub num_counters: u32,\n }\n \n /// The lowered representation of a single function."}, {"sha": "463e2c57d46c9cb08b9842c346b801eccb348672", "filename": "src/librustc_middle/ty/structural_impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fstructural_impls.rs?ref=933fe805777e46163c52371d81390ba721a37252", "patch": "@@ -262,6 +262,7 @@ CloneTypeFoldableAndLiftImpls! {\n     bool,\n     usize,\n     ::rustc_target::abi::VariantIdx,\n+    u32,\n     u64,\n     String,\n     crate::middle::region::Scope,"}, {"sha": "a24d0acf4212cff3062b72f03f2b8697fe0e4f9a", "filename": "src/librustc_mir/transform/instrument_coverage.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933fe805777e46163c52371d81390ba721a37252/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finstrument_coverage.rs?ref=933fe805777e46163c52371d81390ba721a37252", "patch": "@@ -21,7 +21,7 @@ pub struct InstrumentCoverage;\n \n struct Instrumentor<'tcx> {\n     tcx: TyCtxt<'tcx>,\n-    num_counters: usize,\n+    num_counters: u32,\n }\n \n impl<'tcx> MirPass<'tcx> for InstrumentCoverage {\n@@ -55,12 +55,12 @@ impl<'tcx> Instrumentor<'tcx> {\n     }\n \n     fn next_counter(&mut self) -> u32 {\n-        let next = self.num_counters as u32;\n+        let next = self.num_counters;\n         self.num_counters += 1;\n         next\n     }\n \n-    fn inject_counters(&mut self, mir_body: &mut mir::Body<'tcx>) -> usize {\n+    fn inject_counters(&mut self, mir_body: &mut mir::Body<'tcx>) -> u32 {\n         // FIXME(richkadel): As a first step, counters are only injected at the top of each\n         // function. The complete solution will inject counters at each conditional code branch.\n         let top_of_function = START_BLOCK;"}]}