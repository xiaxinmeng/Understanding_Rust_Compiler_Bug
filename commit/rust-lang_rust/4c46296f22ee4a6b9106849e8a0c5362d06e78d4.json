{"sha": "4c46296f22ee4a6b9106849e8a0c5362d06e78d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNDYyOTZmMjJlZTRhNmI5MTA2ODQ5ZThhMGM1MzYyZDA2ZTc4ZDQ=", "commit": {"author": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-08-28T08:57:34Z"}, "committer": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-09-09T08:41:18Z"}, "message": "fix match", "tree": {"sha": "b52b8d2d92663c11fadb4a58bd17eab7c46279e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52b8d2d92663c11fadb4a58bd17eab7c46279e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c46296f22ee4a6b9106849e8a0c5362d06e78d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c46296f22ee4a6b9106849e8a0c5362d06e78d4", "html_url": "https://github.com/rust-lang/rust/commit/4c46296f22ee4a6b9106849e8a0c5362d06e78d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c46296f22ee4a6b9106849e8a0c5362d06e78d4/comments", "author": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cd48b008630cda27e2f1a082f9bab33d13a340", "url": "https://api.github.com/repos/rust-lang/rust/commits/05cd48b008630cda27e2f1a082f9bab33d13a340", "html_url": "https://github.com/rust-lang/rust/commit/05cd48b008630cda27e2f1a082f9bab33d13a340"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "25b1752afadbddce79de5cd10c287ec181ac1615", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c46296f22ee4a6b9106849e8a0c5362d06e78d4/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c46296f22ee4a6b9106849e8a0c5362d06e78d4/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=4c46296f22ee4a6b9106849e8a0c5362d06e78d4", "patch": "@@ -811,8 +811,10 @@ pub struct Scalar {\n impl Scalar {\n     #[inline]\n     pub fn is_bool(&self) -> bool {\n-        matches!(self.value, Int(I8, false))\n-            && matches!(self.valid_range, WrappingRange { start: 0, end: 1 })\n+        matches!(\n+            self,\n+            Scalar { value: Int(I8, false), valid_range: WrappingRange { start: 0, end: 1 } }\n+        )\n     }\n \n     /// Returns `true` if all possible numbers are valid, i.e `valid_range` covers the whole layout"}]}