{"sha": "846891aeff1a2a73524c404c6eeff5e8daf4caa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0Njg5MWFlZmYxYTJhNzM1MjRjNDA0YzZlZWZmNWU4ZGFmNGNhYTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-24T10:06:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-24T10:06:41Z"}, "message": "Auto merge of #41494 - withoutboats:associated-consts-are-not-object-safe, r=eddyb\n\nAssociated consts are not object safe.\n\nfixes #26847\n\nr? @eddyb", "tree": {"sha": "c9debfab51f5cf77e656d95fe83eb1b392691a95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9debfab51f5cf77e656d95fe83eb1b392691a95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/846891aeff1a2a73524c404c6eeff5e8daf4caa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/846891aeff1a2a73524c404c6eeff5e8daf4caa2", "html_url": "https://github.com/rust-lang/rust/commit/846891aeff1a2a73524c404c6eeff5e8daf4caa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/846891aeff1a2a73524c404c6eeff5e8daf4caa2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ce54096a589de277771ad1f55a334fe2661a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ce54096a589de277771ad1f55a334fe2661a64", "html_url": "https://github.com/rust-lang/rust/commit/15ce54096a589de277771ad1f55a334fe2661a64"}, {"sha": "5dc43d272dcc1c7ba256f2d9cb88454c1770e053", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dc43d272dcc1c7ba256f2d9cb88454c1770e053", "html_url": "https://github.com/rust-lang/rust/commit/5dc43d272dcc1c7ba256f2d9cb88454c1770e053"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "e53932888022b311264b69d5d1abde6fd3678781", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/846891aeff1a2a73524c404c6eeff5e8daf4caa2/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846891aeff1a2a73524c404c6eeff5e8daf4caa2/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=846891aeff1a2a73524c404c6eeff5e8daf4caa2", "patch": "@@ -37,6 +37,9 @@ pub enum ObjectSafetyViolation {\n \n     /// Method has something illegal\n     Method(ast::Name, MethodViolationCode),\n+\n+    /// Associated const\n+    AssociatedConst(ast::Name),\n }\n \n impl ObjectSafetyViolation {\n@@ -54,6 +57,8 @@ impl ObjectSafetyViolation {\n                          in its arguments or return type\", name).into(),\n             ObjectSafetyViolation::Method(name, MethodViolationCode::Generic) =>\n                 format!(\"method `{}` has generic type parameters\", name).into(),\n+            ObjectSafetyViolation::AssociatedConst(name) =>\n+                format!(\"the trait cannot contain associated consts like `{}`\", name).into(),\n         }\n     }\n }\n@@ -141,6 +146,10 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             violations.push(ObjectSafetyViolation::SupertraitSelf);\n         }\n \n+        violations.extend(self.associated_items(trait_def_id)\n+            .filter(|item| item.kind == ty::AssociatedKind::Const)\n+            .map(|item| ObjectSafetyViolation::AssociatedConst(item.name)));\n+\n         debug!(\"object_safety_violations_for_trait(trait_def_id={:?}) = {:?}\",\n                trait_def_id,\n                violations);"}, {"sha": "c442cd4083657f6045c447acb3dc7f2998f753eb", "filename": "src/test/compile-fail/object-safety-associated-consts.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/846891aeff1a2a73524c404c6eeff5e8daf4caa2/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846891aeff1a2a73524c404c6eeff5e8daf4caa2/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-safety-associated-consts.rs?ref=846891aeff1a2a73524c404c6eeff5e8daf4caa2", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that we correctly prevent users from making trait objects\n+// from traits with associated consts.\n+\n+#![feature(associated_consts)]\n+\n+trait Bar {\n+    const X: usize;\n+}\n+\n+fn make_bar<T:Bar>(t: &T) -> &Bar {\n+    //~^ ERROR E0038\n+    //~| NOTE the trait cannot contain associated consts like `X`\n+    //~| NOTE the trait `Bar` cannot be made into an object\n+    t\n+}\n+\n+fn main() {\n+}"}]}