{"sha": "df921190f3e8236892094a0f45aa5cc77e10f3d2", "node_id": "C_kwDOAAsO6NoAKGRmOTIxMTkwZjNlODIzNjg5MjA5NGEwZjQ1YWE1Y2M3N2UxMGYzZDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-03T13:44:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-03T13:44:20Z"}, "message": "Rollup merge of #92418 - dtolnay:emptystructpat, r=michaelwoerister\n\nFix spacing in pretty printed PatKind::Struct with no fields\n\nFollow-up to #92238 fixing one of the FIXMEs.\n\n```rust\nmacro_rules! repro {\n    ($pat:pat) => {\n        stringify!($pat)\n    };\n}\n\nfn main() {\n    println!(\"{}\", repro!(Struct {}));\n}\n```\n\nBefore:&ensp;<code>Struct&nbsp;{&nbsp;&nbsp;}</code>\nAfter:&ensp;<code>Struct&nbsp;{}</code>", "tree": {"sha": "d47b205f814bbfac2729822ac63d3bcb3c5b60c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d47b205f814bbfac2729822ac63d3bcb3c5b60c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df921190f3e8236892094a0f45aa5cc77e10f3d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh0v21CRBK7hj4Ov3rIwAAQwcIAFGV6w4DaT6grX770snIFNHO\nNK7icy4X2/5ZhN3POedjaxazk6Cezm24gcn3Sk2ewdm7BKs4GivJwJEQFKnu5ios\nk2GdcouKuhRrYUxyW8HMR/DEvQueSy6BAlRiXqldAWXvwM3XYVgckvDJ87Y+MgTF\nNi6qZDVMB0MZ1gOawm2qS+yMXXmZVTFPVxmz1FUDn2cSdLqC3i5hJJjPOB86PjuV\n7mz1EbxiqMEGgrcxeii/uO6X+uvNNPoJqDJbBU5e5iJkBgi0SqXqmXozklG45B2y\nwM4I7olhfWQuq/Xd+fMIoBFz42YLr4amxkbNdthmIwoqZlSoUPe213PQ03LoFYk=\n=D0fP\n-----END PGP SIGNATURE-----\n", "payload": "tree d47b205f814bbfac2729822ac63d3bcb3c5b60c3\nparent 92f28bda38500e9ba33399e49c297323968109d1\nparent 8d7cf1a4cae07489c375af7bd03923012774dadd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641217460 +0100\ncommitter GitHub <noreply@github.com> 1641217460 +0100\n\nRollup merge of #92418 - dtolnay:emptystructpat, r=michaelwoerister\n\nFix spacing in pretty printed PatKind::Struct with no fields\n\nFollow-up to #92238 fixing one of the FIXMEs.\n\n```rust\nmacro_rules! repro {\n    ($pat:pat) => {\n        stringify!($pat)\n    };\n}\n\nfn main() {\n    println!(\"{}\", repro!(Struct {}));\n}\n```\n\nBefore:&ensp;<code>Struct&nbsp;{&nbsp;&nbsp;}</code>\nAfter:&ensp;<code>Struct&nbsp;{}</code>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df921190f3e8236892094a0f45aa5cc77e10f3d2", "html_url": "https://github.com/rust-lang/rust/commit/df921190f3e8236892094a0f45aa5cc77e10f3d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df921190f3e8236892094a0f45aa5cc77e10f3d2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92f28bda38500e9ba33399e49c297323968109d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/92f28bda38500e9ba33399e49c297323968109d1", "html_url": "https://github.com/rust-lang/rust/commit/92f28bda38500e9ba33399e49c297323968109d1"}, {"sha": "8d7cf1a4cae07489c375af7bd03923012774dadd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7cf1a4cae07489c375af7bd03923012774dadd", "html_url": "https://github.com/rust-lang/rust/commit/8d7cf1a4cae07489c375af7bd03923012774dadd"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "91fa4595241dc764c31d291769b0fbb4f196b659", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df921190f3e8236892094a0f45aa5cc77e10f3d2/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df921190f3e8236892094a0f45aa5cc77e10f3d2/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=df921190f3e8236892094a0f45aa5cc77e10f3d2", "patch": "@@ -2461,7 +2461,11 @@ impl<'a> State<'a> {\n                     self.print_path(path, true, 0);\n                 }\n                 self.nbsp();\n-                self.word_space(\"{\");\n+                self.word(\"{\");\n+                let empty = fields.is_empty() && !etc;\n+                if !empty {\n+                    self.space();\n+                }\n                 self.commasep_cmnt(\n                     Consistent,\n                     &fields,\n@@ -2482,7 +2486,9 @@ impl<'a> State<'a> {\n                     }\n                     self.word(\"..\");\n                 }\n-                self.space();\n+                if !empty {\n+                    self.space();\n+                }\n                 self.word(\"}\");\n             }\n             PatKind::Tuple(ref elts) => {"}, {"sha": "c17286dfbe38eeda17f547cc49c06611e8757550", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/df921190f3e8236892094a0f45aa5cc77e10f3d2/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df921190f3e8236892094a0f45aa5cc77e10f3d2/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=df921190f3e8236892094a0f45aa5cc77e10f3d2", "patch": "@@ -1874,7 +1874,11 @@ impl<'a> State<'a> {\n             PatKind::Struct(ref qpath, ref fields, etc) => {\n                 self.print_qpath(qpath, true);\n                 self.nbsp();\n-                self.word_space(\"{\");\n+                self.word(\"{\");\n+                let empty = fields.is_empty() && !etc;\n+                if !empty {\n+                    self.space();\n+                }\n                 self.commasep_cmnt(\n                     Consistent,\n                     &fields,\n@@ -1895,7 +1899,9 @@ impl<'a> State<'a> {\n                     }\n                     self.word(\"..\");\n                 }\n-                self.space();\n+                if !empty {\n+                    self.space();\n+                }\n                 self.word(\"}\");\n             }\n             PatKind::Or(ref pats) => {"}, {"sha": "90983f35a5ebf0595e17a0f51e8e42d7718beb88", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df921190f3e8236892094a0f45aa5cc77e10f3d2/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df921190f3e8236892094a0f45aa5cc77e10f3d2/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=df921190f3e8236892094a0f45aa5cc77e10f3d2", "patch": "@@ -661,9 +661,9 @@ fn test_pat() {\n     assert_eq!(stringify_pat!(ref mut _x @ _), \"ref mut _x @ _\");\n \n     // PatKind::Struct\n-    assert_eq!(stringify_pat!(Struct {}), \"Struct {  }\"); // FIXME\n-    assert_eq!(stringify_pat!(Struct::<u8> {}), \"Struct::<u8> {  }\");\n-    assert_eq!(stringify_pat!(Struct::<'static> {}), \"Struct::<'static> {  }\");\n+    assert_eq!(stringify_pat!(Struct {}), \"Struct {}\");\n+    assert_eq!(stringify_pat!(Struct::<u8> {}), \"Struct::<u8> {}\");\n+    assert_eq!(stringify_pat!(Struct::<'static> {}), \"Struct::<'static> {}\");\n     assert_eq!(stringify_pat!(Struct { x }), \"Struct { x }\");\n     assert_eq!(stringify_pat!(Struct { x: _x }), \"Struct { x: _x }\");\n     assert_eq!(stringify_pat!(Struct { .. }), \"Struct { .. }\");\n@@ -672,7 +672,7 @@ fn test_pat() {\n     #[rustfmt::skip] // https://github.com/rust-lang/rustfmt/issues/5151\n     assert_eq!(\n         stringify_pat!(<Struct as Trait>::Type {}),\n-        \"<Struct as Trait>::Type {  }\",\n+        \"<Struct as Trait>::Type {}\",\n     );\n \n     // PatKind::TupleStruct"}]}