{"sha": "1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNmYxZGM1OGQzZjZjMDY4ZjA5NWNlNTg4Y2M3YmE3ZmM2MjVlZDU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T21:31:44Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-06-04T21:31:44Z"}, "message": "rustc: Add a next_ann method to ext_ctxt\n\nAfter this we can remove the parser from the syntax extensions, at least for\nnow.", "tree": {"sha": "e34082527c1b0e9370c561a9d3bd0c85629cb027", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e34082527c1b0e9370c561a9d3bd0c85629cb027"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "html_url": "https://github.com/rust-lang/rust/commit/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ca5fff195cfb37e102d5686bbce4b570eb6fda2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca5fff195cfb37e102d5686bbce4b570eb6fda2", "html_url": "https://github.com/rust-lang/rust/commit/3ca5fff195cfb37e102d5686bbce4b570eb6fda2"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "0d34c8389cb766d90ec02edc7dd665437927fe43", "filename": "src/comp/front/ext.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5/src%2Fcomp%2Ffront%2Fext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5/src%2Fcomp%2Ffront%2Fext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fext.rs?ref=1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "patch": "@@ -2,6 +2,7 @@ import std::option;\n import std::map::hashmap;\n \n import driver::session::session;\n+import front::parser::parser;\n import util::common::span;\n import util::common::new_str_hash;\n \n@@ -24,13 +25,17 @@ fn syntax_expander_table() -> hashmap[str, syntax_extension] {\n }\n \n type span_msg_fn = fn (span sp, str msg) -> !;\n+type next_ann_fn = fn () -> ast::ann;\n \n // Provides a limited set of services necessary for syntax extensions\n // to do their thing\n type ext_ctxt = rec(span_msg_fn span_err,\n-                    span_msg_fn span_unimpl);\n+                    span_msg_fn span_unimpl,\n+                    next_ann_fn next_ann);\n+\n+fn mk_ctxt(parser parser) -> ext_ctxt {\n+    auto sess = parser.get_session();\n \n-fn mk_ctxt(session sess) -> ext_ctxt {\n     fn ext_span_err_(session sess, span sp, str msg) -> ! {\n         sess.span_err(sp, msg);\n     }\n@@ -41,8 +46,12 @@ fn mk_ctxt(session sess) -> ext_ctxt {\n     }\n     auto ext_span_unimpl = bind ext_span_unimpl_(sess, _, _);\n \n+    fn ext_next_ann_(parser parser) -> ast::ann { parser.get_ann() }\n+    auto ext_next_ann = bind ext_next_ann_(parser);\n+\n     ret rec(span_err = ext_span_err,\n-            span_unimpl = ext_span_unimpl);\n+            span_unimpl = ext_span_unimpl,\n+            next_ann = ext_next_ann);\n }\n \n //"}, {"sha": "1663585971a05bf1cb730ded180e979be53590af", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=1d6f1dc58d3f6c068f095ce588cc7ba7fc625ed5", "patch": "@@ -1048,7 +1048,7 @@ fn expand_syntax_ext(&parser p, common::span sp,\n             p.err(\"unknown syntax expander: '\" + extname + \"'\");\n         }\n         case (some(ext::x(?ext))) {\n-            auto ext_cx = ext::mk_ctxt(p.get_session());\n+            auto ext_cx = ext::mk_ctxt(p);\n             ret ast::expr_ext(path, args, body,\n                               ext(ext_cx, p, sp, args, body), \n                               p.get_ann());"}]}