{"sha": "72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZmJmOWYwZmVlMWFmMmY5MThkM2E5YTRlMzc3NjA1YWUxNThmMmE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-28T22:06:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-11-28T22:06:10Z"}, "message": "fixup test cases", "tree": {"sha": "3920bd9663fdfb4c88cf7ac6e3750d9440f810ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3920bd9663fdfb4c88cf7ac6e3750d9440f810ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "html_url": "https://github.com/rust-lang/rust/commit/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dac987e355deb903493d22c0ae8a8a4fd072d1c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dac987e355deb903493d22c0ae8a8a4fd072d1c5", "html_url": "https://github.com/rust-lang/rust/commit/dac987e355deb903493d22c0ae8a8a4fd072d1c5"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "adc2b23441ef817355c6af0d2ff05a4cb878c388", "filename": "src/test/incremental/add_private_fn_at_krate_root_cc/auxiliary/point.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fauxiliary%2Fpoint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fauxiliary%2Fpoint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fauxiliary%2Fpoint.rs?ref=72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "patch": "@@ -17,7 +17,7 @@ pub struct Point {\n fn unused_helper() {\n }\n \n-fn distance_squared(this: &Point) -> f32 {\n+pub fn distance_squared(this: &Point) -> f32 {\n     return this.x * this.x + this.y * this.y;\n }\n \n@@ -26,10 +26,3 @@ impl Point {\n         distance_squared(self).sqrt()\n     }\n }\n-\n-impl Point {\n-    pub fn translate(&mut self, x: f32, y: f32) {\n-        self.x += x;\n-        self.y += y;\n-    }\n-}"}, {"sha": "489427ba1c126202be6eafe31f9d379f7a99074a", "filename": "src/test/incremental/add_private_fn_at_krate_root_cc/struct_point.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fbf9f0fee1af2f918d3a9a4e377605ae158f2a/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs?ref=72fbf9f0fee1af2f918d3a9a4e377605ae158f2a", "patch": "@@ -21,14 +21,14 @@\n #![allow(dead_code)]\n \n #![rustc_partition_reused(module=\"struct_point-fn_calls_methods_in_same_impl\", cfg=\"rpass2\")]\n-#![rustc_partition_reused(module=\"struct_point-fn_calls_methods_in_another_impl\", cfg=\"rpass2\")]\n+#![rustc_partition_reused(module=\"struct_point-fn_calls_free_fn\", cfg=\"rpass2\")]\n #![rustc_partition_reused(module=\"struct_point-fn_read_field\", cfg=\"rpass2\")]\n #![rustc_partition_reused(module=\"struct_point-fn_write_field\", cfg=\"rpass2\")]\n #![rustc_partition_reused(module=\"struct_point-fn_make_struct\", cfg=\"rpass2\")]\n \n extern crate point;\n \n-/// A fn item that calls (public) methods on `Point` from the same impl which changed\n+/// A fn item that calls (public) methods on `Point` from the same impl\n mod fn_calls_methods_in_same_impl {\n     use point::Point;\n \n@@ -40,13 +40,13 @@ mod fn_calls_methods_in_same_impl {\n }\n \n /// A fn item that calls (public) methods on `Point` from another impl\n-mod fn_calls_methods_in_another_impl {\n-    use point::Point;\n+mod fn_calls_free_fn {\n+    use point::{self, Point};\n \n     #[rustc_clean(label=\"TypeckItemBody\", cfg=\"rpass2\")]\n     pub fn check() {\n-        let mut x = Point { x: 2.0, y: 2.0 };\n-        x.translate(3.0, 3.0);\n+        let x = Point { x: 2.0, y: 2.0 };\n+        point::distance_squared(&x);\n     }\n }\n "}]}