{"sha": "fbeee04f31ac16fe61f29749145a29e562d065fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZWVlMDRmMzFhYzE2ZmU2MWYyOTc0OTE0NWEyOWU1NjJkMDY1ZmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-13T15:51:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-13T15:51:27Z"}, "message": "auto merge of #15507 : jakub-/rust/iterate, r=alexcrichton\n\nThe new iterator takes a function and produces an infinite stream\r\nof results of repeated applications of the function, starting from\r\nthe provided seed value.", "tree": {"sha": "03c9478233703eaee69994a328ee40ceac57be27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03c9478233703eaee69994a328ee40ceac57be27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbeee04f31ac16fe61f29749145a29e562d065fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbeee04f31ac16fe61f29749145a29e562d065fe", "html_url": "https://github.com/rust-lang/rust/commit/fbeee04f31ac16fe61f29749145a29e562d065fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbeee04f31ac16fe61f29749145a29e562d065fe/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55cf6d723c40bf720d7d9f9ed3a5833caa8faf1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/55cf6d723c40bf720d7d9f9ed3a5833caa8faf1a", "html_url": "https://github.com/rust-lang/rust/commit/55cf6d723c40bf720d7d9f9ed3a5833caa8faf1a"}, {"sha": "ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed54162e86cd00b7a4ced8957aac7f56897f6fb5", "html_url": "https://github.com/rust-lang/rust/commit/ed54162e86cd00b7a4ced8957aac7f56897f6fb5"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "855bccb07a7418305a90f1e19d83187a1e13af6b", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbeee04f31ac16fe61f29749145a29e562d065fe/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbeee04f31ac16fe61f29749145a29e562d065fe/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=fbeee04f31ac16fe61f29749145a29e562d065fe", "patch": "@@ -64,14 +64,14 @@ the rest of the rust manuals.\n \n */\n \n+use clone::Clone;\n use cmp;\n+use cmp::{PartialEq, PartialOrd, Ord};\n+use mem;\n use num::{Zero, One, CheckedAdd, CheckedSub, Saturating, ToPrimitive, Int};\n-use option::{Option, Some, None};\n use ops::{Add, Mul, Sub};\n-use cmp::{PartialEq, PartialOrd, Ord};\n-use clone::Clone;\n+use option::{Option, Some, None};\n use uint;\n-use mem;\n \n /// Conversion from an `Iterator`\n pub trait FromIterator<A> {\n@@ -2192,6 +2192,27 @@ impl<A: Clone> RandomAccessIterator<A> for Repeat<A> {\n     fn idx(&mut self, _: uint) -> Option<A> { Some(self.element.clone()) }\n }\n \n+type IterateState<'a, T> = (|T|: 'a -> T, Option<T>, bool);\n+\n+/// An iterator that repeatedly applies a given function, starting\n+/// from a given seed value.\n+pub type Iterate<'a, T> = Unfold<'a, T, IterateState<'a, T>>;\n+\n+/// Creates a new iterator that produces an infinite sequence of\n+/// repeated applications of the given function `f`.\n+#[allow(visible_private_types)]\n+pub fn iterate<'a, T: Clone>(f: |T|: 'a -> T, seed: T) -> Iterate<'a, T> {\n+    Unfold::new((f, Some(seed), true), |st| {\n+        let &(ref mut f, ref mut val, ref mut first) = st;\n+        if *first {\n+            *first = false;\n+        } else {\n+            val.mutate(|x| (*f)(x));\n+        }\n+        val.clone()\n+    })\n+}\n+\n /// Functions for lexicographical ordering of sequences.\n ///\n /// Lexicographical ordering through `<`, `<=`, `>=`, `>` requires"}, {"sha": "64c336093996d6b44c079a7344d9ebb6b75c6b43", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fbeee04f31ac16fe61f29749145a29e562d065fe/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbeee04f31ac16fe61f29749145a29e562d065fe/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=fbeee04f31ac16fe61f29749145a29e562d065fe", "patch": "@@ -833,3 +833,12 @@ fn test_min_max_result() {\n     let r = MinMax(1i,2);\n     assert_eq!(r.into_option(), Some((1,2)));\n }\n+\n+#[test]\n+fn test_iterate() {\n+    let mut it = iterate(|x| x * 2, 1u);\n+    assert_eq!(it.next(), Some(1u));\n+    assert_eq!(it.next(), Some(2u));\n+    assert_eq!(it.next(), Some(4u));\n+    assert_eq!(it.next(), Some(8u));\n+}"}]}