{"sha": "e30c533eb67ba8a24708a94385849854c17e67f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMGM1MzNlYjY3YmE4YTI0NzA4YTk0Mzg1ODQ5ODU0YzE3ZTY3Zjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:19:37Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T12:19:37Z"}, "message": "move stuct to code_model_api", "tree": {"sha": "95f42bac96ce8c851938854860746be65e535acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95f42bac96ce8c851938854860746be65e535acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e30c533eb67ba8a24708a94385849854c17e67f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e30c533eb67ba8a24708a94385849854c17e67f9", "html_url": "https://github.com/rust-lang/rust/commit/e30c533eb67ba8a24708a94385849854c17e67f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e30c533eb67ba8a24708a94385849854c17e67f9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bb1cb7017aab6fddb38eae3ca671ecbdaedb4da", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb1cb7017aab6fddb38eae3ca671ecbdaedb4da", "html_url": "https://github.com/rust-lang/rust/commit/3bb1cb7017aab6fddb38eae3ca671ecbdaedb4da"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "4b35c01b3ff7b4def79e076b3f20735d96db8b47", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 4, "deletions": 20, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=e30c533eb67ba8a24708a94385849854c17e67f9", "patch": "@@ -4,41 +4,25 @@ use ra_db::Cancelable;\n use ra_syntax::ast::{self, NameOwner, StructFlavor};\n \n use crate::{\n-    DefId, Name, AsName,\n+    DefId, Name, AsName, Struct,\n     db::HirDatabase,\n     type_ref::TypeRef,\n };\n \n-pub struct Struct {\n-    def_id: DefId,\n-}\n-\n impl Struct {\n     pub(crate) fn new(def_id: DefId) -> Self {\n         Struct { def_id }\n     }\n \n-    pub fn def_id(&self) -> DefId {\n-        self.def_id\n-    }\n-\n-    pub fn variant_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<VariantData>> {\n-        Ok(db.struct_data(self.def_id)?.variant_data.clone())\n-    }\n-\n-    pub fn struct_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<StructData>> {\n+    pub(crate) fn struct_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<StructData>> {\n         Ok(db.struct_data(self.def_id)?)\n     }\n-\n-    pub fn name(&self, db: &impl HirDatabase) -> Cancelable<Option<Name>> {\n-        Ok(db.struct_data(self.def_id)?.name.clone())\n-    }\n }\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct StructData {\n-    name: Option<Name>,\n-    variant_data: Arc<VariantData>,\n+    pub(crate) name: Option<Name>,\n+    pub(crate) variant_data: Arc<VariantData>,\n }\n \n impl StructData {"}, {"sha": "12947da2d308a03747be6dd9d94a890f035a26ac", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=e30c533eb67ba8a24708a94385849854c17e67f9", "patch": "@@ -1,8 +1,10 @@\n+use std::sync::Arc;\n+\n use relative_path::RelativePathBuf;\n use ra_db::{CrateId, Cancelable, FileId};\n use ra_syntax::{ast, TreePtr, SyntaxNode};\n \n-use crate::{Name, db::HirDatabase, DefId, Path, PerNs, nameres::ModuleScope};\n+use crate::{Name, db::HirDatabase, DefId, Path, PerNs, nameres::ModuleScope, adt::VariantData};\n \n /// hir::Crate describes a single crate. It's the main inteface with which\n /// crate's dependencies interact. Mostly, it should be just a proxy for the\n@@ -111,3 +113,21 @@ impl Module {\n         self.problems_impl(db)\n     }\n }\n+\n+pub struct Struct {\n+    pub(crate) def_id: DefId,\n+}\n+\n+impl Struct {\n+    pub fn def_id(&self) -> DefId {\n+        self.def_id\n+    }\n+\n+    pub fn variant_data(&self, db: &impl HirDatabase) -> Cancelable<Arc<VariantData>> {\n+        Ok(self.struct_data(db)?.variant_data.clone())\n+    }\n+\n+    pub fn name(&self, db: &impl HirDatabase) -> Cancelable<Option<Name>> {\n+        Ok(self.struct_data(db)?.name.clone())\n+    }\n+}"}, {"sha": "9b66f5bb7c48e3b4df990fee1d8835aa1253a2c6", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e30c533eb67ba8a24708a94385849854c17e67f9/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=e30c533eb67ba8a24708a94385849854c17e67f9", "patch": "@@ -50,7 +50,7 @@ pub use self::{\n     module_tree::ModuleId,\n     nameres::{ItemMap, PerNs, Namespace, Resolution},\n     function::{Function, FnSignature, FnScopes, ScopesWithSyntaxMapping},\n-    adt::{Struct, Enum},\n+    adt::Enum,\n     ty::Ty,\n     impl_block::{ImplBlock, ImplItem},\n };\n@@ -60,6 +60,7 @@ pub use self::function::FnSignatureInfo;\n pub use self::code_model_api::{\n     Crate, CrateDependency,\n     Module, ModuleSource, Problem,\n+    Struct,\n };\n \n pub enum Def {"}]}