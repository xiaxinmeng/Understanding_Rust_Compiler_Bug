{"sha": "8379062be53e79e5f4dc23753c0152700d20bfac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNzkwNjJiZTUzZTc5ZTVmNGRjMjM3NTNjMDE1MjcwMGQyMGJmYWM=", "commit": {"author": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-02-08T01:02:24Z"}, "committer": {"name": "Carol Nichols", "email": "carol.nichols@gmail.com", "date": "2015-02-08T15:57:23Z"}, "message": "Correct fns exp2 that were calling exp\n\nFixes #22080.", "tree": {"sha": "2a17edb0258ffeb7a1df1c8963425d96be7cee73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a17edb0258ffeb7a1df1c8963425d96be7cee73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8379062be53e79e5f4dc23753c0152700d20bfac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8379062be53e79e5f4dc23753c0152700d20bfac", "html_url": "https://github.com/rust-lang/rust/commit/8379062be53e79e5f4dc23753c0152700d20bfac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8379062be53e79e5f4dc23753c0152700d20bfac/comments", "author": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "committer": {"login": "carols10cents", "id": 193874, "node_id": "MDQ6VXNlcjE5Mzg3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/193874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carols10cents", "html_url": "https://github.com/carols10cents", "followers_url": "https://api.github.com/users/carols10cents/followers", "following_url": "https://api.github.com/users/carols10cents/following{/other_user}", "gists_url": "https://api.github.com/users/carols10cents/gists{/gist_id}", "starred_url": "https://api.github.com/users/carols10cents/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carols10cents/subscriptions", "organizations_url": "https://api.github.com/users/carols10cents/orgs", "repos_url": "https://api.github.com/users/carols10cents/repos", "events_url": "https://api.github.com/users/carols10cents/events{/privacy}", "received_events_url": "https://api.github.com/users/carols10cents/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "725cc06464abda7a657780f12feaefb7f10333c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/725cc06464abda7a657780f12feaefb7f10333c6", "html_url": "https://github.com/rust-lang/rust/commit/725cc06464abda7a657780f12feaefb7f10333c6"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "58b93665fe15339bb981821b5b064cb165a66bb4", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8379062be53e79e5f4dc23753c0152700d20bfac/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8379062be53e79e5f4dc23753c0152700d20bfac/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=8379062be53e79e5f4dc23753c0152700d20bfac", "patch": "@@ -173,7 +173,7 @@ impl Float for f32 {\n     #[inline]\n     fn exp(self) -> f32 { num::Float::exp(self) }\n     #[inline]\n-    fn exp2(self) -> f32 { num::Float::exp(self) }\n+    fn exp2(self) -> f32 { num::Float::exp2(self) }\n     #[inline]\n     fn ln(self) -> f32 { num::Float::ln(self) }\n     #[inline]\n@@ -554,6 +554,33 @@ mod tests {\n         assert_approx_eq!((-1.7f32).fract(), -0.7f32);\n     }\n \n+    #[test]\n+    fn test_exp() {\n+        assert_eq!(1.0, 0.0f32.exp());\n+        assert_approx_eq!(2.718282, 1.0f32.exp());\n+        assert_approx_eq!(148.413162, 5.0f32.exp());\n+\n+        let inf: f32 = Float::infinity();\n+        let neg_inf: f32 = Float::neg_infinity();\n+        let nan: f32 = Float::nan();\n+        assert_eq!(inf, inf.exp());\n+        assert_eq!(0.0, neg_inf.exp());\n+        assert!(nan.exp().is_nan());\n+    }\n+\n+    #[test]\n+    fn test_exp2() {\n+        assert_eq!(32.0, 5.0f32.exp2());\n+        assert_eq!(1.0, 0.0f32.exp2());\n+\n+        let inf: f32 = Float::infinity();\n+        let neg_inf: f32 = Float::neg_infinity();\n+        let nan: f32 = Float::nan();\n+        assert_eq!(inf, inf.exp2());\n+        assert_eq!(0.0, neg_inf.exp2());\n+        assert!(nan.exp2().is_nan());\n+    }\n+\n     #[test]\n     fn test_asinh() {\n         assert_eq!(0.0f32.asinh(), 0.0f32);"}, {"sha": "8b17feeb70cdcfc35a7e18701a4abd615a007853", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8379062be53e79e5f4dc23753c0152700d20bfac/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8379062be53e79e5f4dc23753c0152700d20bfac/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=8379062be53e79e5f4dc23753c0152700d20bfac", "patch": "@@ -183,7 +183,7 @@ impl Float for f64 {\n     #[inline]\n     fn exp(self) -> f64 { num::Float::exp(self) }\n     #[inline]\n-    fn exp2(self) -> f64 { num::Float::exp(self) }\n+    fn exp2(self) -> f64 { num::Float::exp2(self) }\n     #[inline]\n     fn ln(self) -> f64 { num::Float::ln(self) }\n     #[inline]\n@@ -563,6 +563,33 @@ mod tests {\n         assert_approx_eq!((-1.7f64).fract(), -0.7f64);\n     }\n \n+    #[test]\n+    fn test_exp() {\n+        assert_eq!(1.0, 0.0f64.exp());\n+        assert_approx_eq!(2.718282, 1.0f64.exp());\n+        assert_approx_eq!(148.413159, 5.0f64.exp());\n+\n+        let inf: f64 = Float::infinity();\n+        let neg_inf: f64 = Float::neg_infinity();\n+        let nan: f64 = Float::nan();\n+        assert_eq!(inf, inf.exp());\n+        assert_eq!(0.0, neg_inf.exp());\n+        assert!(nan.exp().is_nan());\n+    }\n+\n+    #[test]\n+    fn test_exp2() {\n+        assert_eq!(32.0, 5.0f64.exp2());\n+        assert_eq!(1.0, 0.0f64.exp2());\n+\n+        let inf: f64 = Float::infinity();\n+        let neg_inf: f64 = Float::neg_infinity();\n+        let nan: f64 = Float::nan();\n+        assert_eq!(inf, inf.exp2());\n+        assert_eq!(0.0, neg_inf.exp2());\n+        assert!(nan.exp2().is_nan());\n+    }\n+\n     #[test]\n     fn test_asinh() {\n         assert_eq!(0.0f64.asinh(), 0.0f64);"}]}