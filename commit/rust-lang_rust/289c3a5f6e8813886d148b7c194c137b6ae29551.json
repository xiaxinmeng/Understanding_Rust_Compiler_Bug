{"sha": "289c3a5f6e8813886d148b7c194c137b6ae29551", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OWMzYTVmNmU4ODEzODg2ZDE0OGI3YzE5NGMxMzdiNmFlMjk1NTE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-07T16:27:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-07T16:27:27Z"}, "message": "Rollup merge of #69687 - Centril:bm-inconsistent-wording, r=estebank\n\nresolve, inconsistent binding mode: tweak wording\n\nNow that we can have e.g. `let Ok(x) | Err(x) = res;`, it's no longer appropriate to refer to \"the same *match arm*\", so let's tweak the wording.\n\nr? @estebank", "tree": {"sha": "3569676c976fdb9f60274bff9d1a35a9ed649267", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3569676c976fdb9f60274bff9d1a35a9ed649267"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/289c3a5f6e8813886d148b7c194c137b6ae29551", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeY8tvCRBK7hj4Ov3rIwAAdHIIAHjq3w/n9P3cjm0/xV8A3YMD\nUcV/5fLetRByEKiMi4AzhqkW2UnvstoUC12wE5beYeEmmgKbforP2dS1hpPuZyba\nlRJE/ww4MMM9fobQLVxJK18nxCAH/bu4VtSR83bHAJPJSzqK3S6vVQoN3z8xFpt+\n8ZaH9WL/v+UdBVH8M5Xc1l5jUfB5y7q7UvX4YbRmpGYabMKOmJ8hP/CWkSB8ZTT5\nF0VMD5nowVdKEZd7gAxB9qsksCcLT9zVSVmW0OANjaLAsShjvl5I84v7L83Jxftm\nYW78Z0MWc59pDEUlD1w0r+96K2nzcHR2b+wdqYrxaeiRKIKX1/5eXuD7uT6v8Ik=\n=tl8B\n-----END PGP SIGNATURE-----\n", "payload": "tree 3569676c976fdb9f60274bff9d1a35a9ed649267\nparent 614cd8dc47f12ec7d265580f5ea1c79cd593809c\nparent cc9aad452a315d953cebb57547a988aff6aeb563\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1583598447 +0100\ncommitter GitHub <noreply@github.com> 1583598447 +0100\n\nRollup merge of #69687 - Centril:bm-inconsistent-wording, r=estebank\n\nresolve, inconsistent binding mode: tweak wording\n\nNow that we can have e.g. `let Ok(x) | Err(x) = res;`, it's no longer appropriate to refer to \"the same *match arm*\", so let's tweak the wording.\n\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/289c3a5f6e8813886d148b7c194c137b6ae29551", "html_url": "https://github.com/rust-lang/rust/commit/289c3a5f6e8813886d148b7c194c137b6ae29551", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/289c3a5f6e8813886d148b7c194c137b6ae29551/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "614cd8dc47f12ec7d265580f5ea1c79cd593809c", "url": "https://api.github.com/repos/rust-lang/rust/commits/614cd8dc47f12ec7d265580f5ea1c79cd593809c", "html_url": "https://github.com/rust-lang/rust/commit/614cd8dc47f12ec7d265580f5ea1c79cd593809c"}, {"sha": "cc9aad452a315d953cebb57547a988aff6aeb563", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc9aad452a315d953cebb57547a988aff6aeb563", "html_url": "https://github.com/rust-lang/rust/commit/cc9aad452a315d953cebb57547a988aff6aeb563"}], "stats": {"total": 148, "additions": 74, "deletions": 74}, "files": [{"sha": "f8695061266a911030bebde5bd8880ad0f8fd8f6", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -249,8 +249,7 @@ impl<'a> Resolver<'a> {\n                     self.session,\n                     span,\n                     E0409,\n-                    \"variable `{}` is bound in inconsistent \\\n-                                ways within the same match arm\",\n+                    \"variable `{}` is bound inconsistently across alternatives separated by `|`\",\n                     variable_name\n                 );\n                 err.span_label(span, \"bound in different ways\");"}, {"sha": "ef03b67b1b0b19db03bec5b038bdc717c315cb8b", "filename": "src/test/ui/mismatched_types/E0409.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -1,4 +1,4 @@\n-error[E0409]: variable `y` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `y` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/E0409.rs:5:23\n    |\n LL |         (0, ref y) | (y, 0) => {}"}, {"sha": "fd5cb01ab42c51f3ab50a982f38874d593a3bc1d", "filename": "src/test/ui/or-patterns/inconsistent-modes.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.rs?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -5,22 +5,22 @@\n fn main() {\n     // One level:\n     let Ok(a) | Err(ref a): Result<&u8, u8> = Ok(&0);\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n+    //~^ ERROR variable `a` is bound inconsistently\n     let Ok(ref mut a) | Err(a): Result<u8, &mut u8> = Ok(0);\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n+    //~^ ERROR variable `a` is bound inconsistently\n     let Ok(ref a) | Err(ref mut a): Result<&u8, &mut u8> = Ok(&0);\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n+    //~^ ERROR variable `a` is bound inconsistently\n     //~| ERROR mismatched types\n     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n-    //~| ERROR variable `b` is bound in inconsistent ways\n+    //~^ ERROR variable `a` is bound inconsistently\n+    //~| ERROR variable `b` is bound inconsistently\n     //~| ERROR mismatched types\n \n     // Two levels:\n     let Ok(Ok(a) | Err(a)) | Err(ref a) = Err(0);\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n+    //~^ ERROR variable `a` is bound inconsistently\n \n     // Three levels:\n-    let Ok([ Ok((Ok(ref a) | Err(a),)) | Err(a) ]) | Err(a) = Err(&1);\n-    //~^ ERROR variable `a` is bound in inconsistent ways\n+    let Ok([Ok((Ok(ref a) | Err(a),)) | Err(a)]) | Err(a) = Err(&1);\n+    //~^ ERROR variable `a` is bound inconsistently\n }"}, {"sha": "c5dcef36e0580514d4971c09537e0e2f37921139", "filename": "src/test/ui/or-patterns/inconsistent-modes.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2Finconsistent-modes.stderr?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -1,52 +1,52 @@\n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:7:25\n    |\n LL |     let Ok(a) | Err(ref a): Result<&u8, u8> = Ok(&0);\n    |            -            ^ bound in different ways\n    |            |\n    |            first binding\n \n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:9:29\n    |\n LL |     let Ok(ref mut a) | Err(a): Result<u8, &mut u8> = Ok(0);\n    |                    -        ^ bound in different ways\n    |                    |\n    |                    first binding\n \n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:11:33\n    |\n LL |     let Ok(ref a) | Err(ref mut a): Result<&u8, &mut u8> = Ok(&0);\n    |                - first binding  ^ bound in different ways\n \n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:14:39\n    |\n LL |     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n    |                 - first binding       ^ bound in different ways\n \n-error[E0409]: variable `b` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `b` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:14:46\n    |\n LL |     let Ok((ref a, b)) | Err((ref mut a, ref b)) = Ok((0, &0));\n    |                    - first binding           ^ bound in different ways\n \n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/inconsistent-modes.rs:20:38\n    |\n LL |     let Ok(Ok(a) | Err(a)) | Err(ref a) = Err(0);\n    |                        -             ^ bound in different ways\n    |                        |\n    |                        first binding\n \n-error[E0409]: variable `a` is bound in inconsistent ways within the same match arm\n-  --> $DIR/inconsistent-modes.rs:24:34\n+error[E0409]: variable `a` is bound inconsistently across alternatives separated by `|`\n+  --> $DIR/inconsistent-modes.rs:24:33\n    |\n-LL |     let Ok([ Ok((Ok(ref a) | Err(a),)) | Err(a) ]) | Err(a) = Err(&1);\n-   |                         -        ^ bound in different ways\n-   |                         |\n-   |                         first binding\n+LL |     let Ok([Ok((Ok(ref a) | Err(a),)) | Err(a)]) | Err(a) = Err(&1);\n+   |                        -        ^ bound in different ways\n+   |                        |\n+   |                        first binding\n \n error[E0308]: mismatched types\n   --> $DIR/inconsistent-modes.rs:11:25"}, {"sha": "43e9378b7d0ecd656f71eb763e8f162b0d080227", "filename": "src/test/ui/resolve/resolve-inconsistent-binding-mode.rs", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.rs?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -1,39 +1,40 @@\n enum Opts {\n-    A(isize), B(isize), C(isize)\n+    A(isize),\n+    B(isize),\n+    C(isize),\n }\n \n fn matcher1(x: Opts) {\n     match x {\n-      Opts::A(ref i) | Opts::B(i) => {}\n-      //~^ ERROR variable `i` is bound in inconsistent ways within the same match arm\n-      //~^^ ERROR mismatched types\n-      Opts::C(_) => {}\n+        Opts::A(ref i) | Opts::B(i) => {}\n+        //~^ ERROR variable `i` is bound inconsistently\n+        //~^^ ERROR mismatched types\n+        Opts::C(_) => {}\n     }\n }\n \n fn matcher2(x: Opts) {\n     match x {\n-      Opts::A(ref i) | Opts::B(i) => {}\n-      //~^ ERROR variable `i` is bound in inconsistent ways within the same match arm\n-      //~^^ ERROR mismatched types\n-      Opts::C(_) => {}\n+        Opts::A(ref i) | Opts::B(i) => {}\n+        //~^ ERROR variable `i` is bound inconsistently\n+        //~^^ ERROR mismatched types\n+        Opts::C(_) => {}\n     }\n }\n \n fn matcher4(x: Opts) {\n     match x {\n-      Opts::A(ref mut i) | Opts::B(ref i) => {}\n-      //~^ ERROR variable `i` is bound in inconsistent ways within the same match arm\n-      //~^^ ERROR mismatched types\n-      Opts::C(_) => {}\n+        Opts::A(ref mut i) | Opts::B(ref i) => {}\n+        //~^ ERROR variable `i` is bound inconsistently\n+        //~^^ ERROR mismatched types\n+        Opts::C(_) => {}\n     }\n }\n \n-\n fn matcher5(x: Opts) {\n     match x {\n-      Opts::A(ref i) | Opts::B(ref i) => {}\n-      Opts::C(_) => {}\n+        Opts::A(ref i) | Opts::B(ref i) => {}\n+        Opts::C(_) => {}\n     }\n }\n "}, {"sha": "c14dfa3601a8c0bf9d8919e74611bb4dd2c3ae61", "filename": "src/test/ui/resolve/resolve-inconsistent-binding-mode.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-binding-mode.stderr?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -1,58 +1,58 @@\n-error[E0409]: variable `i` is bound in inconsistent ways within the same match arm\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:7:32\n+error[E0409]: variable `i` is bound inconsistently across alternatives separated by `|`\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:9:34\n    |\n-LL |       Opts::A(ref i) | Opts::B(i) => {}\n-   |                   -            ^ bound in different ways\n-   |                   |\n-   |                   first binding\n+LL |         Opts::A(ref i) | Opts::B(i) => {}\n+   |                     -            ^ bound in different ways\n+   |                     |\n+   |                     first binding\n \n-error[E0409]: variable `i` is bound in inconsistent ways within the same match arm\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:16:32\n+error[E0409]: variable `i` is bound inconsistently across alternatives separated by `|`\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:18:34\n    |\n-LL |       Opts::A(ref i) | Opts::B(i) => {}\n-   |                   -            ^ bound in different ways\n-   |                   |\n-   |                   first binding\n+LL |         Opts::A(ref i) | Opts::B(i) => {}\n+   |                     -            ^ bound in different ways\n+   |                     |\n+   |                     first binding\n \n-error[E0409]: variable `i` is bound in inconsistent ways within the same match arm\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:25:40\n+error[E0409]: variable `i` is bound inconsistently across alternatives separated by `|`\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:27:42\n    |\n-LL |       Opts::A(ref mut i) | Opts::B(ref i) => {}\n-   |                       - first binding  ^ bound in different ways\n+LL |         Opts::A(ref mut i) | Opts::B(ref i) => {}\n+   |                         - first binding  ^ bound in different ways\n \n error[E0308]: mismatched types\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:7:32\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:9:34\n    |\n LL |     match x {\n    |           - this expression has type `Opts`\n-LL |       Opts::A(ref i) | Opts::B(i) => {}\n-   |               -----            ^ expected `&isize`, found `isize`\n-   |               |\n-   |               first introduced with type `&isize` here\n+LL |         Opts::A(ref i) | Opts::B(i) => {}\n+   |                 -----            ^ expected `&isize`, found `isize`\n+   |                 |\n+   |                 first introduced with type `&isize` here\n    |\n    = note: in the same arm, a binding must have the same type in all alternatives\n \n error[E0308]: mismatched types\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:16:32\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:18:34\n    |\n LL |     match x {\n    |           - this expression has type `Opts`\n-LL |       Opts::A(ref i) | Opts::B(i) => {}\n-   |               -----            ^ expected `&isize`, found `isize`\n-   |               |\n-   |               first introduced with type `&isize` here\n+LL |         Opts::A(ref i) | Opts::B(i) => {}\n+   |                 -----            ^ expected `&isize`, found `isize`\n+   |                 |\n+   |                 first introduced with type `&isize` here\n    |\n    = note: in the same arm, a binding must have the same type in all alternatives\n \n error[E0308]: mismatched types\n-  --> $DIR/resolve-inconsistent-binding-mode.rs:25:36\n+  --> $DIR/resolve-inconsistent-binding-mode.rs:27:38\n    |\n LL |     match x {\n    |           - this expression has type `Opts`\n-LL |       Opts::A(ref mut i) | Opts::B(ref i) => {}\n-   |               ---------            ^^^^^ types differ in mutability\n-   |               |\n-   |               first introduced with type `&mut isize` here\n+LL |         Opts::A(ref mut i) | Opts::B(ref i) => {}\n+   |                 ---------            ^^^^^ types differ in mutability\n+   |                 |\n+   |                 first introduced with type `&mut isize` here\n    |\n    = note: expected type `&mut isize`\n               found type `&isize`"}, {"sha": "b9202f556d12b63f64af42975e994977eb50034b", "filename": "src/test/ui/resolve/resolve-inconsistent-names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.rs?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -19,7 +19,7 @@ fn main() {\n         (A, B) | (ref B, c) | (c, A) => ()\n         //~^ ERROR variable `A` is not bound in all patterns\n         //~| ERROR variable `B` is not bound in all patterns\n-        //~| ERROR variable `B` is bound in inconsistent ways\n+        //~| ERROR variable `B` is bound inconsistently\n         //~| ERROR mismatched types\n         //~| ERROR variable `c` is not bound in all patterns\n         //~| HELP consider making the path in the pattern qualified: `?::A`"}, {"sha": "70e9c2e5bf598e5621378721dfa3a29e90e31d1d", "filename": "src/test/ui/resolve/resolve-inconsistent-names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-inconsistent-names.stderr?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -47,7 +47,7 @@ LL |         (A, B) | (ref B, c) | (c, A) => ()\n    |         |                variable not in all patterns\n    |         pattern doesn't bind `c`\n \n-error[E0409]: variable `B` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `B` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/resolve-inconsistent-names.rs:19:23\n    |\n LL |         (A, B) | (ref B, c) | (c, A) => ()"}, {"sha": "b4a0d8145c1d690b95b365e7880e64dc990794ab", "filename": "src/test/ui/rfc-2005-default-binding-mode/issue-44912-or.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.rs?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -4,7 +4,7 @@ pub fn main() {\n     let x = &Some((3, 3));\n     let _: &i32 = match x {\n         Some((x, 3)) | &Some((ref x, 5)) => x,\n-        //~^ ERROR is bound in inconsistent ways\n+        //~^ ERROR is bound inconsistently\n         _ => &5i32,\n     };\n }"}, {"sha": "e1e1bf7f6d9711e264476ff2d65354e2dbd1c304", "filename": "src/test/ui/rfc-2005-default-binding-mode/issue-44912-or.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/289c3a5f6e8813886d148b7c194c137b6ae29551/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fissue-44912-or.stderr?ref=289c3a5f6e8813886d148b7c194c137b6ae29551", "patch": "@@ -1,4 +1,4 @@\n-error[E0409]: variable `x` is bound in inconsistent ways within the same match arm\n+error[E0409]: variable `x` is bound inconsistently across alternatives separated by `|`\n   --> $DIR/issue-44912-or.rs:6:35\n    |\n LL |         Some((x, 3)) | &Some((ref x, 5)) => x,"}]}