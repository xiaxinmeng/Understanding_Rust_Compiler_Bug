{"sha": "3b7e9dc393c7b015bb06a8cc1213c25b8911362f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiN2U5ZGMzOTNjN2IwMTViYjA2YThjYzEyMTNjMjViODkxMTM2MmY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-02-22T23:50:39Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-02-23T02:52:23Z"}, "message": "Rustify some comments lifted directly from the sha-1 reference implementation", "tree": {"sha": "28834e208caa55ef772a6135f4b72c86798bf0f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28834e208caa55ef772a6135f4b72c86798bf0f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b7e9dc393c7b015bb06a8cc1213c25b8911362f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b7e9dc393c7b015bb06a8cc1213c25b8911362f", "html_url": "https://github.com/rust-lang/rust/commit/3b7e9dc393c7b015bb06a8cc1213c25b8911362f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b7e9dc393c7b015bb06a8cc1213c25b8911362f/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eac75b76486ec54f677b2460f09635380437b125", "url": "https://api.github.com/repos/rust-lang/rust/commits/eac75b76486ec54f677b2460f09635380437b125", "html_url": "https://github.com/rust-lang/rust/commit/eac75b76486ec54f677b2460f09635380437b125"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2a6b74d4ff326a0ac2259a7b2513b6c86ebc0820", "filename": "src/lib/sha1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b7e9dc393c7b015bb06a8cc1213c25b8911362f/src%2Flib%2Fsha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b7e9dc393c7b015bb06a8cc1213c25b8911362f/src%2Flib%2Fsha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsha1.rs?ref=3b7e9dc393c7b015bb06a8cc1213c25b8911362f", "patch": "@@ -185,8 +185,8 @@ fn mk_sha1() -> sha1 {\n      * 512 bits.  The first padding bit must be a '1'.  The last 64 bits\n      * represent the length of the original message.  All bits in between\n      * should be 0.  This function will pad the message according to those\n-     * rules by filling the message_block array accordingly.  It will also\n-     * call ProcessMessageBlock() appropriately.  When it returns, it\n+     * rules by filling the msg_block vector accordingly.  It will also\n+     * call process_msg_block() appropriately.  When it returns, it\n      * can be assumed that the message digest has been computed.\n      */\n     impure fn pad_msg(&sha1state st) {"}]}