{"sha": "81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYTYwMGI2YjdkYjA3ZWJhYzI4YzhkZGVkZDM1N2UzYzViOTk1MWQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-01-02T13:42:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-09-07T17:53:04Z"}, "message": "Move monomorphize code to its own crate.", "tree": {"sha": "dc9bf55bd478ff63cd26ab0464be90579d4e14d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc9bf55bd478ff63cd26ab0464be90579d4e14d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "html_url": "https://github.com/rust-lang/rust/commit/81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bba4be681d664a50ab307ec732f957c02255e067", "url": "https://api.github.com/repos/rust-lang/rust/commits/bba4be681d664a50ab307ec732f957c02255e067", "html_url": "https://github.com/rust-lang/rust/commit/bba4be681d664a50ab307ec732f957c02255e067"}], "stats": {"total": 93, "additions": 71, "deletions": 22}, "files": [{"sha": "841fc608476d196bc1afda8a1122791e8f167cad", "filename": "Cargo.lock", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -3929,6 +3929,7 @@ dependencies = [\n  \"rustc_mir\",\n  \"rustc_mir_build\",\n  \"rustc_mir_transform\",\n+ \"rustc_monomorphize\",\n  \"rustc_parse\",\n  \"rustc_passes\",\n  \"rustc_plugin_impl\",\n@@ -4142,6 +4143,22 @@ dependencies = [\n  \"tracing\",\n ]\n \n+[[package]]\n+name = \"rustc_monomorphize\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"rustc_data_structures\",\n+ \"rustc_errors\",\n+ \"rustc_hir\",\n+ \"rustc_index\",\n+ \"rustc_middle\",\n+ \"rustc_session\",\n+ \"rustc_span\",\n+ \"rustc_target\",\n+ \"smallvec\",\n+ \"tracing\",\n+]\n+\n [[package]]\n name = \"rustc_parse\"\n version = \"0.0.0\""}, {"sha": "7a51293f5cda5411b59f58e48702de53011e7d0b", "filename": "compiler/rustc_codegen_cranelift/scripts/filter_profile.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ffilter_profile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ffilter_profile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fscripts%2Ffilter_profile.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -42,7 +42,7 @@ fn main() -> Result<(), Box<dyn std::error::Error>> {\n             continue;\n         }\n \n-        if stack.contains(\"rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\")\n+        if stack.contains(\"rustc_monomorphize::partitioning::collect_and_partition_mono_items\")\n             || stack.contains(\"rustc_incremental::assert_dep_graph::assert_dep_graph\")\n             || stack.contains(\"rustc_symbol_mangling::test::report_symbol_names\")\n         {\n@@ -81,7 +81,7 @@ fn main() -> Result<(), Box<dyn std::error::Error>> {\n         }\n \n         const COLLECT_AND_PARTITION_MONO_ITEMS: &str =\n-            \"rustc_mir::monomorphize::partitioning::collect_and_partition_mono_items\";\n+            \"rustc_monomorphize::partitioning::collect_and_partition_mono_items\";\n         if let Some(index) = stack.find(COLLECT_AND_PARTITION_MONO_ITEMS) {\n             stack = &stack[..index + COLLECT_AND_PARTITION_MONO_ITEMS.len()];\n         }"}, {"sha": "306728dbeac595dfc2723d9c6ff5b83a0fcbb336", "filename": "compiler/rustc_interface/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2FCargo.toml?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -35,6 +35,7 @@ rustc_metadata = { path = \"../rustc_metadata\" }\n rustc_mir = { path = \"../rustc_mir\" }\n rustc_mir_build = { path = \"../rustc_mir_build\" }\n rustc_mir_transform = { path = \"../rustc_mir_transform\" }\n+rustc_monomorphize = { path = \"../rustc_monomorphize\" }\n rustc_passes = { path = \"../rustc_passes\" }\n rustc_typeck = { path = \"../rustc_typeck\" }\n rustc_lint = { path = \"../rustc_lint\" }"}, {"sha": "547823a067cf53b0d22a4ff23ee58ace473d39c1", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -743,6 +743,7 @@ pub static DEFAULT_QUERY_PROVIDERS: SyncLazy<Providers> = SyncLazy::new(|| {\n     mir_borrowck::provide(providers);\n     mir_build::provide(providers);\n     rustc_mir_transform::provide(providers);\n+    rustc_monomorphize::provide(providers);\n     rustc_privacy::provide(providers);\n     typeck::provide(providers);\n     ty::provide(providers);"}, {"sha": "fa1f27daa804fd0026253bbb1d6756822261a63f", "filename": "compiler/rustc_mir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_mir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Flib.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -4,7 +4,6 @@ Rust MIR: a lowered representation of Rust.\n \n */\n \n-#![feature(array_windows)]\n #![feature(assert_matches)]\n #![cfg_attr(bootstrap, feature(bindings_after_at))]\n #![feature(associated_type_defaults)]\n@@ -36,16 +35,13 @@ extern crate rustc_middle;\n pub mod const_eval;\n pub mod dataflow;\n pub mod interpret;\n-pub mod monomorphize;\n pub mod transform;\n pub mod util;\n \n use rustc_middle::ty::query::Providers;\n \n pub fn provide(providers: &mut Providers) {\n     const_eval::provide(providers);\n-    monomorphize::partitioning::provide(providers);\n-    monomorphize::polymorphize::provide(providers);\n     providers.eval_to_const_value_raw = const_eval::eval_to_const_value_raw_provider;\n     providers.eval_to_allocation_raw = const_eval::eval_to_allocation_raw_provider;\n     providers.const_caller_location = const_eval::const_caller_location;"}, {"sha": "93a964bf3cc0e5edeb34af794347298780c7b31d", "filename": "compiler/rustc_monomorphize/Cargo.toml", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2FCargo.toml?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -0,0 +1,20 @@\n+[package]\n+authors = [\"The Rust Project Developers\"]\n+name = \"rustc_monomorphize\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+[lib]\n+doctest = false\n+\n+[dependencies]\n+smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n+tracing = \"0.1\"\n+rustc_data_structures = { path = \"../rustc_data_structures\" }\n+rustc_errors = { path = \"../rustc_errors\" }\n+rustc_hir = { path = \"../rustc_hir\" }\n+rustc_index = { path = \"../rustc_index\" }\n+rustc_middle = { path = \"../rustc_middle\" }\n+rustc_session = { path = \"../rustc_session\" }\n+rustc_span = { path = \"../rustc_span\" }\n+rustc_target = { path = \"../rustc_target\" }"}, {"sha": "1e39b1bd5e80e6a3461c4381c5277ddbe7d36fbf", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "renamed", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -178,8 +178,6 @@\n //! this is not implemented however: a mono item will be produced\n //! regardless of whether it is actually needed or not.\n \n-use crate::monomorphize;\n-\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::{par_iter, MTLock, MTRef, ParallelIterator};\n use rustc_errors::{ErrorReported, FatalError};\n@@ -1052,7 +1050,7 @@ fn find_vtable_types_for_unsizing<'tcx>(\n             assert_eq!(source_adt_def, target_adt_def);\n \n             let CustomCoerceUnsized::Struct(coerce_index) =\n-                monomorphize::custom_coerce_unsize_info(tcx, source_ty, target_ty);\n+                crate::custom_coerce_unsize_info(tcx, source_ty, target_ty);\n \n             let source_fields = &source_adt_def.non_enum_variant().fields;\n             let target_fields = &target_adt_def.non_enum_variant().fields;\n@@ -1085,7 +1083,7 @@ fn create_fn_mono_item<'tcx>(\n     let def_id = instance.def_id();\n     if tcx.sess.opts.debugging_opts.profile_closures && def_id.is_local() && tcx.is_closure(def_id)\n     {\n-        monomorphize::util::dump_closure_profile(tcx, instance);\n+        crate::util::dump_closure_profile(tcx, instance);\n     }\n \n     respan(source, MonoItem::Fn(instance.polymorphize(tcx)))", "previous_filename": "compiler/rustc_mir/src/monomorphize/collector.rs"}, {"sha": "2a40eeac5bdcb02d7bb32660461a25fdedc3f3dc", "filename": "compiler/rustc_monomorphize/src/lib.rs", "status": "renamed", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Flib.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -1,13 +1,24 @@\n+#![feature(array_windows)]\n+#![feature(bool_to_option)]\n+#![feature(crate_visibility_modifier)]\n+#![feature(control_flow_enum)]\n+#![feature(in_band_lifetimes)]\n+\n+#[macro_use]\n+extern crate tracing;\n+#[macro_use]\n+extern crate rustc_middle;\n+\n+use rustc_hir::lang_items::LangItem;\n use rustc_middle::traits;\n use rustc_middle::ty::adjustment::CustomCoerceUnsized;\n+use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n \n-use rustc_hir::lang_items::LangItem;\n-\n-pub mod collector;\n-pub mod partitioning;\n-pub mod polymorphize;\n-pub mod util;\n+mod collector;\n+mod partitioning;\n+mod polymorphize;\n+mod util;\n \n fn custom_coerce_unsize_info<'tcx>(\n     tcx: TyCtxt<'tcx>,\n@@ -31,3 +42,8 @@ fn custom_coerce_unsize_info<'tcx>(\n         }\n     }\n }\n+\n+pub fn provide(providers: &mut Providers) {\n+    partitioning::provide(providers);\n+    polymorphize::provide(providers);\n+}", "previous_filename": "compiler/rustc_mir/src/monomorphize/mod.rs"}, {"sha": "429ed53d37977ec67288c929eb67d8888ce48b64", "filename": "compiler/rustc_monomorphize/src/partitioning/default.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fdefault.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -13,9 +13,9 @@ use rustc_middle::ty::{self, DefIdTree, InstanceDef, TyCtxt};\n use rustc_span::symbol::Symbol;\n \n use super::PartitioningCx;\n-use crate::monomorphize::collector::InliningMap;\n-use crate::monomorphize::partitioning::merging;\n-use crate::monomorphize::partitioning::{\n+use crate::collector::InliningMap;\n+use crate::partitioning::merging;\n+use crate::partitioning::{\n     MonoItemPlacement, Partitioner, PostInliningPartitioning, PreInliningPartitioning,\n };\n ", "previous_filename": "compiler/rustc_mir/src/monomorphize/partitioning/default.rs"}, {"sha": "229468b47ff62b871889c5bfaba27dcaf5c2f348", "filename": "compiler/rustc_monomorphize/src/partitioning/merging.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmerging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmerging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmerging.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -6,7 +6,7 @@ use rustc_middle::mir::mono::{CodegenUnit, CodegenUnitNameBuilder};\n use rustc_span::symbol::{Symbol, SymbolStr};\n \n use super::PartitioningCx;\n-use crate::monomorphize::partitioning::PreInliningPartitioning;\n+use crate::partitioning::PreInliningPartitioning;\n \n pub fn merge_codegen_units<'tcx>(\n     cx: &PartitioningCx<'_, 'tcx>,", "previous_filename": "compiler/rustc_mir/src/monomorphize/partitioning/merging.rs"}, {"sha": "7a7a56a034ed28e1e97379fbce53b46fd7db60aa", "filename": "compiler/rustc_monomorphize/src/partitioning/mod.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "patch": "@@ -105,8 +105,8 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::TyCtxt;\n use rustc_span::symbol::Symbol;\n \n-use crate::monomorphize::collector::InliningMap;\n-use crate::monomorphize::collector::{self, MonoItemCollectionMode};\n+use crate::collector::InliningMap;\n+use crate::collector::{self, MonoItemCollectionMode};\n \n pub struct PartitioningCx<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,", "previous_filename": "compiler/rustc_mir/src/monomorphize/partitioning/mod.rs"}, {"sha": "3c55a4b0a8fb1e52040d7a3e6055c2aeb47921d9", "filename": "compiler/rustc_monomorphize/src/polymorphize.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpolymorphize.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "previous_filename": "compiler/rustc_mir/src/monomorphize/polymorphize.rs"}, {"sha": "799b4e18c240f24afedae9073453384356f2c5ad", "filename": "compiler/rustc_monomorphize/src/util.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81a600b6b7db07ebac28c8ddedd357e3c5b9951d/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Futil.rs?ref=81a600b6b7db07ebac28c8ddedd357e3c5b9951d", "previous_filename": "compiler/rustc_mir/src/monomorphize/util.rs"}]}