{"sha": "e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NjIzODNkYmI1OTE0N2M0M2ExZDIzZWExYTBjM2U5ZjQwNDg0Y2U=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-07T16:13:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-07T16:13:41Z"}, "message": "Rollup merge of #87744 - Smittyvb:xpy-test-force-rerun, r=Mark-Simulacrum\n\nAdd x.py option to --force-rerun compiletest tests\n\nThis can be used like `./x.py test src/test/ui/abi/ --force-rerun`, and is useful when verifying that newly blessed tests don't change between test runs (such as due to being dependent on the current time or memory layout or RNG), without needing to change the test file or find the right file in `build` to remove.", "tree": {"sha": "bd308b315e73848e57faefab7d031059b125c982", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd308b315e73848e57faefab7d031059b125c982"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhDrE1CRBK7hj4Ov3rIwAAYtoIAIuwHvyPpCDeWmi+V8/8+z4L\n5I4RgbKKCxLgY1FCvwO06JHWHqdqjc7c2V1JdA1xwklaKndUSxiPKPg0g1OvTZ0t\nJoqyuk2fcviCWeOjbQR4DIvnxgkpl6xgXu689DUgx84gCBsAkK97TQRCvEqk6Rbt\nfjiu7WKK01HcsavXJciR5zMPJqac25hrYpqCPz9cqKyyo866xw766StDvJ9vvQ9h\naxBnDjui5CyYEcm+GNQzcAHdoiwpEl1N2MfO9N7j9/5nhNK3T1Mz9BYIF3AuSf9f\nBa+WbuTuiS6AmnQUt0wipuJD+uWl5Doa6FOm70RRi+s/Z8aes94Jkk3jDvJ4QHs=\n=zxWH\n-----END PGP SIGNATURE-----\n", "payload": "tree bd308b315e73848e57faefab7d031059b125c982\nparent 508b328c398b84126011f6fe74d018fe855bc242\nparent b7e9b1ad7f986425525461e1d53bbd14e2759de9\nauthor Yuki Okushi <jtitor@2k36.org> 1628352821 +0900\ncommitter GitHub <noreply@github.com> 1628352821 +0900\n\nRollup merge of #87744 - Smittyvb:xpy-test-force-rerun, r=Mark-Simulacrum\n\nAdd x.py option to --force-rerun compiletest tests\n\nThis can be used like `./x.py test src/test/ui/abi/ --force-rerun`, and is useful when verifying that newly blessed tests don't change between test runs (such as due to being dependent on the current time or memory layout or RNG), without needing to change the test file or find the right file in `build` to remove.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "html_url": "https://github.com/rust-lang/rust/commit/e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "508b328c398b84126011f6fe74d018fe855bc242", "url": "https://api.github.com/repos/rust-lang/rust/commits/508b328c398b84126011f6fe74d018fe855bc242", "html_url": "https://github.com/rust-lang/rust/commit/508b328c398b84126011f6fe74d018fe855bc242"}, {"sha": "b7e9b1ad7f986425525461e1d53bbd14e2759de9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7e9b1ad7f986425525461e1d53bbd14e2759de9", "html_url": "https://github.com/rust-lang/rust/commit/b7e9b1ad7f986425525461e1d53bbd14e2759de9"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "bb3ea04d4ace9ff28a44ee8b62efbc4a020f78fb", "filename": "src/bootstrap/builder/tests.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Fbuilder%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder%2Ftests.rs?ref=e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "patch": "@@ -486,6 +486,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::No,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n@@ -527,6 +528,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::No,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,\n@@ -583,6 +585,7 @@ mod dist {\n             fail_fast: true,\n             doc_tests: DocTests::Yes,\n             bless: false,\n+            force_rerun: false,\n             compare_mode: None,\n             rustfix_coverage: false,\n             pass: None,"}, {"sha": "7b74a909c286e6b2a320d1702af7ac18c9b09aab", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "patch": "@@ -102,6 +102,7 @@ pub enum Subcommand {\n         paths: Vec<PathBuf>,\n         /// Whether to automatically update stderr/stdout files\n         bless: bool,\n+        force_rerun: bool,\n         compare_mode: Option<String>,\n         pass: Option<String>,\n         run: Option<String>,\n@@ -284,6 +285,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n                 opts.optflag(\"\", \"no-doc\", \"do not run doc tests\");\n                 opts.optflag(\"\", \"doc\", \"only run doc tests\");\n                 opts.optflag(\"\", \"bless\", \"update all stderr/stdout files of failing ui tests\");\n+                opts.optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\");\n                 opts.optopt(\n                     \"\",\n                     \"compare-mode\",\n@@ -558,6 +560,7 @@ Arguments:\n             \"test\" | \"t\" => Subcommand::Test {\n                 paths,\n                 bless: matches.opt_present(\"bless\"),\n+                force_rerun: matches.opt_present(\"force-rerun\"),\n                 compare_mode: matches.opt_str(\"compare-mode\"),\n                 pass: matches.opt_str(\"pass\"),\n                 run: matches.opt_str(\"run\"),\n@@ -726,6 +729,13 @@ impl Subcommand {\n         }\n     }\n \n+    pub fn force_rerun(&self) -> bool {\n+        match *self {\n+            Subcommand::Test { force_rerun, .. } => force_rerun,\n+            _ => false,\n+        }\n+    }\n+\n     pub fn rustfix_coverage(&self) -> bool {\n         match *self {\n             Subcommand::Test { rustfix_coverage, .. } => rustfix_coverage,"}, {"sha": "9effdb2c959d0840423ed738dcdbc2f911f95134", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "patch": "@@ -1315,6 +1315,10 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             cmd.arg(\"--bless\");\n         }\n \n+        if builder.config.cmd.force_rerun() {\n+            cmd.arg(\"--force-rerun\");\n+        }\n+\n         let compare_mode =\n             builder.config.cmd.compare_mode().or_else(|| {\n                 if builder.config.test_compare_mode { self.compare_mode } else { None }"}, {"sha": "99b0a3454e89ccaed91b758a80c9155d3ed18828", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "patch": "@@ -362,6 +362,9 @@ pub struct Config {\n     pub nodejs: Option<String>,\n     /// Path to a npm executable. Used for rustdoc GUI tests\n     pub npm: Option<String>,\n+\n+    /// Whether to rerun tests even if the inputs are unchanged.\n+    pub force_rerun: bool,\n }\n \n impl Config {"}, {"sha": "9e655557fd271829dbee42ccd09ba7693b3f2640", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e862383dbb59147c43a1d23ea1a0c3e9f40484ce/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=e862383dbb59147c43a1d23ea1a0c3e9f40484ce", "patch": "@@ -144,6 +144,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n             \"enable this to generate a Rustfix coverage file, which is saved in \\\n                 `./<build_base>/rustfix_missing_coverage.txt`\",\n         )\n+        .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"h\", \"help\", \"show this message\")\n         .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\");\n \n@@ -289,6 +290,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         llvm_components: matches.opt_str(\"llvm-components\").unwrap(),\n         nodejs: matches.opt_str(\"nodejs\"),\n         npm: matches.opt_str(\"npm\"),\n+\n+        force_rerun: matches.opt_present(\"force-rerun\"),\n     }\n }\n \n@@ -644,13 +647,15 @@ fn make_test(config: &Config, testpaths: &TestPaths, inputs: &Stamp) -> Vec<test\n             let test_name = crate::make_test_name(config, testpaths, revision);\n             let mut desc = make_test_description(config, test_name, &test_path, src_file, cfg);\n             // Ignore tests that already run and are up to date with respect to inputs.\n-            desc.ignore |= is_up_to_date(\n-                config,\n-                testpaths,\n-                &early_props,\n-                revision.map(|s| s.as_str()),\n-                inputs,\n-            );\n+            if !config.force_rerun {\n+                desc.ignore |= is_up_to_date(\n+                    config,\n+                    testpaths,\n+                    &early_props,\n+                    revision.map(|s| s.as_str()),\n+                    inputs,\n+                );\n+            }\n             test::TestDescAndFn { desc, testfn: make_test_closure(config, testpaths, revision) }\n         })\n         .collect()"}]}