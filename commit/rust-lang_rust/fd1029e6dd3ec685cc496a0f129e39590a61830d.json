{"sha": "fd1029e6dd3ec685cc496a0f129e39590a61830d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkMTAyOWU2ZGQzZWM2ODVjYzQ5NmEwZjEyOWUzOTU5MGE2MTgzMGQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-05-31T22:41:08Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-01T00:39:14Z"}, "message": "Support move as an initializer.", "tree": {"sha": "517818f8634234008bd8edfbdffba9c0c4d72560", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/517818f8634234008bd8edfbdffba9c0c4d72560"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd1029e6dd3ec685cc496a0f129e39590a61830d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd1029e6dd3ec685cc496a0f129e39590a61830d", "html_url": "https://github.com/rust-lang/rust/commit/fd1029e6dd3ec685cc496a0f129e39590a61830d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd1029e6dd3ec685cc496a0f129e39590a61830d/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68b4688875d5247d52adf5e27e9933d858f5c92d", "url": "https://api.github.com/repos/rust-lang/rust/commits/68b4688875d5247d52adf5e27e9933d858f5c92d", "html_url": "https://github.com/rust-lang/rust/commit/68b4688875d5247d52adf5e27e9933d858f5c92d"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "0d97a09bfc7acf85beb2e3fd60534c8fa221b98c", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=fd1029e6dd3ec685cc496a0f129e39590a61830d", "patch": "@@ -208,6 +208,7 @@ tag stmt_ {\n tag init_op {\n     init_assign;\n     init_recv;\n+    init_move;\n }\n \n type initializer = rec(init_op op,"}, {"sha": "2dea137f3ae2ab497ad14c31aa6b1ade3bdb5aba", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=fd1029e6dd3ec685cc496a0f129e39590a61830d", "patch": "@@ -1449,6 +1449,11 @@ fn parse_initializer(&parser p) -> option::t[ast::initializer] {\n             ret some(rec(op = ast::init_assign,\n                          expr = parse_expr(p)));\n         }\n+        case (token::LARROW) {\n+            p.bump();\n+            ret some(rec(op = ast::init_move,\n+                         expr = parse_expr(p)));\n+        }\n         // Now that the the channel is the first argument to receive,\n         // combining it with an initializer doesn't really make sense.\n         // case (token::RECV) {"}, {"sha": "b5803606d58f47087631387d968bf7d95be32b4e", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=fd1029e6dd3ec685cc496a0f129e39590a61830d", "patch": "@@ -6375,6 +6375,11 @@ fn init_local(&@block_ctxt cx, &@ast::local local) -> result {\n                     auto sub = trans_expr(bcx, init.expr);\n                     bcx = copy_val(sub.bcx, INIT, llptr, sub.val, ty).bcx;\n                 }\n+                case (ast::init_move) {\n+                    auto sub = trans_lval(bcx, init.expr);\n+                    bcx = move_val(sub.res.bcx, INIT, llptr,\n+                                   sub.res.val, ty).bcx;\n+                }\n                 case (ast::init_recv) {\n                     bcx = recv_val(bcx, llptr, init.expr, ty, INIT).bcx;\n                 }"}, {"sha": "a705d84df523428557ec8cb9e4978764cb87f7c5", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=fd1029e6dd3ec685cc496a0f129e39590a61830d", "patch": "@@ -2723,6 +2723,9 @@ fn check_decl_initializer(&@stmt_ctxt scx, &ast::def_id lid,\n         case (ast::init_assign) {\n             pushdown::pushdown_expr(scx, lty, init.expr);\n         }\n+        case (ast::init_move) {\n+            pushdown::pushdown_expr(scx, lty, init.expr);\n+        }\n         case (ast::init_recv) {\n             auto port_ty = ty::mk_port(scx.fcx.ccx.tcx, lty);\n             pushdown::pushdown_expr(scx, port_ty, init.expr);"}, {"sha": "0888880ae7859921b0001be3d6ce6a5fc305db60", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1029e6dd3ec685cc496a0f129e39590a61830d/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=fd1029e6dd3ec685cc496a0f129e39590a61830d", "patch": "@@ -865,9 +865,12 @@ fn print_decl(&ps s, &@ast::decl decl) {\n                         case (ast::init_assign) {\n                             word_space(s, \"=\");\n                         }\n-                        case (ast::init_recv) {\n+                        case (ast::init_move) {\n                             word_space(s, \"<-\");\n                         }\n+                        case (ast::init_recv) {\n+                            word_space(s, \"|>\");\n+                        }\n                     }\n                     print_expr(s, init.expr);\n                 }"}]}