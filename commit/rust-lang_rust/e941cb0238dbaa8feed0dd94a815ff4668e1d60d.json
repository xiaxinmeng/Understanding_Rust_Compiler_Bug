{"sha": "e941cb0238dbaa8feed0dd94a815ff4668e1d60d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NDFjYjAyMzhkYmFhOGZlZWQwZGQ5NGE4MTVmZjQ2NjhlMWQ2MGQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-03-15T14:05:16Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-03-15T14:05:16Z"}, "message": "Drop non-working mark", "tree": {"sha": "aaa8f3ccb1a86b5652d345c88c56307a573827d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaa8f3ccb1a86b5652d345c88c56307a573827d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e941cb0238dbaa8feed0dd94a815ff4668e1d60d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e941cb0238dbaa8feed0dd94a815ff4668e1d60d", "html_url": "https://github.com/rust-lang/rust/commit/e941cb0238dbaa8feed0dd94a815ff4668e1d60d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e941cb0238dbaa8feed0dd94a815ff4668e1d60d/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88cee24c6c473be62ed84f35639949f7a343aab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/88cee24c6c473be62ed84f35639949f7a343aab0", "html_url": "https://github.com/rust-lang/rust/commit/88cee24c6c473be62ed84f35639949f7a343aab0"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "e6cc6329cf773322f214c8921a4eaf4b8ff68f88", "filename": "crates/ide_completion/src/context.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e941cb0238dbaa8feed0dd94a815ff4668e1d60d/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e941cb0238dbaa8feed0dd94a815ff4668e1d60d/crates%2Fide_completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcontext.rs?ref=e941cb0238dbaa8feed0dd94a815ff4668e1d60d", "patch": "@@ -350,7 +350,6 @@ impl<'a> CompletionContext<'a> {\n                         },\n                         ast::IdentPat(it) => {\n                             cov_mark::hit!(expected_type_if_let_with_leading_char);\n-                            cov_mark::hit!(expected_type_if_let_without_leading_char);\n                             cov_mark::hit!(expected_type_match_arm_with_leading_char);\n                             let ty = self.sema.type_of_pat(&ast::Pat::from(it));\n \n@@ -748,7 +747,6 @@ fn foo() {\n \n     #[test]\n     fn expected_type_if_let_without_leading_char() {\n-        cov_mark::check!(expected_type_if_let_without_leading_char);\n         check_expected_type_and_name(\n             r#\"\n enum Foo { Bar, Baz, Quux }"}]}