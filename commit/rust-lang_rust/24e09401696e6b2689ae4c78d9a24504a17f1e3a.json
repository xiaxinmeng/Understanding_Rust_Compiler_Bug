{"sha": "24e09401696e6b2689ae4c78d9a24504a17f1e3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZTA5NDAxNjk2ZTZiMjY4OWFlNGM3OGQ5YTI0NTA0YTE3ZjFlM2E=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-12-07T20:24:07Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-04T10:31:11Z"}, "message": "Stabilize feature(iterator_fold_self): Iterator::reduce", "tree": {"sha": "78871e2327d3a7287547fc84b7631fb3f0020b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78871e2327d3a7287547fc84b7631fb3f0020b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24e09401696e6b2689ae4c78d9a24504a17f1e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24e09401696e6b2689ae4c78d9a24504a17f1e3a", "html_url": "https://github.com/rust-lang/rust/commit/24e09401696e6b2689ae4c78d9a24504a17f1e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24e09401696e6b2689ae4c78d9a24504a17f1e3a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26af55f5c63e248757ec2be72061e2bcfbc78331", "url": "https://api.github.com/repos/rust-lang/rust/commits/26af55f5c63e248757ec2be72061e2bcfbc78331", "html_url": "https://github.com/rust-lang/rust/commit/26af55f5c63e248757ec2be72061e2bcfbc78331"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "ddf52caed088a452414802dc9470169e2e33a217", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24e09401696e6b2689ae4c78d9a24504a17f1e3a/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e09401696e6b2689ae4c78d9a24504a17f1e3a/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=24e09401696e6b2689ae4c78d9a24504a17f1e3a", "patch": "@@ -14,7 +14,6 @@\n #![feature(const_fn_transmute)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]\n-#![feature(iterator_fold_self)]\n #![feature(label_break_value)]\n #![feature(nll)]\n #![feature(or_patterns)]"}, {"sha": "c69a9b063aeca618cd943422ae4e94ff8ecd409d", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/24e09401696e6b2689ae4c78d9a24504a17f1e3a/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e09401696e6b2689ae4c78d9a24504a17f1e3a/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=24e09401696e6b2689ae4c78d9a24504a17f1e3a", "patch": "@@ -6,7 +6,6 @@\n #![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]\n #![feature(in_band_lifetimes)]\n-#![feature(iterator_fold_self)]\n #![feature(once_cell)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]"}, {"sha": "6b42d456205cdd263637a0c29877e855d7644d90", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24e09401696e6b2689ae4c78d9a24504a17f1e3a/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e09401696e6b2689ae4c78d9a24504a17f1e3a/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=24e09401696e6b2689ae4c78d9a24504a17f1e3a", "patch": "@@ -2143,8 +2143,6 @@ pub trait Iterator {\n     /// Find the maximum value:\n     ///\n     /// ```\n-    /// #![feature(iterator_fold_self)]\n-    ///\n     /// fn find_max<I>(iter: I) -> Option<I::Item>\n     ///     where I: Iterator,\n     ///           I::Item: Ord,\n@@ -2160,7 +2158,7 @@ pub trait Iterator {\n     /// assert_eq!(find_max(b.iter()), None);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"iterator_fold_self\", issue = \"68125\")]\n+    #[stable(feature = \"iterator_fold_self\", since = \"1.51.0\")]\n     fn reduce<F>(mut self, f: F) -> Option<Self::Item>\n     where\n         Self: Sized,"}]}