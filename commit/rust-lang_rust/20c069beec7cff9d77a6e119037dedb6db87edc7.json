{"sha": "20c069beec7cff9d77a6e119037dedb6db87edc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzA2OWJlZWM3Y2ZmOWQ3N2E2ZTExOTAzN2RlZGI2ZGI4N2VkYzc=", "commit": {"author": {"name": "CrazyRoka", "email": "RokaRostuk@gmail.com", "date": "2020-04-29T19:40:57Z"}, "committer": {"name": "CrazyRoka", "email": "RokaRostuk@gmail.com", "date": "2020-04-29T19:40:57Z"}, "message": "Fixed incorrect suggestion of `clone_double_ref` lint\n\n- Added `<_>` to suggestion\n- Changed help message", "tree": {"sha": "ecfeb63448f7318b4b4199766cedcb1a53c79226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecfeb63448f7318b4b4199766cedcb1a53c79226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c069beec7cff9d77a6e119037dedb6db87edc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c069beec7cff9d77a6e119037dedb6db87edc7", "html_url": "https://github.com/rust-lang/rust/commit/20c069beec7cff9d77a6e119037dedb6db87edc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c069beec7cff9d77a6e119037dedb6db87edc7/comments", "author": {"login": "CrazyRoka", "id": 19844144, "node_id": "MDQ6VXNlcjE5ODQ0MTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/19844144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazyRoka", "html_url": "https://github.com/CrazyRoka", "followers_url": "https://api.github.com/users/CrazyRoka/followers", "following_url": "https://api.github.com/users/CrazyRoka/following{/other_user}", "gists_url": "https://api.github.com/users/CrazyRoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazyRoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazyRoka/subscriptions", "organizations_url": "https://api.github.com/users/CrazyRoka/orgs", "repos_url": "https://api.github.com/users/CrazyRoka/repos", "events_url": "https://api.github.com/users/CrazyRoka/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazyRoka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CrazyRoka", "id": 19844144, "node_id": "MDQ6VXNlcjE5ODQ0MTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/19844144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazyRoka", "html_url": "https://github.com/CrazyRoka", "followers_url": "https://api.github.com/users/CrazyRoka/followers", "following_url": "https://api.github.com/users/CrazyRoka/following{/other_user}", "gists_url": "https://api.github.com/users/CrazyRoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazyRoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazyRoka/subscriptions", "organizations_url": "https://api.github.com/users/CrazyRoka/orgs", "repos_url": "https://api.github.com/users/CrazyRoka/repos", "events_url": "https://api.github.com/users/CrazyRoka/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazyRoka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28197b622611ba3a6367648974ccf59127c287bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/28197b622611ba3a6367648974ccf59127c287bb", "html_url": "https://github.com/rust-lang/rust/commit/28197b622611ba3a6367648974ccf59127c287bb"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "3676dc5b09d21d7fdddcda2a79e4fd5677f9d780", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20c069beec7cff9d77a6e119037dedb6db87edc7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c069beec7cff9d77a6e119037dedb6db87edc7/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=20c069beec7cff9d77a6e119037dedb6db87edc7", "patch": "@@ -1942,7 +1942,7 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, arg: &hir:\n                         }\n                         let refs: String = iter::repeat('&').take(n + 1).collect();\n                         let derefs: String = iter::repeat('*').take(n).collect();\n-                        let explicit = format!(\"{}{}::clone({})\", refs, ty, snip);\n+                        let explicit = format!(\"<{}{}>::clone({})\", refs, ty, snip);\n                         diag.span_suggestion(\n                             expr.span,\n                             \"try dereferencing it\",\n@@ -1951,7 +1951,7 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, arg: &hir:\n                         );\n                         diag.span_suggestion(\n                             expr.span,\n-                            \"or try being explicit about what type to clone\",\n+                            \"or try being explicit if you are sure, that you want to clone a reference\",\n                             explicit,\n                             Applicability::MaybeIncorrect,\n                         );"}, {"sha": "f1cc5b564c1dca66329e21bf9b3c02cc22c7ce4d", "filename": "tests/ui/unnecessary_clone.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20c069beec7cff9d77a6e119037dedb6db87edc7/tests%2Fui%2Funnecessary_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c069beec7cff9d77a6e119037dedb6db87edc7/tests%2Fui%2Funnecessary_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.rs?ref=20c069beec7cff9d77a6e119037dedb6db87edc7", "patch": "@@ -109,4 +109,9 @@ mod many_derefs {\n         let _: E = a.clone();\n         let _: E = *****a;\n     }\n+\n+    fn check(mut encoded: &[u8]) {\n+        let _ = &mut encoded.clone();\n+        let _ = &encoded.clone();\n+    }\n }"}, {"sha": "6176a2bc4647987a44a5a60c0197dd50c83c2e2d", "filename": "tests/ui/unnecessary_clone.stderr", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/20c069beec7cff9d77a6e119037dedb6db87edc7/tests%2Fui%2Funnecessary_clone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/20c069beec7cff9d77a6e119037dedb6db87edc7/tests%2Fui%2Funnecessary_clone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_clone.stderr?ref=20c069beec7cff9d77a6e119037dedb6db87edc7", "patch": "@@ -85,16 +85,46 @@ help: try dereferencing it\n    |\n LL |     let z: &Vec<_> = &(*y).clone();\n    |                      ^^^^^^^^^^^^^\n-help: or try being explicit about what type to clone\n+help: or try being explicit if you are sure, that you want to clone a reference\n    |\n-LL |     let z: &Vec<_> = &std::vec::Vec<i32>::clone(y);\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |     let z: &Vec<_> = <&std::vec::Vec<i32>>::clone(y);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: using `clone` on a `Copy` type\n   --> $DIR/unnecessary_clone.rs:109:20\n    |\n LL |         let _: E = a.clone();\n    |                    ^^^^^^^^^ help: try dereferencing it: `*****a`\n \n-error: aborting due to 14 previous errors\n+error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n+  --> $DIR/unnecessary_clone.rs:114:22\n+   |\n+LL |         let _ = &mut encoded.clone();\n+   |                      ^^^^^^^^^^^^^^^\n+   |\n+help: try dereferencing it\n+   |\n+LL |         let _ = &mut &(*encoded).clone();\n+   |                      ^^^^^^^^^^^^^^^^^^^\n+help: or try being explicit if you are sure, that you want to clone a reference\n+   |\n+LL |         let _ = &mut <&[u8]>::clone(encoded);\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n+  --> $DIR/unnecessary_clone.rs:115:18\n+   |\n+LL |         let _ = &encoded.clone();\n+   |                  ^^^^^^^^^^^^^^^\n+   |\n+help: try dereferencing it\n+   |\n+LL |         let _ = &&(*encoded).clone();\n+   |                  ^^^^^^^^^^^^^^^^^^^\n+help: or try being explicit if you are sure, that you want to clone a reference\n+   |\n+LL |         let _ = &<&[u8]>::clone(encoded);\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 16 previous errors\n "}]}