{"sha": "d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "node_id": "C_kwDOAAsO6NoAKGQxY2ExYzFkMGMzZjhlZTIwZDU4ZjJmYzU3YzlmMGU5M2RhMzdkMjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-26T14:49:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-02-26T14:49:39Z"}, "message": "Auto merge of #8462 - ken-matsui:use-precise-namespace-for-reverse, r=llogiq\n\nUse the precise namespace for `Reverse`\n\nCloses: https://github.com/rust-lang/rust-clippy/issues/8461\n\nchangelog: [`unnecessary_sort_by`](https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_sort_by): Use the precise namespace for `Reverse`", "tree": {"sha": "549b1c0b2264c53843039c65fa1b13c7603564f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549b1c0b2264c53843039c65fa1b13c7603564f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "html_url": "https://github.com/rust-lang/rust/commit/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e329249b6a3a98830d860c74c8234a8dd9407436", "url": "https://api.github.com/repos/rust-lang/rust/commits/e329249b6a3a98830d860c74c8234a8dd9407436", "html_url": "https://github.com/rust-lang/rust/commit/e329249b6a3a98830d860c74c8234a8dd9407436"}, {"sha": "7412e6976ec6a582bdec141509f96dfb1d0bcf76", "url": "https://api.github.com/repos/rust-lang/rust/commits/7412e6976ec6a582bdec141509f96dfb1d0bcf76", "html_url": "https://github.com/rust-lang/rust/commit/7412e6976ec6a582bdec141509f96dfb1d0bcf76"}], "stats": {"total": 46, "additions": 21, "deletions": 25}, "files": [{"sha": "075b5e43cc742ea867ea69b0efbad830dad9b3ae", "filename": "clippy_lints/src/unnecessary_sort_by.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_sort_by.rs?ref=d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "patch": "@@ -239,7 +239,7 @@ impl LateLintPass<'_> for UnnecessarySortBy {\n                     if trigger.unstable { \"_unstable\" } else { \"\" },\n                     trigger.closure_arg,\n                     if trigger.reverse {\n-                        format!(\"Reverse({})\", trigger.closure_body)\n+                        format!(\"std::cmp::Reverse({})\", trigger.closure_body)\n                     } else {\n                         trigger.closure_body.to_string()\n                     },"}, {"sha": "21e2da474a8200e05710d508bc52974586262fb7", "filename": "tests/ui/unnecessary_sort_by.fixed", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.fixed?ref=d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "patch": "@@ -3,7 +3,6 @@\n #![allow(clippy::stable_sort_primitive)]\n \n use std::cell::Ref;\n-use std::cmp::Reverse;\n \n fn unnecessary_sort_by() {\n     fn id(x: isize) -> isize {\n@@ -18,8 +17,8 @@ fn unnecessary_sort_by() {\n     vec.sort_unstable_by_key(|a| id(-a));\n     // Reverse examples\n     vec.sort_by(|a, b| b.cmp(a)); // not linted to avoid suggesting `Reverse(b)` which would borrow\n-    vec.sort_by_key(|b| Reverse((b + 5).abs()));\n-    vec.sort_unstable_by_key(|b| Reverse(id(-b)));\n+    vec.sort_by_key(|b| std::cmp::Reverse((b + 5).abs()));\n+    vec.sort_unstable_by_key(|b| std::cmp::Reverse(id(-b)));\n     // Negative examples (shouldn't be changed)\n     let c = &7;\n     vec.sort_by(|a, b| (b - a).cmp(&(a - b)));\n@@ -76,7 +75,6 @@ mod issue_5754 {\n \n // The closure parameter is not dereferenced anymore, so non-Copy types can be linted\n mod issue_6001 {\n-    use super::*;\n     struct Test(String);\n \n     impl Test {\n@@ -93,8 +91,8 @@ mod issue_6001 {\n         args.sort_by_key(|a| a.name());\n         args.sort_unstable_by_key(|a| a.name());\n         // Reverse\n-        args.sort_by_key(|b| Reverse(b.name()));\n-        args.sort_unstable_by_key(|b| Reverse(b.name()));\n+        args.sort_by_key(|b| std::cmp::Reverse(b.name()));\n+        args.sort_unstable_by_key(|b| std::cmp::Reverse(b.name()));\n     }\n }\n "}, {"sha": "3365bf6e119e2463528822bb0f25438e485ea58f", "filename": "tests/ui/unnecessary_sort_by.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.rs?ref=d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "patch": "@@ -3,7 +3,6 @@\n #![allow(clippy::stable_sort_primitive)]\n \n use std::cell::Ref;\n-use std::cmp::Reverse;\n \n fn unnecessary_sort_by() {\n     fn id(x: isize) -> isize {\n@@ -76,7 +75,6 @@ mod issue_5754 {\n \n // The closure parameter is not dereferenced anymore, so non-Copy types can be linted\n mod issue_6001 {\n-    use super::*;\n     struct Test(String);\n \n     impl Test {"}, {"sha": "89da5e7ea8b9bf475bb0a36ee45f29602404888e", "filename": "tests/ui/unnecessary_sort_by.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21/tests%2Fui%2Funnecessary_sort_by.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_sort_by.stderr?ref=d1ca1c1d0c3f8ee20d58f2fc57c9f0e93da37d21", "patch": "@@ -1,76 +1,76 @@\n error: use Vec::sort here instead\n-  --> $DIR/unnecessary_sort_by.rs:15:5\n+  --> $DIR/unnecessary_sort_by.rs:14:5\n    |\n LL |     vec.sort_by(|a, b| a.cmp(b));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort()`\n    |\n    = note: `-D clippy::unnecessary-sort-by` implied by `-D warnings`\n \n error: use Vec::sort here instead\n-  --> $DIR/unnecessary_sort_by.rs:16:5\n+  --> $DIR/unnecessary_sort_by.rs:15:5\n    |\n LL |     vec.sort_unstable_by(|a, b| a.cmp(b));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable()`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:17:5\n+  --> $DIR/unnecessary_sort_by.rs:16:5\n    |\n LL |     vec.sort_by(|a, b| (a + 5).abs().cmp(&(b + 5).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|a| (a + 5).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:18:5\n+  --> $DIR/unnecessary_sort_by.rs:17:5\n    |\n LL |     vec.sort_unstable_by(|a, b| id(-a).cmp(&id(-b)));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|a| id(-a))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:21:5\n+  --> $DIR/unnecessary_sort_by.rs:20:5\n    |\n LL |     vec.sort_by(|a, b| (b + 5).abs().cmp(&(a + 5).abs()));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|b| Reverse((b + 5).abs()))`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|b| std::cmp::Reverse((b + 5).abs()))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:22:5\n+  --> $DIR/unnecessary_sort_by.rs:21:5\n    |\n LL |     vec.sort_unstable_by(|a, b| id(-b).cmp(&id(-a)));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|b| Reverse(id(-b)))`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|b| std::cmp::Reverse(id(-b)))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:32:5\n+  --> $DIR/unnecessary_sort_by.rs:31:5\n    |\n LL |     vec.sort_by(|a, b| (***a).abs().cmp(&(***b).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_by_key(|a| (***a).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:33:5\n+  --> $DIR/unnecessary_sort_by.rs:32:5\n    |\n LL |     vec.sort_unstable_by(|a, b| (***a).abs().cmp(&(***b).abs()));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.sort_unstable_by_key(|a| (***a).abs())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:93:9\n+  --> $DIR/unnecessary_sort_by.rs:91:9\n    |\n LL |         args.sort_by(|a, b| a.name().cmp(&b.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_by_key(|a| a.name())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:94:9\n+  --> $DIR/unnecessary_sort_by.rs:92:9\n    |\n LL |         args.sort_unstable_by(|a, b| a.name().cmp(&b.name()));\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_unstable_by_key(|a| a.name())`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:96:9\n+  --> $DIR/unnecessary_sort_by.rs:94:9\n    |\n LL |         args.sort_by(|a, b| b.name().cmp(&a.name()));\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_by_key(|b| Reverse(b.name()))`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_by_key(|b| std::cmp::Reverse(b.name()))`\n \n error: use Vec::sort_by_key here instead\n-  --> $DIR/unnecessary_sort_by.rs:97:9\n+  --> $DIR/unnecessary_sort_by.rs:95:9\n    |\n LL |         args.sort_unstable_by(|a, b| b.name().cmp(&a.name()));\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_unstable_by_key(|b| Reverse(b.name()))`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `args.sort_unstable_by_key(|b| std::cmp::Reverse(b.name()))`\n \n error: aborting due to 12 previous errors\n "}]}