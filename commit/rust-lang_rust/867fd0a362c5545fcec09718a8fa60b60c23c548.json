{"sha": "867fd0a362c5545fcec09718a8fa60b60c23c548", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2N2ZkMGEzNjJjNTU0NWZjZWMwOTcxOGE4ZmE2MGI2MGMyM2M1NDg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-10-24T15:37:28Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-10-27T14:04:06Z"}, "message": "project: add a recursion limit to \"tail-recursive\" projections\n\nFixes #21946\nFixes #23992\nFixes #25945", "tree": {"sha": "c4265820b326feae47b768cf2bf2706b4c21db6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4265820b326feae47b768cf2bf2706b4c21db6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/867fd0a362c5545fcec09718a8fa60b60c23c548", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/867fd0a362c5545fcec09718a8fa60b60c23c548", "html_url": "https://github.com/rust-lang/rust/commit/867fd0a362c5545fcec09718a8fa60b60c23c548", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/867fd0a362c5545fcec09718a8fa60b60c23c548/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0152a93bb41ba360b41dd62451c2472fc5978d0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0152a93bb41ba360b41dd62451c2472fc5978d0c", "html_url": "https://github.com/rust-lang/rust/commit/0152a93bb41ba360b41dd62451c2472fc5978d0c"}], "stats": {"total": 55, "additions": 53, "deletions": 2}, "files": [{"sha": "c1ff0f985cbaaa732e652aa16010b750bc94de80", "filename": "src/librustc/middle/traits/project.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs?ref=867fd0a362c5545fcec09718a8fa60b60c23c548", "patch": "@@ -343,7 +343,8 @@ pub fn normalize_projection_type<'a,'b,'tcx>(\n                 projection_ty: projection_ty,\n                 ty: ty_var\n             });\n-            let obligation = Obligation::with_depth(cause, depth+1, projection.to_predicate());\n+            let obligation = Obligation::with_depth(\n+                cause, depth + 1, projection.to_predicate());\n             Normalized {\n                 value: ty_var,\n                 obligations: vec!(obligation)\n@@ -382,7 +383,7 @@ fn opt_normalize_projection_type<'a,'b,'tcx>(\n                    obligations);\n \n             if projected_ty.has_projection_types() {\n-                let mut normalizer = AssociatedTypeNormalizer::new(selcx, cause, depth);\n+                let mut normalizer = AssociatedTypeNormalizer::new(selcx, cause, depth+1);\n                 let normalized_ty = normalizer.fold(&projected_ty);\n \n                 debug!(\"normalize_projection_type: normalized_ty={:?} depth={}\","}, {"sha": "0d652be5c2611a9ef904faddcb938a30621621cd", "filename": "src/test/compile-fail/issue-21946.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Ftest%2Fcompile-fail%2Fissue-21946.rs", "raw_url": "https://github.com/rust-lang/rust/raw/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Ftest%2Fcompile-fail%2Fissue-21946.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21946.rs?ref=867fd0a362c5545fcec09718a8fa60b60c23c548", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {\n+    type A;\n+}\n+\n+struct FooStruct;\n+\n+impl Foo for FooStruct {\n+//~^ ERROR overflow evaluating the requirement `<FooStruct as Foo>::A`\n+    type A = <FooStruct as Foo>::A;\n+}\n+\n+fn main() {}"}, {"sha": "d1ee4208b781a57032c884f2c2c0b073d6c07385", "filename": "src/test/run-pass/issue-23992.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Ftest%2Frun-pass%2Fissue-23992.rs", "raw_url": "https://github.com/rust-lang/rust/raw/867fd0a362c5545fcec09718a8fa60b60c23c548/src%2Ftest%2Frun-pass%2Fissue-23992.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-23992.rs?ref=867fd0a362c5545fcec09718a8fa60b60c23c548", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Outer<T: Trait>(T);\n+pub struct Inner<'a> { value: &'a bool }\n+\n+pub trait Trait {\n+    type Error;\n+    fn ready(self) -> Self::Error;\n+}\n+\n+impl<'a> Trait for Inner<'a> {\n+    type Error = Outer<Inner<'a>>;\n+    fn ready(self) -> Outer<Inner<'a>> { Outer(self) }\n+}\n+\n+fn main() {\n+    let value = true;\n+    let inner = Inner { value: &value };\n+    assert_eq!(inner.ready().0.value, &value);\n+}"}]}