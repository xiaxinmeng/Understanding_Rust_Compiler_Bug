{"sha": "e720218ffb6553764b516e074fee96eb0efb79e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MjAyMThmZmI2NTUzNzY0YjUxNmUwNzRmZWU5NmViMGVmYjc5ZTk=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-21T21:35:45Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-10-21T21:35:45Z"}, "message": "Improve handling of commas after match arms.\n\nFixes #507. Fixes #508.", "tree": {"sha": "ede5911024109e42891364eade16c7b67baf1be4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ede5911024109e42891364eade16c7b67baf1be4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e720218ffb6553764b516e074fee96eb0efb79e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e720218ffb6553764b516e074fee96eb0efb79e9", "html_url": "https://github.com/rust-lang/rust/commit/e720218ffb6553764b516e074fee96eb0efb79e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e720218ffb6553764b516e074fee96eb0efb79e9/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca50af7f03f7be722f1406a4fbcd2fb74cd751dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca50af7f03f7be722f1406a4fbcd2fb74cd751dc", "html_url": "https://github.com/rust-lang/rust/commit/ca50af7f03f7be722f1406a4fbcd2fb74cd751dc"}], "stats": {"total": 53, "additions": 48, "deletions": 5}, "files": [{"sha": "c619376f2769d7ebfedc9bcd5a343250adaa2773", "filename": "src/expr.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e720218ffb6553764b516e074fee96eb0efb79e9/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e720218ffb6553764b516e074fee96eb0efb79e9/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=e720218ffb6553764b516e074fee96eb0efb79e9", "patch": "@@ -779,6 +779,7 @@ fn rewrite_match(context: &RewriteContext,\n             // We couldn't format the arm, just reproduce the source.\n             let snippet = context.snippet(mk_sp(arm_start_pos(arm), arm_end_pos(arm)));\n             result.push_str(&snippet);\n+            result.push_str(arm_comma(&arm.body));\n         }\n     }\n     // BytePos(1) = closing match brace.\n@@ -809,6 +810,18 @@ fn arm_end_pos(arm: &ast::Arm) -> BytePos {\n     arm.body.span.hi\n }\n \n+fn arm_comma(body: &ast::Expr) -> &'static str {\n+    if let ast::ExprBlock(ref block) = body.node {\n+        if let ast::DefaultBlock = block.rules {\n+            \"\"\n+        } else {\n+            \",\"\n+        }\n+    } else {\n+        \",\"\n+    }\n+}\n+\n // Match arms.\n impl Rewrite for ast::Arm {\n     fn rewrite(&self, context: &RewriteContext, width: usize, offset: Indent) -> Option<String> {\n@@ -881,11 +894,7 @@ impl Rewrite for ast::Arm {\n             line_start += offset.width();\n         }\n \n-        let comma = if let ast::ExprBlock(_) = body.node {\n-            \"\"\n-        } else {\n-            \",\"\n-        };\n+        let comma = arm_comma(body);\n \n         // Let's try and get the arm body on the same line as the condition.\n         // 4 = ` => `.len()"}, {"sha": "9ed25756d648152d87a03a16d662cfbb5915e21f", "filename": "tests/source/match.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e720218ffb6553764b516e074fee96eb0efb79e9/tests%2Fsource%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e720218ffb6553764b516e074fee96eb0efb79e9/tests%2Fsource%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch.rs?ref=e720218ffb6553764b516e074fee96eb0efb79e9", "patch": "@@ -226,3 +226,20 @@ fn issue280() {\n fn issue383() {\n     match resolution.last_private {LastImport{..} => false, _ => true};\n }\n+\n+fn issue507() {\n+    match 1 {\n+        1 => unsafe { std::intrinsics::abort() },\n+        _ => (),\n+    }\n+}\n+\n+fn issue508() {\n+    match s.type_id() {\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+                    HTMLElementTypeId::HTMLCanvasElement))) => true,\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+                        HTMLElementTypeId::HTMLObjectElement))) => s.has_object_data(),\n+        Some(NodeTypeId::Element(_)) => false,\n+    }\n+}"}, {"sha": "2e1a1b886ec1ae5f32d36a24aa8c8cf2271ea57e", "filename": "tests/target/match.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e720218ffb6553764b516e074fee96eb0efb79e9/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e720218ffb6553764b516e074fee96eb0efb79e9/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=e720218ffb6553764b516e074fee96eb0efb79e9", "patch": "@@ -230,3 +230,20 @@ fn issue383() {\n         _ => true,\n     }\n }\n+\n+fn issue507() {\n+    match 1 {\n+        1 => unsafe { std::intrinsics::abort() },\n+        _ => (),\n+    }\n+}\n+\n+fn issue508() {\n+    match s.type_id() {\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+                    HTMLElementTypeId::HTMLCanvasElement))) => true,\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+                        HTMLElementTypeId::HTMLObjectElement))) => s.has_object_data(),\n+        Some(NodeTypeId::Element(_)) => false,\n+    }\n+}"}]}