{"sha": "945c027768d96473a33f9914eea21326f82836bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NWMwMjc3NjhkOTY0NzNhMzNmOTkxNGVlYTIxMzI2ZjgyODM2YmM=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-11-17T18:44:18Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-11-17T18:44:18Z"}, "message": "Handle closure with single expression blocks", "tree": {"sha": "509eedb096c2d65930f28307675c4919fe5f32a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/509eedb096c2d65930f28307675c4919fe5f32a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/945c027768d96473a33f9914eea21326f82836bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJYLfswAAoJEF5CfHlMukXoHDkQAKlV6BtIBtAt0QiszZuBV9ec\nLsv9HYlrFkrXA933813diEyou4unQymU1NMtik1SVhcj2mNiUmZ2mipKOboR1I9c\nKjJ65RujbFkKoEMi/Oiwp83sW4sCKx8ICkORpcqVv1rszo+tkkmVUstXozONL9z5\n6qIHTzZKs3kzIJP5IPFdXHYygoAXB4MSzA24OdY0nJ38CN9frFryAAZfTAGUOX2C\nit8buZxMB38kNu/yIA6ER3fwx8sdW1ehJ1bmN3Ko4r6ZwyASZULNdGjNNg9TjGJ6\nG97oGUHN3601eSrnVcZBZRBP+G1Z/7sGIKYjv4DaKiXqm5iiv1YpGz62yR9rcTCG\nplhJqMyqGAfrP2mUxu5+qFVdpx4tl92gHjlyxtqNpxQ0fL1jPVC/aD/E1hCjGs66\nlNlUyM/cQnQKawVXpos1pTHILqkhHwflff9SG0tnIOViHy0eYnDukHoOLYFhgiJZ\n02jfplxXhAtuWXrdmhjKFu4KEl96MNg7VD+AEWhvzkn++XusPTDHyQuHJQLL08ND\nf9uR7Ch2IanQWXsE5CiQHFelYK8RpdunNBVXRBHmLKYgbfm3rWGUy3AdakjeZsVF\naL8mZmXp2pX16Fs7G2pkNEgv2QxNxlWKfm3epjINHhXTyuNP3aszrv3fUiGMbHB4\nQOUzVRDlOQ7GICWGzb/J\n=MrAn\n-----END PGP SIGNATURE-----", "payload": "tree 509eedb096c2d65930f28307675c4919fe5f32a7\nparent 19c5f5394bc623b29abd1bd3afb7a8af0a691ec3\nauthor mcarton <cartonmartin+git@gmail.com> 1479408258 +0100\ncommitter mcarton <cartonmartin+git@gmail.com> 1479408258 +0100\n\nHandle closure with single expression blocks\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/945c027768d96473a33f9914eea21326f82836bc", "html_url": "https://github.com/rust-lang/rust/commit/945c027768d96473a33f9914eea21326f82836bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/945c027768d96473a33f9914eea21326f82836bc/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c5f5394bc623b29abd1bd3afb7a8af0a691ec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c5f5394bc623b29abd1bd3afb7a8af0a691ec3", "html_url": "https://github.com/rust-lang/rust/commit/19c5f5394bc623b29abd1bd3afb7a8af0a691ec3"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "674f2bbc11a8e28c69b3084f54eedb757e6545dd", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/945c027768d96473a33f9914eea21326f82836bc/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/945c027768d96473a33f9914eea21326f82836bc/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=945c027768d96473a33f9914eea21326f82836bc", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::*;\n use rustc::hir::*;\n use syntax::ast;\n-use utils::{is_adjusted, match_path, match_trait_method, match_type, paths, snippet,\n+use utils::{is_adjusted, match_path, match_trait_method, match_type, remove_blocks, paths, snippet,\n             span_help_and_lint, walk_ptrs_ty, walk_ptrs_ty_depth};\n \n /// **What it does:** Checks for mapping `clone()` over an iterator.\n@@ -31,6 +31,7 @@ impl LateLintPass for Pass {\n             if name.node.as_str() == \"map\" && args.len() == 2 {\n                 match args[1].node {\n                     ExprClosure(_, ref decl, ref closure_expr, _) => {\n+                        let closure_expr = remove_blocks(closure_expr);\n                         if_let_chain! {[\n                             // nothing special in the argument, besides reference bindings\n                             // (e.g. .map(|&x| x) )"}, {"sha": "122ba9cdc1ae9e6b8258e145e1ed85841b0bbfd9", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/945c027768d96473a33f9914eea21326f82836bc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/945c027768d96473a33f9914eea21326f82836bc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=945c027768d96473a33f9914eea21326f82836bc", "patch": "@@ -773,3 +773,22 @@ pub fn is_refutable(cx: &LateContext, pat: &Pat) -> bool {\n pub fn is_automatically_derived(attrs: &[ast::Attribute]) -> bool {\n     attr::contains_name(attrs, \"automatically_derived\")\n }\n+\n+/// Remove blocks around an expression.\n+///\n+/// Ie. `x`, `{ x }` and `{{{{ x }}}}` all give `x`. `{ x; y }` and `{}` return themselves.\n+pub fn remove_blocks(expr: &Expr) -> &Expr {\n+    if let ExprBlock(ref block) = expr.node {\n+        if block.stmts.is_empty() {\n+            if let Some(ref expr) = block.expr {\n+                remove_blocks(expr)\n+            } else {\n+                expr\n+            }\n+        } else {\n+            expr\n+        }\n+    } else {\n+        expr\n+    }\n+}"}, {"sha": "b4f97ae8e6e435178747891decee7cdd05c4b37f", "filename": "tests/compile-fail/map_clone.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/945c027768d96473a33f9914eea21326f82836bc/tests%2Fcompile-fail%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/945c027768d96473a33f9914eea21326f82836bc/tests%2Fcompile-fail%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmap_clone.rs?ref=945c027768d96473a33f9914eea21326f82836bc", "patch": "@@ -15,6 +15,12 @@ fn map_clone_iter() {\n                           //~^ HELP try\n     x.iter().map(|y| *y); //~ ERROR you seem to be using .map()\n                           //~^ HELP try\n+    x.iter().map(|y| { y.clone() }); //~ ERROR you seem to be using .map()\n+                                 //~^ HELP try\n+    x.iter().map(|&y| { y }); //~ ERROR you seem to be using .map()\n+                          //~^ HELP try\n+    x.iter().map(|y| { *y }); //~ ERROR you seem to be using .map()\n+                          //~^ HELP try\n     x.iter().map(Clone::clone); //~ ERROR you seem to be using .map()\n                                 //~^ HELP try\n }"}]}