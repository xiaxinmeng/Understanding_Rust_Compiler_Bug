{"sha": "e6d28d2ea22f7a4985a1e5212aab58535a64ba15", "node_id": "C_kwDOAAsO6NoAKGU2ZDI4ZDJlYTIyZjdhNDk4NWExZTUyMTJhYWI1ODUzNWE2NGJhMTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-18T22:17:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-18T22:17:12Z"}, "message": "Rollup merge of #97511 - jyn514:faster-cargo-build, r=Mark-Simulacrum\n\nDon't build the compiler before building rust-demangler\n\nThis saves a lot of time compiling, since rust-demangler doesn't actually use any unstable features.\n\nThis is not quite ideal because it uses ToolStd, not ToolBootstrap, so rust-demangler would be able to add unstable library features in the future. But it's a lot better than before, and `builder.cargo` doesn't currently know how to handle stages other than 0.", "tree": {"sha": "71361d17c63996676fa7903018bd966b1e870ee2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71361d17c63996676fa7903018bd966b1e870ee2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6d28d2ea22f7a4985a1e5212aab58535a64ba15", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJirk7pCRBK7hj4Ov3rIwAA9YcIAIktdqHOLKgsCKnCj2mUwiKx\n4hqcLuwYRNEzKCyqFX3SxTtjATzlsFR4EjXhCnf7lGTBRjICTX80k9xTBQ3vmb3+\ntKJAJpxZMPfZWmPnehFSS/mPIdew3BstbS/ceekHGcK5GSwN9Quua+52VsYyTasR\nEtKZL5nB+jlNLezgR58B5+pRoIMA+ojGmUTnWPc0+ZpBsBjFDE3EFdfg+eKjGo2l\njJsUMRtuId2r1PG2pKVJnA1avkin1xqQknoEJUs1l/tTfAqzhMJSkniaXauVBH4s\nWfzre64/QmD/gnhmxVtdvwjU9TWC5unnnmZod/5QnYx1hSSiAoJKRKx1dPrj9SI=\n=9+lX\n-----END PGP SIGNATURE-----\n", "payload": "tree 71361d17c63996676fa7903018bd966b1e870ee2\nparent 21e9336fe81a1fce364349bb7a35a0347c369f34\nparent 37f9cdbd9be2504861bdafd59cbae9d1aebe24c4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1655590632 +0200\ncommitter GitHub <noreply@github.com> 1655590632 +0200\n\nRollup merge of #97511 - jyn514:faster-cargo-build, r=Mark-Simulacrum\n\nDon't build the compiler before building rust-demangler\n\nThis saves a lot of time compiling, since rust-demangler doesn't actually use any unstable features.\n\nThis is not quite ideal because it uses ToolStd, not ToolBootstrap, so rust-demangler would be able to add unstable library features in the future. But it's a lot better than before, and `builder.cargo` doesn't currently know how to handle stages other than 0.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d28d2ea22f7a4985a1e5212aab58535a64ba15", "html_url": "https://github.com/rust-lang/rust/commit/e6d28d2ea22f7a4985a1e5212aab58535a64ba15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6d28d2ea22f7a4985a1e5212aab58535a64ba15/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21e9336fe81a1fce364349bb7a35a0347c369f34", "url": "https://api.github.com/repos/rust-lang/rust/commits/21e9336fe81a1fce364349bb7a35a0347c369f34", "html_url": "https://github.com/rust-lang/rust/commit/21e9336fe81a1fce364349bb7a35a0347c369f34"}, {"sha": "37f9cdbd9be2504861bdafd59cbae9d1aebe24c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f9cdbd9be2504861bdafd59cbae9d1aebe24c4", "html_url": "https://github.com/rust-lang/rust/commit/37f9cdbd9be2504861bdafd59cbae9d1aebe24c4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "905fa431d29d123f380522030b831875c25427b6", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6d28d2ea22f7a4985a1e5212aab58535a64ba15/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6d28d2ea22f7a4985a1e5212aab58535a64ba15/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=e6d28d2ea22f7a4985a1e5212aab58535a64ba15", "patch": "@@ -692,6 +692,7 @@ macro_rules! tool_extended {\n        stable = $stable:expr,\n        $(in_tree = $in_tree:expr,)?\n        $(submodule = $submodule:literal,)?\n+       $(tool_std = $tool_std:literal,)?\n        $extra_deps:block;)+) => {\n         $(\n             #[derive(Debug, Clone, Hash, PartialEq, Eq)]\n@@ -740,7 +741,7 @@ macro_rules! tool_extended {\n                     compiler: $sel.compiler,\n                     target: $sel.target,\n                     tool: $tool_name,\n-                    mode: Mode::ToolRustc,\n+                    mode: if false $(|| $tool_std)? { Mode::ToolStd } else { Mode::ToolRustc },\n                     path: $path,\n                     extra_features: $sel.extra_features,\n                     is_optional_tool: true,\n@@ -774,7 +775,10 @@ tool_extended!((self, builder),\n         });\n         self.extra_features.push(\"clippy\".to_owned());\n     };\n-    RustDemangler, rust_demangler, \"src/tools/rust-demangler\", \"rust-demangler\", stable=false, in_tree=true, {};\n+    // FIXME: tool_std is not quite right, we shouldn't allow nightly features.\n+    // But `builder.cargo` doesn't know how to handle ToolBootstrap in stages other than 0,\n+    // and this is close enough for now.\n+    RustDemangler, rust_demangler, \"src/tools/rust-demangler\", \"rust-demangler\", stable=false, in_tree=true, tool_std=true, {};\n     Rustfmt, rustfmt, \"src/tools/rustfmt\", \"rustfmt\", stable=true, in_tree=true, {};\n     RustAnalyzer, rust_analyzer, \"src/tools/rust-analyzer/crates/rust-analyzer\", \"rust-analyzer\", stable=false, submodule=\"rust-analyzer\", {};\n );"}]}