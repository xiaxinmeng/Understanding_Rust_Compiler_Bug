{"sha": "6a358960da438efca794020bf5497b41ce3ffe17", "node_id": "C_kwDOAAsO6NoAKDZhMzU4OTYwZGE0MzhlZmNhNzk0MDIwYmY1NDk3YjQxY2UzZmZlMTc", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-09T20:46:54Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-25T15:15:05Z"}, "message": "rustc_metadata: specialize private_dep flag with `fetch_and`", "tree": {"sha": "0b6fd5c2a87ba3b993e5f83b2356b38e0d963d28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b6fd5c2a87ba3b993e5f83b2356b38e0d963d28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a358960da438efca794020bf5497b41ce3ffe17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a358960da438efca794020bf5497b41ce3ffe17", "html_url": "https://github.com/rust-lang/rust/commit/6a358960da438efca794020bf5497b41ce3ffe17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a358960da438efca794020bf5497b41ce3ffe17/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd90868b3f7458fa00dbd6b12927153f28556467", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd90868b3f7458fa00dbd6b12927153f28556467", "html_url": "https://github.com/rust-lang/rust/commit/bd90868b3f7458fa00dbd6b12927153f28556467"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "96dc187611d76eca95545c9ce9c13aafd19debec", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=6a358960da438efca794020bf5497b41ce3ffe17", "patch": "@@ -143,19 +143,10 @@ cfg_if! {\n                 self.0.set(val);\n                 result\n             }\n-            pub fn fetch_update(\n-                &self,\n-                _order_set: Ordering,\n-                _order_get: Ordering,\n-                mut f: impl FnMut(bool) -> Option<bool>,\n-            ) -> Result<bool, bool> {\n-                let prev = self.0.get();\n-                if let Some(next) = f(prev) {\n-                    self.0.set(next);\n-                    Ok(prev)\n-                } else {\n-                    Err(prev)\n-                }\n+            pub fn fetch_and(&self, val: bool, _: Ordering) -> bool {\n+                let result = self.0.get() & val;\n+                self.0.set(val);\n+                result\n             }\n         }\n "}, {"sha": "4c872664c3dcaa5ed46e6c5479211be047566126", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=6a358960da438efca794020bf5497b41ce3ffe17", "patch": "@@ -570,7 +570,7 @@ impl<'a, 'tcx> CrateLoader<'a, 'tcx> {\n                 }\n                 data.update_dep_kind(|data_dep_kind| cmp::max(data_dep_kind, dep_kind));\n                 if let Some(private_dep) = private_dep {\n-                    data.update_private_dep(|p_d| p_d && private_dep);\n+                    data.update_and_private_dep(private_dep);\n                 }\n                 Ok(cnum)\n             }"}, {"sha": "d2995b198f6ddc031a069a0d6f69e895d3ac35e5", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a358960da438efca794020bf5497b41ce3ffe17/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=6a358960da438efca794020bf5497b41ce3ffe17", "patch": "@@ -1668,11 +1668,8 @@ impl CrateMetadata {\n         self.dep_kind.with_lock(|dep_kind| *dep_kind = f(*dep_kind))\n     }\n \n-    /// `f` must not perform any I/O or take any locks. It may be called more than once.\n-    pub(crate) fn update_private_dep(&self, mut f: impl FnMut(bool) -> bool) {\n-        self.private_dep\n-            .fetch_update(Ordering::Release, Ordering::Acquire, |private_dep| Some(f(private_dep)))\n-            .expect(\"fetch_update only returns Err if `f` returns None`, which it doesn't\");\n+    pub(crate) fn update_and_private_dep(&self, private_dep: bool) {\n+        self.private_dep.fetch_and(private_dep, Ordering::SeqCst);\n     }\n \n     pub(crate) fn required_panic_strategy(&self) -> Option<PanicStrategy> {"}]}