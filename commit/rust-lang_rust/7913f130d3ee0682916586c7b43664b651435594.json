{"sha": "7913f130d3ee0682916586c7b43664b651435594", "node_id": "C_kwDOAAsO6NoAKDc5MTNmMTMwZDNlZTA2ODI5MTY1ODZjN2I0MzY2NGI2NTE0MzU1OTQ", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-01-13T07:39:58Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-01-17T20:01:22Z"}, "message": "Add term to ExistentialProjection\n\nAlso prevent ICE when adding a const in associated const equality.", "tree": {"sha": "dc5b352564d4bbfce8b81cd71a7ba018c9ffcb40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc5b352564d4bbfce8b81cd71a7ba018c9ffcb40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7913f130d3ee0682916586c7b43664b651435594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7913f130d3ee0682916586c7b43664b651435594", "html_url": "https://github.com/rust-lang/rust/commit/7913f130d3ee0682916586c7b43664b651435594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7913f130d3ee0682916586c7b43664b651435594/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf86d532029bb27ef96780015a50613d2130102b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf86d532029bb27ef96780015a50613d2130102b", "html_url": "https://github.com/rust-lang/rust/commit/cf86d532029bb27ef96780015a50613d2130102b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5de30129266a385cdca831ee0b0c582d8980343c", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7913f130d3ee0682916586c7b43664b651435594/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7913f130d3ee0682916586c7b43664b651435594/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=7913f130d3ee0682916586c7b43664b651435594", "patch": "@@ -211,7 +211,7 @@ impl Rewrite for ast::AssocConstraintKind {\n         match self {\n             ast::AssocConstraintKind::Equality { term } => match term {\n                 Term::Ty(ty) => ty.rewrite(context, shape),\n-                Term::Const(c) => c.rewrite(context,shape),\n+                Term::Const(c) => c.rewrite(context, shape),\n             },\n             ast::AssocConstraintKind::Bound { bounds } => bounds.rewrite(context, shape),\n         }"}]}