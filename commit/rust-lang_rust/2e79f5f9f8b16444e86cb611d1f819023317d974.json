{"sha": "2e79f5f9f8b16444e86cb611d1f819023317d974", "node_id": "C_kwDOAAsO6NoAKDJlNzlmNWY5ZjhiMTY0NDRlODZjYjYxMWQxZjgxOTAyMzMxN2Q5NzQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-03T12:04:26Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-25T08:11:53Z"}, "message": "Move a comment to the right place", "tree": {"sha": "2e6fefc896bacf4be9834eb785f2a579b8b7ce08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e6fefc896bacf4be9834eb785f2a579b8b7ce08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e79f5f9f8b16444e86cb611d1f819023317d974", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e79f5f9f8b16444e86cb611d1f819023317d974", "html_url": "https://github.com/rust-lang/rust/commit/2e79f5f9f8b16444e86cb611d1f819023317d974", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e79f5f9f8b16444e86cb611d1f819023317d974/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98c550ecc8ea51db79bc4a83f9fb518220add79c", "url": "https://api.github.com/repos/rust-lang/rust/commits/98c550ecc8ea51db79bc4a83f9fb518220add79c", "html_url": "https://github.com/rust-lang/rust/commit/98c550ecc8ea51db79bc4a83f9fb518220add79c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0e85c7d11bce560b3af9d507a25f23b2e0aa0eaf", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e79f5f9f8b16444e86cb611d1f819023317d974/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e79f5f9f8b16444e86cb611d1f819023317d974/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=2e79f5f9f8b16444e86cb611d1f819023317d974", "patch": "@@ -785,10 +785,10 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValueVisitor<'mir, 'tcx, M>\n                 }\n             }\n             Abi::ScalarPair(a_layout, b_layout) => {\n+                // We can only proceed if *both* scalars need to be initialized.\n+                // FIXME: find a way to also check ScalarPair when one side can be uninit but\n+                // the other must be init.\n                 if !a_layout.is_uninit_valid() && !b_layout.is_uninit_valid() {\n-                    // We can only proceed if *both* scalars need to be initialized.\n-                    // FIXME: find a way to also check ScalarPair when one side can be uninit but\n-                    // the other must be init.\n                     let (a, b) =\n                         self.read_immediate(op, \"initiailized scalar value\")?.to_scalar_pair();\n                     self.visit_scalar(a, a_layout)?;"}]}