{"sha": "e31e627238d75b3f24532ccb86fac7b4fd5e735d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMWU2MjcyMzhkNzViM2YyNDUzMmNjYjg2ZmFjN2I0ZmQ1ZTczNWQ=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-11-23T08:18:13Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-11-23T08:18:13Z"}, "message": "Add doc for 'as _' about '_' and its possibilities and problems", "tree": {"sha": "111a16a1c8a4f309773e62a62709c2da6a9c7029", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/111a16a1c8a4f309773e62a62709c2da6a9c7029"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31e627238d75b3f24532ccb86fac7b4fd5e735d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31e627238d75b3f24532ccb86fac7b4fd5e735d", "html_url": "https://github.com/rust-lang/rust/commit/e31e627238d75b3f24532ccb86fac7b4fd5e735d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31e627238d75b3f24532ccb86fac7b4fd5e735d/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a549d36ee81b226d16724240b88f0137f8a36af", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a549d36ee81b226d16724240b88f0137f8a36af", "html_url": "https://github.com/rust-lang/rust/commit/5a549d36ee81b226d16724240b88f0137f8a36af"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "9fd322adcfcbf3bbea25ea993efaa48dfe494cc3", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e31e627238d75b3f24532ccb86fac7b4fd5e735d/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31e627238d75b3f24532ccb86fac7b4fd5e735d/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=e31e627238d75b3f24532ccb86fac7b4fd5e735d", "patch": "@@ -20,19 +20,30 @@\n /// explicitly using `as` allows a few more coercions that aren't allowed implicitly, such as\n /// changing the type of a raw pointer or turning closures into raw pointers.\n ///\n-/// `as` is also used to rename imports in [`use`] and [`extern crate`] statements:\n+/// `as` can be seen as the primitive for `From` and `Into`: `as` only works  with primitives\n+/// (`u8`, `bool`, `str`, pointers, ...) whereas `From` and `Into`  also works with types like\n+/// `String` or `Vec`.\n+///\n+/// `as` can also be used with the `_` placeholder when the destination type can be inferred. Note\n+/// that this can cause inference breakage and usually such code should use an explicit type for\n+/// both clarity and stability. This is most useful when converting pointers using `as *const _` or\n+/// `as *mut _` though the [`cast`][const-cast] method is recommended over `as *const _` and it is\n+/// [the same][mut-cast] for `as *mut _`: those methods make the intent clearer.\n+///\n+/// `as` is also used to rename imports in [`use`] and [`extern crate`][`crate`] statements:\n ///\n /// ```\n /// # #[allow(unused_imports)]\n /// use std::{mem as memory, net as network};\n /// // Now you can use the names `memory` and `network` to refer to `std::mem` and `std::net`.\n /// ```\n-///\n /// For more information on what `as` is capable of, see the [Reference].\n ///\n /// [Reference]: ../reference/expressions/operator-expr.html#type-cast-expressions\n+/// [`crate`]: keyword.crate.html\n /// [`use`]: keyword.use.html\n-/// [`extern crate`]: keyword.crate.html\n+/// [const-cast]: primitive.pointer.html#method.cast\n+/// [mut-cast]: primitive.pointer.html#method.cast-1\n mod as_keyword {}\n \n #[doc(keyword = \"break\")]"}]}