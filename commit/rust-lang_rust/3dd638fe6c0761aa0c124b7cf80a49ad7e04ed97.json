{"sha": "3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "node_id": "C_kwDOAAsO6NoAKDNkZDYzOGZlNmMwNzYxYWEwYzEyNGI3Y2Y4MGE0OWFkN2UwNGVkOTc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-16T20:32:59Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-16T20:37:33Z"}, "message": "Move call trait lang item malformed check to typeck", "tree": {"sha": "ae9fbac6924ed3f8b42e04a2aa9dc2748aa2bfaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae9fbac6924ed3f8b42e04a2aa9dc2748aa2bfaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "html_url": "https://github.com/rust-lang/rust/commit/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5283576ec18937d98889679a54aa8f2dee2b875", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5283576ec18937d98889679a54aa8f2dee2b875", "html_url": "https://github.com/rust-lang/rust/commit/c5283576ec18937d98889679a54aa8f2dee2b875"}], "stats": {"total": 241, "additions": 170, "deletions": 71}, "files": [{"sha": "71eae7d63730a20b5422e65eba5f4a90d7480b7a", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "modified", "additions": 1, "deletions": 51, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -16,7 +16,7 @@ use rustc_middle::mir::ConstraintCategory;\n use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::trait_def::TraitSpecializationKind;\n use rustc_middle::ty::{\n-    self, ir::TypeVisitor, AdtKind, DefIdTree, GenericParamDefKind, Ty, TyCtxt, TypeFoldable,\n+    self, ir::TypeVisitor, AdtKind, GenericParamDefKind, Ty, TyCtxt, TypeFoldable,\n     TypeSuperVisitable,\n };\n use rustc_middle::ty::{GenericArgKind, InternalSubsts};\n@@ -277,56 +277,6 @@ fn check_trait_item(tcx: TyCtxt<'_>, trait_item: &hir::TraitItem<'_>) {\n     };\n     check_object_unsafe_self_trait_by_name(tcx, trait_item);\n     check_associated_item(tcx, def_id, span, method_sig);\n-\n-    let encl_trait_def_id = tcx.local_parent(def_id);\n-    let encl_trait = tcx.hir().expect_item(encl_trait_def_id);\n-    let encl_trait_def_id = encl_trait.owner_id.to_def_id();\n-    let fn_lang_item_name = if Some(encl_trait_def_id) == tcx.lang_items().fn_trait() {\n-        Some(\"fn\")\n-    } else if Some(encl_trait_def_id) == tcx.lang_items().fn_mut_trait() {\n-        Some(\"fn_mut\")\n-    } else {\n-        None\n-    };\n-\n-    if let (Some(fn_lang_item_name), \"call\") =\n-        (fn_lang_item_name, trait_item.ident.name.to_ident_string().as_str())\n-    {\n-        // We are looking at the `call` function of the `fn` or `fn_mut` lang item.\n-        // Do some rudimentary sanity checking to avoid an ICE later (issue #83471).\n-        if let Some(hir::FnSig { decl, span, .. }) = method_sig {\n-            if let [self_ty, _] = decl.inputs {\n-                if !matches!(self_ty.kind, hir::TyKind::Ref(_, _)) {\n-                    tcx.sess\n-                        .struct_span_err(\n-                            self_ty.span,\n-                            &format!(\n-                                \"first argument of `call` in `{fn_lang_item_name}` lang item must be a reference\",\n-                            ),\n-                        )\n-                        .emit();\n-                }\n-            } else {\n-                tcx.sess\n-                    .struct_span_err(\n-                        *span,\n-                        &format!(\n-                            \"`call` function in `{fn_lang_item_name}` lang item takes exactly two arguments\",\n-                        ),\n-                    )\n-                    .emit();\n-            }\n-        } else {\n-            tcx.sess\n-                .struct_span_err(\n-                    trait_item.span,\n-                    &format!(\n-                        \"`call` trait item in `{fn_lang_item_name}` lang item must be a function\",\n-                    ),\n-                )\n-                .emit();\n-        }\n-    }\n }\n \n /// Require that the user writes where clauses on GATs for the implicit"}, {"sha": "c9ae82e8efbdf49fed4cce371f4e2f702a95b257", "filename": "compiler/rustc_hir_typeck/src/method/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -380,6 +380,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             );\n             return None;\n         };\n+\n+        if method_item.kind != ty::AssocKind::Fn {\n+            self.tcx.sess.delay_span_bug(tcx.def_span(method_item.def_id), \"not a method\");\n+            return None;\n+        }\n+\n         let def_id = method_item.def_id;\n         let generics = tcx.generics_of(def_id);\n "}, {"sha": "a45f629ff531a7b6ff3024b1bf91306592e9be75", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.bad_item.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_item.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:39:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:43:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a45f629ff531a7b6ff3024b1bf91306592e9be75", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.bad_sig.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_sig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_sig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.bad_sig.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:39:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:43:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a2600c85cfff481d51ab67aa23ba735561f57765", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_bad_item.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_item.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:42:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a2600c85cfff481d51ab67aa23ba735561f57765", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_bad_sig.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_sig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_sig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_bad_sig.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:42:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a2600c85cfff481d51ab67aa23ba735561f57765", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_mut_bad_item.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_item.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:42:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a2600c85cfff481d51ab67aa23ba735561f57765", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_mut_bad_sig.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_sig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_sig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_mut_bad_sig.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:42:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "a2600c85cfff481d51ab67aa23ba735561f57765", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_once_bad_item.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_item.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,18 @@\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:42:5\n+   |\n+LL |     a();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: failed to find an overloaded call trait for closure call\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^\n+   |\n+   = help: make sure the `fn`/`fn_mut`/`fn_once` lang items are defined and have associated `call`/`call_mut`/`call_once` functions\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "bb91eedebeaa52251a099c24d426517bdbab2c2e", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.fn_once_bad_sig.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_sig.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_sig.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.fn_once_bad_sig.stderr?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -0,0 +1,9 @@\n+error[E0308]: mismatched types\n+  --> $DIR/fn-fn_mut-call-ill-formed.rs:47:5\n+   |\n+LL |     b();\n+   |     ^^^ expected `i32`, found `()`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "757c6538d05b032ccfff14a74ff2387b47425a6e", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.rs", "status": "modified", "additions": 28, "deletions": 6, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.rs?ref=3dd638fe6c0761aa0c124b7cf80a49ad7e04ed97", "patch": "@@ -1,27 +1,49 @@\n-// Make sure that an error is reported if the `call` function of the\n-// `fn`/`fn_mut` lang item is grossly ill-formed.\n+// revisions: fn_once_bad_item fn_once_bad_sig fn_mut_bad_item fn_mut_bad_sig fn_bad_item fn_bad_sig\n \n #![feature(lang_items)]\n #![feature(no_core)]\n #![no_core]\n \n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+#[cfg(any(fn_bad_item, fn_bad_sig))]\n #[lang = \"fn\"]\n trait MyFn<T> {\n+    #[cfg(fn_bad_sig)]\n+    fn call(i: i32) -> i32 { 0 }\n+\n+    #[cfg(fn_bad_item)]\n     const call: i32 = 42;\n-    //~^ ERROR: `call` trait item in `fn` lang item must be a function\n }\n \n+#[cfg(any(fn_mut_bad_item, fn_mut_bad_sig))]\n #[lang = \"fn_mut\"]\n trait MyFnMut<T> {\n-    fn call(i: i32, j: i32) -> i32 { i + j }\n-    //~^ ERROR: first argument of `call` in `fn_mut` lang item must be a reference\n+    #[cfg(fn_mut_bad_sig)]\n+    fn call_mut(i: i32) -> i32 { 0 }\n+\n+    #[cfg(fn_mut_bad_item)]\n+    const call_mut: i32 = 42;\n+}\n+\n+#[cfg(any(fn_once_bad_item, fn_once_bad_sig))]\n+#[lang = \"fn_once\"]\n+trait MyFnOnce<T> {\n+    #[cfg(fn_once_bad_sig)]\n+    fn call_once(i: i32) -> i32 { 0 }\n+\n+    #[cfg(fn_once_bad_item)]\n+    const call_once: i32 = 42;\n }\n \n fn main() {\n     let a = || 42;\n     a();\n+    //~^ ERROR failed to find an overloaded call trait for closure call\n \n     let mut i = 0;\n-    let mut b = || { i += 1; };\n+    let mut b = || { };\n     b();\n+    //~^ ERROR failed to find an overloaded call trait for closure call\n }"}, {"sha": "82bdae270c8bb316d6c218d385247a76c0f4af96", "filename": "tests/ui/lang-items/fn-fn_mut-call-ill-formed.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c5283576ec18937d98889679a54aa8f2dee2b875/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c5283576ec18937d98889679a54aa8f2dee2b875/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flang-items%2Ffn-fn_mut-call-ill-formed.stderr?ref=c5283576ec18937d98889679a54aa8f2dee2b875", "patch": "@@ -1,14 +0,0 @@\n-error: `call` trait item in `fn` lang item must be a function\n-  --> $DIR/fn-fn_mut-call-ill-formed.rs:10:5\n-   |\n-LL |     const call: i32 = 42;\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-error: first argument of `call` in `fn_mut` lang item must be a reference\n-  --> $DIR/fn-fn_mut-call-ill-formed.rs:16:16\n-   |\n-LL |     fn call(i: i32, j: i32) -> i32 { i + j }\n-   |                ^^^\n-\n-error: aborting due to 2 previous errors\n-"}]}