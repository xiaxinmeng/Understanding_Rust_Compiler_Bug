{"sha": "4a303b13095122c2007bf8751bdbc0e89b8708d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMzAzYjEzMDk1MTIyYzIwMDdiZjg3NTFiZGJjMGU4OWI4NzA4ZDM=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-30T21:59:35Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2020-05-24T22:02:54Z"}, "message": "Add a timeout test for conditional variables.", "tree": {"sha": "33a2f7fc1c0800c7dd2b10b5582c9f9078f6b21b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33a2f7fc1c0800c7dd2b10b5582c9f9078f6b21b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a303b13095122c2007bf8751bdbc0e89b8708d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a303b13095122c2007bf8751bdbc0e89b8708d3", "html_url": "https://github.com/rust-lang/rust/commit/4a303b13095122c2007bf8751bdbc0e89b8708d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a303b13095122c2007bf8751bdbc0e89b8708d3/comments", "author": null, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e774dec86daeda8aa6ae2fa20c2334cd8841db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e774dec86daeda8aa6ae2fa20c2334cd8841db6", "html_url": "https://github.com/rust-lang/rust/commit/6e774dec86daeda8aa6ae2fa20c2334cd8841db6"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "e422a7fbdbc5bc9fbc877d8c4801ca20d8930e41", "filename": "tests/run-pass/concurrency/sync.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4a303b13095122c2007bf8751bdbc0e89b8708d3/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a303b13095122c2007bf8751bdbc0e89b8708d3/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsync.rs?ref=4a303b13095122c2007bf8751bdbc0e89b8708d3", "patch": "@@ -1,8 +1,10 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n+// compile-flags: -Zmiri-disable-isolation\n \n use std::sync::mpsc::{channel, sync_channel};\n use std::sync::{Arc, Barrier, Condvar, Mutex, Once, RwLock};\n use std::thread;\n+use std::time::{Duration, Instant};\n \n // Check if Rust barriers are working.\n \n@@ -50,6 +52,17 @@ fn check_conditional_variables() {\n     }\n }\n \n+/// Test that waiting on a conditional variable with a timeout does not\n+/// deadlock.\n+fn check_conditional_variables_timeout() {\n+    let lock = Mutex::new(());\n+    let cvar = Condvar::new();\n+    let guard = lock.lock().unwrap();\n+    let now = Instant::now();\n+    let _guard = cvar.wait_timeout(guard, Duration::from_millis(100)).unwrap().0;\n+    assert!(now.elapsed().as_millis() >= 100);\n+}\n+\n // Check if locks are working.\n \n fn check_mutex() {\n@@ -206,6 +219,7 @@ fn check_once() {\n fn main() {\n     check_barriers();\n     check_conditional_variables();\n+    check_conditional_variables_timeout();\n     check_mutex();\n     check_rwlock_write();\n     check_rwlock_read_no_deadlock();"}]}