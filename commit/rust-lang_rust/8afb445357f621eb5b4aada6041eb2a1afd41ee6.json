{"sha": "8afb445357f621eb5b4aada6041eb2a1afd41ee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZmI0NDUzNTdmNjIxZWI1YjRhYWRhNjA0MWViMmExYWZkNDFlZTY=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-23T19:45:52Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-25T11:50:12Z"}, "message": "Rename to CustomDerive", "tree": {"sha": "7c08cef580ced5d3bb496017e90143412ddecebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c08cef580ced5d3bb496017e90143412ddecebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8afb445357f621eb5b4aada6041eb2a1afd41ee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8afb445357f621eb5b4aada6041eb2a1afd41ee6", "html_url": "https://github.com/rust-lang/rust/commit/8afb445357f621eb5b4aada6041eb2a1afd41ee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8afb445357f621eb5b4aada6041eb2a1afd41ee6/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7667aa6033b1a0307279d0a153ce0e90437b0b66", "url": "https://api.github.com/repos/rust-lang/rust/commits/7667aa6033b1a0307279d0a153ce0e90437b0b66", "html_url": "https://github.com/rust-lang/rust/commit/7667aa6033b1a0307279d0a153ce0e90437b0b66"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1dcf5a30919dd5b430d9a871c7d4f1cdb0031a0d", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=8afb445357f621eb5b4aada6041eb2a1afd41ee6", "patch": "@@ -892,7 +892,7 @@ impl ModCollector<'_, '_> {\n                 let macro_id = MacroDefId {\n                     ast_id: None,\n                     krate: Some(krate),\n-                    kind: MacroDefKind::ProcMacro(expander),\n+                    kind: MacroDefKind::CustomDerive(expander),\n                 };\n \n                 self.def_collector.define_proc_macro(name.clone(), macro_id);"}, {"sha": "0474523063cb7b958362edef73afb9c85a7eccab", "filename": "crates/ra_hir_expand/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdb.rs?ref=8afb445357f621eb5b4aada6041eb2a1afd41ee6", "patch": "@@ -135,7 +135,7 @@ pub(crate) fn macro_def(\n             Some(Arc::new((TokenExpander::BuiltinDerive(expander), mbe::TokenMap::default())))\n         }\n         MacroDefKind::BuiltInEager(_) => None,\n-        MacroDefKind::ProcMacro(expander) => {\n+        MacroDefKind::CustomDerive(expander) => {\n             Some(Arc::new((TokenExpander::ProcMacro(expander), mbe::TokenMap::default())))\n         }\n     }"}, {"sha": "932f47c309898f18d34d5136ae3da4727cdbcdd9", "filename": "crates/ra_hir_expand/src/eager.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Feager.rs?ref=8afb445357f621eb5b4aada6041eb2a1afd41ee6", "patch": "@@ -113,7 +113,7 @@ fn eager_macro_recur(\n             MacroDefKind::Declarative\n             | MacroDefKind::BuiltIn(_)\n             | MacroDefKind::BuiltInDerive(_)\n-            | MacroDefKind::ProcMacro(_) => {\n+            | MacroDefKind::CustomDerive(_) => {\n                 let expanded = lazy_expand(db, &def, curr.with_value(child.clone()))?;\n                 // replace macro inside\n                 eager_macro_recur(db, expanded, macro_resolver)?"}, {"sha": "0b41d0e95810bc1718baa49d3b3c238fd579c0b9", "filename": "crates/ra_hir_expand/src/hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fhygiene.rs?ref=8afb445357f621eb5b4aada6041eb2a1afd41ee6", "patch": "@@ -30,7 +30,7 @@ impl Hygiene {\n                         MacroDefKind::BuiltIn(_) => None,\n                         MacroDefKind::BuiltInDerive(_) => None,\n                         MacroDefKind::BuiltInEager(_) => None,\n-                        MacroDefKind::ProcMacro(_) => None,\n+                        MacroDefKind::CustomDerive(_) => None,\n                     }\n                 }\n                 MacroCallId::EagerMacro(_id) => None,"}, {"sha": "86299459fa13c08246f0963182444c2b700d61c6", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8afb445357f621eb5b4aada6041eb2a1afd41ee6/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=8afb445357f621eb5b4aada6041eb2a1afd41ee6", "patch": "@@ -219,7 +219,7 @@ pub enum MacroDefKind {\n     // FIXME: maybe just Builtin and rename BuiltinFnLikeExpander to BuiltinExpander\n     BuiltInDerive(BuiltinDeriveExpander),\n     BuiltInEager(EagerExpander),\n-    ProcMacro(ProcMacroExpander),\n+    CustomDerive(ProcMacroExpander),\n }\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]"}]}