{"sha": "71909a64bc6bd192d7cd57e3ae08ea17a875048d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOTA5YTY0YmM2YmQxOTJkN2NkNTdlM2FlMDhlYTE3YTg3NTA0OGQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-18T22:01:47Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-18T22:03:31Z"}, "message": "Fix qsort to not skip the right side when the pivot element gets put at index 0.\n\nCloses #705.", "tree": {"sha": "e3337473ff1c5b74431008a3655f7f5c8a0ea224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3337473ff1c5b74431008a3655f7f5c8a0ea224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71909a64bc6bd192d7cd57e3ae08ea17a875048d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71909a64bc6bd192d7cd57e3ae08ea17a875048d", "html_url": "https://github.com/rust-lang/rust/commit/71909a64bc6bd192d7cd57e3ae08ea17a875048d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71909a64bc6bd192d7cd57e3ae08ea17a875048d/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "html_url": "https://github.com/rust-lang/rust/commit/ad1c0e6308c8e60536c801f8fc8889e8fba4b348"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "b14c0cf2b0ec7f64fd4c46d72555bc7c03157152", "filename": "src/lib/sort.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/71909a64bc6bd192d7cd57e3ae08ea17a875048d/src%2Flib%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71909a64bc6bd192d7cd57e3ae08ea17a875048d/src%2Flib%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fsort.rs?ref=71909a64bc6bd192d7cd57e3ae08ea17a875048d", "patch": "@@ -63,8 +63,10 @@ fn qsort[T](lteq[T] compare_func, vec[mutable T] arr, uint left, uint right) {\n     if (right > left) {\n         auto pivot = (left + right) / 2u;\n         auto new_pivot = part[T](compare_func, arr, left, right, pivot);\n-        if (new_pivot == 0u) { ret; }\n-        qsort[T](compare_func, arr, left, new_pivot - 1u);\n+        if (new_pivot != 0u) {\n+            // Need to do this check before recursing due to overflow\n+            qsort[T](compare_func, arr, left, new_pivot - 1u);\n+        }\n         qsort[T](compare_func, arr, new_pivot + 1u, right);\n     }\n }\n@@ -194,8 +196,10 @@ mod ivector {\n         if (right > left) {\n             auto pivot = (left + right) / 2u;\n             auto new_pivot = part[T](compare_func, arr, left, right, pivot);\n-            if (new_pivot == 0u) { ret; }\n-            qsort[T](compare_func, arr, left, new_pivot - 1u);\n+            if (new_pivot != 0u) {\n+                // Need to do this check before recursing due to overflow\n+                qsort[T](compare_func, arr, left, new_pivot - 1u);\n+            }\n             qsort[T](compare_func, arr, new_pivot + 1u, right);\n         }\n     }"}, {"sha": "7f237870c5a331dad2b74290c537059f23347eec", "filename": "src/test/run-pass/simple-qsort.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/71909a64bc6bd192d7cd57e3ae08ea17a875048d/src%2Ftest%2Frun-pass%2Fsimple-qsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71909a64bc6bd192d7cd57e3ae08ea17a875048d/src%2Ftest%2Frun-pass%2Fsimple-qsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimple-qsort.rs?ref=71909a64bc6bd192d7cd57e3ae08ea17a875048d", "patch": "@@ -0,0 +1,23 @@\n+use std;\n+import std::ivec;\n+import std::int;\n+import std::sort;\n+\n+fn test_qsort() {\n+    auto names = ~[mutable 2, 1, 3];\n+\n+    auto expected = ~[1, 2, 3];\n+\n+    fn lteq(&int a, &int b) -> bool { int::le(a, b) }\n+    sort::ivector::quick_sort(lteq, names);\n+\n+    auto pairs = ivec::zip(expected, ivec::from_mut(names));\n+    for (tup(int, int) p in pairs) {\n+        log_err #fmt(\"%d %d\", p._0, p._1);\n+        assert p._0 == p._1;\n+    }\n+}\n+\n+fn main() {\n+    test_qsort();\n+}"}]}