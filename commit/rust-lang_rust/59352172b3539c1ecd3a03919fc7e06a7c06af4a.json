{"sha": "59352172b3539c1ecd3a03919fc7e06a7c06af4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MzUyMTcyYjM1MzljMWVjZDNhMDM5MTlmYzdlMDZhN2MwNmFmNGE=", "commit": {"author": {"name": "Matthew Hall", "email": "matthew@quickbeam.me.uk", "date": "2015-05-01T16:27:54Z"}, "committer": {"name": "Matthew Hall", "email": "matthew@quickbeam.me.uk", "date": "2015-05-02T19:28:38Z"}, "message": "Change import lists with one item to single import\n\nChanges lists such as ``use std::{fmt}`` to a form without a list, eg\n``use std::fmt``.", "tree": {"sha": "915017771aa1590181fb658db1be0e2f940507e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/915017771aa1590181fb658db1be0e2f940507e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59352172b3539c1ecd3a03919fc7e06a7c06af4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59352172b3539c1ecd3a03919fc7e06a7c06af4a", "html_url": "https://github.com/rust-lang/rust/commit/59352172b3539c1ecd3a03919fc7e06a7c06af4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59352172b3539c1ecd3a03919fc7e06a7c06af4a/comments", "author": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mattyhall", "id": 5175499, "node_id": "MDQ6VXNlcjUxNzU0OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/5175499?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattyhall", "html_url": "https://github.com/mattyhall", "followers_url": "https://api.github.com/users/mattyhall/followers", "following_url": "https://api.github.com/users/mattyhall/following{/other_user}", "gists_url": "https://api.github.com/users/mattyhall/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattyhall/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattyhall/subscriptions", "organizations_url": "https://api.github.com/users/mattyhall/orgs", "repos_url": "https://api.github.com/users/mattyhall/repos", "events_url": "https://api.github.com/users/mattyhall/events{/privacy}", "received_events_url": "https://api.github.com/users/mattyhall/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59554dd5e1121d39cc9c1d716277de03c153a46b", "url": "https://api.github.com/repos/rust-lang/rust/commits/59554dd5e1121d39cc9c1d716277de03c153a46b", "html_url": "https://github.com/rust-lang/rust/commit/59554dd5e1121d39cc9c1d716277de03c153a46b"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "aea983e261ff215f4f5a29bad582d5a338c91f99", "filename": "src/imports.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/59352172b3539c1ecd3a03919fc7e06a7c06af4a/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59352172b3539c1ecd3a03919fc7e06a7c06af4a/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=59352172b3539c1ecd3a03919fc7e06a7c06af4a", "patch": "@@ -18,27 +18,49 @@ use syntax::print::pprust;\n \n use {IDEAL_WIDTH, MAX_WIDTH};\n \n-// TODO change import lists with one item to a single import\n-//      remove empty lists (if they're even possible)\n+// TODO remove empty lists (if they're even possible)\n // TODO (some day) remove unused imports, expand globs, compress many single imports into a list import\n \n+fn rewrite_single_use_list(path_str: String, vpi: ast::PathListItem, vis: &str) -> String {\n+    if let ast::PathListItem_::PathListIdent{ name, .. } = vpi.node {\n+        let name_str = token::get_ident(name).to_string();\n+        if path_str.len() == 0 {\n+            format!(\"{}use {};\", vis, name_str)\n+        } else {\n+            format!(\"{}use {}::{};\", vis, path_str, name_str)\n+        }\n+    } else {\n+        if path_str.len() != 0 {\n+            format!(\"{}use {};\", vis, path_str)\n+        } else {\n+            // This catches the import: use {self}, which is a compiler error, so we just\n+            // leave it alone.\n+            format!(\"{}use {{self}};\", vis)\n+        }\n+    }\n+}\n+\n impl<'a> FmtVisitor<'a> {\n     // Basically just pretty prints a multi-item import.\n     pub fn rewrite_use_list(&mut self,\n                             path: &ast::Path,\n                             path_list: &[ast::PathListItem],\n                             visibility: ast::Visibility,\n                             vp_span: Span) -> String {\n-        // FIXME check indentation\n-        let l_loc = self.codemap.lookup_char_pos(vp_span.lo);\n-\n         let path_str = pprust::path_to_string(&path);\n \n         let vis = match visibility {\n             ast::Public => \"pub \",\n             _ => \"\"\n         };\n \n+        if path_list.len() == 1 {\n+            return rewrite_single_use_list(path_str, path_list[0], vis);\n+        }\n+\n+        // FIXME check indentation\n+        let l_loc = self.codemap.lookup_char_pos(vp_span.lo);\n+\n         // 1 = {\n         let mut indent = l_loc.col.0 + path_str.len() + 1;\n         if path_str.len() > 0 {"}]}