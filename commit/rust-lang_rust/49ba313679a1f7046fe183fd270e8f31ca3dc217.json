{"sha": "49ba313679a1f7046fe183fd270e8f31ca3dc217", "node_id": "C_kwDOAAsO6NoAKDQ5YmEzMTM2NzlhMWY3MDQ2ZmUxODNmZDI3MGU4ZjMxY2EzZGMyMTc", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-21T13:37:47Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-09-27T14:59:25Z"}, "message": "Update failing test", "tree": {"sha": "881c786b4ae24dcf0f6d0930dd8b583e06a10288", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/881c786b4ae24dcf0f6d0930dd8b583e06a10288"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49ba313679a1f7046fe183fd270e8f31ca3dc217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49ba313679a1f7046fe183fd270e8f31ca3dc217", "html_url": "https://github.com/rust-lang/rust/commit/49ba313679a1f7046fe183fd270e8f31ca3dc217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49ba313679a1f7046fe183fd270e8f31ca3dc217/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f76a73a38c5b12e24b2f790b3f3145559d1aec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f76a73a38c5b12e24b2f790b3f3145559d1aec9", "html_url": "https://github.com/rust-lang/rust/commit/7f76a73a38c5b12e24b2f790b3f3145559d1aec9"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "7671ccefd1714b3e4790e344836d381b2d0ad395", "filename": "crates/hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49ba313679a1f7046fe183fd270e8f31ca3dc217/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49ba313679a1f7046fe183fd270e8f31ca3dc217/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=49ba313679a1f7046fe183fd270e8f31ca3dc217", "patch": "@@ -340,12 +340,11 @@ trait Tr<'a, T: 'a>: Super where Self: for<'a> Tr<'a, T> {}\n                 T: 'b\n             {\n                 // flags = 0x2\n-                pub(self) fn f<G, _anon_1>(\n+                pub(self) fn f<G>(\n                     _: impl Copy,\n                 ) -> impl Copy\n                 where\n-                    G: 'a,\n-                    _anon_1: Copy;\n+                    G: 'a;\n             }\n \n             pub(self) enum Enum<'a, T, const U: u8> {"}]}