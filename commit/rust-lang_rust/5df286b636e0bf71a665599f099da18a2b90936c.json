{"sha": "5df286b636e0bf71a665599f099da18a2b90936c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZjI4NmI2MzZlMGJmNzFhNjY1NTk5ZjA5OWRhMThhMmI5MDkzNmM=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-27T18:15:05Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-29T21:02:27Z"}, "message": "Improve SpanlessEq for blocks", "tree": {"sha": "25e1d45bd1781536a9d64737815ef7f1de270cf1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25e1d45bd1781536a9d64737815ef7f1de270cf1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df286b636e0bf71a665599f099da18a2b90936c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df286b636e0bf71a665599f099da18a2b90936c", "html_url": "https://github.com/rust-lang/rust/commit/5df286b636e0bf71a665599f099da18a2b90936c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df286b636e0bf71a665599f099da18a2b90936c/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "url": "https://api.github.com/repos/rust-lang/rust/commits/68cf94f6a66e47234e3adefc6dfbe806cd6ad164", "html_url": "https://github.com/rust-lang/rust/commit/68cf94f6a66e47234e3adefc6dfbe806cd6ad164"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "d847d22275e831df1ff791418da5a2e02891cf22", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5df286b636e0bf71a665599f099da18a2b90936c/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df286b636e0bf71a665599f099da18a2b90936c/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=5df286b636e0bf71a665599f099da18a2b90936c", "patch": "@@ -81,7 +81,7 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n             }\n         }\n \n-        match (&left.kind, &right.kind) {\n+        match (&reduce_exprkind(&left.kind), &reduce_exprkind(&right.kind)) {\n             (&ExprKind::AddrOf(lb, l_mut, ref le), &ExprKind::AddrOf(rb, r_mut, ref re)) => {\n                 lb == rb && l_mut == r_mut && self.eq_expr(le, re)\n             },\n@@ -306,6 +306,32 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n     }\n }\n \n+/// Some simple reductions like `{ return }` => `return`\n+fn reduce_exprkind<'hir>(kind: &'hir ExprKind<'hir>) -> &ExprKind<'hir> {\n+    if let ExprKind::Block(block, _) = kind {\n+        match (block.stmts, block.expr) {\n+            // `{}` => `()`\n+            ([], None) => &ExprKind::Tup(&[]),\n+            ([], Some(expr)) => match expr.kind {\n+                // `{ return .. }` => `return ..`\n+                ExprKind::Ret(..) => &expr.kind,\n+                _ => kind,\n+            },\n+            ([stmt], None) => match stmt.kind {\n+                StmtKind::Expr(expr) | StmtKind::Semi(expr) => match expr.kind {\n+                    // `{ return ..; }` => `return ..`\n+                    ExprKind::Ret(..) => &expr.kind,\n+                    _ => kind,\n+                },\n+                _ => kind,\n+            },\n+            _ => kind,\n+        }\n+    } else {\n+        kind\n+    }\n+}\n+\n fn swap_binop<'a>(\n     binop: BinOpKind,\n     lhs: &'a Expr<'a>,"}]}