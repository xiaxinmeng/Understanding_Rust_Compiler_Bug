{"sha": "d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZjc3MWNhMzQxYmM5M2UyZWJlOWYwZWY5OTc5YTcxYThlM2M2ZDg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-25T23:18:45Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-25T23:18:45Z"}, "message": "test: fix x86stdcall test, r=burningtree.", "tree": {"sha": "5155270a40db39cef2b14143c69bf85e39b77401", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5155270a40db39cef2b14143c69bf85e39b77401"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8", "html_url": "https://github.com/rust-lang/rust/commit/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10eb62053760494129f6227c8a85669790fcc983", "url": "https://api.github.com/repos/rust-lang/rust/commits/10eb62053760494129f6227c8a85669790fcc983", "html_url": "https://github.com/rust-lang/rust/commit/10eb62053760494129f6227c8a85669790fcc983"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "3d42b68081363e00b885f361936d73e06f18bc02", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=d1f771ca341bc93e2ebe9f0ef9979a71a8e3c6d8", "patch": "@@ -20,11 +20,13 @@ extern \"stdcall\" mod kernel32 {\n \n #[cfg(target_os = \"win32\")]\n fn main() {\n-    let expected = 1234u;\n-    kernel32::SetLastError(expected);\n-    let actual = kernel32::GetLastError();\n-    log(error, actual);\n-    assert (expected == actual);\n+    unsafe {\n+        let expected = 1234u;\n+        kernel32::SetLastError(expected);\n+        let actual = kernel32::GetLastError();\n+        log(error, actual);\n+        assert (expected == actual);\n+    }\n }\n \n #[cfg(target_os = \"macos\")]"}]}