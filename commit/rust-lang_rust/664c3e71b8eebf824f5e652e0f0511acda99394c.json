{"sha": "664c3e71b8eebf824f5e652e0f0511acda99394c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NGMzZTcxYjhlZWJmODI0ZjVlNjUyZTBmMDUxMWFjZGE5OTM5NGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-03-08T23:43:18Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-04-12T16:45:59Z"}, "message": "Turn old edition lints (anonymous-parameters, keyword-idents) into warn-by-default on 2015", "tree": {"sha": "c79297deeb720f22d3db668cad5d686c3251a1f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c79297deeb720f22d3db668cad5d686c3251a1f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664c3e71b8eebf824f5e652e0f0511acda99394c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664c3e71b8eebf824f5e652e0f0511acda99394c", "html_url": "https://github.com/rust-lang/rust/commit/664c3e71b8eebf824f5e652e0f0511acda99394c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664c3e71b8eebf824f5e652e0f0511acda99394c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c18c0ad2bc5988ca7953459e5a35ece8e69e35e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c18c0ad2bc5988ca7953459e5a35ece8e69e35e7", "html_url": "https://github.com/rust-lang/rust/commit/c18c0ad2bc5988ca7953459e5a35ece8e69e35e7"}], "stats": {"total": 173, "additions": 92, "deletions": 81}, "files": [{"sha": "c4acaef21dd63a7df5bc41432f524689b915373a", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -857,19 +857,18 @@ declare_lint! {\n     /// ```\n     ///\n     /// This syntax is now a hard error in the 2018 edition. In the 2015\n-    /// edition, this lint is \"allow\" by default, because the old code is\n-    /// still valid, and warning for all old code can be noisy. This lint\n+    /// edition, this lint is \"warn\" by default. This lint\n     /// enables the [`cargo fix`] tool with the `--edition` flag to\n     /// automatically transition old code from the 2015 edition to 2018. The\n-    /// tool will switch this lint to \"warn\" and will automatically apply the\n+    /// tool will run this lint and automatically apply the\n     /// suggested fix from the compiler (which is to add `_` to each\n     /// parameter). This provides a completely automated way to update old\n     /// code for a new edition. See [issue #41686] for more details.\n     ///\n     /// [issue #41686]: https://github.com/rust-lang/rust/issues/41686\n     /// [`cargo fix`]: https://doc.rust-lang.org/cargo/commands/cargo-fix.html\n     pub ANONYMOUS_PARAMETERS,\n-    Allow,\n+    Warn,\n     \"detects anonymous parameters\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #41686 <https://github.com/rust-lang/rust/issues/41686>\",\n@@ -884,6 +883,10 @@ declare_lint_pass!(\n \n impl EarlyLintPass for AnonymousParameters {\n     fn check_trait_item(&mut self, cx: &EarlyContext<'_>, it: &ast::AssocItem) {\n+        if cx.sess.edition() != Edition::Edition2015 {\n+            // This is a hard error in future editions; avoid linting and erroring\n+            return;\n+        }\n         if let ast::AssocItemKind::Fn(box FnKind(_, ref sig, _, _)) = it.kind {\n             for arg in sig.decl.inputs.iter() {\n                 if let ast::PatKind::Ident(_, ident, None) = arg.pat.kind {"}, {"sha": "39ed62425cecf9e150362bb6b4be392bd7e94b54", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -1768,6 +1768,7 @@ mod super_keyword {}\n /// In the 2015 edition the parameters pattern was not needed for traits:\n ///\n /// ```rust,edition2015\n+/// # #![allow(anonymous_parameters)]\n /// trait Tr {\n ///     fn f(i32);\n /// }"}, {"sha": "6936205f8b96daf9dfaddc1770de24238cecf7aa", "filename": "src/test/ui/anon-params/anon-params-edition-hygiene.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-edition-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-edition-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params%2Fanon-params-edition-hygiene.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -2,6 +2,9 @@\n // edition:2018\n // aux-build:anon-params-edition-hygiene.rs\n \n+// This warning is still surfaced\n+#![allow(anonymous_parameters)]\n+\n #[macro_use]\n extern crate anon_params_edition_hygiene;\n "}, {"sha": "37348e476d408fea0b020d13585ce7c5314046aa", "filename": "src/test/ui/feature-gates/feature-gate-object_safe_for_dispatch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -12,7 +12,7 @@ trait NonObjectSafe3 {\n }\n \n trait NonObjectSafe4 {\n-    fn foo(&self, &Self);\n+    fn foo(&self, s: &Self);\n }\n \n fn takes_non_object_safe_ref<T>(obj: &dyn NonObjectSafe1) {"}, {"sha": "12195bc1071a08144f9eb6851e0eb96a63a8e2d4", "filename": "src/test/ui/feature-gates/feature-gate-object_safe_for_dispatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-object_safe_for_dispatch.stderr?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -57,12 +57,12 @@ LL | fn return_non_object_safe_rc() -> std::rc::Rc<dyn NonObjectSafe4> {\n    |\n    = help: consider moving `foo` to another trait\n note: for a trait to be \"object safe\" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>\n-  --> $DIR/feature-gate-object_safe_for_dispatch.rs:15:19\n+  --> $DIR/feature-gate-object_safe_for_dispatch.rs:15:22\n    |\n LL | trait NonObjectSafe4 {\n    |       -------------- this trait cannot be made into an object...\n-LL |     fn foo(&self, &Self);\n-   |                   ^^^^^ ...because method `foo` references the `Self` type in this parameter\n+LL |     fn foo(&self, s: &Self);\n+   |                      ^^^^^ ...because method `foo` references the `Self` type in this parameter\n \n error[E0038]: the trait `NonObjectSafe1` cannot be made into an object\n   --> $DIR/feature-gate-object_safe_for_dispatch.rs:38:16"}, {"sha": "4cdb9f491130c56c4b16de31d78de8009d85956b", "filename": "src/test/ui/issues/issue-78720.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fissues%2Fissue-78720.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fissues%2Fissue-78720.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-78720.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -4,7 +4,7 @@ fn server() -> impl {\n }\n \n trait FilterBase2 {\n-    fn map2<F>(self, F) -> Map2<F> {}\n+    fn map2<F>(self, f: F) -> Map2<F> {}\n     //~^ ERROR mismatched types\n     //~^^ ERROR the size for values of type `Self` cannot be known at compilation time\n }"}, {"sha": "ee15826d189417733605d84161cccb0924275ad5", "filename": "src/test/ui/issues/issue-78720.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fissues%2Fissue-78720.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fissues%2Fissue-78720.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-78720.stderr?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -25,28 +25,28 @@ LL | struct Map2<Segment2, F> {\n    |                     ^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/issue-78720.rs:7:36\n+  --> $DIR/issue-78720.rs:7:39\n    |\n-LL |     fn map2<F>(self, F) -> Map2<F> {}\n-   |                                    ^^ expected struct `Map2`, found `()`\n+LL |     fn map2<F>(self, f: F) -> Map2<F> {}\n+   |                                       ^^ expected struct `Map2`, found `()`\n    |\n    = note: expected struct `Map2<F>`\n            found unit type `()`\n \n error[E0277]: the size for values of type `Self` cannot be known at compilation time\n   --> $DIR/issue-78720.rs:7:16\n    |\n-LL |     fn map2<F>(self, F) -> Map2<F> {}\n+LL |     fn map2<F>(self, f: F) -> Map2<F> {}\n    |                ^^^^ doesn't have a size known at compile-time\n    |\n    = help: unsized fn params are gated as an unstable feature\n help: consider further restricting `Self`\n    |\n-LL |     fn map2<F>(self, F) -> Map2<F> where Self: Sized {}\n-   |                                    ^^^^^^^^^^^^^^^^^\n+LL |     fn map2<F>(self, f: F) -> Map2<F> where Self: Sized {}\n+   |                                       ^^^^^^^^^^^^^^^^^\n help: function arguments must have a statically known size, borrowed types always have a known size\n    |\n-LL |     fn map2<F>(&self, F) -> Map2<F> {}\n+LL |     fn map2<F>(&self, f: F) -> Map2<F> {}\n    |                ^\n \n error: aborting due to 4 previous errors"}, {"sha": "fe993a6ee13022167ee79b5ea32bb4329145423a", "filename": "src/test/ui/parser/variadic-ffi-semantic-restrictions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -1,4 +1,5 @@\n #![feature(c_variadic)]\n+#![allow(anonymous_parameters)]\n \n fn main() {}\n "}, {"sha": "10fd05c0bef3feaef4e8b811a5deb790f1ca91f9", "filename": "src/test/ui/parser/variadic-ffi-semantic-restrictions.stderr", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fvariadic-ffi-semantic-restrictions.stderr?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -1,203 +1,203 @@\n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:5:19\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:6:19\n    |\n LL | fn f1_1(x: isize, ...) {}\n    |                   ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:8:9\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:9:9\n    |\n LL | fn f1_2(...) {}\n    |         ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:8:9\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:9:9\n    |\n LL | fn f1_2(...) {}\n    |         ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:12:30\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:13:30\n    |\n LL | extern \"C\" fn f2_1(x: isize, ...) {}\n    |                              ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:15:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:16:20\n    |\n LL | extern \"C\" fn f2_2(...) {}\n    |                    ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:15:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:16:20\n    |\n LL | extern \"C\" fn f2_2(...) {}\n    |                    ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:19:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:20:20\n    |\n LL | extern \"C\" fn f2_3(..., x: isize) {}\n    |                    ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:19:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:20:20\n    |\n LL | extern \"C\" fn f2_3(..., x: isize) {}\n    |                    ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:23:30\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:24:30\n    |\n LL | extern \"C\" fn f3_1(x: isize, ...) {}\n    |                              ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:26:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:27:20\n    |\n LL | extern \"C\" fn f3_2(...) {}\n    |                    ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:26:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:27:20\n    |\n LL | extern \"C\" fn f3_2(...) {}\n    |                    ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:30:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:31:20\n    |\n LL | extern \"C\" fn f3_3(..., x: isize) {}\n    |                    ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:30:20\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:31:20\n    |\n LL | extern \"C\" fn f3_3(..., x: isize) {}\n    |                    ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:35:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:36:13\n    |\n LL |     fn e_f1(...);\n    |             ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:37:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:38:13\n    |\n LL |     fn e_f2(..., x: isize);\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:44:23\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:45:23\n    |\n LL |     fn i_f1(x: isize, ...) {}\n    |                       ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:46:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:47:13\n    |\n LL |     fn i_f2(...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:46:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:47:13\n    |\n LL |     fn i_f2(...) {}\n    |             ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:49:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:50:13\n    |\n LL |     fn i_f3(..., x: isize, ...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:49:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:50:13\n    |\n LL |     fn i_f3(..., x: isize, ...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:49:28\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:50:28\n    |\n LL |     fn i_f3(..., x: isize, ...) {}\n    |                            ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:53:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:54:13\n    |\n LL |     fn i_f4(..., x: isize, ...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:53:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:54:13\n    |\n LL |     fn i_f4(..., x: isize, ...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:53:28\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:54:28\n    |\n LL |     fn i_f4(..., x: isize, ...) {}\n    |                            ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:60:23\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:61:23\n    |\n LL |     fn t_f1(x: isize, ...) {}\n    |                       ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:62:23\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:63:23\n    |\n LL |     fn t_f2(x: isize, ...);\n    |                       ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:64:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:65:13\n    |\n LL |     fn t_f3(...) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:64:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:65:13\n    |\n LL |     fn t_f3(...) {}\n    |             ^^^\n \n error: C-variadic function must be declared with at least one named argument\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:67:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:68:13\n    |\n LL |     fn t_f4(...);\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:67:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:68:13\n    |\n LL |     fn t_f4(...);\n    |             ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:70:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:71:13\n    |\n LL |     fn t_f5(..., x: isize) {}\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:70:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:71:13\n    |\n LL |     fn t_f5(..., x: isize) {}\n    |             ^^^\n \n error: `...` must be the last argument of a C-variadic function\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:73:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:74:13\n    |\n LL |     fn t_f6(..., x: isize);\n    |             ^^^\n \n error: only foreign or `unsafe extern \"C\" functions may be C-variadic\n-  --> $DIR/variadic-ffi-semantic-restrictions.rs:73:13\n+  --> $DIR/variadic-ffi-semantic-restrictions.rs:74:13\n    |\n LL |     fn t_f6(..., x: isize);\n    |             ^^^"}, {"sha": "6b8df78a061c7194339b14e8d530559a2abdce92", "filename": "src/test/ui/proc-macro/trait-fn-args-2015.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fproc-macro%2Ftrait-fn-args-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fproc-macro%2Ftrait-fn-args-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Ftrait-fn-args-2015.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -3,6 +3,8 @@\n // check-pass\n // aux-build:test-macros.rs\n \n+#![allow(anonymous_parameters)]\n+\n #[macro_use]\n extern crate test_macros;\n "}, {"sha": "54f2f451bbe53d6396f7f953ad5bdadadb6e4b01", "filename": "src/test/ui/rfc-2565-param-attrs/proc-macro-cannot-be-used.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -1,6 +1,7 @@\n // aux-build:ident-mac.rs\n \n #![feature(c_variadic)]\n+#![allow(anonymous_parameters)]\n \n extern crate ident_mac;\n use ident_mac::id;"}, {"sha": "e74d05d49b8d722b97c508bcce301a524f76cc4f", "filename": "src/test/ui/rfc-2565-param-attrs/proc-macro-cannot-be-used.stderr", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fproc-macro-cannot-be-used.stderr?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -1,173 +1,173 @@\n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:10:23\n+  --> $DIR/proc-macro-cannot-be-used.rs:11:23\n    |\n LL | extern \"C\" { fn ffi(#[id] arg1: i32, #[id] ...); }\n    |                       ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:10:40\n+  --> $DIR/proc-macro-cannot-be-used.rs:11:40\n    |\n LL | extern \"C\" { fn ffi(#[id] arg1: i32, #[id] ...); }\n    |                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:14:40\n+  --> $DIR/proc-macro-cannot-be-used.rs:15:40\n    |\n LL | unsafe extern \"C\" fn cvar(arg1: i32, #[id] mut args: ...) {}\n    |                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:17:30\n+  --> $DIR/proc-macro-cannot-be-used.rs:18:30\n    |\n LL | type Alias = extern \"C\" fn(#[id] u8, #[id] ...);\n    |                              ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:17:40\n+  --> $DIR/proc-macro-cannot-be-used.rs:18:40\n    |\n LL | type Alias = extern \"C\" fn(#[id] u8, #[id] ...);\n    |                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:21:11\n+  --> $DIR/proc-macro-cannot-be-used.rs:22:11\n    |\n LL | fn free(#[id] arg1: u8) {\n    |           ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:23:18\n+  --> $DIR/proc-macro-cannot-be-used.rs:24:18\n    |\n LL |     let lam = |#[id] W(x), #[id] y: usize| ();\n    |                  ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:23:30\n+  --> $DIR/proc-macro-cannot-be-used.rs:24:30\n    |\n LL |     let lam = |#[id] W(x), #[id] y: usize| ();\n    |                              ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:29:20\n+  --> $DIR/proc-macro-cannot-be-used.rs:30:20\n    |\n LL |     fn inherent1(#[id] self, #[id] arg1: u8) {}\n    |                    ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:29:32\n+  --> $DIR/proc-macro-cannot-be-used.rs:30:32\n    |\n LL |     fn inherent1(#[id] self, #[id] arg1: u8) {}\n    |                                ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:32:20\n+  --> $DIR/proc-macro-cannot-be-used.rs:33:20\n    |\n LL |     fn inherent2(#[id] &self, #[id] arg1: u8) {}\n    |                    ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:32:33\n+  --> $DIR/proc-macro-cannot-be-used.rs:33:33\n    |\n LL |     fn inherent2(#[id] &self, #[id] arg1: u8) {}\n    |                                 ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:35:24\n+  --> $DIR/proc-macro-cannot-be-used.rs:36:24\n    |\n LL |     fn inherent3<'a>(#[id] &'a mut self, #[id] arg1: u8) {}\n    |                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:35:44\n+  --> $DIR/proc-macro-cannot-be-used.rs:36:44\n    |\n LL |     fn inherent3<'a>(#[id] &'a mut self, #[id] arg1: u8) {}\n    |                                            ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:38:24\n+  --> $DIR/proc-macro-cannot-be-used.rs:39:24\n    |\n LL |     fn inherent4<'a>(#[id] self: Box<Self>, #[id] arg1: u8) {}\n    |                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:38:47\n+  --> $DIR/proc-macro-cannot-be-used.rs:39:47\n    |\n LL |     fn inherent4<'a>(#[id] self: Box<Self>, #[id] arg1: u8) {}\n    |                                               ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:41:40\n+  --> $DIR/proc-macro-cannot-be-used.rs:42:40\n    |\n LL |     fn issue_64682_associated_fn<'a>(#[id] arg1: u8, #[id] arg2: u8) {}\n    |                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:41:56\n+  --> $DIR/proc-macro-cannot-be-used.rs:42:56\n    |\n LL |     fn issue_64682_associated_fn<'a>(#[id] arg1: u8, #[id] arg2: u8) {}\n    |                                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:47:17\n+  --> $DIR/proc-macro-cannot-be-used.rs:48:17\n    |\n LL |     fn trait1(#[id] self, #[id] arg1: u8);\n    |                 ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:47:29\n+  --> $DIR/proc-macro-cannot-be-used.rs:48:29\n    |\n LL |     fn trait1(#[id] self, #[id] arg1: u8);\n    |                             ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:50:17\n+  --> $DIR/proc-macro-cannot-be-used.rs:51:17\n    |\n LL |     fn trait2(#[id] &self, #[id] arg1: u8);\n    |                 ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:50:30\n+  --> $DIR/proc-macro-cannot-be-used.rs:51:30\n    |\n LL |     fn trait2(#[id] &self, #[id] arg1: u8);\n    |                              ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:53:21\n+  --> $DIR/proc-macro-cannot-be-used.rs:54:21\n    |\n LL |     fn trait3<'a>(#[id] &'a mut self, #[id] arg1: u8);\n    |                     ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:53:41\n+  --> $DIR/proc-macro-cannot-be-used.rs:54:41\n    |\n LL |     fn trait3<'a>(#[id] &'a mut self, #[id] arg1: u8);\n    |                                         ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:56:21\n+  --> $DIR/proc-macro-cannot-be-used.rs:57:21\n    |\n LL |     fn trait4<'a>(#[id] self: Box<Self>, #[id] arg1: u8, #[id] Vec<u8>);\n    |                     ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:56:44\n+  --> $DIR/proc-macro-cannot-be-used.rs:57:44\n    |\n LL |     fn trait4<'a>(#[id] self: Box<Self>, #[id] arg1: u8, #[id] Vec<u8>);\n    |                                            ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:56:60\n+  --> $DIR/proc-macro-cannot-be-used.rs:57:60\n    |\n LL |     fn trait4<'a>(#[id] self: Box<Self>, #[id] arg1: u8, #[id] Vec<u8>);\n    |                                                            ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:60:40\n+  --> $DIR/proc-macro-cannot-be-used.rs:61:40\n    |\n LL |     fn issue_64682_associated_fn<'a>(#[id] arg1: u8, #[id] arg2: u8);\n    |                                        ^^ not a non-macro attribute\n \n error: expected non-macro attribute, found attribute macro `id`\n-  --> $DIR/proc-macro-cannot-be-used.rs:60:56\n+  --> $DIR/proc-macro-cannot-be-used.rs:61:56\n    |\n LL |     fn issue_64682_associated_fn<'a>(#[id] arg1: u8, #[id] arg2: u8);\n    |                                                        ^^ not a non-macro attribute"}, {"sha": "a15c4bd6b7ffcf522d3827b4806d68299d76ef64", "filename": "src/test/ui/specialization/issue-39448.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fspecialization%2Fissue-39448.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Fspecialization%2Fissue-39448.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-39448.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -18,7 +18,7 @@ impl FromA<u8> for u16 {\n }\n \n trait FromA<T> {\n-    fn from(T) -> Self;\n+    fn from(t: T) -> Self;\n }\n \n impl<T: A, U: A + FromA<T>> FromA<T> for U {"}, {"sha": "7645311496d8ccb138724bd9a7d1cdfbad6d4313", "filename": "src/test/ui/typeck/issue-65611.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ftypeck%2Fissue-65611.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664c3e71b8eebf824f5e652e0f0511acda99394c/src%2Ftest%2Fui%2Ftypeck%2Fissue-65611.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-65611.rs?ref=664c3e71b8eebf824f5e652e0f0511acda99394c", "patch": "@@ -17,7 +17,7 @@ pub unsafe trait Array {\n \n pub trait Index : PartialEq + Copy {\n     fn to_usize(self) -> usize;\n-    fn from(usize) -> Self;\n+    fn from(i: usize) -> Self;\n }\n \n impl Index for usize {"}]}