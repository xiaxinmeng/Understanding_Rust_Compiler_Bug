{"sha": "8867f7f6507ad0a6682c969235fb5f0b572e646b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NjdmN2Y2NTA3YWQwYTY2ODJjOTY5MjM1ZmI1ZjBiNTcyZTY0NmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-05T20:44:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-05T20:44:38Z"}, "message": "Rollup merge of #82708 - GuillaumeGomez:doc-test-attr-check, r=Manishearth\n\nWarn on `#![doc(test(...))]` on items other than the crate root and use future incompatible lint\n\nPart of #82672.\n\nThis PR does multiple things:\n * Create a new `INVALID_DOC_ATTRIBUTE` lint which is also \"future incompatible\", allowing us to use it as a warning for the moment until it turns (eventually) into a hard error.\n * Use this link when `#![doc(test(...))]` isn't used at the crate level.\n * Make #82702 use this new lint as well.\n\nr? ``@jyn514``", "tree": {"sha": "b52844c6610cd167a99c5f700e172764470b0aec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52844c6610cd167a99c5f700e172764470b0aec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8867f7f6507ad0a6682c969235fb5f0b572e646b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQpg2CRBK7hj4Ov3rIwAAdHIIAKeB7gOfVweWWfFNslTkjVbL\nWv1esVLZ0ANVI77tS2cug70FueNGoizFH9JZ8LHsjA1cgPAc5Iy8Uz9Tx/rft34b\noLFuSHqZgU6/NsoEih4JQuYw0XuA/Jr09Hq1oh8tuSHoo973JHi/dcNJuZ+X3Eeq\n4KH0vQG8WS/zQ8XKnLYbIj1tk26oqHF/YkqMhzZuq78BFCumKE9E6OBkE3W7Ow7B\ntZIz77zY+scw3dXrvQmvFXV+zla0I9OXnM2Dvphw3I+csjn+XTnGV2pBmaoT0nZV\nMo0ql7KhdPEAuHBUw2xG0m9/s3crQMvkVDRV1hnLXqrS50muBB9x7pERLnUJuqI=\n=Q4KO\n-----END PGP SIGNATURE-----\n", "payload": "tree b52844c6610cd167a99c5f700e172764470b0aec\nparent 92861c79276cee63e53ed4c63111cd37560c458c\nparent a11e87e74d3ad5f6b9f628faba85739f067108a6\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1614977078 +0100\ncommitter GitHub <noreply@github.com> 1614977078 +0100\n\nRollup merge of #82708 - GuillaumeGomez:doc-test-attr-check, r=Manishearth\n\nWarn on `#![doc(test(...))]` on items other than the crate root and use future incompatible lint\n\nPart of #82672.\n\nThis PR does multiple things:\n * Create a new `INVALID_DOC_ATTRIBUTE` lint which is also \"future incompatible\", allowing us to use it as a warning for the moment until it turns (eventually) into a hard error.\n * Use this link when `#![doc(test(...))]` isn't used at the crate level.\n * Make #82702 use this new lint as well.\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8867f7f6507ad0a6682c969235fb5f0b572e646b", "html_url": "https://github.com/rust-lang/rust/commit/8867f7f6507ad0a6682c969235fb5f0b572e646b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8867f7f6507ad0a6682c969235fb5f0b572e646b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92861c79276cee63e53ed4c63111cd37560c458c", "url": "https://api.github.com/repos/rust-lang/rust/commits/92861c79276cee63e53ed4c63111cd37560c458c", "html_url": "https://github.com/rust-lang/rust/commit/92861c79276cee63e53ed4c63111cd37560c458c"}, {"sha": "a11e87e74d3ad5f6b9f628faba85739f067108a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a11e87e74d3ad5f6b9f628faba85739f067108a6", "html_url": "https://github.com/rust-lang/rust/commit/a11e87e74d3ad5f6b9f628faba85739f067108a6"}], "stats": {"total": 166, "additions": 143, "deletions": 23}, "files": [{"sha": "e6f81ce828ffac4f9750bb0b2a05d37a63dff5ee", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -3059,3 +3059,33 @@ declare_lint! {\n     Allow,\n     \"No declared ABI for extern declaration\"\n }\n+\n+declare_lint! {\n+    /// The `invalid_doc_attributes` lint detects when the `#[doc(...)]` is\n+    /// misused.\n+    ///\n+    /// ### Example\n+    ///\n+    /// ```rust,compile_fail\n+    /// #![deny(warnings)]\n+    ///\n+    /// pub mod submodule {\n+    ///     #![doc(test(no_crate_inject))]\n+    /// }\n+    /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// Previously, there were very like checks being performed on `#[doc(..)]`\n+    /// unlike the other attributes. It'll now catch all the issues that it\n+    /// silently ignored previously.\n+    pub INVALID_DOC_ATTRIBUTES,\n+    Warn,\n+    \"detects invalid `#[doc(...)]` attributes\",\n+    @future_incompatible = FutureIncompatibleInfo {\n+        reference: \"issue #82730 <https://github.com/rust-lang/rust/issues/82730>\",\n+        edition: None,\n+    };\n+}"}, {"sha": "ed971951b0f76817c68c5a19f77f7ab93e52d3be", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -17,7 +17,9 @@ use rustc_hir::{\n     self, FnSig, ForeignItem, ForeignItemKind, HirId, Item, ItemKind, TraitItem, CRATE_HIR_ID,\n };\n use rustc_hir::{MethodKind, Target};\n-use rustc_session::lint::builtin::{CONFLICTING_REPR_HINTS, UNUSED_ATTRIBUTES};\n+use rustc_session::lint::builtin::{\n+    CONFLICTING_REPR_HINTS, INVALID_DOC_ATTRIBUTES, UNUSED_ATTRIBUTES,\n+};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n@@ -544,6 +546,21 @@ impl CheckAttrVisitor<'tcx> {\n                         {\n                             return false;\n                         }\n+                    } else if meta.has_name(sym::test) {\n+                        if CRATE_HIR_ID != hir_id {\n+                            self.tcx.struct_span_lint_hir(\n+                                INVALID_DOC_ATTRIBUTES,\n+                                hir_id,\n+                                meta.span(),\n+                                |lint| {\n+                                    lint.build(\n+                                        \"`#![doc(test(...)]` is only allowed as a crate level attribute\"\n+                                    )\n+                                    .emit();\n+                                },\n+                            );\n+                            return false;\n+                        }\n                     } else if let Some(i_meta) = meta.meta_item() {\n                         if ![\n                             sym::cfg,\n@@ -568,19 +585,14 @@ impl CheckAttrVisitor<'tcx> {\n                         .any(|m| i_meta.has_name(*m))\n                         {\n                             self.tcx.struct_span_lint_hir(\n-                                UNUSED_ATTRIBUTES,\n+                                INVALID_DOC_ATTRIBUTES,\n                                 hir_id,\n                                 i_meta.span,\n                                 |lint| {\n                                     lint.build(&format!(\n                                         \"unknown `doc` attribute `{}`\",\n                                         i_meta.name_or_empty()\n                                     ))\n-                                    .warn(\n-                                        \"this was previously accepted by the compiler but is \\\n-                                        being phased out; it will become a hard error in \\\n-                                        a future release!\",\n-                                    )\n                                     .emit();\n                                 },\n                             );"}, {"sha": "3a5841129734dfa04ba977681c971d9da674e4f1", "filename": "src/test/rustdoc-ui/doc-attr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -1,11 +1,10 @@\n #![crate_type = \"lib\"]\n-#![deny(unused_attributes)]\n-//~^ NOTE lint level is defined here\n+#![deny(warnings)]\n #![doc(as_ptr)]\n //~^ ERROR unknown `doc` attribute\n-//~| WARNING will become a hard error in a future release\n+//~^^ WARN\n \n #[doc(as_ptr)]\n //~^ ERROR unknown `doc` attribute\n-//~| WARNING will become a hard error in a future release\n+//~^^ WARN\n pub fn foo() {}"}, {"sha": "21479d25fc27494f106917041cb3372e7b66f547", "filename": "src/test/rustdoc-ui/doc-attr.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-attr.stderr?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -1,23 +1,26 @@\n error: unknown `doc` attribute `as_ptr`\n-  --> $DIR/doc-attr.rs:8:7\n+  --> $DIR/doc-attr.rs:7:7\n    |\n LL | #[doc(as_ptr)]\n    |       ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/doc-attr.rs:2:9\n    |\n-LL | #![deny(unused_attributes)]\n-   |         ^^^^^^^^^^^^^^^^^\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(invalid_doc_attributes)]` implied by `#[deny(warnings)]`\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n \n error: unknown `doc` attribute `as_ptr`\n-  --> $DIR/doc-attr.rs:4:8\n+  --> $DIR/doc-attr.rs:3:8\n    |\n LL | #![doc(as_ptr)]\n    |        ^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3fb484644d7fa1b643186398a22cc57ecc5cc23d", "filename": "src/test/rustdoc-ui/doc-attr2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -0,0 +1,11 @@\n+#![crate_type = \"lib\"]\n+#![deny(warnings)]\n+\n+#[doc(test(no_crate_inject))] //~ ERROR\n+//~^ WARN\n+pub fn foo() {}\n+\n+pub mod bar {\n+    #![doc(test(no_crate_inject))] //~ ERROR\n+    //~^ WARN\n+}"}, {"sha": "eeb2c2be08551282df45e611c8ac9b1dbba2f548", "filename": "src/test/rustdoc-ui/doc-attr2.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-attr2.stderr?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -0,0 +1,26 @@\n+error: `#![doc(test(...)]` is only allowed as a crate level attribute\n+  --> $DIR/doc-attr2.rs:4:7\n+   |\n+LL | #[doc(test(no_crate_inject))]\n+   |       ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/doc-attr2.rs:2:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(invalid_doc_attributes)]` implied by `#[deny(warnings)]`\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: `#![doc(test(...)]` is only allowed as a crate level attribute\n+  --> $DIR/doc-attr2.rs:9:12\n+   |\n+LL |     #![doc(test(no_crate_inject))]\n+   |            ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "3a5841129734dfa04ba977681c971d9da674e4f1", "filename": "src/test/ui/attributes/doc-attr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -1,11 +1,10 @@\n #![crate_type = \"lib\"]\n-#![deny(unused_attributes)]\n-//~^ NOTE lint level is defined here\n+#![deny(warnings)]\n #![doc(as_ptr)]\n //~^ ERROR unknown `doc` attribute\n-//~| WARNING will become a hard error in a future release\n+//~^^ WARN\n \n #[doc(as_ptr)]\n //~^ ERROR unknown `doc` attribute\n-//~| WARNING will become a hard error in a future release\n+//~^^ WARN\n pub fn foo() {}"}, {"sha": "21479d25fc27494f106917041cb3372e7b66f547", "filename": "src/test/ui/attributes/doc-attr.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr.stderr?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -1,23 +1,26 @@\n error: unknown `doc` attribute `as_ptr`\n-  --> $DIR/doc-attr.rs:8:7\n+  --> $DIR/doc-attr.rs:7:7\n    |\n LL | #[doc(as_ptr)]\n    |       ^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/doc-attr.rs:2:9\n    |\n-LL | #![deny(unused_attributes)]\n-   |         ^^^^^^^^^^^^^^^^^\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(invalid_doc_attributes)]` implied by `#[deny(warnings)]`\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n \n error: unknown `doc` attribute `as_ptr`\n-  --> $DIR/doc-attr.rs:4:8\n+  --> $DIR/doc-attr.rs:3:8\n    |\n LL | #![doc(as_ptr)]\n    |        ^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3fb484644d7fa1b643186398a22cc57ecc5cc23d", "filename": "src/test/ui/attributes/doc-attr2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.rs?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -0,0 +1,11 @@\n+#![crate_type = \"lib\"]\n+#![deny(warnings)]\n+\n+#[doc(test(no_crate_inject))] //~ ERROR\n+//~^ WARN\n+pub fn foo() {}\n+\n+pub mod bar {\n+    #![doc(test(no_crate_inject))] //~ ERROR\n+    //~^ WARN\n+}"}, {"sha": "eeb2c2be08551282df45e611c8ac9b1dbba2f548", "filename": "src/test/ui/attributes/doc-attr2.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8867f7f6507ad0a6682c969235fb5f0b572e646b/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fdoc-attr2.stderr?ref=8867f7f6507ad0a6682c969235fb5f0b572e646b", "patch": "@@ -0,0 +1,26 @@\n+error: `#![doc(test(...)]` is only allowed as a crate level attribute\n+  --> $DIR/doc-attr2.rs:4:7\n+   |\n+LL | #[doc(test(no_crate_inject))]\n+   |       ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/doc-attr2.rs:2:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(invalid_doc_attributes)]` implied by `#[deny(warnings)]`\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: `#![doc(test(...)]` is only allowed as a crate level attribute\n+  --> $DIR/doc-attr2.rs:9:12\n+   |\n+LL |     #![doc(test(no_crate_inject))]\n+   |            ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #82730 <https://github.com/rust-lang/rust/issues/82730>\n+\n+error: aborting due to 2 previous errors\n+"}]}