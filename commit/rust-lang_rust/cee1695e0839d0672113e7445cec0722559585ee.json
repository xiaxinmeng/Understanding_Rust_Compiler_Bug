{"sha": "cee1695e0839d0672113e7445cec0722559585ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZTE2OTVlMDgzOWQwNjcyMTEzZTc0NDVjZWMwNzIyNTU5NTg1ZWU=", "commit": {"author": {"name": "Dirk Gadsden", "email": "dirk@esherido.com", "date": "2016-01-31T19:50:22Z"}, "committer": {"name": "Dirk Gadsden", "email": "dirk@esherido.com", "date": "2016-01-31T19:50:22Z"}, "message": "Safety docs about `std::process::Child` going out of scope\n\nThere is no `Drop` implemented for `Child`, so if it goes out\nof scope in Rust-land and gets deallocated, the child process\nwill continue to exist and execute. If users want a guarantee\nthat the process has finished running and exited they must\nmanually use `kill`, `wait`, or `wait_with_output`.\n\nFixes #31289.", "tree": {"sha": "9130daff1d27473155b0cab06c30c4037f0b3723", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9130daff1d27473155b0cab06c30c4037f0b3723"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cee1695e0839d0672113e7445cec0722559585ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cee1695e0839d0672113e7445cec0722559585ee", "html_url": "https://github.com/rust-lang/rust/commit/cee1695e0839d0672113e7445cec0722559585ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cee1695e0839d0672113e7445cec0722559585ee/comments", "author": {"login": "dirk", "id": 7081, "node_id": "MDQ6VXNlcjcwODE=", "avatar_url": "https://avatars.githubusercontent.com/u/7081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk", "html_url": "https://github.com/dirk", "followers_url": "https://api.github.com/users/dirk/followers", "following_url": "https://api.github.com/users/dirk/following{/other_user}", "gists_url": "https://api.github.com/users/dirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk/subscriptions", "organizations_url": "https://api.github.com/users/dirk/orgs", "repos_url": "https://api.github.com/users/dirk/repos", "events_url": "https://api.github.com/users/dirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dirk", "id": 7081, "node_id": "MDQ6VXNlcjcwODE=", "avatar_url": "https://avatars.githubusercontent.com/u/7081?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dirk", "html_url": "https://github.com/dirk", "followers_url": "https://api.github.com/users/dirk/followers", "following_url": "https://api.github.com/users/dirk/following{/other_user}", "gists_url": "https://api.github.com/users/dirk/gists{/gist_id}", "starred_url": "https://api.github.com/users/dirk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dirk/subscriptions", "organizations_url": "https://api.github.com/users/dirk/orgs", "repos_url": "https://api.github.com/users/dirk/repos", "events_url": "https://api.github.com/users/dirk/events{/privacy}", "received_events_url": "https://api.github.com/users/dirk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9041b930585806b948b4cc68933047ffdc96f6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9041b930585806b948b4cc68933047ffdc96f6f9", "html_url": "https://github.com/rust-lang/rust/commit/9041b930585806b948b4cc68933047ffdc96f6f9"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "2cfbef1e1b7d90e2cda1883c12ad2e6380c48f9c", "filename": "src/libstd/process.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cee1695e0839d0672113e7445cec0722559585ee/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cee1695e0839d0672113e7445cec0722559585ee/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=cee1695e0839d0672113e7445cec0722559585ee", "patch": "@@ -47,6 +47,14 @@ use thread::{self, JoinHandle};\n ///\n /// assert!(ecode.success());\n /// ```\n+///\n+/// # Safety\n+///\n+/// Take note that there is no implementation of\n+/// [`Drop`](../../core/ops/trait.Drop.html) for child processes, so if you\n+/// not ensure the `Child` has exited (through `kill`, `wait`, or\n+/// `wait_with_output`) then it will continue to run even after the `Child`\n+/// handle to it has gone out of scope.\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Child {\n     handle: imp::Process,"}]}