{"sha": "a3b7839bbdde0c5856720dc885250752aefd4207", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYjc4MzliYmRkZTBjNTg1NjcyMGRjODg1MjUwNzUyYWVmZDQyMDc=", "commit": {"author": {"name": "JCTyBlaidd", "email": "JCTyblaidd@users.noreply.github.com", "date": "2020-11-15T20:12:58Z"}, "committer": {"name": "JCTyBlaidd", "email": "JCTyblaidd@users.noreply.github.com", "date": "2020-11-15T20:12:58Z"}, "message": "Add comment regarding seq-cst ordering & add test for disabling the data-race detector.", "tree": {"sha": "30239d999be13f703e70f2d0aec978b23c0bd4f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30239d999be13f703e70f2d0aec978b23c0bd4f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3b7839bbdde0c5856720dc885250752aefd4207", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3b7839bbdde0c5856720dc885250752aefd4207", "html_url": "https://github.com/rust-lang/rust/commit/a3b7839bbdde0c5856720dc885250752aefd4207", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3b7839bbdde0c5856720dc885250752aefd4207/comments", "author": {"login": "JCTyblaidd", "id": 8288600, "node_id": "MDQ6VXNlcjgyODg2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8288600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JCTyblaidd", "html_url": "https://github.com/JCTyblaidd", "followers_url": "https://api.github.com/users/JCTyblaidd/followers", "following_url": "https://api.github.com/users/JCTyblaidd/following{/other_user}", "gists_url": "https://api.github.com/users/JCTyblaidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/JCTyblaidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JCTyblaidd/subscriptions", "organizations_url": "https://api.github.com/users/JCTyblaidd/orgs", "repos_url": "https://api.github.com/users/JCTyblaidd/repos", "events_url": "https://api.github.com/users/JCTyblaidd/events{/privacy}", "received_events_url": "https://api.github.com/users/JCTyblaidd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JCTyblaidd", "id": 8288600, "node_id": "MDQ6VXNlcjgyODg2MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8288600?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JCTyblaidd", "html_url": "https://github.com/JCTyblaidd", "followers_url": "https://api.github.com/users/JCTyblaidd/followers", "following_url": "https://api.github.com/users/JCTyblaidd/following{/other_user}", "gists_url": "https://api.github.com/users/JCTyblaidd/gists{/gist_id}", "starred_url": "https://api.github.com/users/JCTyblaidd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JCTyblaidd/subscriptions", "organizations_url": "https://api.github.com/users/JCTyblaidd/orgs", "repos_url": "https://api.github.com/users/JCTyblaidd/repos", "events_url": "https://api.github.com/users/JCTyblaidd/events{/privacy}", "received_events_url": "https://api.github.com/users/JCTyblaidd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1f7ac1f153c7b0df8d7603b4852cc24b22c039", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1f7ac1f153c7b0df8d7603b4852cc24b22c039", "html_url": "https://github.com/rust-lang/rust/commit/4a1f7ac1f153c7b0df8d7603b4852cc24b22c039"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "bad757bc70e596694ecc1280d6c71a8b39d35489", "filename": "src/data_race.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a3b7839bbdde0c5856720dc885250752aefd4207/src%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b7839bbdde0c5856720dc885250752aefd4207/src%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdata_race.rs?ref=a3b7839bbdde0c5856720dc885250752aefd4207", "patch": "@@ -27,6 +27,16 @@\n //! from acquire/release operations. If weak memory orderings are explored then this\n //! may need to change or be updated accordingly.\n //!\n+//! Per the C++ spec for the memory model a sequentially consistent operation:\n+//!   \"A load operation with this memory order performs an acquire operation,\n+//!    a store performs a release operation, and read-modify-write performs\n+//!    both an acquire operation and a release operation, plus a single total\n+//!    order exists in which all threads observe all modifications in the same\n+//!    order (see Sequentially-consistent ordering below) \"\n+//! So in the absence of weak memory effects a seq-cst load & a seq-cst store is identical\n+//! to a acquire load and a release store given the global sequentially consistent order\n+//! of the schedule.\n+//!\n //! FIXME:\n //! currently we have our own local copy of the currently active thread index and names, this is due\n //! in part to the inability to access the current location of threads.active_thread inside the AllocExtra\n@@ -196,6 +206,7 @@ struct MemoryCellClocks {\n \n     /// The vector-clock of the timestamp of the last read operation\n     /// performed by a thread since the last write operation occured.\n+    /// It is reset to zero on each write operation.\n     read: VClock,\n \n     /// Atomic acquire & release sequence tracking clocks."}, {"sha": "e47a2079c205d0f0c76ea44eb2113084709804c5", "filename": "tests/run-pass/concurrency/disable_data_race_detector.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a3b7839bbdde0c5856720dc885250752aefd4207/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3b7839bbdde0c5856720dc885250752aefd4207/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.rs?ref=a3b7839bbdde0c5856720dc885250752aefd4207", "patch": "@@ -0,0 +1,28 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// compile-flags: -Zmiri-disable-data-race-detector\n+\n+use std::thread::spawn;\n+\n+#[derive(Copy, Clone)]\n+struct EvilSend<T>(pub T);\n+\n+unsafe impl<T> Send for EvilSend<T> {}\n+unsafe impl<T> Sync for EvilSend<T> {}\n+\n+pub fn main() {\n+    let mut a = 0u32;\n+    let b = &mut a as *mut u32;\n+    let c = EvilSend(b);\n+    unsafe {\n+        let j1 = spawn(move || {\n+            *c.0 = 32;\n+        });\n+\n+        let j2 = spawn(move || {\n+            *c.0 = 64; //~ ERROR Data race\n+        });\n+\n+        j1.join().unwrap();\n+        j2.join().unwrap();\n+    }\n+}"}, {"sha": "7ba8087a9b4bc5938d4238c495318a9ba05d6f28", "filename": "tests/run-pass/concurrency/disable_data_race_detector.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3b7839bbdde0c5856720dc885250752aefd4207/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a3b7839bbdde0c5856720dc885250752aefd4207/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fdisable_data_race_detector.stderr?ref=a3b7839bbdde0c5856720dc885250752aefd4207", "patch": "@@ -0,0 +1,2 @@\n+warning: thread support is experimental, no weak memory effects are currently emulated.\n+"}]}