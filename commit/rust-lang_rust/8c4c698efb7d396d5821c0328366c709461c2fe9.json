{"sha": "8c4c698efb7d396d5821c0328366c709461c2fe9", "node_id": "C_kwDOAAsO6NoAKDhjNGM2OThlZmI3ZDM5NmQ1ODIxYzAzMjgzNjZjNzA5NDYxYzJmZTk", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-04T09:06:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-04T09:06:42Z"}, "message": "Rollup merge of #97722 - compiler-errors:tighten-copy-type-error-spans, r=Dylan-DPC\n\nTighten spans for bad fields in struct deriving `Copy`\n\nr? `@estebank`\n\nCloses #89137 for good, I think\n\nNot sure if this is what you were looking for in https://github.com/rust-lang/rust/issues/89137#issuecomment-1146201791", "tree": {"sha": "d00fdfbcab3e05125926e16f7bdfd88b491029a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d00fdfbcab3e05125926e16f7bdfd88b491029a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4c698efb7d396d5821c0328366c709461c2fe9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimyCjCRBK7hj4Ov3rIwAAUncIAC6SbClF2g8Ao7Z6cL1KL87N\nQ2SpFbbtbJsdygmhqBFE/ztybAuZv6UkB5qrHjT82+IVY7yCk8Ai5UcbDcmHc/jK\nN3w5ww9BzYTuxPc32nsqnHQmyLZFPulOVTuP7YnRuNX/ggwIZcXr4HX/u37Wf5J7\n+tkgecE0bIbIsQSUWMz62Nl6qamJmzYicH1AHTjp1qGLDDJ2ak1CDJohYe6FyPs5\n+FwhStXFxoxfa8naDhmfLYgSwfNBaeVMgXYX2nvtYgRJ+9r4ue9nFG5Y6db06pc8\nBmuOM00xHumlQFDingvKqzGty0ATGQKWpWrUmWSpoji7EyVjISATDAGaTap3vq0=\n=jnmU\n-----END PGP SIGNATURE-----\n", "payload": "tree d00fdfbcab3e05125926e16f7bdfd88b491029a5\nparent 9917f3816adce6089c90138eaf7d61213354e5fc\nparent 4c6a6bc3f9466c35a749ccc25c54bb87a5951769\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654333602 +0200\ncommitter GitHub <noreply@github.com> 1654333602 +0200\n\nRollup merge of #97722 - compiler-errors:tighten-copy-type-error-spans, r=Dylan-DPC\n\nTighten spans for bad fields in struct deriving `Copy`\n\nr? `@estebank`\n\nCloses #89137 for good, I think\n\nNot sure if this is what you were looking for in https://github.com/rust-lang/rust/issues/89137#issuecomment-1146201791\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4c698efb7d396d5821c0328366c709461c2fe9", "html_url": "https://github.com/rust-lang/rust/commit/8c4c698efb7d396d5821c0328366c709461c2fe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4c698efb7d396d5821c0328366c709461c2fe9/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9917f3816adce6089c90138eaf7d61213354e5fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9917f3816adce6089c90138eaf7d61213354e5fc", "html_url": "https://github.com/rust-lang/rust/commit/9917f3816adce6089c90138eaf7d61213354e5fc"}, {"sha": "4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c6a6bc3f9466c35a749ccc25c54bb87a5951769", "html_url": "https://github.com/rust-lang/rust/commit/4c6a6bc3f9466c35a749ccc25c54bb87a5951769"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "f04f527ccb7af8f3062ab4a2f4361c8876afea16", "filename": "compiler/rustc_trait_selection/src/traits/misc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c4c698efb7d396d5821c0328366c709461c2fe9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4c698efb7d396d5821c0328366c709461c2fe9/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs?ref=8c4c698efb7d396d5821c0328366c709461c2fe9", "patch": "@@ -20,7 +20,7 @@ pub fn can_type_implement_copy<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     self_type: Ty<'tcx>,\n-    cause: ObligationCause<'tcx>,\n+    parent_cause: ObligationCause<'tcx>,\n ) -> Result<(), CopyImplementationError<'tcx>> {\n     // FIXME: (@jroesch) float this code up\n     tcx.infer_ctxt().enter(|infcx| {\n@@ -59,7 +59,7 @@ pub fn can_type_implement_copy<'tcx>(\n                     .ty(tcx, traits::InternalSubsts::identity_for_item(tcx, adt.did()))\n                     .has_param_types_or_consts()\n                 {\n-                    cause.clone()\n+                    parent_cause.clone()\n                 } else {\n                     ObligationCause::dummy_with_span(span)\n                 };"}, {"sha": "9f4e6a46d73220596ce13b2108f80868a101805b", "filename": "compiler/rustc_typeck/src/coherence/builtin.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c4c698efb7d396d5821c0328366c709461c2fe9/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4c698efb7d396d5821c0328366c709461c2fe9/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Fbuiltin.rs?ref=8c4c698efb7d396d5821c0328366c709461c2fe9", "patch": "@@ -107,6 +107,10 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n \n             for (field, ty) in fields {\n                 let field_span = tcx.def_span(field.did);\n+                let field_ty_span = match tcx.hir().get_if_local(field.did) {\n+                    Some(hir::Node::Field(field_def)) => field_def.ty.span,\n+                    _ => field_span,\n+                };\n                 err.span_label(field_span, \"this field does not implement `Copy`\");\n                 // Spin up a new FulfillmentContext, so we can get the _precise_ reason\n                 // why this field does not implement Copy. This is useful because sometimes\n@@ -119,7 +123,7 @@ fn visit_implementation_of_copy(tcx: TyCtxt<'_>, impl_did: LocalDefId) {\n                         param_env,\n                         ty,\n                         tcx.lang_items().copy_trait().unwrap(),\n-                        traits::ObligationCause::dummy_with_span(field_span),\n+                        traits::ObligationCause::dummy_with_span(field_ty_span),\n                     );\n                     for error in fulfill_cx.select_all_or_error(&infcx) {\n                         let error_predicate = error.obligation.predicate;"}, {"sha": "faf730a5ce321bc9d3f338110bb5b2189a9deb3e", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl-3.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl-3.stderr?ref=8c4c698efb7d396d5821c0328366c709461c2fe9", "patch": "@@ -10,12 +10,12 @@ LL |     pub size: Vector2<K>\n    |     -------------------- this field does not implement `Copy`\n    |\n note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl-3.rs:12:5\n+  --> $DIR/missing-bound-in-derive-copy-impl-3.rs:12:14\n    |\n LL |     pub loc: Vector2<K>,\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^\n LL |     pub size: Vector2<K>\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider further restricting this bound\n    |"}, {"sha": "11bc540991775491632e98c875937dbdc4ff1f74", "filename": "src/test/ui/suggestions/missing-bound-in-derive-copy-impl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-bound-in-derive-copy-impl.stderr?ref=8c4c698efb7d396d5821c0328366c709461c2fe9", "patch": "@@ -10,12 +10,12 @@ LL |     pub size: Vector2<K>\n    |     -------------------- this field does not implement `Copy`\n    |\n note: the `Copy` impl for `Vector2<K>` requires that `K: Debug`\n-  --> $DIR/missing-bound-in-derive-copy-impl.rs:11:5\n+  --> $DIR/missing-bound-in-derive-copy-impl.rs:11:14\n    |\n LL |     pub loc: Vector2<K>,\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^\n LL |     pub size: Vector2<K>\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |               ^^^^^^^^^^\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: consider restricting type parameter `K`\n    |"}, {"sha": "8ecdafdde204553234cd9748e9d4e3a361aefa05", "filename": "src/test/ui/union/union-copy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4c698efb7d396d5821c0328366c709461c2fe9/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-copy.stderr?ref=8c4c698efb7d396d5821c0328366c709461c2fe9", "patch": "@@ -8,10 +8,10 @@ LL | impl Copy for W {}\n    |      ^^^^\n    |\n note: the `Copy` impl for `ManuallyDrop<String>` requires that `String: Copy`\n-  --> $DIR/union-copy.rs:8:5\n+  --> $DIR/union-copy.rs:8:8\n    |\n LL |     a: std::mem::ManuallyDrop<String>\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}]}