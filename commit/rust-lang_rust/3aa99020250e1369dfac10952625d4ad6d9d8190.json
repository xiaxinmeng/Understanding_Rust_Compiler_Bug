{"sha": "3aa99020250e1369dfac10952625d4ad6d9d8190", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYTk5MDIwMjUwZTEzNjlkZmFjMTA5NTI2MjVkNGFkNmQ5ZDgxOTA=", "commit": {"author": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-12-03T11:35:09Z"}, "committer": {"name": "Georg Semmler", "email": "georg_semmler_05@web.de", "date": "2019-12-03T11:35:09Z"}, "message": "Fix #66295", "tree": {"sha": "066c8db13aed3a81b361c3b7264278469d1b5e32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/066c8db13aed3a81b361c3b7264278469d1b5e32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3aa99020250e1369dfac10952625d4ad6d9d8190", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEt/EOFp+yWvA8Dk28qHvO5SBc5IkFAl3mSG0ACgkQqHvO5SBc\n5Impkwf/YQLOc4LO+P+G/KTTvFuabKB0Ud/IqJhLTslfFbwMySk6WqOt3ZOKwsg8\nduqBeDXB/QAShdfvgJ0vrC/6nIARkZyzBoBJbY69lFknQZNIpktiB/ouh2HW8zVK\nC16W34i4vNmZc9BfCcs4Nxions1m3+3WRwtj/tKS53v5jYEiCFb476MzECol8XWR\nUUbmjixO9oSUS+WM05+bnsErKfR8KUPKiuN8hKS96q47dhfEnjJ/c6AqoOdDBwI6\npKVS/GVt1Wxim24LjSKxMYWQ+bmWfbvxn1H3DVeP016NLWKuCKCmCpqEHk5P+lOo\nS+K58vQJGkPMKNvDjFuftA2RglCI/Q==\n=2PKw\n-----END PGP SIGNATURE-----", "payload": "tree 066c8db13aed3a81b361c3b7264278469d1b5e32\nparent 4787e97475de6be9487e3d9255a9c2d3c0bf9252\nauthor Georg Semmler <georg_semmler_05@web.de> 1575372909 +0100\ncommitter Georg Semmler <georg_semmler_05@web.de> 1575372909 +0100\n\nFix #66295\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3aa99020250e1369dfac10952625d4ad6d9d8190", "html_url": "https://github.com/rust-lang/rust/commit/3aa99020250e1369dfac10952625d4ad6d9d8190", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3aa99020250e1369dfac10952625d4ad6d9d8190/comments", "author": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weiznich", "id": 1674512, "node_id": "MDQ6VXNlcjE2NzQ1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1674512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weiznich", "html_url": "https://github.com/weiznich", "followers_url": "https://api.github.com/users/weiznich/followers", "following_url": "https://api.github.com/users/weiznich/following{/other_user}", "gists_url": "https://api.github.com/users/weiznich/gists{/gist_id}", "starred_url": "https://api.github.com/users/weiznich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weiznich/subscriptions", "organizations_url": "https://api.github.com/users/weiznich/orgs", "repos_url": "https://api.github.com/users/weiznich/repos", "events_url": "https://api.github.com/users/weiznich/events{/privacy}", "received_events_url": "https://api.github.com/users/weiznich/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4787e97475de6be9487e3d9255a9c2d3c0bf9252", "url": "https://api.github.com/repos/rust-lang/rust/commits/4787e97475de6be9487e3d9255a9c2d3c0bf9252", "html_url": "https://github.com/rust-lang/rust/commit/4787e97475de6be9487e3d9255a9c2d3c0bf9252"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "25c351f623488fe06e27e6e62b808c68e6c07330", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=3aa99020250e1369dfac10952625d4ad6d9d8190", "patch": "@@ -17,7 +17,7 @@ use syntax::print::pprust;\n use syntax::symbol::{kw, sym};\n use syntax::symbol::Symbol;\n use syntax::util::parser;\n-use syntax_pos::{Span, BytePos};\n+use syntax_pos::{MultiSpan, Span, BytePos};\n \n use log::debug;\n \n@@ -355,7 +355,11 @@ impl UnusedParens {\n         match value.kind {\n             ast::ExprKind::Paren(ref inner) => {\n                 if !Self::is_expr_parens_necessary(inner, followed_by_block) &&\n-                    value.attrs.is_empty() {\n+                    value.attrs.is_empty() &&\n+                    !MultiSpan::from(value.span).primary_span()\n+                        .map(|span| span.from_expansion())\n+                        .unwrap_or(false)\n+                {\n                     let expr_text = if let Ok(snippet) = cx.sess().source_map()\n                         .span_to_snippet(value.span) {\n                             snippet"}, {"sha": "12ffb6d3c66552526bfef134f7c42d8a0bb049a5", "filename": "src/test/ui/lint/lint-unnecessary-parens.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs?ref=3aa99020250e1369dfac10952625d4ad6d9d8190", "patch": "@@ -25,6 +25,12 @@ fn passes_unused_parens_lint() -> &'static (dyn Trait) {\n     panic!()\n }\n \n+macro_rules! baz {\n+    ($($foo:expr),+) => {\n+        ($($foo),*)\n+    }\n+}\n+\n fn main() {\n     foo();\n     bar((true)); //~ ERROR unnecessary parentheses around function argument\n@@ -55,4 +61,7 @@ fn main() {\n     let mut _a = (0); //~ ERROR unnecessary parentheses around assigned value\n     _a = (0); //~ ERROR unnecessary parentheses around assigned value\n     _a += (1); //~ ERROR unnecessary parentheses around assigned value\n+\n+    let _a = baz!(3, 4);\n+    let _b = baz!(3);\n }"}, {"sha": "541ae7aa4b54a0738a3595bb0250e7b95efd5892", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3aa99020250e1369dfac10952625d4ad6d9d8190/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=3aa99020250e1369dfac10952625d4ad6d9d8190", "patch": "@@ -23,69 +23,69 @@ LL | fn unused_parens_around_return_type() -> (u32) {\n    |                                          ^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around function argument\n-  --> $DIR/lint-unnecessary-parens.rs:30:9\n+  --> $DIR/lint-unnecessary-parens.rs:36:9\n    |\n LL |     bar((true));\n    |         ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `if` condition\n-  --> $DIR/lint-unnecessary-parens.rs:32:8\n+  --> $DIR/lint-unnecessary-parens.rs:38:8\n    |\n LL |     if (true) {}\n    |        ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `while` condition\n-  --> $DIR/lint-unnecessary-parens.rs:33:11\n+  --> $DIR/lint-unnecessary-parens.rs:39:11\n    |\n LL |     while (true) {}\n    |           ^^^^^^ help: remove these parentheses\n \n warning: denote infinite loops with `loop { ... }`\n-  --> $DIR/lint-unnecessary-parens.rs:33:5\n+  --> $DIR/lint-unnecessary-parens.rs:39:5\n    |\n LL |     while (true) {}\n    |     ^^^^^^^^^^^^ help: use `loop`\n    |\n    = note: `#[warn(while_true)]` on by default\n \n error: unnecessary parentheses around `match` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:35:11\n+  --> $DIR/lint-unnecessary-parens.rs:41:11\n    |\n LL |     match (true) {\n    |           ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `let` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:38:16\n+  --> $DIR/lint-unnecessary-parens.rs:44:16\n    |\n LL |     if let 1 = (1) {}\n    |                ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around `let` head expression\n-  --> $DIR/lint-unnecessary-parens.rs:39:19\n+  --> $DIR/lint-unnecessary-parens.rs:45:19\n    |\n LL |     while let 1 = (2) {}\n    |                   ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around method argument\n-  --> $DIR/lint-unnecessary-parens.rs:53:24\n+  --> $DIR/lint-unnecessary-parens.rs:59:24\n    |\n LL |     X { y: false }.foo((true));\n    |                        ^^^^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:55:18\n+  --> $DIR/lint-unnecessary-parens.rs:61:18\n    |\n LL |     let mut _a = (0);\n    |                  ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:56:10\n+  --> $DIR/lint-unnecessary-parens.rs:62:10\n    |\n LL |     _a = (0);\n    |          ^^^ help: remove these parentheses\n \n error: unnecessary parentheses around assigned value\n-  --> $DIR/lint-unnecessary-parens.rs:57:11\n+  --> $DIR/lint-unnecessary-parens.rs:63:11\n    |\n LL |     _a += (1);\n    |           ^^^ help: remove these parentheses"}]}