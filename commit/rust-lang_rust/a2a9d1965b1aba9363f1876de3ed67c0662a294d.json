{"sha": "a2a9d1965b1aba9363f1876de3ed67c0662a294d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYTlkMTk2NWIxYWJhOTM2M2YxODc2ZGUzZWQ2N2MwNjYyYTI5NGQ=", "commit": {"author": {"name": "mandeep", "email": "mandeep@users.noreply.github.com", "date": "2017-04-28T18:16:49Z"}, "committer": {"name": "mandeep", "email": "mandeep@users.noreply.github.com", "date": "2017-05-11T16:24:20Z"}, "message": "Added generic example of std::ops::Add in doc comments\n\nAdded blank lines around example\n\nAdded comment to Add example referencing the Output type\n\nRemoved whitespace from lines 272 and 273\n\nRemoved Debug derivation from Add examples\n\nAdded Debug derivation", "tree": {"sha": "26fdcda9033cd0a892954d307c3602db837c9cc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26fdcda9033cd0a892954d307c3602db837c9cc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2a9d1965b1aba9363f1876de3ed67c0662a294d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a9d1965b1aba9363f1876de3ed67c0662a294d", "html_url": "https://github.com/rust-lang/rust/commit/a2a9d1965b1aba9363f1876de3ed67c0662a294d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2a9d1965b1aba9363f1876de3ed67c0662a294d/comments", "author": {"login": "mandeep", "id": 10521687, "node_id": "MDQ6VXNlcjEwNTIxNjg3", "avatar_url": "https://avatars.githubusercontent.com/u/10521687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandeep", "html_url": "https://github.com/mandeep", "followers_url": "https://api.github.com/users/mandeep/followers", "following_url": "https://api.github.com/users/mandeep/following{/other_user}", "gists_url": "https://api.github.com/users/mandeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandeep/subscriptions", "organizations_url": "https://api.github.com/users/mandeep/orgs", "repos_url": "https://api.github.com/users/mandeep/repos", "events_url": "https://api.github.com/users/mandeep/events{/privacy}", "received_events_url": "https://api.github.com/users/mandeep/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mandeep", "id": 10521687, "node_id": "MDQ6VXNlcjEwNTIxNjg3", "avatar_url": "https://avatars.githubusercontent.com/u/10521687?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mandeep", "html_url": "https://github.com/mandeep", "followers_url": "https://api.github.com/users/mandeep/followers", "following_url": "https://api.github.com/users/mandeep/following{/other_user}", "gists_url": "https://api.github.com/users/mandeep/gists{/gist_id}", "starred_url": "https://api.github.com/users/mandeep/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mandeep/subscriptions", "organizations_url": "https://api.github.com/users/mandeep/orgs", "repos_url": "https://api.github.com/users/mandeep/repos", "events_url": "https://api.github.com/users/mandeep/events{/privacy}", "received_events_url": "https://api.github.com/users/mandeep/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70baf4f13ec70cb17942704849b0f3c047ad347b", "url": "https://api.github.com/repos/rust-lang/rust/commits/70baf4f13ec70cb17942704849b0f3c047ad347b", "html_url": "https://github.com/rust-lang/rust/commit/70baf4f13ec70cb17942704849b0f3c047ad347b"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "03cfdf5378301451d9b778d780b80f6f621bb2ea", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/a2a9d1965b1aba9363f1876de3ed67c0662a294d/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a9d1965b1aba9363f1876de3ed67c0662a294d/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=a2a9d1965b1aba9363f1876de3ed67c0662a294d", "patch": "@@ -235,6 +235,42 @@ pub trait Drop {\n /// }\n /// ```\n ///\n+/// Here is an example of the same `Point` struct implementing the `Add` trait\n+/// using generics.\n+///\n+/// ```\n+/// use std::ops::Add;\n+///\n+/// #[derive(Debug)]\n+/// struct Point<T> {\n+///     x: T,\n+///     y: T,\n+/// }\n+///\n+/// // Notice that the implementation uses the `Output` associated type\n+/// impl<T: Add<Output=T>> Add for Point<T> {\n+///     type Output = Point<T>;\n+///\n+///     fn add(self, other: Point<T>) -> Point<T> {\n+///         Point {\n+///             x: self.x + other.x,\n+///             y: self.y + other.y,\n+///         }\n+///     }\n+/// }\n+///\n+/// impl<T: PartialEq> PartialEq for Point<T> {\n+///     fn eq(&self, other: &Self) -> bool {\n+///         self.x == other.x && self.y == other.y\n+///     }\n+/// }\n+///\n+/// fn main() {\n+///     assert_eq!(Point { x: 1, y: 0 } + Point { x: 2, y: 3 },\n+///                Point { x: 3, y: 3 });\n+/// }\n+/// ```\n+///\n /// Note that `RHS = Self` by default, but this is not mandatory. For example,\n /// [std::time::SystemTime] implements `Add<Duration>`, which permits\n /// operations of the form `SystemTime = SystemTime + Duration`."}]}