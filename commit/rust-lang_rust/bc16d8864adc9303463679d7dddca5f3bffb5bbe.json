{"sha": "bc16d8864adc9303463679d7dddca5f3bffb5bbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjMTZkODg2NGFkYzkzMDM0NjM2NzlkN2RkZGNhNWYzYmZmYjViYmU=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-06-30T06:53:28Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-06-30T06:53:28Z"}, "message": "Fix compile error from breaking changes in libsyntax", "tree": {"sha": "2f43fdb863ccde139feedbce8ceb693495a837b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f43fdb863ccde139feedbce8ceb693495a837b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc16d8864adc9303463679d7dddca5f3bffb5bbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc16d8864adc9303463679d7dddca5f3bffb5bbe", "html_url": "https://github.com/rust-lang/rust/commit/bc16d8864adc9303463679d7dddca5f3bffb5bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc16d8864adc9303463679d7dddca5f3bffb5bbe/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb1819d71ebc8c7b740e5260b3206f326cae5feb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb1819d71ebc8c7b740e5260b3206f326cae5feb", "html_url": "https://github.com/rust-lang/rust/commit/eb1819d71ebc8c7b740e5260b3206f326cae5feb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "85b9b84b6b2b4213d31259429ab4344294d5bb99", "filename": "src/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc16d8864adc9303463679d7dddca5f3bffb5bbe/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc16d8864adc9303463679d7dddca5f3bffb5bbe/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=bc16d8864adc9303463679d7dddca5f3bffb5bbe", "patch": "@@ -99,7 +99,7 @@ impl Rewrite for Pat {\n                 }\n             }\n             PatKind::Range(ref lhs, ref rhs, ref end_kind) => {\n-                let infix = match *end_kind {\n+                let infix = match end_kind.node {\n                     RangeEnd::Included(RangeSyntax::DotDotDot) => \"...\",\n                     RangeEnd::Included(RangeSyntax::DotDotEq) => \"..=\",\n                     RangeEnd::Excluded => \"..\","}]}