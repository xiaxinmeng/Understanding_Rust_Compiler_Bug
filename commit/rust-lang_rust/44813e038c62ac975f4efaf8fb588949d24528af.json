{"sha": "44813e038c62ac975f4efaf8fb588949d24528af", "node_id": "C_kwDOAAsO6NoAKDQ0ODEzZTAzOGM2MmFjOTc1ZjRlZmFmOGZiNTg4OTQ5ZDI0NTI4YWY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-07T18:21:12Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-03-07T18:37:04Z"}, "message": "rustdoc: fix type search when more than one `where` clause applies", "tree": {"sha": "731356c11b1a7195166970df184fb29548bec65c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/731356c11b1a7195166970df184fb29548bec65c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44813e038c62ac975f4efaf8fb588949d24528af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44813e038c62ac975f4efaf8fb588949d24528af", "html_url": "https://github.com/rust-lang/rust/commit/44813e038c62ac975f4efaf8fb588949d24528af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44813e038c62ac975f4efaf8fb588949d24528af/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6446c53fe8be6692b07e121b831c3db770ff94a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6446c53fe8be6692b07e121b831c3db770ff94a", "html_url": "https://github.com/rust-lang/rust/commit/a6446c53fe8be6692b07e121b831c3db770ff94a"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "84213182d0ac1c64492ed14ffc67a845e4099c6d", "filename": "src/librustdoc/html/render/search_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44813e038c62ac975f4efaf8fb588949d24528af/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44813e038c62ac975f4efaf8fb588949d24528af/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs?ref=44813e038c62ac975f4efaf8fb588949d24528af", "patch": "@@ -484,7 +484,7 @@ fn add_generics_and_bounds_as_types<'tcx, 'a>(\n     // for its bounds.\n     if let Type::Generic(arg_s) = *arg {\n         // First we check if the bounds are in a `where` predicate...\n-        if let Some(where_pred) = generics.where_predicates.iter().find(|g| match g {\n+        for where_pred in generics.where_predicates.iter().filter(|g| match g {\n             WherePredicate::BoundPredicate { ty: Type::Generic(ty_s), .. } => *ty_s == arg_s,\n             _ => false,\n         }) {"}, {"sha": "6bf421a21356072eda42297d227e7de6bf7492f8", "filename": "tests/rustdoc-js-std/option-type-signatures.js", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js-std%2Foption-type-signatures.js", "raw_url": "https://github.com/rust-lang/rust/raw/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js-std%2Foption-type-signatures.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-js-std%2Foption-type-signatures.js?ref=44813e038c62ac975f4efaf8fb588949d24528af", "patch": "@@ -1,7 +1,18 @@\n-const QUERY = 'option, fnonce -> option';\n+const QUERY = [\n+    'option, fnonce -> option',\n+    'option -> default',\n+];\n \n-const EXPECTED = {\n-    'others': [\n-        { 'path': 'std::option::Option', 'name': 'map' },\n-    ],\n-};\n+const EXPECTED = [\n+    {\n+        'others': [\n+            { 'path': 'std::option::Option', 'name': 'map' },\n+        ],\n+    },\n+    {\n+        'others': [\n+            { 'path': 'std::option::Option', 'name': 'unwrap_or_default' },\n+            { 'path': 'std::option::Option', 'name': 'get_or_insert_default' },\n+        ],\n+    },\n+];"}, {"sha": "86254a80e20f3623ac14e93bbba366cc4342bbde", "filename": "tests/rustdoc-js/where-clause.js", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js%2Fwhere-clause.js", "raw_url": "https://github.com/rust-lang/rust/raw/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js%2Fwhere-clause.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-js%2Fwhere-clause.js?ref=44813e038c62ac975f4efaf8fb588949d24528af", "patch": "@@ -1,4 +1,4 @@\n-const QUERY = ['trait<nested>', '-> trait<nested>', 't1, t2', '-> shazam'];\n+const QUERY = ['trait<nested>', '-> trait<nested>', 't1, t2', '-> shazam', 'drizzel -> shazam'];\n \n const EXPECTED = [\n     {\n@@ -19,6 +19,12 @@ const EXPECTED = [\n     {\n         'others': [\n             { 'path': 'where_clause', 'name': 'bippety' },\n+            { 'path': 'where_clause::Drizzel', 'name': 'boppety' },\n+        ],\n+    },\n+    {\n+        'others': [\n+            { 'path': 'where_clause::Drizzel', 'name': 'boppety' },\n         ],\n     },\n ];"}, {"sha": "56c01019fb69fb70fbcb2ff8b1483508da01094c", "filename": "tests/rustdoc-js/where-clause.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js%2Fwhere-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44813e038c62ac975f4efaf8fb588949d24528af/tests%2Frustdoc-js%2Fwhere-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-js%2Fwhere-clause.rs?ref=44813e038c62ac975f4efaf8fb588949d24528af", "patch": "@@ -20,3 +20,11 @@ pub trait Shazam {}\n pub fn bippety<X>() -> &'static X where X: Shazam {\n     panic!()\n }\n+\n+pub struct Drizzel<T>(T);\n+\n+impl<T> Drizzel<T> {\n+    pub fn boppety(&self) -> &T where T: Shazam {\n+        panic!();\n+    }\n+}"}]}