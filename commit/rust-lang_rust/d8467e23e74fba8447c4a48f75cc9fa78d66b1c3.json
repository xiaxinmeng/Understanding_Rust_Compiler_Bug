{"sha": "d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4NDY3ZTIzZTc0ZmJhODQ0N2M0YTQ4Zjc1Y2M5ZmE3OGQ2NmIxYzM=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-05-20T05:28:09Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-05-23T06:01:47Z"}, "message": "rustc: abstract lint level exporting from EnumSizeVariance", "tree": {"sha": "14839dde437b5ddeae10594bfa717a2a2d3174bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14839dde437b5ddeae10594bfa717a2a2d3174bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "html_url": "https://github.com/rust-lang/rust/commit/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c327080ee04e641a34f30ae71b713a91106680b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c327080ee04e641a34f30ae71b713a91106680b1", "html_url": "https://github.com/rust-lang/rust/commit/c327080ee04e641a34f30ae71b713a91106680b1"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "e577102c4fe3e8e34611cc744ae688c13a5ac85e", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "patch": "@@ -72,7 +72,7 @@ use syntax::parse::token;\n use syntax::visit::Visitor;\n use syntax::{ast, ast_util, visit};\n \n-#[deriving(Clone, Show, Eq, Ord, TotalEq, TotalOrd)]\n+#[deriving(Clone, Show, Eq, Ord, TotalEq, TotalOrd, Hash)]\n pub enum Lint {\n     CTypes,\n     UnusedImports,\n@@ -471,9 +471,9 @@ struct Context<'a> {\n     /// Ids of structs/enums which have been checked for raw_pointer_deriving\n     checked_raw_pointers: NodeSet,\n \n-    /// Level of EnumSizeVariance lint for each enum, stored here because the\n-    /// body of the lint needs to run in trans.\n-    enum_levels: HashMap<ast::NodeId, (Level, LintSource)>,\n+    /// Level of lints for certain NodeIds, stored here because the body of\n+    /// the lint needs to run in trans.\n+    node_levels: HashMap<(ast::NodeId, Lint), (Level, LintSource)>,\n }\n \n pub fn emit_lint(level: Level, src: LintSource, msg: &str, span: Span,\n@@ -1921,7 +1921,7 @@ pub fn check_crate(tcx: &ty::ctxt,\n         lint_stack: Vec::new(),\n         negated_expr_id: -1,\n         checked_raw_pointers: NodeSet::new(),\n-        enum_levels: HashMap::new(),\n+        node_levels: HashMap::new(),\n     };\n \n     // Install default lint levels, followed by the command line levels, and\n@@ -1963,5 +1963,5 @@ pub fn check_crate(tcx: &ty::ctxt,\n     }\n \n     tcx.sess.abort_if_errors();\n-    *tcx.enum_lint_levels.borrow_mut() = cx.enum_levels;\n+    *tcx.node_lint_levels.borrow_mut() = cx.node_levels;\n }"}, {"sha": "3a7a94cdbcede54c002e6b6595d926d1a4a416bc", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8467e23e74fba8447c4a48f75cc9fa78d66b1c3/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=d8467e23e74fba8447c4a48f75cc9fa78d66b1c3", "patch": "@@ -354,7 +354,8 @@ pub struct ctxt {\n \n     pub dependency_formats: RefCell<dependency_format::Dependencies>,\n \n-    pub enum_lint_levels: RefCell<HashMap<ast::NodeId, (lint::Level, lint::LintSource)>>,\n+    pub node_lint_levels: RefCell<HashMap<(ast::NodeId, lint::Lint),\n+                                          (lint::Level, lint::LintSource)>>,\n }\n \n pub enum tbox_flag {\n@@ -1137,7 +1138,7 @@ pub fn mk_ctxt(s: Session,\n         method_map: RefCell::new(FnvHashMap::new()),\n         vtable_map: RefCell::new(FnvHashMap::new()),\n         dependency_formats: RefCell::new(HashMap::new()),\n-        enum_lint_levels: RefCell::new(HashMap::new()),\n+        node_lint_levels: RefCell::new(HashMap::new()),\n     }\n }\n "}]}