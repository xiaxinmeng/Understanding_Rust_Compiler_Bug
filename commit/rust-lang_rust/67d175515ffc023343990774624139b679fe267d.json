{"sha": "67d175515ffc023343990774624139b679fe267d", "node_id": "C_kwDOAAsO6NoAKDY3ZDE3NTUxNWZmYzAyMzM0Mzk5MDc3NDYyNDEzOWI2NzlmZTI2N2Q", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-28T16:11:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-28T16:11:11Z"}, "message": "Rollup merge of #91308 - BGR360:issue-88586, r=jackh726\n\nFix ICE when lowering `trait A where for<'a> Self: 'a`\n\nFixes #88586.\n\nr? `@jackh726`\n\nJack, this fix is much smaller in scope than what I think you were proposing in the issue. Let me know if you had a vision for a larger refactor here.\n\ncc `@JohnTitor`", "tree": {"sha": "fd793f1223c363def2f0de255bcf4724d4eb3967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd793f1223c363def2f0de255bcf4724d4eb3967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67d175515ffc023343990774624139b679fe267d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJho6ogCRBK7hj4Ov3rIwAAvioIAFYjcbsA8b2EqewEPGbD9d+K\nUNIucaYkXSUaYawwolyORDOP2idiVIFwehm0tUlCZQeX5n6J3xIzT6ARpQ8ZdNKc\nFqMc9m2XNXyWC6Y0rZNwjRXjoe/FVSqwEuwEYtHSbI7GDprOiabJrgmGxmWhT5Ui\nVUcvL2k4gwTMZ/JYJZlGdMXQmfyV0vBrgNdgjMW+Yiy5u9ebN61rBQwoeNZua9i3\nYHR5n3+8odOeWyjCl9J4/QqvO6WeXlbFaq2d3r7FNJKpyMf2oMc2bbvYjlIkohKe\nmlJOz4sOyVi2DRSe1tamEbNKeUCAqs4HXcDe4yB1ZD7HqU2r3FRwbCggopODszQ=\n=7W9c\n-----END PGP SIGNATURE-----\n", "payload": "tree fd793f1223c363def2f0de255bcf4724d4eb3967\nparent 233c50e79e6821a278ef0a1aa7f2ca55842aad84\nparent 6df2c78e1c35e5dac6589f55db1e0bea6e443700\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638115871 +0100\ncommitter GitHub <noreply@github.com> 1638115871 +0100\n\nRollup merge of #91308 - BGR360:issue-88586, r=jackh726\n\nFix ICE when lowering `trait A where for<'a> Self: 'a`\n\nFixes #88586.\n\nr? `@jackh726`\n\nJack, this fix is much smaller in scope than what I think you were proposing in the issue. Let me know if you had a vision for a larger refactor here.\n\ncc `@JohnTitor`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67d175515ffc023343990774624139b679fe267d", "html_url": "https://github.com/rust-lang/rust/commit/67d175515ffc023343990774624139b679fe267d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67d175515ffc023343990774624139b679fe267d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "233c50e79e6821a278ef0a1aa7f2ca55842aad84", "url": "https://api.github.com/repos/rust-lang/rust/commits/233c50e79e6821a278ef0a1aa7f2ca55842aad84", "html_url": "https://github.com/rust-lang/rust/commit/233c50e79e6821a278ef0a1aa7f2ca55842aad84"}, {"sha": "6df2c78e1c35e5dac6589f55db1e0bea6e443700", "url": "https://api.github.com/repos/rust-lang/rust/commits/6df2c78e1c35e5dac6589f55db1e0bea6e443700", "html_url": "https://github.com/rust-lang/rust/commit/6df2c78e1c35e5dac6589f55db1e0bea6e443700"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "39fac12e297431f06fe24dd3f1aaad3e5a2e32df", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/67d175515ffc023343990774624139b679fe267d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67d175515ffc023343990774624139b679fe267d/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=67d175515ffc023343990774624139b679fe267d", "patch": "@@ -666,7 +666,7 @@ impl ItemCtxt<'tcx> {\n                 Some(assoc_name) => self.bound_defines_assoc_item(b, assoc_name),\n                 None => true,\n             })\n-            .flat_map(|b| predicates_from_bound(self, ty, b));\n+            .flat_map(|b| predicates_from_bound(self, ty, b, ty::List::empty()));\n \n         let param_def_id = self.tcx.hir().local_def_id(param_id).to_def_id();\n         let from_where_clauses = ast_generics\n@@ -685,15 +685,17 @@ impl ItemCtxt<'tcx> {\n                 } else {\n                     None\n                 };\n+                let bvars = self.tcx.late_bound_vars(bp.bounded_ty.hir_id);\n+\n                 bp.bounds\n                     .iter()\n                     .filter(|b| match assoc_name {\n                         Some(assoc_name) => self.bound_defines_assoc_item(b, assoc_name),\n                         None => true,\n                     })\n-                    .filter_map(move |b| bt.map(|bt| (bt, b)))\n+                    .filter_map(move |b| bt.map(|bt| (bt, b, bvars)))\n             })\n-            .flat_map(|(bt, b)| predicates_from_bound(self, bt, b));\n+            .flat_map(|(bt, b, bvars)| predicates_from_bound(self, bt, b, bvars));\n \n         from_ty_params.chain(from_where_clauses).collect()\n     }\n@@ -2433,14 +2435,10 @@ fn predicates_from_bound<'tcx>(\n     astconv: &dyn AstConv<'tcx>,\n     param_ty: Ty<'tcx>,\n     bound: &'tcx hir::GenericBound<'tcx>,\n+    bound_vars: &'tcx ty::List<ty::BoundVariableKind>,\n ) -> Vec<(ty::Predicate<'tcx>, Span)> {\n     let mut bounds = Bounds::default();\n-    astconv.add_bounds(\n-        param_ty,\n-        std::array::IntoIter::new([bound]),\n-        &mut bounds,\n-        ty::List::empty(),\n-    );\n+    astconv.add_bounds(param_ty, [bound].into_iter(), &mut bounds, bound_vars);\n     bounds.predicates(astconv.tcx(), param_ty)\n }\n "}, {"sha": "b50f56b03d9cd0ecd89fb439617d6ceff6d58987", "filename": "src/test/ui/higher-rank-trait-bounds/issue-88586-hr-self-outlives-in-trait-def.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/67d175515ffc023343990774624139b679fe267d/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67d175515ffc023343990774624139b679fe267d/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.rs?ref=67d175515ffc023343990774624139b679fe267d", "patch": "@@ -0,0 +1,11 @@\n+// Regression test for #88586: a higher-ranked outlives bound on Self in a trait\n+// definition caused an ICE when debug_assertions were enabled.\n+//\n+// FIXME: The error output in the absence of the ICE is unhelpful; this should be improved.\n+\n+trait A where for<'a> Self: 'a\n+//~^ ERROR the parameter type `Self` may not live long enough\n+{\n+}\n+\n+fn main() {}"}, {"sha": "18618ffcc86dc84098cab2debd2ad05d604dc2ce", "filename": "src/test/ui/higher-rank-trait-bounds/issue-88586-hr-self-outlives-in-trait-def.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/67d175515ffc023343990774624139b679fe267d/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67d175515ffc023343990774624139b679fe267d/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fissue-88586-hr-self-outlives-in-trait-def.stderr?ref=67d175515ffc023343990774624139b679fe267d", "patch": "@@ -0,0 +1,19 @@\n+error[E0311]: the parameter type `Self` may not live long enough\n+  --> $DIR/issue-88586-hr-self-outlives-in-trait-def.rs:6:1\n+   |\n+LL | / trait A where for<'a> Self: 'a\n+LL | |\n+LL | | {\n+LL | | }\n+   | |_^\n+   |\n+   = help: consider adding an explicit lifetime bound `Self: 'a`...\n+   = note: ...so that the type `Self` will meet its required lifetime bounds...\n+note: ...that is required by this bound\n+  --> $DIR/issue-88586-hr-self-outlives-in-trait-def.rs:6:29\n+   |\n+LL | trait A where for<'a> Self: 'a\n+   |                             ^^\n+\n+error: aborting due to previous error\n+"}]}