{"sha": "c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "node_id": "C_kwDOAAsO6NoAKGM3YjMxZDBhYzk4M2ZkZjc2OTNhMDAyOWZkYjBlMTYyNDdjNjU5OWQ", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-07-15T17:22:36Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2022-07-15T22:47:14Z"}, "message": "Correctly handle path stability for 'use tree' items\n\nPR #5956 started checking the stability of path segments.\nHowever, this was not applied to 'use tree' items\n(e.g. 'use some::path::{ItemOne, ItemTwo}') due to the way\nthat we desugar these items in HIR lowering.\n\nThis PR modifies 'use tree' lowering to preserve resolution\ninformation, which is needed by stability checking.", "tree": {"sha": "8ee17584e23a0a5cd6eecf58994a30b61c29817b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ee17584e23a0a5cd6eecf58994a30b61c29817b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmLR7nMACgkQtAh+UQ6Y\nsWRlqw//VzaHp0oLd9QVJD6Ckd+Tg4dTSAvd6aEQY1VHbLqJktummIrD7kMoit4A\nfClO5BnELQG+N7S+MUX53AAOUGrJ8d2jijkw5+aIsK9nQakxyVWtnGg1jvXnJFO0\n/HU/wyZfcDirNl8jnGt/T4sWXQAL1eQeTt7wrA4hby3V4oShzwtVt9J5kYaGxRZP\nb7JKgN4sjKn2Fdo1/OsyCxJf23BeD9gOtZXInGgsJqxBl9MmAP0A7pVTz2rlEdJ5\ny6RdWj4Rx88npmDmj6NzRNLcGM7Ct1n7rv76h5/cr67zPvtH18RFyJ4t/IbH0vuF\nxUOXJ16EloiIcYtzdRll82VCBNXh2H9PNEjdFdU0m9lKEdP8weMQpTp2uTIyo70k\nt6gY4cMS0zEmVzO0Y7wcI6ymG3csP3MBHD3GIVaodJ5NB41EKw8HndINJkr6Crin\n4KEROzQ+q2XRVyIn37WrEQ3yDCt5b0wmpdEtHEApxwnsASL2TxCr9YeXg5XFNvCN\nBF10C/SnYmguS6AF2Khai951L371eD97oFsVVXhbBkAIfwZ4BkfcCw6Mzw335OFr\n2Dz96VHWs65Ic3diaHaSTA6yXigVILyWGcUau62Wz0JPqmFMdgo/fJtHncI5J+as\n4JVtaIJHm9XyI3TtcTgbTEhYh9WS2Ycieb0L62ECvDw0gEJYgrg=\n=cjEH\n-----END PGP SIGNATURE-----", "payload": "tree 8ee17584e23a0a5cd6eecf58994a30b61c29817b\nparent 116819f54f062a2f425deac4ec29245038c26613\nauthor Aaron Hill <aa1ronham@gmail.com> 1657905756 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1657925234 -0500\n\nCorrectly handle path stability for 'use tree' items\n\nPR #5956 started checking the stability of path segments.\nHowever, this was not applied to 'use tree' items\n(e.g. 'use some::path::{ItemOne, ItemTwo}') due to the way\nthat we desugar these items in HIR lowering.\n\nThis PR modifies 'use tree' lowering to preserve resolution\ninformation, which is needed by stability checking.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "html_url": "https://github.com/rust-lang/rust/commit/c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "116819f54f062a2f425deac4ec29245038c26613", "url": "https://api.github.com/repos/rust-lang/rust/commits/116819f54f062a2f425deac4ec29245038c26613", "html_url": "https://github.com/rust-lang/rust/commit/116819f54f062a2f425deac4ec29245038c26613"}], "stats": {"total": 63, "additions": 58, "deletions": 5}, "files": [{"sha": "e176364c494ea52ca095726d7ef46ac0a69257df", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -533,7 +533,11 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                     let ident = *ident;\n                     let mut path = path.clone();\n                     for seg in &mut path.segments {\n-                        seg.id = self.next_node_id();\n+                        // Give the cloned segment the same resolution information\n+                        // as the old one (this is needed for stability checking).\n+                        let new_id = self.next_node_id();\n+                        self.resolver.clone_res(seg.id, new_id);\n+                        seg.id = new_id;\n                     }\n                     let span = path.span;\n \n@@ -602,7 +606,11 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n                     // Give the segments new node-ids since they are being cloned.\n                     for seg in &mut prefix.segments {\n-                        seg.id = self.next_node_id();\n+                        // Give the cloned segment the same resolution information\n+                        // as the old one (this is needed for stability checking).\n+                        let new_id = self.next_node_id();\n+                        self.resolver.clone_res(seg.id, new_id);\n+                        seg.id = new_id;\n                     }\n \n                     // Each `use` import is an item and thus are owners of the"}, {"sha": "ad6b857e94d43692e89f8aed25f94c25d6b3b91a", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -155,6 +155,10 @@ trait ResolverAstLoweringExt {\n     fn legacy_const_generic_args(&self, expr: &Expr) -> Option<Vec<usize>>;\n     fn get_partial_res(&self, id: NodeId) -> Option<PartialRes>;\n     fn get_import_res(&self, id: NodeId) -> PerNS<Option<Res<NodeId>>>;\n+    // Clones the resolution (if any) on 'source' and applies it\n+    // to 'target'. Used when desugaring a `UseTreeKind::Nested` to\n+    // multiple `UseTreeKind::Simple`s\n+    fn clone_res(&mut self, source: NodeId, target: NodeId);\n     fn get_label_res(&self, id: NodeId) -> Option<NodeId>;\n     fn get_lifetime_res(&self, id: NodeId) -> Option<LifetimeRes>;\n     fn take_extra_lifetime_params(&mut self, id: NodeId) -> Vec<(Ident, NodeId, LifetimeRes)>;\n@@ -192,6 +196,12 @@ impl ResolverAstLoweringExt for ResolverAstLowering {\n         None\n     }\n \n+    fn clone_res(&mut self, source: NodeId, target: NodeId) {\n+        if let Some(res) = self.partial_res_map.get(&source) {\n+            self.partial_res_map.insert(target, *res);\n+        }\n+    }\n+\n     /// Obtains resolution for a `NodeId` with a single resolution.\n     fn get_partial_res(&self, id: NodeId) -> Option<PartialRes> {\n         self.partial_res_map.get(&id).copied()"}, {"sha": "67e8ec8f13b4f7d58de0798b65fc2932e0619498", "filename": "src/test/ui/lint/lint-output-format.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Flint%2Flint-output-format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Flint%2Flint-output-format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-output-format.rs?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -5,6 +5,7 @@\n \n extern crate lint_output_format; //~ ERROR use of unstable library feature\n use lint_output_format::{foo, bar}; //~ ERROR use of unstable library feature\n+//~| ERROR use of unstable library feature\n \n fn main() {\n     let _x = foo();"}, {"sha": "0db79a1564fa2225dac30a98b8e18c2cc2f05791", "filename": "src/test/ui/lint/lint-output-format.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -6,6 +6,14 @@ LL | extern crate lint_output_format;\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n+error[E0658]: use of unstable library feature 'unstable_test_feature'\n+  --> $DIR/lint-output-format.rs:7:26\n+   |\n+LL | use lint_output_format::{foo, bar};\n+   |                          ^^^\n+   |\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n+\n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-output-format.rs:7:31\n    |\n@@ -15,13 +23,13 @@ LL | use lint_output_format::{foo, bar};\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n-  --> $DIR/lint-output-format.rs:11:14\n+  --> $DIR/lint-output-format.rs:12:14\n    |\n LL |     let _y = bar();\n    |              ^^^\n    |\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "226367c399299a695ea04d93d72ecdfa811e5a01", "filename": "src/test/ui/stability-attribute/stable-in-unstable.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.rs?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -44,3 +44,11 @@ mod isolated5 {\n \n     impl stable_in_unstable_std::old_stable_module::OldTrait for LocalType {}\n }\n+\n+mod isolated6 {\n+    use stable_in_unstable_core::new_unstable_module::{OldTrait}; //~ ERROR use of unstable library feature 'unstable_test_feature'\n+}\n+\n+mod isolated7 {\n+    use stable_in_unstable_core::new_unstable_module::*; //~ ERROR use of unstable library feature 'unstable_test_feature'\n+}"}, {"sha": "b5e3e5f1202c14b9d761161eb86c92d25de68489", "filename": "src/test/ui/stability-attribute/stable-in-unstable.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c7b31d0ac983fdf7693a0029fdb0e16247c6599d/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstable-in-unstable.stderr?ref=c7b31d0ac983fdf7693a0029fdb0e16247c6599d", "patch": "@@ -34,6 +34,24 @@ LL |     impl stable_in_unstable_core::new_unstable_module::OldTrait for LocalTy\n    = note: see issue #1 <https://github.com/rust-lang/rust/issues/1> for more information\n    = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n-error: aborting due to 4 previous errors\n+error[E0658]: use of unstable library feature 'unstable_test_feature'\n+  --> $DIR/stable-in-unstable.rs:49:56\n+   |\n+LL |     use stable_in_unstable_core::new_unstable_module::{OldTrait};\n+   |                                                        ^^^^^^^^\n+   |\n+   = note: see issue #1 <https://github.com/rust-lang/rust/issues/1> for more information\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n+\n+error[E0658]: use of unstable library feature 'unstable_test_feature'\n+  --> $DIR/stable-in-unstable.rs:53:9\n+   |\n+LL |     use stable_in_unstable_core::new_unstable_module::*;\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #1 <https://github.com/rust-lang/rust/issues/1> for more information\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}