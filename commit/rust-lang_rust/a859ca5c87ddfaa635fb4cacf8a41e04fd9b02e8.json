{"sha": "a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NTljYTVjODdkZGZhYTYzNWZiNGNhY2Y4YTQxZTA0ZmQ5YjAyZTg=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-12-13T13:51:37Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-19T19:23:07Z"}, "message": "Fix `binary_heap::DrainSorted` drop leak on panics", "tree": {"sha": "6f8e33d410f21eec6fafc586b6775af1c4fd0bc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f8e33d410f21eec6fafc586b6775af1c4fd0bc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "html_url": "https://github.com/rust-lang/rust/commit/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e02ad724f05f73b957b3d6f6314a9a2e5c284e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e02ad724f05f73b957b3d6f6314a9a2e5c284e", "html_url": "https://github.com/rust-lang/rust/commit/c0e02ad724f05f73b957b3d6f6314a9a2e5c284e"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "f38fe997b732c8effae96bbbd60722cc9673369e", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "patch": "@@ -147,7 +147,7 @@\n \n use core::fmt;\n use core::iter::{FromIterator, FusedIterator, TrustedLen};\n-use core::mem::{size_of, swap, ManuallyDrop};\n+use core::mem::{self, size_of, swap, ManuallyDrop};\n use core::ops::{Deref, DerefMut};\n use core::ptr;\n \n@@ -1239,7 +1239,19 @@ pub struct DrainSorted<'a, T: Ord> {\n impl<'a, T: Ord> Drop for DrainSorted<'a, T> {\n     /// Removes heap elements in heap order.\n     fn drop(&mut self) {\n-        while let Some(_) = self.inner.pop() {}\n+        struct DropGuard<'r, 'a, T: Ord>(&'r mut DrainSorted<'a, T>);\n+\n+        impl<'r, 'a, T: Ord> Drop for DropGuard<'r, 'a, T> {\n+            fn drop(&mut self) {\n+                while let Some(_) = self.0.inner.pop() {}\n+            }\n+        }\n+\n+        while let Some(item) = self.inner.pop() {\n+            let guard = DropGuard(self);\n+            drop(item);\n+            mem::forget(guard);\n+        }\n     }\n }\n "}, {"sha": "be5516f54f37b75a519084609b90dd6eed9343a9", "filename": "src/liballoc/tests/binary_heap.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbinary_heap.rs?ref=a859ca5c87ddfaa635fb4cacf8a41e04fd9b02e8", "patch": "@@ -1,6 +1,8 @@\n use std::collections::binary_heap::{Drain, PeekMut};\n use std::collections::BinaryHeap;\n use std::iter::TrustedLen;\n+use std::panic::{catch_unwind, AssertUnwindSafe};\n+use std::sync::atomic::{AtomicU32, Ordering};\n \n #[test]\n fn test_iterator() {\n@@ -275,6 +277,37 @@ fn test_drain_sorted() {\n     assert!(q.is_empty());\n }\n \n+#[test]\n+fn test_drain_sorted_leak() {\n+    static DROPS: AtomicU32 = AtomicU32::new(0);\n+\n+    #[derive(Clone, PartialEq, Eq, PartialOrd, Ord)]\n+    struct D(u32, bool);\n+\n+    impl Drop for D {\n+        fn drop(&mut self) {\n+            DROPS.fetch_add(1, Ordering::SeqCst);\n+\n+            if self.1 {\n+                panic!(\"panic in `drop`\");\n+            }\n+        }\n+    }\n+\n+    let mut q = BinaryHeap::from(vec![\n+        D(0, false),\n+        D(1, false),\n+        D(2, false),\n+        D(3, true),\n+        D(4, false),\n+        D(5, false),\n+    ]);\n+\n+    catch_unwind(AssertUnwindSafe(|| drop(q.drain_sorted()))).ok();\n+\n+    assert_eq!(DROPS.load(Ordering::SeqCst), 6);\n+}\n+\n #[test]\n fn test_extend_ref() {\n     let mut a = BinaryHeap::new();"}]}