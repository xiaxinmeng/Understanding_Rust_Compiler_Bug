{"sha": "52c73975b48b49ab6b14896a9d8d6fc665cf85da", "node_id": "C_kwDOAAsO6NoAKDUyYzczOTc1YjQ4YjQ5YWI2YjE0ODk2YTlkOGQ2ZmM2NjVjZjg1ZGE", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-14T14:36:15Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-16T13:22:18Z"}, "message": "resolve: Use `item_name` and `opt_parent` in `Resolver::get_module`\n\nThis is a cleanup that doesn't introduce new query calls, but this way `def_key` is decoded twice which may matter for performance or may not", "tree": {"sha": "d2488471c25b5687d20b0d309026948ecd5e7acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2488471c25b5687d20b0d309026948ecd5e7acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c73975b48b49ab6b14896a9d8d6fc665cf85da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c73975b48b49ab6b14896a9d8d6fc665cf85da", "html_url": "https://github.com/rust-lang/rust/commit/52c73975b48b49ab6b14896a9d8d6fc665cf85da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c73975b48b49ab6b14896a9d8d6fc665cf85da/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99e01fa7eb0dd2344040b3402a0f0961126d87e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d99e01fa7eb0dd2344040b3402a0f0961126d87e", "html_url": "https://github.com/rust-lang/rust/commit/d99e01fa7eb0dd2344040b3402a0f0961126d87e"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "a0613962a00e3d0c90ce92b9531f7da0918db7b8", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/52c73975b48b49ab6b14896a9d8d6fc665cf85da/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c73975b48b49ab6b14896a9d8d6fc665cf85da/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=52c73975b48b49ab6b14896a9d8d6fc665cf85da", "patch": "@@ -27,7 +27,6 @@ use rustc_hir::def_id::{DefId, LocalDefId, CRATE_DEF_ID};\n use rustc_metadata::creader::LoadedMacro;\n use rustc_middle::metadata::ModChild;\n use rustc_middle::{bug, ty};\n-use rustc_session::cstore::CrateStore;\n use rustc_span::hygiene::{ExpnId, LocalExpnId, MacroKind};\n use rustc_span::symbol::{kw, sym, Ident, Symbol};\n use rustc_span::Span;\n@@ -118,20 +117,14 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             let def_kind = self.cstore().def_kind(def_id);\n             match def_kind {\n                 DefKind::Mod | DefKind::Enum | DefKind::Trait => {\n-                    let def_key = self.cstore().def_key(def_id);\n-                    let parent = def_key.parent.map(|index| {\n-                        self.get_nearest_non_block_module(DefId { index, krate: def_id.krate })\n-                    });\n-                    let name = if let Some(cnum) = def_id.as_crate_root() {\n-                        self.cstore().crate_name(cnum)\n-                    } else {\n-                        def_key.disambiguated_data.data.get_opt_name().expect(\"module without name\")\n-                    };\n-\n+                    let parent = self\n+                        .tcx\n+                        .opt_parent(def_id)\n+                        .map(|parent_id| self.get_nearest_non_block_module(parent_id));\n                     let expn_id = self.cstore().module_expansion_untracked(def_id, &self.tcx.sess);\n                     Some(self.new_module(\n                         parent,\n-                        ModuleKind::Def(def_kind, def_id, name),\n+                        ModuleKind::Def(def_kind, def_id, self.tcx.item_name(def_id)),\n                         expn_id,\n                         self.def_span(def_id),\n                         // FIXME: Account for `#[no_implicit_prelude]` attributes."}]}