{"sha": "dea13b4bc7fc51caeb950a531b9652599dba2a2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlYTEzYjRiYzdmYzUxY2FlYjk1MGE1MzFiOTY1MjU5OWRiYTJhMmU=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-03T21:37:15Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-08-09T16:00:25Z"}, "message": "Move path2cstr to rustc_fs_util", "tree": {"sha": "f9c7a3975326f635e57d44680a63e14f7f3b6cff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9c7a3975326f635e57d44680a63e14f7f3b6cff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dea13b4bc7fc51caeb950a531b9652599dba2a2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dea13b4bc7fc51caeb950a531b9652599dba2a2e", "html_url": "https://github.com/rust-lang/rust/commit/dea13b4bc7fc51caeb950a531b9652599dba2a2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dea13b4bc7fc51caeb950a531b9652599dba2a2e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3177c6f3f164a4ff28d246c5028123251942164", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3177c6f3f164a4ff28d246c5028123251942164", "html_url": "https://github.com/rust-lang/rust/commit/e3177c6f3f164a4ff28d246c5028123251942164"}], "stats": {"total": 37, "additions": 17, "deletions": 20}, "files": [{"sha": "1ec025f78c9aca3cdab2dbe0b63bb3bf3ce8345b", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=dea13b4bc7fc51caeb950a531b9652599dba2a2e", "patch": "@@ -14,12 +14,10 @@ use rustc_data_structures::sync::Lock;\n \n use std::cell::{RefCell, Cell};\n use std::collections::HashMap;\n-use std::ffi::CString;\n use std::fmt::Debug;\n use std::hash::{Hash, BuildHasher};\n use std::panic;\n use std::env;\n-use std::path::Path;\n use std::time::{Duration, Instant};\n \n use std::sync::mpsc::{Sender};\n@@ -376,19 +374,6 @@ impl<K, V, S> MemoizationMap for RefCell<HashMap<K,V,S>>\n     }\n }\n \n-#[cfg(unix)]\n-pub fn path2cstr(p: &Path) -> CString {\n-    use std::os::unix::prelude::*;\n-    use std::ffi::OsStr;\n-    let p: &OsStr = p.as_ref();\n-    CString::new(p.as_bytes()).unwrap()\n-}\n-#[cfg(windows)]\n-pub fn path2cstr(p: &Path) -> CString {\n-    CString::new(p.to_str().unwrap()).unwrap()\n-}\n-\n-\n #[test]\n fn test_to_readable_str() {\n     assert_eq!(\"0\", to_readable_str(0));"}, {"sha": "cdfa874b1772a5b8d2aaff5dd5d49adf149f3cff", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=dea13b4bc7fc51caeb950a531b9652599dba2a2e", "patch": "@@ -30,8 +30,7 @@ use CrateInfo;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n use rustc::ty::TyCtxt;\n use rustc::util::common::{time_ext, time_depth, set_time_depth, print_time_passes_entry};\n-use rustc::util::common::path2cstr;\n-use rustc_fs_util::link_or_copy;\n+use rustc_fs_util::{path2cstr, link_or_copy};\n use errors::{self, Handler, Level, DiagnosticBuilder, FatalError, DiagnosticId};\n use errors::emitter::{Emitter};\n use syntax::attr;"}, {"sha": "3ae30e8579601469c1fa4b06535c5eb4b3c69b1f", "filename": "src/librustc_codegen_llvm/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmetadata.rs?ref=dea13b4bc7fc51caeb950a531b9652599dba2a2e", "patch": "@@ -35,7 +35,7 @@ use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n use rustc::ty::layout::{self, Align, LayoutOf, PrimitiveExt, Size, TyLayout};\n use rustc::session::config;\n use rustc::util::nodemap::FxHashMap;\n-use rustc::util::common::path2cstr;\n+use rustc_fs_util::path2cstr;\n \n use libc::{c_uint, c_longlong};\n use std::ffi::CString;"}, {"sha": "a4526a53769ba786838c7765a3266bbd19f4b80c", "filename": "src/librustc_codegen_llvm/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_codegen_llvm%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmetadata.rs?ref=dea13b4bc7fc51caeb950a531b9652599dba2a2e", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use rustc::util::common;\n use rustc::middle::cstore::MetadataLoader;\n use rustc_target::spec::Target;\n use llvm;\n@@ -19,6 +18,7 @@ use rustc_data_structures::owning_ref::OwningRef;\n use std::path::Path;\n use std::ptr;\n use std::slice;\n+use rustc_fs_util::path2cstr;\n \n pub use rustc_data_structures::sync::MetadataRef;\n \n@@ -57,7 +57,7 @@ impl MetadataLoader for LlvmMetadataLoader {\n                           filename: &Path)\n                           -> Result<MetadataRef, String> {\n         unsafe {\n-            let buf = common::path2cstr(filename);\n+            let buf = path2cstr(filename);\n             let mb = llvm::LLVMRustCreateMemoryBufferWithContentsOfFile(buf.as_ptr())\n                 .ok_or_else(|| format!(\"error reading library: '{}'\", filename.display()))?;\n             let of = ObjectFile::new(mb)"}, {"sha": "ffe420b109d3ecf6cea04f377e53f357a4c6b58f", "filename": "src/librustc_fs_util/lib.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_fs_util%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dea13b4bc7fc51caeb950a531b9652599dba2a2e/src%2Flibrustc_fs_util%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_fs_util%2Flib.rs?ref=dea13b4bc7fc51caeb950a531b9652599dba2a2e", "patch": "@@ -9,6 +9,7 @@\n // except according to those terms.\n \n use std::path::{Path, PathBuf};\n+use std::ffi::CString;\n use std::fs;\n use std::io;\n \n@@ -113,3 +114,15 @@ pub fn rename_or_copy_remove<P: AsRef<Path>, Q: AsRef<Path>>(p: P,\n         }\n     }\n }\n+\n+#[cfg(unix)]\n+pub fn path2cstr(p: &Path) -> CString {\n+    use std::os::unix::prelude::*;\n+    use std::ffi::OsStr;\n+    let p: &OsStr = p.as_ref();\n+    CString::new(p.as_bytes()).unwrap()\n+}\n+#[cfg(windows)]\n+pub fn path2cstr(p: &Path) -> CString {\n+    CString::new(p.to_str().unwrap()).unwrap()\n+}"}]}