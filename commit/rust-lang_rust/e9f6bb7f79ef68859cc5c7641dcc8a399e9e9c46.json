{"sha": "e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZjZiYjdmNzllZjY4ODU5Y2M1Yzc2NDFkY2M4YTM5OWU5ZTljNDY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:41:03Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:41:03Z"}, "message": "check_pat_path: use pattern_cause", "tree": {"sha": "09285c46119107854df7c969a96004050f1572e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09285c46119107854df7c969a96004050f1572e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "html_url": "https://github.com/rust-lang/rust/commit/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d33717583c34bb09fcef236884774ae082cc1fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d33717583c34bb09fcef236884774ae082cc1fd", "html_url": "https://github.com/rust-lang/rust/commit/1d33717583c34bb09fcef236884774ae082cc1fd"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "ef80803addec6c1e21e4356c1a2fb5ac954fe3f1", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -155,7 +155,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 self.check_pat_tuple_struct(pat, qpath, subpats, ddpos, expected, def_bm, ti)\n             }\n             PatKind::Path(ref qpath) => {\n-                self.check_pat_path(pat, path_res.unwrap(), qpath, expected)\n+                self.check_pat_path(pat, path_res.unwrap(), qpath, expected, ti)\n             }\n             PatKind::Struct(ref qpath, fields, etc) => {\n                 self.check_pat_struct(pat, qpath, fields, etc, expected, def_bm, ti)\n@@ -671,6 +671,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         path_resolution: (Res, Option<Ty<'tcx>>, &'b [hir::PathSegment<'b>]),\n         qpath: &hir::QPath<'_>,\n         expected: Ty<'tcx>,\n+        ti: TopInfo<'tcx>,\n     ) -> Ty<'tcx> {\n         let tcx = self.tcx;\n \n@@ -696,7 +697,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n         // Type-check the path.\n         let pat_ty = self.instantiate_value_path(segments, opt_ty, res, pat.span, pat.hir_id).0;\n-        self.demand_suptype(pat.span, expected, pat_ty);\n+        if let Some(mut err) =\n+            self.demand_suptype_with_origin(&self.pattern_cause(ti, pat.span), expected, pat_ty)\n+        {\n+            err.emit();\n+        }\n         pat_ty\n     }\n "}, {"sha": "45fede4410630ebdbd5b89d9b6519eb413166064", "filename": "src/test/ui/issues/issue-12552.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12552.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -12,6 +12,9 @@ LL |     Some(k) => match k {\n error[E0308]: mismatched types\n   --> $DIR/issue-12552.rs:9:5\n    |\n+LL |   match t {\n+   |         - this expression has type `std::result::Result<_, {integer}>`\n+...\n LL |     None => ()\n    |     ^^^^ expected enum `std::result::Result`, found enum `std::option::Option`\n    |"}, {"sha": "f0285730c5a26cb43d0cb50e19788c2353e496da", "filename": "src/test/ui/issues/issue-37026.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-37026.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-37026.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37026.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -2,7 +2,9 @@ error[E0308]: mismatched types\n   --> $DIR/issue-37026.rs:6:9\n    |\n LL |     let empty_struct::XEmpty2 = ();\n-   |         ^^^^^^^^^^^^^^^^^^^^^ expected `()`, found struct `empty_struct::XEmpty2`\n+   |         ^^^^^^^^^^^^^^^^^^^^^   -- this expression has type `()`\n+   |         |\n+   |         expected `()`, found struct `empty_struct::XEmpty2`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-37026.rs:7:9"}, {"sha": "5fc0ff575d6cacd2f4969550499451c8869e9f70", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:8:9\n    |\n+LL |     match (true, false) {\n+   |           ------------- this expression has type `(bool, bool)`\n LL |         A::B => (),\n    |         ^^^^ expected tuple, found enum `A`\n    |"}, {"sha": "4a29464aebd2b6ee7c7ffb0ff5c6b61a4fdcdbf2", "filename": "src/test/ui/issues/issue-7867.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-7867.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fissues%2Fissue-7867.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7867.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/issue-7867.rs:7:9\n    |\n+LL |     match (true, false) {\n+   |           ------------- this expression has type `(bool, bool)`\n LL |         A::B => (),\n    |         ^^^^ expected tuple, found enum `A`\n    |"}, {"sha": "3703a59edb83616d9e6382f854f4e02eaf0d4a91", "filename": "src/test/ui/match/match-tag-nullary.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-nullary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-nullary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-tag-nullary.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -2,7 +2,9 @@ error[E0308]: mismatched types\n   --> $DIR/match-tag-nullary.rs:4:40\n    |\n LL | fn main() { let x: A = A::A; match x { B::B => { } } }\n-   |                                        ^^^^ expected enum `A`, found enum `B`\n+   |                                    -   ^^^^ expected enum `A`, found enum `B`\n+   |                                    |\n+   |                                    this expression has type `A`\n \n error: aborting due to previous error\n "}, {"sha": "24b5cdf98d5e202b26cdcf32f58999f660e81589", "filename": "src/test/ui/pattern/pattern-ident-path-generics.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fpattern%2Fpattern-ident-path-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fpattern%2Fpattern-ident-path-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-ident-path-generics.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/pattern-ident-path-generics.rs:3:9\n    |\n+LL |     match Some(\"foo\") {\n+   |           ----------- this expression has type `std::option::Option<&str>`\n LL |         None::<isize> => {}\n    |         ^^^^^^^^^^^^^ expected `&str`, found `isize`\n    |"}, {"sha": "2de0b6a496958a2af0ffc39f0ddc391f4001a079", "filename": "src/test/ui/resolve/name-clash-nullary.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fresolve%2Fname-clash-nullary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Fresolve%2Fname-clash-nullary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fname-clash-nullary.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -2,7 +2,9 @@ error[E0308]: mismatched types\n   --> $DIR/name-clash-nullary.rs:2:7\n    |\n LL |   let None: isize = 42;\n-   |       ^^^^ expected `isize`, found enum `std::option::Option`\n+   |       ^^^^  ----- expected due to this\n+   |       |\n+   |       expected `isize`, found enum `std::option::Option`\n    |\n    = note: expected type `isize`\n               found enum `std::option::Option<_>`"}, {"sha": "27efd450b9471157126a4d22f72003c0dd92ea19", "filename": "src/test/ui/rfc-2005-default-binding-mode/const.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fconst.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fconst.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2005-default-binding-mode%2Fconst.stderr?ref=e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/const.rs:14:9\n    |\n+LL |     match &f {\n+   |           -- this expression has type `&Foo`\n LL |         FOO => {},\n    |         ^^^ expected `&Foo`, found struct `Foo`\n "}]}