{"sha": "f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96", "node_id": "C_kwDOAAsO6NoAKGYzYjU3OTFhNDdlZWExM2NiMWQzZmVjNjQ0ZmMwYzZlYTljMzdjOTY", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-11-22T16:19:40Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-11-22T17:43:48Z"}, "message": "rustc_metadata: Do not encode empty reexport lists\n\nThis is more a cleanup than optimization", "tree": {"sha": "d1eb0a3d788d4c950a691c7140264c3ba2759687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1eb0a3d788d4c950a691c7140264c3ba2759687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96", "html_url": "https://github.com/rust-lang/rust/commit/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ccf36f161f67b121290e2af2517ead7e695d3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/66ccf36f161f67b121290e2af2517ead7e695d3b", "html_url": "https://github.com/rust-lang/rust/commit/66ccf36f161f67b121290e2af2517ead7e695d3b"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "c3c3681c26e02e66396ddb9b18e67a153161f2ed", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=f3b5791a47eea13cb1d3fec644fc0c6ea9c37c96", "patch": "@@ -1267,13 +1267,6 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         // the crate root for consistency with other crates (some of the resolver\n         // code uses it). However, we skip encoding anything relating to child\n         // items - we encode information about proc-macros later on.\n-        let reexports = if !self.is_proc_macro {\n-            tcx.module_reexports(local_def_id).unwrap_or(&[])\n-        } else {\n-            &[]\n-        };\n-\n-        record_array!(self.tables.module_reexports[def_id] <- reexports);\n         if self.is_proc_macro {\n             // Encode this here because we don't do it in encode_def_ids.\n             record!(self.tables.expn_that_defined[def_id] <- tcx.expn_that_defined(local_def_id));\n@@ -1305,6 +1298,11 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                     }\n                 }\n             }));\n+\n+            if let Some(reexports) = tcx.module_reexports(local_def_id) {\n+                assert!(!reexports.is_empty());\n+                record_array!(self.tables.module_reexports[def_id] <- reexports);\n+            }\n         }\n     }\n "}]}