{"sha": "3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYzNhYTcyZDRjZTI5MTRkMDRmOWRjYTQwMWYzODI4NGJlMmMyYzc=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-12-31T13:05:34Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2020-01-07T20:28:21Z"}, "message": "CodeGenFileType moved outside TargetMachine", "tree": {"sha": "ea2d9c03ec1594deff0ffc31887ada64c81e9edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea2d9c03ec1594deff0ffc31887ada64c81e9edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "html_url": "https://github.com/rust-lang/rust/commit/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fd4e76d88373b5ea3c3a96345c69cbcc8f56deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fd4e76d88373b5ea3c3a96345c69cbcc8f56deb", "html_url": "https://github.com/rust-lang/rust/commit/2fd4e76d88373b5ea3c3a96345c69cbcc8f56deb"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "4491bb5fcce505ee5da249fdea8c4296ed346599", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3ec3aa72d4ce2914d04f9dca401f38284be2c2c7/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=3ec3aa72d4ce2914d04f9dca401f38284be2c2c7", "patch": "@@ -533,6 +533,18 @@ enum class LLVMRustFileType {\n   ObjectFile,\n };\n \n+#if LLVM_VERSION_GE(10, 0)\n+static CodeGenFileType fromRust(LLVMRustFileType Type) {\n+  switch (Type) {\n+  case LLVMRustFileType::AssemblyFile:\n+    return CGFT_AssemblyFile;\n+  case LLVMRustFileType::ObjectFile:\n+    return CGFT_ObjectFile;\n+  default:\n+    report_fatal_error(\"Bad FileType.\");\n+  }\n+}\n+#else\n static TargetMachine::CodeGenFileType fromRust(LLVMRustFileType Type) {\n   switch (Type) {\n   case LLVMRustFileType::AssemblyFile:\n@@ -543,6 +555,7 @@ static TargetMachine::CodeGenFileType fromRust(LLVMRustFileType Type) {\n     report_fatal_error(\"Bad FileType.\");\n   }\n }\n+#endif\n \n extern \"C\" LLVMRustResult\n LLVMRustWriteOutputFile(LLVMTargetMachineRef Target, LLVMPassManagerRef PMR,"}]}