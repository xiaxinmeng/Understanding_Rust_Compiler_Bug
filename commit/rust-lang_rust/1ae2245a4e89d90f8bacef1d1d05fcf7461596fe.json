{"sha": "1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZTIyNDVhNGU4OWQ5MGY4YmFjZWYxZDFkMDVmY2Y3NDYxNTk2ZmU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-12-08T18:14:35Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-12-12T23:15:45Z"}, "message": "rustdoc: escape the deprecated and unstable reason text", "tree": {"sha": "5194dcb11ab43603d7017b694c0e940c66d644e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5194dcb11ab43603d7017b694c0e940c66d644e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "html_url": "https://github.com/rust-lang/rust/commit/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6483bdd860fd89fc68846d4cc94c7ae3307a84c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6483bdd860fd89fc68846d4cc94c7ae3307a84c1", "html_url": "https://github.com/rust-lang/rust/commit/6483bdd860fd89fc68846d4cc94c7ae3307a84c1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "5409ade292360d31e96afed17d8ade6d39c5d0f2", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "patch": "@@ -587,15 +587,15 @@ impl<I: FusedIterator + ?Sized> FusedIterator for Box<I> {}\n /// ```\n #[rustc_paren_sugar]\n #[unstable(feature = \"fnbox\",\n-           reason = \"will be deprecated if and when Box<FnOnce> becomes usable\", issue = \"28796\")]\n+           reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n pub trait FnBox<A> {\n     type Output;\n \n     fn call_box(self: Box<Self>, args: A) -> Self::Output;\n }\n \n #[unstable(feature = \"fnbox\",\n-           reason = \"will be deprecated if and when Box<FnOnce> becomes usable\", issue = \"28796\")]\n+           reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n impl<A, F> FnBox<A> for F\n     where F: FnOnce<A>\n {\n@@ -607,7 +607,7 @@ impl<A, F> FnBox<A> for F\n }\n \n #[unstable(feature = \"fnbox\",\n-           reason = \"will be deprecated if and when Box<FnOnce> becomes usable\", issue = \"28796\")]\n+           reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n impl<'a, A, R> FnOnce<A> for Box<FnBox<A, Output = R> + 'a> {\n     type Output = R;\n \n@@ -617,7 +617,7 @@ impl<'a, A, R> FnOnce<A> for Box<FnBox<A, Output = R> + 'a> {\n }\n \n #[unstable(feature = \"fnbox\",\n-           reason = \"will be deprecated if and when Box<FnOnce> becomes usable\", issue = \"28796\")]\n+           reason = \"will be deprecated if and when `Box<FnOnce>` becomes usable\", issue = \"28796\")]\n impl<'a, A, R> FnOnce<A> for Box<FnBox<A, Output = R> + Send + 'a> {\n     type Output = R;\n "}, {"sha": "29781888fdb4b71113d0b65e514dba3970529e60", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae2245a4e89d90f8bacef1d1d05fcf7461596fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=1ae2245a4e89d90f8bacef1d1d05fcf7461596fe", "patch": "@@ -1844,7 +1844,7 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n \n     if let Some(stab) = item.stability.as_ref() {\n         let deprecated_reason = if show_reason && !stab.deprecated_reason.is_empty() {\n-            format!(\": {}\", stab.deprecated_reason)\n+            format!(\": {}\", Escape(&stab.deprecated_reason))\n         } else {\n             String::new()\n         };\n@@ -1875,7 +1875,7 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n                 String::new()\n             };\n             let unstable_reason = if show_reason && !stab.unstable_reason.is_empty() {\n-                format!(\": {}\", stab.unstable_reason)\n+                format!(\": {}\", Escape(&stab.unstable_reason))\n             } else {\n                 String::new()\n             };\n@@ -1884,7 +1884,7 @@ fn short_stability(item: &clean::Item, cx: &Context, show_reason: bool) -> Vec<S\n         };\n     } else if let Some(depr) = item.deprecation.as_ref() {\n         let note = if show_reason && !depr.note.is_empty() {\n-            format!(\": {}\", depr.note)\n+            format!(\": {}\", Escape(&depr.note))\n         } else {\n             String::new()\n         };"}]}