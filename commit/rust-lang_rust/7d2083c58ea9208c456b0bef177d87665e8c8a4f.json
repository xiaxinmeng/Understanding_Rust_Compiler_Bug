{"sha": "7d2083c58ea9208c456b0bef177d87665e8c8a4f", "node_id": "C_kwDOAAsO6NoAKDdkMjA4M2M1OGVhOTIwOGM0NTZiMGJlZjE3N2Q4NzY2NWU4YzhhNGY", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-04-07T09:16:37Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-08-19T14:38:26Z"}, "message": "small mir typeck cleanup", "tree": {"sha": "bb35745ac1fed4028d28ca1d9d498f15fd99de79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb35745ac1fed4028d28ca1d9d498f15fd99de79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d2083c58ea9208c456b0bef177d87665e8c8a4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d2083c58ea9208c456b0bef177d87665e8c8a4f", "html_url": "https://github.com/rust-lang/rust/commit/7d2083c58ea9208c456b0bef177d87665e8c8a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d2083c58ea9208c456b0bef177d87665e8c8a4f/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c943bad02626dddc5e5135b23c77429b6e4a063", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c943bad02626dddc5e5135b23c77429b6e4a063", "html_url": "https://github.com/rust-lang/rust/commit/6c943bad02626dddc5e5135b23c77429b6e4a063"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "451b82c5c18700f07f1967ab571f604ebc9cf584", "filename": "compiler/rustc_borrowck/src/type_check/canonical.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fcanonical.rs?ref=7d2083c58ea9208c456b0bef177d87665e8c8a4f", "patch": "@@ -90,12 +90,13 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n         locations: Locations,\n         category: ConstraintCategory<'tcx>,\n     ) {\n-        self.prove_predicates(\n-            Some(ty::Binder::dummy(ty::PredicateKind::Trait(ty::TraitPredicate {\n+        self.prove_predicate(\n+            ty::Binder::dummy(ty::PredicateKind::Trait(ty::TraitPredicate {\n                 trait_ref,\n                 constness: ty::BoundConstness::NotConst,\n                 polarity: ty::ImplPolarity::Positive,\n-            }))),\n+            }))\n+            .to_predicate(self.tcx()),\n             locations,\n             category,\n         );"}, {"sha": "bb28622edf931b98b00bdeb27db1aab5d4a6e1c8", "filename": "compiler/rustc_borrowck/src/type_check/free_region_relations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Ffree_region_relations.rs?ref=7d2083c58ea9208c456b0bef177d87665e8c8a4f", "patch": "@@ -268,7 +268,7 @@ impl<'tcx> UniversalRegionRelationsBuilder<'_, 'tcx> {\n                 // }\n                 // impl Foo for () {\n                 //   type Bar = ();\n-                //   fn foo(&self) ->&() {}\n+                //   fn foo(&self) -> &() {}\n                 // }\n                 // ```\n                 // Both &Self::Bar and &() are WF"}, {"sha": "bb2e773189c03ec720457a227e2a2b8d202fe71d", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d2083c58ea9208c456b0bef177d87665e8c8a4f/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=7d2083c58ea9208c456b0bef177d87665e8c8a4f", "patch": "@@ -1911,7 +1911,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                 }\n             }\n \n-            &Rvalue::NullaryOp(_, ty) => {\n+            &Rvalue::NullaryOp(NullOp::SizeOf | NullOp::AlignOf, ty) => {\n                 let trait_ref = ty::TraitRef {\n                     def_id: tcx.require_lang_item(LangItem::Sized, Some(self.last_span)),\n                     substs: tcx.mk_substs_trait(ty, &[]),"}]}