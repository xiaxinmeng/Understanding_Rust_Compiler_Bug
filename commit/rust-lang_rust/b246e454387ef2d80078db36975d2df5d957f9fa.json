{"sha": "b246e454387ef2d80078db36975d2df5d957f9fa", "node_id": "C_kwDOAAsO6NoAKGIyNDZlNDU0Mzg3ZWYyZDgwMDc4ZGIzNjk3NWQyZGY1ZDk1N2Y5ZmE", "commit": {"author": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-05-07T00:15:18Z"}, "committer": {"name": "Markus Everling", "email": "markuseverling@gmail.com", "date": "2023-05-07T00:15:18Z"}, "message": "Fix inaccurate safety comments", "tree": {"sha": "c3636551e097da598a4805450a0fff776449b79a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3636551e097da598a4805450a0fff776449b79a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b246e454387ef2d80078db36975d2df5d957f9fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b246e454387ef2d80078db36975d2df5d957f9fa", "html_url": "https://github.com/rust-lang/rust/commit/b246e454387ef2d80078db36975d2df5d957f9fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b246e454387ef2d80078db36975d2df5d957f9fa/comments", "author": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sp00ph", "id": 61327188, "node_id": "MDQ6VXNlcjYxMzI3MTg4", "avatar_url": "https://avatars.githubusercontent.com/u/61327188?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sp00ph", "html_url": "https://github.com/Sp00ph", "followers_url": "https://api.github.com/users/Sp00ph/followers", "following_url": "https://api.github.com/users/Sp00ph/following{/other_user}", "gists_url": "https://api.github.com/users/Sp00ph/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sp00ph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sp00ph/subscriptions", "organizations_url": "https://api.github.com/users/Sp00ph/orgs", "repos_url": "https://api.github.com/users/Sp00ph/repos", "events_url": "https://api.github.com/users/Sp00ph/events{/privacy}", "received_events_url": "https://api.github.com/users/Sp00ph/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "195d4cad50c5b8a544de608295e7fdc369f99d9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/195d4cad50c5b8a544de608295e7fdc369f99d9a", "html_url": "https://github.com/rust-lang/rust/commit/195d4cad50c5b8a544de608295e7fdc369f99d9a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "ff761fc900fabd709fd5adf24c3792af6ad9693e", "filename": "crates/core_simd/src/vector.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b246e454387ef2d80078db36975d2df5d957f9fa/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b246e454387ef2d80078db36975d2df5d957f9fa/crates%2Fcore_simd%2Fsrc%2Fvector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector.rs?ref=b246e454387ef2d80078db36975d2df5d957f9fa", "patch": "@@ -156,9 +156,9 @@ where\n     /// assert_eq!(v.as_array(), &[0, 1, 2, 3]);\n     /// ```\n     pub const fn as_array(&self) -> &[T; N] {\n-        // SAFETY: Transmuting between `Simd<T, N>` and `[T; N]`\n-        // is always valid and `Simd<T, N>` never has a lower alignment\n-        // than `[T; N]`.\n+        // SAFETY: `Simd<T, N>` is just an overaligned `[T; N]` with\n+        // potential padding at the end, so pointer casting to a\n+        // `&[T; N]` is safe.\n         //\n         // NOTE: This deliberately doesn't just use `&self.0`, see the comment\n         // on the struct definition for details.\n@@ -167,9 +167,9 @@ where\n \n     /// Returns a mutable array reference containing the entire SIMD vector.\n     pub fn as_mut_array(&mut self) -> &mut [T; N] {\n-        // SAFETY: Transmuting between `Simd<T, N>` and `[T; N]`\n-        // is always valid and `Simd<T, N>` never has a lower alignment\n-        // than `[T; N]`.\n+        // SAFETY: `Simd<T, N>` is just an overaligned `[T; N]` with\n+        // potential padding at the end, so pointer casting to a\n+        // `&mut [T; N]` is safe.\n         //\n         // NOTE: This deliberately doesn't just use `&mut self.0`, see the comment\n         // on the struct definition for details."}]}