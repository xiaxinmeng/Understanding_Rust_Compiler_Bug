{"sha": "c43efee6def9a4a4e943feef0236d3e17b3f581d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0M2VmZWU2ZGVmOWE0YTRlOTQzZmVlZjAyMzZkM2UxN2IzZjU4MWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-26T03:01:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-26T03:01:42Z"}, "message": "auto merge of #20183 : japaric/rust/doctests, r=alexcrichton\n\n#20075 introduced a bug where unmarked code fences weren't considered as doctests. This PR fixes the logic.\r\n\r\n---\r\n\r\nThis passed `check-stage1-rustdoc`, and I manually checked that:\r\n\r\n``` rust\r\n//! ```\r\n//! println!(\"Hello\")\r\n//! ```\r\n//!\r\n//! ``` rust\r\n//! println!(\"Hello\")\r\n//! ```\r\n//!\r\n//! ``` sh\r\n//! println!(\"Hello\")\r\n//! ```\r\n//!\r\n//! ``` ignore\r\n//! println!(\"Hello\")\r\n//! ```\r\n```\r\n\r\nGenerated:\r\n\r\n``` rust\r\nrunning 3 tests\r\ntest _2 ... ignored\r\ntest _0 ... ok\r\ntest _1 ... ok\r\n```\r\n\r\nI'd love to add that as a test, but I have no idea how to do that with our testing infrastructure. If anyone knows how, do let me know!\r\n\r\nr? @alexcrichton \r\n@seanmonstar feedback?", "tree": {"sha": "da3af9bc231f36a93bb13f2f60225562cd48fa53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da3af9bc231f36a93bb13f2f60225562cd48fa53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c43efee6def9a4a4e943feef0236d3e17b3f581d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c43efee6def9a4a4e943feef0236d3e17b3f581d", "html_url": "https://github.com/rust-lang/rust/commit/c43efee6def9a4a4e943feef0236d3e17b3f581d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c43efee6def9a4a4e943feef0236d3e17b3f581d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ba6102657a892457063d2d6a7cbb9632ce282c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba6102657a892457063d2d6a7cbb9632ce282c6", "html_url": "https://github.com/rust-lang/rust/commit/5ba6102657a892457063d2d6a7cbb9632ce282c6"}, {"sha": "86d85794789e7a4557e3e92c402f57ae05b35e9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/86d85794789e7a4557e3e92c402f57ae05b35e9e", "html_url": "https://github.com/rust-lang/rust/commit/86d85794789e7a4557e3e92c402f57ae05b35e9e"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "1c079b3a174bc9a3af3a77cd959195fbaf8d489d", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c43efee6def9a4a4e943feef0236d3e17b3f581d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c43efee6def9a4a4e943feef0236d3e17b3f581d/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=c43efee6def9a4a4e943feef0236d3e17b3f581d", "patch": "@@ -387,7 +387,7 @@ impl LangString {\n             should_fail: false,\n             no_run: false,\n             ignore: false,\n-            rust: false,\n+            rust: true,  // NB This used to be `notrust = false`\n             test_harness: false,\n         }\n     }\n@@ -413,7 +413,7 @@ impl LangString {\n             }\n         }\n \n-        data.rust |=  !seen_other_tags || seen_rust_tags;\n+        data.rust &= !seen_other_tags || seen_rust_tags;\n \n         data\n     }\n@@ -465,17 +465,18 @@ mod tests {\n             })\n         }\n \n-        t(\"\", false,false,false,true,false);\n-        t(\"rust\", false,false,false,true,false);\n-        t(\"sh\", false,false,false,false,false);\n-        t(\"ignore\", false,false,true,true,false);\n-        t(\"should_fail\", true,false,false,true,false);\n-        t(\"no_run\", false,true,false,true,false);\n-        t(\"test_harness\", false,false,false,true,true);\n-        t(\"{.no_run .example}\", false,true,false,true,false);\n-        t(\"{.sh .should_fail}\", true,false,false,true,false);\n-        t(\"{.example .rust}\", false,false,false,true,false);\n-        t(\"{.test_harness .rust}\", false,false,false,true,true);\n+        // marker                | should_fail | no_run | ignore | rust | test_harness\n+        t(\"\",                      false,        false,   false,   true,  false);\n+        t(\"rust\",                  false,        false,   false,   true,  false);\n+        t(\"sh\",                    false,        false,   false,   false, false);\n+        t(\"ignore\",                false,        false,   true,    true,  false);\n+        t(\"should_fail\",           true,         false,   false,   true,  false);\n+        t(\"no_run\",                false,        true,    false,   true,  false);\n+        t(\"test_harness\",          false,        false,   false,   true,  true);\n+        t(\"{.no_run .example}\",    false,        true,    false,   true,  false);\n+        t(\"{.sh .should_fail}\",    true,         false,   false,   true,  false);\n+        t(\"{.example .rust}\",      false,        false,   false,   true,  false);\n+        t(\"{.test_harness .rust}\", false,        false,   false,   true,  true);\n     }\n \n     #[test]"}]}