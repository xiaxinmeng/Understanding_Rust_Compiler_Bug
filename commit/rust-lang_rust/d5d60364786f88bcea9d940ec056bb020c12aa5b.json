{"sha": "d5d60364786f88bcea9d940ec056bb020c12aa5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZDYwMzY0Nzg2Zjg4YmNlYTlkOTQwZWMwNTZiYjAyMGMxMmFhNWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-29T02:14:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-29T02:14:19Z"}, "message": "Rollup merge of #79443 - GuillaumeGomez:improve-rustdoc-js-error-output, r=jyn514\n\nImprove rustdoc JS tests error output\n\nIt's pretty common when starting to add new tests for rustdoc-js to have issues to understand the errors. With this, it should make things a bit simpler. So now, in case of an error, it displays:\n\n```\n---- [js-doc-test] rustdoc-js/basic.rs stdout ----\n\nerror: rustdoc-js test failed!\nfailed to decode compiler output as json: line: {\noutput: Checking \"basic\" ... FAILED\n==> Result not found in 'others': '{\"path\":\"basic\",\"name\":\"Fo\"}'\nDiff of first error:\n{\n    \"path\": \"basic\",\n    - \"name\": \"Fo\",\n    + \"name\": \"Foo\",\n}\nthread '[js-doc-test] rustdoc-js/basic.rs' panicked at 'explicit panic', src/tools/compiletest/src/json.rs:126:21\n```\n\nI think it was ``@camelid`` who asked about it a few days ago?\n\nr? ``@jyn514``", "tree": {"sha": "d0132325f1832bfb731d1d0a1cb32b00d619feac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0132325f1832bfb731d1d0a1cb32b00d619feac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5d60364786f88bcea9d940ec056bb020c12aa5b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwwP7CRBK7hj4Ov3rIwAAdHIIAEae933mBnorl2FPwsXBDvUU\naSevM/OME/0mJ6yxe4lrKvdHpP3Dx2Tub7u6q502x8BI4TSWO4TYHUeWCqx0yjJt\n383nuB+ytFcb2Cegqb4BySPvzdFz6HeYc5hue2CIzMz0+YHzU5cMFyD1hXgM8Eb2\nTaa57iqBPG/jlhyXqY0OkMN8EJcxO49b/i4UtWjkER2fKWxmDCjqPKPoj9SBAbCi\nPlNGszfPrUUjWJ0T5+1BhZoU2PBJxDx8KBiz25v7XDfovozUKzF+M6hn7MVS8VYY\nSVp1PjkhhU5YbTzLFdrQ+FHFJcJ7X2bKb90Idg63zPRfSZ6tZ1WtZAxqFg9Pa58=\n=0mf4\n-----END PGP SIGNATURE-----\n", "payload": "tree d0132325f1832bfb731d1d0a1cb32b00d619feac\nparent 851def274de533b563acbbf597e35def012b6063\nparent fa14f22fcb260ca0bc7dca395b456ea14bcde712\nauthor Dylan DPC <dylan.dpc@gmail.com> 1606616059 +0100\ncommitter GitHub <noreply@github.com> 1606616059 +0100\n\nRollup merge of #79443 - GuillaumeGomez:improve-rustdoc-js-error-output, r=jyn514\n\nImprove rustdoc JS tests error output\n\nIt's pretty common when starting to add new tests for rustdoc-js to have issues to understand the errors. With this, it should make things a bit simpler. So now, in case of an error, it displays:\n\n```\n---- [js-doc-test] rustdoc-js/basic.rs stdout ----\n\nerror: rustdoc-js test failed!\nfailed to decode compiler output as json: line: {\noutput: Checking \"basic\" ... FAILED\n==> Result not found in 'others': '{\"path\":\"basic\",\"name\":\"Fo\"}'\nDiff of first error:\n{\n    \"path\": \"basic\",\n    - \"name\": \"Fo\",\n    + \"name\": \"Foo\",\n}\nthread '[js-doc-test] rustdoc-js/basic.rs' panicked at 'explicit panic', src/tools/compiletest/src/json.rs:126:21\n```\n\nI think it was ``@camelid`` who asked about it a few days ago?\n\nr? ``@jyn514``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5d60364786f88bcea9d940ec056bb020c12aa5b", "html_url": "https://github.com/rust-lang/rust/commit/d5d60364786f88bcea9d940ec056bb020c12aa5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5d60364786f88bcea9d940ec056bb020c12aa5b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "851def274de533b563acbbf597e35def012b6063", "url": "https://api.github.com/repos/rust-lang/rust/commits/851def274de533b563acbbf597e35def012b6063", "html_url": "https://github.com/rust-lang/rust/commit/851def274de533b563acbbf597e35def012b6063"}, {"sha": "fa14f22fcb260ca0bc7dca395b456ea14bcde712", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa14f22fcb260ca0bc7dca395b456ea14bcde712", "html_url": "https://github.com/rust-lang/rust/commit/fa14f22fcb260ca0bc7dca395b456ea14bcde712"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "63f2d2f5d2f684b2abb3a8035a7ef547561915f5", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d5d60364786f88bcea9d940ec056bb020c12aa5b/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/d5d60364786f88bcea9d940ec056bb020c12aa5b/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=d5d60364786f88bcea9d940ec056bb020c12aa5b", "patch": "@@ -190,6 +190,30 @@ function loadThings(thingsToLoad, kindOfLoad, funcToCall, fileContent) {\n     return content;\n }\n \n+function contentToDiffLine(key, value) {\n+    return `\"${key}\": \"${value}\",`;\n+}\n+\n+// This function is only called when no matching result was found and therefore will only display\n+// the diff between the two items.\n+function betterLookingDiff(entry, data) {\n+    let output = ' {\\n';\n+    let spaces = '     ';\n+    for (let key in entry) {\n+        if (!entry.hasOwnProperty(key)) {\n+            continue;\n+        }\n+        let value = data[key];\n+        if (value !== entry[key]) {\n+            output += '-' + spaces + contentToDiffLine(key, entry[key]) + '\\n';\n+            output += '+' + spaces + contentToDiffLine(key, value) + '\\n';\n+        } else {\n+            output += spaces + contentToDiffLine(key, value) + '\\n';\n+        }\n+    }\n+    return output + ' }';\n+}\n+\n function lookForEntry(entry, data) {\n     for (var i = 0; i < data.length; ++i) {\n         var allGood = true;\n@@ -281,6 +305,13 @@ function runSearch(query, expected, index, loaded, loadedFile, queryName) {\n             if (entry_pos === null) {\n                 error_text.push(queryName + \"==> Result not found in '\" + key + \"': '\" +\n                                 JSON.stringify(entry[i]) + \"'\");\n+                // By default, we just compare the two first items.\n+                let item_to_diff = 0;\n+                if ((ignore_order === false || exact_check === true) && i < results[key].length) {\n+                    item_to_diff = i;\n+                }\n+                error_text.push(\"Diff of first error:\\n\" +\n+                    betterLookingDiff(entry[i], results[key][item_to_diff]));\n             } else if (exact_check === true && prev_pos + 1 !== entry_pos) {\n                 error_text.push(queryName + \"==> Exact check failed at position \" + (prev_pos + 1) +\n                                 \": expected '\" + JSON.stringify(entry[i]) + \"' but found '\" +"}]}