{"sha": "a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "node_id": "C_kwDOAAsO6NoAKGExOGY0M2YyNWQ0MTRhOWEzOTkwYmQyYWZlMjVlMjZiOTJmNWZiMjI", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-02T01:52:15Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-02T02:02:00Z"}, "message": "Fix unclosed boxes in pretty printing of TraitAlias", "tree": {"sha": "c02def5069dfc5e8a691345f61c7156da48aa84f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c02def5069dfc5e8a691345f61c7156da48aa84f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHRB5gACgkQ+boUO5X/\nbYLu9g//ZClUTN3UY60WMBW8+yRLjLnq8YR4TKr2YSaPCxhh3cl53W7q4fCj2961\nQ5asExvNZc8JZK8Pi/L4Mh/1LBjK7RZsveyRzWVy3VSt3SwrHPDzdeC0nqs2ns8y\nJn7srVcT3FpTch9O7culZusvPJ8JCqkmYOsRCSO1OP5YpDwpuuRXGltAUbcveBkG\niOs8rX2MzgVVqy7RA3bweXOVa+/+ZsRbqAlA+J/aW3e38OgWbCQTtlqcTyvKGl5l\nc7gl7MpTPeXE70S3nzoly3j2DBcbNHHkPHDjp9FZgK3w4tm+KMknJthyDrkKOTNd\nozZFZ01DqRltCpi/mvA9c88yfsKk5hNCK+OV3gFTuxeFxE6vEbIjGxrYZtKF3doK\nbngo+SRg+86Go/ZjeXZmf/k/keCaJDVMz1jiZoQZ3H1EzRkZa8mBnLwEptmgV+AH\nwDt42Woelswue8T9O1uRSfeNwTmyfYuVc2e4GGn6EICPWXoZXOsb/JKAcsW5msZc\nS3ILaSGZcKdNP9wV3ZBfYfMPpRt6yPYoZVB686OyCTdlvZpdoXvdqmdnETM0C/Rz\nqyD/TeZYPClNMZSfPLCnIqXFFWZOLg0F/IDdDAko+SLdip0PYGD+/Was7WMDS/Go\nxhyRHJqESUbZXsu6jHeuluTO159SkOmSyxAq+VvaxTxSFRpI4HE=\n=Xj9k\n-----END PGP SIGNATURE-----", "payload": "tree c02def5069dfc5e8a691345f61c7156da48aa84f\nparent dd3ac41495e85a9b7b5cb3186379d02ce17e51fe\nauthor David Tolnay <dtolnay@gmail.com> 1641088335 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1641088920 -0800\n\nFix unclosed boxes in pretty printing of TraitAlias\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "html_url": "https://github.com/rust-lang/rust/commit/a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd3ac41495e85a9b7b5cb3186379d02ce17e51fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3ac41495e85a9b7b5cb3186379d02ce17e51fe", "html_url": "https://github.com/rust-lang/rust/commit/dd3ac41495e85a9b7b5cb3186379d02ce17e51fe"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b5b87c0b48af1425bc43641ade84e108dddeb024", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "patch": "@@ -1354,9 +1354,7 @@ impl<'a> State<'a> {\n                 self.bclose(item.span, empty);\n             }\n             ast::ItemKind::TraitAlias(ref generics, ref bounds) => {\n-                self.head(\"\");\n-                self.print_visibility(&item.vis);\n-                self.word_nbsp(\"trait\");\n+                self.head(visibility_qualified(&item.vis, \"trait\"));\n                 self.print_ident(item.ident);\n                 self.print_generic_params(&generics.params);\n                 let mut real_bounds = Vec::with_capacity(bounds.len());\n@@ -1374,6 +1372,8 @@ impl<'a> State<'a> {\n                 self.print_type_bounds(\"=\", &real_bounds);\n                 self.print_where_clause(&generics.where_clause);\n                 self.word(\";\");\n+                self.end(); // end inner head-block\n+                self.end(); // end outer head-block\n             }\n             ast::ItemKind::MacCall(ref mac) => {\n                 self.print_mac(mac);"}, {"sha": "ad47c69652035fa652c9f9d5da556c8e8970fbbf", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "patch": "@@ -705,9 +705,7 @@ impl<'a> State<'a> {\n                 self.bclose(item.span);\n             }\n             hir::ItemKind::TraitAlias(ref generics, ref bounds) => {\n-                self.head(\"\");\n-                self.print_visibility(&item.vis);\n-                self.word_nbsp(\"trait\");\n+                self.head(visibility_qualified(&item.vis, \"trait\"));\n                 self.print_ident(item.ident);\n                 self.print_generic_params(&generics.params);\n                 let mut real_bounds = Vec::with_capacity(bounds.len());\n@@ -725,6 +723,8 @@ impl<'a> State<'a> {\n                 self.print_bounds(\"=\", real_bounds);\n                 self.print_where_clause(&generics.where_clause);\n                 self.word(\";\");\n+                self.end(); // end inner head-block\n+                self.end(); // end outer head-block\n             }\n         }\n         self.ann.post(self, AnnNode::Item(item))"}, {"sha": "36e01a7508f3408926fae60cd88713a9667ba2e1", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a18f43f25d414a9a3990bd2afe25e26b92f5fb22/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=a18f43f25d414a9a3990bd2afe25e26b92f5fb22", "patch": "@@ -589,7 +589,7 @@ fn test_item() {\n         stringify_item!(\n             pub trait Trait<T> = Sized where T: 'a;\n         ),\n-        \"\", // FIXME\n+        \"pub trait Trait<T> = Sized where T: 'a;\",\n     );\n \n     // ItemKind::Impl"}]}