{"sha": "b7593e5070e71af5d43b29c84611a836b8d0fdcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NTkzZTUwNzBlNzFhZjVkNDNiMjljODQ2MTFhODM2YjhkMGZkY2M=", "commit": {"author": {"name": "mendess", "email": "pedro.mendes.26@gmail.com", "date": "2020-11-24T09:35:08Z"}, "committer": {"name": "mendess", "email": "pedro.mendes.26@gmail.com", "date": "2020-11-24T09:35:08Z"}, "message": "Add note to use nightly when using expr in const generics", "tree": {"sha": "6da2dabec7d89349673d1c284f284d29a6bb0b4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da2dabec7d89349673d1c284f284d29a6bb0b4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7593e5070e71af5d43b29c84611a836b8d0fdcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7593e5070e71af5d43b29c84611a836b8d0fdcc", "html_url": "https://github.com/rust-lang/rust/commit/b7593e5070e71af5d43b29c84611a836b8d0fdcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7593e5070e71af5d43b29c84611a836b8d0fdcc/comments", "author": {"login": "mendess", "id": 19352680, "node_id": "MDQ6VXNlcjE5MzUyNjgw", "avatar_url": "https://avatars.githubusercontent.com/u/19352680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mendess", "html_url": "https://github.com/mendess", "followers_url": "https://api.github.com/users/mendess/followers", "following_url": "https://api.github.com/users/mendess/following{/other_user}", "gists_url": "https://api.github.com/users/mendess/gists{/gist_id}", "starred_url": "https://api.github.com/users/mendess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mendess/subscriptions", "organizations_url": "https://api.github.com/users/mendess/orgs", "repos_url": "https://api.github.com/users/mendess/repos", "events_url": "https://api.github.com/users/mendess/events{/privacy}", "received_events_url": "https://api.github.com/users/mendess/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mendess", "id": 19352680, "node_id": "MDQ6VXNlcjE5MzUyNjgw", "avatar_url": "https://avatars.githubusercontent.com/u/19352680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mendess", "html_url": "https://github.com/mendess", "followers_url": "https://api.github.com/users/mendess/followers", "following_url": "https://api.github.com/users/mendess/following{/other_user}", "gists_url": "https://api.github.com/users/mendess/gists{/gist_id}", "starred_url": "https://api.github.com/users/mendess/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mendess/subscriptions", "organizations_url": "https://api.github.com/users/mendess/orgs", "repos_url": "https://api.github.com/users/mendess/repos", "events_url": "https://api.github.com/users/mendess/events{/privacy}", "received_events_url": "https://api.github.com/users/mendess/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a105fdd46c926ae606777a46dd90e5b838f92f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a105fdd46c926ae606777a46dd90e5b838f92f", "html_url": "https://github.com/rust-lang/rust/commit/d9a105fdd46c926ae606777a46dd90e5b838f92f"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "70ab59970d8a71eaa27ba9b4b3127fc3711f1ce8", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -480,6 +480,7 @@ impl<'a> Resolver<'a> {\n                         \"const parameters may only be used as standalone arguments, i.e. `{}`\",\n                         name\n                     ));\n+                    err.note(\"use feature(const_generics) and feature(const_evaluatable_checked) to enable this\");\n                 }\n \n                 err"}, {"sha": "ae3b593f9d314cf0466155954c8dbc2a3d7d6e5b", "filename": "src/test/ui/const-generics/array-size-in-generic-struct-param.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Farray-size-in-generic-struct-param.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | struct ArithArrayLen<const N: usize>([u32; 0 + N]);\n    |                                                ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/array-size-in-generic-struct-param.rs:20:15\n@@ -13,6 +14,7 @@ LL |     arr: [u8; CFG.arr_size],\n    |               ^^^ cannot perform const operation using `CFG`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `CFG`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: `Config` is forbidden as the type of a const generic parameter\n   --> $DIR/array-size-in-generic-struct-param.rs:18:21"}, {"sha": "9e3c07558f1d66f8e5a558f3f4b6ab6b36767860", "filename": "src/test/ui/const-generics/const-arg-in-const-arg.min.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -13,6 +13,7 @@ LL |     let _: [u8; bar::<N>()];\n    |                       ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/const-arg-in-const-arg.rs:25:23\n@@ -21,6 +22,7 @@ LL |     let _ = [0; bar::<N>()];\n    |                       ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/const-arg-in-const-arg.rs:30:24\n@@ -37,6 +39,7 @@ LL |     let _: Foo<{ bar::<N>() }>;\n    |                        ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/const-arg-in-const-arg.rs:36:27\n@@ -53,6 +56,7 @@ LL |     let _ = Foo::<{ bar::<N>() }>;\n    |                           ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error[E0658]: a non-static lifetime is not allowed in a `const`\n   --> $DIR/const-arg-in-const-arg.rs:16:23"}, {"sha": "8da75e953ff932d5befa71fc26b749bd05d71770", "filename": "src/test/ui/const-generics/const_evaluatable_checked/feature-gate-const_evaluatable_checked.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Ffeature-gate-const_evaluatable_checked.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | type Arr<const N: usize> = [u8; N - 1];\n    |                                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "91438ee1f65c28fcb7e114830a40c217c2f8e255", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | fn test<const N: usize>() -> [u8; N - 1] where [u8; N - 1]: Default {\n    |                                                     ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/simple.rs:8:35\n@@ -13,6 +14,7 @@ LL | fn test<const N: usize>() -> [u8; N - 1] where [u8; N - 1]: Default {\n    |                                   ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "dd2164ee45a451ea9d6ffc0509742855106766c9", "filename": "src/test/ui/const-generics/const_evaluatable_checked/simple_fail.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fsimple_fail.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | type Arr<const N: usize> = [u8; N - 1];\n    |                                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "9d2524b60952a815e2a4d0ce91ce6dff3b895429", "filename": "src/test/ui/const-generics/generic-function-call-in-array-length.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-function-call-in-array-length.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-function-call-in-array-length.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-function-call-in-array-length.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | fn bar<const N: usize>() -> [u32; foo(N)] {\n    |                                       ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/generic-function-call-in-array-length.rs:12:13\n@@ -13,6 +14,7 @@ LL |     [0; foo(N)]\n    |             ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5a0e72524fb282e8b77f305ad474bfe5b8667395", "filename": "src/test/ui/const-generics/generic-sum-in-array-length.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-sum-in-array-length.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-sum-in-array-length.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fgeneric-sum-in-array-length.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | fn foo<const A: usize, const B: usize>(bar: [usize; A + B]) {}\n    |                                                     ^ cannot perform const operation using `A`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `A`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/generic-sum-in-array-length.rs:7:57\n@@ -13,6 +14,7 @@ LL | fn foo<const A: usize, const B: usize>(bar: [usize; A + B]) {}\n    |                                                         ^ cannot perform const operation using `B`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `B`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0ec673593d0b6f9cd09d469164889564f234d414", "filename": "src/test/ui/const-generics/issue-61522-array-len-succ.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-61522-array-len-succ.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | pub struct MyArray<const COUNT: usize>([u8; COUNT + 1]);\n    |                                             ^^^^^ cannot perform const operation using `COUNT`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `COUNT`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/issue-61522-array-len-succ.rs:12:30\n@@ -13,6 +14,7 @@ LL |     fn inner(&self) -> &[u8; COUNT + 1] {\n    |                              ^^^^^ cannot perform const operation using `COUNT`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `COUNT`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "1e4fdd885ec856a6f97ad22b7b69ef2c6b8c8705", "filename": "src/test/ui/const-generics/issues/issue-61747.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     fn successor() -> Const<{C + 1}> {\n    |                              ^ cannot perform const operation using `C`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `C`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "cf1ff180935eccafc97e791d8758db70acf3b215", "filename": "src/test/ui/const-generics/issues/issue-61935.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61935.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |         Self:FooImpl<{N==0}>\n    |                       ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "dd8fbfebd2f6b50c605022aecfbb9dc8bb00a300", "filename": "src/test/ui/const-generics/issues/issue-62220.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62220.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | pub type TruncatedVector<T, const N: usize> = Vector<T, { N - 1 }>;\n    |                                                           ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "ac11191b119cd503c2e54e9d1f8560c826a4badd", "filename": "src/test/ui/const-generics/issues/issue-62456.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-62456.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     let _ = [0u64; N + 1];\n    |                    ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "f3e3eb6c5a65a975091d39dad5010b459412624e", "filename": "src/test/ui/const-generics/issues/issue-66205.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-66205.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     fact::<{ N - 1 }>();\n    |              ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "7dcb3ea1acb0573cc8b37afe83736ed7ed88c8a6", "filename": "src/test/ui/const-generics/issues/issue-68366.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68366.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68366.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68366.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | impl <const N: usize> Collatz<{Some(N)}> {}\n    |                                     ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error[E0207]: the const parameter `N` is not constrained by the impl trait, self type, or predicates\n   --> $DIR/issue-68366.rs:12:13"}, {"sha": "67ca519de2c2ca27c339d91de335364f0d1f86d1", "filename": "src/test/ui/const-generics/issues/issue-68977.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68977.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68977.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-68977.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     PhantomU8<{(INT_BITS + FRAC_BITS + 7) / 8}>;\n    |                 ^^^^^^^^ cannot perform const operation using `INT_BITS`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `INT_BITS`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/issue-68977.rs:29:28\n@@ -13,6 +14,7 @@ LL |     PhantomU8<{(INT_BITS + FRAC_BITS + 7) / 8}>;\n    |                            ^^^^^^^^^ cannot perform const operation using `FRAC_BITS`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `FRAC_BITS`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2a7672d0c89266016906a7355a5937b3a4286c18", "filename": "src/test/ui/const-generics/issues/issue-72787.min.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72787.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72787.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72787.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     Condition<{ LHS <= RHS }>: True\n    |                 ^^^ cannot perform const operation using `LHS`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `LHS`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/issue-72787.rs:11:24\n@@ -13,6 +14,7 @@ LL |     Condition<{ LHS <= RHS }>: True\n    |                        ^^^ cannot perform const operation using `RHS`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `RHS`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/issue-72787.rs:26:25\n@@ -21,6 +23,7 @@ LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    |                         ^ cannot perform const operation using `I`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `I`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/issue-72787.rs:26:36\n@@ -29,6 +32,7 @@ LL |     IsLessOrEqual<{ 8 - I }, { 8 - J }>: True,\n    |                                    ^ cannot perform const operation using `J`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `J`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error[E0283]: type annotations needed\n   --> $DIR/issue-72787.rs:22:26"}, {"sha": "f7c4109e55290e62702f84815ce89a2f4ca371ce", "filename": "src/test/ui/const-generics/issues/issue-72819-generic-in-const-eval.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72819-generic-in-const-eval.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72819-generic-in-const-eval.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-72819-generic-in-const-eval.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | where Assert::<{N < usize::max_value() / 2}>: IsTrue,\n    |                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to previous error\n "}, {"sha": "57514736121c65489fb61830fe961409e729e4d6", "filename": "src/test/ui/const-generics/issues/issue-76701-ty-param-in-const.min.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-76701-ty-param-in-const.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -13,6 +13,7 @@ LL | fn const_param<const N: usize>() -> [u8; N + 1] {\n    |                                          ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b23053756d146bc0712dfdaf6cc9a2dcec822cb9", "filename": "src/test/ui/const-generics/macro_rules-braces.min.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmacro_rules-braces.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -27,6 +27,7 @@ LL |     let _: foo!({{ N }});\n    |                    ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/macro_rules-braces.rs:41:19\n@@ -35,6 +36,7 @@ LL |     let _: bar!({ N });\n    |                   ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/macro_rules-braces.rs:46:20\n@@ -43,6 +45,7 @@ LL |     let _: baz!({{ N }});\n    |                    ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/macro_rules-braces.rs:51:19\n@@ -51,6 +54,7 @@ LL |     let _: biz!({ N });\n    |                   ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 6 previous errors\n "}, {"sha": "d8debd2b930488ec5d7aaf7f911ccd7aaa4d3b8c", "filename": "src/test/ui/const-generics/min_const_generics/complex-expression.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-expression.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-expression.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fmin_const_generics%2Fcomplex-expression.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL | struct Break0<const N: usize>([u8; { N + 1 }]);\n    |                                      ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/complex-expression.rs:14:40\n@@ -13,6 +14,7 @@ LL | struct Break1<const N: usize>([u8; { { N } }]);\n    |                                        ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/complex-expression.rs:18:17\n@@ -21,6 +23,7 @@ LL |     let _: [u8; N + 1];\n    |                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/complex-expression.rs:23:17\n@@ -29,6 +32,7 @@ LL |     let _ = [0; N + 1];\n    |                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/complex-expression.rs:27:45"}, {"sha": "296b1c15cf017efe2ef3cbbcc16f8ea80619515a", "filename": "src/test/ui/const-generics/wf-misc.min.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fwf-misc.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7593e5070e71af5d43b29c84611a836b8d0fdcc/src%2Ftest%2Fui%2Fconst-generics%2Fwf-misc.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fwf-misc.min.stderr?ref=b7593e5070e71af5d43b29c84611a836b8d0fdcc", "patch": "@@ -5,6 +5,7 @@ LL |     let _: [u8; N + 1];\n    |                 ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: generic parameters may not be used in const operations\n   --> $DIR/wf-misc.rs:17:21\n@@ -13,6 +14,7 @@ LL |     let _: Const::<{N + 1}>;\n    |                     ^ cannot perform const operation using `N`\n    |\n    = help: const parameters may only be used as standalone arguments, i.e. `N`\n+   = note: use feature(const_generics) and feature(const_evaluatable_checked) to enable this\n \n error: aborting due to 2 previous errors\n "}]}