{"sha": "23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzMTcyYTExNmMzY2M0Y2E5YTY5MmRmZGQwNTA1MWQxYTRhZWUyYjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T21:24:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T21:24:12Z"}, "message": "rename POS_FIELD -> POS_FIELD_DEF\n\nto match NAMED_FIELD_DEF", "tree": {"sha": "b6d0912779ecb18ec278339d8a40303e172647be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6d0912779ecb18ec278339d8a40303e172647be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "html_url": "https://github.com/rust-lang/rust/commit/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7acecade09e1234ac7b1d1ed2f22edbc543f64", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7acecade09e1234ac7b1d1ed2f22edbc543f64", "html_url": "https://github.com/rust-lang/rust/commit/3c7acecade09e1234ac7b1d1ed2f22edbc543f64"}], "stats": {"total": 130, "additions": 65, "deletions": 65}, "files": [{"sha": "191104890af2f3eefd78954c524a3272e387c2d1", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -193,7 +193,7 @@ pub struct StructField {\n #[derive(Debug)]\n pub enum FieldSource {\n     Named(TreeArc<ast::NamedFieldDef>),\n-    Pos(TreeArc<ast::PosField>),\n+    Pos(TreeArc<ast::PosFieldDef>),\n }\n \n impl StructField {"}, {"sha": "f396dfe3fd5ae3d8a81aa6bbfb3ec1b43aa2ac37", "filename": "crates/ra_ide_api_light/src/extend_selection.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fextend_selection.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -9,9 +9,9 @@ pub fn extend_selection(root: &SyntaxNode, range: TextRange) -> Option<TextRange\n     let list_kinds = [\n         FIELD_PAT_LIST,\n         MATCH_ARM_LIST,\n-        NAMED_FIELD_LIST,\n         NAMED_FIELD_DEF_LIST,\n-        POS_FIELD_LIST,\n+        POS_FIELD_DEF_LIST,\n+        NAMED_FIELD_LIST,\n         ENUM_VARIANT_LIST,\n         USE_TREE_LIST,\n         TYPE_PARAM_LIST,"}, {"sha": "00c60ebf3410931f6ac6d1e48052819b5fbf1a39", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -407,7 +407,7 @@ impl<'a, N: AstNode + 'a> Iterator for AstChildren<'a, N> {\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub enum StructFlavor<'a> {\n-    Tuple(&'a PosFieldList),\n+    Tuple(&'a PosFieldDefList),\n     Named(&'a NamedFieldDefList),\n     Unit,\n }\n@@ -416,7 +416,7 @@ impl StructFlavor<'_> {\n     fn from_node<N: AstNode>(node: &N) -> StructFlavor {\n         if let Some(nfdl) = child_opt::<_, NamedFieldDefList>(node) {\n             StructFlavor::Named(nfdl)\n-        } else if let Some(pfl) = child_opt::<_, PosFieldList>(node) {\n+        } else if let Some(pfl) = child_opt::<_, PosFieldDefList>(node) {\n             StructFlavor::Tuple(pfl)\n         } else {\n             StructFlavor::Unit"}, {"sha": "3ace6533c4566285aba735b0e7db7d6b527f25c4", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -2851,68 +2851,68 @@ impl PointerType {\n     }\n }\n \n-// PosField\n+// PosFieldDef\n #[derive(Debug, PartialEq, Eq, Hash)]\n #[repr(transparent)]\n-pub struct PosField {\n+pub struct PosFieldDef {\n     pub(crate) syntax: SyntaxNode,\n }\n-unsafe impl TransparentNewType for PosField {\n+unsafe impl TransparentNewType for PosFieldDef {\n     type Repr = rowan::SyntaxNode<RaTypes>;\n }\n \n-impl AstNode for PosField {\n+impl AstNode for PosFieldDef {\n     fn cast(syntax: &SyntaxNode) -> Option<&Self> {\n         match syntax.kind() {\n-            POS_FIELD => Some(PosField::from_repr(syntax.into_repr())),\n+            POS_FIELD_DEF => Some(PosFieldDef::from_repr(syntax.into_repr())),\n             _ => None,\n         }\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n \n-impl ToOwned for PosField {\n-    type Owned = TreeArc<PosField>;\n-    fn to_owned(&self) -> TreeArc<PosField> { TreeArc::cast(self.syntax.to_owned()) }\n+impl ToOwned for PosFieldDef {\n+    type Owned = TreeArc<PosFieldDef>;\n+    fn to_owned(&self) -> TreeArc<PosFieldDef> { TreeArc::cast(self.syntax.to_owned()) }\n }\n \n \n-impl ast::VisibilityOwner for PosField {}\n-impl ast::AttrsOwner for PosField {}\n-impl PosField {\n+impl ast::VisibilityOwner for PosFieldDef {}\n+impl ast::AttrsOwner for PosFieldDef {}\n+impl PosFieldDef {\n     pub fn type_ref(&self) -> Option<&TypeRef> {\n         super::child_opt(self)\n     }\n }\n \n-// PosFieldList\n+// PosFieldDefList\n #[derive(Debug, PartialEq, Eq, Hash)]\n #[repr(transparent)]\n-pub struct PosFieldList {\n+pub struct PosFieldDefList {\n     pub(crate) syntax: SyntaxNode,\n }\n-unsafe impl TransparentNewType for PosFieldList {\n+unsafe impl TransparentNewType for PosFieldDefList {\n     type Repr = rowan::SyntaxNode<RaTypes>;\n }\n \n-impl AstNode for PosFieldList {\n+impl AstNode for PosFieldDefList {\n     fn cast(syntax: &SyntaxNode) -> Option<&Self> {\n         match syntax.kind() {\n-            POS_FIELD_LIST => Some(PosFieldList::from_repr(syntax.into_repr())),\n+            POS_FIELD_DEF_LIST => Some(PosFieldDefList::from_repr(syntax.into_repr())),\n             _ => None,\n         }\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n \n-impl ToOwned for PosFieldList {\n-    type Owned = TreeArc<PosFieldList>;\n-    fn to_owned(&self) -> TreeArc<PosFieldList> { TreeArc::cast(self.syntax.to_owned()) }\n+impl ToOwned for PosFieldDefList {\n+    type Owned = TreeArc<PosFieldDefList>;\n+    fn to_owned(&self) -> TreeArc<PosFieldDefList> { TreeArc::cast(self.syntax.to_owned()) }\n }\n \n \n-impl PosFieldList {\n-    pub fn fields(&self) -> impl Iterator<Item = &PosField> {\n+impl PosFieldDefList {\n+    pub fn fields(&self) -> impl Iterator<Item = &PosFieldDef> {\n         super::children(self)\n     }\n }"}, {"sha": "85fc79038c4df937d972718f45a7cb0fc922ac94", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -205,8 +205,8 @@ Grammar(\n         \"ENUM_VARIANT\",\n         \"NAMED_FIELD_DEF_LIST\",\n         \"NAMED_FIELD_DEF\",\n-        \"POS_FIELD_LIST\",\n-        \"POS_FIELD\",\n+        \"POS_FIELD_DEF_LIST\",\n+        \"POS_FIELD_DEF\",\n         \"ENUM_VARIANT_LIST\",\n         \"ITEM_LIST\",\n         \"ATTR\",\n@@ -269,8 +269,8 @@ Grammar(\n         ),\n         \"NamedFieldDefList\": (collections: [[\"fields\", \"NamedFieldDef\"]]),\n         \"NamedFieldDef\": ( traits: [\"VisibilityOwner\", \"NameOwner\", \"AttrsOwner\", \"DocCommentsOwner\"], options: [\"TypeRef\"] ),\n-        \"PosFieldList\": (collections: [[\"fields\", \"PosField\"]]),\n-        \"PosField\": ( traits: [\"VisibilityOwner\", \"AttrsOwner\"], options: [\"TypeRef\"]),\n+        \"PosFieldDefList\": (collections: [[\"fields\", \"PosFieldDef\"]]),\n+        \"PosFieldDef\": ( traits: [\"VisibilityOwner\", \"AttrsOwner\"], options: [\"TypeRef\"]),\n         \"EnumDef\": ( traits: [\n             \"VisibilityOwner\",\n             \"NameOwner\","}, {"sha": "ff9b38f9c25d8dd28968a18c12049b69820b0354", "filename": "crates/ra_syntax/src/grammar/items/nominal.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Fitems%2Fnominal.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -28,7 +28,7 @@ pub(super) fn struct_def(p: &mut Parser, kind: SyntaxKind) {\n         }\n         L_CURLY => named_field_def_list(p),\n         L_PAREN if kind == STRUCT_KW => {\n-            pos_field_list(p);\n+            pos_field_def_list(p);\n             // test tuple_struct_where\n             // struct Test<T>(T) where T: Clone;\n             // struct Test<T>(T);\n@@ -74,7 +74,7 @@ pub(crate) fn enum_variant_list(p: &mut Parser) {\n             name(p);\n             match p.current() {\n                 L_CURLY => named_field_def_list(p),\n-                L_PAREN => pos_field_list(p),\n+                L_PAREN => pos_field_def_list(p),\n                 EQ => {\n                     p.bump();\n                     expressions::expr(p);\n@@ -132,7 +132,7 @@ pub(crate) fn named_field_def_list(p: &mut Parser) {\n     }\n }\n \n-fn pos_field_list(p: &mut Parser) {\n+fn pos_field_def_list(p: &mut Parser) {\n     assert!(p.at(L_PAREN));\n     let m = p.start();\n     if !p.expect(L_PAREN) {\n@@ -157,12 +157,12 @@ fn pos_field_list(p: &mut Parser) {\n             break;\n         }\n         types::type_(p);\n-        m.complete(p, POS_FIELD);\n+        m.complete(p, POS_FIELD_DEF);\n \n         if !p.at(R_PAREN) {\n             p.expect(COMMA);\n         }\n     }\n     p.expect(R_PAREN);\n-    m.complete(p, POS_FIELD_LIST);\n+    m.complete(p, POS_FIELD_DEF_LIST);\n }"}, {"sha": "14f610891cfe9966512a92cfb96caaed763cd708", "filename": "crates/ra_syntax/src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -195,8 +195,8 @@ pub enum SyntaxKind {\n     ENUM_VARIANT,\n     NAMED_FIELD_DEF_LIST,\n     NAMED_FIELD_DEF,\n-    POS_FIELD_LIST,\n-    POS_FIELD,\n+    POS_FIELD_DEF_LIST,\n+    POS_FIELD_DEF,\n     ENUM_VARIANT_LIST,\n     ITEM_LIST,\n     ATTR,\n@@ -458,8 +458,8 @@ impl SyntaxKind {\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD_DEF_LIST => &SyntaxInfo { name: \"NAMED_FIELD_DEF_LIST\" },\n             NAMED_FIELD_DEF => &SyntaxInfo { name: \"NAMED_FIELD_DEF\" },\n-            POS_FIELD_LIST => &SyntaxInfo { name: \"POS_FIELD_LIST\" },\n-            POS_FIELD => &SyntaxInfo { name: \"POS_FIELD\" },\n+            POS_FIELD_DEF_LIST => &SyntaxInfo { name: \"POS_FIELD_DEF_LIST\" },\n+            POS_FIELD_DEF => &SyntaxInfo { name: \"POS_FIELD_DEF\" },\n             ENUM_VARIANT_LIST => &SyntaxInfo { name: \"ENUM_VARIANT_LIST\" },\n             ITEM_LIST => &SyntaxInfo { name: \"ITEM_LIST\" },\n             ATTR => &SyntaxInfo { name: \"ATTR\" },"}, {"sha": "1ec15194c0a43089d4de36cb99528fadb5e792c2", "filename": "crates/ra_syntax/tests/data/parser/err/0013_invalid_type.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0013_invalid_type.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -7,10 +7,10 @@ SOURCE_FILE@[0; 86)\n     WHITESPACE@[10; 11)\n     NAME@[11; 16)\n       IDENT@[11; 16) \"Cache\"\n-    POS_FIELD_LIST@[16; 72)\n+    POS_FIELD_DEF_LIST@[16; 72)\n       L_PAREN@[16; 17)\n       WHITESPACE@[17; 22)\n-      POS_FIELD@[22; 68)\n+      POS_FIELD_DEF@[22; 68)\n         PATH_TYPE@[22; 68)\n           PATH@[22; 68)\n             PATH_SEGMENT@[22; 68)\n@@ -55,7 +55,7 @@ SOURCE_FILE@[0; 86)\n                                         err: `expected R_ANGLE`\n                                         err: `expected COMMA`\n       WHITESPACE@[68; 69)\n-      POS_FIELD@[69; 72)\n+      POS_FIELD_DEF@[69; 72)\n         PATH_TYPE@[69; 72)\n           PATH@[69; 72)\n             PATH_SEGMENT@[69; 72)"}, {"sha": "e0824ca56e41b1c14c4cbc67f1390d4d08fd3a1e", "filename": "crates/ra_syntax/tests/data/parser/err/0025_nope.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Ferr%2F0025_nope.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -28,9 +28,9 @@ SOURCE_FILE@[0; 575)\n           ENUM_VARIANT@[50; 62)\n             NAME@[50; 54)\n               IDENT@[50; 54) \"Var2\"\n-            POS_FIELD_LIST@[54; 62)\n+            POS_FIELD_DEF_LIST@[54; 62)\n               L_PAREN@[54; 55)\n-              POS_FIELD@[55; 61)\n+              POS_FIELD_DEF@[55; 61)\n                 PATH_TYPE@[55; 61)\n                   PATH@[55; 61)\n                     PATH_SEGMENT@[55; 61)\n@@ -151,9 +151,9 @@ SOURCE_FILE@[0; 575)\n                 ENUM_VARIANT@[363; 372)\n                   NAME@[363; 367)\n                     IDENT@[363; 367) \"Nope\"\n-                  POS_FIELD_LIST@[367; 372)\n+                  POS_FIELD_DEF_LIST@[367; 372)\n                     L_PAREN@[367; 368)\n-                    POS_FIELD@[368; 371)\n+                    POS_FIELD_DEF@[368; 371)\n                       PATH_TYPE@[368; 371)\n                         PATH@[368; 371)\n                           PATH_SEGMENT@[368; 371)"}, {"sha": "6247729f63b3e82952035c54e375e8f6eb04b13f", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0083_struct_items.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0083_struct_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0083_struct_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0083_struct_items.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -21,7 +21,7 @@ SOURCE_FILE@[0; 106)\n     WHITESPACE@[32; 33)\n     NAME@[33; 36)\n       IDENT@[33; 36) \"Foo\"\n-    POS_FIELD_LIST@[36; 38)\n+    POS_FIELD_DEF_LIST@[36; 38)\n       L_PAREN@[36; 37)\n       R_PAREN@[37; 38)\n     SEMI@[38; 39)\n@@ -31,17 +31,17 @@ SOURCE_FILE@[0; 106)\n     WHITESPACE@[46; 47)\n     NAME@[47; 50)\n       IDENT@[47; 50) \"Foo\"\n-    POS_FIELD_LIST@[50; 65)\n+    POS_FIELD_DEF_LIST@[50; 65)\n       L_PAREN@[50; 51)\n-      POS_FIELD@[51; 57)\n+      POS_FIELD_DEF@[51; 57)\n         PATH_TYPE@[51; 57)\n           PATH@[51; 57)\n             PATH_SEGMENT@[51; 57)\n               NAME_REF@[51; 57)\n                 IDENT@[51; 57) \"String\"\n       COMMA@[57; 58)\n       WHITESPACE@[58; 59)\n-      POS_FIELD@[59; 64)\n+      POS_FIELD_DEF@[59; 64)\n         PATH_TYPE@[59; 64)\n           PATH@[59; 64)\n             PATH_SEGMENT@[59; 64)"}, {"sha": "4f439f21c9e04fc67460c798a9b6c64f4cd1bee0", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0114_tuple_struct_where.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0114_tuple_struct_where.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -10,9 +10,9 @@ SOURCE_FILE@[0; 53)\n         NAME@[12; 13)\n           IDENT@[12; 13) \"T\"\n       R_ANGLE@[13; 14)\n-    POS_FIELD_LIST@[14; 17)\n+    POS_FIELD_DEF_LIST@[14; 17)\n       L_PAREN@[14; 15)\n-      POS_FIELD@[15; 16)\n+      POS_FIELD_DEF@[15; 16)\n         PATH_TYPE@[15; 16)\n           PATH@[15; 16)\n             PATH_SEGMENT@[15; 16)\n@@ -49,9 +49,9 @@ SOURCE_FILE@[0; 53)\n         NAME@[46; 47)\n           IDENT@[46; 47) \"T\"\n       R_ANGLE@[47; 48)\n-    POS_FIELD_LIST@[48; 51)\n+    POS_FIELD_DEF_LIST@[48; 51)\n       L_PAREN@[48; 49)\n-      POS_FIELD@[49; 50)\n+      POS_FIELD_DEF@[49; 50)\n         PATH_TYPE@[49; 50)\n           PATH@[49; 50)\n             PATH_SEGMENT@[49; 50)"}, {"sha": "4da84ba483ae49ed95a8145cb90bd8af0a98f50f", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0115_pos_field_attrs.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0115_pos_field_attrs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0115_pos_field_attrs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0115_pos_field_attrs.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -5,10 +5,10 @@ SOURCE_FILE@[0; 60)\n     NAME@[7; 8)\n       IDENT@[7; 8) \"S\"\n     WHITESPACE@[8; 9)\n-    POS_FIELD_LIST@[9; 58)\n+    POS_FIELD_DEF_LIST@[9; 58)\n       L_PAREN@[9; 10)\n       WHITESPACE@[10; 15)\n-      POS_FIELD@[15; 55)\n+      POS_FIELD_DEF@[15; 55)\n         ATTR@[15; 43)\n           POUND@[15; 16)\n           TOKEN_TREE@[16; 43)"}, {"sha": "d021d6de6d4cd995cb9717c2468943b030c6998c", "filename": "crates/ra_syntax/tests/data/parser/ok/0016_struct_flavors.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0016_struct_flavors.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0016_struct_flavors.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0016_struct_flavors.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -21,7 +21,7 @@ SOURCE_FILE@[0; 97)\n     WHITESPACE@[28; 29)\n     NAME@[29; 30)\n       IDENT@[29; 30) \"C\"\n-    POS_FIELD_LIST@[30; 32)\n+    POS_FIELD_DEF_LIST@[30; 32)\n       L_PAREN@[30; 31)\n       R_PAREN@[31; 32)\n     SEMI@[32; 33)\n@@ -68,9 +68,9 @@ SOURCE_FILE@[0; 97)\n     WHITESPACE@[82; 83)\n     NAME@[83; 84)\n       IDENT@[83; 84) \"E\"\n-    POS_FIELD_LIST@[84; 95)\n+    POS_FIELD_DEF_LIST@[84; 95)\n       L_PAREN@[84; 85)\n-      POS_FIELD@[85; 90)\n+      POS_FIELD_DEF@[85; 90)\n         VISIBILITY@[85; 88)\n           PUB_KW@[85; 88)\n         WHITESPACE@[88; 89)\n@@ -81,7 +81,7 @@ SOURCE_FILE@[0; 97)\n                 IDENT@[89; 90) \"x\"\n       COMMA@[90; 91)\n       WHITESPACE@[91; 92)\n-      POS_FIELD@[92; 93)\n+      POS_FIELD_DEF@[92; 93)\n         PATH_TYPE@[92; 93)\n           PATH@[92; 93)\n             PATH_SEGMENT@[92; 93)"}, {"sha": "05480c81b0c8aaae9bb343e519990c131a01deb4", "filename": "crates/ra_syntax/tests/data/parser/ok/0018_struct_type_params.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0018_struct_type_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0018_struct_type_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0018_struct_type_params.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -23,9 +23,9 @@ SOURCE_FILE@[0; 290)\n         NAME@[24; 25)\n           IDENT@[24; 25) \"T\"\n       R_ANGLE@[25; 26)\n-    POS_FIELD_LIST@[26; 31)\n+    POS_FIELD_DEF_LIST@[26; 31)\n       L_PAREN@[26; 27)\n-      POS_FIELD@[27; 30)\n+      POS_FIELD_DEF@[27; 30)\n         PATH_TYPE@[27; 30)\n           PATH@[27; 30)\n             PATH_SEGMENT@[27; 30)"}, {"sha": "2ac55cfbc0005cbddca5d200e3b608e91880dde2", "filename": "crates/ra_syntax/tests/data/parser/ok/0019_enums.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0019_enums.txt", "raw_url": "https://github.com/rust-lang/rust/raw/23172a116c3cc4ca9a692dfdd05051d1a4aee2b2/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0019_enums.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Fok%2F0019_enums.txt?ref=23172a116c3cc4ca9a692dfdd05051d1a4aee2b2", "patch": "@@ -131,9 +131,9 @@ SOURCE_FILE@[0; 182)\n       ENUM_VARIANT@[162; 169)\n         NAME@[162; 163)\n           IDENT@[162; 163) \"D\"\n-        POS_FIELD_LIST@[163; 169)\n+        POS_FIELD_DEF_LIST@[163; 169)\n           L_PAREN@[163; 164)\n-          POS_FIELD@[164; 167)\n+          POS_FIELD_DEF@[164; 167)\n             PATH_TYPE@[164; 167)\n               PATH@[164; 167)\n                 PATH_SEGMENT@[164; 167)\n@@ -146,7 +146,7 @@ SOURCE_FILE@[0; 182)\n       ENUM_VARIANT@[175; 178)\n         NAME@[175; 176)\n           IDENT@[175; 176) \"E\"\n-        POS_FIELD_LIST@[176; 178)\n+        POS_FIELD_DEF_LIST@[176; 178)\n           L_PAREN@[176; 177)\n           R_PAREN@[177; 178)\n       COMMA@[178; 179)"}]}