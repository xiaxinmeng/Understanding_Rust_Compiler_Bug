{"sha": "411f94c3b903abe548574c9de8e939a28cd86afc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMWY5NGMzYjkwM2FiZTU0ODU3NGM5ZGU4ZTkzOWEyOGNkODZhZmM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-13T17:01:19Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-14T12:05:56Z"}, "message": "move E0623 into the new error code format", "tree": {"sha": "2dd6cb46629a3716aa731d2970082d4761b0f3ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dd6cb46629a3716aa731d2970082d4761b0f3ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/411f94c3b903abe548574c9de8e939a28cd86afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/411f94c3b903abe548574c9de8e939a28cd86afc", "html_url": "https://github.com/rust-lang/rust/commit/411f94c3b903abe548574c9de8e939a28cd86afc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/411f94c3b903abe548574c9de8e939a28cd86afc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "html_url": "https://github.com/rust-lang/rust/commit/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "e8d5499ac58bd35d6223a419df9ac3d916c6a835", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/411f94c3b903abe548574c9de8e939a28cd86afc/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/411f94c3b903abe548574c9de8e939a28cd86afc/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=411f94c3b903abe548574c9de8e939a28cd86afc", "patch": "@@ -338,6 +338,7 @@ E0619: include_str!(\"./error_codes/E0619.md\"),\n E0620: include_str!(\"./error_codes/E0620.md\"),\n E0621: include_str!(\"./error_codes/E0621.md\"),\n E0622: include_str!(\"./error_codes/E0622.md\"),\n+E0623: include_str!(\"./error_codes/E0623.md\"),\n E0624: include_str!(\"./error_codes/E0624.md\"),\n E0626: include_str!(\"./error_codes/E0626.md\"),\n E0633: include_str!(\"./error_codes/E0633.md\"),\n@@ -565,7 +566,6 @@ E0743: include_str!(\"./error_codes/E0743.md\"),\n //  E0611, // merged into E0616\n //  E0612, // merged into E0609\n //  E0613, // Removed (merged with E0609)\n-    E0623, // lifetime mismatch where both parameters are anonymous regions\n     E0625, // thread-local statics cannot be accessed at compile-time\n     E0627, // yield statement outside of generator literal\n     E0628, // generators cannot have explicit parameters"}, {"sha": "1290edd0a0e5a3401434fef49f66cf68398da033", "filename": "src/librustc_error_codes/error_codes/E0623.md", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/411f94c3b903abe548574c9de8e939a28cd86afc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0623.md", "raw_url": "https://github.com/rust-lang/rust/raw/411f94c3b903abe548574c9de8e939a28cd86afc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0623.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0623.md?ref=411f94c3b903abe548574c9de8e939a28cd86afc", "patch": "@@ -0,0 +1,41 @@\n+A lifetime didn't match what was expected.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0623\n+struct Foo<'a> {\n+    x: &'a isize,\n+}\n+\n+fn bar<'short, 'long>(c: Foo<'short>, l: &'long isize) {\n+    let _: Foo<'long> = c; // error!\n+}\n+```\n+\n+In this example, we tried to set a value with an incompatible lifetime to\n+another one (`'long` is unrelated to `'short`). We can solve this issue in\n+two different ways:\n+\n+Either we make `'short` live at least as long as `'long`:\n+\n+```\n+struct Foo<'a> {\n+    x: &'a isize,\n+}\n+\n+// we set 'short to live at least as long as 'long\n+fn bar<'short: 'long, 'long>(c: Foo<'short>, l: &'long isize) {\n+    let _: Foo<'long> = c; // ok!\n+}\n+```\n+\n+Or we use only one lifetime:\n+\n+```\n+struct Foo<'a> {\n+    x: &'a isize,\n+}\n+fn bar<'short>(c: Foo<'short>, l: &'short isize) {\n+    let _: Foo<'short> = c; // ok!\n+}\n+```"}]}