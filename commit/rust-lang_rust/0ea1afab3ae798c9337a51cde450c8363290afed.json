{"sha": "0ea1afab3ae798c9337a51cde450c8363290afed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYTFhZmFiM2FlNzk4YzkzMzdhNTFjZGU0NTBjODM2MzI5MGFmZWQ=", "commit": {"author": {"name": "Andrew Audibert", "email": "aaudibert10@gmail.com", "date": "2018-07-30T04:02:05Z"}, "committer": {"name": "Andrew Audibert", "email": "andrew@alluxio.com", "date": "2018-07-30T04:37:31Z"}, "message": "Lint using identity into_iter conversion", "tree": {"sha": "48cc653958bd28164c146e5c9e40df2a38170555", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48cc653958bd28164c146e5c9e40df2a38170555"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ea1afab3ae798c9337a51cde450c8363290afed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea1afab3ae798c9337a51cde450c8363290afed", "html_url": "https://github.com/rust-lang/rust/commit/0ea1afab3ae798c9337a51cde450c8363290afed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ea1afab3ae798c9337a51cde450c8363290afed/comments", "author": {"login": "aaudiber", "id": 3455177, "node_id": "MDQ6VXNlcjM0NTUxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3455177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaudiber", "html_url": "https://github.com/aaudiber", "followers_url": "https://api.github.com/users/aaudiber/followers", "following_url": "https://api.github.com/users/aaudiber/following{/other_user}", "gists_url": "https://api.github.com/users/aaudiber/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaudiber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaudiber/subscriptions", "organizations_url": "https://api.github.com/users/aaudiber/orgs", "repos_url": "https://api.github.com/users/aaudiber/repos", "events_url": "https://api.github.com/users/aaudiber/events{/privacy}", "received_events_url": "https://api.github.com/users/aaudiber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aaudiber", "id": 3455177, "node_id": "MDQ6VXNlcjM0NTUxNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3455177?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aaudiber", "html_url": "https://github.com/aaudiber", "followers_url": "https://api.github.com/users/aaudiber/followers", "following_url": "https://api.github.com/users/aaudiber/following{/other_user}", "gists_url": "https://api.github.com/users/aaudiber/gists{/gist_id}", "starred_url": "https://api.github.com/users/aaudiber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aaudiber/subscriptions", "organizations_url": "https://api.github.com/users/aaudiber/orgs", "repos_url": "https://api.github.com/users/aaudiber/repos", "events_url": "https://api.github.com/users/aaudiber/events{/privacy}", "received_events_url": "https://api.github.com/users/aaudiber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4010788b3a0a7c2add7187c1e0021454c3331f25", "url": "https://api.github.com/repos/rust-lang/rust/commits/4010788b3a0a7c2add7187c1e0021454c3331f25", "html_url": "https://github.com/rust-lang/rust/commit/4010788b3a0a7c2add7187c1e0021454c3331f25"}], "stats": {"total": 43, "additions": 34, "deletions": 9}, "files": [{"sha": "cf05583d85e39b9829e4a85f6f1df75aa4afc9b4", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ea1afab3ae798c9337a51cde450c8363290afed/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ea1afab3ae798c9337a51cde450c8363290afed/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=0ea1afab3ae798c9337a51cde450c8363290afed", "patch": "@@ -5,7 +5,7 @@ use syntax::ast::NodeId;\n use crate::utils::{in_macro, match_def_path, match_trait_method, same_tys, snippet, span_lint_and_then};\n use crate::utils::{opt_def_id, paths, resolve_node};\n \n-/// **What it does:** Checks for always-identical `Into`/`From` conversions.\n+/// **What it does:** Checks for always-identical `Into`/`From`/`IntoIter` conversions.\n ///\n /// **Why is this bad?** Redundant code.\n ///\n@@ -19,7 +19,7 @@ use crate::utils::{opt_def_id, paths, resolve_node};\n declare_clippy_lint! {\n     pub IDENTITY_CONVERSION,\n     complexity,\n-    \"using always-identical `Into`/`From` conversions\"\n+    \"using always-identical `Into`/`From`/`IntoIter` conversions\"\n }\n \n #[derive(Default)]\n@@ -67,6 +67,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for IdentityConversion {\n                         });\n                     }\n                 }\n+                if match_trait_method(cx, e, &paths::INTO_ITERATOR) && &*name.ident.as_str() == \"into_iter\" {\n+                    let a = cx.tables.expr_ty(e);\n+                    let b = cx.tables.expr_ty(&args[0]);\n+                    if same_tys(cx, a, b) {\n+                        let sugg = snippet(cx, args[0].span, \"<expr>\").into_owned();\n+                        span_lint_and_then(cx, IDENTITY_CONVERSION, e.span, \"identical conversion\", |db| {\n+                            db.span_suggestion(e.span, \"consider removing `.into_iter()`\", sugg);\n+                        });\n+                    }\n+                }\n             },\n \n             ExprKind::Call(ref path, ref args) => if let ExprKind::Path(ref qpath) = path.node {"}, {"sha": "9ab81f1b1cbd3e3dfd5d7445dd40278987540f2c", "filename": "tests/ui/identity_conversion.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0ea1afab3ae798c9337a51cde450c8363290afed/tests%2Fui%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ea1afab3ae798c9337a51cde450c8363290afed/tests%2Fui%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.rs?ref=0ea1afab3ae798c9337a51cde450c8363290afed", "patch": "@@ -32,9 +32,12 @@ fn main() {\n     {\n         let _: String = \"foo\".into();\n         let _ = String::from(\"foo\");\n+        let _ = \"\".lines().into_iter();\n     }\n \n     let _: String = \"foo\".to_string().into();\n     let _: String = From::from(\"foo\".to_string());\n     let _ = String::from(\"foo\".to_string());\n+    let _ = \"\".lines().into_iter();\n+    let _ = vec![1, 2, 3].into_iter().into_iter();\n }"}, {"sha": "f7993d69c5014e2b4fe8c46fe9479d20a91d8424", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0ea1afab3ae798c9337a51cde450c8363290afed/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ea1afab3ae798c9337a51cde450c8363290afed/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=0ea1afab3ae798c9337a51cde450c8363290afed", "patch": "@@ -23,22 +23,34 @@ error: identical conversion\n    |                      ^^^^^^^^^^^ help: consider removing `.into()`: `0i32`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:37:21\n+  --> $DIR/identity_conversion.rs:38:21\n    |\n-37 |     let _: String = \"foo\".to_string().into();\n+38 |     let _: String = \"foo\".to_string().into();\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:38:21\n+  --> $DIR/identity_conversion.rs:39:21\n    |\n-38 |     let _: String = From::from(\"foo\".to_string());\n+39 |     let _: String = From::from(\"foo\".to_string());\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `From::from()`: `\"foo\".to_string()`\n \n error: identical conversion\n-  --> $DIR/identity_conversion.rs:39:13\n+  --> $DIR/identity_conversion.rs:40:13\n    |\n-39 |     let _ = String::from(\"foo\".to_string());\n+40 |     let _ = String::from(\"foo\".to_string());\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `\"foo\".to_string()`\n \n-error: aborting due to 6 previous errors\n+error: identical conversion\n+  --> $DIR/identity_conversion.rs:41:13\n+   |\n+41 |     let _ = \"\".lines().into_iter();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `\"\".lines()`\n+\n+error: identical conversion\n+  --> $DIR/identity_conversion.rs:42:13\n+   |\n+42 |     let _ = vec![1, 2, 3].into_iter().into_iter();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `vec![1, 2, 3].into_iter()`\n+\n+error: aborting due to 8 previous errors\n "}]}