{"sha": "70ab314741dc1b0fc943e03a0c0ba6cb68308831", "node_id": "C_kwDOAAsO6NoAKDcwYWIzMTQ3NDFkYzFiMGZjOTQzZTAzYTBjMGJhNmNiNjgzMDg4MzE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-14T06:21:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-14T06:21:40Z"}, "message": "Rollup merge of #111534 - aDotInTheVoid:ita-rdj, r=fmease,GuillaumeGomez\n\nrustdoc-json: Add tests for `#![feature(inherent_associated_types)]`\n\nFollow up to #109410, CC `@fmease`\n\nr? `@GuillaumeGomez`", "tree": {"sha": "8682716d86b48df4743d0b3a24af0fef7736aaa1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8682716d86b48df4743d0b3a24af0fef7736aaa1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70ab314741dc1b0fc943e03a0c0ba6cb68308831", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYH30CRBK7hj4Ov3rIwAAj/AIAEU6FswwLkRrGtY+HU68aiJv\nuFduS8FUqXA8J+8uh3rtoPX5Fx+WmzZ+iNX1ChAipY34pEoFpXX4X0vxHVJu9ekK\nOdtkDIOczXPV+1reQZz3tEWMVxvBa+ngCPemPieEQUQSsPrjP2T/87j9cZlGFeiU\nDoT2rp79ynNK6g2XFrd4n+D99JmMNSq5r8D1zfsB9cn8gMU5YnUJ3vXfSevZu/Z4\nXPPJ2dkpQn71YMEogK9VYu3pe7s1+MG55NNNF6sl9N3f2zhSAEVabjJhytp3a19X\na+w6wQIn+q4k0ozbw+Sy0RTq/QbopANLjuzOp85Wg0oULPUSjlujfNnZa62ZAAQ=\n=4ySM\n-----END PGP SIGNATURE-----\n", "payload": "tree 8682716d86b48df4743d0b3a24af0fef7736aaa1\nparent d7f742532a16ec3a2db3b47e02fdbd6bbbbf9521\nparent c271c708e2d238bcc19c21fc810c9ed6f8baf324\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684045300 +0200\ncommitter GitHub <noreply@github.com> 1684045300 +0200\n\nRollup merge of #111534 - aDotInTheVoid:ita-rdj, r=fmease,GuillaumeGomez\n\nrustdoc-json: Add tests for `#![feature(inherent_associated_types)]`\n\nFollow up to #109410, CC `@fmease`\n\nr? `@GuillaumeGomez`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70ab314741dc1b0fc943e03a0c0ba6cb68308831", "html_url": "https://github.com/rust-lang/rust/commit/70ab314741dc1b0fc943e03a0c0ba6cb68308831", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70ab314741dc1b0fc943e03a0c0ba6cb68308831/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7f742532a16ec3a2db3b47e02fdbd6bbbbf9521", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7f742532a16ec3a2db3b47e02fdbd6bbbbf9521", "html_url": "https://github.com/rust-lang/rust/commit/d7f742532a16ec3a2db3b47e02fdbd6bbbbf9521"}, {"sha": "c271c708e2d238bcc19c21fc810c9ed6f8baf324", "url": "https://api.github.com/repos/rust-lang/rust/commits/c271c708e2d238bcc19c21fc810c9ed6f8baf324", "html_url": "https://github.com/rust-lang/rust/commit/c271c708e2d238bcc19c21fc810c9ed6f8baf324"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "ed63def93df0cfbf3d59f5bbdbdeced877b969a0", "filename": "tests/rustdoc-json/type/inherent_associated_type.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type.rs?ref=70ab314741dc1b0fc943e03a0c0ba6cb68308831", "patch": "@@ -0,0 +1,29 @@\n+// ignore-tidy-linelength\n+#![feature(inherent_associated_types)]\n+#![feature(no_core)]\n+#![allow(incomplete_features)]\n+#![no_core]\n+\n+// @set OwnerMetadata = '$.index[*][?(@.name==\"OwnerMetadata\")].id'\n+pub struct OwnerMetadata;\n+// @set Owner = '$.index[*][?(@.name==\"Owner\")].id'\n+pub struct Owner;\n+\n+pub fn create() -> Owner::Metadata {\n+    OwnerMetadata\n+}\n+// @is '$.index[*][?(@.name==\"create\")].inner.decl.output.kind' '\"qualified_path\"'\n+// @is '$.index[*][?(@.name==\"create\")].inner.decl.output.inner.name' '\"Metadata\"'\n+// @is '$.index[*][?(@.name==\"create\")].inner.decl.output.inner.trait' null\n+// @is '$.index[*][?(@.name==\"create\")].inner.decl.output.inner.self_type.kind' '\"resolved_path\"'\n+// @is '$.index[*][?(@.name==\"create\")].inner.decl.output.inner.self_type.inner.id' $Owner\n+\n+/// impl\n+impl Owner {\n+    /// iat\n+    pub type Metadata = OwnerMetadata;\n+}\n+// @set iat = '$.index[*][?(@.docs==\"iat\")].id'\n+// @is '$.index[*][?(@.docs==\"impl\")].inner.items[*]' $iat\n+// @is '$.index[*][?(@.docs==\"iat\")].kind' '\"assoc_type\"'\n+// @is '$.index[*][?(@.docs==\"iat\")].inner.default.inner.id' $OwnerMetadata"}, {"sha": "a089600b692d6395a3cc1618c3864b7bba15c4dc", "filename": "tests/rustdoc-json/type/inherent_associated_type_bound.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_bound.rs?ref=70ab314741dc1b0fc943e03a0c0ba6cb68308831", "patch": "@@ -0,0 +1,21 @@\n+// ignore-tidy-linelength\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+// @set Carrier = '$.index[*][?(@.name==\"Carrier\")].id'\n+pub struct Carrier<'a>(&'a ());\n+\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.kind' '\"function_pointer\"'\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.generic_params[*].name' \\\"\"'b\"\\\"\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].kind' '\"qualified_path\"'\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].inner.self_type.inner.id' $Carrier\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].inner.self_type.inner.args.angle_bracketed.args[0].lifetime' \\\"\"'b\"\\\"\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].inner.name' '\"Focus\"'\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].inner.trait' null\n+// @is '$.index[*][?(@.name==\"User\")].inner.type.inner.decl.inputs[0][1].inner.args.angle_bracketed.args[0].type.inner' '\"i32\"'\n+\n+pub type User = for<'b> fn(Carrier<'b>::Focus<i32>);\n+\n+impl<'a> Carrier<'a> {\n+    pub type Focus<T> = &'a mut T;\n+}"}, {"sha": "30c68bfe56c917d0c88cb45b22062280588e9106", "filename": "tests/rustdoc-json/type/inherent_associated_type_projections.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_projections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ab314741dc1b0fc943e03a0c0ba6cb68308831/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_projections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Ftype%2Finherent_associated_type_projections.rs?ref=70ab314741dc1b0fc943e03a0c0ba6cb68308831", "patch": "@@ -0,0 +1,33 @@\n+// ignore-tidy-linelength\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+// @set Parametrized = '$.index[*][?(@.name==\"Parametrized\")].id'\n+pub struct Parametrized<T>(T);\n+\n+// @is '$.index[*][?(@.name==\"Test\")].inner.type.kind' '\"qualified_path\"'\n+// @is '$.index[*][?(@.name==\"Test\")].inner.type.inner.self_type.inner.id' $Parametrized\n+// @is '$.index[*][?(@.name==\"Test\")].inner.type.inner.self_type.inner.args.angle_bracketed.args[0].type' '{\"inner\": \"i32\", \"kind\": \"primitive\"}'\n+// @is '$.index[*][?(@.name==\"Test\")].inner.type.inner.name' '\"Proj\"'\n+// @is '$.index[*][?(@.name==\"Test\")].inner.type.inner.trait' null\n+pub type Test = Parametrized<i32>::Proj;\n+\n+/// param_bool\n+impl Parametrized<bool> {\n+    /// param_bool_proj\n+    pub type Proj = ();\n+}\n+\n+/// param_i32\n+impl Parametrized<i32> {\n+    /// param_i32_proj\n+    pub type Proj = String;\n+}\n+\n+// @set param_bool = '$.index[*][?(@.docs==\"param_bool\")].id'\n+// @set param_i32 = '$.index[*][?(@.docs==\"param_i32\")].id'\n+// @set param_bool_proj = '$.index[*][?(@.docs==\"param_bool_proj\")].id'\n+// @set param_i32_proj = '$.index[*][?(@.docs==\"param_i32_proj\")].id'\n+\n+// @is '$.index[*][?(@.docs==\"param_bool\")].inner.items[*]' $param_bool_proj\n+// @is '$.index[*][?(@.docs==\"param_i32\")].inner.items[*]' $param_i32_proj"}]}