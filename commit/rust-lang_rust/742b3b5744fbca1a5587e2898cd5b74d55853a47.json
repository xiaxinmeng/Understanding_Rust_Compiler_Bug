{"sha": "742b3b5744fbca1a5587e2898cd5b74d55853a47", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MmIzYjU3NDRmYmNhMWE1NTg3ZTI4OThjZDViNzRkNTU4NTNhNDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-16T17:04:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-16T17:04:39Z"}, "message": "Merge #3171\n\n3171: Enable profiling for bench r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "bf80d0d3a0d05f94732cddfb25eeb857b0cc8005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf80d0d3a0d05f94732cddfb25eeb857b0cc8005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/742b3b5744fbca1a5587e2898cd5b74d55853a47", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeSXYnCRBK7hj4Ov3rIwAAdHIIAHdKUzxB/CirSXlpu5WiMD/N\n5mqmuXvD8xQCNZfw7941OGg7MqwNxUi3Pf85nAsgCc966B9ChR+rbJ0dRnaRb0PJ\nPPXxSlOnef6no8j4gnJVfzr8r9vEYveR8XSL59lj7PO/vHyrFF1NYt0StDEDMtDM\nuB4YFE/w78vhHSCzh/dNKn6LANEt3QCOD3XybRyyRRfmNyY8gYa9Mjccn9ibF1Wo\nRGrAAZq2NBJRTUatQhTb3o6o+CMs3tIz2ZJ9F5eG/YavkBuXww8IO3wc1rI0qwST\nm+4Sr7ElC6ccfWiRLpHp8ViYy0ExL4Hf1OD922wy8O4Sq17zhW9WfAj3RaGOTRc=\n=Uzfx\n-----END PGP SIGNATURE-----\n", "payload": "tree bf80d0d3a0d05f94732cddfb25eeb857b0cc8005\nparent b98967d7658e2475d3b58d57950b8d1fb74156fa\nparent 98cc51580d0b8a6662f0155d8a45a8cfff469d72\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1581872679 +0000\ncommitter GitHub <noreply@github.com> 1581872679 +0000\n\nMerge #3171\n\n3171: Enable profiling for bench r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/742b3b5744fbca1a5587e2898cd5b74d55853a47", "html_url": "https://github.com/rust-lang/rust/commit/742b3b5744fbca1a5587e2898cd5b74d55853a47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/742b3b5744fbca1a5587e2898cd5b74d55853a47/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b98967d7658e2475d3b58d57950b8d1fb74156fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b98967d7658e2475d3b58d57950b8d1fb74156fa", "html_url": "https://github.com/rust-lang/rust/commit/b98967d7658e2475d3b58d57950b8d1fb74156fa"}, {"sha": "98cc51580d0b8a6662f0155d8a45a8cfff469d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/98cc51580d0b8a6662f0155d8a45a8cfff469d72", "html_url": "https://github.com/rust-lang/rust/commit/98cc51580d0b8a6662f0155d8a45a8cfff469d72"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "764df6b9efd60ce610d743cab93ef6040eab2e07", "filename": "crates/ra_cli/src/analysis_bench.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_bench.rs?ref=742b3b5744fbca1a5587e2898cd5b74d55853a47", "patch": "@@ -20,6 +20,8 @@ pub(crate) enum Op {\n }\n \n pub(crate) fn run(verbose: bool, path: &Path, op: Op) -> Result<()> {\n+    ra_prof::init();\n+\n     let start = Instant::now();\n     eprint!(\"loading: \");\n     let (mut host, roots) = ra_batch::load_cargo(path)?;"}, {"sha": "ed2eaabd4ca96b488b140f82b3622b783f091cc5", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=742b3b5744fbca1a5587e2898cd5b74d55853a47", "patch": "@@ -15,13 +15,8 @@ fn main() -> Result<()> {\n \n fn setup_logging() -> Result<()> {\n     std::env::set_var(\"RUST_BACKTRACE\", \"short\");\n-\n     env_logger::try_init()?;\n-\n-    ra_prof::set_filter(match std::env::var(\"RA_PROFILE\") {\n-        Ok(spec) => ra_prof::Filter::from_spec(&spec),\n-        Err(_) => ra_prof::Filter::disabled(),\n-    });\n+    ra_prof::init();\n     Ok(())\n }\n "}, {"sha": "c0bfbc2ee1415efa1d14682624f7fc7f1b2e1507", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742b3b5744fbca1a5587e2898cd5b74d55853a47/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=742b3b5744fbca1a5587e2898cd5b74d55853a47", "patch": "@@ -26,6 +26,13 @@ pub use crate::memory_usage::{Bytes, MemoryUsage};\n #[global_allocator]\n static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;\n \n+pub fn init() {\n+    set_filter(match std::env::var(\"RA_PROFILE\") {\n+        Ok(spec) => Filter::from_spec(&spec),\n+        Err(_) => Filter::disabled(),\n+    });\n+}\n+\n /// Set profiling filter. It specifies descriptions allowed to profile.\n /// This is helpful when call stack has too many nested profiling scopes.\n /// Additionally filter can specify maximum depth of profiling scopes nesting."}]}