{"sha": "d1ed6cce6ca875b3902f34c9979cf75afa403fed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZWQ2Y2NlNmNhODc1YjM5MDJmMzRjOTk3OWNmNzVhZmE0MDNmZWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-02-18T18:37:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-02-27T12:00:30Z"}, "message": "Lint passes: add check_where_predicate and check_poly_trait_ref", "tree": {"sha": "7af5685ff6ef8ca58d8e50a5d451f91086da3495", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7af5685ff6ef8ca58d8e50a5d451f91086da3495"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1ed6cce6ca875b3902f34c9979cf75afa403fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ed6cce6ca875b3902f34c9979cf75afa403fed", "html_url": "https://github.com/rust-lang/rust/commit/d1ed6cce6ca875b3902f34c9979cf75afa403fed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1ed6cce6ca875b3902f34c9979cf75afa403fed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29f5c699b11a6a148f097f82eaa05202f8799bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f5c699b11a6a148f097f82eaa05202f8799bbc", "html_url": "https://github.com/rust-lang/rust/commit/29f5c699b11a6a148f097f82eaa05202f8799bbc"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "010534d6bf8284a71247e2862232e17c3795900c", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/d1ed6cce6ca875b3902f34c9979cf75afa403fed/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ed6cce6ca875b3902f34c9979cf75afa403fed/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=d1ed6cce6ca875b3902f34c9979cf75afa403fed", "patch": "@@ -793,6 +793,17 @@ impl<'a, 'tcx> hir_visit::Visitor<'tcx> for LateContext<'a, 'tcx> {\n         hir_visit::walk_generics(self, g);\n     }\n \n+    fn visit_where_predicate(&mut self, p: &'tcx hir::WherePredicate) {\n+        run_lints!(self, check_where_predicate, late_passes, p);\n+        hir_visit::walk_where_predicate(self, p);\n+    }\n+\n+    fn visit_poly_trait_ref(&mut self, t: &'tcx hir::PolyTraitRef,\n+                            m: hir::TraitBoundModifier) {\n+        run_lints!(self, check_poly_trait_ref, late_passes, t, m);\n+        hir_visit::walk_poly_trait_ref(self, t, m);\n+    }\n+\n     fn visit_trait_item(&mut self, trait_item: &'tcx hir::TraitItem) {\n         let generics = self.generics.take();\n         self.generics = Some(&trait_item.generics);\n@@ -955,6 +966,16 @@ impl<'a> ast_visit::Visitor<'a> for EarlyContext<'a> {\n         ast_visit::walk_generics(self, g);\n     }\n \n+    fn visit_where_predicate(&mut self, p: &'a ast::WherePredicate) {\n+        run_lints!(self, check_where_predicate, early_passes, p);\n+        ast_visit::walk_where_predicate(self, p);\n+    }\n+\n+    fn visit_poly_trait_ref(&mut self, t: &'a ast::PolyTraitRef, m: &'a ast::TraitBoundModifier) {\n+        run_lints!(self, check_poly_trait_ref, early_passes, t, m);\n+        ast_visit::walk_poly_trait_ref(self, t, m);\n+    }\n+\n     fn visit_trait_item(&mut self, trait_item: &'a ast::TraitItem) {\n         self.with_lint_attrs(trait_item.id, &trait_item.attrs, |cx| {\n             run_lints!(cx, check_trait_item, early_passes, trait_item);"}, {"sha": "ecaeaf52f5802ec82789315e2a93b32ab4408353", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d1ed6cce6ca875b3902f34c9979cf75afa403fed/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1ed6cce6ca875b3902f34c9979cf75afa403fed/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=d1ed6cce6ca875b3902f34c9979cf75afa403fed", "patch": "@@ -158,6 +158,9 @@ pub trait LateLintPass<'a, 'tcx>: LintPass {\n     fn check_ty(&mut self, _: &LateContext<'a, 'tcx>, _: &'tcx hir::Ty) { }\n     fn check_generic_param(&mut self, _: &LateContext<'a, 'tcx>, _: &'tcx hir::GenericParam) { }\n     fn check_generics(&mut self, _: &LateContext<'a, 'tcx>, _: &'tcx hir::Generics) { }\n+    fn check_where_predicate(&mut self, _: &LateContext<'a, 'tcx>, _: &'tcx hir::WherePredicate) { }\n+    fn check_poly_trait_ref(&mut self, _: &LateContext<'a, 'tcx>, _: &'tcx hir::PolyTraitRef,\n+                            _: hir::TraitBoundModifier) { }\n     fn check_fn(&mut self,\n                 _: &LateContext<'a, 'tcx>,\n                 _: FnKind<'tcx>,\n@@ -230,6 +233,9 @@ pub trait EarlyLintPass: LintPass {\n     fn check_ty(&mut self, _: &EarlyContext, _: &ast::Ty) { }\n     fn check_generic_param(&mut self, _: &EarlyContext, _: &ast::GenericParam) { }\n     fn check_generics(&mut self, _: &EarlyContext, _: &ast::Generics) { }\n+    fn check_where_predicate(&mut self, _: &EarlyContext, _: &ast::WherePredicate) { }\n+    fn check_poly_trait_ref(&mut self, _: &EarlyContext, _: &ast::PolyTraitRef,\n+                            _: &ast::TraitBoundModifier) { }\n     fn check_fn(&mut self, _: &EarlyContext,\n         _: ast_visit::FnKind, _: &ast::FnDecl, _: Span, _: ast::NodeId) { }\n     fn check_fn_post(&mut self, _: &EarlyContext,"}]}