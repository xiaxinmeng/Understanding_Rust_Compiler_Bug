{"sha": "2ca6f11663709bcbc113d3dd223ae51442460e15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYTZmMTE2NjM3MDliY2JjMTEzZDNkZDIyM2FlNTE0NDI0NjBlMTU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-22T04:50:26Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-05T17:48:19Z"}, "message": "Fix rebase conflicts", "tree": {"sha": "24ff444892a195f38f1e0994dd0f8dcbe8a05c22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ff444892a195f38f1e0994dd0f8dcbe8a05c22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ca6f11663709bcbc113d3dd223ae51442460e15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca6f11663709bcbc113d3dd223ae51442460e15", "html_url": "https://github.com/rust-lang/rust/commit/2ca6f11663709bcbc113d3dd223ae51442460e15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ca6f11663709bcbc113d3dd223ae51442460e15/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "418f6089e93d7f784643d55e6782055c9bb479d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/418f6089e93d7f784643d55e6782055c9bb479d5", "html_url": "https://github.com/rust-lang/rust/commit/418f6089e93d7f784643d55e6782055c9bb479d5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "43003c944918e1c00a94ff0c2f88080021f70eab", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ca6f11663709bcbc113d3dd223ae51442460e15/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca6f11663709bcbc113d3dd223ae51442460e15/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=2ca6f11663709bcbc113d3dd223ae51442460e15", "patch": "@@ -938,9 +938,9 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                                 // We only looked in one namespace. Try to give a better error if possible.\n                                 if kind.full_res().is_none() {\n                                     let other_ns = if ns == ValueNS { TypeNS } else { ValueNS };\n-                                    for &ns in &[other_ns, MacroNS] {\n+                                    for &new_ns in &[other_ns, MacroNS] {\n                                         if let Some(res) = self.check_full_res(\n-                                            ns,\n+                                            new_ns,\n                                             path_str,\n                                             base_node,\n                                             &current_item,"}]}