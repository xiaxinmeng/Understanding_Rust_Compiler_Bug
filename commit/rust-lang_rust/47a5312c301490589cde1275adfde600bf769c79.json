{"sha": "47a5312c301490589cde1275adfde600bf769c79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YTUzMTJjMzAxNDkwNTg5Y2RlMTI3NWFkZmRlNjAwYmY3NjljNzk=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-01-31T15:36:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T15:36:47Z"}, "message": "Rollup merge of #81549 - est31:wording_fix, r=jonas-schievink\n\nMisc ip documentation fixes", "tree": {"sha": "6e9314b87b7e3e174cdbd21ef3328365c3d7a1f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e9314b87b7e3e174cdbd21ef3328365c3d7a1f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47a5312c301490589cde1275adfde600bf769c79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFs6QCRBK7hj4Ov3rIwAAdHIIABgEiGkXkLZ96wp14nvhfF2q\n1udhKZDKVvD1QNO1QhjsSIhoG3PJj3DtsLle6R0+sq9SOodjwA8qJstd/OMB0wKc\nL71nHrlQNWDHUMS6jAatE1ROfznu7wVTwGlq/6gtUDW/hfKaxDsdpHdSgN0TiUE/\ntCGF1hGDXpNIKSEhNhDO1Ton2GXHvMZN31Ei0y3dOmgB51rxR/uYbmhGuwPghmCo\nXP+BIZO19oVpE7I70rdM+jLFzIvqU2apaGex2lxiowkcV7SnqwiNkZP9iL15sD3D\nQvJ1ezxx74TAXekQWdBcVrtNkTDtf+AXxQbGj6Z25RO7RpaGupDnA1P/S16FONY=\n=Fcla\n-----END PGP SIGNATURE-----\n", "payload": "tree 6e9314b87b7e3e174cdbd21ef3328365c3d7a1f6\nparent 991b31377c0a1fc547bc14ab2335cb458a36ece7\nparent cddeb5e47b18f78fa6ea83ea118d7aceac98a42f\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612107407 +0100\ncommitter GitHub <noreply@github.com> 1612107407 +0100\n\nRollup merge of #81549 - est31:wording_fix, r=jonas-schievink\n\nMisc ip documentation fixes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47a5312c301490589cde1275adfde600bf769c79", "html_url": "https://github.com/rust-lang/rust/commit/47a5312c301490589cde1275adfde600bf769c79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47a5312c301490589cde1275adfde600bf769c79/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991b31377c0a1fc547bc14ab2335cb458a36ece7", "url": "https://api.github.com/repos/rust-lang/rust/commits/991b31377c0a1fc547bc14ab2335cb458a36ece7", "html_url": "https://github.com/rust-lang/rust/commit/991b31377c0a1fc547bc14ab2335cb458a36ece7"}, {"sha": "cddeb5e47b18f78fa6ea83ea118d7aceac98a42f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cddeb5e47b18f78fa6ea83ea118d7aceac98a42f", "html_url": "https://github.com/rust-lang/rust/commit/cddeb5e47b18f78fa6ea83ea118d7aceac98a42f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a8a4127d40a5eb7359becfbf11853d68a4917a6f", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/47a5312c301490589cde1275adfde600bf769c79/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47a5312c301490589cde1275adfde600bf769c79/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=47a5312c301490589cde1275adfde600bf769c79", "patch": "@@ -1217,8 +1217,8 @@ impl Ipv6Addr {\n \n     /// Returns [`true`] if the address is a unicast link-local address (`fe80::/64`).\n     ///\n-    /// A common mis-conception is to think that \"unicast link-local addresses start with\n-    /// `fe80::`\", but the [IETF RFC 4291] actually defines a stricter format for these addresses:\n+    /// A common misconception is to think that \"unicast link-local addresses start with\n+    /// `fe80::`\", but [IETF RFC 4291] actually defines a stricter format for these addresses:\n     ///\n     /// ```no_rust\n     /// |   10     |\n@@ -1228,9 +1228,9 @@ impl Ipv6Addr {\n     /// +----------+-------------------------+----------------------------+\n     /// ```\n     ///\n-    /// This method validates the format defined in the RFC and won't recognize the following\n-    /// addresses such as `fe80:0:0:1::` or `fe81::` as unicast link-local addresses for example.\n-    /// If you need a less strict validation use [`Ipv6Addr::is_unicast_link_local()`] instead.\n+    /// This method validates the format defined in the RFC and won't recognize addresses\n+    /// like `fe80:0:0:1::` or `fe81::` as unicast link-local addresses.\n+    /// If you need a less strict validation, use [`Ipv6Addr::is_unicast_link_local()`] instead.\n     ///\n     /// # Examples\n     ///\n@@ -1282,7 +1282,7 @@ impl Ipv6Addr {\n     /// +----------+-------------------------+----------------------------+\n     /// ```\n     ///\n-    /// As a result, this method consider addresses such as `fe80:0:0:1::` or `fe81::` to be\n+    /// As a result, this method considers addresses such as `fe80:0:0:1::` or `fe81::` to be\n     /// unicast link-local addresses, whereas [`Ipv6Addr::is_unicast_link_local_strict()`] does not.\n     /// If you need a strict validation fully compliant with the RFC, use\n     /// [`Ipv6Addr::is_unicast_link_local_strict()`] instead.\n@@ -1362,7 +1362,7 @@ impl Ipv6Addr {\n     }\n \n     /// Returns [`true`] if this is an address reserved for documentation\n-    /// (2001:db8::/32).\n+    /// (`2001:db8::/32`).\n     ///\n     /// This property is defined in [IETF RFC 3849].\n     ///"}]}