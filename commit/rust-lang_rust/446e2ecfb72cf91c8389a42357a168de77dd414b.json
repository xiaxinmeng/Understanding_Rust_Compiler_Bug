{"sha": "446e2ecfb72cf91c8389a42357a168de77dd414b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NmUyZWNmYjcyY2Y5MWM4Mzg5YTQyMzU3YTE2OGRlNzdkZDQxNGI=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-02-05T18:05:42Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-02-05T18:37:50Z"}, "message": "Don't warn about const assertions when assert is in a macro itself", "tree": {"sha": "7e7ecda1fee610a84b42daab17434d1536deecd6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e7ecda1fee610a84b42daab17434d1536deecd6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/446e2ecfb72cf91c8389a42357a168de77dd414b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAlxZ2AEACgkQaTCGhp1Q\nZjcjnRAAlVaPSz0VbpWJhakRCPt0HWIJXObT9aV9f/odlsgi0h8I+vv5B86fSNb1\nTPUKC0VL6pvse1hybhssTmotQ/7JxpIsEsDkTSMiH4JmcOnSdMpQDihGuyopUyMh\nLsy0DJR8njd5hlX4Q/kiaXpziWHw+sVqfEethSyYRN486bZep2VS0ANYJ9BIgqch\nbCqlAGWPfeUcaOAUTuXluft7SivrPbJxnVUO2nv1edUMGaTNHkDrPfodRv09yQ5e\nXiMNppgv93yEPIfL6MSfnrcUHxlN9m1LxDB9eWU3j57BWNcjMG+EaLiFouSsvxlN\niGrB6Ws66OBELeDYLAt+duFOCrBP4jDVit8SXTbqqHcl8mXiabq6h5kcDu79G8yt\nZrgbzBk8jaDSXqS9M68bg+WTn2rw/oP+vUVnjV4hXkj/pnLOOEHW/weWC/xznpRu\n1fD3QK1HhHj/ntfdejtkKp0aHx3valszvZiHZkTAx7Nbb4CkCMByYfG4po220TwV\nG7CJ2x2KfTlM5v5cgrHVbN+xyFDlyuQInttEQy5qg7NamDTXKAc0+mXWSBeOmCMs\ngxz5qZA2ZTgo/ovNl6uKzq6p70SjV4KV0Ay0i/BRN/4MNaSMskfKd0DdhUzEK9UV\nOYLU5xyeo6cfaruuG29eVqxcRtaOMfc2DjbEBbiZhxLBWFWUiQs=\n=hVXw\n-----END PGP SIGNATURE-----", "payload": "tree 7e7ecda1fee610a84b42daab17434d1536deecd6\nparent 4259377ea61e4c830a49deda5be60c05a76a0a90\nauthor flip1995 <hello@philkrones.com> 1549389942 +0100\ncommitter flip1995 <hello@philkrones.com> 1549391870 +0100\n\nDon't warn about const assertions when assert is in a macro itself\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/446e2ecfb72cf91c8389a42357a168de77dd414b", "html_url": "https://github.com/rust-lang/rust/commit/446e2ecfb72cf91c8389a42357a168de77dd414b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/446e2ecfb72cf91c8389a42357a168de77dd414b/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4259377ea61e4c830a49deda5be60c05a76a0a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/4259377ea61e4c830a49deda5be60c05a76a0a90", "html_url": "https://github.com/rust-lang/rust/commit/4259377ea61e4c830a49deda5be60c05a76a0a90"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "92ee9d1bc666fab49e65a6fcec7e97305bbd4f4d", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/446e2ecfb72cf91c8389a42357a168de77dd414b/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/446e2ecfb72cf91c8389a42357a168de77dd414b/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=446e2ecfb72cf91c8389a42357a168de77dd414b", "patch": "@@ -3,7 +3,7 @@ use crate::rustc::hir::{Expr, ExprKind};\n use crate::rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::syntax::ast::LitKind;\n-use crate::utils::{is_direct_expn_of, span_help_and_lint};\n+use crate::utils::{in_macro, is_direct_expn_of, span_help_and_lint};\n use if_chain::if_chain;\n \n /// **What it does:** Check to call assert!(true/false)\n@@ -43,7 +43,9 @@ impl LintPass for AssertionsOnConstants {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AssertionsOnConstants {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         if_chain! {\n-            if is_direct_expn_of(e.span, \"assert\").is_some();\n+            if let Some(assert_span) = is_direct_expn_of(e.span, \"assert\");\n+            if !in_macro(assert_span)\n+                || is_direct_expn_of(assert_span, \"debug_assert\").map_or(false, |span| !in_macro(span));\n             if let ExprKind::Unary(_, ref lit) = e.node;\n             then {\n                 if let ExprKind::Lit(ref inner) = lit.node {"}]}