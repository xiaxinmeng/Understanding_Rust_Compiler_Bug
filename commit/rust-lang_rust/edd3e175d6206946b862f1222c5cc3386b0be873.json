{"sha": "edd3e175d6206946b862f1222c5cc3386b0be873", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZDNlMTc1ZDYyMDY5NDZiODYyZjEyMjJjNWNjMzM4NmIwYmU4NzM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T10:26:51Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-03-05T15:30:43Z"}, "message": "Remove redundant patterns when matching ( x @ _  to  x) (clippy::redundant_pattern)", "tree": {"sha": "a6a47e5dc271c5433cf4abbc200901c16df44516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a47e5dc271c5433cf4abbc200901c16df44516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edd3e175d6206946b862f1222c5cc3386b0be873", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edd3e175d6206946b862f1222c5cc3386b0be873", "html_url": "https://github.com/rust-lang/rust/commit/edd3e175d6206946b862f1222c5cc3386b0be873", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edd3e175d6206946b862f1222c5cc3386b0be873/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e179690f8ad9790eb3a6b1dbb6a0ddf479f2c86", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e179690f8ad9790eb3a6b1dbb6a0ddf479f2c86", "html_url": "https://github.com/rust-lang/rust/commit/1e179690f8ad9790eb3a6b1dbb6a0ddf479f2c86"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3b018005a88d2673edd15b8541d8d1db44d9ee24", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=edd3e175d6206946b862f1222c5cc3386b0be873", "patch": "@@ -1432,7 +1432,7 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                             }\n                             msg\n                         }\n-                        ref s @ _ => bug!(\"unexpected import subclass {:?}\", s),\n+                        ref s => bug!(\"unexpected import subclass {:?}\", s),\n                     };\n                     let mut err = this.session.struct_span_err(binding.span, &msg);\n "}, {"sha": "b4486fdb7a7d201de77b4f157877d2d2895f864e", "filename": "src/librustdoc/html/item_type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fitem_type.rs?ref=edd3e175d6206946b862f1222c5cc3386b0be873", "patch": "@@ -62,7 +62,7 @@ impl<'a> From<&'a clean::Item> for ItemType {\n     fn from(item: &'a clean::Item) -> ItemType {\n         let inner = match item.inner {\n             clean::StrippedItem(box ref item) => item,\n-            ref inner @ _ => inner,\n+            ref inner => inner,\n         };\n \n         match *inner {"}, {"sha": "f357c9629916db6ef9275d27feefc7e23bbe8903", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd3e175d6206946b862f1222c5cc3386b0be873/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=edd3e175d6206946b862f1222c5cc3386b0be873", "patch": "@@ -2727,7 +2727,7 @@ fn naive_assoc_href(it: &clean::Item, link: AssocItemLink<'_>) -> String {\n     let name = it.name.as_ref().unwrap();\n     let ty = match it.type_() {\n         Typedef | AssocType => AssocType,\n-        s @ _ => s,\n+        s => s,\n     };\n \n     let anchor = format!(\"#{}.{}\", ty, name);"}]}