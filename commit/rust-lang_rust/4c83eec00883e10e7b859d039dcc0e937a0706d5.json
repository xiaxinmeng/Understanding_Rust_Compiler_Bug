{"sha": "4c83eec00883e10e7b859d039dcc0e937a0706d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjODNlZWMwMDg4M2UxMGU3Yjg1OWQwMzlkY2MwZTkzN2EwNzA2ZDU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-02T19:40:24Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-10-04T11:54:02Z"}, "message": "Fix rebase fallout", "tree": {"sha": "53da6dd2e9a985d9a926d88bee19063b8f77eaaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53da6dd2e9a985d9a926d88bee19063b8f77eaaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c83eec00883e10e7b859d039dcc0e937a0706d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl95t9oACgkQtAh+UQ6Y\nsWTEVA//esJfma8vzjqS8fWErIebIWWoRRSh7JFu7y/BAdAUzGZkvGhV/aWMqYKo\n34Jziz0dvbakpfvzWxLnNtDl0XTMjHVGsNBjNwCKEQeI/GfkVQH1cCfZOeWQtLnU\nEhisQgkhHNDiZ54u9S8oys6TtZVN3umhxiFXip+Tb0pxXistgEAuX8GqGrd0ZqZH\n82ufXagZUaOw+prOjejmZ/NKVhwAGeRO/o51qWirIyI9DRT+BYvmURQC7cOh+1iN\n0do+J+0PXYA/WgiqoFERKEzb0O6PItnM059bMZSMIxrBuAamFbpwGHxZSSUUGXnm\nYC+kbJIWpzaMTqABkrq5JDsnOq6l1WxbmcPa5rW3yDoAf6Qx1qhL6SV/JfmhqWCi\ntdrREecf0aLkgrluWo944I7nn98WvwKMhcxzCLxZdXFrESMO0Wt9+kdcmRaS6WDr\nWFCt39bvYBBqVlfPfjzrfQ7BRVQP84EDCwWVuM7KuUsl/Kz6x5o/PBNKmTfYftPf\n3baqAJjn/nG9v3KkYFtWzsM0J6ZFzE8hB/oAbAWQB/n22b6r3yq/vHIeXuvtIGEc\nVDvQ9JeVRKKCrQbQaKseRlT2UqMx9Kqa2x4IRiWhgkMfq+ZF05+uMJopU2cS0S6h\nUN49w2d3O64sI0SfTw55GiDgPhFlKbsPSHnHsx6qwuUq+dPBvP4=\n=fY1k\n-----END PGP SIGNATURE-----", "payload": "tree 53da6dd2e9a985d9a926d88bee19063b8f77eaaa\nparent 8902ce5d848f0b58f02b72725f195ec9022449a6\nauthor Aaron Hill <aa1ronham@gmail.com> 1601667624 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1601812442 -0400\n\nFix rebase fallout\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c83eec00883e10e7b859d039dcc0e937a0706d5", "html_url": "https://github.com/rust-lang/rust/commit/4c83eec00883e10e7b859d039dcc0e937a0706d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c83eec00883e10e7b859d039dcc0e937a0706d5/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8902ce5d848f0b58f02b72725f195ec9022449a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8902ce5d848f0b58f02b72725f195ec9022449a6", "html_url": "https://github.com/rust-lang/rust/commit/8902ce5d848f0b58f02b72725f195ec9022449a6"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "ab7fadac91e39f892fa5abbd15dd9ae8e784ec3a", "filename": "compiler/rustc_mir/src/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=4c83eec00883e10e7b859d039dcc0e937a0706d5", "patch": "@@ -362,7 +362,7 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n     fn gather_terminator(&mut self, term: &Terminator<'tcx>) {\n         match term.kind {\n             TerminatorKind::Goto { target: _ }\n-            | TerminatorKind::FalseEdges { .. }\n+            | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             // In some sense returning moves the return place into the current\n             // call's destination, however, since there are no statements after"}, {"sha": "7e794e55c723088ff3d0837b8038ad067ed9875f", "filename": "compiler/rustc_mir/src/util/graphviz.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgraphviz.rs?ref=4c83eec00883e10e7b859d039dcc0e937a0706d5", "patch": "@@ -114,21 +114,16 @@ where\n     let (blk, bgcolor) = if data.is_cleanup {\n         (format!(\"{} (cleanup)\", block.index()), \"lightblue\")\n     } else {\n-        let color = if dark_mode {\n-            \"dimgray\"\n-        } else {\n-            \"gray\"\n-        };\n-        (format!(\"{}\", block.index()), \"gray\")\n+        let color = if dark_mode { \"dimgray\" } else { \"gray\" };\n+        (format!(\"{}\", block.index()), color)\n     };\n     write!(\n         w,\n         r#\"<tr><td bgcolor=\"{bgcolor}\" {attrs} colspan=\"{colspan}\">{blk}</td></tr>\"#,\n-        bgcolor = if dark_mode { \"dimgray\" } else { \"gray\" },\n         attrs = r#\"align=\"center\"\"#,\n         colspan = num_cols,\n         blk = blk,\n-        color = color\n+        bgcolor = bgcolor\n     )?;\n \n     init(w)?;"}, {"sha": "eac83a3e738997b8d7b5451e1429f0a442ec77a4", "filename": "compiler/rustc_mir_build/src/build/scope.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c83eec00883e10e7b859d039dcc0e937a0706d5/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fscope.rs?ref=4c83eec00883e10e7b859d039dcc0e937a0706d5", "patch": "@@ -85,7 +85,6 @@ use crate::build::{BlockAnd, BlockAndExtension, BlockFrame, Builder, CFG};\n use crate::thir::{Expr, ExprRef, LintLevel};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n-use rustc_hir::GeneratorKind;\n use rustc_index::vec::IndexVec;\n use rustc_middle::middle::region;\n use rustc_middle::mir::*;\n@@ -364,7 +363,7 @@ impl DropTree {\n                         target: blocks[drop_data.1].unwrap(),\n                         // The caller will handle this if needed.\n                         unwind: None,\n-                        location: drop_data.0.local.into(),\n+                        place: drop_data.0.local.into(),\n                     };\n                     cfg.terminate(block, drop_data.0.source_info, terminator);\n                 }\n@@ -1389,7 +1388,8 @@ impl<'tcx> DropTreeBuilder<'tcx> for Unwind {\n             | TerminatorKind::Unreachable\n             | TerminatorKind::Yield { .. }\n             | TerminatorKind::GeneratorDrop\n-            | TerminatorKind::FalseEdges { .. } => {\n+            | TerminatorKind::FalseEdge { .. }\n+            | TerminatorKind::InlineAsm {.. } => {\n                 span_bug!(term.source_info.span, \"cannot unwind from {:?}\", term.kind)\n             }\n         }"}]}