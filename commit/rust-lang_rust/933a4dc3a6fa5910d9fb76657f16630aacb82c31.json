{"sha": "933a4dc3a6fa5910d9fb76657f16630aacb82c31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzM2E0ZGMzYTZmYTU5MTBkOWZiNzY2NTdmMTY2MzBhYWNiODJjMzE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-14T17:43:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-14T17:43:52Z"}, "message": "Merge #9902\n\n9902: minor: move functionality to a better place r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "ef11ee220a52d632e753b418e2756ea45a7c991f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef11ee220a52d632e753b418e2756ea45a7c991f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/933a4dc3a6fa5910d9fb76657f16630aacb82c31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhGADYCRBK7hj4Ov3rIwAACUwIAKnEMc7ndrL86s0qi+w877Gw\nIRr1cPzpzVCJgyAO1WCIR6v7AMCAduw3Rje+I6fh3CErwntGzj1E0kZCb/CW7CPq\ntvtYmP4a787l8MfWSb6wZLyKv/k4SpAgsXJpc+1wY6t2GXSuTAirxyh8H6sSBeMV\n4FDMTs6nprkScFsmPNQB2m+ya+smF/gLWLs5sNdc0tcdTz22z+CNCkbLrzpKZjpg\nIJh69M1jEHULMDZpf5aNC5VdIN+PF+cX8m6D2qSTuGLDtXPFVnErvE8zFoOnPehN\n48zirwRxdzPn2edtjXFzz/ox/tWQzCLWSst+IXfNozESeVAAt9APANlt0mJOMSU=\n=1FLP\n-----END PGP SIGNATURE-----\n", "payload": "tree ef11ee220a52d632e753b418e2756ea45a7c991f\nparent 182a2b8e72eee2faaef0ef17330937bd0edaa4b6\nparent 3c49a9f07937c1d66be503832e15e9de5fa7d6ed\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628963032 +0000\ncommitter GitHub <noreply@github.com> 1628963032 +0000\n\nMerge #9902\n\n9902: minor: move functionality to a better place r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/933a4dc3a6fa5910d9fb76657f16630aacb82c31", "html_url": "https://github.com/rust-lang/rust/commit/933a4dc3a6fa5910d9fb76657f16630aacb82c31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/933a4dc3a6fa5910d9fb76657f16630aacb82c31/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "182a2b8e72eee2faaef0ef17330937bd0edaa4b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/182a2b8e72eee2faaef0ef17330937bd0edaa4b6", "html_url": "https://github.com/rust-lang/rust/commit/182a2b8e72eee2faaef0ef17330937bd0edaa4b6"}, {"sha": "3c49a9f07937c1d66be503832e15e9de5fa7d6ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c49a9f07937c1d66be503832e15e9de5fa7d6ed", "html_url": "https://github.com/rust-lang/rust/commit/3c49a9f07937c1d66be503832e15e9de5fa7d6ed"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "718fbeda8d3a05c039aba2f3e3a4ed7c48571b1b", "filename": "crates/ide_assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fide_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fide_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils.rs?ref=933a4dc3a6fa5910d9fb76657f16630aacb82c31", "patch": "@@ -13,6 +13,7 @@ use syntax::{\n     ast::{\n         self,\n         edit::{self, AstNodeEdit},\n+        edit_in_place::AttrsOwnerEdit,\n         make, ArgListOwner, AttrsOwner, GenericParamsOwner, NameOwner, TypeBoundsOwner,\n     },\n     ted, AstNode, Direction, SmolStr,\n@@ -130,7 +131,7 @@ pub fn add_trait_assoc_items_to_impl(\n     let items = items.into_iter().map(|assoc_item| {\n         let assoc_item = assoc_item.clone_for_update();\n         transform.apply(assoc_item.syntax());\n-        edit::remove_attrs_and_docs(&assoc_item);\n+        assoc_item.remove_attrs_and_docs();\n         assoc_item\n     });\n "}, {"sha": "6ff751418739fc852eddf198a4060583f753a9a6", "filename": "crates/ide_completion/src/completions/trait_impl.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ftrait_impl.rs?ref=933a4dc3a6fa5910d9fb76657f16630aacb82c31", "patch": "@@ -34,7 +34,7 @@\n use hir::{self, HasAttrs, HasSource};\n use ide_db::{path_transform::PathTransform, traits::get_missing_assoc_items, SymbolKind};\n use syntax::{\n-    ast::{self, edit},\n+    ast::{self, edit_in_place::AttrsOwnerEdit},\n     display::function_declaration,\n     AstNode, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, T,\n };\n@@ -195,7 +195,7 @@ fn get_transformed_assoc_item(\n \n     transform.apply(assoc_item.syntax());\n     if let ast::AssocItem::Fn(func) = &assoc_item {\n-        edit::remove_attrs_and_docs(func)\n+        func.remove_attrs_and_docs()\n     }\n     Some(assoc_item)\n }\n@@ -253,7 +253,7 @@ fn add_const_impl(\n }\n \n fn make_const_compl_syntax(const_: &ast::Const) -> String {\n-    edit::remove_attrs_and_docs(const_);\n+    const_.remove_attrs_and_docs();\n \n     let const_start = const_.syntax().text_range().start();\n     let const_end = const_.syntax().text_range().end();"}, {"sha": "54ee19a626d488dc30692017d96339176769c236", "filename": "crates/syntax/src/ast/edit.rs", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs?ref=933a4dc3a6fa5910d9fb76657f16630aacb82c31", "patch": "@@ -6,9 +6,7 @@ use std::{fmt, iter, ops};\n use crate::{\n     algo,\n     ast::{self, make, AstNode},\n-    ted, AstToken, NodeOrToken, SyntaxElement,\n-    SyntaxKind::{ATTR, COMMENT, WHITESPACE},\n-    SyntaxNode, SyntaxToken,\n+    ted, AstToken, NodeOrToken, SyntaxElement, SyntaxNode, SyntaxToken,\n };\n \n impl ast::UseTree {\n@@ -48,28 +46,6 @@ impl ast::UseTree {\n     }\n }\n \n-pub fn remove_attrs_and_docs<N: ast::AttrsOwner>(node: &N) {\n-    remove_attrs_and_docs_inner(node.syntax())\n-}\n-\n-fn remove_attrs_and_docs_inner(node: &SyntaxNode) {\n-    let mut remove_next_ws = false;\n-    for child in node.children_with_tokens() {\n-        match child.kind() {\n-            ATTR | COMMENT => {\n-                remove_next_ws = true;\n-                child.detach();\n-                continue;\n-            }\n-            WHITESPACE if remove_next_ws => {\n-                child.detach();\n-            }\n-            _ => (),\n-        }\n-        remove_next_ws = false;\n-    }\n-}\n-\n #[derive(Debug, Clone, Copy)]\n pub struct IndentLevel(pub u8);\n "}, {"sha": "3bee11ee03014a92b6048fee6950051a1cc79562", "filename": "crates/syntax/src/ast/edit_in_place.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/933a4dc3a6fa5910d9fb76657f16630aacb82c31/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit_in_place.rs?ref=933a4dc3a6fa5910d9fb76657f16630aacb82c31", "patch": "@@ -13,7 +13,9 @@ use crate::{\n         make, GenericParamsOwner,\n     },\n     ted::{self, Position},\n-    AstNode, AstToken, Direction, SyntaxNode,\n+    AstNode, AstToken, Direction,\n+    SyntaxKind::{ATTR, COMMENT, WHITESPACE},\n+    SyntaxNode,\n };\n \n use super::NameOwner;\n@@ -196,6 +198,32 @@ fn create_generic_param_list(position: Position) -> ast::GenericParamList {\n     gpl\n }\n \n+pub trait AttrsOwnerEdit: ast::AttrsOwner + AstNodeEdit {\n+    fn remove_attrs_and_docs(&self) {\n+        remove_attrs_and_docs(self.syntax());\n+\n+        fn remove_attrs_and_docs(node: &SyntaxNode) {\n+            let mut remove_next_ws = false;\n+            for child in node.children_with_tokens() {\n+                match child.kind() {\n+                    ATTR | COMMENT => {\n+                        remove_next_ws = true;\n+                        child.detach();\n+                        continue;\n+                    }\n+                    WHITESPACE if remove_next_ws => {\n+                        child.detach();\n+                    }\n+                    _ => (),\n+                }\n+                remove_next_ws = false;\n+            }\n+        }\n+    }\n+}\n+\n+impl<T: ast::AttrsOwner + AstNodeEdit> AttrsOwnerEdit for T {}\n+\n impl ast::GenericParamList {\n     pub fn add_generic_param(&self, generic_param: ast::GenericParam) {\n         match self.generic_params().last() {"}]}