{"sha": "b51d3b9443e0da9246d9017d93da2a25d93bc89b", "node_id": "C_kwDOAAsO6NoAKGI1MWQzYjk0NDNlMGRhOTI0NmQ5MDE3ZDkzZGEyYTI1ZDkzYmM4OWI", "commit": {"author": {"name": "Trevor Gross", "email": "tmgross@umich.edu", "date": "2023-02-05T22:03:16Z"}, "committer": {"name": "Trevor Gross", "email": "tmgross@umich.edu", "date": "2023-02-05T22:03:46Z"}, "message": "Mark 'atomic_mut_ptr' methods const", "tree": {"sha": "1063dc15f8a348541daa9865936c8a862994178f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1063dc15f8a348541daa9865936c8a862994178f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b51d3b9443e0da9246d9017d93da2a25d93bc89b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b51d3b9443e0da9246d9017d93da2a25d93bc89b", "html_url": "https://github.com/rust-lang/rust/commit/b51d3b9443e0da9246d9017d93da2a25d93bc89b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b51d3b9443e0da9246d9017d93da2a25d93bc89b/comments", "author": {"login": "tgross35", "id": 13724985, "node_id": "MDQ6VXNlcjEzNzI0OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgross35", "html_url": "https://github.com/tgross35", "followers_url": "https://api.github.com/users/tgross35/followers", "following_url": "https://api.github.com/users/tgross35/following{/other_user}", "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions", "organizations_url": "https://api.github.com/users/tgross35/orgs", "repos_url": "https://api.github.com/users/tgross35/repos", "events_url": "https://api.github.com/users/tgross35/events{/privacy}", "received_events_url": "https://api.github.com/users/tgross35/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tgross35", "id": 13724985, "node_id": "MDQ6VXNlcjEzNzI0OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/13724985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgross35", "html_url": "https://github.com/tgross35", "followers_url": "https://api.github.com/users/tgross35/followers", "following_url": "https://api.github.com/users/tgross35/following{/other_user}", "gists_url": "https://api.github.com/users/tgross35/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgross35/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgross35/subscriptions", "organizations_url": "https://api.github.com/users/tgross35/orgs", "repos_url": "https://api.github.com/users/tgross35/repos", "events_url": "https://api.github.com/users/tgross35/events{/privacy}", "received_events_url": "https://api.github.com/users/tgross35/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a67649675014546ce454d65bc8fe3ebd18e6a319", "url": "https://api.github.com/repos/rust-lang/rust/commits/a67649675014546ce454d65bc8fe3ebd18e6a319", "html_url": "https://github.com/rust-lang/rust/commit/a67649675014546ce454d65bc8fe3ebd18e6a319"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1d14efc7523b42a9c86e4f23b555e45771df316a", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b51d3b9443e0da9246d9017d93da2a25d93bc89b/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b51d3b9443e0da9246d9017d93da2a25d93bc89b/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=b51d3b9443e0da9246d9017d93da2a25d93bc89b", "patch": "@@ -928,8 +928,8 @@ impl AtomicBool {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"atomic_mut_ptr\", reason = \"recently added\", issue = \"66893\")]\n-    pub fn as_mut_ptr(&self) -> *mut bool {\n-        self.v.get() as *mut bool\n+    pub const fn as_mut_ptr(&self) -> *mut bool {\n+        self.v.get().cast()\n     }\n \n     /// Fetches the value, and applies a function to it that returns an optional\n@@ -1803,7 +1803,7 @@ impl<T> AtomicPtr<T> {\n     ///\n     /// ```ignore (extern-declaration)\n     /// #![feature(atomic_mut_ptr)]\n-    //// use std::sync::atomic::AtomicPtr;\n+    /// use std::sync::atomic::AtomicPtr;\n     ///\n     /// extern \"C\" {\n     ///     fn my_atomic_op(arg: *mut *mut u32);\n@@ -1819,7 +1819,7 @@ impl<T> AtomicPtr<T> {\n     /// ```\n     #[inline]\n     #[unstable(feature = \"atomic_mut_ptr\", reason = \"recently added\", issue = \"66893\")]\n-    pub fn as_mut_ptr(&self) -> *mut *mut T {\n+    pub const fn as_mut_ptr(&self) -> *mut *mut T {\n         self.p.get()\n     }\n }\n@@ -2727,7 +2727,7 @@ macro_rules! atomic_int {\n             #[unstable(feature = \"atomic_mut_ptr\",\n                    reason = \"recently added\",\n                    issue = \"66893\")]\n-            pub fn as_mut_ptr(&self) -> *mut $int_type {\n+            pub const fn as_mut_ptr(&self) -> *mut $int_type {\n                 self.v.get()\n             }\n         }"}]}