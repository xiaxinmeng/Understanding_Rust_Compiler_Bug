{"sha": "14c6c119042d2cfbaea0e17e47d2c160261e73ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzZjMTE5MDQyZDJjZmJhZWEwZTE3ZTQ3ZDJjMTYwMjYxZTczYWI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-06T10:16:16Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-10-06T10:17:40Z"}, "message": "Add a semicolon to span for ast::Local", "tree": {"sha": "61489ba2fea1c2af6dbd45e0668cb1b10b91763e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61489ba2fea1c2af6dbd45e0668cb1b10b91763e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c6c119042d2cfbaea0e17e47d2c160261e73ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c6c119042d2cfbaea0e17e47d2c160261e73ab", "html_url": "https://github.com/rust-lang/rust/commit/14c6c119042d2cfbaea0e17e47d2c160261e73ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c6c119042d2cfbaea0e17e47d2c160261e73ab/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed1cffdb21220f633b8b91f099a69fab4ef2b8f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed1cffdb21220f633b8b91f099a69fab4ef2b8f4", "html_url": "https://github.com/rust-lang/rust/commit/ed1cffdb21220f633b8b91f099a69fab4ef2b8f4"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "978e06c75dd46da5d9e1808004c43ce397466212", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14c6c119042d2cfbaea0e17e47d2c160261e73ab/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c6c119042d2cfbaea0e17e47d2c160261e73ab/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=14c6c119042d2cfbaea0e17e47d2c160261e73ab", "patch": "@@ -3671,12 +3671,17 @@ impl<'a> Parser<'a> {\n             None\n         };\n         let init = self.parse_initializer()?;\n+        let hi = if self.token == token::Semi {\n+            self.span\n+        } else {\n+            self.prev_span\n+        };\n         Ok(P(ast::Local {\n             ty,\n             pat,\n             init,\n             id: ast::DUMMY_NODE_ID,\n-            span: lo.to(self.prev_span),\n+            span: lo.to(hi),\n             attrs,\n         }))\n     }"}]}