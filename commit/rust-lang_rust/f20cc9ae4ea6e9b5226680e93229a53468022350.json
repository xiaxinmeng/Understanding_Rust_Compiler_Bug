{"sha": "f20cc9ae4ea6e9b5226680e93229a53468022350", "node_id": "C_kwDOAAsO6NoAKGYyMGNjOWFlNGVhNmU5YjUyMjY2ODBlOTMyMjlhNTM0NjgwMjIzNTA", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-08-23T12:48:15Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-08-23T12:48:15Z"}, "message": "Rename rustc_mir_dataflow diagnostic to mir_dataflow", "tree": {"sha": "fe6c5f0da642855a72d5bfab46656a2bdd3f488e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe6c5f0da642855a72d5bfab46656a2bdd3f488e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f20cc9ae4ea6e9b5226680e93229a53468022350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f20cc9ae4ea6e9b5226680e93229a53468022350", "html_url": "https://github.com/rust-lang/rust/commit/f20cc9ae4ea6e9b5226680e93229a53468022350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f20cc9ae4ea6e9b5226680e93229a53468022350/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f125ed7d5645c7d2c7656d6303e6bdd499739a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f125ed7d5645c7d2c7656d6303e6bdd499739a1", "html_url": "https://github.com/rust-lang/rust/commit/7f125ed7d5645c7d2c7656d6303e6bdd499739a1"}], "stats": {"total": 80, "additions": 40, "deletions": 40}, "files": [{"sha": "988541525088367d86439fb99cbecf25753c2466", "filename": "compiler/rustc_error_messages/locales/en-US/mir_dataflow.ftl", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_dataflow.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_dataflow.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_dataflow.ftl?ref=f20cc9ae4ea6e9b5226680e93229a53468022350", "patch": "@@ -0,0 +1,29 @@\n+mir_dataflow_path_must_end_in_filename =\n+    path must end in a filename\n+\n+mir_dataflow_unknown_formatter =\n+    unknown formatter\n+\n+mir_dataflow_duplicate_values_for =\n+    duplicate values for `{$name}`\n+\n+mir_dataflow_requires_an_argument =\n+    `{$name}` requires an argument\n+\n+mir_dataflow_stop_after_dataflow_ended_compilation =\n+    stop_after_dataflow ended compilation\n+\n+mir_dataflow_peek_must_be_place_or_ref_place =\n+    rustc_peek: argument expression must be either `place` or `&place`\n+\n+mir_dataflow_peek_must_be_not_temporary =\n+    dataflow::sanity_check cannot feed a non-temp to rustc_peek\n+\n+mir_dataflow_peek_bit_not_set =\n+    rustc_peek: bit not set\n+\n+mir_dataflow_peek_argument_not_a_local =\n+    rustc_peek: argument was not a local\n+\n+mir_dataflow_peek_argument_untracked =\n+    rustc_peek: argument untracked"}, {"sha": "1bf654eb01aa0f623f9703cac2287ecf3a05033d", "filename": "compiler/rustc_error_messages/locales/en-US/rustc_mir_dataflow.ftl", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/7f125ed7d5645c7d2c7656d6303e6bdd499739a1/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Frustc_mir_dataflow.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/7f125ed7d5645c7d2c7656d6303e6bdd499739a1/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Frustc_mir_dataflow.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Frustc_mir_dataflow.ftl?ref=7f125ed7d5645c7d2c7656d6303e6bdd499739a1", "patch": "@@ -1,29 +0,0 @@\n-rustc_mir_dataflow_path_must_end_in_filename =\n-    path must end in a filename\n-\n-rustc_mir_dataflow_unknown_formatter =\n-    unknown formatter\n-\n-rustc_mir_dataflow_duplicate_values_for =\n-    duplicate values for `{$name}`\n-\n-rustc_mir_dataflow_requires_an_argument =\n-    `{$name}` requires an argument\n-\n-rustc_mir_dataflow_stop_after_dataflow_ended_compilation =\n-    stop_after_dataflow ended compilation\n-\n-rustc_mir_dataflow_peek_must_be_place_or_ref_place =\n-    rustc_peek: argument expression must be either `place` or `&place`\n-\n-rustc_mir_dataflow_peek_must_be_not_temporary =\n-    dataflow::sanity_check cannot feed a non-temp to rustc_peek\n-\n-rustc_mir_dataflow_peek_bit_not_set =\n-    rustc_peek: bit not set\n-\n-rustc_mir_dataflow_peek_argument_not_a_local =\n-    rustc_peek: argument was not a local\n-\n-rustc_mir_dataflow_peek_argument_untracked =\n-    rustc_peek: argument untracked"}, {"sha": "52451306bcd4c68f4e05ce060f86c70b071aa312", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=f20cc9ae4ea6e9b5226680e93229a53468022350", "patch": "@@ -43,7 +43,7 @@ fluent_messages! {\n     passes => \"../locales/en-US/passes.ftl\",\n     privacy => \"../locales/en-US/privacy.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n-    rustc_mir_dataflow => \"../locales/en-US/rustc_mir_dataflow.ftl\",\n+    mir_dataflow => \"../locales/en-US/mir_dataflow.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}, {"sha": "cc14257876c5c86c6304fd53e04847a69f385b42", "filename": "compiler/rustc_mir_dataflow/src/errors.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_mir_dataflow%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f20cc9ae4ea6e9b5226680e93229a53468022350/compiler%2Frustc_mir_dataflow%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Ferrors.rs?ref=f20cc9ae4ea6e9b5226680e93229a53468022350", "patch": "@@ -2,69 +2,69 @@ use rustc_macros::SessionDiagnostic;\n use rustc_span::{Span, Symbol};\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::path_must_end_in_filename)]\n+#[diag(mir_dataflow::path_must_end_in_filename)]\n pub(crate) struct PathMustEndInFilename {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::unknown_formatter)]\n+#[diag(mir_dataflow::unknown_formatter)]\n pub(crate) struct UnknownFormatter {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::duplicate_values_for)]\n+#[diag(mir_dataflow::duplicate_values_for)]\n pub(crate) struct DuplicateValuesFor {\n     #[primary_span]\n     pub span: Span,\n     pub name: Symbol,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::requires_an_argument)]\n+#[diag(mir_dataflow::requires_an_argument)]\n pub(crate) struct RequiresAnArgument {\n     #[primary_span]\n     pub span: Span,\n     pub name: Symbol,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::stop_after_dataflow_ended_compilation)]\n+#[diag(mir_dataflow::stop_after_dataflow_ended_compilation)]\n pub(crate) struct StopAfterDataFlowEndedCompilation;\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::peek_must_be_place_or_ref_place)]\n+#[diag(mir_dataflow::peek_must_be_place_or_ref_place)]\n pub(crate) struct PeekMustBePlaceOrRefPlace {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::peek_must_be_not_temporary)]\n+#[diag(mir_dataflow::peek_must_be_not_temporary)]\n pub(crate) struct PeekMustBeNotTemporary {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::peek_bit_not_set)]\n+#[diag(mir_dataflow::peek_bit_not_set)]\n pub(crate) struct PeekBitNotSet {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::peek_argument_not_a_local)]\n+#[diag(mir_dataflow::peek_argument_not_a_local)]\n pub(crate) struct PeekArgumentNotALocal {\n     #[primary_span]\n     pub span: Span,\n }\n \n #[derive(SessionDiagnostic)]\n-#[diag(rustc_mir_dataflow::peek_argument_untracked)]\n+#[diag(mir_dataflow::peek_argument_untracked)]\n pub(crate) struct PeekArgumentUntracked {\n     #[primary_span]\n     pub span: Span,"}]}