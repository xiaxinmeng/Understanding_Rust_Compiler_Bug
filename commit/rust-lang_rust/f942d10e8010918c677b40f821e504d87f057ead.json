{"sha": "f942d10e8010918c677b40f821e504d87f057ead", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NDJkMTBlODAxMDkxOGM2NzdiNDBmODIxZTUwNGQ4N2YwNTdlYWQ=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-12-20T09:13:40Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-12-20T09:13:40Z"}, "message": "Use pattern_single instead of pattern in mbe pat", "tree": {"sha": "df7be57bbd282b79ad964db4bf2704874a0b2035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df7be57bbd282b79ad964db4bf2704874a0b2035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f942d10e8010918c677b40f821e504d87f057ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f942d10e8010918c677b40f821e504d87f057ead", "html_url": "https://github.com/rust-lang/rust/commit/f942d10e8010918c677b40f821e504d87f057ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f942d10e8010918c677b40f821e504d87f057ead/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3125555a8de6fad4529408436800a6b1243a442", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3125555a8de6fad4529408436800a6b1243a442", "html_url": "https://github.com/rust-lang/rust/commit/f3125555a8de6fad4529408436800a6b1243a442"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "451fa1456a40528a6664053b42ad453a790fbdc8", "filename": "crates/mbe/src/tests.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fmbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fmbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests.rs?ref=f942d10e8010918c677b40f821e504d87f057ead", "patch": "@@ -1003,6 +1003,18 @@ fn test_underscore() {\n     .assert_expand_items(r#\"foo! { => }\"#, r#\"0\"#);\n }\n \n+#[test]\n+fn test_vertical_bar_with_pat() {\n+    parse_macro(\n+        r#\"\n+            macro_rules! foo {\n+                 (| $pat:pat | ) => { 0 }\n+            }\n+    \"#,\n+    )\n+    .assert_expand_items(r#\"foo! { | x | }\"#, r#\"0\"#);\n+}\n+\n #[test]\n fn test_lifetime() {\n     parse_macro("}, {"sha": "f08c8bab741f55534fcfe6a8d2cd8d9bc4ac2316", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=f942d10e8010918c677b40f821e504d87f057ead", "patch": "@@ -55,7 +55,7 @@ pub(crate) mod fragments {\n     use super::*;\n \n     pub(crate) use super::{\n-        expressions::block_expr, paths::type_path as path, patterns::pattern, types::type_,\n+        expressions::block_expr, paths::type_path as path, patterns::pattern_single, types::type_,\n     };\n \n     pub(crate) fn expr(p: &mut Parser) {"}, {"sha": "811e740f98cad77844a7ade474067a125aa813cd", "filename": "crates/parser/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fparser%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f942d10e8010918c677b40f821e504d87f057ead/crates%2Fparser%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Flib.rs?ref=f942d10e8010918c677b40f821e504d87f057ead", "patch": "@@ -112,7 +112,7 @@ pub fn parse_fragment(\n         FragmentKind::Path => grammar::fragments::path,\n         FragmentKind::Expr => grammar::fragments::expr,\n         FragmentKind::Type => grammar::fragments::type_,\n-        FragmentKind::Pattern => grammar::fragments::pattern,\n+        FragmentKind::Pattern => grammar::fragments::pattern_single,\n         FragmentKind::Item => grammar::fragments::item,\n         FragmentKind::Block => grammar::fragments::block_expr,\n         FragmentKind::Visibility => grammar::fragments::opt_visibility,"}]}