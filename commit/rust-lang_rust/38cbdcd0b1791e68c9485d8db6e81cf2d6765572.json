{"sha": "38cbdcd0b1791e68c9485d8db6e81cf2d6765572", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4Y2JkY2QwYjE3OTFlNjhjOTQ4NWQ4ZGI2ZTgxY2YyZDY3NjU1NzI=", "commit": {"author": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-03-17T01:42:32Z"}, "committer": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-03-17T01:42:34Z"}, "message": "Use an uninitialized buffer in GenericRadix::fmt_int, like in Display::fmt for numeric types\n\nThe code using a slice of that buffer is only ever going to use\nbytes that are subsequently initialized.", "tree": {"sha": "68746491f359de9cdc8d747207613e7bdb3c3e85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68746491f359de9cdc8d747207613e7bdb3c3e85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38cbdcd0b1791e68c9485d8db6e81cf2d6765572", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38cbdcd0b1791e68c9485d8db6e81cf2d6765572", "html_url": "https://github.com/rust-lang/rust/commit/38cbdcd0b1791e68c9485d8db6e81cf2d6765572", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38cbdcd0b1791e68c9485d8db6e81cf2d6765572/comments", "author": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55c984ee5db73db2379024951457d1139db57f24", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c984ee5db73db2379024951457d1139db57f24", "html_url": "https://github.com/rust-lang/rust/commit/55c984ee5db73db2379024951457d1139db57f24"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c3843cae27af5079def593d1fb51212c86506513", "filename": "src/libcore/fmt/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38cbdcd0b1791e68c9485d8db6e81cf2d6765572/src%2Flibcore%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38cbdcd0b1791e68c9485d8db6e81cf2d6765572/src%2Flibcore%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fnum.rs?ref=38cbdcd0b1791e68c9485d8db6e81cf2d6765572", "patch": "@@ -65,7 +65,7 @@ trait GenericRadix {\n         // characters for a base 2 number.\n         let zero = T::zero();\n         let is_nonnegative = x >= zero;\n-        let mut buf = [0; 128];\n+        let mut buf: [u8; 128] = unsafe { mem::uninitialized() };\n         let mut curr = buf.len();\n         let base = T::from_u8(self.base());\n         if is_nonnegative {"}]}