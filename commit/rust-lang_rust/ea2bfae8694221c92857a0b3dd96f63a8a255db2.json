{"sha": "ea2bfae8694221c92857a0b3dd96f63a8a255db2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMmJmYWU4Njk0MjIxYzkyODU3YTBiM2RkOTZmNjNhOGEyNTVkYjI=", "commit": {"author": {"name": "Nathan Stocks", "email": "nathan.stocks@gmail.com", "date": "2017-04-04T19:50:24Z"}, "committer": {"name": "Nathan Stocks", "email": "nathan.stocks@gmail.com", "date": "2017-04-04T19:50:24Z"}, "message": "Branch arms need to match the return value even if it's not being assigned to anything", "tree": {"sha": "5db119d6f72047d9bfcca5c417fb1954bc7244c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db119d6f72047d9bfcca5c417fb1954bc7244c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea2bfae8694221c92857a0b3dd96f63a8a255db2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea2bfae8694221c92857a0b3dd96f63a8a255db2", "html_url": "https://github.com/rust-lang/rust/commit/ea2bfae8694221c92857a0b3dd96f63a8a255db2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea2bfae8694221c92857a0b3dd96f63a8a255db2/comments", "author": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "20cb7005b0c1e12383a4c2f9031c5c5f5c907efc", "url": "https://api.github.com/repos/rust-lang/rust/commits/20cb7005b0c1e12383a4c2f9031c5c5f5c907efc", "html_url": "https://github.com/rust-lang/rust/commit/20cb7005b0c1e12383a4c2f9031c5c5f5c907efc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a1466d68a135aa4950b13eb9771c182626c162a8", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ea2bfae8694221c92857a0b3dd96f63a8a255db2/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea2bfae8694221c92857a0b3dd96f63a8a255db2/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=ea2bfae8694221c92857a0b3dd96f63a8a255db2", "patch": "@@ -137,10 +137,10 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n \n         // Some subcommands get extra options\n         match subcommand.as_str() {\n-            \"test\"  => opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"),\n-            \"bench\" => opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"),\n-            \"dist\"  => opts.optflag(\"\", \"install\", \"run installer as well\"),\n-            _ => { }\n+            \"test\"  => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n+            \"bench\" => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n+            \"dist\"  => { opts.optflag(\"\", \"install\", \"run installer as well\"); },\n+            _ => { },\n         };\n \n         // Done specifying what options are possible, so do the getopts parsing"}]}