{"sha": "a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "node_id": "C_kwDOAAsO6NoAKGE1ZWU3MjJmMWVhNmY5NTE5ZDIxM2EyMzA0Y2M4ZWRjZjUzZjRjYzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-03T05:24:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-03T05:24:14Z"}, "message": "Rollup merge of #91273 - Badel2:ice-index-str, r=estebank\n\nFix ICE #91268 by checking that the snippet ends with a `)`\n\nFix #91268\n\nPreviously it was assumed that the last character of `snippet` will be a `)`, so using `snippet.len() - 1` as an index should be safe. However as we see in the test, it is possible to enter that branch without a closing `)`, and it will trigger the panic if the last character happens to be multibyte.\n\nThe fix is to ensure that the snippet ends with `)`, and skip the suggestion otherwise.", "tree": {"sha": "a02c1d736e429df8a9423482c8f68e111a4cc89b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a02c1d736e429df8a9423482c8f68e111a4cc89b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqan+CRBK7hj4Ov3rIwAAeqUIAGBRDWcC58Yzv6f/6pMq8c3I\nYZxaloAdLvDdQWCYIc7cAj3k9D0avJ3bONeJ7O64OU9aPLugid6pVYiNKvx0gveY\n+mcLzQJFzSvEAgnnz9QaoD5ZF8QbaHXDAs6VjCgkPCFotCXIuNTnpPB5uaoZj1XR\nx8tRmVZiQre835Hl19CLTTxK/uG1c8SlW58Pg41czVbOupJESZup1yqWAFih/oDj\nTX+d3jyGrYg0juHcHxwIJes2rvFmOx8A50UapYQQGW/6GRcCoCb4ylbR4X7X6G5j\nReWBortAAMabPhIWNrCFdwWXO+iYq8P7PJ/u1lYXwhA4pBV+c2SfE5a11fw6E08=\n=19JH\n-----END PGP SIGNATURE-----\n", "payload": "tree a02c1d736e429df8a9423482c8f68e111a4cc89b\nparent 0ccd56682578790abc045cfd0d0555f47e92f6b0\nparent 0da3a0f56eda3c360e63499b4ee452e55630d9ff\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638509054 +0100\ncommitter GitHub <noreply@github.com> 1638509054 +0100\n\nRollup merge of #91273 - Badel2:ice-index-str, r=estebank\n\nFix ICE #91268 by checking that the snippet ends with a `)`\n\nFix #91268\n\nPreviously it was assumed that the last character of `snippet` will be a `)`, so using `snippet.len() - 1` as an index should be safe. However as we see in the test, it is possible to enter that branch without a closing `)`, and it will trigger the panic if the last character happens to be multibyte.\n\nThe fix is to ensure that the snippet ends with `)`, and skip the suggestion otherwise.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "html_url": "https://github.com/rust-lang/rust/commit/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ccd56682578790abc045cfd0d0555f47e92f6b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ccd56682578790abc045cfd0d0555f47e92f6b0", "html_url": "https://github.com/rust-lang/rust/commit/0ccd56682578790abc045cfd0d0555f47e92f6b0"}, {"sha": "0da3a0f56eda3c360e63499b4ee452e55630d9ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0da3a0f56eda3c360e63499b4ee452e55630d9ff", "html_url": "https://github.com/rust-lang/rust/commit/0da3a0f56eda3c360e63499b4ee452e55630d9ff"}], "stats": {"total": 81, "additions": 72, "deletions": 9}, "files": [{"sha": "78afc33974826a048c4b59d31c001a19e4b49fc4", "filename": "compiler/rustc_ast_lowering/src/path.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fpath.rs?ref=a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "patch": "@@ -229,15 +229,19 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                         if let Ok(snippet) = self.sess.source_map().span_to_snippet(data.span) {\n                             // Do not suggest going from `Trait()` to `Trait<>`\n                             if !data.inputs.is_empty() {\n-                                if let Some(split) = snippet.find('(') {\n-                                    let trait_name = &snippet[0..split];\n-                                    let args = &snippet[split + 1..snippet.len() - 1];\n-                                    err.span_suggestion(\n-                                        data.span,\n-                                        \"use angle brackets instead\",\n-                                        format!(\"{}<{}>\", trait_name, args),\n-                                        Applicability::MaybeIncorrect,\n-                                    );\n+                                // Suggest replacing `(` and `)` with `<` and `>`\n+                                // The snippet may be missing the closing `)`, skip that case\n+                                if snippet.ends_with(')') {\n+                                    if let Some(split) = snippet.find('(') {\n+                                        let trait_name = &snippet[0..split];\n+                                        let args = &snippet[split + 1..snippet.len() - 1];\n+                                        err.span_suggestion(\n+                                            data.span,\n+                                            \"use angle brackets instead\",\n+                                            format!(\"{}<{}>\", trait_name, args),\n+                                            Applicability::MaybeIncorrect,\n+                                        );\n+                                    }\n                                 }\n                             }\n                         };"}, {"sha": "fd2733c1c545e92fb2e61b33a8c92cfd5877ab36", "filename": "src/test/ui/type/issue-91268.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/src%2Ftest%2Fui%2Ftype%2Fissue-91268.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/src%2Ftest%2Fui%2Ftype%2Fissue-91268.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fissue-91268.rs?ref=a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "patch": "@@ -0,0 +1,9 @@\n+// error-pattern: this file contains an unclosed delimiter\n+// error-pattern: cannot find type `\u0163` in this scope\n+// error-pattern: parenthesized type parameters may only be used with a `Fn` trait\n+// error-pattern: type arguments are not allowed for this type\n+// error-pattern: mismatched types\n+// ignore-tidy-trailing-newlines\n+// `\u0163` must be the last character in this file, it cannot be followed by a newline\n+fn main() {\n+    0: u8(\u0163\n\\ No newline at end of file"}, {"sha": "2fe6ba6248c8d66a17ba482499eaee3f04c4d129", "filename": "src/test/ui/type/issue-91268.stderr", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Fissue-91268.stderr?ref=a5ee722f1ea6f9519d213a2304cc8edcf53f4cc3", "patch": "@@ -0,0 +1,50 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91268.rs:9:12\n+   |\n+LL | fn main() {\n+   |           - unclosed delimiter\n+LL |     0: u8(\u0163\n+   |          - ^\n+   |          |\n+   |          unclosed delimiter\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-91268.rs:9:12\n+   |\n+LL | fn main() {\n+   |           - unclosed delimiter\n+LL |     0: u8(\u0163\n+   |          - ^\n+   |          |\n+   |          unclosed delimiter\n+\n+error[E0412]: cannot find type `\u0163` in this scope\n+  --> $DIR/issue-91268.rs:9:11\n+   |\n+LL |     0: u8(\u0163\n+   |           ^ expecting a type here because of type ascription\n+\n+error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n+  --> $DIR/issue-91268.rs:9:8\n+   |\n+LL |     0: u8(\u0163\n+   |        ^^^^ only `Fn` traits may use parentheses\n+\n+error[E0109]: type arguments are not allowed for this type\n+  --> $DIR/issue-91268.rs:9:11\n+   |\n+LL |     0: u8(\u0163\n+   |           ^ type argument not allowed\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-91268.rs:9:5\n+   |\n+LL | fn main() {\n+   |           - expected `()` because of default return type\n+LL |     0: u8(\u0163\n+   |     ^^^^^^^ expected `()`, found `u8`\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0109, E0214, E0308, E0412.\n+For more information about an error, try `rustc --explain E0109`."}]}