{"sha": "58bb47ebe5db54f54f5a45134110f73ff216bb36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YmI0N2ViZTVkYjU0ZjU0ZjVhNDUxMzQxMTBmNzNmZjIxNmJiMzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-19T10:25:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-02-19T10:25:41Z"}, "message": "avoid excessive number of revisions", "tree": {"sha": "5e102993b12603199cb075044bc4f1e5f117b6c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e102993b12603199cb075044bc4f1e5f117b6c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58bb47ebe5db54f54f5a45134110f73ff216bb36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58bb47ebe5db54f54f5a45134110f73ff216bb36", "html_url": "https://github.com/rust-lang/rust/commit/58bb47ebe5db54f54f5a45134110f73ff216bb36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58bb47ebe5db54f54f5a45134110f73ff216bb36/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e19350a4c858bd98b0864d55e8ce1efc370e33d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e19350a4c858bd98b0864d55e8ce1efc370e33d", "html_url": "https://github.com/rust-lang/rust/commit/5e19350a4c858bd98b0864d55e8ce1efc370e33d"}], "stats": {"total": 458, "additions": 6, "deletions": 452}, "files": [{"sha": "5aeeec4bd1435afce765d3fd62d97bd56a64daca", "filename": "src/test/ui/consts/const-err2.default.stderr", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.default.stderr?ref=5e19350a4c858bd98b0864d55e8ce1efc370e33d", "patch": "@@ -1,48 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:19:13\n-   |\n-LL |     let a = -std::i8::MIN;\n-   |             ^^^^^^^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:21:18\n-   |\n-LL |     let a_i128 = -std::i128::MIN;\n-   |                  ^^^^^^^^^^^^^^^ attempt to negate with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:23:13\n-   |\n-LL |     let b = 200u8 + 200u8 + 200u8;\n-   |             ^^^^^^^^^^^^^ attempt to add with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:25:18\n-   |\n-LL |     let b_i128 = std::i128::MIN - std::i128::MAX;\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:27:13\n-   |\n-LL |     let c = 200u8 * 4;\n-   |             ^^^^^^^^^ attempt to multiply with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/const-err2.rs:29:13\n-   |\n-LL |     let d = 42u8 - (42u8 + 1);\n-   |             ^^^^^^^^^^^^^^^^^ attempt to subtract with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/const-err2.rs:31:14\n-   |\n-LL |     let _e = [5u8][1];\n-   |              ^^^^^^^^ index out of bounds: the len is 1 but the index is 1\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: aborting due to 7 previous errors\n-"}, {"sha": "2c6a987180bb1f85c9f6204e73329bf9a6ac28e2", "filename": "src/test/ui/consts/const-err2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-err2.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -2,7 +2,7 @@\n // optimized compilation and unoptimized compilation and thus would\n // lead to different lints being emitted\n \n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}, {"sha": "034dea06568e0899f2302141f0edabcdfe22acf0", "filename": "src/test/ui/consts/const-eval/promoted_errors.default.stderr", "status": "removed", "additions": 0, "deletions": 72, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.default.stderr?ref=5e19350a4c858bd98b0864d55e8ce1efc370e33d", "patch": "@@ -1,72 +0,0 @@\n-warning: this arithmetic operation will overflow\n-  --> $DIR/promoted_errors.rs:14:14\n-   |\n-LL |     let _x = 0u32 - 1;\n-   |              ^^^^^^^^ attempt to subtract with overflow\n-   |\n-note: the lint level is defined here\n-  --> $DIR/promoted_errors.rs:9:20\n-   |\n-LL | #![warn(const_err, arithmetic_overflow, unconditional_panic)]\n-   |                    ^^^^^^^^^^^^^^^^^^^\n-\n-warning: this operation will panic at runtime\n-  --> $DIR/promoted_errors.rs:16:20\n-   |\n-LL |     println!(\"{}\", 1 / (1 - 1));\n-   |                    ^^^^^^^^^^^ attempt to divide by zero\n-   |\n-note: the lint level is defined here\n-  --> $DIR/promoted_errors.rs:9:41\n-   |\n-LL | #![warn(const_err, arithmetic_overflow, unconditional_panic)]\n-   |                                         ^^^^^^^^^^^^^^^^^^^\n-\n-warning: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:16:20\n-   |\n-LL |     println!(\"{}\", 1 / (1 - 1));\n-   |                    ^^^^^^^^^^^ dividing by zero\n-   |\n-note: the lint level is defined here\n-  --> $DIR/promoted_errors.rs:9:9\n-   |\n-LL | #![warn(const_err, arithmetic_overflow, unconditional_panic)]\n-   |         ^^^^^^^^^\n-\n-warning: erroneous constant used\n-  --> $DIR/promoted_errors.rs:16:20\n-   |\n-LL |     println!(\"{}\", 1 / (1 - 1));\n-   |                    ^^^^^^^^^^^ referenced constant has errors\n-\n-warning: this operation will panic at runtime\n-  --> $DIR/promoted_errors.rs:20:14\n-   |\n-LL |     let _x = 1 / (1 - 1);\n-   |              ^^^^^^^^^^^ attempt to divide by zero\n-\n-warning: this operation will panic at runtime\n-  --> $DIR/promoted_errors.rs:22:20\n-   |\n-LL |     println!(\"{}\", 1 / (false as u32));\n-   |                    ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n-\n-warning: reaching this expression at runtime will panic or abort\n-  --> $DIR/promoted_errors.rs:22:20\n-   |\n-LL |     println!(\"{}\", 1 / (false as u32));\n-   |                    ^^^^^^^^^^^^^^^^^^ dividing by zero\n-\n-warning: erroneous constant used\n-  --> $DIR/promoted_errors.rs:22:20\n-   |\n-LL |     println!(\"{}\", 1 / (false as u32));\n-   |                    ^^^^^^^^^^^^^^^^^^ referenced constant has errors\n-\n-warning: this operation will panic at runtime\n-  --> $DIR/promoted_errors.rs:26:14\n-   |\n-LL |     let _x = 1 / (false as u32);\n-   |              ^^^^^^^^^^^^^^^^^^ attempt to divide by zero\n-"}, {"sha": "3ab6ce28478c39ae0d72ff356c1d89fbb5d37ae1", "filename": "src/test/ui/consts/const-eval/promoted_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fpromoted_errors.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -1,4 +1,4 @@\n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}, {"sha": "02c8b7250324df6b97b83bffdf5be1ccb67f24ed", "filename": "src/test/ui/consts/issue-64059.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-64059.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -1,4 +1,4 @@\n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}, {"sha": "c48a106ef4656ce0287be97b5ec7b186d9c79fbc", "filename": "src/test/ui/consts/issue-69020.default.stderr", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.default.stderr?ref=5e19350a4c858bd98b0864d55e8ce1efc370e33d", "patch": "@@ -1,30 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:21:22\n-   |\n-LL |     const NEG: i32 = -i32::MIN + T::NEG;\n-   |                      ^^^^^^^^^ attempt to negate with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-69020.rs:23:22\n-   |\n-LL |     const ADD: i32 = (i32::MAX+1) + T::ADD;\n-   |                      ^^^^^^^^^^^^ attempt to add with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:25:22\n-   |\n-LL |     const DIV: i32 = (1/0) + T::DIV;\n-   |                      ^^^^^ attempt to divide by zero\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-69020.rs:27:22\n-   |\n-LL |     const OOB: i32 = [1][1] + T::OOB;\n-   |                      ^^^^^^ index out of bounds: the len is 1 but the index is 1\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "e079feb04d4479e0640b54bf49b5181503ed8a0e", "filename": "src/test/ui/consts/issue-69020.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-69020.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -1,4 +1,4 @@\n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}, {"sha": "3556ec08247b5af88e540557ec093ae18119e9d7", "filename": "src/test/ui/issues/issue-8460-const.default.stderr", "status": "removed", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.default.stderr?ref=5e19350a4c858bd98b0864d55e8ce1efc370e33d", "patch": "@@ -1,150 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:14:36\n-   |\n-LL |     assert!(thread::spawn(move|| { isize::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^^ attempt to divide with overflow\n-   |\n-   = note: `#[deny(arithmetic_overflow)]` on by default\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:16:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i8::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^ attempt to divide with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:18:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i16::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:20:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i32::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:22:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i64::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to divide with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:24:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i128::MIN / -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^ attempt to divide with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:26:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1isize / 0; }).join().is_err());\n-   |                                    ^^^^^^^^^^ attempt to divide by zero\n-   |\n-   = note: `#[deny(unconditional_panic)]` on by default\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:28:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i8 / 0; }).join().is_err());\n-   |                                    ^^^^^^^ attempt to divide by zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:30:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i16 / 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to divide by zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:32:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i32 / 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to divide by zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:34:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i64 / 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to divide by zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:36:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i128 / 0; }).join().is_err());\n-   |                                    ^^^^^^^^^ attempt to divide by zero\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:38:36\n-   |\n-LL |     assert!(thread::spawn(move|| { isize::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:40:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i8::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:42:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i16::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:44:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i32::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:46:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i64::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/issue-8460-const.rs:48:36\n-   |\n-LL |     assert!(thread::spawn(move|| { i128::MIN % -1; }).join().is_err());\n-   |                                    ^^^^^^^^^^^^^^ attempt to calculate the remainder with overflow\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:50:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1isize % 0; }).join().is_err());\n-   |                                    ^^^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:52:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i8 % 0; }).join().is_err());\n-   |                                    ^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:54:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i16 % 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:56:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i32 % 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:58:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i64 % 0; }).join().is_err());\n-   |                                    ^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: this operation will panic at runtime\n-  --> $DIR/issue-8460-const.rs:60:36\n-   |\n-LL |     assert!(thread::spawn(move|| { 1i128 % 0; }).join().is_err());\n-   |                                    ^^^^^^^^^ attempt to calculate the remainder with a divisor of zero\n-\n-error: aborting due to 24 previous errors\n-"}, {"sha": "53005e46d2f47234372d58d1a27a02816a23f63f", "filename": "src/test/ui/issues/issue-8460-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-8460-const.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -1,4 +1,4 @@\n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}, {"sha": "ce9b02b6d82a781d7bc217dfb712febc569a1781", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.default.stderr", "status": "removed", "additions": 0, "deletions": 146, "changes": 146, "blob_url": "https://github.com/rust-lang/rust/blob/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5e19350a4c858bd98b0864d55e8ce1efc370e33d/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.default.stderr?ref=5e19350a4c858bd98b0864d55e8ce1efc370e33d", "patch": "@@ -1,146 +0,0 @@\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:22:13\n-   |\n-LL |     let _ = x << 42;\n-   |             ^^^^^^^ attempt to shift left with overflow\n-   |\n-note: the lint level is defined here\n-  --> $DIR/lint-exceeding-bitshifts.rs:9:9\n-   |\n-LL | #![deny(arithmetic_overflow, const_err)]\n-   |         ^^^^^^^^^^^^^^^^^^^\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:27:15\n-   |\n-LL |       let n = 1u8 << 8;\n-   |               ^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:29:15\n-   |\n-LL |       let n = 1u16 << 16;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:31:15\n-   |\n-LL |       let n = 1u32 << 32;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:33:15\n-   |\n-LL |       let n = 1u64 << 64;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:35:15\n-   |\n-LL |       let n = 1i8 << 8;\n-   |               ^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:37:15\n-   |\n-LL |       let n = 1i16 << 16;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:39:15\n-   |\n-LL |       let n = 1i32 << 32;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:41:15\n-   |\n-LL |       let n = 1i64 << 64;\n-   |               ^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:44:15\n-   |\n-LL |       let n = 1u8 >> 8;\n-   |               ^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:46:15\n-   |\n-LL |       let n = 1u16 >> 16;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:48:15\n-   |\n-LL |       let n = 1u32 >> 32;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:50:15\n-   |\n-LL |       let n = 1u64 >> 64;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:52:15\n-   |\n-LL |       let n = 1i8 >> 8;\n-   |               ^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:54:15\n-   |\n-LL |       let n = 1i16 >> 16;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:56:15\n-   |\n-LL |       let n = 1i32 >> 32;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:58:15\n-   |\n-LL |       let n = 1i64 >> 64;\n-   |               ^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:62:15\n-   |\n-LL |       let n = n << 8;\n-   |               ^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:64:15\n-   |\n-LL |       let n = 1u8 << -8;\n-   |               ^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:69:15\n-   |\n-LL |       let n = 1u8 << (4+4);\n-   |               ^^^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:71:15\n-   |\n-LL |       let n = 1i64 >> [64][0];\n-   |               ^^^^^^^^^^^^^^^ attempt to shift right with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:77:15\n-   |\n-LL |       let n = 1_isize << BITS;\n-   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: this arithmetic operation will overflow\n-  --> $DIR/lint-exceeding-bitshifts.rs:78:15\n-   |\n-LL |       let n = 1_usize << BITS;\n-   |               ^^^^^^^^^^^^^^^ attempt to shift left with overflow\n-\n-error: aborting due to 23 previous errors\n-"}, {"sha": "7deee5320a87880e4adb01de4f649400db40f798", "filename": "src/test/ui/lint/lint-exceeding-bitshifts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58bb47ebe5db54f54f5a45134110f73ff216bb36/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-exceeding-bitshifts.rs?ref=58bb47ebe5db54f54f5a45134110f73ff216bb36", "patch": "@@ -1,4 +1,4 @@\n-// revisions: default noopt opt opt_with_overflow_checks\n+// revisions: noopt opt opt_with_overflow_checks\n //[noopt]compile-flags: -C opt-level=0\n //[opt]compile-flags: -O\n //[opt_with_overflow_checks]compile-flags: -C overflow-checks=on -O"}]}