{"sha": "8e219e7eb5ed554e0602476edfbbee5720e5c36e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMjE5ZTdlYjVlZDU1NGUwNjAyNDc2ZWRmYmJlZTU3MjBlNWMzNmU=", "commit": {"author": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2019-02-20T13:21:15Z"}, "committer": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2019-02-20T13:21:15Z"}, "message": "Turn duration consts into associated consts", "tree": {"sha": "8a3231b34001249bde1f920b6893429452fcdcfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a3231b34001249bde1f920b6893429452fcdcfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e219e7eb5ed554e0602476edfbbee5720e5c36e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e219e7eb5ed554e0602476edfbbee5720e5c36e", "html_url": "https://github.com/rust-lang/rust/commit/8e219e7eb5ed554e0602476edfbbee5720e5c36e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e219e7eb5ed554e0602476edfbbee5720e5c36e/comments", "author": null, "committer": null, "parents": [{"sha": "75a369c5b11459baa6bf7734eeb6135998a0a7de", "url": "https://api.github.com/repos/rust-lang/rust/commits/75a369c5b11459baa6bf7734eeb6135998a0a7de", "html_url": "https://github.com/rust-lang/rust/commit/75a369c5b11459baa6bf7734eeb6135998a0a7de"}], "stats": {"total": 35, "additions": 16, "deletions": 19}, "files": [{"sha": "62ed8d6f7906aa95cfa7d655441113b96a11ec79", "filename": "src/libcore/time.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8e219e7eb5ed554e0602476edfbbee5720e5c36e/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e219e7eb5ed554e0602476edfbbee5720e5c36e/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=8e219e7eb5ed554e0602476edfbbee5720e5c36e", "patch": "@@ -23,22 +23,6 @@ const MILLIS_PER_SEC: u64 = 1_000;\n const MICROS_PER_SEC: u64 = 1_000_000;\n const MAX_NANOS_F64: f64 = ((u64::MAX as u128 + 1)*(NANOS_PER_SEC as u128)) as f64;\n \n-/// The duration of one second.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const SECOND: Duration = Duration::from_secs(1);\n-\n-/// The duration of one millisecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const MILLISECOND: Duration = Duration::from_millis(1);\n-\n-/// The duration of one microsecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const MICROSECOND: Duration = Duration::from_micros(1);\n-\n-/// The duration of one nanosecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const NANOSECOND: Duration = Duration::from_nanos(1);\n-\n /// A `Duration` type to represent a span of time, typically used for system\n /// timeouts.\n ///\n@@ -75,6 +59,22 @@ pub struct Duration {\n }\n \n impl Duration {\n+    /// The duration of one second.\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const SECOND: Duration = Duration::from_secs(1);\n+\n+    /// The duration of one millisecond.\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const MILLISECOND: Duration = Duration::from_millis(1);\n+\n+    /// The duration of one microsecond.\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const MICROSECOND: Duration = Duration::from_micros(1);\n+\n+    /// The duration of one nanosecond.\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const NANOSECOND: Duration = Duration::from_nanos(1);\n+\n     /// Creates a new `Duration` from the specified number of whole seconds and\n     /// additional nanoseconds.\n     ///"}, {"sha": "72a5a070233e1fc6903c41d8af95b14b028bf0b4", "filename": "src/libstd/time.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8e219e7eb5ed554e0602476edfbbee5720e5c36e/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e219e7eb5ed554e0602476edfbbee5720e5c36e/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=8e219e7eb5ed554e0602476edfbbee5720e5c36e", "patch": "@@ -23,9 +23,6 @@ use sys_common::mutex::Mutex;\n #[stable(feature = \"time\", since = \"1.3.0\")]\n pub use core::time::Duration;\n \n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub use core::time::{SECOND, MILLISECOND, MICROSECOND, NANOSECOND};\n-\n /// A measurement of a monotonically nondecreasing clock.\n /// Opaque and useful only with `Duration`.\n ///"}]}