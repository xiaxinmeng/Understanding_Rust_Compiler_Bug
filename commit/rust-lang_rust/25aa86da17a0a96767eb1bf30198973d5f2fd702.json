{"sha": "25aa86da17a0a96767eb1bf30198973d5f2fd702", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YWE4NmRhMTdhMGE5Njc2N2ViMWJmMzAxOTg5NzNkNWYyZmQ3MDI=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-08-22T13:54:57Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-09-13T10:55:03Z"}, "message": "Fix issue #43481: emit the EndRegion *before* StorageDeads for a scope.\n\n(The idea is that the StorageDead marks the point where the memory can\nbe deallocated, and the EndRegion is marking where borrows of that\nmemory can no longer legally exist.)", "tree": {"sha": "da1a18058e80b7d6c8bab7dccf7f38ec6cf94fc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/da1a18058e80b7d6c8bab7dccf7f38ec6cf94fc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25aa86da17a0a96767eb1bf30198973d5f2fd702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25aa86da17a0a96767eb1bf30198973d5f2fd702", "html_url": "https://github.com/rust-lang/rust/commit/25aa86da17a0a96767eb1bf30198973d5f2fd702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25aa86da17a0a96767eb1bf30198973d5f2fd702/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3eccc694c4721c0bfaf3dcddd572e36c62e8fa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3eccc694c4721c0bfaf3dcddd572e36c62e8fa1", "html_url": "https://github.com/rust-lang/rust/commit/c3eccc694c4721c0bfaf3dcddd572e36c62e8fa1"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "bac884b4d01e9f94dfa898838a0073d7cadbe89d", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/25aa86da17a0a96767eb1bf30198973d5f2fd702/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25aa86da17a0a96767eb1bf30198973d5f2fd702/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=25aa86da17a0a96767eb1bf30198973d5f2fd702", "patch": "@@ -352,14 +352,15 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n         }\n         let scope = self.scopes.pop().unwrap();\n         assert_eq!(scope.region_scope, region_scope.0);\n+\n+        self.cfg.push_end_region(self.hir.tcx(), block, region_scope.1, scope.region_scope);\n         unpack!(block = build_scope_drops(&mut self.cfg,\n                                           &scope,\n                                           &self.scopes,\n                                           block,\n                                           self.arg_count,\n                                           false));\n \n-        self.cfg.push_end_region(self.hir.tcx(), block, region_scope.1, scope.region_scope);\n         block.unit()\n     }\n \n@@ -406,15 +407,16 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n                 scope.cached_exits.insert((target, region_scope.0), b);\n                 b\n             };\n+\n+            // End all regions for scopes out of which we are breaking.\n+            self.cfg.push_end_region(self.hir.tcx(), block, region_scope.1, scope.region_scope);\n+\n             unpack!(block = build_scope_drops(&mut self.cfg,\n                                               scope,\n                                               rest,\n                                               block,\n                                               self.arg_count,\n                                               false));\n-\n-            // End all regions for scopes out of which we are breaking.\n-            self.cfg.push_end_region(self.hir.tcx(), block, region_scope.1, scope.region_scope);\n         }\n         }\n         let scope = &self.scopes[len - scope_count];"}]}