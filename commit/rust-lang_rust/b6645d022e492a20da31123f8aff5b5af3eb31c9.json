{"sha": "b6645d022e492a20da31123f8aff5b5af3eb31c9", "node_id": "C_kwDOAAsO6NoAKGI2NjQ1ZDAyMmU0OTJhMjBkYTMxMTIzZjhhZmY1YjVhZjNlYjMxYzk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T13:03:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-13T13:03:51Z"}, "message": "Auto merge of #8670 - yoav-lavi:main, r=giraffate\n\n`pub_use` restriction\n\n[`pub_use`]\n\nFixes https://github.com/rust-lang/rust-clippy/issues/8545\n\n- \\[x] Followed [lint naming conventions][lint_naming]\n- \\[x] Added passing UI tests (including committed `.stderr` file)\n- \\[x] `cargo test` passes locally\n- \\[x] Executed `cargo dev update_lints`\n- \\[x] Added lint documentation\n- \\[x] Run `cargo dev fmt`\n\n[lint_naming]: https://rust-lang.github.io/rfcs/0344-conventions-galore.html#lints\n\nchangelog: Adds a lint called `pub_use` that restricts the usage of `pub use ...`", "tree": {"sha": "61c466197c198af6c238cfe02709a40fafaa8596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61c466197c198af6c238cfe02709a40fafaa8596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6645d022e492a20da31123f8aff5b5af3eb31c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6645d022e492a20da31123f8aff5b5af3eb31c9", "html_url": "https://github.com/rust-lang/rust/commit/b6645d022e492a20da31123f8aff5b5af3eb31c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6645d022e492a20da31123f8aff5b5af3eb31c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f70c73f5c4a43886af04941c6d4f0efd978c3fce", "url": "https://api.github.com/repos/rust-lang/rust/commits/f70c73f5c4a43886af04941c6d4f0efd978c3fce", "html_url": "https://github.com/rust-lang/rust/commit/f70c73f5c4a43886af04941c6d4f0efd978c3fce"}, {"sha": "66d253f0f219578264ac7cb4e1c10f01dcfe8ad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/66d253f0f219578264ac7cb4e1c10f01dcfe8ad7", "html_url": "https://github.com/rust-lang/rust/commit/66d253f0f219578264ac7cb4e1c10f01dcfe8ad7"}], "stats": {"total": 86, "additions": 86, "deletions": 0}, "files": [{"sha": "ef21dbac820e70e40af3a9d796f0dea9b4c4c63e", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -3528,6 +3528,7 @@ Released 2018-09-13\n [`ptr_eq`]: https://rust-lang.github.io/rust-clippy/master/index.html#ptr_eq\n [`ptr_offset_with_cast`]: https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n [`pub_enum_variant_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#pub_enum_variant_names\n+[`pub_use`]: https://rust-lang.github.io/rust-clippy/master/index.html#pub_use\n [`question_mark`]: https://rust-lang.github.io/rust-clippy/master/index.html#question_mark\n [`range_minus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_minus_one\n [`range_plus_one`]: https://rust-lang.github.io/rust-clippy/master/index.html#range_plus_one"}, {"sha": "9820b7727af14473576f01b077c586db76a5d5cd", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -433,6 +433,7 @@ store.register_lints(&[\n     ptr::PTR_ARG,\n     ptr_eq::PTR_EQ,\n     ptr_offset_with_cast::PTR_OFFSET_WITH_CAST,\n+    pub_use::PUB_USE,\n     question_mark::QUESTION_MARK,\n     ranges::MANUAL_RANGE_CONTAINS,\n     ranges::RANGE_MINUS_ONE,"}, {"sha": "555a8ad841fecb5c5e9355ca1340202908b28cdd", "filename": "clippy_lints/src/lib.register_restriction.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.register_restriction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_restriction.rs?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -53,6 +53,7 @@ store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), ve\n     LintId::of(panic_unimplemented::UNIMPLEMENTED),\n     LintId::of(panic_unimplemented::UNREACHABLE),\n     LintId::of(pattern_type_mismatch::PATTERN_TYPE_MISMATCH),\n+    LintId::of(pub_use::PUB_USE),\n     LintId::of(redundant_slicing::DEREF_BY_SLICING),\n     LintId::of(same_name_method::SAME_NAME_METHOD),\n     LintId::of(shadow::SHADOW_REUSE),"}, {"sha": "604bd44c6c59a697890469a7cf5df97265ac4bde", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -336,6 +336,7 @@ mod precedence;\n mod ptr;\n mod ptr_eq;\n mod ptr_offset_with_cast;\n+mod pub_use;\n mod question_mark;\n mod ranges;\n mod redundant_clone;\n@@ -871,6 +872,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(|| Box::new(crate_in_macro_def::CrateInMacroDef));\n     store.register_early_pass(|| Box::new(empty_structs_with_brackets::EmptyStructsWithBrackets));\n     store.register_late_pass(|| Box::new(unnecessary_owned_empty_strings::UnnecessaryOwnedEmptyStrings));\n+    store.register_early_pass(|| Box::new(pub_use::PubUse));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "9d2b0cedb60a165f18a843a25cb8817468654f00", "filename": "clippy_lints/src/pub_use.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Fpub_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/clippy_lints%2Fsrc%2Fpub_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpub_use.rs?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -0,0 +1,56 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+use rustc_ast::ast::{Item, ItemKind, VisibilityKind};\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    ///\n+    /// Restricts the usage of `pub use ...`\n+    ///\n+    /// ### Why is this bad?\n+    ///\n+    /// `pub use` is usually fine, but a project may wish to limit `pub use` instances to prevent\n+    /// unintentional exports or to encourage placing exported items directly in public modules\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// pub mod outer {\n+    ///     mod inner {\n+    ///         pub struct Test {}\n+    ///     }\n+    ///     pub use inner::Test;\n+    /// }\n+    ///\n+    /// use outer::Test;\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// pub mod outer {\n+    ///     pub struct Test {}\n+    /// }\n+    ///\n+    /// use outer::Test;\n+    /// ```\n+    #[clippy::version = \"1.62.0\"]\n+    pub PUB_USE,\n+    restriction,\n+    \"restricts the usage of `pub use`\"\n+}\n+declare_lint_pass!(PubUse => [PUB_USE]);\n+\n+impl EarlyLintPass for PubUse {\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n+        if let ItemKind::Use(_) = item.kind &&\n+            let VisibilityKind::Public = item.vis.kind {\n+                span_lint_and_help(\n+                    cx,\n+                    PUB_USE,\n+                    item.span,\n+                    \"using `pub use`\",\n+                    None,\n+                    \"move the exported item to a public module instead\",\n+                );\n+            }\n+    }\n+}"}, {"sha": "65542bedec7bc36062648d1c9fd5057344661ff5", "filename": "tests/ui/pub_use.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/tests%2Fui%2Fpub_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/tests%2Fui%2Fpub_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpub_use.rs?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -0,0 +1,14 @@\n+#![warn(clippy::pub_use)]\n+#![allow(unused_imports)]\n+#![no_main]\n+\n+pub mod outer {\n+    mod inner {\n+        pub struct Test {}\n+    }\n+    // should be linted\n+    pub use inner::Test;\n+}\n+\n+// should not be linted\n+use std::fmt;"}, {"sha": "9ab710df818ca2a3be3394b1b95ceeb32f5a1812", "filename": "tests/ui/pub_use.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b6645d022e492a20da31123f8aff5b5af3eb31c9/tests%2Fui%2Fpub_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6645d022e492a20da31123f8aff5b5af3eb31c9/tests%2Fui%2Fpub_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpub_use.stderr?ref=b6645d022e492a20da31123f8aff5b5af3eb31c9", "patch": "@@ -0,0 +1,11 @@\n+error: using `pub use`\n+  --> $DIR/pub_use.rs:10:5\n+   |\n+LL |     pub use inner::Test;\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::pub-use` implied by `-D warnings`\n+   = help: move the exported item to a public module instead\n+\n+error: aborting due to previous error\n+"}]}