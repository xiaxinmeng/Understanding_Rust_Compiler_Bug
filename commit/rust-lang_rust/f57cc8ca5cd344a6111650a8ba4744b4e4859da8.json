{"sha": "f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "node_id": "C_kwDOAAsO6NoAKGY1N2NjOGNhNWNkMzQ0YTYxMTE2NTBhOGJhNDc0NGI0ZTQ4NTlkYTg", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-02-23T14:44:57Z"}, "committer": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-02-23T14:44:57Z"}, "message": "Always evaluate all cfg predicate in all() and any()", "tree": {"sha": "8c5f840d0852e214261c038845612cd0054675e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c5f840d0852e214261c038845612cd0054675e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "html_url": "https://github.com/rust-lang/rust/commit/f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb4ee81ef555126e49b3e9f16ca6f12a3264a451", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4ee81ef555126e49b3e9f16ca6f12a3264a451", "html_url": "https://github.com/rust-lang/rust/commit/cb4ee81ef555126e49b3e9f16ca6f12a3264a451"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "628da8b6bbb73b5d118f53cdb86c35730f5fc9df", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "patch": "@@ -594,10 +594,18 @@ pub fn eval_condition(\n             match cfg.name_or_empty() {\n                 sym::any => mis\n                     .iter()\n-                    .any(|mi| eval_condition(mi.meta_item().unwrap(), sess, features, eval)),\n+                    // We don't use any() here, because we want to evaluate all cfg condition\n+                    // as eval_condition can (and does) extra checks\n+                    .fold(false, |res, mi| {\n+                        res | eval_condition(mi.meta_item().unwrap(), sess, features, eval)\n+                    }),\n                 sym::all => mis\n                     .iter()\n-                    .all(|mi| eval_condition(mi.meta_item().unwrap(), sess, features, eval)),\n+                    // We don't use all() here, because we want to evaluate all cfg condition\n+                    // as eval_condition can (and does) extra checks\n+                    .fold(true, |res, mi| {\n+                        res & eval_condition(mi.meta_item().unwrap(), sess, features, eval)\n+                    }),\n                 sym::not => {\n                     if mis.len() != 1 {\n                         struct_span_err!("}, {"sha": "5bf80bd74b843aba4c2e54a9b3bf1689c6d9c0e3", "filename": "src/test/ui/cfg/cfg-path-error.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.rs?ref=f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "patch": "@@ -0,0 +1,19 @@\n+// check-fail\n+\n+#[cfg(any(foo, foo::bar))]\n+//~^ERROR `cfg` predicate key must be an identifier\n+fn foo1() {}\n+\n+#[cfg(any(foo::bar, foo))]\n+//~^ERROR `cfg` predicate key must be an identifier\n+fn foo2() {}\n+\n+#[cfg(all(foo, foo::bar))]\n+//~^ERROR `cfg` predicate key must be an identifier\n+fn foo3() {}\n+\n+#[cfg(all(foo::bar, foo))]\n+//~^ERROR `cfg` predicate key must be an identifier\n+fn foo4() {}\n+\n+fn main() {}"}, {"sha": "84b44b2b0c24a021467e56df3772630d07763ada", "filename": "src/test/ui/cfg/cfg-path-error.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f57cc8ca5cd344a6111650a8ba4744b4e4859da8/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fcfg-path-error.stderr?ref=f57cc8ca5cd344a6111650a8ba4744b4e4859da8", "patch": "@@ -0,0 +1,26 @@\n+error: `cfg` predicate key must be an identifier\n+  --> $DIR/cfg-path-error.rs:3:16\n+   |\n+LL | #[cfg(any(foo, foo::bar))]\n+   |                ^^^^^^^^\n+\n+error: `cfg` predicate key must be an identifier\n+  --> $DIR/cfg-path-error.rs:7:11\n+   |\n+LL | #[cfg(any(foo::bar, foo))]\n+   |           ^^^^^^^^\n+\n+error: `cfg` predicate key must be an identifier\n+  --> $DIR/cfg-path-error.rs:11:16\n+   |\n+LL | #[cfg(all(foo, foo::bar))]\n+   |                ^^^^^^^^\n+\n+error: `cfg` predicate key must be an identifier\n+  --> $DIR/cfg-path-error.rs:15:11\n+   |\n+LL | #[cfg(all(foo::bar, foo))]\n+   |           ^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}