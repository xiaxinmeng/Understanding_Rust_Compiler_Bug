{"sha": "df1ec91d952aa39646f38775a51834205fb75bef", "node_id": "C_kwDOAAsO6NoAKGRmMWVjOTFkOTUyYWEzOTY0NmYzODc3NWE1MTgzNDIwNWZiNzViZWY", "commit": {"author": {"name": "Chase Ruskin", "email": "c.ruskin@ufl.edu", "date": "2022-01-31T00:16:10Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-04-19T01:48:10Z"}, "message": "adds lint logic and test for bytes_count_to_len\n\nformats code with\n\nfixes single match clippy error to replace with if let\n\nswaps ident.name.as_str to ident.name == sym for count fn", "tree": {"sha": "58e0f67b46e026dba2353ef8e7c8deaea724b59e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58e0f67b46e026dba2353ef8e7c8deaea724b59e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df1ec91d952aa39646f38775a51834205fb75bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df1ec91d952aa39646f38775a51834205fb75bef", "html_url": "https://github.com/rust-lang/rust/commit/df1ec91d952aa39646f38775a51834205fb75bef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df1ec91d952aa39646f38775a51834205fb75bef/comments", "author": {"login": "c-rus", "id": 51766769, "node_id": "MDQ6VXNlcjUxNzY2NzY5", "avatar_url": "https://avatars.githubusercontent.com/u/51766769?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-rus", "html_url": "https://github.com/c-rus", "followers_url": "https://api.github.com/users/c-rus/followers", "following_url": "https://api.github.com/users/c-rus/following{/other_user}", "gists_url": "https://api.github.com/users/c-rus/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-rus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-rus/subscriptions", "organizations_url": "https://api.github.com/users/c-rus/orgs", "repos_url": "https://api.github.com/users/c-rus/repos", "events_url": "https://api.github.com/users/c-rus/events{/privacy}", "received_events_url": "https://api.github.com/users/c-rus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3abd2c08abf651251dc4df31dfc9db77b652a2ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/3abd2c08abf651251dc4df31dfc9db77b652a2ae", "html_url": "https://github.com/rust-lang/rust/commit/3abd2c08abf651251dc4df31dfc9db77b652a2ae"}], "stats": {"total": 94, "additions": 94, "deletions": 0}, "files": [{"sha": "5de598a3204d03c0db2663dfa96bde9ca69e2998", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -3299,6 +3299,7 @@ Released 2018-09-13\n [`boxed_local`]: https://rust-lang.github.io/rust-clippy/master/index.html#boxed_local\n [`branches_sharing_code`]: https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code\n [`builtin_type_shadow`]: https://rust-lang.github.io/rust-clippy/master/index.html#builtin_type_shadow\n+[`bytes_count_to_len`]: https://rust-lang.github.io/rust-clippy/master/index.html#bytes_count_to_len\n [`bytes_nth`]: https://rust-lang.github.io/rust-clippy/master/index.html#bytes_nth\n [`cargo_common_metadata`]: https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata\n [`case_sensitive_file_extension_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#case_sensitive_file_extension_comparisons"}, {"sha": "799d3783f74fd50030b39ee2501e84e4ee374287", "filename": "clippy_lints/src/bytes_count_to_len.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Fbytes_count_to_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Fbytes_count_to_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytes_count_to_len.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -0,0 +1,54 @@\n+use clippy_utils::diagnostics::span_lint_and_note;\n+use if_chain::if_chain;\n+use rustc_hir as hir;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// It checks for `str::bytes().count()` and suggests replacing it with\n+    /// `str::len()`.\n+    ///\n+    /// ### Why is this bad?\n+    /// `str::bytes().count()` is longer and may not be as performant as using\n+    /// `str::len()`.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// \"hello\".bytes().count();\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// \"hello\".len();\n+    /// ```\n+    #[clippy::version = \"1.60.0\"]\n+    pub BYTES_COUNT_TO_LEN,\n+    complexity,\n+    \"Using bytest().count() when len() performs the same functionality\"\n+}\n+\n+declare_lint_pass!(BytesCountToLen => [BYTES_COUNT_TO_LEN]);\n+\n+impl<'tcx> LateLintPass<'tcx> for BytesCountToLen {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n+        if_chain! {\n+            //check for method call called \"count\"\n+            if let hir::ExprKind::MethodCall(count_path, count_args, _) = &expr.kind;\n+            if count_path.ident.name == rustc_span::sym::count;\n+            if let [bytes_expr] = &**count_args;\n+            //check for method call called \"bytes\" that was linked to \"count\"\n+            if let hir::ExprKind::MethodCall(bytes_path, _, _) = &bytes_expr.kind;\n+            if bytes_path.ident.name.as_str() == \"bytes\";\n+            then {\n+                span_lint_and_note(\n+                    cx,\n+                    BYTES_COUNT_TO_LEN,\n+                    expr.span,\n+                    \"using long and hard to read `.bytes().count()`\",\n+                    None,\n+                    \"`.len()` achieves same functionality\"\n+                );\n+            }\n+        };\n+    }\n+}"}, {"sha": "0294b9866ac1413daec13c9ef0bd9869b2fcea64", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -23,6 +23,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(bool_assert_comparison::BOOL_ASSERT_COMPARISON),\n     LintId::of(booleans::LOGIC_BUG),\n     LintId::of(booleans::NONMINIMAL_BOOL),\n+    LintId::of(bytes_count_to_len::BYTES_COUNT_TO_LEN),\n     LintId::of(casts::CAST_ABS_TO_UNSIGNED),\n     LintId::of(casts::CAST_ENUM_CONSTRUCTOR),\n     LintId::of(casts::CAST_ENUM_TRUNCATION),"}, {"sha": "cd637b199fe270390556765eb55b6149ae05a690", "filename": "clippy_lints/src/lib.register_complexity.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_complexity.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -5,6 +5,7 @@\n store.register_group(true, \"clippy::complexity\", Some(\"clippy_complexity\"), vec![\n     LintId::of(attrs::DEPRECATED_CFG_ATTR),\n     LintId::of(booleans::NONMINIMAL_BOOL),\n+    LintId::of(bytes_count_to_len::BYTES_COUNT_TO_LEN),\n     LintId::of(casts::CHAR_LIT_AS_U8),\n     LintId::of(casts::UNNECESSARY_CAST),\n     LintId::of(derivable_impls::DERIVABLE_IMPLS),"}, {"sha": "590fc502738f1db6c74afd78c4bbf463134222db", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -64,6 +64,7 @@ store.register_lints(&[\n     booleans::NONMINIMAL_BOOL,\n     borrow_as_ptr::BORROW_AS_PTR,\n     bytecount::NAIVE_BYTECOUNT,\n+    bytes_count_to_len::BYTES_COUNT_TO_LEN,\n     cargo::CARGO_COMMON_METADATA,\n     cargo::MULTIPLE_CRATE_VERSIONS,\n     cargo::NEGATIVE_FEATURE_NAMES,"}, {"sha": "9a9ba4f177908c6a4890162962850adb4e8aeb21", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -181,6 +181,7 @@ mod bool_assert_comparison;\n mod booleans;\n mod borrow_as_ptr;\n mod bytecount;\n+mod bytes_count_to_len;\n mod cargo;\n mod case_sensitive_file_extension_comparisons;\n mod casts;\n@@ -875,6 +876,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(unnecessary_owned_empty_strings::UnnecessaryOwnedEmptyStrings));\n     store.register_early_pass(|| Box::new(pub_use::PubUse));\n     store.register_late_pass(|| Box::new(format_push_string::FormatPushString));\n+    store.register_late_pass(|| Box::new(bytes_count_to_len::BytesCountToLen));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "b2dd2bfeeed77ee6de69c464ddf07189583c186b", "filename": "tests/ui/bytes_count_to_len.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/tests%2Fui%2Fbytes_count_to_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/tests%2Fui%2Fbytes_count_to_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_count_to_len.rs?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -0,0 +1,15 @@\n+#![warn(clippy::bytes_count_to_len)]\n+\n+fn main() {\n+    let s1 = String::from(\"world\");\n+\n+    //test warning against a string literal\n+    \"hello\".bytes().count();\n+\n+    //test warning against a string variable\n+    s1.bytes().count();\n+\n+    //make sure using count() normally doesn't trigger warning\n+    let vector = [0, 1, 2];\n+    let size = vector.iter().count();\n+}"}, {"sha": "ddd08ee824c1188db0c9e5a9a008fdaa09be6f35", "filename": "tests/ui/bytes_count_to_len.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/df1ec91d952aa39646f38775a51834205fb75bef/tests%2Fui%2Fbytes_count_to_len.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df1ec91d952aa39646f38775a51834205fb75bef/tests%2Fui%2Fbytes_count_to_len.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytes_count_to_len.stderr?ref=df1ec91d952aa39646f38775a51834205fb75bef", "patch": "@@ -0,0 +1,19 @@\n+error: using long and hard to read `.bytes().count()`\n+  --> $DIR/bytes_count_to_len.rs:7:5\n+   |\n+LL |     \"hello\".bytes().count();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::bytes-count-to-len` implied by `-D warnings`\n+   = note: `.len()` achieves same functionality\n+\n+error: using long and hard to read `.bytes().count()`\n+  --> $DIR/bytes_count_to_len.rs:10:5\n+   |\n+LL |     s1.bytes().count();\n+   |     ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `.len()` achieves same functionality\n+\n+error: aborting due to 2 previous errors\n+"}]}