{"sha": "b5fef37d23f4e4471caea5508ab18da20522e51f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ZmVmMzdkMjNmNGU0NDcxY2FlYTU1MDhhYjE4ZGEyMDUyMmU1MWY=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-11-25T02:34:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-25T02:34:10Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Wesley Wiser <wwiser@gmail.com>", "tree": {"sha": "a153486c344899b8e86a937d3d1cf1d14dbf912d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a153486c344899b8e86a937d3d1cf1d14dbf912d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5fef37d23f4e4471caea5508ab18da20522e51f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfvcKiCRBK7hj4Ov3rIwAAdHIIAGMtav8hBEzxJAAYHV0S6tKJ\nyT8EE3TbrVyQOSd64kFf0fTnyEu7FzRwfmYoeOv/VJb3aGeu9XhbXt+rQZR999fb\nMOwbK+A5My+HPerHTLSVKwQCqAIQVDweBrBQ/zokjoOB/ZV8ukNouS5FSWX55Nuy\np/7IFHAdQITKTiT26pWTD5p1APtpeTq8IUDQNyIUPYmdtgW4rrO7oTtjdLI/Qc+p\nhAykNbgrNmeB3B/ramgChHVmEMv1BHWoje2BC11a7Sq637Aov8DFQe1dOsyNHHwA\n5DdVfulXtgHDan25R/+d5+YvLiJohNFJPdNPG0w4ZgkppPk4VzDRaHKPS7OOP6w=\n=iJtA\n-----END PGP SIGNATURE-----\n", "payload": "tree a153486c344899b8e86a937d3d1cf1d14dbf912d\nparent 51268d2735ed59b4f6b6351fd75edd0f4cf19c9f\nauthor Rich Kadel <richkadel@google.com> 1606271650 -0800\ncommitter GitHub <noreply@github.com> 1606271650 -0800\n\nApply suggestions from code review\n\nCo-authored-by: Wesley Wiser <wwiser@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5fef37d23f4e4471caea5508ab18da20522e51f", "html_url": "https://github.com/rust-lang/rust/commit/b5fef37d23f4e4471caea5508ab18da20522e51f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5fef37d23f4e4471caea5508ab18da20522e51f/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f", "html_url": "https://github.com/rust-lang/rust/commit/51268d2735ed59b4f6b6351fd75edd0f4cf19c9f"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "51baa2aafb7d89b6f3c3e74e2ceebc417c94eee9", "filename": "compiler/rustc_codegen_llvm/src/coverageinfo/mapgen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5fef37d23f4e4471caea5508ab18da20522e51f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5fef37d23f4e4471caea5508ab18da20522e51f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcoverageinfo%2Fmapgen.rs?ref=b5fef37d23f4e4471caea5508ab18da20522e51f", "patch": "@@ -169,7 +169,7 @@ impl CoverageMapGenerator {\n         );\n \n         // Create the coverage data header (Note, fields 0 and 2 are now always zero,\n-        // as of `llvm::coverage::CovMapVersion::Version4`.\n+        // as of `llvm::coverage::CovMapVersion::Version4`.)\n         let zero_was_n_records_val = cx.const_u32(0);\n         let filenames_size_val = cx.const_u32(filenames_size as u32);\n         let zero_was_coverage_size_val = cx.const_u32(0);"}, {"sha": "219ba15ad116dd2d68027e8e00bb1b2185d94c63", "filename": "src/test/run-make-fulldeps/coverage-llvmir-base/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5fef37d23f4e4471caea5508ab18da20522e51f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/b5fef37d23f4e4471caea5508ab18da20522e51f/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-llvmir-base%2FMakefile?ref=b5fef37d23f4e4471caea5508ab18da20522e51f", "patch": "@@ -56,7 +56,7 @@ else\n \t\t-DINSTR_PROF_ORDERFILE='$(DATA_SECTION_PREFIX)__llvm_orderfile'\n endif\n \n-ifeq ($(LLVM_VERSION_11_PLUS),false)\n+ifeq ($(LLVM_VERSION_11_PLUS),true)\n all: test_llvm_ir\n else\n $(info Rust option `-Z instrument-coverage` requires LLVM 11 or higher. Test skipped.)"}]}