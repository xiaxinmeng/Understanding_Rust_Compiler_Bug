{"sha": "1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MzhlZjZiZGEwN2JhOWY2NmViODNiMWJmOTUwM2QxMzMzYjc0NDI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-13T16:16:19Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-01-13T16:16:19Z"}, "message": "rustup to 2017-01-12", "tree": {"sha": "27e1ff590e40793608114ae54aa053a53e9b1d97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27e1ff590e40793608114ae54aa053a53e9b1d97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYeP1TAAoJEFbW7qD8Z6xG5F4P/jKThVcwL3ys9W7iM8CYml74\nKH839JYoitrNGY/VXycFU5jwLjHphGJoO8npOYV9A2lfNecgRQa7EarAkz3FP1Gq\nY/JDDgr1v9LpiUIeK0+96JZZylfoPE6QUxX4WbqD4fsw4fYi0OmYm3ygDawHuYD2\n0qZo9omMR0j/yrUomC8FEWW3Ah62FwznOI13EPXrWTPCRjuCpkngDubX/HLnKNO1\n6v/KEgLSc26rY7I95FAM3xEr3pFD9oHwJAy2TsUsofaRch1lPFmSB+cgC0chCBbS\nYpIuvVbSxqJQ5mIubu2SfHt+eAAC67UHv9jsYnHjxlzANfx+iRG3gElY4SQO7PNc\n8gyo3he3as5vE795TU0YFG7umL9eLlJtl6qzigN1ip3+WH1/l52SlPn2hx3ZauF0\nxe3YkXhLoWOs+5GPNrG1d9rimLmQqM7neyw+9e5dR1pkREtxQkSREBadHDk8F8ez\niikTY2J+cwv0aohQHQd7xjdomZ+3yKQ8m73F9pX1yjuDbVgjDSxNAYzwGnTogPcW\nsCMWWrDU4TYb6aZsSt3yvbClsY6dmmwdTlI+2q3h8xWud3cBloaUQdQeDhcTK2j5\neJs1iNDOt6A3TaknfSnY5e3RpAVESGXWa79v/ZTdz7rSxu5K258dLVD6t7lzGF/W\n78RtnUMYMVGvRRQwhVsG\n=jTg4\n-----END PGP SIGNATURE-----", "payload": "tree 27e1ff590e40793608114ae54aa053a53e9b1d97\nparent d889deda5a7df72153a79c712ab44caa63431b5c\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1484324179 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1484324179 +0100\n\nrustup to 2017-01-12"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "html_url": "https://github.com/rust-lang/rust/commit/1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d889deda5a7df72153a79c712ab44caa63431b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d889deda5a7df72153a79c712ab44caa63431b5c", "html_url": "https://github.com/rust-lang/rust/commit/d889deda5a7df72153a79c712ab44caa63431b5c"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "e2ed5459d4590507c409460868828758496e2fcd", "filename": "src/eval_context.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "patch": "@@ -200,9 +200,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             Struct(_)    => unimplemented!(),\n             Tuple(_)     => unimplemented!(),\n             Function(_)  => unimplemented!(),\n-            Array(_, _)  => unimplemented!(),\n+            Array(_)  => unimplemented!(),\n             Repeat(_, _) => unimplemented!(),\n-            Dummy        => unimplemented!(),\n         };\n \n         Ok(Value::ByVal(primval))\n@@ -261,7 +260,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         // TODO(solson): Is this inefficient? Needs investigation.\n         let ty = self.monomorphize(ty, substs);\n \n-        self.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n+        self.tcx.infer_ctxt((), Reveal::All).enter(|infcx| {\n             ty.layout(&infcx).map_err(EvalError::Layout)\n         })\n     }"}, {"sha": "c9530f636d2ccdecf46f201fabbb857530dc67d3", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "patch": "@@ -462,7 +462,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     pub(super) fn fulfill_obligation(&self, trait_ref: ty::PolyTraitRef<'tcx>) -> traits::Vtable<'tcx, ()> {\n         // Do the initial selection for the obligation. This yields the shallow result we are\n         // looking for -- that is, what specific impl.\n-        self.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n+        self.tcx.infer_ctxt((), Reveal::All).enter(|infcx| {\n             let mut selcx = traits::SelectionContext::new(&infcx);\n \n             let obligation = traits::Obligation::new(\n@@ -833,7 +833,7 @@ pub(super) fn get_impl_method<'a, 'tcx>(\n \n     match trait_def.ancestors(impl_def_id).defs(tcx, name, ty::AssociatedKind::Method).next() {\n         Some(node_item) => {\n-            let substs = tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n+            let substs = tcx.infer_ctxt((), Reveal::All).enter(|infcx| {\n                 let substs = substs.rebase_onto(tcx, trait_def_id, impl_substs);\n                 let substs = traits::translate_substs(&infcx, impl_def_id,\n                                                       substs, node_item.node);\n@@ -870,7 +870,7 @@ pub fn find_method<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     match trait_def.ancestors(impl_def_id).defs(tcx, name, ty::AssociatedKind::Method).next() {\n         Some(node_item) => {\n-            let substs = tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n+            let substs = tcx.infer_ctxt((), Reveal::All).enter(|infcx| {\n                 let substs = substs.rebase_onto(tcx, trait_def_id, impl_substs);\n                 let substs = traits::translate_substs(&infcx, impl_def_id, substs, node_item.node);\n                 tcx.lift(&substs).unwrap_or_else(|| {"}, {"sha": "1c589f43175e01a5c287dcf61f48f2d80a37bd28", "filename": "src/vtable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1838ef6bda07ba9f66eb83b1bf9503d1333b7442/src%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvtable.rs?ref=1838ef6bda07ba9f66eb83b1bf9503d1333b7442", "patch": "@@ -183,7 +183,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         debug!(\"normalize_and_test_predicates(predicates={:?})\",\n                predicates);\n \n-        self.tcx.infer_ctxt(None, None, Reveal::All).enter(|infcx| {\n+        self.tcx.infer_ctxt((), Reveal::All).enter(|infcx| {\n             let mut selcx = SelectionContext::new(&infcx);\n             let mut fulfill_cx = traits::FulfillmentContext::new();\n             let cause = traits::ObligationCause::dummy();"}]}