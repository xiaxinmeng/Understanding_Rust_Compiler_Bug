{"sha": "60a053725e5c5c3a78e3d0918ca00e9e98324a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYTA1MzcyNWU1YzVjM2E3OGUzZDA5MThjYTAwZTllOTgzMjRhOTU=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-02T15:48:21Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-11T10:37:16Z"}, "message": "move suspicious_map to its own module", "tree": {"sha": "f483cbbd4b064d549b4e215a998aa6a34d41d77b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f483cbbd4b064d549b4e215a998aa6a34d41d77b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60a053725e5c5c3a78e3d0918ca00e9e98324a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60a053725e5c5c3a78e3d0918ca00e9e98324a95", "html_url": "https://github.com/rust-lang/rust/commit/60a053725e5c5c3a78e3d0918ca00e9e98324a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60a053725e5c5c3a78e3d0918ca00e9e98324a95/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "110dac7f58257a0186daf13688aa8b02fba67bdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/110dac7f58257a0186daf13688aa8b02fba67bdb", "html_url": "https://github.com/rust-lang/rust/commit/110dac7f58257a0186daf13688aa8b02fba67bdb"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "a807afb6051196b263ba9450f262555cf1575c70", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/60a053725e5c5c3a78e3d0918ca00e9e98324a95/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60a053725e5c5c3a78e3d0918ca00e9e98324a95/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=60a053725e5c5c3a78e3d0918ca00e9e98324a95", "patch": "@@ -13,6 +13,7 @@ mod ok_expect;\n mod option_as_ref_deref;\n mod option_map_unwrap_or;\n mod skip_while_next;\n+mod suspicious_map;\n mod unnecessary_filter_map;\n mod unnecessary_lazy_eval;\n mod unwrap_used;\n@@ -1716,7 +1717,7 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n                 unnecessary_filter_map::lint(cx, expr, arg_lists[0]);\n                 filter_map_identity::check(cx, expr, arg_lists[0], method_spans[0]);\n             },\n-            [\"count\", \"map\"] => lint_suspicious_map(cx, expr),\n+            [\"count\", \"map\"] => suspicious_map::check(cx, expr),\n             [\"assume_init\"] => lint_maybe_uninit(cx, &arg_lists[0][0], expr),\n             [\"unwrap_or\", arith @ (\"checked_add\" | \"checked_sub\" | \"checked_mul\")] => {\n                 manual_saturating_arithmetic::lint(cx, expr, &arg_lists, &arith[\"checked_\".len()..])\n@@ -3574,17 +3575,6 @@ fn is_maybe_uninit_ty_valid(cx: &LateContext<'_>, ty: Ty<'_>) -> bool {\n     }\n }\n \n-fn lint_suspicious_map(cx: &LateContext<'_>, expr: &hir::Expr<'_>) {\n-    span_lint_and_help(\n-        cx,\n-        SUSPICIOUS_MAP,\n-        expr.span,\n-        \"this call to `map()` won't have an effect on the call to `count()`\",\n-        None,\n-        \"make sure you did not confuse `map` with `filter` or `for_each`\",\n-    );\n-}\n-\n fn lint_map_collect(\n     cx: &LateContext<'_>,\n     expr: &hir::Expr<'_>,"}, {"sha": "e135a826dc4d093e855a228d679b40669249ceb9", "filename": "clippy_lints/src/methods/suspicious_map.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/60a053725e5c5c3a78e3d0918ca00e9e98324a95/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60a053725e5c5c3a78e3d0918ca00e9e98324a95/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fsuspicious_map.rs?ref=60a053725e5c5c3a78e3d0918ca00e9e98324a95", "patch": "@@ -0,0 +1,16 @@\n+use crate::utils::span_lint_and_help;\n+use rustc_hir as hir;\n+use rustc_lint::LateContext;\n+\n+use super::SUSPICIOUS_MAP;\n+\n+pub(super) fn check(cx: &LateContext<'_>, expr: &hir::Expr<'_>) {\n+    span_lint_and_help(\n+        cx,\n+        SUSPICIOUS_MAP,\n+        expr.span,\n+        \"this call to `map()` won't have an effect on the call to `count()`\",\n+        None,\n+        \"make sure you did not confuse `map` with `filter` or `for_each`\",\n+    );\n+}"}]}