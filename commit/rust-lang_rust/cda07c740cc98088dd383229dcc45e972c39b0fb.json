{"sha": "cda07c740cc98088dd383229dcc45e972c39b0fb", "node_id": "C_kwDOAAsO6NoAKGNkYTA3Yzc0MGNjOTgwODhkZDM4MzIyOWRjYzQ1ZTk3MmMzOWIwZmI", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-08T20:30:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-08T20:30:43Z"}, "message": "Rollup merge of #89672 - klensy:unwrap-or-macro, r=jackh726\n\nRemove unwrap_or! macro\n\nRemoves `unwrap_or!` macro and replaces it with `match`.\n\nIt's kinda cleanup, as rustc_ast not the best place for this macro and this is used only in 2 places anyway.", "tree": {"sha": "db91de3bcf78004fcc93ed988e4d8507a7ec3cc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db91de3bcf78004fcc93ed988e4d8507a7ec3cc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cda07c740cc98088dd383229dcc45e972c39b0fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYKpzCRBK7hj4Ov3rIwAAt6MIAEa0ToVzpfR+BNT7qM84iQ2w\nPWFa9zkidJKBIQIMSwtpR69kHWD3ZDtNKa6jn9zS7S/VI/hWXDj3AqhMaS5KMi/b\nVcWJ1sdhkPrF/HraJDgz+LB2LLTxGeo/y3azcimxF0fNzFbIfp8vvu54+NmR8UJ+\nKJCC8i7gO0RUk/tOpn9p/NXQDEb6tOoBdqTM05lJ07kESQIvuOJUagMep6brNe5h\nJhuFwJ89mP+9a+1bK/82vzSLGCKe55txlHRSskFD+1iEWyuljHFQONFBZsZgs1F/\nhPgJoojq3FmkU3coo7fha1QonpjY55w3ueceN+MxVGQat2PIn+drUKqJfalOYt4=\n=FUaJ\n-----END PGP SIGNATURE-----\n", "payload": "tree db91de3bcf78004fcc93ed988e4d8507a7ec3cc0\nparent 4adc8ea2ac7160a82283cac053c5f1ff5d27c7a9\nparent 77fce75ba1c6d08a1919d270b53fa1a454c5067e\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1633725043 +0200\ncommitter GitHub <noreply@github.com> 1633725043 +0200\n\nRollup merge of #89672 - klensy:unwrap-or-macro, r=jackh726\n\nRemove unwrap_or! macro\n\nRemoves `unwrap_or!` macro and replaces it with `match`.\n\nIt's kinda cleanup, as rustc_ast not the best place for this macro and this is used only in 2 places anyway.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cda07c740cc98088dd383229dcc45e972c39b0fb", "html_url": "https://github.com/rust-lang/rust/commit/cda07c740cc98088dd383229dcc45e972c39b0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cda07c740cc98088dd383229dcc45e972c39b0fb/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4adc8ea2ac7160a82283cac053c5f1ff5d27c7a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4adc8ea2ac7160a82283cac053c5f1ff5d27c7a9", "html_url": "https://github.com/rust-lang/rust/commit/4adc8ea2ac7160a82283cac053c5f1ff5d27c7a9"}, {"sha": "77fce75ba1c6d08a1919d270b53fa1a454c5067e", "url": "https://api.github.com/repos/rust-lang/rust/commits/77fce75ba1c6d08a1919d270b53fa1a454c5067e", "html_url": "https://github.com/rust-lang/rust/commit/77fce75ba1c6d08a1919d270b53fa1a454c5067e"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "e3c610585d978e32c8ef8071aa0ffda993431310", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=cda07c740cc98088dd383229dcc45e972c39b0fb", "patch": "@@ -20,16 +20,6 @@\n #[macro_use]\n extern crate rustc_macros;\n \n-#[macro_export]\n-macro_rules! unwrap_or {\n-    ($opt:expr, $default:expr) => {\n-        match $opt {\n-            Some(x) => x,\n-            None => $default,\n-        }\n-    };\n-}\n-\n pub mod util {\n     pub mod classify;\n     pub mod comments;"}, {"sha": "b6d66eb12d08314e19aa0e65fee5e343a18aa408", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=cda07c740cc98088dd383229dcc45e972c39b0fb", "patch": "@@ -1,7 +1,6 @@\n use crate::context::{CheckLintNameResult, LintStore};\n use crate::late::unerased_lint_store;\n use rustc_ast as ast;\n-use rustc_ast::unwrap_or;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::{struct_span_err, Applicability, DiagnosticBuilder};\n@@ -233,7 +232,10 @@ impl<'s> LintLevelsBuilder<'s> {\n                 Some(lvl) => lvl,\n             };\n \n-            let mut metas = unwrap_or!(attr.meta_item_list(), continue);\n+            let mut metas = match attr.meta_item_list() {\n+                Some(x) => x,\n+                None => continue,\n+            };\n \n             if metas.is_empty() {\n                 // FIXME (#55112): issue unused-attributes lint for `#[level()]`"}, {"sha": "515b2c3fd27909d0d72bdb4c838591a0d0d1593a", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cda07c740cc98088dd383229dcc45e972c39b0fb/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=cda07c740cc98088dd383229dcc45e972c39b0fb", "patch": "@@ -9,7 +9,6 @@ use crate::{BindingKey, ModuleKind, ResolutionError, Resolver, Segment};\n use crate::{CrateLint, Module, ModuleOrUniformRoot, ParentScope, PerNS, ScopeSet, Weak};\n use crate::{NameBinding, NameBindingKind, PathResult, PrivacyError, ToNameBinding};\n \n-use rustc_ast::unwrap_or;\n use rustc_ast::NodeId;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::ptr_key::PtrKey;\n@@ -349,10 +348,10 @@ impl<'a> Resolver<'a> {\n             if !self.is_accessible_from(single_import.vis.get(), parent_scope.module) {\n                 continue;\n             }\n-            let module = unwrap_or!(\n-                single_import.imported_module.get(),\n-                return Err((Undetermined, Weak::No))\n-            );\n+            let module = match single_import.imported_module.get() {\n+                Some(x) => x,\n+                None => return Err((Undetermined, Weak::No)),\n+            };\n             let ident = match single_import.kind {\n                 ImportKind::Single { source, .. } => source,\n                 _ => unreachable!(),"}]}