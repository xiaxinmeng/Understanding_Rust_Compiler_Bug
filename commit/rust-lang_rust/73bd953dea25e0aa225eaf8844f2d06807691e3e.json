{"sha": "73bd953dea25e0aa225eaf8844f2d06807691e3e", "node_id": "C_kwDOAAsO6NoAKDczYmQ5NTNkZWEyNWUwYWEyMjVlYWY4ODQ0ZjJkMDY4MDc2OTFlM2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-01T21:55:22Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-01T21:55:22Z"}, "message": "slighty simplify a few boolean expressions (clippy::nonminimal_bool)", "tree": {"sha": "e2ef4fb8c6385adb394fd6c98d51a581dce698b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2ef4fb8c6385adb394fd6c98d51a581dce698b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73bd953dea25e0aa225eaf8844f2d06807691e3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73bd953dea25e0aa225eaf8844f2d06807691e3e", "html_url": "https://github.com/rust-lang/rust/commit/73bd953dea25e0aa225eaf8844f2d06807691e3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73bd953dea25e0aa225eaf8844f2d06807691e3e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a07e33d2cc57d929bbd50a22cad703d4c666fc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a07e33d2cc57d929bbd50a22cad703d4c666fc2", "html_url": "https://github.com/rust-lang/rust/commit/5a07e33d2cc57d929bbd50a22cad703d4c666fc2"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "558253f727bcc7ff3d67dc3af01cca876f2ac6fc", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=73bd953dea25e0aa225eaf8844f2d06807691e3e", "patch": "@@ -677,8 +677,7 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     );\n                 }\n                 if let Rvalue::CopyForDeref(place) = rvalue {\n-                    if !place.ty(&self.body.local_decls, self.tcx).ty.builtin_deref(true).is_some()\n-                    {\n+                    if place.ty(&self.body.local_decls, self.tcx).ty.builtin_deref(true).is_none() {\n                         self.fail(\n                             location,\n                             \"`CopyForDeref` should only be used for dereferenceable types\","}, {"sha": "ee1c6fbfd650fdee648f196a5b38c51fd8083894", "filename": "compiler/rustc_hir_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=73bd953dea25e0aa225eaf8844f2d06807691e3e", "patch": "@@ -559,7 +559,7 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                 // struct; however, when EUV is run during typeck, it\n                 // may not. This will generate an error earlier in typeck,\n                 // so we can just ignore it.\n-                if !self.tcx().sess.has_errors().is_some() {\n+                if self.tcx().sess.has_errors().is_none() {\n                     span_bug!(with_expr.span, \"with expression doesn't evaluate to a struct\");\n                 }\n             }"}, {"sha": "8c3dff23b272d1890edb5c72424be78ba368d9fa", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=73bd953dea25e0aa225eaf8844f2d06807691e3e", "patch": "@@ -206,7 +206,7 @@ fn no_main_err(tcx: TyCtxt<'_>, visitor: &EntryContext<'_>) {\n     // The file may be empty, which leads to the diagnostic machinery not emitting this\n     // note. This is a relatively simple way to detect that case and emit a span-less\n     // note instead.\n-    let file_empty = !tcx.sess.source_map().lookup_line(sp.hi()).is_ok();\n+    let file_empty = tcx.sess.source_map().lookup_line(sp.hi()).is_err();\n \n     tcx.sess.emit_err(NoMainErr {\n         sp,"}, {"sha": "06206efb9abd52cdf5ed245959011fd581754454", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73bd953dea25e0aa225eaf8844f2d06807691e3e/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=73bd953dea25e0aa225eaf8844f2d06807691e3e", "patch": "@@ -389,7 +389,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             }\n         }\n \n-        assert!(force || !finalize.is_some()); // `finalize` implies `force`\n+        assert!(force || finalize.is_none()); // `finalize` implies `force`\n \n         // Make sure `self`, `super` etc produce an error when passed to here.\n         if orig_ident.is_path_segment_keyword() {"}]}