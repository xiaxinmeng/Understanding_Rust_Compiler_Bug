{"sha": "6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMWZiZmRiOGZlOWE2YjU0M2ZhMmIwZTY4OGY5MjhkMmVlMzU0Yjg=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-27T23:13:19Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2020-11-29T21:02:27Z"}, "message": "Add LocalUseVisitor", "tree": {"sha": "c953c9da8ec16c1c5837ee312091274949f548df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c953c9da8ec16c1c5837ee312091274949f548df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8", "html_url": "https://github.com/rust-lang/rust/commit/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5df286b636e0bf71a665599f099da18a2b90936c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5df286b636e0bf71a665599f099da18a2b90936c", "html_url": "https://github.com/rust-lang/rust/commit/5df286b636e0bf71a665599f099da18a2b90936c"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "28b3e79d7a6d6d9646edbb7804d1ddf6fad3a3d3", "filename": "clippy_lints/src/utils/visitors.rs", "status": "modified", "additions": 54, "deletions": 1, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs?ref=6e1fbfdb8fe9a6b543fa2b0e688f928d2ee354b8", "patch": "@@ -1,5 +1,7 @@\n use rustc_hir as hir;\n-use rustc_hir::intravisit::{self, Visitor};\n+use rustc_hir::def::Res;\n+use rustc_hir::intravisit::{self, walk_expr, NestedVisitorMap, Visitor};\n+use rustc_hir::{Arm, Expr, ExprKind, HirId, QPath, Stmt};\n use rustc_lint::LateContext;\n use rustc_middle::hir::map::Map;\n \n@@ -123,3 +125,54 @@ where\n         !ret_finder.failed\n     }\n }\n+\n+pub struct LocalUsedVisitor {\n+    pub local_hir_id: HirId,\n+    pub used: bool,\n+}\n+\n+impl LocalUsedVisitor {\n+    pub fn new(local_hir_id: HirId) -> Self {\n+        Self {\n+            local_hir_id,\n+            used: false,\n+        }\n+    }\n+\n+    fn check<T>(&mut self, t: T, visit: fn(&mut Self, T)) -> bool {\n+        visit(self, t);\n+        std::mem::replace(&mut self.used, false)\n+    }\n+\n+    pub fn check_arm(&mut self, arm: &Arm<'_>) -> bool {\n+        self.check(arm, Self::visit_arm)\n+    }\n+\n+    pub fn check_expr(&mut self, expr: &Expr<'_>) -> bool {\n+        self.check(expr, Self::visit_expr)\n+    }\n+\n+    pub fn check_stmt(&mut self, stmt: &Stmt<'_>) -> bool {\n+        self.check(stmt, Self::visit_stmt)\n+    }\n+}\n+\n+impl<'v> Visitor<'v> for LocalUsedVisitor {\n+    type Map = Map<'v>;\n+\n+    fn visit_expr(&mut self, expr: &'v Expr<'v>) {\n+        if let ExprKind::Path(QPath::Resolved(None, path)) = expr.kind {\n+            if let Res::Local(id) = path.res {\n+                if id == self.local_hir_id {\n+                    self.used = true;\n+                    return;\n+                }\n+            }\n+        }\n+        walk_expr(self, expr);\n+    }\n+\n+    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n+        NestedVisitorMap::None\n+    }\n+}"}]}