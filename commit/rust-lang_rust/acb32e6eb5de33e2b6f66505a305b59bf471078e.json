{"sha": "acb32e6eb5de33e2b6f66505a305b59bf471078e", "node_id": "C_kwDOAAsO6NoAKGFjYjMyZTZlYjVkZTMzZTJiNmY2NjUwNWEzMDViNTliZjQ3MTA3OGU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-21T18:23:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-04-21T18:23:21Z"}, "message": "Sync from rust 1dec35a1b0df406da5d7cae55a7fa8d186a2b028", "tree": {"sha": "d58a74e0afcc1bbe497efcf90919e733fe1d1e54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d58a74e0afcc1bbe497efcf90919e733fe1d1e54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acb32e6eb5de33e2b6f66505a305b59bf471078e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acb32e6eb5de33e2b6f66505a305b59bf471078e", "html_url": "https://github.com/rust-lang/rust/commit/acb32e6eb5de33e2b6f66505a305b59bf471078e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acb32e6eb5de33e2b6f66505a305b59bf471078e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a177a7f9df81993158ff3338af57bf9929d41971", "url": "https://api.github.com/repos/rust-lang/rust/commits/a177a7f9df81993158ff3338af57bf9929d41971", "html_url": "https://github.com/rust-lang/rust/commit/a177a7f9df81993158ff3338af57bf9929d41971"}, {"sha": "a923e9211a6adf4c78dd5f095a514455039e5fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a923e9211a6adf4c78dd5f095a514455039e5fb4", "html_url": "https://github.com/rust-lang/rust/commit/a923e9211a6adf4c78dd5f095a514455039e5fb4"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "8c45993a8b76bf7e4a171be65c81def5e6e6025c", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -772,6 +772,7 @@ fn codegen_stmt<'tcx>(\n         }\n         StatementKind::StorageLive(_)\n         | StatementKind::StorageDead(_)\n+        | StatementKind::Deinit(_)\n         | StatementKind::Nop\n         | StatementKind::FakeRead(..)\n         | StatementKind::Retag { .. }"}, {"sha": "ffa629ca16c8b19d7bbc372fcc4055c8d94262a8", "filename": "src/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -21,7 +21,7 @@ pub(crate) fn pointer_ty(tcx: TyCtxt<'_>) -> types::Type {\n }\n \n pub(crate) fn scalar_to_clif_type(tcx: TyCtxt<'_>, scalar: Scalar) -> Type {\n-    match scalar.value {\n+    match scalar.primitive() {\n         Primitive::Int(int, _sign) => match int {\n             Integer::I8 => types::I8,\n             Integer::I16 => types::I16,"}, {"sha": "349a726d7b04758fefc3f813f65345b1d1fa7f20", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -518,6 +518,7 @@ pub(crate) fn mir_operand_get_const_val<'tcx>(\n                         StatementKind::Assign(_)\n                         | StatementKind::FakeRead(_)\n                         | StatementKind::SetDiscriminant { .. }\n+                        | StatementKind::Deinit(_)\n                         | StatementKind::StorageLive(_)\n                         | StatementKind::StorageDead(_)\n                         | StatementKind::Retag(_, _)"}, {"sha": "357cb4a6d246fa451a1b42ff3413df5455ef3f81", "filename": "src/discriminant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fdiscriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fdiscriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiscriminant.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -105,7 +105,7 @@ pub(crate) fn codegen_get_discriminant<'tcx>(\n     // Decode the discriminant (specifically if it's niche-encoded).\n     match *tag_encoding {\n         TagEncoding::Direct => {\n-            let signed = match tag_scalar.value {\n+            let signed = match tag_scalar.primitive() {\n                 Int(_, signed) => signed,\n                 _ => false,\n             };"}, {"sha": "7f15bc75fda23e8fc933c892d4b94712ce9afa20", "filename": "src/driver/jit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -288,8 +288,8 @@ fn load_imported_symbols_for_jit(\n         match data[cnum.as_usize() - 1] {\n             Linkage::NotLinked | Linkage::IncludedFromDylib => {}\n             Linkage::Static => {\n-                let name = &crate_info.crate_name[&cnum];\n-                let mut err = sess.struct_err(&format!(\"Can't load static lib {}\", name.as_str()));\n+                let name = crate_info.crate_name[&cnum];\n+                let mut err = sess.struct_err(&format!(\"Can't load static lib {}\", name));\n                 err.note(\"rustc_codegen_cranelift can only load dylibs in JIT mode.\");\n                 err.emit();\n             }"}, {"sha": "8f80b02ae0d4e7d98d588cd255f2ac210bdf209e", "filename": "src/value_and_place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acb32e6eb5de33e2b6f66505a305b59bf471078e/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=acb32e6eb5de33e2b6f66505a305b59bf471078e", "patch": "@@ -50,7 +50,7 @@ fn codegen_field<'tcx>(\n }\n \n fn scalar_pair_calculate_b_offset(tcx: TyCtxt<'_>, a_scalar: Scalar, b_scalar: Scalar) -> Offset32 {\n-    let b_offset = a_scalar.value.size(&tcx).align_to(b_scalar.value.align(&tcx).abi);\n+    let b_offset = a_scalar.size(&tcx).align_to(b_scalar.align(&tcx).abi);\n     Offset32::new(b_offset.bytes().try_into().unwrap())\n }\n "}]}