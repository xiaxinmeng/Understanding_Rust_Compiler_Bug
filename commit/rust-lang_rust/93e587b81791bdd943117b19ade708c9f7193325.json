{"sha": "93e587b81791bdd943117b19ade708c9f7193325", "node_id": "C_kwDOAAsO6NoAKDkzZTU4N2I4MTc5MWJkZDk0MzExN2IxOWFkZTcwOGM5ZjcxOTMzMjU", "commit": {"author": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2022-05-04T15:32:42Z"}, "committer": {"name": "Emilio Cobos \u00c1lvarez", "email": "emilio@crisal.io", "date": "2022-05-04T15:35:29Z"}, "message": "slice: #[inline] a couple iterator methods.\n\nThe one I care about and actually saw in the wild not getting inlined is\nclone(). We ended up doing a whole function call for something that just\ncopies two pointers.\n\nI ended up marking as_slice / as_ref as well because make_slice is\ninline(always) itself, and is also the kind of think that can kill\nperformance in hot loops if you expect it to get inlined. But happy to\nundo those.", "tree": {"sha": "77376bbe801380deb1cff8d4c8c6d6361ec45d49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77376bbe801380deb1cff8d4c8c6d6361ec45d49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93e587b81791bdd943117b19ade708c9f7193325", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE53alAzPAxlP8it4A4RUtCZTkv4oFAmJynUEACgkQ4RUtCZTk\nv4pUAA//YTnaqbEEhzKj+kemYx0vti01pKckgSyjEHfNtR3kuFghmbf876GkPlZ9\n0m/J2cyglrLSRgsVIuzIIzNYjFu34Uq71zB4Sk2lUXsiEmU5I6aK7in1/04yqAi4\nrQyfmoIFf+kFkUsVd/Dj2dnFbe8lBYnann/X43utnUx/oyvUzkXATfFT/PwEJZhD\nDD1FmlrQiuU6TBjmsWqfTW4ZrRu5bBi4CQrhGxnhU+Kf3OI4Sk1pDvC/+ePrMelK\nTfbew9b1xxms5Zre3K93zvcQOQrEq/Y8LqAA7uCTENPuLin4lcI0YKn6fSgS7Q4h\nbhGIvOfMVF52a5MMiBuYrhVGF9aCt8WnY3+WsGOEKTegaHILhJl4hLa+aUf4RRlm\nensimLePt5Qzo6MxVOJkZ7SAAmTBunlZwlV+4F4QnaEDcdl9qZkKpyfDS+aFib2S\nav/LzA9Hqrm1db3J01nuBBXqmwm74PsZQ8CXyZ7LiPA4OADSMZR5rrQxFhJKmwg6\nTJi5bwSwq8N4UXLNGsOEuY1qVat6mcbWR6Il6S9/RfVcSmFPT15Dk4lykk+Sl83/\nb8hE1pYyfPqNGw0gEjf79S0p27/UDvn9KdQG97lMVsD+P3CuZSHWE1m4NMngSq8Z\nEhLYR2G2mNUGl4QkCKUb9sftPoq2fbVZu7RVwr/csw3aQqmLmCI=\n=GyVB\n-----END PGP SIGNATURE-----", "payload": "tree 77376bbe801380deb1cff8d4c8c6d6361ec45d49\nparent 364bf39e3179e148742466810d0cb9c8ec1c343a\nauthor Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1651678362 +0200\ncommitter Emilio Cobos \u00c1lvarez <emilio@crisal.io> 1651678529 +0200\n\nslice: #[inline] a couple iterator methods.\n\nThe one I care about and actually saw in the wild not getting inlined is\nclone(). We ended up doing a whole function call for something that just\ncopies two pointers.\n\nI ended up marking as_slice / as_ref as well because make_slice is\ninline(always) itself, and is also the kind of think that can kill\nperformance in hot loops if you expect it to get inlined. But happy to\nundo those.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93e587b81791bdd943117b19ade708c9f7193325", "html_url": "https://github.com/rust-lang/rust/commit/93e587b81791bdd943117b19ade708c9f7193325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93e587b81791bdd943117b19ade708c9f7193325/comments", "author": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emilio", "id": 1323194, "node_id": "MDQ6VXNlcjEzMjMxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1323194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emilio", "html_url": "https://github.com/emilio", "followers_url": "https://api.github.com/users/emilio/followers", "following_url": "https://api.github.com/users/emilio/following{/other_user}", "gists_url": "https://api.github.com/users/emilio/gists{/gist_id}", "starred_url": "https://api.github.com/users/emilio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emilio/subscriptions", "organizations_url": "https://api.github.com/users/emilio/orgs", "repos_url": "https://api.github.com/users/emilio/repos", "events_url": "https://api.github.com/users/emilio/events{/privacy}", "received_events_url": "https://api.github.com/users/emilio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "364bf39e3179e148742466810d0cb9c8ec1c343a", "url": "https://api.github.com/repos/rust-lang/rust/commits/364bf39e3179e148742466810d0cb9c8ec1c343a", "html_url": "https://github.com/rust-lang/rust/commit/364bf39e3179e148742466810d0cb9c8ec1c343a"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "415ed6203f4f5e5f76065da7468ff83c1e8e935a", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/93e587b81791bdd943117b19ade708c9f7193325/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e587b81791bdd943117b19ade708c9f7193325/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=93e587b81791bdd943117b19ade708c9f7193325", "patch": "@@ -127,6 +127,7 @@ impl<'a, T> Iter<'a, T> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"iter_to_slice\", since = \"1.4.0\")]\n+    #[inline]\n     pub fn as_slice(&self) -> &'a [T] {\n         self.make_slice()\n     }\n@@ -146,13 +147,15 @@ iterator! {struct Iter -> *const T, &'a T, const, {/* no mut */}, {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> Clone for Iter<'_, T> {\n+    #[inline]\n     fn clone(&self) -> Self {\n         Iter { ptr: self.ptr, end: self.end, _marker: self._marker }\n     }\n }\n \n #[stable(feature = \"slice_iter_as_ref\", since = \"1.13.0\")]\n impl<T> AsRef<[T]> for Iter<'_, T> {\n+    #[inline]\n     fn as_ref(&self) -> &[T] {\n         self.as_slice()\n     }\n@@ -303,13 +306,15 @@ impl<'a, T> IterMut<'a, T> {\n     /// ```\n     #[must_use]\n     #[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n+    #[inline]\n     pub fn as_slice(&self) -> &[T] {\n         self.make_slice()\n     }\n }\n \n #[stable(feature = \"slice_iter_mut_as_slice\", since = \"1.53.0\")]\n impl<T> AsRef<[T]> for IterMut<'_, T> {\n+    #[inline]\n     fn as_ref(&self) -> &[T] {\n         self.as_slice()\n     }"}]}