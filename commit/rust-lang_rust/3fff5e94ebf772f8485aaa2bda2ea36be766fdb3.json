{"sha": "3fff5e94ebf772f8485aaa2bda2ea36be766fdb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZmY1ZTk0ZWJmNzcyZjg0ODVhYWEyYmRhMmVhMzZiZTc2NmZkYjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-10T18:13:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-10T18:13:46Z"}, "message": "Add arena", "tree": {"sha": "8eb533e24f7664209f301ebc72af877ec5593711", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eb533e24f7664209f301ebc72af877ec5593711"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3", "html_url": "https://github.com/rust-lang/rust/commit/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "120789804d5483f14c9682b2b777adf6d2992547", "url": "https://api.github.com/repos/rust-lang/rust/commits/120789804d5483f14c9682b2b777adf6d2992547", "html_url": "https://github.com/rust-lang/rust/commit/120789804d5483f14c9682b2b777adf6d2992547"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "fc0c25c54b9316bb3eaa35c6fca58459da0c3cfa", "filename": "libanalysis/src/arena.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3/libanalysis%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fff5e94ebf772f8485aaa2bda2ea36be766fdb3/libanalysis%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/libanalysis%2Fsrc%2Farena.rs?ref=3fff5e94ebf772f8485aaa2bda2ea36be766fdb3", "patch": "@@ -0,0 +1,42 @@\n+use parking_lot::RwLock;\n+\n+const CHUNK_LEN: usize = 16;\n+\n+pub struct Arena<T> {\n+    chunks: RwLock<Vec<Vec<T>>>,\n+}\n+\n+impl<T> Arena<T> {\n+    pub fn new(&self) -> Arena<T> {\n+        Arena {\n+            chunks: RwLock::new(vec![Vec::with_capacity(CHUNK_LEN)]),\n+        }\n+    }\n+\n+    pub fn push(&self, value: T) -> usize {\n+        let mut guard = self.chunks.write();\n+        let mut idx = (guard.len() - 1) * CHUNK_LEN;\n+        let chunk = {\n+            if guard.last().unwrap().len() == CHUNK_LEN {\n+                guard.push(Vec::with_capacity(CHUNK_LEN));\n+            }\n+            guard.last_mut().unwrap()\n+        };\n+        assert!(chunk.len() < chunk.capacity());\n+        idx += chunk.len();\n+        chunk.push(value);\n+        idx\n+    }\n+\n+    pub fn get(&self, idx: usize) -> &T {\n+        let chunk_idx = idx / CHUNK_LEN;\n+        let chunk_off = idx - chunk_idx * CHUNK_LEN;\n+        let guard = self.chunks.read();\n+        let value = &guard[chunk_idx][chunk_off];\n+        unsafe {\n+            // We are careful to not move values in chunks,\n+            // so this hopefully is safe\n+            ::std::mem::transmute::<&T, &T>(value)\n+        }\n+    }\n+}"}]}