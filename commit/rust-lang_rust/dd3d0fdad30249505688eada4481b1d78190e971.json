{"sha": "dd3d0fdad30249505688eada4481b1d78190e971", "node_id": "C_kwDOAAsO6NoAKGRkM2QwZmRhZDMwMjQ5NTA1Njg4ZWFkYTQ0ODFiMWQ3ODE5MGU5NzE", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-10T12:02:43Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-26T23:11:58Z"}, "message": "rename use_retain => manual_retain", "tree": {"sha": "e42dc8f32f1915e346d3ec7680e95afa64297e77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42dc8f32f1915e346d3ec7680e95afa64297e77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd3d0fdad30249505688eada4481b1d78190e971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd3d0fdad30249505688eada4481b1d78190e971", "html_url": "https://github.com/rust-lang/rust/commit/dd3d0fdad30249505688eada4481b1d78190e971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd3d0fdad30249505688eada4481b1d78190e971/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4decfdec76a6b67dc87f29d6f1a8db148119211d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4decfdec76a6b67dc87f29d6f1a8db148119211d", "html_url": "https://github.com/rust-lang/rust/commit/4decfdec76a6b67dc87f29d6f1a8db148119211d"}], "stats": {"total": 68, "additions": 34, "deletions": 34}, "files": [{"sha": "cff60a21c999ff9d5fb28e14fa075e3b5444622b", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -3528,6 +3528,7 @@ Released 2018-09-13\n [`manual_ok_or`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_ok_or\n [`manual_range_contains`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n [`manual_rem_euclid`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_rem_euclid\n+[`manual_retain`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_retain\n [`manual_saturating_arithmetic`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_saturating_arithmetic\n [`manual_split_once`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_split_once\n [`manual_str_repeat`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_str_repeat\n@@ -3840,7 +3841,6 @@ Released 2018-09-13\n [`unwrap_used`]: https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used\n [`upper_case_acronyms`]: https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n [`use_debug`]: https://rust-lang.github.io/rust-clippy/master/index.html#use_debug\n-[`use_retain`]: https://rust-lang.github.io/rust-clippy/master/index.html#use_retain\n [`use_self`]: https://rust-lang.github.io/rust-clippy/master/index.html#use_self\n [`used_underscore_binding`]: https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding\n [`useless_asref`]: https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref"}, {"sha": "696f0c6f6b365630d7fcca34ac7f66623708d985", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -136,6 +136,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(manual_bits::MANUAL_BITS),\n     LintId::of(manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE),\n     LintId::of(manual_rem_euclid::MANUAL_REM_EUCLID),\n+    LintId::of(manual_retain::MANUAL_RETAIN),\n     LintId::of(manual_strip::MANUAL_STRIP),\n     LintId::of(map_clone::MAP_CLONE),\n     LintId::of(map_unit_fn::OPTION_MAP_UNIT_FN),\n@@ -336,7 +337,6 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(unwrap::PANICKING_UNWRAP),\n     LintId::of(unwrap::UNNECESSARY_UNWRAP),\n     LintId::of(upper_case_acronyms::UPPER_CASE_ACRONYMS),\n-    LintId::of(use_retain::USE_RETAIN),\n     LintId::of(useless_conversion::USELESS_CONVERSION),\n     LintId::of(vec::USELESS_VEC),\n     LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),"}, {"sha": "f24c65fb35b9a67df2fc012adc3780aa28903d42", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -255,6 +255,7 @@ store.register_lints(&[\n     manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n     manual_ok_or::MANUAL_OK_OR,\n     manual_rem_euclid::MANUAL_REM_EUCLID,\n+    manual_retain::MANUAL_RETAIN,\n     manual_strip::MANUAL_STRIP,\n     map_clone::MAP_CLONE,\n     map_err_ignore::MAP_ERR_IGNORE,\n@@ -563,7 +564,6 @@ store.register_lints(&[\n     unwrap::UNNECESSARY_UNWRAP,\n     unwrap_in_result::UNWRAP_IN_RESULT,\n     upper_case_acronyms::UPPER_CASE_ACRONYMS,\n-    use_retain::USE_RETAIN,\n     use_self::USE_SELF,\n     useless_conversion::USELESS_CONVERSION,\n     vec::USELESS_VEC,"}, {"sha": "2233b118849b26ac911272ad86fd69df6669b070", "filename": "clippy_lints/src/lib.register_perf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_perf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.register_perf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_perf.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -13,6 +13,7 @@ store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec![\n     LintId::of(loops::MANUAL_MEMCPY),\n     LintId::of(loops::MISSING_SPIN_LOOP),\n     LintId::of(loops::NEEDLESS_COLLECT),\n+    LintId::of(manual_retain::MANUAL_RETAIN),\n     LintId::of(methods::EXPECT_FUN_CALL),\n     LintId::of(methods::EXTEND_WITH_DRAIN),\n     LintId::of(methods::ITER_NTH),\n@@ -26,7 +27,6 @@ store.register_group(true, \"clippy::perf\", Some(\"clippy_perf\"), vec![\n     LintId::of(slow_vector_initialization::SLOW_VECTOR_INITIALIZATION),\n     LintId::of(types::BOX_COLLECTION),\n     LintId::of(types::REDUNDANT_ALLOCATION),\n-    LintId::of(use_retain::USE_RETAIN),\n     LintId::of(vec::USELESS_VEC),\n     LintId::of(vec_init_then_push::VEC_INIT_THEN_PUSH),\n ])"}, {"sha": "a068d5ab522bf94f5784491d9191b105fda373c5", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -283,6 +283,7 @@ mod manual_bits;\n mod manual_non_exhaustive;\n mod manual_ok_or;\n mod manual_rem_euclid;\n+mod manual_retain;\n mod manual_strip;\n mod map_clone;\n mod map_err_ignore;\n@@ -410,7 +411,6 @@ mod unused_unit;\n mod unwrap;\n mod unwrap_in_result;\n mod upper_case_acronyms;\n-mod use_retain;\n mod use_self;\n mod useless_conversion;\n mod vec;\n@@ -915,7 +915,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| Box::new(read_zero_byte_vec::ReadZeroByteVec));\n     store.register_late_pass(|| Box::new(default_instead_of_iter_empty::DefaultIterEmpty));\n     store.register_late_pass(move || Box::new(manual_rem_euclid::ManualRemEuclid::new(msrv)));\n-    store.register_late_pass(move || Box::new(use_retain::UseRetain::new(msrv)));\n+    store.register_late_pass(move || Box::new(manual_retain::ManualRetain::new(msrv)));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "450c6d343c05f4cbeaa061dc4fb26e787ae992cc", "filename": "clippy_lints/src/manual_retain.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Fmanual_retain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/clippy_lints%2Fsrc%2Fmanual_retain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_retain.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -44,25 +44,25 @@ declare_clippy_lint! {\n     /// vec.retain(|x| x % 2 == 0);\n     /// ```\n     #[clippy::version = \"1.63.0\"]\n-    pub USE_RETAIN,\n+    pub MANUAL_RETAIN,\n     perf,\n     \"`retain()` is simpler and the same functionalitys\"\n }\n \n-pub struct UseRetain {\n+pub struct ManualRetain {\n     msrv: Option<RustcVersion>,\n }\n \n-impl UseRetain {\n+impl ManualRetain {\n     #[must_use]\n     pub fn new(msrv: Option<RustcVersion>) -> Self {\n         Self { msrv }\n     }\n }\n \n-impl_lint_pass!(UseRetain => [USE_RETAIN]);\n+impl_lint_pass!(ManualRetain => [MANUAL_RETAIN]);\n \n-impl<'tcx> LateLintPass<'tcx> for UseRetain {\n+impl<'tcx> LateLintPass<'tcx> for ManualRetain {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n         if let Some(parent_expr) = get_parent_expr(cx, expr)\n             && let Assign(left_expr, collect_expr, _) = &parent_expr.kind\n@@ -170,7 +170,7 @@ fn suggest(cx: &LateContext<'_>, parent_expr: &hir::Expr<'_>, left_expr: &hir::E\n         } {\n         span_lint_and_sugg(\n             cx,\n-            USE_RETAIN,\n+            MANUAL_RETAIN,\n             parent_expr.span,\n             \"this expression can be written more simply using `.retain()`\",\n             \"consider calling `.retain()` instead\",", "previous_filename": "clippy_lints/src/use_retain.rs"}, {"sha": "fba503a20667ac4d7c35a9456aef5296f4e558e1", "filename": "tests/ui/manual_retain.fixed", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.fixed?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![feature(custom_inner_attributes)]\n-#![warn(clippy::use_retain)]\n+#![warn(clippy::manual_retain)]\n #![allow(unused)]\n use std::collections::BTreeMap;\n use std::collections::BTreeSet;", "previous_filename": "tests/ui/use_retain.fixed"}, {"sha": "81a849fe7684ccbb5e3fcbf6b11ae4392391f2c2", "filename": "tests/ui/manual_retain.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.rs?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![feature(custom_inner_attributes)]\n-#![warn(clippy::use_retain)]\n+#![warn(clippy::manual_retain)]\n #![allow(unused)]\n use std::collections::BTreeMap;\n use std::collections::BTreeSet;", "previous_filename": "tests/ui/use_retain.rs"}, {"sha": "ec635919b48fb99814c6b908d4da38d8b4ec9084", "filename": "tests/ui/manual_retain.stderr", "status": "renamed", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd3d0fdad30249505688eada4481b1d78190e971/tests%2Fui%2Fmanual_retain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_retain.stderr?ref=dd3d0fdad30249505688eada4481b1d78190e971", "patch": "@@ -1,19 +1,19 @@\n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:52:5\n+  --> $DIR/manual_retain.rs:52:5\n    |\n LL |     btree_map = btree_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|k, _| k % 2 == 0)`\n    |\n-   = note: `-D clippy::use-retain` implied by `-D warnings`\n+   = note: `-D clippy::manual-retain` implied by `-D warnings`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:53:5\n+  --> $DIR/manual_retain.rs:53:5\n    |\n LL |     btree_map = btree_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_map.retain(|_, &mut v| v % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:54:5\n+  --> $DIR/manual_retain.rs:54:5\n    |\n LL | /     btree_map = btree_map\n LL | |         .into_iter()\n@@ -22,37 +22,37 @@ LL | |         .collect();\n    | |__________________^ help: consider calling `.retain()` instead: `btree_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:76:5\n+  --> $DIR/manual_retain.rs:76:5\n    |\n LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:77:5\n+  --> $DIR/manual_retain.rs:77:5\n    |\n LL |     btree_set = btree_set.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:78:5\n+  --> $DIR/manual_retain.rs:78:5\n    |\n LL |     btree_set = btree_set.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `btree_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:108:5\n+  --> $DIR/manual_retain.rs:108:5\n    |\n LL |     hash_map = hash_map.into_iter().filter(|(k, _)| k % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|k, _| k % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:109:5\n+  --> $DIR/manual_retain.rs:109:5\n    |\n LL |     hash_map = hash_map.into_iter().filter(|(_, v)| v % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_map.retain(|_, &mut v| v % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:110:5\n+  --> $DIR/manual_retain.rs:110:5\n    |\n LL | /     hash_map = hash_map\n LL | |         .into_iter()\n@@ -61,61 +61,61 @@ LL | |         .collect();\n    | |__________________^ help: consider calling `.retain()` instead: `hash_map.retain(|k, &mut v| (k % 2 == 0) && (v % 2 == 0))`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:131:5\n+  --> $DIR/manual_retain.rs:131:5\n    |\n LL |     hash_set = hash_set.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:132:5\n+  --> $DIR/manual_retain.rs:132:5\n    |\n LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:133:5\n+  --> $DIR/manual_retain.rs:133:5\n    |\n LL |     hash_set = hash_set.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `hash_set.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:162:5\n+  --> $DIR/manual_retain.rs:162:5\n    |\n LL |     s = s.chars().filter(|&c| c != 'o').to_owned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `s.retain(|c| c != 'o')`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:174:5\n+  --> $DIR/manual_retain.rs:174:5\n    |\n LL |     vec = vec.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:175:5\n+  --> $DIR/manual_retain.rs:175:5\n    |\n LL |     vec = vec.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:176:5\n+  --> $DIR/manual_retain.rs:176:5\n    |\n LL |     vec = vec.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:198:5\n+  --> $DIR/manual_retain.rs:198:5\n    |\n LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).copied().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:199:5\n+  --> $DIR/manual_retain.rs:199:5\n    |\n LL |     vec_deque = vec_deque.iter().filter(|&x| x % 2 == 0).cloned().collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`\n \n error: this expression can be written more simply using `.retain()`\n-  --> $DIR/use_retain.rs:200:5\n+  --> $DIR/manual_retain.rs:200:5\n    |\n LL |     vec_deque = vec_deque.into_iter().filter(|x| x % 2 == 0).collect();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider calling `.retain()` instead: `vec_deque.retain(|x| x % 2 == 0)`", "previous_filename": "tests/ui/use_retain.stderr"}]}