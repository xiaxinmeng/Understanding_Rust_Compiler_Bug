{"sha": "2261947f6ea31e8f2063a2ec7e2f26545acf2201", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNjE5NDdmNmVhMzFlOGYyMDYzYTJlYzdlMmYyNjU0NWFjZjIyMDE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-26T02:10:47Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-01-26T02:10:47Z"}, "message": "Catch attributes before comments\n\nCloses #1280\nCloses #1284", "tree": {"sha": "303242462354616005cc1b336ab13351f3f15c15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/303242462354616005cc1b336ab13351f3f15c15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2261947f6ea31e8f2063a2ec7e2f26545acf2201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2261947f6ea31e8f2063a2ec7e2f26545acf2201", "html_url": "https://github.com/rust-lang/rust/commit/2261947f6ea31e8f2063a2ec7e2f26545acf2201", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2261947f6ea31e8f2063a2ec7e2f26545acf2201/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5d4421a83478b36cb424f13a19bcf9ef454ecb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d4421a83478b36cb424f13a19bcf9ef454ecb2", "html_url": "https://github.com/rust-lang/rust/commit/b5d4421a83478b36cb424f13a19bcf9ef454ecb2"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "7034d91d1df45ef8e83163e70359e501c2acc5e9", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2261947f6ea31e8f2063a2ec7e2f26545acf2201/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2261947f6ea31e8f2063a2ec7e2f26545acf2201/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2261947f6ea31e8f2063a2ec7e2f26545acf2201", "patch": "@@ -1,6 +1,6 @@\n [root]\n name = \"rustfmt\"\n-version = \"0.7.0\"\n+version = \"0.7.1\"\n dependencies = [\n  \"diff 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"env_logger 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "eff3fd6c573aeabc971d8eaba4996b00d098be54", "filename": "src/missed_spans.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2261947f6ea31e8f2063a2ec7e2f26545acf2201/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2261947f6ea31e8f2063a2ec7e2f26545acf2201/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=2261947f6ea31e8f2063a2ec7e2f26545acf2201", "patch": "@@ -84,6 +84,8 @@ impl<'a> FmtVisitor<'a> {\n         let big_diff = (span.lo - big_span_lo).to_usize();\n         let snippet = self.snippet(span);\n \n+        debug!(\"write_snippet `{}`\", snippet);\n+\n         self.write_snippet_inner(big_snippet, big_diff, &snippet, process_last_snippet);\n     }\n \n@@ -114,6 +116,8 @@ impl<'a> FmtVisitor<'a> {\n         let snippet = &*replaced;\n \n         for (kind, offset, subslice) in CommentCodeSlices::new(snippet) {\n+            debug!(\"{:?}: {:?}\", kind, subslice);\n+\n             if let CodeCharKind::Comment = kind {\n                 let last_char = big_snippet[..(offset + big_diff)]\n                     .chars()\n@@ -199,6 +203,13 @@ impl<'a> FmtVisitor<'a> {\n                     last_wspace = None;\n                 }\n             }\n+\n+            let remaining = snippet[line_start..subslice.len() + offset].trim();\n+            if !remaining.is_empty() {\n+                self.buffer.push_str(remaining);\n+                line_start = subslice.len() + offset;\n+                rewrite_next_comment = rewrite_next_comment || kind == CodeCharKind::Normal;\n+            }\n         }\n \n         process_last_snippet(self, &snippet[line_start..], snippet);"}, {"sha": "69eaa7a681fc763f9e15a34d552ac679b5ba2e35", "filename": "tests/source/comment4.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Fsource%2Fcomment4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Fsource%2Fcomment4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fcomment4.rs?ref=2261947f6ea31e8f2063a2ec7e2f26545acf2201", "patch": "@@ -1,3 +1,5 @@\n+#![allow(dead_code)] // bar\n+\n //! Doc comment\n fn test() {\n // comment\n@@ -44,3 +46,8 @@ fn debug_function() {\n     println!(\"hello\");\n }\n // */\n+\n+#[link_section=\".vectors\"]\n+#[no_mangle] // Test this attribute is preserved.\n+#[cfg_attr(rustfmt, rustfmt_skip)]\n+pub static ISSUE_1284: [i32; 16] = [];"}, {"sha": "08f84bb861d96cf29f9f0506004fd25971da99ae", "filename": "tests/target/comment4.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Ftarget%2Fcomment4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Ftarget%2Fcomment4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fcomment4.rs?ref=2261947f6ea31e8f2063a2ec7e2f26545acf2201", "patch": "@@ -1,3 +1,5 @@\n+#![allow(dead_code)] // bar\n+\n //! Doc comment\n fn test() {\n     // comment\n@@ -43,3 +45,8 @@ fn debug_function() {\n     println!(\"hello\");\n }\n // */\n+\n+#[link_section=\".vectors\"]\n+#[no_mangle] // Test this attribute is preserved.\n+#[cfg_attr(rustfmt, rustfmt_skip)]\n+pub static ISSUE_1284: [i32; 16] = [];"}, {"sha": "db51610d64ec9cb733b62c492a7795334e148e37", "filename": "tests/target/fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Ftarget%2Ffn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2261947f6ea31e8f2063a2ec7e2f26545acf2201/tests%2Ftarget%2Ffn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn.rs?ref=2261947f6ea31e8f2063a2ec7e2f26545acf2201", "patch": "@@ -86,7 +86,7 @@ fn ______________________baz(a: i32)\n         *mut ::std::option::Option<extern \"C\" fn(arg1: i32,\n                                                 _____________________a: i32,\n                                                 arg3: i32)\n-                                    -> ()> {\n+-> ()>{\n }\n \n pub fn check_path<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,"}]}