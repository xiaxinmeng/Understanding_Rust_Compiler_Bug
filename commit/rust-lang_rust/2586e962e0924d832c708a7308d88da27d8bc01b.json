{"sha": "2586e962e0924d832c708a7308d88da27d8bc01b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODZlOTYyZTA5MjRkODMyYzcwOGE3MzA4ZDg4ZGEyN2Q4YmMwMWI=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-29T20:11:48Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-06-29T20:20:06Z"}, "message": "Check node kind to avoid ICE in `check_expr_return()`", "tree": {"sha": "d0e116114edbc4b5343dd7bf7a40fdf4b5171409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0e116114edbc4b5343dd7bf7a40fdf4b5171409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2586e962e0924d832c708a7308d88da27d8bc01b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2586e962e0924d832c708a7308d88da27d8bc01b", "html_url": "https://github.com/rust-lang/rust/commit/2586e962e0924d832c708a7308d88da27d8bc01b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2586e962e0924d832c708a7308d88da27d8bc01b/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e98897e5dc9898707bf4331c43b2e76ab7e282fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/e98897e5dc9898707bf4331c43b2e76ab7e282fe", "html_url": "https://github.com/rust-lang/rust/commit/e98897e5dc9898707bf4331c43b2e76ab7e282fe"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "1f929af6cc5e2e3a24c0fb9f8e3fa3116afe0c83", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2586e962e0924d832c708a7308d88da27d8bc01b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2586e962e0924d832c708a7308d88da27d8bc01b/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=2586e962e0924d832c708a7308d88da27d8bc01b", "patch": "@@ -682,23 +682,27 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             };\n \n             let encl_item_id = self.tcx.hir().get_parent_item(expr.hir_id);\n-            let encl_item = self.tcx.hir().expect_item(encl_item_id);\n \n-            if let hir::ItemKind::Fn(..) = encl_item.kind {\n-                // We are inside a function body, so reporting \"return statement\n-                // outside of function body\" needs an explanation.\n+            // Somewhat confusingly, get_parent_item() does not necessarily return an\n+            // item -- it can also return a Foreign-/Impl-/TraitItem or a Crate (see\n+            // issue #86721). If it does, we still report the same error.\n+            if let Some(hir::Node::Item(encl_item)) = self.tcx.hir().find(encl_item_id) {\n+                if let hir::ItemKind::Fn(..) = encl_item.kind {\n+                    // We are inside a function body, so reporting \"return statement\n+                    // outside of function body\" needs an explanation.\n \n-                let encl_body_owner_id = self.tcx.hir().enclosing_body_owner(expr.hir_id);\n+                    let encl_body_owner_id = self.tcx.hir().enclosing_body_owner(expr.hir_id);\n \n-                // If this didn't hold, we would not have to report an error in\n-                // the first place.\n-                assert_ne!(encl_item_id, encl_body_owner_id);\n+                    // If this didn't hold, we would not have to report an error in\n+                    // the first place.\n+                    assert_ne!(encl_item_id, encl_body_owner_id);\n \n-                let encl_body_id = self.tcx.hir().body_owned_by(encl_body_owner_id);\n-                let encl_body = self.tcx.hir().body(encl_body_id);\n+                    let encl_body_id = self.tcx.hir().body_owned_by(encl_body_owner_id);\n+                    let encl_body = self.tcx.hir().body(encl_body_id);\n \n-                err.encl_body_span = Some(encl_body.value.span);\n-                err.encl_fn_span = Some(encl_item.span);\n+                    err.encl_body_span = Some(encl_body.value.span);\n+                    err.encl_fn_span = Some(encl_item.span);\n+                }\n             }\n \n             self.tcx.sess.emit_err(err);"}, {"sha": "9216fb0d17139aeb33b1ce69af09885b8c2a8fa4", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2586e962e0924d832c708a7308d88da27d8bc01b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2586e962e0924d832c708a7308d88da27d8bc01b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.rs?ref=2586e962e0924d832c708a7308d88da27d8bc01b", "patch": "@@ -0,0 +1,8 @@\n+// Regression test for the ICE described in #86721.\n+\n+#![crate_type=\"lib\"]\n+\n+trait T {\n+    const U: usize = return;\n+    //~^ ERROR: return statement outside of function body [E0572]\n+}"}, {"sha": "39f8fb8da146d906ed9fedc5f3f1a19f429b8adf", "filename": "src/test/ui/typeck/issue-86721-return-expr-ice.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2586e962e0924d832c708a7308d88da27d8bc01b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2586e962e0924d832c708a7308d88da27d8bc01b/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-86721-return-expr-ice.stderr?ref=2586e962e0924d832c708a7308d88da27d8bc01b", "patch": "@@ -0,0 +1,9 @@\n+error[E0572]: return statement outside of function body\n+  --> $DIR/issue-86721-return-expr-ice.rs:6:22\n+   |\n+LL |     const U: usize = return;\n+   |                      ^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0572`."}]}