{"sha": "67ecda63420a815cb89522be8e83690c38bef118", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZWNkYTYzNDIwYTgxNWNiODk1MjJiZThlODM2OTBjMzhiZWYxMTg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-12T00:28:35Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-07-12T00:32:00Z"}, "message": "remove some workarounds for old bugs", "tree": {"sha": "f55ca6a34a1fcf1fdab3c54022fa9246214f2482", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f55ca6a34a1fcf1fdab3c54022fa9246214f2482"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ecda63420a815cb89522be8e83690c38bef118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ecda63420a815cb89522be8e83690c38bef118", "html_url": "https://github.com/rust-lang/rust/commit/67ecda63420a815cb89522be8e83690c38bef118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ecda63420a815cb89522be8e83690c38bef118/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1620def9f4e1da73f798f5deb3d8dbe410fce90", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1620def9f4e1da73f798f5deb3d8dbe410fce90", "html_url": "https://github.com/rust-lang/rust/commit/e1620def9f4e1da73f798f5deb3d8dbe410fce90"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "faf9d131e73e9845b190727fc731dadaf0bc67d0", "filename": "src/lib/getopts.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/67ecda63420a815cb89522be8e83690c38bef118/src%2Flib%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ecda63420a815cb89522be8e83690c38bef118/src%2Flib%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fgetopts.rs?ref=67ecda63420a815cb89522be8e83690c38bef118", "patch": "@@ -120,8 +120,7 @@ tag result { success(match); failure(fail_); }\n \n fn getopts(vec[str] args, vec[opt] opts) -> result {\n     auto n_opts = vec::len[opt](opts);\n-    fn empty_(uint x) -> vec[optval] { ret vec::empty[optval](); }\n-    auto f = empty_;\n+    fn f(uint x) -> vec[optval] { ret vec::empty(); }\n     auto vals = vec::init_fn_mut[vec[optval]](f, n_opts);\n     let vec[str] free = [];\n     auto l = vec::len[str](args);"}]}