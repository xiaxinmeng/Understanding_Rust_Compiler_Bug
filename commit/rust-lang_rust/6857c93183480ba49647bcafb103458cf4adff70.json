{"sha": "6857c93183480ba49647bcafb103458cf4adff70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NTdjOTMxODM0ODBiYTQ5NjQ3YmNhZmIxMDM0NThjZjRhZGZmNzA=", "commit": {"author": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2019-11-29T09:11:12Z"}, "committer": {"name": "\u00d6mer Sinan A\u011facan", "email": "omeragacan@gmail.com", "date": "2019-12-03T08:16:37Z"}, "message": "Check break target availability when checking breaks with values\n\nFixes #66702", "tree": {"sha": "dc446d39ed926c5cbad980ce0f3872b64d78f6ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc446d39ed926c5cbad980ce0f3872b64d78f6ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6857c93183480ba49647bcafb103458cf4adff70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6857c93183480ba49647bcafb103458cf4adff70", "html_url": "https://github.com/rust-lang/rust/commit/6857c93183480ba49647bcafb103458cf4adff70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6857c93183480ba49647bcafb103458cf4adff70/comments", "author": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "osa1", "id": 448274, "node_id": "MDQ6VXNlcjQ0ODI3NA==", "avatar_url": "https://avatars.githubusercontent.com/u/448274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/osa1", "html_url": "https://github.com/osa1", "followers_url": "https://api.github.com/users/osa1/followers", "following_url": "https://api.github.com/users/osa1/following{/other_user}", "gists_url": "https://api.github.com/users/osa1/gists{/gist_id}", "starred_url": "https://api.github.com/users/osa1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/osa1/subscriptions", "organizations_url": "https://api.github.com/users/osa1/orgs", "repos_url": "https://api.github.com/users/osa1/repos", "events_url": "https://api.github.com/users/osa1/events{/privacy}", "received_events_url": "https://api.github.com/users/osa1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4787e97475de6be9487e3d9255a9c2d3c0bf9252", "url": "https://api.github.com/repos/rust-lang/rust/commits/4787e97475de6be9487e3d9255a9c2d3c0bf9252", "html_url": "https://github.com/rust-lang/rust/commit/4787e97475de6be9487e3d9255a9c2d3c0bf9252"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "5bfc60c75406745e0c0a7ac2c2db42eca0599edf", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6857c93183480ba49647bcafb103458cf4adff70/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6857c93183480ba49647bcafb103458cf4adff70/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=6857c93183480ba49647bcafb103458cf4adff70", "patch": "@@ -582,11 +582,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // If this is a break with a value, we need to type-check\n                 // the expression. Get an expected type from the loop context.\n                 let opt_coerce_to = {\n+                    // We should release `enclosing_breakables` before the `check_expr_with_hint`\n+                    // below, so can't move this block of code to the enclosing scope and share\n+                    // `ctxt` with the second `encloding_breakables` borrow below.\n                     let mut enclosing_breakables = self.enclosing_breakables.borrow_mut();\n-                    enclosing_breakables.find_breakable(target_id)\n-                                        .coerce\n-                                        .as_ref()\n-                                        .map(|coerce| coerce.expected_ty())\n+                    match enclosing_breakables.opt_find_breakable(target_id) {\n+                        Some(ctxt) =>\n+                            ctxt.coerce.as_ref().map(|coerce| coerce.expected_ty()),\n+                        None => { // Avoid ICE when `break` is inside a closure (#65383).\n+                            self.tcx.sess.delay_span_bug(\n+                                expr.span,\n+                                \"break was outside loop, but no error was emitted\",\n+                            );\n+                            return tcx.types.err;\n+                        }\n+                    }\n                 };\n \n                 // If the loop context is not a `loop { }`, then break with"}, {"sha": "bd3c00d2621282576c2585ce3d483b3f3458cb3f", "filename": "src/test/ui/issues/issue-66702-break-outside-loop-val.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6857c93183480ba49647bcafb103458cf4adff70/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6857c93183480ba49647bcafb103458cf4adff70/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs?ref=6857c93183480ba49647bcafb103458cf4adff70", "patch": "@@ -0,0 +1,7 @@\n+// Breaks with values inside closures used to ICE (#66863)\n+\n+fn main() {\n+    'some_label: loop {\n+        || break 'some_label (); //~ ERROR: `break` inside of a closure\n+    }\n+}"}, {"sha": "83bde9775b2ec11cb53df9682a4c24717849f2cd", "filename": "src/test/ui/issues/issue-66702-break-outside-loop-val.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6857c93183480ba49647bcafb103458cf4adff70/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6857c93183480ba49647bcafb103458cf4adff70/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr?ref=6857c93183480ba49647bcafb103458cf4adff70", "patch": "@@ -0,0 +1,11 @@\n+error[E0267]: `break` inside of a closure\n+  --> $DIR/issue-66702-break-outside-loop-val.rs:5:12\n+   |\n+LL |         || break 'some_label ();\n+   |         -- ^^^^^^^^^^^^^^^^^^^^ cannot `break` inside of a closure\n+   |         |\n+   |         enclosing closure\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0267`."}]}