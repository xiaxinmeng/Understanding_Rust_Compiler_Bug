{"sha": "ee00679331b87dacc5fe608f153be160c1cb144c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDA2NzkzMzFiODdkYWNjNWZlNjA4ZjE1M2JlMTYwYzFjYjE0NGM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-30T13:26:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T13:26:15Z"}, "message": "Merge #5591\n\n5591: Rename TypeAliasDef -> TypeAlias r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "f80ef7823490a6904b3f7bf57a4609ca4c4743dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f80ef7823490a6904b3f7bf57a4609ca4c4743dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee00679331b87dacc5fe608f153be160c1cb144c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIsp3CRBK7hj4Ov3rIwAAdHIIADo1Ff2hYuanVBU5K2OxHeE2\n29JIGUSksucSQyh28e8MLehdttjXnl58M6H5diZ8IYd4i54EYNeSKXJxnvwoicpA\ncdCDYJjhvh02StlnMc3jEOqJIGSRPGuSWvfuV9MMFwcmc5xutFifzF/aGQWRgky/\nsnRFMZMiZCchvG0kC6DYB2Icwg0g6MeE7cS71K4BpgXycUuwUWrl0deoPXb7GGdG\nBlCBzkXBV97XjSxJwh4NkNA3K0e0FKJYz2si7vlYmI2YqwvyiQ3sonImKB4O5y/D\n/0PFdfJPPyov0LW8jBWzt9U7M1O0QBykD9gb6jKMWfWu/3QVc3Osfr5OFFLqkic=\n=tghb\n-----END PGP SIGNATURE-----\n", "payload": "tree f80ef7823490a6904b3f7bf57a4609ca4c4743dc\nparent 96c3ff1c573f97e5089fc0ba01ede6fe43693668\nparent eb2f8063444b11257111f4f8ade990ec810e0361\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596115575 +0000\ncommitter GitHub <noreply@github.com> 1596115575 +0000\n\nMerge #5591\n\n5591: Rename TypeAliasDef -> TypeAlias r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee00679331b87dacc5fe608f153be160c1cb144c", "html_url": "https://github.com/rust-lang/rust/commit/ee00679331b87dacc5fe608f153be160c1cb144c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee00679331b87dacc5fe608f153be160c1cb144c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96c3ff1c573f97e5089fc0ba01ede6fe43693668", "url": "https://api.github.com/repos/rust-lang/rust/commits/96c3ff1c573f97e5089fc0ba01ede6fe43693668", "html_url": "https://github.com/rust-lang/rust/commit/96c3ff1c573f97e5089fc0ba01ede6fe43693668"}, {"sha": "eb2f8063444b11257111f4f8ade990ec810e0361", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb2f8063444b11257111f4f8ade990ec810e0361", "html_url": "https://github.com/rust-lang/rust/commit/eb2f8063444b11257111f4f8ade990ec810e0361"}], "stats": {"total": 1645, "additions": 822, "deletions": 823}, "files": [{"sha": "1e4d4748c2a9acad268c74098712269a37dbd9e9", "filename": "crates/ra_assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -118,8 +118,8 @@ fn add_missing_impl_members_inner(\n \n     let def_name = |item: &ast::AssocItem| -> Option<SmolStr> {\n         match item {\n-            ast::AssocItem::FnDef(def) => def.name(),\n-            ast::AssocItem::TypeAliasDef(def) => def.name(),\n+            ast::AssocItem::Fn(def) => def.name(),\n+            ast::AssocItem::TypeAlias(def) => def.name(),\n             ast::AssocItem::ConstDef(def) => def.name(),\n             ast::AssocItem::MacroCall(_) => None,\n         }\n@@ -129,13 +129,13 @@ fn add_missing_impl_members_inner(\n     let missing_items = get_missing_assoc_items(&ctx.sema, &impl_def)\n         .iter()\n         .map(|i| match i {\n-            hir::AssocItem::Function(i) => ast::AssocItem::FnDef(i.source(ctx.db()).value),\n-            hir::AssocItem::TypeAlias(i) => ast::AssocItem::TypeAliasDef(i.source(ctx.db()).value),\n+            hir::AssocItem::Function(i) => ast::AssocItem::Fn(i.source(ctx.db()).value),\n+            hir::AssocItem::TypeAlias(i) => ast::AssocItem::TypeAlias(i.source(ctx.db()).value),\n             hir::AssocItem::Const(i) => ast::AssocItem::ConstDef(i.source(ctx.db()).value),\n         })\n         .filter(|t| def_name(&t).is_some())\n         .filter(|t| match t {\n-            ast::AssocItem::FnDef(def) => match mode {\n+            ast::AssocItem::Fn(def) => match mode {\n                 AddMissingImplMembersMode::DefaultMethodsOnly => def.body().is_some(),\n                 AddMissingImplMembersMode::NoDefaultMethods => def.body().is_none(),\n             },\n@@ -158,10 +158,8 @@ fn add_missing_impl_members_inner(\n             .into_iter()\n             .map(|it| ast_transform::apply(&*ast_transform, it))\n             .map(|it| match it {\n-                ast::AssocItem::FnDef(def) => ast::AssocItem::FnDef(add_body(def)),\n-                ast::AssocItem::TypeAliasDef(def) => {\n-                    ast::AssocItem::TypeAliasDef(def.remove_bounds())\n-                }\n+                ast::AssocItem::Fn(def) => ast::AssocItem::Fn(add_body(def)),\n+                ast::AssocItem::TypeAlias(def) => ast::AssocItem::TypeAlias(def.remove_bounds()),\n                 _ => it,\n             })\n             .map(|it| edit::remove_attrs_and_docs(&it));\n@@ -174,7 +172,7 @@ fn add_missing_impl_members_inner(\n             Some(cap) => {\n                 let mut cursor = Cursor::Before(first_new_item.syntax());\n                 let placeholder;\n-                if let ast::AssocItem::FnDef(func) = &first_new_item {\n+                if let ast::AssocItem::Fn(func) = &first_new_item {\n                     if let Some(m) = func.syntax().descendants().find_map(ast::MacroCall::cast) {\n                         if m.syntax().text() == \"todo!()\" {\n                             placeholder = m;\n@@ -192,7 +190,7 @@ fn add_missing_impl_members_inner(\n     })\n }\n \n-fn add_body(fn_def: ast::FnDef) -> ast::FnDef {\n+fn add_body(fn_def: ast::Fn) -> ast::Fn {\n     if fn_def.body().is_some() {\n         return fn_def;\n     }"}, {"sha": "52e24af6ce6577271286aa70396bd9c9e5346c88", "filename": "crates/ra_assists/src/handlers/change_return_type_to_result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_return_type_to_result.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -20,7 +20,7 @@ use test_utils::mark;\n pub(crate) fn change_return_type_to_result(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n     let ret_type = ctx.find_node_at_offset::<ast::RetType>()?;\n     // FIXME: extend to lambdas as well\n-    let fn_def = ret_type.syntax().parent().and_then(ast::FnDef::cast)?;\n+    let fn_def = ret_type.syntax().parent().and_then(ast::Fn::cast)?;\n \n     let type_ref = &ret_type.type_ref()?;\n     let ret_type_str = type_ref.syntax().text().to_string();"}, {"sha": "c3e1f280323da414abd752d754a8f7e213688662", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,9 +1,7 @@\n use ra_syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n     AstNode,\n-    SyntaxKind::{\n-        CONST_DEF, ENUM_DEF, FN_DEF, MODULE, STATIC_DEF, STRUCT_DEF, TRAIT_DEF, VISIBILITY,\n-    },\n+    SyntaxKind::{CONST_DEF, ENUM_DEF, FN, MODULE, STATIC_DEF, STRUCT_DEF, TRAIT_DEF, VISIBILITY},\n     T,\n };\n use test_utils::mark;\n@@ -38,7 +36,7 @@ fn add_vis(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n \n     let (offset, target) = if let Some(keyword) = item_keyword {\n         let parent = keyword.parent();\n-        let def_kws = vec![CONST_DEF, STATIC_DEF, FN_DEF, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF];\n+        let def_kws = vec![CONST_DEF, STATIC_DEF, FN, MODULE, STRUCT_DEF, ENUM_DEF, TRAIT_DEF];\n         // Parent is not a definition, can't add visibility\n         if !def_kws.iter().any(|&def_kw| def_kw == parent.kind()) {\n             return None;"}, {"sha": "3650289fd64989654680db7a0fbf38fbe5858ff1", "filename": "crates/ra_assists/src/handlers/early_return.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fearly_return.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ use ra_syntax::{\n         make,\n     },\n     AstNode,\n-    SyntaxKind::{FN_DEF, LOOP_EXPR, L_CURLY, R_CURLY, WHILE_EXPR, WHITESPACE},\n+    SyntaxKind::{FN, LOOP_EXPR, L_CURLY, R_CURLY, WHILE_EXPR, WHITESPACE},\n     SyntaxNode,\n };\n \n@@ -88,7 +88,7 @@ pub(crate) fn convert_to_guarded_return(acc: &mut Assists, ctx: &AssistContext)\n \n     let early_expression: ast::Expr = match parent_container.kind() {\n         WHILE_EXPR | LOOP_EXPR => make::expr_continue(),\n-        FN_DEF => make::expr_return(),\n+        FN => make::expr_return(),\n         _ => return None,\n     };\n "}, {"sha": "006d0ffb2c464054d86f026cb5cba9bdada8cd8f", "filename": "crates/ra_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -82,7 +82,7 @@ struct FunctionTemplate {\n     insert_offset: TextSize,\n     placeholder_expr: ast::MacroCall,\n     leading_ws: String,\n-    fn_def: ast::FnDef,\n+    fn_def: ast::Fn,\n     trailing_ws: String,\n     file: FileId,\n }"}, {"sha": "4dff0ae4dbe6b8f55e4b4c46bc366835bde0fd8b", "filename": "crates/ra_assists/src/handlers/generate_new.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_new.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -160,7 +160,7 @@ fn find_struct_impl(ctx: &AssistContext, strukt: &ast::StructDef) -> Option<Opti\n fn has_new_fn(imp: &ast::ImplDef) -> bool {\n     if let Some(il) = imp.assoc_item_list() {\n         for item in il.assoc_items() {\n-            if let ast::AssocItem::FnDef(f) = item {\n+            if let ast::AssocItem::Fn(f) = item {\n                 if let Some(name) = f.name() {\n                     if name.text().eq_ignore_ascii_case(\"new\") {\n                         return true;"}, {"sha": "f3774fab19207636ab6aeeb909ae9786f93ceca7", "filename": "crates/ra_assists/src/handlers/introduce_named_lifetime.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_named_lifetime.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -38,7 +38,7 @@ pub(crate) fn introduce_named_lifetime(acc: &mut Assists, ctx: &AssistContext) -\n     let lifetime_token = ctx\n         .find_token_at_offset(SyntaxKind::LIFETIME)\n         .filter(|lifetime| lifetime.text() == \"'_\")?;\n-    if let Some(fn_def) = lifetime_token.ancestors().find_map(ast::FnDef::cast) {\n+    if let Some(fn_def) = lifetime_token.ancestors().find_map(ast::Fn::cast) {\n         generate_fn_def_assist(acc, &fn_def, lifetime_token.text_range())\n     } else if let Some(impl_def) = lifetime_token.ancestors().find_map(ast::ImplDef::cast) {\n         generate_impl_def_assist(acc, &impl_def, lifetime_token.text_range())\n@@ -50,7 +50,7 @@ pub(crate) fn introduce_named_lifetime(acc: &mut Assists, ctx: &AssistContext) -\n /// Generate the assist for the fn def case\n fn generate_fn_def_assist(\n     acc: &mut Assists,\n-    fn_def: &ast::FnDef,\n+    fn_def: &ast::Fn,\n     lifetime_loc: TextRange,\n ) -> Option<()> {\n     let param_list: ast::ParamList = fn_def.param_list()?;"}, {"sha": "dae6198ed717c7d5c8a230a433e8185765cb9b29", "filename": "crates/ra_assists/src/handlers/move_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -37,7 +37,7 @@ pub(crate) fn move_bounds_to_where_clause(acc: &mut Assists, ctx: &AssistContext\n \n     let anchor = match_ast! {\n         match parent {\n-            ast::FnDef(it) => it.body()?.syntax().clone().into(),\n+            ast::Fn(it) => it.body()?.syntax().clone().into(),\n             ast::TraitDef(it) => it.assoc_item_list()?.syntax().clone().into(),\n             ast::ImplDef(it) => it.assoc_item_list()?.syntax().clone().into(),\n             ast::EnumDef(it) => it.variant_list()?.syntax().clone().into(),"}, {"sha": "748be011b57f8b7f2ed62893361f4963201c03a2", "filename": "crates/ra_assists/src/utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_assists%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -66,13 +66,13 @@ pub fn get_missing_assoc_items(\n     if let Some(item_list) = impl_def.assoc_item_list() {\n         for item in item_list.assoc_items() {\n             match item {\n-                ast::AssocItem::FnDef(f) => {\n+                ast::AssocItem::Fn(f) => {\n                     if let Some(n) = f.name() {\n                         impl_fns_consts.insert(n.syntax().to_string());\n                     }\n                 }\n \n-                ast::AssocItem::TypeAliasDef(t) => {\n+                ast::AssocItem::TypeAlias(t) => {\n                     if let Some(n) = t.name() {\n                         impl_type.insert(n.syntax().to_string());\n                     }"}, {"sha": "1557b7c834311efdcaead2294e2e1f52e8b985a8", "filename": "crates/ra_hir/src/has_source.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fhas_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fhas_source.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -81,8 +81,8 @@ impl HasSource for EnumVariant {\n     }\n }\n impl HasSource for Function {\n-    type Ast = ast::FnDef;\n-    fn source(self, db: &dyn HirDatabase) -> InFile<ast::FnDef> {\n+    type Ast = ast::Fn;\n+    fn source(self, db: &dyn HirDatabase) -> InFile<ast::Fn> {\n         self.id.lookup(db.upcast()).source(db.upcast())\n     }\n }\n@@ -105,8 +105,8 @@ impl HasSource for Trait {\n     }\n }\n impl HasSource for TypeAlias {\n-    type Ast = ast::TypeAliasDef;\n-    fn source(self, db: &dyn HirDatabase) -> InFile<ast::TypeAliasDef> {\n+    type Ast = ast::TypeAlias;\n+    fn source(self, db: &dyn HirDatabase) -> InFile<ast::TypeAlias> {\n         self.id.lookup(db.upcast()).source(db.upcast())\n     }\n }"}, {"sha": "05440596691b4f6971f24ab847be6935c2be8d7e", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -582,10 +582,10 @@ to_def_impls![\n     (crate::Union, ast::UnionDef, union_to_def),\n     (crate::Trait, ast::TraitDef, trait_to_def),\n     (crate::ImplDef, ast::ImplDef, impl_to_def),\n-    (crate::TypeAlias, ast::TypeAliasDef, type_alias_to_def),\n+    (crate::TypeAlias, ast::TypeAlias, type_alias_to_def),\n     (crate::Const, ast::ConstDef, const_to_def),\n     (crate::Static, ast::StaticDef, static_to_def),\n-    (crate::Function, ast::FnDef, fn_to_def),\n+    (crate::Function, ast::Fn, fn_to_def),\n     (crate::Field, ast::RecordFieldDef, record_field_to_def),\n     (crate::Field, ast::TupleFieldDef, tuple_field_to_def),\n     (crate::EnumVariant, ast::EnumVariant, enum_variant_to_def),"}, {"sha": "d23a1974b0cf2a1ead147bd73111cd735c71e645", "filename": "crates/ra_hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -71,7 +71,7 @@ impl SourceToDefCtx<'_, '_> {\n     pub(super) fn impl_to_def(&mut self, src: InFile<ast::ImplDef>) -> Option<ImplId> {\n         self.to_def(src, keys::IMPL)\n     }\n-    pub(super) fn fn_to_def(&mut self, src: InFile<ast::FnDef>) -> Option<FunctionId> {\n+    pub(super) fn fn_to_def(&mut self, src: InFile<ast::Fn>) -> Option<FunctionId> {\n         self.to_def(src, keys::FUNCTION)\n     }\n     pub(super) fn struct_to_def(&mut self, src: InFile<ast::StructDef>) -> Option<StructId> {\n@@ -89,10 +89,7 @@ impl SourceToDefCtx<'_, '_> {\n     pub(super) fn const_to_def(&mut self, src: InFile<ast::ConstDef>) -> Option<ConstId> {\n         self.to_def(src, keys::CONST)\n     }\n-    pub(super) fn type_alias_to_def(\n-        &mut self,\n-        src: InFile<ast::TypeAliasDef>,\n-    ) -> Option<TypeAliasId> {\n+    pub(super) fn type_alias_to_def(&mut self, src: InFile<ast::TypeAlias>) -> Option<TypeAliasId> {\n         self.to_def(src, keys::TYPE_ALIAS)\n     }\n     pub(super) fn record_field_to_def(\n@@ -171,7 +168,7 @@ impl SourceToDefCtx<'_, '_> {\n                         let def = self.impl_to_def(container.with_value(it))?;\n                         def.into()\n                     },\n-                    ast::FnDef(it) => {\n+                    ast::Fn(it) => {\n                         let def = self.fn_to_def(container.with_value(it))?;\n                         DefWithBodyId::from(def).into()\n                     },\n@@ -195,7 +192,7 @@ impl SourceToDefCtx<'_, '_> {\n                         let def = self.const_to_def(container.with_value(it))?;\n                         DefWithBodyId::from(def).into()\n                     },\n-                    ast::TypeAliasDef(it) => {\n+                    ast::TypeAlias(it) => {\n                         let def = self.type_alias_to_def(container.with_value(it))?;\n                         def.into()\n                     },\n@@ -213,11 +210,11 @@ impl SourceToDefCtx<'_, '_> {\n         for container in src.cloned().ancestors_with_macros(self.db.upcast()).skip(1) {\n             let res: GenericDefId = match_ast! {\n                 match (container.value) {\n-                    ast::FnDef(it) => self.fn_to_def(container.with_value(it))?.into(),\n+                    ast::Fn(it) => self.fn_to_def(container.with_value(it))?.into(),\n                     ast::StructDef(it) => self.struct_to_def(container.with_value(it))?.into(),\n                     ast::EnumDef(it) => self.enum_to_def(container.with_value(it))?.into(),\n                     ast::TraitDef(it) => self.trait_to_def(container.with_value(it))?.into(),\n-                    ast::TypeAliasDef(it) => self.type_alias_to_def(container.with_value(it))?.into(),\n+                    ast::TypeAlias(it) => self.type_alias_to_def(container.with_value(it))?.into(),\n                     ast::ImplDef(it) => self.impl_to_def(container.with_value(it))?.into(),\n                     _ => continue,\n                 }\n@@ -233,7 +230,7 @@ impl SourceToDefCtx<'_, '_> {\n                 match (container.value) {\n                     ast::ConstDef(it) => self.const_to_def(container.with_value(it))?.into(),\n                     ast::StaticDef(it) => self.static_to_def(container.with_value(it))?.into(),\n-                    ast::FnDef(it) => self.fn_to_def(container.with_value(it))?.into(),\n+                    ast::Fn(it) => self.fn_to_def(container.with_value(it))?.into(),\n                     _ => continue,\n                 }\n             };"}, {"sha": "f463997e72c93f19e2b7c134f23e397292740456", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -627,14 +627,14 @@ impl ExprCollector<'_> {\n             .items()\n             .filter_map(|item| {\n                 let (def, name): (ModuleDefId, Option<ast::Name>) = match item {\n-                    ast::Item::FnDef(def) => {\n+                    ast::Item::Fn(def) => {\n                         let id = self.find_inner_item(&def)?;\n                         (\n                             FunctionLoc { container: container.into(), id }.intern(self.db).into(),\n                             def.name(),\n                         )\n                     }\n-                    ast::Item::TypeAliasDef(def) => {\n+                    ast::Item::TypeAlias(def) => {\n                         let id = self.find_inner_item(&def)?;\n                         (\n                             TypeAliasLoc { container: container.into(), id }.intern(self.db).into(),"}, {"sha": "ea61ac217730b08cf5b2c6fac64da0d989d2271d", "filename": "crates/ra_hir_def/src/item_tree.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -413,15 +413,15 @@ macro_rules! mod_items {\n mod_items! {\n     Import in imports -> ast::Use,\n     ExternCrate in extern_crates -> ast::ExternCrate,\n-    Function in functions -> ast::FnDef,\n+    Function in functions -> ast::Fn,\n     Struct in structs -> ast::StructDef,\n     Union in unions -> ast::UnionDef,\n     Enum in enums -> ast::EnumDef,\n     Const in consts -> ast::ConstDef,\n     Static in statics -> ast::StaticDef,\n     Trait in traits -> ast::TraitDef,\n     Impl in impls -> ast::ImplDef,\n-    TypeAlias in type_aliases -> ast::TypeAliasDef,\n+    TypeAlias in type_aliases -> ast::TypeAlias,\n     Mod in mods -> ast::Module,\n     MacroCall in macro_calls -> ast::MacroCall,\n }\n@@ -505,7 +505,7 @@ pub struct Function {\n     pub params: Box<[TypeRef]>,\n     pub is_varargs: bool,\n     pub ret_type: TypeRef,\n-    pub ast_id: FileAstId<ast::FnDef>,\n+    pub ast_id: FileAstId<ast::Fn>,\n }\n \n #[derive(Debug, Clone, Eq, PartialEq)]\n@@ -592,7 +592,7 @@ pub struct TypeAlias {\n     pub bounds: Box<[TypeBound]>,\n     pub generic_params: GenericParamsId,\n     pub type_ref: Option<TypeRef>,\n-    pub ast_id: FileAstId<ast::TypeAliasDef>,\n+    pub ast_id: FileAstId<ast::TypeAlias>,\n }\n \n #[derive(Debug, Clone, Eq, PartialEq)]"}, {"sha": "4cfc68f53a2737c1ca85f7dd483592969712c20b", "filename": "crates/ra_hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -78,8 +78,8 @@ impl Ctx {\n             ast::Item::StructDef(_)\n             | ast::Item::UnionDef(_)\n             | ast::Item::EnumDef(_)\n-            | ast::Item::FnDef(_)\n-            | ast::Item::TypeAliasDef(_)\n+            | ast::Item::Fn(_)\n+            | ast::Item::TypeAlias(_)\n             | ast::Item::ConstDef(_)\n             | ast::Item::StaticDef(_)\n             | ast::Item::MacroCall(_) => {\n@@ -103,8 +103,8 @@ impl Ctx {\n             ast::Item::StructDef(ast) => self.lower_struct(ast).map(Into::into),\n             ast::Item::UnionDef(ast) => self.lower_union(ast).map(Into::into),\n             ast::Item::EnumDef(ast) => self.lower_enum(ast).map(Into::into),\n-            ast::Item::FnDef(ast) => self.lower_function(ast).map(Into::into),\n-            ast::Item::TypeAliasDef(ast) => self.lower_type_alias(ast).map(Into::into),\n+            ast::Item::Fn(ast) => self.lower_function(ast).map(Into::into),\n+            ast::Item::TypeAlias(ast) => self.lower_type_alias(ast).map(Into::into),\n             ast::Item::StaticDef(ast) => self.lower_static(ast).map(Into::into),\n             ast::Item::ConstDef(ast) => Some(self.lower_const(ast).into()),\n             ast::Item::Module(ast) => self.lower_module(ast).map(Into::into),\n@@ -155,8 +155,8 @@ impl Ctx {\n \n     fn lower_assoc_item(&mut self, item: &ast::AssocItem) -> Option<AssocItem> {\n         match item {\n-            ast::AssocItem::FnDef(ast) => self.lower_function(ast).map(Into::into),\n-            ast::AssocItem::TypeAliasDef(ast) => self.lower_type_alias(ast).map(Into::into),\n+            ast::AssocItem::Fn(ast) => self.lower_function(ast).map(Into::into),\n+            ast::AssocItem::TypeAlias(ast) => self.lower_type_alias(ast).map(Into::into),\n             ast::AssocItem::ConstDef(ast) => Some(self.lower_const(ast).into()),\n             ast::AssocItem::MacroCall(ast) => self.lower_macro_call(ast).map(Into::into),\n         }\n@@ -277,7 +277,7 @@ impl Ctx {\n         Some(res)\n     }\n \n-    fn lower_function(&mut self, func: &ast::FnDef) -> Option<FileItemTreeId<Function>> {\n+    fn lower_function(&mut self, func: &ast::Fn) -> Option<FileItemTreeId<Function>> {\n         let visibility = self.lower_visibility(func);\n         let name = func.name()?.as_name();\n \n@@ -348,7 +348,7 @@ impl Ctx {\n \n     fn lower_type_alias(\n         &mut self,\n-        type_alias: &ast::TypeAliasDef,\n+        type_alias: &ast::TypeAlias,\n     ) -> Option<FileItemTreeId<TypeAlias>> {\n         let name = type_alias.name()?.as_name();\n         let type_ref = type_alias.type_ref().map(|it| self.lower_type_ref(&it));\n@@ -547,7 +547,7 @@ impl Ctx {\n                     self.collect_inner_items(item.syntax());\n                     let attrs = Attrs::new(&item, &self.hygiene);\n                     let id: ModItem = match item {\n-                        ast::ExternItem::FnDef(ast) => {\n+                        ast::ExternItem::Fn(ast) => {\n                             let func = self.lower_function(&ast)?;\n                             self.data().functions[func.index].is_unsafe = true;\n                             func.into()"}, {"sha": "a8f5da1c1244488be763b471f45a476e338c70ba", "filename": "crates/ra_hir_def/src/item_tree/tests.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -236,13 +236,13 @@ fn smoke() {\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"on_trait\"))] }, input: None }]) }]\n             Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [TypeAlias(Idx::<TypeAlias>(0)), Const(Idx::<Const>(0)), Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::TraitDef>(2) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_ty\"))] }, input: None }]) }]\n-            > TypeAlias { name: Name(Text(\"AssocTy\")), visibility: RawVisibilityId(\"pub(self)\"), bounds: [Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Tr\"))] }, generic_args: [Some(GenericArgs { args: [Type(Tuple([]))], has_self_type: false, bindings: [] })] })], generic_params: GenericParamsId(4294967295), type_ref: None, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::TypeAliasDef>(8) }\n+            > TypeAlias { name: Name(Text(\"AssocTy\")), visibility: RawVisibilityId(\"pub(self)\"), bounds: [Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Tr\"))] }, generic_args: [Some(GenericArgs { args: [Type(Tuple([]))], has_self_type: false, bindings: [] })] })], generic_params: GenericParamsId(4294967295), type_ref: None, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::TypeAlias>(8) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_const\"))] }, input: None }]) }]\n             > Const { name: Some(Name(Text(\"CONST\"))), visibility: RawVisibilityId(\"pub(self)\"), type_ref: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"u8\"))] }, generic_args: [None] }), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::ConstDef>(9) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_method\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Shared)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(10) }\n+            > Function { name: Name(Text(\"method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Shared)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(10) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"assoc_dfl_method\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"dfl_method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Mut)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(11) }\n+            > Function { name: Name(Text(\"dfl_method\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: true, is_unsafe: false, params: [Reference(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Self\"))] }, generic_args: [None] }), Mut)], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(11) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct0\"))] }, input: None }]) }]\n             Struct { name: Name(Text(\"Struct0\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), fields: Unit, ast_id: FileAstId::<ra_syntax::ast::generated::nodes::StructDef>(3), kind: Unit }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct1\"))] }, input: None }]) }]\n@@ -275,12 +275,12 @@ fn simple_inner_items() {\n \n             top-level items:\n             Impl { generic_params: GenericParamsId(0), target_trait: Some(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"D\"))] }, generic_args: [None] })), target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Response\"))] }, generic_args: [Some(GenericArgs { args: [Type(Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"T\"))] }, generic_args: [None] }))], has_self_type: false, bindings: [] })] }), is_negative: false, items: [Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::ImplDef>(0) }\n-            > Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(1) }\n+            > Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n \n             inner items:\n \n             for AST FileAstId::<ra_syntax::ast::generated::nodes::Item>(2):\n-            Function { name: Name(Text(\"end\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(2) }\n+            Function { name: Name(Text(\"end\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n \n         \"#]],\n     );\n@@ -303,9 +303,9 @@ fn extern_attrs() {\n \n             top-level items:\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }, Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"block_attr\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(1) }\n+            Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }, Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"block_attr\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(2) }\n+            Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: true, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -329,9 +329,9 @@ fn trait_attrs() {\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"trait_attr\"))] }, input: None }]) }]\n             Trait { name: Name(Text(\"Tr\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(0), auto: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::TraitDef>(0) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(1) }\n+            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(2) }\n+            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -355,9 +355,9 @@ fn impl_attrs() {\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"impl_attr\"))] }, input: None }]) }]\n             Impl { generic_params: GenericParamsId(4294967295), target_trait: None, target_type: Path(Path { type_anchor: None, mod_path: ModPath { kind: Plain, segments: [Name(Text(\"Ty\"))] }, generic_args: [None] }), is_negative: false, items: [Function(Idx::<Function>(0)), Function(Idx::<Function>(1))], ast_id: FileAstId::<ra_syntax::ast::generated::nodes::ImplDef>(0) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_a\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(1) }\n+            > Function { name: Name(Text(\"a\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n             > #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"attr_b\"))] }, input: None }]) }]\n-            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(2) }\n+            > Function { name: Name(Text(\"b\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(2) }\n         \"##]],\n     );\n }\n@@ -408,13 +408,13 @@ fn inner_item_attrs() {\n             inner attrs: Attrs { entries: None }\n \n             top-level items:\n-            Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(0) }\n+            Function { name: Name(Text(\"foo\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(0) }\n \n             inner items:\n \n             for AST FileAstId::<ra_syntax::ast::generated::nodes::Item>(1):\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"on_inner\"))] }, input: None }]) }]\n-            Function { name: Name(Text(\"inner\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::FnDef>(1) }\n+            Function { name: Name(Text(\"inner\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), has_self_param: false, is_unsafe: false, params: [], is_varargs: false, ret_type: Tuple([]), ast_id: FileAstId::<ra_syntax::ast::generated::nodes::Fn>(1) }\n \n         \"##]],\n     );"}, {"sha": "f627eab1f552e14deaca194abc7d046fb032ce8e", "filename": "crates/ra_hir_def/src/keys.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fkeys.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -14,10 +14,10 @@ use crate::{\n \n pub type Key<K, V> = crate::dyn_map::Key<InFile<K>, V, AstPtrPolicy<K, V>>;\n \n-pub const FUNCTION: Key<ast::FnDef, FunctionId> = Key::new();\n+pub const FUNCTION: Key<ast::Fn, FunctionId> = Key::new();\n pub const CONST: Key<ast::ConstDef, ConstId> = Key::new();\n pub const STATIC: Key<ast::StaticDef, StaticId> = Key::new();\n-pub const TYPE_ALIAS: Key<ast::TypeAliasDef, TypeAliasId> = Key::new();\n+pub const TYPE_ALIAS: Key<ast::TypeAlias, TypeAliasId> = Key::new();\n pub const IMPL: Key<ast::ImplDef, ImplId> = Key::new();\n pub const TRAIT: Key<ast::TraitDef, TraitId> = Key::new();\n pub const STRUCT: Key<ast::StructDef, StructId> = Key::new();"}, {"sha": "016e689fff22524e3d380e64b61bf98818b066b0", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -81,7 +81,7 @@ fn check_types_impl(ra_fixture: &str, display_source: bool) {\n fn type_at_range(db: &TestDB, pos: FileRange) -> Ty {\n     let file = db.parse(pos.file_id).ok().unwrap();\n     let expr = algo::find_node_at_range::<ast::Expr>(file.syntax(), pos.range).unwrap();\n-    let fn_def = expr.syntax().ancestors().find_map(ast::FnDef::cast).unwrap();\n+    let fn_def = expr.syntax().ancestors().find_map(ast::Fn::cast).unwrap();\n     let module = db.module_for_file(pos.file_id);\n     let func = *module.child_by_source(db)[keys::FUNCTION]\n         .get(&InFile::new(pos.file_id.into(), fn_def))"}, {"sha": "1fcaf4a32b75d07ed5663e0d2ccb5e17e92b053f", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -59,7 +59,7 @@ pub(crate) fn incoming_calls(db: &RootDatabase, position: FilePosition) -> Optio\n         if let Some(nav) = syntax.ancestors().find_map(|node| {\n             match_ast! {\n                 match node {\n-                    ast::FnDef(it) => {\n+                    ast::Fn(it) => {\n                         let def = sema.to_def(&it)?;\n                         Some(def.to_nav(sema.db))\n                     },\n@@ -181,8 +181,8 @@ fn caller() {\n     call<|>ee();\n }\n \"#,\n-            \"callee FN_DEF FileId(1) 0..14 3..9\",\n-            &[\"caller FN_DEF FileId(1) 15..44 18..24 : [33..39]\"],\n+            \"callee FN FileId(1) 0..14 3..9\",\n+            &[\"caller FN FileId(1) 15..44 18..24 : [33..39]\"],\n             &[],\n         );\n     }\n@@ -197,8 +197,8 @@ fn caller() {\n     callee();\n }\n \"#,\n-            \"callee FN_DEF FileId(1) 0..14 3..9\",\n-            &[\"caller FN_DEF FileId(1) 15..44 18..24 : [33..39]\"],\n+            \"callee FN FileId(1) 0..14 3..9\",\n+            &[\"caller FN FileId(1) 15..44 18..24 : [33..39]\"],\n             &[],\n         );\n     }\n@@ -214,8 +214,8 @@ fn caller() {\n     callee();\n }\n \"#,\n-            \"callee FN_DEF FileId(1) 0..14 3..9\",\n-            &[\"caller FN_DEF FileId(1) 15..58 18..24 : [33..39, 47..53]\"],\n+            \"callee FN FileId(1) 0..14 3..9\",\n+            &[\"caller FN FileId(1) 15..58 18..24 : [33..39, 47..53]\"],\n             &[],\n         );\n     }\n@@ -234,10 +234,10 @@ fn caller2() {\n     callee();\n }\n \"#,\n-            \"callee FN_DEF FileId(1) 0..14 3..9\",\n+            \"callee FN FileId(1) 0..14 3..9\",\n             &[\n-                \"caller1 FN_DEF FileId(1) 15..45 18..25 : [34..40]\",\n-                \"caller2 FN_DEF FileId(1) 47..77 50..57 : [66..72]\",\n+                \"caller1 FN FileId(1) 15..45 18..25 : [34..40]\",\n+                \"caller2 FN FileId(1) 47..77 50..57 : [66..72]\",\n             ],\n             &[],\n         );\n@@ -263,10 +263,10 @@ mod tests {\n     }\n }\n \"#,\n-            \"callee FN_DEF FileId(1) 0..14 3..9\",\n+            \"callee FN FileId(1) 0..14 3..9\",\n             &[\n-                \"caller1 FN_DEF FileId(1) 15..45 18..25 : [34..40]\",\n-                \"test_caller FN_DEF FileId(1) 95..149 110..121 : [134..140]\",\n+                \"caller1 FN FileId(1) 15..45 18..25 : [34..40]\",\n+                \"test_caller FN FileId(1) 95..149 110..121 : [134..140]\",\n             ],\n             &[],\n         );\n@@ -287,8 +287,8 @@ fn caller() {\n //- /foo/mod.rs\n pub fn callee() {}\n \"#,\n-            \"callee FN_DEF FileId(2) 0..18 7..13\",\n-            &[\"caller FN_DEF FileId(1) 27..56 30..36 : [45..51]\"],\n+            \"callee FN FileId(2) 0..18 7..13\",\n+            &[\"caller FN FileId(1) 27..56 30..36 : [45..51]\"],\n             &[],\n         );\n     }\n@@ -304,9 +304,9 @@ fn call<|>er() {\n     callee();\n }\n \"#,\n-            \"caller FN_DEF FileId(1) 15..58 18..24\",\n+            \"caller FN FileId(1) 15..58 18..24\",\n             &[],\n-            &[\"callee FN_DEF FileId(1) 0..14 3..9 : [33..39, 47..53]\"],\n+            &[\"callee FN FileId(1) 0..14 3..9 : [33..39, 47..53]\"],\n         );\n     }\n \n@@ -325,9 +325,9 @@ fn call<|>er() {\n //- /foo/mod.rs\n pub fn callee() {}\n \"#,\n-            \"caller FN_DEF FileId(1) 27..56 30..36\",\n+            \"caller FN FileId(1) 27..56 30..36\",\n             &[],\n-            &[\"callee FN_DEF FileId(2) 0..18 7..13 : [45..51]\"],\n+            &[\"callee FN FileId(2) 0..18 7..13 : [45..51]\"],\n         );\n     }\n \n@@ -348,9 +348,9 @@ fn caller3() {\n \n }\n \"#,\n-            \"caller2 FN_DEF FileId(1) 33..64 36..43\",\n-            &[\"caller1 FN_DEF FileId(1) 0..31 3..10 : [19..26]\"],\n-            &[\"caller3 FN_DEF FileId(1) 66..83 69..76 : [52..59]\"],\n+            \"caller2 FN FileId(1) 33..64 36..43\",\n+            &[\"caller1 FN FileId(1) 0..31 3..10 : [19..26]\"],\n+            &[\"caller3 FN FileId(1) 66..83 69..76 : [52..59]\"],\n         );\n     }\n \n@@ -368,9 +368,9 @@ fn main() {\n     a<|>()\n }\n \"#,\n-            \"a FN_DEF FileId(1) 0..18 3..4\",\n-            &[\"main FN_DEF FileId(1) 31..52 34..38 : [47..48]\"],\n-            &[\"b FN_DEF FileId(1) 20..29 23..24 : [13..14]\"],\n+            \"a FN FileId(1) 0..18 3..4\",\n+            &[\"main FN FileId(1) 31..52 34..38 : [47..48]\"],\n+            &[\"b FN FileId(1) 20..29 23..24 : [13..14]\"],\n         );\n \n         check_hierarchy(\n@@ -385,8 +385,8 @@ fn main() {\n     a()\n }\n \"#,\n-            \"b FN_DEF FileId(1) 20..29 23..24\",\n-            &[\"a FN_DEF FileId(1) 0..18 3..4 : [13..14]\"],\n+            \"b FN FileId(1) 20..29 23..24\",\n+            &[\"a FN FileId(1) 0..18 3..4 : [13..14]\"],\n             &[],\n         );\n     }"}, {"sha": "4063342572bfcb8b31289184f7592d3019f4c0e8", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -19,8 +19,8 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n \n     let mut params = FxHashMap::default();\n \n-    let me = ctx.token.ancestors().find_map(ast::FnDef::cast);\n-    let mut process_fn = |func: ast::FnDef| {\n+    let me = ctx.token.ancestors().find_map(ast::Fn::cast);\n+    let mut process_fn = |func: ast::Fn| {\n         if Some(&func) == me.as_ref() {\n             return;\n         }\n@@ -34,15 +34,15 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n         match_ast! {\n             match node {\n                 ast::SourceFile(it) => it.items().filter_map(|item| match item {\n-                    ast::Item::FnDef(it) => Some(it),\n+                    ast::Item::Fn(it) => Some(it),\n                     _ => None,\n                 }).for_each(&mut process_fn),\n                 ast::ItemList(it) => it.items().filter_map(|item| match item {\n-                    ast::Item::FnDef(it) => Some(it),\n+                    ast::Item::Fn(it) => Some(it),\n                     _ => None,\n                 }).for_each(&mut process_fn),\n                 ast::AssocItemList(it) => it.assoc_items().filter_map(|item| match item {\n-                    ast::AssocItem::FnDef(it) => Some(it),\n+                    ast::AssocItem::Fn(it) => Some(it),\n                     _ => None,\n                 }).for_each(&mut process_fn),\n                 _ => continue,"}, {"sha": "b62064797b0b79e471006cceb04a725937b1332a", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -169,7 +169,7 @@ fn add_keyword(ctx: &CompletionContext, acc: &mut Completions, kw: &str, snippet\n \n fn complete_return(\n     ctx: &CompletionContext,\n-    fn_def: &ast::FnDef,\n+    fn_def: &ast::Fn,\n     can_be_stmt: bool,\n ) -> Option<CompletionItem> {\n     let snip = match (can_be_stmt, fn_def.ret_type().is_some()) {"}, {"sha": "7d9050a6b6540700b80f70830f7b2c8405b79706", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -2,7 +2,7 @@\n //!\n //! This module adds the completion items related to implementing associated\n //! items within a `impl Trait for Struct` block. The current context node\n-//! must be within either a `FN_DEF`, `TYPE_ALIAS_DEF`, or `CONST_DEF` node\n+//! must be within either a `FN`, `TYPE_ALIAS`, or `CONST_DEF` node\n //! and an direct child of an `IMPL_DEF`.\n //!\n //! # Examples\n@@ -63,7 +63,7 @@ pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext\n                     }\n                 }),\n \n-            SyntaxKind::FN_DEF => {\n+            SyntaxKind::FN => {\n                 for missing_fn in get_missing_assoc_items(&ctx.sema, &impl_def)\n                     .into_iter()\n                     .filter_map(|item| match item {\n@@ -75,7 +75,7 @@ pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext\n                 }\n             }\n \n-            SyntaxKind::TYPE_ALIAS_DEF => {\n+            SyntaxKind::TYPE_ALIAS => {\n                 for missing_fn in get_missing_assoc_items(&ctx.sema, &impl_def)\n                     .into_iter()\n                     .filter_map(|item| match item {\n@@ -106,8 +106,8 @@ pub(crate) fn complete_trait_impl(acc: &mut Completions, ctx: &CompletionContext\n \n fn completion_match(ctx: &CompletionContext) -> Option<(SyntaxNode, ImplDef)> {\n     let (trigger, impl_def_offset) = ctx.token.ancestors().find_map(|p| match p.kind() {\n-        SyntaxKind::FN_DEF\n-        | SyntaxKind::TYPE_ALIAS_DEF\n+        SyntaxKind::FN\n+        | SyntaxKind::TYPE_ALIAS\n         | SyntaxKind::CONST_DEF\n         | SyntaxKind::BLOCK_EXPR => Some((p, 2)),\n         SyntaxKind::NAME_REF => Some((p, 5)),"}, {"sha": "221d7847e085dc2105b8827bd6a8b4896353e60e", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -35,7 +35,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) krate: Option<hir::Crate>,\n     pub(super) expected_type: Option<Type>,\n     pub(super) name_ref_syntax: Option<ast::NameRef>,\n-    pub(super) function_syntax: Option<ast::FnDef>,\n+    pub(super) function_syntax: Option<ast::Fn>,\n     pub(super) use_item_syntax: Option<ast::Use>,\n     pub(super) record_lit_syntax: Option<ast::RecordLit>,\n     pub(super) record_pat_syntax: Option<ast::RecordPat>,\n@@ -349,7 +349,7 @@ impl<'a> CompletionContext<'a> {\n             .sema\n             .ancestors_with_macros(self.token.parent())\n             .take_while(|it| it.kind() != SOURCE_FILE && it.kind() != MODULE)\n-            .find_map(ast::FnDef::cast);\n+            .find_map(ast::Fn::cast);\n \n         self.record_field_syntax = self\n             .sema"}, {"sha": "b8408da4ec9576c8162aed3b9a8011962f5d12e4", "filename": "crates/ra_ide/src/completion/patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpatterns.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -134,7 +134,7 @@ pub(crate) fn is_in_loop_body(element: SyntaxElement) -> bool {\n         NodeOrToken::Token(token) => token.parent(),\n     };\n     for node in leaf.ancestors() {\n-        if node.kind() == FN_DEF || node.kind() == LAMBDA_EXPR {\n+        if node.kind() == FN || node.kind() == LAMBDA_EXPR {\n             break;\n         }\n         let loop_body = match_ast! {"}, {"sha": "6d93726bf204f02091838b1de6faa709aa39686a", "filename": "crates/ra_ide/src/display.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -16,7 +16,7 @@ pub use navigation_target::NavigationTarget;\n pub(crate) use navigation_target::{ToNav, TryToNav};\n pub(crate) use short_label::ShortLabel;\n \n-pub(crate) fn function_declaration(node: &ast::FnDef) -> String {\n+pub(crate) fn function_declaration(node: &ast::Fn) -> String {\n     let mut buf = String::new();\n     if let Some(vis) = node.visibility() {\n         format_to!(buf, \"{} \", vis);\n@@ -65,7 +65,7 @@ pub(crate) fn const_label(node: &ast::ConstDef) -> String {\n     label.trim().to_owned()\n }\n \n-pub(crate) fn type_label(node: &ast::TypeAliasDef) -> String {\n+pub(crate) fn type_label(node: &ast::TypeAlias) -> String {\n     let label: String = node\n         .syntax()\n         .children_with_tokens()"}, {"sha": "4f19c7ed42df1c88fe216b8de085a2736c03c775", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -379,12 +379,12 @@ pub(crate) fn docs_from_symbol(db: &RootDatabase, symbol: &FileSymbol) -> Option\n \n     match_ast! {\n         match node {\n-            ast::FnDef(it) => it.doc_comment_text(),\n+            ast::Fn(it) => it.doc_comment_text(),\n             ast::StructDef(it) => it.doc_comment_text(),\n             ast::EnumDef(it) => it.doc_comment_text(),\n             ast::TraitDef(it) => it.doc_comment_text(),\n             ast::Module(it) => it.doc_comment_text(),\n-            ast::TypeAliasDef(it) => it.doc_comment_text(),\n+            ast::TypeAlias(it) => it.doc_comment_text(),\n             ast::ConstDef(it) => it.doc_comment_text(),\n             ast::StaticDef(it) => it.doc_comment_text(),\n             ast::RecordFieldDef(it) => it.doc_comment_text(),\n@@ -404,12 +404,12 @@ pub(crate) fn description_from_symbol(db: &RootDatabase, symbol: &FileSymbol) ->\n \n     match_ast! {\n         match node {\n-            ast::FnDef(it) => it.short_label(),\n+            ast::Fn(it) => it.short_label(),\n             ast::StructDef(it) => it.short_label(),\n             ast::EnumDef(it) => it.short_label(),\n             ast::TraitDef(it) => it.short_label(),\n             ast::Module(it) => it.short_label(),\n-            ast::TypeAliasDef(it) => it.short_label(),\n+            ast::TypeAlias(it) => it.short_label(),\n             ast::ConstDef(it) => it.short_label(),\n             ast::StaticDef(it) => it.short_label(),\n             ast::RecordFieldDef(it) => it.short_label(),"}, {"sha": "e2c95be06fda2a025d2f89771e0255c672352405", "filename": "crates/ra_ide/src/display/short_label.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fshort_label.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -7,7 +7,7 @@ pub(crate) trait ShortLabel {\n     fn short_label(&self) -> Option<String>;\n }\n \n-impl ShortLabel for ast::FnDef {\n+impl ShortLabel for ast::Fn {\n     fn short_label(&self) -> Option<String> {\n         Some(crate::display::function_declaration(self))\n     }\n@@ -47,7 +47,7 @@ impl ShortLabel for ast::Module {\n     }\n }\n \n-impl ShortLabel for ast::TypeAliasDef {\n+impl ShortLabel for ast::TypeAlias {\n     fn short_label(&self) -> Option<String> {\n         short_label_from_node(self, \"type \")\n     }"}, {"sha": "8ef977761d27d6e777133ca5fc83aacd835e8735", "filename": "crates/ra_ide/src/file_structure.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -111,7 +111,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n \n     match_ast! {\n         match node {\n-            ast::FnDef(it) => {\n+            ast::Fn(it) => {\n                 let mut detail = String::from(\"fn\");\n                 if let Some(type_param_list) = it.type_param_list() {\n                     collapse_ws(type_param_list.syntax(), &mut detail);\n@@ -132,7 +132,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n             ast::EnumVariant(it) => decl(it),\n             ast::TraitDef(it) => decl(it),\n             ast::Module(it) => decl(it),\n-            ast::TypeAliasDef(it) => {\n+            ast::TypeAlias(it) => {\n                 let ty = it.type_ref();\n                 decl_with_type_ref(it, ty)\n             },\n@@ -271,7 +271,7 @@ fn very_obsolete() {}\n                         label: \"bar1\",\n                         navigation_range: 43..47,\n                         node_range: 40..52,\n-                        kind: FN_DEF,\n+                        kind: FN,\n                         detail: Some(\n                             \"fn()\",\n                         ),\n@@ -284,7 +284,7 @@ fn very_obsolete() {}\n                         label: \"bar2\",\n                         navigation_range: 60..64,\n                         node_range: 57..81,\n-                        kind: FN_DEF,\n+                        kind: FN,\n                         detail: Some(\n                             \"fn<T>(t: T) -> T\",\n                         ),\n@@ -297,7 +297,7 @@ fn very_obsolete() {}\n                         label: \"bar3\",\n                         navigation_range: 89..93,\n                         node_range: 86..156,\n-                        kind: FN_DEF,\n+                        kind: FN,\n                         detail: Some(\n                             \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n                         ),\n@@ -339,7 +339,7 @@ fn very_obsolete() {}\n                         label: \"T\",\n                         navigation_range: 186..187,\n                         node_range: 181..193,\n-                        kind: TYPE_ALIAS_DEF,\n+                        kind: TYPE_ALIAS,\n                         detail: Some(\n                             \"()\",\n                         ),\n@@ -417,7 +417,7 @@ fn very_obsolete() {}\n                         label: \"obsolete\",\n                         navigation_range: 428..436,\n                         node_range: 411..441,\n-                        kind: FN_DEF,\n+                        kind: FN,\n                         detail: Some(\n                             \"fn()\",\n                         ),\n@@ -428,7 +428,7 @@ fn very_obsolete() {}\n                         label: \"very_obsolete\",\n                         navigation_range: 481..494,\n                         node_range: 443..499,\n-                        kind: FN_DEF,\n+                        kind: FN,\n                         detail: Some(\n                             \"fn()\",\n                         ),"}, {"sha": "4ef7efd26d9c8b7c5669e8c20d3cd8bd0161b61e", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1361,7 +1361,7 @@ fn foo_<|>test() {}\n                                     11..19,\n                                 ),\n                                 name: \"foo_test\",\n-                                kind: FN_DEF,\n+                                kind: FN,\n                                 container_name: None,\n                                 description: None,\n                                 docs: None,"}, {"sha": "8d3452a8356b7076b00166e8fba12250621cfbc3", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -376,7 +376,7 @@ impl Foo {\n }\n \"#,\n         );\n-        check_result(refs, \"f FN_DEF FileId(1) 27..43 30..31 Other\", &[]);\n+        check_result(refs, \"f FN FileId(1) 27..43 30..31 Other\", &[]);\n     }\n \n     #[test]\n@@ -514,15 +514,15 @@ pub(super) struct Foo<|> {\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"quux FN_DEF FileId(1) 19..35 26..30 Other\",\n+            \"quux FN FileId(1) 19..35 26..30 Other\",\n             &[\"FileId(2) 16..20 StructLiteral\", \"FileId(3) 16..20 StructLiteral\"],\n         );\n \n         let refs =\n             analysis.find_all_refs(pos, Some(SearchScope::single_file(bar))).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"quux FN_DEF FileId(1) 19..35 26..30 Other\",\n+            \"quux FN FileId(1) 19..35 26..30 Other\",\n             &[\"FileId(3) 16..20 StructLiteral\"],\n         );\n     }\n@@ -619,7 +619,7 @@ fn main() {\n         );\n         check_result(\n             refs,\n-            \"new FN_DEF FileId(1) 54..101 61..64 Other\",\n+            \"new FN FileId(1) 54..101 61..64 Other\",\n             &[\"FileId(1) 146..149 StructLiteral\"],\n         );\n     }\n@@ -646,7 +646,7 @@ fn main() {\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"f FN_DEF FileId(1) 26..35 29..30 Other\",\n+            \"f FN FileId(1) 26..35 29..30 Other\",\n             &[\"FileId(2) 11..12 Other\", \"FileId(2) 28..29 StructLiteral\"],\n         );\n     }"}, {"sha": "d8ffb8c84c77f123d0fc4a802fb9f7ff8af43519", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -149,7 +149,7 @@ fn rename_to_self(\n     let source_file = sema.parse(position.file_id);\n     let syn = source_file.syntax();\n \n-    let fn_def = find_node_at_offset::<ast::FnDef>(syn, position.offset)?;\n+    let fn_def = find_node_at_offset::<ast::Fn>(syn, position.offset)?;\n     let params = fn_def.param_list()?;\n     if params.self_param().is_some() {\n         return None; // method already has self param\n@@ -221,7 +221,7 @@ fn rename_self_to_param(\n     let syn = source_file.syntax();\n \n     let text = sema.db.file_text(position.file_id);\n-    let fn_def = find_node_at_offset::<ast::FnDef>(syn, position.offset)?;\n+    let fn_def = find_node_at_offset::<ast::Fn>(syn, position.offset)?;\n     let search_range = fn_def.syntax().text_range();\n \n     let mut edits: Vec<SourceFileEdit> = vec![];"}, {"sha": "3b7162b8416ba462fee1f7b9cd82d5e331bc283d", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -102,7 +102,7 @@ pub(crate) fn runnable(\n ) -> Option<Runnable> {\n     match_ast! {\n         match item {\n-            ast::FnDef(it) => runnable_fn(sema, it, file_id),\n+            ast::Fn(it) => runnable_fn(sema, it, file_id),\n             ast::Module(it) => runnable_mod(sema, it, file_id),\n             _ => None,\n         }\n@@ -111,7 +111,7 @@ pub(crate) fn runnable(\n \n fn runnable_fn(\n     sema: &Semantics<RootDatabase>,\n-    fn_def: ast::FnDef,\n+    fn_def: ast::Fn,\n     file_id: FileId,\n ) -> Option<Runnable> {\n     let name_string = fn_def.name()?.text().to_string();\n@@ -188,7 +188,7 @@ pub struct TestAttr {\n }\n \n impl TestAttr {\n-    fn from_fn(fn_def: &ast::FnDef) -> TestAttr {\n+    fn from_fn(fn_def: &ast::Fn) -> TestAttr {\n         let ignore = fn_def\n             .attrs()\n             .filter_map(|attr| attr.simple_name())\n@@ -203,15 +203,15 @@ impl TestAttr {\n ///\n /// It may produce false positives, for example, `#[wasm_bindgen_test]` requires a different command to run the test,\n /// but it's better than not to have the runnables for the tests at all.\n-fn has_test_related_attribute(fn_def: &ast::FnDef) -> bool {\n+fn has_test_related_attribute(fn_def: &ast::Fn) -> bool {\n     fn_def\n         .attrs()\n         .filter_map(|attr| attr.path())\n         .map(|path| path.syntax().to_string().to_lowercase())\n         .any(|attribute_text| attribute_text.contains(\"test\"))\n }\n \n-fn has_doc_test(fn_def: &ast::FnDef) -> bool {\n+fn has_doc_test(fn_def: &ast::Fn) -> bool {\n     fn_def.doc_comment_text().map_or(false, |comment| comment.contains(\"```\"))\n }\n \n@@ -246,7 +246,7 @@ fn has_test_function_or_multiple_test_submodules(module: &ast::Module) -> bool {\n \n         for item in item_list.items() {\n             match item {\n-                ast::Item::FnDef(f) => {\n+                ast::Item::Fn(f) => {\n                     if has_test_related_attribute(&f) {\n                         return true;\n                     }\n@@ -320,7 +320,7 @@ fn bench() {}\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -338,7 +338,7 @@ fn bench() {}\n                                 26..34,\n                             ),\n                             name: \"test_foo\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -363,7 +363,7 @@ fn bench() {}\n                                 62..70,\n                             ),\n                             name: \"test_foo\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -388,7 +388,7 @@ fn bench() {}\n                                 89..94,\n                             ),\n                             name: \"bench\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -431,7 +431,7 @@ fn foo() {}\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -447,7 +447,7 @@ fn foo() {}\n                             full_range: 15..57,\n                             focus_range: None,\n                             name: \"foo\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -493,7 +493,7 @@ impl Data {\n                                 4..8,\n                             ),\n                             name: \"main\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -509,7 +509,7 @@ impl Data {\n                             full_range: 44..98,\n                             focus_range: None,\n                             name: \"foo\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -570,7 +570,7 @@ mod test_mod {\n                                 35..44,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -670,7 +670,7 @@ mod root_tests {\n                                 107..121,\n                             ),\n                             name: \"nested_test_11\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -695,7 +695,7 @@ mod root_tests {\n                                 163..177,\n                             ),\n                             name: \"nested_test_12\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -740,7 +740,7 @@ mod root_tests {\n                                 258..271,\n                             ),\n                             name: \"nested_test_2\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -783,7 +783,7 @@ fn test_foo1() {}\n                                 36..45,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n@@ -831,7 +831,7 @@ fn test_foo1() {}\n                                 58..67,\n                             ),\n                             name: \"test_foo1\",\n-                            kind: FN_DEF,\n+                            kind: FN,\n                             container_name: None,\n                             description: None,\n                             docs: None,"}, {"sha": "8d52fb6e49ad5fdbfd984157cbc3f0d64826fef6", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -464,7 +464,7 @@ fn highlight_element(\n     let db = sema.db;\n     let mut binding_hash = None;\n     let highlight: Highlight = match element.kind() {\n-        FN_DEF => {\n+        FN => {\n             bindings_shadow_count.clear();\n             return None;\n         }\n@@ -709,11 +709,11 @@ fn highlight_name_by_syntax(name: ast::Name) -> Highlight {\n         ENUM_DEF => HighlightTag::Enum,\n         UNION_DEF => HighlightTag::Union,\n         TRAIT_DEF => HighlightTag::Trait,\n-        TYPE_ALIAS_DEF => HighlightTag::TypeAlias,\n+        TYPE_ALIAS => HighlightTag::TypeAlias,\n         TYPE_PARAM => HighlightTag::TypeParam,\n         RECORD_FIELD_DEF => HighlightTag::Field,\n         MODULE => HighlightTag::Module,\n-        FN_DEF => HighlightTag::Function,\n+        FN => HighlightTag::Function,\n         CONST_DEF => HighlightTag::Constant,\n         STATIC_DEF => HighlightTag::Static,\n         ENUM_VARIANT => HighlightTag::EnumVariant,"}, {"sha": "07217e8087a205fc683f0858b7da74bb92c6e7cb", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -116,7 +116,7 @@ mod tests {\n             syn.trim(),\n             r#\"\n SOURCE_FILE@0..11\n-  FN_DEF@0..11\n+  FN@0..11\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -148,7 +148,7 @@ fn test() {\n             syn.trim(),\n             r#\"\n SOURCE_FILE@0..60\n-  FN_DEF@0..60\n+  FN@0..60\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7\n@@ -190,7 +190,7 @@ SOURCE_FILE@0..60\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-FN_DEF@0..11\n+FN@0..11\n   FN_KW@0..2 \"fn\"\n   WHITESPACE@2..3 \" \"\n   NAME@3..6\n@@ -258,7 +258,7 @@ fn bar() {\n             syn.trim(),\n             r#\"\n SOURCE_FILE@0..12\n-  FN_DEF@0..12\n+  FN@0..12\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -292,7 +292,7 @@ fn bar() {\n             syn.trim(),\n             r#\"\n SOURCE_FILE@0..12\n-  FN_DEF@0..12\n+  FN@0..12\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -325,7 +325,7 @@ fn bar() {\n             syn.trim(),\n             r#\"\n SOURCE_FILE@0..25\n-  FN_DEF@0..12\n+  FN@0..12\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -339,7 +339,7 @@ SOURCE_FILE@0..25\n       WHITESPACE@10..11 \"\\n\"\n       R_CURLY@11..12 \"}\"\n   WHITESPACE@12..13 \"\\n\"\n-  FN_DEF@13..25\n+  FN@13..25\n     FN_KW@13..15 \"fn\"\n     WHITESPACE@15..16 \" \"\n     NAME@16..19"}, {"sha": "0e73a893200038013cb38791ea49629879a9bb42", "filename": "crates/ra_ide_db/src/defs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fdefs.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -174,15 +174,15 @@ pub fn classify_name(sema: &Semantics<RootDatabase>, name: &ast::Name) -> Option\n                 let def: hir::EnumVariant = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },\n-            ast::FnDef(it) => {\n+            ast::Fn(it) => {\n                 let def: hir::Function = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },\n             ast::ConstDef(it) => {\n                 let def: hir::Const = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },\n-            ast::TypeAliasDef(it) => {\n+            ast::TypeAlias(it) => {\n                 let def: hir::TypeAlias = sema.to_def(&it)?;\n                 Some(NameClass::Definition(Definition::ModuleDef(def.into())))\n             },"}, {"sha": "b4e85b88e869c707ebd1729aab6ecf9a02dfad15", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -344,7 +344,7 @@ impl Query {\n }\n \n fn is_type(kind: SyntaxKind) -> bool {\n-    matches!(kind, STRUCT_DEF | ENUM_DEF | TRAIT_DEF | TYPE_ALIAS_DEF)\n+    matches!(kind, STRUCT_DEF | ENUM_DEF | TRAIT_DEF | TYPE_ALIAS)\n }\n \n /// The actual data that is stored in the index. It should be as compact as\n@@ -397,12 +397,12 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n     }\n     match_ast! {\n         match node {\n-            ast::FnDef(it) => decl(it),\n+            ast::Fn(it) => decl(it),\n             ast::StructDef(it) => decl(it),\n             ast::EnumDef(it) => decl(it),\n             ast::TraitDef(it) => decl(it),\n             ast::Module(it) => decl(it),\n-            ast::TypeAliasDef(it) => decl(it),\n+            ast::TypeAlias(it) => decl(it),\n             ast::ConstDef(it) => decl(it),\n             ast::StaticDef(it) => decl(it),\n             ast::MacroCall(it) => {"}, {"sha": "220690cdd5cb810f98bad3073207a7fb980fc31a", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -258,7 +258,7 @@ fn test_expr_order() {\n     assert_eq_text!(\n         dump.trim(),\n         r#\"MACRO_ITEMS@0..15\n-  FN_DEF@0..15\n+  FN@0..15\n     FN_KW@0..2 \"fn\"\n     NAME@2..5\n       IDENT@2..5 \"bar\""}, {"sha": "664b23f6adb05b4f4f3d38926c794c551c132182", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -180,7 +180,7 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // unsafe const fn bar() {}\n         T![fn] => {\n             fn_def(p);\n-            m.complete(p, FN_DEF);\n+            m.complete(p, FN);\n         }\n \n         // test unsafe_trait\n@@ -380,7 +380,7 @@ fn type_def(p: &mut Parser, m: Marker) {\n         types::type_(p);\n     }\n     p.expect(T![;]);\n-    m.complete(p, TYPE_ALIAS_DEF);\n+    m.complete(p, TYPE_ALIAS);\n }\n \n pub(crate) fn mod_item(p: &mut Parser, m: Marker) {"}, {"sha": "b84c3fc79b7d41a49e234d205bca9f4a16a025c1", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -126,7 +126,7 @@ pub enum SyntaxKind {\n     STRUCT_DEF,\n     UNION_DEF,\n     ENUM_DEF,\n-    FN_DEF,\n+    FN,\n     RET_TYPE,\n     EXTERN_CRATE,\n     MODULE,\n@@ -135,7 +135,7 @@ pub enum SyntaxKind {\n     CONST_DEF,\n     TRAIT_DEF,\n     IMPL_DEF,\n-    TYPE_ALIAS_DEF,\n+    TYPE_ALIAS,\n     MACRO_CALL,\n     TOKEN_TREE,\n     MACRO_DEF,"}, {"sha": "0110300aff2a1f2acb94f556b56e6771cbc5380e", "filename": "crates/ra_syntax/src/ast/edit.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fedit.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -29,9 +29,9 @@ impl ast::BinExpr {\n     }\n }\n \n-impl ast::FnDef {\n+impl ast::Fn {\n     #[must_use]\n-    pub fn with_body(&self, body: ast::BlockExpr) -> ast::FnDef {\n+    pub fn with_body(&self, body: ast::BlockExpr) -> ast::Fn {\n         let mut to_insert: ArrayVec<[SyntaxElement; 2]> = ArrayVec::new();\n         let old_body_or_semi: SyntaxElement = if let Some(old_body) = self.body() {\n             old_body.syntax().clone().into()\n@@ -192,9 +192,9 @@ impl ast::RecordFieldList {\n     }\n }\n \n-impl ast::TypeAliasDef {\n+impl ast::TypeAlias {\n     #[must_use]\n-    pub fn remove_bounds(&self) -> ast::TypeAliasDef {\n+    pub fn remove_bounds(&self) -> ast::TypeAlias {\n         let colon = match self.colon_token() {\n             Some(it) => it,\n             None => return self.clone(),"}, {"sha": "8692b9bb5f06af24d4550aa5c54f8c6e55954a5b", "filename": "crates/ra_syntax/src/ast/expr_ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fexpr_ext.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -401,7 +401,7 @@ impl ast::BlockExpr {\n             Some(it) => it,\n             None => return true,\n         };\n-        !matches!(parent.kind(), FN_DEF | IF_EXPR | WHILE_EXPR | LOOP_EXPR | EFFECT_EXPR)\n+        !matches!(parent.kind(), FN | IF_EXPR | WHILE_EXPR | LOOP_EXPR | EFFECT_EXPR)\n     }\n }\n "}, {"sha": "ad8ccf1ceafa028de48b42c9f97d2c693f2efd5b", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 253, "deletions": 252, "changes": 505, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -79,19 +79,19 @@ impl ExternCrate {\n     pub fn semicolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![;]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct FnDef {\n+pub struct Fn {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl ast::AttrsOwner for FnDef {}\n-impl ast::NameOwner for FnDef {}\n-impl ast::VisibilityOwner for FnDef {}\n-impl ast::TypeParamsOwner for FnDef {}\n-impl FnDef {\n-    pub fn abi(&self) -> Option<Abi> { support::child(&self.syntax) }\n-    pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n+impl ast::AttrsOwner for Fn {}\n+impl ast::NameOwner for Fn {}\n+impl ast::VisibilityOwner for Fn {}\n+impl ast::TypeParamsOwner for Fn {}\n+impl Fn {\n     pub fn default_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![default]) }\n     pub fn async_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![async]) }\n+    pub fn const_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![const]) }\n     pub fn unsafe_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![unsafe]) }\n+    pub fn abi(&self) -> Option<Abi> { support::child(&self.syntax) }\n     pub fn fn_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![fn]) }\n     pub fn param_list(&self) -> Option<ParamList> { support::child(&self.syntax) }\n     pub fn ret_type(&self) -> Option<RetType> { support::child(&self.syntax) }\n@@ -183,15 +183,15 @@ impl TraitDef {\n     pub fn assoc_item_list(&self) -> Option<AssocItemList> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct TypeAliasDef {\n+pub struct TypeAlias {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl ast::AttrsOwner for TypeAliasDef {}\n-impl ast::NameOwner for TypeAliasDef {}\n-impl ast::VisibilityOwner for TypeAliasDef {}\n-impl ast::TypeParamsOwner for TypeAliasDef {}\n-impl ast::TypeBoundsOwner for TypeAliasDef {}\n-impl TypeAliasDef {\n+impl ast::AttrsOwner for TypeAlias {}\n+impl ast::NameOwner for TypeAlias {}\n+impl ast::VisibilityOwner for TypeAlias {}\n+impl ast::TypeParamsOwner for TypeAlias {}\n+impl ast::TypeBoundsOwner for TypeAlias {}\n+impl TypeAlias {\n     pub fn default_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![default]) }\n     pub fn type_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![type]) }\n     pub fn eq_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![=]) }\n@@ -303,7 +303,9 @@ impl UseTreeList {\n pub struct Abi {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl Abi {}\n+impl Abi {\n+    pub fn extern_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![extern]) }\n+}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct TypeParamList {\n     pub(crate) syntax: SyntaxNode,\n@@ -321,8 +323,9 @@ pub struct ParamList {\n }\n impl ParamList {\n     pub fn l_paren_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T!['(']) }\n-    pub fn self_param(&self) -> Option<SelfParam> { support::child(&self.syntax) }\n     pub fn params(&self) -> AstChildren<Param> { support::children(&self.syntax) }\n+    pub fn self_param(&self) -> Option<SelfParam> { support::child(&self.syntax) }\n+    pub fn comma_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![,]) }\n     pub fn r_paren_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![')']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -355,6 +358,39 @@ impl BlockExpr {\n     pub fn r_curly_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T!['}']) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct Param {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl ast::AttrsOwner for Param {}\n+impl ast::TypeAscriptionOwner for Param {}\n+impl Param {\n+    pub fn pat(&self) -> Option<Pat> { support::child(&self.syntax) }\n+    pub fn colon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![:]) }\n+    pub fn dotdotdot_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![...]) }\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct SelfParam {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl ast::AttrsOwner for SelfParam {}\n+impl ast::TypeAscriptionOwner for SelfParam {}\n+impl SelfParam {\n+    pub fn amp_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![&]) }\n+    pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n+        support::token(&self.syntax, T![lifetime])\n+    }\n+    pub fn mut_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![mut]) }\n+    pub fn self_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![self]) }\n+    pub fn colon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![:]) }\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct TypeBoundList {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl TypeBoundList {\n+    pub fn bounds(&self) -> AstChildren<TypeBound> { support::children(&self.syntax) }\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct RecordFieldDefList {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -415,13 +451,6 @@ impl EnumVariant {\n     pub fn expr(&self) -> Option<Expr> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct TypeBoundList {\n-    pub(crate) syntax: SyntaxNode,\n-}\n-impl TypeBoundList {\n-    pub fn bounds(&self) -> AstChildren<TypeBound> { support::children(&self.syntax) }\n-}\n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct AssocItemList {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -1173,32 +1202,6 @@ impl LetStmt {\n     pub fn semicolon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![;]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct SelfParam {\n-    pub(crate) syntax: SyntaxNode,\n-}\n-impl ast::AttrsOwner for SelfParam {}\n-impl ast::TypeAscriptionOwner for SelfParam {}\n-impl SelfParam {\n-    pub fn amp_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![&]) }\n-    pub fn lifetime_token(&self) -> Option<SyntaxToken> {\n-        support::token(&self.syntax, T![lifetime])\n-    }\n-    pub fn mut_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![mut]) }\n-    pub fn self_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![self]) }\n-    pub fn colon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![:]) }\n-}\n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct Param {\n-    pub(crate) syntax: SyntaxNode,\n-}\n-impl ast::AttrsOwner for Param {}\n-impl ast::TypeAscriptionOwner for Param {}\n-impl Param {\n-    pub fn pat(&self) -> Option<Pat> { support::child(&self.syntax) }\n-    pub fn colon_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![:]) }\n-    pub fn dotdotdot_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![...]) }\n-}\n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct PathSegment {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -1274,14 +1277,14 @@ pub enum Item {\n     EnumDef(EnumDef),\n     ExternBlock(ExternBlock),\n     ExternCrate(ExternCrate),\n-    FnDef(FnDef),\n+    Fn(Fn),\n     ImplDef(ImplDef),\n     MacroCall(MacroCall),\n     Module(Module),\n     StaticDef(StaticDef),\n     StructDef(StructDef),\n     TraitDef(TraitDef),\n-    TypeAliasDef(TypeAliasDef),\n+    TypeAlias(TypeAlias),\n     UnionDef(UnionDef),\n     Use(Use),\n }\n@@ -1303,6 +1306,24 @@ pub enum TypeRef {\n     DynTraitType(DynTraitType),\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub enum Pat {\n+    OrPat(OrPat),\n+    ParenPat(ParenPat),\n+    RefPat(RefPat),\n+    BoxPat(BoxPat),\n+    BindPat(BindPat),\n+    PlaceholderPat(PlaceholderPat),\n+    DotDotPat(DotDotPat),\n+    PathPat(PathPat),\n+    RecordPat(RecordPat),\n+    TupleStructPat(TupleStructPat),\n+    TuplePat(TuplePat),\n+    SlicePat(SlicePat),\n+    RangePat(RangePat),\n+    LiteralPat(LiteralPat),\n+    MacroPat(MacroPat),\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum FieldDefList {\n     RecordFieldDefList(RecordFieldDefList),\n     TupleFieldDefList(TupleFieldDefList),\n@@ -1343,32 +1364,14 @@ pub enum Expr {\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum AssocItem {\n-    FnDef(FnDef),\n-    TypeAliasDef(TypeAliasDef),\n+    Fn(Fn),\n+    TypeAlias(TypeAlias),\n     ConstDef(ConstDef),\n     MacroCall(MacroCall),\n }\n impl ast::AttrsOwner for AssocItem {}\n impl ast::NameOwner for AssocItem {}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub enum Pat {\n-    OrPat(OrPat),\n-    ParenPat(ParenPat),\n-    RefPat(RefPat),\n-    BoxPat(BoxPat),\n-    BindPat(BindPat),\n-    PlaceholderPat(PlaceholderPat),\n-    DotDotPat(DotDotPat),\n-    PathPat(PathPat),\n-    RecordPat(RecordPat),\n-    TupleStructPat(TupleStructPat),\n-    TuplePat(TuplePat),\n-    SlicePat(SlicePat),\n-    RangePat(RangePat),\n-    LiteralPat(LiteralPat),\n-    MacroPat(MacroPat),\n-}\n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum Stmt {\n     LetStmt(LetStmt),\n     ExprStmt(ExprStmt),\n@@ -1381,7 +1384,7 @@ pub enum AttrInput {\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum ExternItem {\n-    FnDef(FnDef),\n+    Fn(Fn),\n     StaticDef(StaticDef),\n }\n impl ast::AttrsOwner for ExternItem {}\n@@ -1463,8 +1466,8 @@ impl AstNode for ExternCrate {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for FnDef {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == FN_DEF }\n+impl AstNode for Fn {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == FN }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -1540,8 +1543,8 @@ impl AstNode for TraitDef {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for TypeAliasDef {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == TYPE_ALIAS_DEF }\n+impl AstNode for TypeAlias {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == TYPE_ALIAS }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -1727,6 +1730,39 @@ impl AstNode for BlockExpr {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n+impl AstNode for Param {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == PARAM }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n+}\n+impl AstNode for SelfParam {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == SELF_PARAM }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n+}\n+impl AstNode for TypeBoundList {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == TYPE_BOUND_LIST }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n+}\n impl AstNode for RecordFieldDefList {\n     fn can_cast(kind: SyntaxKind) -> bool { kind == RECORD_FIELD_DEF_LIST }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n@@ -1793,17 +1829,6 @@ impl AstNode for EnumVariant {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for TypeBoundList {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == TYPE_BOUND_LIST }\n-    fn cast(syntax: SyntaxNode) -> Option<Self> {\n-        if Self::can_cast(syntax.kind()) {\n-            Some(Self { syntax })\n-        } else {\n-            None\n-        }\n-    }\n-    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n-}\n impl AstNode for AssocItemList {\n     fn can_cast(kind: SyntaxKind) -> bool { kind == ASSOC_ITEM_LIST }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n@@ -2673,28 +2698,6 @@ impl AstNode for LetStmt {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for SelfParam {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == SELF_PARAM }\n-    fn cast(syntax: SyntaxNode) -> Option<Self> {\n-        if Self::can_cast(syntax.kind()) {\n-            Some(Self { syntax })\n-        } else {\n-            None\n-        }\n-    }\n-    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n-}\n-impl AstNode for Param {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == PARAM }\n-    fn cast(syntax: SyntaxNode) -> Option<Self> {\n-        if Self::can_cast(syntax.kind()) {\n-            Some(Self { syntax })\n-        } else {\n-            None\n-        }\n-    }\n-    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n-}\n impl AstNode for PathSegment {\n     fn can_cast(kind: SyntaxKind) -> bool { kind == PATH_SEGMENT }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n@@ -2784,8 +2787,8 @@ impl From<ExternBlock> for Item {\n impl From<ExternCrate> for Item {\n     fn from(node: ExternCrate) -> Item { Item::ExternCrate(node) }\n }\n-impl From<FnDef> for Item {\n-    fn from(node: FnDef) -> Item { Item::FnDef(node) }\n+impl From<Fn> for Item {\n+    fn from(node: Fn) -> Item { Item::Fn(node) }\n }\n impl From<ImplDef> for Item {\n     fn from(node: ImplDef) -> Item { Item::ImplDef(node) }\n@@ -2805,8 +2808,8 @@ impl From<StructDef> for Item {\n impl From<TraitDef> for Item {\n     fn from(node: TraitDef) -> Item { Item::TraitDef(node) }\n }\n-impl From<TypeAliasDef> for Item {\n-    fn from(node: TypeAliasDef) -> Item { Item::TypeAliasDef(node) }\n+impl From<TypeAlias> for Item {\n+    fn from(node: TypeAlias) -> Item { Item::TypeAlias(node) }\n }\n impl From<UnionDef> for Item {\n     fn from(node: UnionDef) -> Item { Item::UnionDef(node) }\n@@ -2817,10 +2820,8 @@ impl From<Use> for Item {\n impl AstNode for Item {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            CONST_DEF | ENUM_DEF | EXTERN_BLOCK | EXTERN_CRATE | FN_DEF | IMPL_DEF | MACRO_CALL\n-            | MODULE | STATIC_DEF | STRUCT_DEF | TRAIT_DEF | TYPE_ALIAS_DEF | UNION_DEF | USE => {\n-                true\n-            }\n+            CONST_DEF | ENUM_DEF | EXTERN_BLOCK | EXTERN_CRATE | FN | IMPL_DEF | MACRO_CALL\n+            | MODULE | STATIC_DEF | STRUCT_DEF | TRAIT_DEF | TYPE_ALIAS | UNION_DEF | USE => true,\n             _ => false,\n         }\n     }\n@@ -2830,14 +2831,14 @@ impl AstNode for Item {\n             ENUM_DEF => Item::EnumDef(EnumDef { syntax }),\n             EXTERN_BLOCK => Item::ExternBlock(ExternBlock { syntax }),\n             EXTERN_CRATE => Item::ExternCrate(ExternCrate { syntax }),\n-            FN_DEF => Item::FnDef(FnDef { syntax }),\n+            FN => Item::Fn(Fn { syntax }),\n             IMPL_DEF => Item::ImplDef(ImplDef { syntax }),\n             MACRO_CALL => Item::MacroCall(MacroCall { syntax }),\n             MODULE => Item::Module(Module { syntax }),\n             STATIC_DEF => Item::StaticDef(StaticDef { syntax }),\n             STRUCT_DEF => Item::StructDef(StructDef { syntax }),\n             TRAIT_DEF => Item::TraitDef(TraitDef { syntax }),\n-            TYPE_ALIAS_DEF => Item::TypeAliasDef(TypeAliasDef { syntax }),\n+            TYPE_ALIAS => Item::TypeAlias(TypeAlias { syntax }),\n             UNION_DEF => Item::UnionDef(UnionDef { syntax }),\n             USE => Item::Use(Use { syntax }),\n             _ => return None,\n@@ -2850,14 +2851,14 @@ impl AstNode for Item {\n             Item::EnumDef(it) => &it.syntax,\n             Item::ExternBlock(it) => &it.syntax,\n             Item::ExternCrate(it) => &it.syntax,\n-            Item::FnDef(it) => &it.syntax,\n+            Item::Fn(it) => &it.syntax,\n             Item::ImplDef(it) => &it.syntax,\n             Item::MacroCall(it) => &it.syntax,\n             Item::Module(it) => &it.syntax,\n             Item::StaticDef(it) => &it.syntax,\n             Item::StructDef(it) => &it.syntax,\n             Item::TraitDef(it) => &it.syntax,\n-            Item::TypeAliasDef(it) => &it.syntax,\n+            Item::TypeAlias(it) => &it.syntax,\n             Item::UnionDef(it) => &it.syntax,\n             Item::Use(it) => &it.syntax,\n         }\n@@ -2948,6 +2949,101 @@ impl AstNode for TypeRef {\n         }\n     }\n }\n+impl From<OrPat> for Pat {\n+    fn from(node: OrPat) -> Pat { Pat::OrPat(node) }\n+}\n+impl From<ParenPat> for Pat {\n+    fn from(node: ParenPat) -> Pat { Pat::ParenPat(node) }\n+}\n+impl From<RefPat> for Pat {\n+    fn from(node: RefPat) -> Pat { Pat::RefPat(node) }\n+}\n+impl From<BoxPat> for Pat {\n+    fn from(node: BoxPat) -> Pat { Pat::BoxPat(node) }\n+}\n+impl From<BindPat> for Pat {\n+    fn from(node: BindPat) -> Pat { Pat::BindPat(node) }\n+}\n+impl From<PlaceholderPat> for Pat {\n+    fn from(node: PlaceholderPat) -> Pat { Pat::PlaceholderPat(node) }\n+}\n+impl From<DotDotPat> for Pat {\n+    fn from(node: DotDotPat) -> Pat { Pat::DotDotPat(node) }\n+}\n+impl From<PathPat> for Pat {\n+    fn from(node: PathPat) -> Pat { Pat::PathPat(node) }\n+}\n+impl From<RecordPat> for Pat {\n+    fn from(node: RecordPat) -> Pat { Pat::RecordPat(node) }\n+}\n+impl From<TupleStructPat> for Pat {\n+    fn from(node: TupleStructPat) -> Pat { Pat::TupleStructPat(node) }\n+}\n+impl From<TuplePat> for Pat {\n+    fn from(node: TuplePat) -> Pat { Pat::TuplePat(node) }\n+}\n+impl From<SlicePat> for Pat {\n+    fn from(node: SlicePat) -> Pat { Pat::SlicePat(node) }\n+}\n+impl From<RangePat> for Pat {\n+    fn from(node: RangePat) -> Pat { Pat::RangePat(node) }\n+}\n+impl From<LiteralPat> for Pat {\n+    fn from(node: LiteralPat) -> Pat { Pat::LiteralPat(node) }\n+}\n+impl From<MacroPat> for Pat {\n+    fn from(node: MacroPat) -> Pat { Pat::MacroPat(node) }\n+}\n+impl AstNode for Pat {\n+    fn can_cast(kind: SyntaxKind) -> bool {\n+        match kind {\n+            OR_PAT | PAREN_PAT | REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | DOT_DOT_PAT\n+            | PATH_PAT | RECORD_PAT | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT\n+            | LITERAL_PAT | MACRO_PAT => true,\n+            _ => false,\n+        }\n+    }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        let res = match syntax.kind() {\n+            OR_PAT => Pat::OrPat(OrPat { syntax }),\n+            PAREN_PAT => Pat::ParenPat(ParenPat { syntax }),\n+            REF_PAT => Pat::RefPat(RefPat { syntax }),\n+            BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n+            BIND_PAT => Pat::BindPat(BindPat { syntax }),\n+            PLACEHOLDER_PAT => Pat::PlaceholderPat(PlaceholderPat { syntax }),\n+            DOT_DOT_PAT => Pat::DotDotPat(DotDotPat { syntax }),\n+            PATH_PAT => Pat::PathPat(PathPat { syntax }),\n+            RECORD_PAT => Pat::RecordPat(RecordPat { syntax }),\n+            TUPLE_STRUCT_PAT => Pat::TupleStructPat(TupleStructPat { syntax }),\n+            TUPLE_PAT => Pat::TuplePat(TuplePat { syntax }),\n+            SLICE_PAT => Pat::SlicePat(SlicePat { syntax }),\n+            RANGE_PAT => Pat::RangePat(RangePat { syntax }),\n+            LITERAL_PAT => Pat::LiteralPat(LiteralPat { syntax }),\n+            MACRO_PAT => Pat::MacroPat(MacroPat { syntax }),\n+            _ => return None,\n+        };\n+        Some(res)\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        match self {\n+            Pat::OrPat(it) => &it.syntax,\n+            Pat::ParenPat(it) => &it.syntax,\n+            Pat::RefPat(it) => &it.syntax,\n+            Pat::BoxPat(it) => &it.syntax,\n+            Pat::BindPat(it) => &it.syntax,\n+            Pat::PlaceholderPat(it) => &it.syntax,\n+            Pat::DotDotPat(it) => &it.syntax,\n+            Pat::PathPat(it) => &it.syntax,\n+            Pat::RecordPat(it) => &it.syntax,\n+            Pat::TupleStructPat(it) => &it.syntax,\n+            Pat::TuplePat(it) => &it.syntax,\n+            Pat::SlicePat(it) => &it.syntax,\n+            Pat::RangePat(it) => &it.syntax,\n+            Pat::LiteralPat(it) => &it.syntax,\n+            Pat::MacroPat(it) => &it.syntax,\n+        }\n+    }\n+}\n impl From<RecordFieldDefList> for FieldDefList {\n     fn from(node: RecordFieldDefList) -> FieldDefList { FieldDefList::RecordFieldDefList(node) }\n }\n@@ -3157,11 +3253,11 @@ impl AstNode for Expr {\n         }\n     }\n }\n-impl From<FnDef> for AssocItem {\n-    fn from(node: FnDef) -> AssocItem { AssocItem::FnDef(node) }\n+impl From<Fn> for AssocItem {\n+    fn from(node: Fn) -> AssocItem { AssocItem::Fn(node) }\n }\n-impl From<TypeAliasDef> for AssocItem {\n-    fn from(node: TypeAliasDef) -> AssocItem { AssocItem::TypeAliasDef(node) }\n+impl From<TypeAlias> for AssocItem {\n+    fn from(node: TypeAlias) -> AssocItem { AssocItem::TypeAlias(node) }\n }\n impl From<ConstDef> for AssocItem {\n     fn from(node: ConstDef) -> AssocItem { AssocItem::ConstDef(node) }\n@@ -3172,14 +3268,14 @@ impl From<MacroCall> for AssocItem {\n impl AstNode for AssocItem {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            FN_DEF | TYPE_ALIAS_DEF | CONST_DEF | MACRO_CALL => true,\n+            FN | TYPE_ALIAS | CONST_DEF | MACRO_CALL => true,\n             _ => false,\n         }\n     }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         let res = match syntax.kind() {\n-            FN_DEF => AssocItem::FnDef(FnDef { syntax }),\n-            TYPE_ALIAS_DEF => AssocItem::TypeAliasDef(TypeAliasDef { syntax }),\n+            FN => AssocItem::Fn(Fn { syntax }),\n+            TYPE_ALIAS => AssocItem::TypeAlias(TypeAlias { syntax }),\n             CONST_DEF => AssocItem::ConstDef(ConstDef { syntax }),\n             MACRO_CALL => AssocItem::MacroCall(MacroCall { syntax }),\n             _ => return None,\n@@ -3188,108 +3284,13 @@ impl AstNode for AssocItem {\n     }\n     fn syntax(&self) -> &SyntaxNode {\n         match self {\n-            AssocItem::FnDef(it) => &it.syntax,\n-            AssocItem::TypeAliasDef(it) => &it.syntax,\n+            AssocItem::Fn(it) => &it.syntax,\n+            AssocItem::TypeAlias(it) => &it.syntax,\n             AssocItem::ConstDef(it) => &it.syntax,\n             AssocItem::MacroCall(it) => &it.syntax,\n         }\n     }\n }\n-impl From<OrPat> for Pat {\n-    fn from(node: OrPat) -> Pat { Pat::OrPat(node) }\n-}\n-impl From<ParenPat> for Pat {\n-    fn from(node: ParenPat) -> Pat { Pat::ParenPat(node) }\n-}\n-impl From<RefPat> for Pat {\n-    fn from(node: RefPat) -> Pat { Pat::RefPat(node) }\n-}\n-impl From<BoxPat> for Pat {\n-    fn from(node: BoxPat) -> Pat { Pat::BoxPat(node) }\n-}\n-impl From<BindPat> for Pat {\n-    fn from(node: BindPat) -> Pat { Pat::BindPat(node) }\n-}\n-impl From<PlaceholderPat> for Pat {\n-    fn from(node: PlaceholderPat) -> Pat { Pat::PlaceholderPat(node) }\n-}\n-impl From<DotDotPat> for Pat {\n-    fn from(node: DotDotPat) -> Pat { Pat::DotDotPat(node) }\n-}\n-impl From<PathPat> for Pat {\n-    fn from(node: PathPat) -> Pat { Pat::PathPat(node) }\n-}\n-impl From<RecordPat> for Pat {\n-    fn from(node: RecordPat) -> Pat { Pat::RecordPat(node) }\n-}\n-impl From<TupleStructPat> for Pat {\n-    fn from(node: TupleStructPat) -> Pat { Pat::TupleStructPat(node) }\n-}\n-impl From<TuplePat> for Pat {\n-    fn from(node: TuplePat) -> Pat { Pat::TuplePat(node) }\n-}\n-impl From<SlicePat> for Pat {\n-    fn from(node: SlicePat) -> Pat { Pat::SlicePat(node) }\n-}\n-impl From<RangePat> for Pat {\n-    fn from(node: RangePat) -> Pat { Pat::RangePat(node) }\n-}\n-impl From<LiteralPat> for Pat {\n-    fn from(node: LiteralPat) -> Pat { Pat::LiteralPat(node) }\n-}\n-impl From<MacroPat> for Pat {\n-    fn from(node: MacroPat) -> Pat { Pat::MacroPat(node) }\n-}\n-impl AstNode for Pat {\n-    fn can_cast(kind: SyntaxKind) -> bool {\n-        match kind {\n-            OR_PAT | PAREN_PAT | REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | DOT_DOT_PAT\n-            | PATH_PAT | RECORD_PAT | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT\n-            | LITERAL_PAT | MACRO_PAT => true,\n-            _ => false,\n-        }\n-    }\n-    fn cast(syntax: SyntaxNode) -> Option<Self> {\n-        let res = match syntax.kind() {\n-            OR_PAT => Pat::OrPat(OrPat { syntax }),\n-            PAREN_PAT => Pat::ParenPat(ParenPat { syntax }),\n-            REF_PAT => Pat::RefPat(RefPat { syntax }),\n-            BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n-            BIND_PAT => Pat::BindPat(BindPat { syntax }),\n-            PLACEHOLDER_PAT => Pat::PlaceholderPat(PlaceholderPat { syntax }),\n-            DOT_DOT_PAT => Pat::DotDotPat(DotDotPat { syntax }),\n-            PATH_PAT => Pat::PathPat(PathPat { syntax }),\n-            RECORD_PAT => Pat::RecordPat(RecordPat { syntax }),\n-            TUPLE_STRUCT_PAT => Pat::TupleStructPat(TupleStructPat { syntax }),\n-            TUPLE_PAT => Pat::TuplePat(TuplePat { syntax }),\n-            SLICE_PAT => Pat::SlicePat(SlicePat { syntax }),\n-            RANGE_PAT => Pat::RangePat(RangePat { syntax }),\n-            LITERAL_PAT => Pat::LiteralPat(LiteralPat { syntax }),\n-            MACRO_PAT => Pat::MacroPat(MacroPat { syntax }),\n-            _ => return None,\n-        };\n-        Some(res)\n-    }\n-    fn syntax(&self) -> &SyntaxNode {\n-        match self {\n-            Pat::OrPat(it) => &it.syntax,\n-            Pat::ParenPat(it) => &it.syntax,\n-            Pat::RefPat(it) => &it.syntax,\n-            Pat::BoxPat(it) => &it.syntax,\n-            Pat::BindPat(it) => &it.syntax,\n-            Pat::PlaceholderPat(it) => &it.syntax,\n-            Pat::DotDotPat(it) => &it.syntax,\n-            Pat::PathPat(it) => &it.syntax,\n-            Pat::RecordPat(it) => &it.syntax,\n-            Pat::TupleStructPat(it) => &it.syntax,\n-            Pat::TuplePat(it) => &it.syntax,\n-            Pat::SlicePat(it) => &it.syntax,\n-            Pat::RangePat(it) => &it.syntax,\n-            Pat::LiteralPat(it) => &it.syntax,\n-            Pat::MacroPat(it) => &it.syntax,\n-        }\n-    }\n-}\n impl From<LetStmt> for Stmt {\n     fn from(node: LetStmt) -> Stmt { Stmt::LetStmt(node) }\n }\n@@ -3346,30 +3347,30 @@ impl AstNode for AttrInput {\n         }\n     }\n }\n-impl From<FnDef> for ExternItem {\n-    fn from(node: FnDef) -> ExternItem { ExternItem::FnDef(node) }\n+impl From<Fn> for ExternItem {\n+    fn from(node: Fn) -> ExternItem { ExternItem::Fn(node) }\n }\n impl From<StaticDef> for ExternItem {\n     fn from(node: StaticDef) -> ExternItem { ExternItem::StaticDef(node) }\n }\n impl AstNode for ExternItem {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            FN_DEF | STATIC_DEF => true,\n+            FN | STATIC_DEF => true,\n             _ => false,\n         }\n     }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         let res = match syntax.kind() {\n-            FN_DEF => ExternItem::FnDef(FnDef { syntax }),\n+            FN => ExternItem::Fn(Fn { syntax }),\n             STATIC_DEF => ExternItem::StaticDef(StaticDef { syntax }),\n             _ => return None,\n         };\n         Some(res)\n     }\n     fn syntax(&self) -> &SyntaxNode {\n         match self {\n-            ExternItem::FnDef(it) => &it.syntax,\n+            ExternItem::Fn(it) => &it.syntax,\n             ExternItem::StaticDef(it) => &it.syntax,\n         }\n     }\n@@ -3417,22 +3418,22 @@ impl std::fmt::Display for TypeRef {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for FieldDefList {\n+impl std::fmt::Display for Pat {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for Expr {\n+impl std::fmt::Display for FieldDefList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for AssocItem {\n+impl std::fmt::Display for Expr {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for Pat {\n+impl std::fmt::Display for AssocItem {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n@@ -3487,7 +3488,7 @@ impl std::fmt::Display for ExternCrate {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for FnDef {\n+impl std::fmt::Display for Fn {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n@@ -3522,7 +3523,7 @@ impl std::fmt::Display for TraitDef {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for TypeAliasDef {\n+impl std::fmt::Display for TypeAlias {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n@@ -3607,6 +3608,21 @@ impl std::fmt::Display for BlockExpr {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n+impl std::fmt::Display for Param {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        std::fmt::Display::fmt(self.syntax(), f)\n+    }\n+}\n+impl std::fmt::Display for SelfParam {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        std::fmt::Display::fmt(self.syntax(), f)\n+    }\n+}\n+impl std::fmt::Display for TypeBoundList {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        std::fmt::Display::fmt(self.syntax(), f)\n+    }\n+}\n impl std::fmt::Display for RecordFieldDefList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n@@ -3637,11 +3653,6 @@ impl std::fmt::Display for EnumVariant {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for TypeBoundList {\n-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        std::fmt::Display::fmt(self.syntax(), f)\n-    }\n-}\n impl std::fmt::Display for AssocItemList {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n@@ -4037,16 +4048,6 @@ impl std::fmt::Display for LetStmt {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for SelfParam {\n-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        std::fmt::Display::fmt(self.syntax(), f)\n-    }\n-}\n-impl std::fmt::Display for Param {\n-    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        std::fmt::Display::fmt(self.syntax(), f)\n-    }\n-}\n impl std::fmt::Display for PathSegment {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)"}, {"sha": "ef235680f59f511a9fba74529fc9556dbe342a24", "filename": "crates/ra_syntax/src/ast/make.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fmake.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -294,7 +294,7 @@ pub fn fn_def(\n     type_params: Option<ast::TypeParamList>,\n     params: ast::ParamList,\n     body: ast::BlockExpr,\n-) -> ast::FnDef {\n+) -> ast::Fn {\n     let type_params =\n         if let Some(type_params) = type_params { format!(\"<{}>\", type_params) } else { \"\".into() };\n     let visibility = match visibility {"}, {"sha": "a7a301d6b0fc20d1a143a613cd76acc347930d20", "filename": "crates/ra_syntax/src/ast/node_ext.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -474,7 +474,7 @@ impl ast::TokenTree {\n }\n \n impl ast::DocCommentsOwner for ast::SourceFile {}\n-impl ast::DocCommentsOwner for ast::FnDef {}\n+impl ast::DocCommentsOwner for ast::Fn {}\n impl ast::DocCommentsOwner for ast::StructDef {}\n impl ast::DocCommentsOwner for ast::UnionDef {}\n impl ast::DocCommentsOwner for ast::RecordFieldDef {}\n@@ -485,6 +485,6 @@ impl ast::DocCommentsOwner for ast::TraitDef {}\n impl ast::DocCommentsOwner for ast::Module {}\n impl ast::DocCommentsOwner for ast::StaticDef {}\n impl ast::DocCommentsOwner for ast::ConstDef {}\n-impl ast::DocCommentsOwner for ast::TypeAliasDef {}\n+impl ast::DocCommentsOwner for ast::TypeAlias {}\n impl ast::DocCommentsOwner for ast::ImplDef {}\n impl ast::DocCommentsOwner for ast::MacroCall {}"}, {"sha": "6203b62064d0f1a55af089fac65d5de75a215bed", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -255,11 +255,11 @@ fn api_walkthrough() {\n     let mut func = None;\n     for item in file.items() {\n         match item {\n-            ast::Item::FnDef(f) => func = Some(f),\n+            ast::Item::Fn(f) => func = Some(f),\n             _ => unreachable!(),\n         }\n     }\n-    let func: ast::FnDef = func.unwrap();\n+    let func: ast::Fn = func.unwrap();\n \n     // Each AST node has a bunch of getters for children. All getters return\n     // `Option`s though, to account for incomplete code. Some getters are common\n@@ -316,7 +316,7 @@ fn api_walkthrough() {\n     );\n \n     // As well as some iterator helpers:\n-    let f = expr_syntax.ancestors().find_map(ast::FnDef::cast);\n+    let f = expr_syntax.ancestors().find_map(ast::Fn::cast);\n     assert_eq!(f, Some(func));\n     assert!(expr_syntax.siblings_with_tokens(Direction::Next).any(|it| it.kind() == T!['}']));\n     assert_eq!("}, {"sha": "87a7acd0978316d4fac74f8576d8efa380a297ec", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -146,7 +146,7 @@ fn n_attached_trivias<'a>(\n     trivias: impl Iterator<Item = (SyntaxKind, &'a str)>,\n ) -> usize {\n     match kind {\n-        MACRO_CALL | CONST_DEF | TYPE_ALIAS_DEF | STRUCT_DEF | ENUM_DEF | ENUM_VARIANT | FN_DEF\n+        MACRO_CALL | CONST_DEF | TYPE_ALIAS | STRUCT_DEF | ENUM_DEF | ENUM_VARIANT | FN\n         | TRAIT_DEF | MODULE | RECORD_FIELD_DEF | STATIC_DEF => {\n             let mut res = 0;\n             let mut trivias = trivias.enumerate().peekable();"}, {"sha": "6a274938167c9c84e57fbefece84cbac71fcf622", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -4,7 +4,7 @@ mod block;\n \n use crate::{\n     ast, match_ast, AstNode, SyntaxError,\n-    SyntaxKind::{BYTE, BYTE_STRING, CHAR, CONST_DEF, FN_DEF, INT_NUMBER, STRING, TYPE_ALIAS_DEF},\n+    SyntaxKind::{BYTE, BYTE_STRING, CHAR, CONST_DEF, FN, INT_NUMBER, STRING, TYPE_ALIAS},\n     SyntaxNode, SyntaxToken, TextSize, T,\n };\n use rustc_lexer::unescape::{\n@@ -200,7 +200,7 @@ fn validate_visibility(vis: ast::Visibility, errors: &mut Vec<SyntaxError>) {\n         None => return,\n     };\n     match parent.kind() {\n-        FN_DEF | CONST_DEF | TYPE_ALIAS_DEF => (),\n+        FN | CONST_DEF | TYPE_ALIAS => (),\n         _ => return,\n     }\n "}, {"sha": "ad99014688586d447f12154a5c4730bb21d3b47c", "filename": "crates/ra_syntax/src/validation/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fblock.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -9,7 +9,7 @@ use crate::{\n pub(crate) fn validate_block_expr(block: ast::BlockExpr, errors: &mut Vec<SyntaxError>) {\n     if let Some(parent) = block.syntax().parent() {\n         match parent.kind() {\n-            FN_DEF | EXPR_STMT | BLOCK_EXPR => return,\n+            FN | EXPR_STMT | BLOCK_EXPR => return,\n             _ => {}\n         }\n     }"}, {"sha": "4845a6563cb83c9bd4cfe1ff20faebba78091d0a", "filename": "crates/ra_syntax/test_data/parser/err/0005_attribute_recover.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..54\n-  FN_DEF@0..31\n+  FN@0..31\n     ATTR@0..18\n       POUND@0..1 \"#\"\n       L_BRACK@1..2 \"[\""}, {"sha": "2ae5bacea3e58bedfa15793bdf2f495f32317ef7", "filename": "crates/ra_syntax/test_data/parser/err/0007_stray_curly_in_file.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -12,7 +12,7 @@ SOURCE_FILE@0..31\n   ERROR@14..15\n     R_CURLY@14..15 \"}\"\n   WHITESPACE@15..17 \"\\n\\n\"\n-  FN_DEF@17..27\n+  FN@17..27\n     FN_KW@17..19 \"fn\"\n     WHITESPACE@19..20 \" \"\n     NAME@20..23"}, {"sha": "1e9637c26d57f21d906a689a0bf0b286dec4ac38", "filename": "crates/ra_syntax/test_data/parser/err/0008_item_block_recovery.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..95\n-  FN_DEF@0..12\n+  FN@0..12\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -58,7 +58,7 @@ SOURCE_FILE@0..95\n     WHITESPACE@78..79 \"\\n\"\n     R_CURLY@79..80 \"}\"\n   WHITESPACE@80..82 \"\\n\\n\"\n-  FN_DEF@82..94\n+  FN@82..94\n     FN_KW@82..84 \"fn\"\n     WHITESPACE@84..85 \" \"\n     NAME@85..88"}, {"sha": "1c3e0f65bfad367686f397585016f26e65ec6407", "filename": "crates/ra_syntax/test_data/parser/err/0010_unsafe_lambda_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..42\n-  FN_DEF@0..41\n+  FN@0..41\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "c8bf965506aea290e3cd89794a3fa00f6e2a68dc", "filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..389\n-  FN_DEF@0..389\n+  FN@0..389\n     VISIBILITY@0..10\n       PUB_KW@0..3\n       L_PAREN@3..4"}, {"sha": "1ab045a441e203ce14f6538c658621cab6e26732", "filename": "crates/ra_syntax/test_data/parser/err/0014_where_no_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..23\n-  FN_DEF@0..22\n+  FN@0..22\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "a3c25b450a9870d7b157119c1023206bde4a8203", "filename": "crates/ra_syntax/test_data/parser/err/0015_curly_in_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..14\n-  FN_DEF@0..7\n+  FN@0..7\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "66157c3dce9d78ce702a3aa5f33ce55ab08b6656", "filename": "crates/ra_syntax/test_data/parser/err/0016_missing_semi.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..56\n-  FN_DEF@0..55\n+  FN@0..55\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "bb4a28f4e8b87d2c4e9f23b091aa334cbb42fc83", "filename": "crates/ra_syntax/test_data/parser/err/0017_incomplete_binexpr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..47\n-  FN_DEF@0..46\n+  FN@0..46\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "ce43ddf454aabfe40ab684c1678e4d7a7f910cfe", "filename": "crates/ra_syntax/test_data/parser/err/0018_incomplete_fn.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..183\n     ASSOC_ITEM_LIST@14..182\n       L_CURLY@14..15 \"{\"\n       WHITESPACE@15..20 \"\\n    \"\n-      FN_DEF@20..161\n+      FN@20..161\n         FN_KW@20..22 \"fn\"\n         WHITESPACE@22..23 \" \"\n         NAME@23..32\n@@ -116,7 +116,7 @@ SOURCE_FILE@0..183\n           WHITESPACE@155..160 \"\\n    \"\n           R_CURLY@160..161 \"}\"\n       WHITESPACE@161..167 \"\\n\\n    \"\n-      FN_DEF@167..180\n+      FN@167..180\n         FN_KW@167..169 \"fn\"\n         WHITESPACE@169..170 \" \"\n         NAME@170..180"}, {"sha": "f6fa964b7b91f847eecf3233919b5d671c9ec9e8", "filename": "crates/ra_syntax/test_data/parser/err/0019_let_recover.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..139\n-  FN_DEF@0..138\n+  FN@0..138\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "6f6feba5a833e02c96a34bb7d3ba52d5013696fe", "filename": "crates/ra_syntax/test_data/parser/err/0020_fn_recover.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,8 +1,8 @@\n SOURCE_FILE@0..16\n-  FN_DEF@0..2\n+  FN@0..2\n     FN_KW@0..2 \"fn\"\n   WHITESPACE@2..4 \"\\n\\n\"\n-  FN_DEF@4..15\n+  FN@4..15\n     FN_KW@4..6 \"fn\"\n     WHITESPACE@6..7 \" \"\n     NAME@7..10"}, {"sha": "ba4ce47955d16aa61be304af9291acfd964deb42", "filename": "crates/ra_syntax/test_data/parser/err/0021_incomplete_param.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..22\n-  FN_DEF@0..21\n+  FN@0..21\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "866f6111361227549d4bb75fc9210cae7ebaea14", "filename": "crates/ra_syntax/test_data/parser/err/0022_bad_exprs.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..112\n-  FN_DEF@0..33\n+  FN@0..33\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -40,7 +40,7 @@ SOURCE_FILE@0..112\n       WHITESPACE@31..32 \" \"\n       R_CURLY@32..33 \"}\"\n   WHITESPACE@33..34 \"\\n\"\n-  FN_DEF@34..68\n+  FN@34..68\n     FN_KW@34..36 \"fn\"\n     WHITESPACE@36..37 \" \"\n     NAME@37..38\n@@ -88,7 +88,7 @@ SOURCE_FILE@0..112\n       WHITESPACE@66..67 \" \"\n       R_CURLY@67..68 \"}\"\n   WHITESPACE@68..69 \"\\n\"\n-  FN_DEF@69..111\n+  FN@69..111\n     FN_KW@69..71 \"fn\"\n     WHITESPACE@71..72 \" \"\n     NAME@72..73"}, {"sha": "5ffefd74290fba04506ad79984f4704ccae13540", "filename": "crates/ra_syntax/test_data/parser/err/0023_mismatched_paren.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..94\n-  FN_DEF@0..55\n+  FN@0..55\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "1e94e72bcc36bc707ddae1e9b312e9576f39e6ff", "filename": "crates/ra_syntax/test_data/parser/err/0024_many_type_parens.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..240\n-  FN_DEF@0..53\n+  FN@0..53\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -65,7 +65,7 @@ SOURCE_FILE@0..240\n       L_CURLY@51..52 \"{\"\n       R_CURLY@52..53 \"}\"\n   WHITESPACE@53..55 \"\\n\\n\"\n-  FN_DEF@55..239\n+  FN@55..239\n     FN_KW@55..57 \"fn\"\n     WHITESPACE@57..58 \" \"\n     NAME@58..62"}, {"sha": "4b9bd679e1eddcb0303bcdab285c77e0de46eb0a", "filename": "crates/ra_syntax/test_data/parser/err/0025_nope.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..575\n-  FN_DEF@0..574\n+  FN@0..574\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "53704f640e0c2f2965e05da18761efd00ff08e36", "filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..29\n+  FN@0..29\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "bfcd0149edc4392a0453dfb4d4e155d2ecc260d5", "filename": "crates/ra_syntax/test_data/parser/err/0029_field_completion.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..24\n-  FN_DEF@0..23\n+  FN@0..23\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "55ff3943fbb89d0658ac03bec23bd9bf9cf1b28f", "filename": "crates/ra_syntax/test_data/parser/err/0031_block_inner_attrs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..350\n-  FN_DEF@0..349\n+  FN@0..349\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..8"}, {"sha": "ec9f556aa55cb7b685322b25edc004c839c269dd", "filename": "crates/ra_syntax/test_data/parser/err/0032_match_arms_inner_attrs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..293\n-  FN_DEF@0..292\n+  FN@0..292\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "063532e02d8b87d25197c8ccab305fcbc38bebae", "filename": "crates/ra_syntax/test_data/parser/err/0033_match_arms_outer_attrs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..89\n-  FN_DEF@0..88\n+  FN@0..88\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "303a49576406733012df7b0d9479ca97c467a60d", "filename": "crates/ra_syntax/test_data/parser/err/0034_bad_box_pattern.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..91\n-  FN_DEF@0..89\n+  FN@0..89\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "2f03709ebad829646125354ea8156dacf38e1bfc", "filename": "crates/ra_syntax/test_data/parser/err/0035_use_recover.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -34,7 +34,7 @@ SOURCE_FILE@0..48\n   USE@34..37\n     USE_KW@34..37 \"use\"\n   WHITESPACE@37..38 \"\\n\"\n-  FN_DEF@38..47\n+  FN@38..47\n     FN_KW@38..40 \"fn\"\n     WHITESPACE@40..41 \" \"\n     NAME@41..42"}, {"sha": "c0ba4fba91aacac11c3ddf933058276dcc6ea61d", "filename": "crates/ra_syntax/test_data/parser/err/0037_visibility_in_traits.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -17,7 +17,7 @@ SOURCE_FILE@0..118\n     ASSOC_ITEM_LIST@14..117\n       L_CURLY@14..15 \"{\"\n       WHITESPACE@15..20 \"\\n    \"\n-      FN_DEF@20..31\n+      FN@20..31\n         FN_KW@20..22 \"fn\"\n         WHITESPACE@22..23 \" \"\n         NAME@23..26\n@@ -30,7 +30,7 @@ SOURCE_FILE@0..118\n           L_CURLY@29..30 \"{\"\n           R_CURLY@30..31 \"}\"\n       WHITESPACE@31..36 \"\\n    \"\n-      FN_DEF@36..51\n+      FN@36..51\n         VISIBILITY@36..39\n           PUB_KW@36..39 \"pub\"\n         WHITESPACE@39..40 \" \"\n@@ -46,7 +46,7 @@ SOURCE_FILE@0..118\n           L_CURLY@49..50 \"{\"\n           R_CURLY@50..51 \"}\"\n       WHITESPACE@51..56 \"\\n    \"\n-      TYPE_ALIAS_DEF@56..81\n+      TYPE_ALIAS@56..81\n         VISIBILITY@56..66\n           PUB_KW@56..59 \"pub\"\n           L_PAREN@59..60 \"(\""}, {"sha": "bed7ad6c33211323fb8938d12b9485379d6edeca", "filename": "crates/ra_syntax/test_data/parser/err/0038_endless_inclusive_range.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..32\n+  FN@0..32\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "a98c31b0c75feb330de85421e4fac71bda4bd30d", "filename": "crates/ra_syntax/test_data/parser/err/0039_lambda_recovery.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..83\n-  FN_DEF@0..82\n+  FN@0..82\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "19b3540e971ffa2725edc1d04c52056dba8734f2", "filename": "crates/ra_syntax/test_data/parser/err/0044_unexpected_for_type.rast", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0044_unexpected_for_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..239\n-  TYPE_ALIAS_DEF@0..30\n+  TYPE_ALIAS@0..30\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..11\n@@ -26,7 +26,7 @@ SOURCE_FILE@0..239\n                 IDENT@26..29 \"u32\"\n     SEMICOLON@29..30 \";\"\n   WHITESPACE@30..31 \"\\n\"\n-  TYPE_ALIAS_DEF@31..64\n+  TYPE_ALIAS@31..64\n     TYPE_KW@31..35 \"type\"\n     WHITESPACE@35..36 \" \"\n     NAME@36..42\n@@ -57,7 +57,7 @@ SOURCE_FILE@0..239\n         R_PAREN@62..63 \")\"\n     SEMICOLON@63..64 \";\"\n   WHITESPACE@64..65 \"\\n\"\n-  TYPE_ALIAS_DEF@65..95\n+  TYPE_ALIAS@65..95\n     TYPE_KW@65..69 \"type\"\n     WHITESPACE@69..70 \" \"\n     NAME@70..78\n@@ -83,7 +83,7 @@ SOURCE_FILE@0..239\n         R_BRACK@93..94 \"]\"\n     SEMICOLON@94..95 \";\"\n   WHITESPACE@95..96 \"\\n\"\n-  TYPE_ALIAS_DEF@96..149\n+  TYPE_ALIAS@96..149\n     TYPE_KW@96..100 \"type\"\n     WHITESPACE@100..101 \" \"\n     NAME@101..109\n@@ -136,7 +136,7 @@ SOURCE_FILE@0..239\n             R_PAREN@147..148 \")\"\n     SEMICOLON@148..149 \";\"\n   WHITESPACE@149..150 \"\\n\"\n-  FN_DEF@150..238\n+  FN@150..238\n     FN_KW@150..152 \"fn\"\n     WHITESPACE@152..153 \" \"\n     NAME@153..164"}, {"sha": "df29017e7f2352a7a0e87eea22bb21333a136af7", "filename": "crates/ra_syntax/test_data/parser/err/0163_weird_blocks.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0163_weird_blocks.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0163_weird_blocks.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0163_weird_blocks.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..83\n-  FN_DEF@0..82\n+  FN@0..82\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "93c429e128ce61c551166859a6a79f00a3ecf3ca", "filename": "crates/ra_syntax/test_data/parser/fragments/item/ok/0000_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ffragments%2Fitem%2Fok%2F0000_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ffragments%2Fitem%2Fok%2F0000_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ffragments%2Fitem%2Fok%2F0000_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,4 +1,4 @@\n-FN_DEF@0..11\n+FN@0..11\n   FN_KW@0..2 \"fn\"\n   WHITESPACE@2..3 \" \"\n   NAME@3..6"}, {"sha": "0b9bbec0776803e92e5632ce67307eea1ecb3031", "filename": "crates/ra_syntax/test_data/parser/inline/err/0001_array_type_missing_semi.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..18\n-  TYPE_ALIAS_DEF@0..12\n+  TYPE_ALIAS@0..12\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "8b0a888fd537d4b1d661f045c2b8e93ed03eb193", "filename": "crates/ra_syntax/test_data/parser/inline/err/0002_misplaced_label_err.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..29\n+  FN@0..29\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "2409eefe7b4a93b1a23d7c5ba7f704bf7debfb7f", "filename": "crates/ra_syntax/test_data/parser/inline/err/0003_pointer_type_no_mutability.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..14\n-  TYPE_ALIAS_DEF@0..13\n+  TYPE_ALIAS@0..13\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "776022fd936d1bbef313e58a54b43738ab56f219", "filename": "crates/ra_syntax/test_data/parser/inline/err/0005_fn_pointer_type_missing_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..20\n-  TYPE_ALIAS_DEF@0..15\n+  TYPE_ALIAS@0..15\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "cc0f8bcaf9f7721f8b3be00836eb2ed9ae54872d", "filename": "crates/ra_syntax/test_data/parser/inline/err/0006_unsafe_block_in_mod.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..10\n+  FN@0..10\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -19,7 +19,7 @@ SOURCE_FILE@0..33\n     WHITESPACE@19..20 \" \"\n     R_CURLY@20..21 \"}\"\n   WHITESPACE@21..22 \" \"\n-  FN_DEF@22..32\n+  FN@22..32\n     FN_KW@22..24 \"fn\"\n     WHITESPACE@24..25 \" \"\n     NAME@25..28"}, {"sha": "3f3a7f1b9d34e6a776a4c41b70b2b7726a976291", "filename": "crates/ra_syntax/test_data/parser/inline/err/0007_async_without_semicolon.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..29\n+  FN@0..29\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "63a10127dd9ebce1efb18fba9c14f5dfad06e38a", "filename": "crates/ra_syntax/test_data/parser/inline/err/0008_pub_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  FN_DEF@0..20\n+  FN@0..20\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "8fd8d5e593abce5a02b69dda07b577f67b29fb82", "filename": "crates/ra_syntax/test_data/parser/inline/err/0009_attr_on_expr_not_allowed.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..48\n-  FN_DEF@0..47\n+  FN@0..47\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "fa14e1e6de5b3df2a6e0385947e1913a26938691", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_bad_tuple_index_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..47\n-  FN_DEF@0..46\n+  FN@0..46\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "d2a18330fabf36e17d30416d970212b7fe93c331", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -2,7 +2,7 @@ SOURCE_FILE@0..50\n   ERROR@0..6\n     UNSAFE_KW@0..6 \"unsafe\"\n   WHITESPACE@6..7 \" \"\n-  FN_DEF@7..24\n+  FN@7..24\n     ASYNC_KW@7..12 \"async\"\n     WHITESPACE@12..13 \" \"\n     FN_KW@13..15 \"fn\""}, {"sha": "22c7c5f0d491ada24534894dafdca3a6c3d370ed", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -14,7 +14,7 @@ SOURCE_FILE@0..62\n             NAME_REF@14..21\n               IDENT@14..21 \"default\"\n       WHITESPACE@21..22 \" \"\n-      TYPE_ALIAS_DEF@22..35\n+      TYPE_ALIAS@22..35\n         TYPE_KW@22..26 \"type\"\n         WHITESPACE@26..27 \" \"\n         NAME@27..28\n@@ -35,7 +35,7 @@ SOURCE_FILE@0..62\n             NAME_REF@40..47\n               IDENT@40..47 \"default\"\n       WHITESPACE@47..48 \" \"\n-      FN_DEF@48..59\n+      FN@48..59\n         FN_KW@48..50 \"fn\"\n         WHITESPACE@50..51 \" \"\n         NAME@51..54"}, {"sha": "6753c3fe7fc928cda65fd06a527642e6ca661b71", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_record_literal_before_ellipsis_recovery.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..45\n-  FN_DEF@0..44\n+  FN@0..44\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "a62ce23e6a155758b35febdef5d60f7841bca8c0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0001_trait_item_list.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..83\n     ASSOC_ITEM_LIST@7..82\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      TYPE_ALIAS_DEF@13..27\n+      TYPE_ALIAS@13..27\n         TYPE_KW@13..17 \"type\"\n         WHITESPACE@17..18 \" \"\n         NAME@18..19\n@@ -41,7 +41,7 @@ SOURCE_FILE@0..83\n                 IDENT@41..44 \"i32\"\n         SEMICOLON@44..45 \";\"\n       WHITESPACE@45..50 \"\\n    \"\n-      FN_DEF@50..61\n+      FN@50..61\n         FN_KW@50..52 \"fn\"\n         WHITESPACE@52..53 \" \"\n         NAME@53..56\n@@ -54,7 +54,7 @@ SOURCE_FILE@0..83\n           L_CURLY@59..60 \"{\"\n           R_CURLY@60..61 \"}\"\n       WHITESPACE@61..66 \"\\n    \"\n-      FN_DEF@66..80\n+      FN@66..80\n         FN_KW@66..68 \"fn\"\n         WHITESPACE@68..69 \" \"\n         NAME@69..72"}, {"sha": "9cae1e8cc44a1eafe406a2ea1f4b32cb1e9c0005", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..54\n-  FN_DEF@0..53\n+  FN@0..53\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..12"}, {"sha": "ace8ad050ad5e28664257f30a575feaed2cfe455", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..39\n-  TYPE_ALIAS_DEF@0..38\n+  TYPE_ALIAS@0..38\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "1b56e20d5925b891b1fa92524ba27b21e7970ef9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0005_function_type_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..28\n-  FN_DEF@0..27\n+  FN@0..27\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "87c170707c95a87655715d58185119177f89f0e6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.rast", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..128\n     ASSOC_ITEM_LIST@7..127\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      FN_DEF@13..26\n+      FN@13..26\n         FN_KW@13..15 \"fn\"\n         WHITESPACE@15..16 \" \"\n         NAME@16..17\n@@ -26,7 +26,7 @@ SOURCE_FILE@0..128\n           L_CURLY@24..25 \"{\"\n           R_CURLY@25..26 \"}\"\n       WHITESPACE@26..31 \"\\n    \"\n-      FN_DEF@31..46\n+      FN@31..46\n         FN_KW@31..33 \"fn\"\n         WHITESPACE@33..34 \" \"\n         NAME@34..35\n@@ -43,7 +43,7 @@ SOURCE_FILE@0..128\n           L_CURLY@44..45 \"{\"\n           R_CURLY@45..46 \"}\"\n       WHITESPACE@46..51 \"\\n    \"\n-      FN_DEF@51..69\n+      FN@51..69\n         FN_KW@51..53 \"fn\"\n         WHITESPACE@53..54 \" \"\n         NAME@54..55\n@@ -62,7 +62,7 @@ SOURCE_FILE@0..128\n           L_CURLY@67..68 \"{\"\n           R_CURLY@68..69 \"}\"\n       WHITESPACE@69..74 \"\\n    \"\n-      FN_DEF@74..103\n+      FN@74..103\n         FN_KW@74..76 \"fn\"\n         WHITESPACE@76..77 \" \"\n         NAME@77..78\n@@ -95,7 +95,7 @@ SOURCE_FILE@0..128\n           L_CURLY@101..102 \"{\"\n           R_CURLY@102..103 \"}\"\n       WHITESPACE@103..108 \"\\n    \"\n-      FN_DEF@108..125\n+      FN@108..125\n         FN_KW@108..110 \"fn\"\n         WHITESPACE@110..111 \" \"\n         NAME@111..112"}, {"sha": "3ce2acfae98cfe85c8e3a5834f2af5477f549e88", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..103\n-  FN_DEF@0..102\n+  FN@0..102\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "f62826fd55daffa0023d4b19d02b32cf4d9fd005", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0009_loop_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..26\n-  FN_DEF@0..25\n+  FN@0..25\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "66a609346ae7bc3e7f1badfc5a7d6172350df991", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0011_field_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..48\n-  FN_DEF@0..47\n+  FN@0..47\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "28c94bfd64fb5436f090bd8611d92cb307877bcd", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0012_type_item_where_clause.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..31\n-  TYPE_ALIAS_DEF@0..30\n+  TYPE_ALIAS@0..30\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..8"}, {"sha": "845b32e6d49666eb91be9b94301648d1020754b0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0013_pointer_type_mut.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..36\n-  TYPE_ALIAS_DEF@0..17\n+  TYPE_ALIAS@0..17\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -16,7 +16,7 @@ SOURCE_FILE@0..36\n         R_PAREN@15..16 \")\"\n     SEMICOLON@16..17 \";\"\n   WHITESPACE@17..18 \"\\n\"\n-  TYPE_ALIAS_DEF@18..35\n+  TYPE_ALIAS@18..35\n     TYPE_KW@18..22 \"type\"\n     WHITESPACE@22..23 \" \"\n     NAME@23..24"}, {"sha": "b1d5106ce9acc9d7a9d4fe9946637c83eb7a2c05", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0014_never_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..16\n-  TYPE_ALIAS_DEF@0..15\n+  TYPE_ALIAS@0..15\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..10"}, {"sha": "104e153ce69d5ac477b5f42509ba183ba7c87a36", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0015_continue_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..69\n-  FN_DEF@0..68\n+  FN@0..68\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "c131df1c95137fa3148f07a4845acb0a36f00602", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0017_array_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..19\n-  TYPE_ALIAS_DEF@0..18\n+  TYPE_ALIAS@0..18\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "e75180900b10d9b1b3e3555123e931bc632d8fba", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..69\n     ASSOC_ITEM_LIST@7..68\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      FN_DEF@13..33\n+      FN@13..33\n         FN_KW@13..15 \"fn\"\n         WHITESPACE@15..16 \" \"\n         NAME@16..17\n@@ -35,7 +35,7 @@ SOURCE_FILE@0..69\n           L_CURLY@31..32 \"{\"\n           R_CURLY@32..33 \"}\"\n       WHITESPACE@33..38 \"\\n    \"\n-      FN_DEF@38..66\n+      FN@38..66\n         FN_KW@38..40 \"fn\"\n         WHITESPACE@40..41 \" \"\n         NAME@41..42"}, {"sha": "7db38ea4da5f6a95f2f3ec40e5ab55ca6a8fa5dd", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..44\n-  FN_DEF@0..43\n+  FN@0..43\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "3ae870e17aecd82e89b3fc1f1fed715379a153a5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0021_impl_item_list.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..89\n     ASSOC_ITEM_LIST@7..88\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      TYPE_ALIAS_DEF@13..26\n+      TYPE_ALIAS@13..26\n         TYPE_KW@13..17 \"type\"\n         WHITESPACE@17..18 \" \"\n         NAME@18..19\n@@ -45,7 +45,7 @@ SOURCE_FILE@0..89\n           INT_NUMBER@46..48 \"92\"\n         SEMICOLON@48..49 \";\"\n       WHITESPACE@49..54 \"\\n    \"\n-      FN_DEF@54..65\n+      FN@54..65\n         FN_KW@54..56 \"fn\"\n         WHITESPACE@56..57 \" \"\n         NAME@57..60\n@@ -58,7 +58,7 @@ SOURCE_FILE@0..89\n           L_CURLY@63..64 \"{\"\n           R_CURLY@64..65 \"}\"\n       WHITESPACE@65..70 \"\\n    \"\n-      FN_DEF@70..86\n+      FN@70..86\n         FN_KW@70..72 \"fn\"\n         WHITESPACE@72..73 \" \"\n         NAME@73..76"}, {"sha": "57008e5fea48af01fc93925e50a4f8d17c897b7e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0023_placeholder_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..22\n-  TYPE_ALIAS_DEF@0..21\n+  TYPE_ALIAS@0..21\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..16"}, {"sha": "dea0c73f772d5f57ec2b229779be48d671edbfe4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..39\n-  FN_DEF@0..38\n+  FN@0..38\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "fd819ea370e60c0cd37073e646d1ba93d96f0ea0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0025_slice_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..15\n-  TYPE_ALIAS_DEF@0..14\n+  TYPE_ALIAS@0..14\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "e5f5503471912a8fa931def7cad5e6e59e645a1b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..97\n-  FN_DEF@0..96\n+  FN@0..96\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "9e76d881ec12bca35d0688e639c3403948606868", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0027_ref_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..52\n-  FN_DEF@0..51\n+  FN@0..51\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "f45f3cab89c4475c8e4a4e5c1d39e65bebe8b7a2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0028_impl_trait_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..43\n-  TYPE_ALIAS_DEF@0..42\n+  TYPE_ALIAS@0..42\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "e096b3a1f645c43ca97a1d5a524357bc9637cbc0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0029_cast_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..89\n-  FN_DEF@0..88\n+  FN@0..88\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "381284dc5dd9b04b06a9a155744f8f081d5996be", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0030_cond.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..197\n-  FN_DEF@0..37\n+  FN@0..37\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -41,7 +41,7 @@ SOURCE_FILE@0..197\n       WHITESPACE@35..36 \" \"\n       R_CURLY@36..37 \"}\"\n   WHITESPACE@37..38 \"\\n\"\n-  FN_DEF@38..196\n+  FN@38..196\n     FN_KW@38..40 \"fn\"\n     WHITESPACE@40..41 \" \"\n     NAME@41..44"}, {"sha": "ffe1a3a01071af1f6a88c8ebec77305da1b8431f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0031_while_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..93\n-  FN_DEF@0..92\n+  FN@0..92\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "79a5ee339a23ad7c5738065130e858f847483ea5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..113\n-  TYPE_ALIAS_DEF@0..14\n+  TYPE_ALIAS@0..14\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -14,7 +14,7 @@ SOURCE_FILE@0..113\n         R_PAREN@12..13 \")\"\n     SEMICOLON@13..14 \";\"\n   WHITESPACE@14..15 \"\\n\"\n-  TYPE_ALIAS_DEF@15..36\n+  TYPE_ALIAS@15..36\n     TYPE_KW@15..19 \"type\"\n     WHITESPACE@19..20 \" \"\n     NAME@20..21\n@@ -31,7 +31,7 @@ SOURCE_FILE@0..113\n         R_PAREN@34..35 \")\"\n     SEMICOLON@35..36 \";\"\n   WHITESPACE@36..37 \"\\n\"\n-  TYPE_ALIAS_DEF@37..69\n+  TYPE_ALIAS@37..69\n     TYPE_KW@37..41 \"type\"\n     WHITESPACE@41..42 \" \"\n     NAME@42..43\n@@ -53,7 +53,7 @@ SOURCE_FILE@0..113\n         R_PAREN@67..68 \")\"\n     SEMICOLON@68..69 \";\"\n   WHITESPACE@69..70 \"\\n\"\n-  TYPE_ALIAS_DEF@70..112\n+  TYPE_ALIAS@70..112\n     TYPE_KW@70..74 \"type\"\n     WHITESPACE@74..75 \" \"\n     NAME@75..76"}, {"sha": "c522f76cff0a098771dd353290b9a42e00ed88c1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0033_reference_type;.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..54\n-  TYPE_ALIAS_DEF@0..13\n+  TYPE_ALIAS@0..13\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -14,7 +14,7 @@ SOURCE_FILE@0..54\n         R_PAREN@11..12 \")\"\n     SEMICOLON@12..13 \";\"\n   WHITESPACE@13..14 \"\\n\"\n-  TYPE_ALIAS_DEF@14..35\n+  TYPE_ALIAS@14..35\n     TYPE_KW@14..18 \"type\"\n     WHITESPACE@18..19 \" \"\n     NAME@19..20\n@@ -31,7 +31,7 @@ SOURCE_FILE@0..54\n         R_PAREN@33..34 \")\"\n     SEMICOLON@34..35 \";\"\n   WHITESPACE@35..36 \"\\n\"\n-  TYPE_ALIAS_DEF@36..53\n+  TYPE_ALIAS@36..53\n     TYPE_KW@36..40 \"type\"\n     WHITESPACE@40..41 \" \"\n     NAME@41..42"}, {"sha": "f905def6ff00c938a70ef7564a867408bd9ca321", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0034_break_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..102\n-  FN_DEF@0..101\n+  FN@0..101\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "293b1d64c7ec6b3926b654f9f3691ca2b504174e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0036_unsafe_extern_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..29\n+  FN@0..29\n     UNSAFE_KW@0..6 \"unsafe\"\n     WHITESPACE@6..7 \" \"\n     ABI@7..17"}, {"sha": "b6379e62f8c1590eebbd5f5b1e43aef3aa5c7cce", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0037_qual_paths.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..71\n-  TYPE_ALIAS_DEF@0..26\n+  TYPE_ALIAS@0..26\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -32,7 +32,7 @@ SOURCE_FILE@0..71\n             IDENT@19..25 \"Output\"\n     SEMICOLON@25..26 \";\"\n   WHITESPACE@26..27 \"\\n\"\n-  FN_DEF@27..70\n+  FN@27..70\n     FN_KW@27..29 \"fn\"\n     WHITESPACE@29..30 \" \"\n     NAME@30..33"}, {"sha": "64e705fb3d2250d31b69d24b450b142d7c235696", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0038_full_range_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  FN_DEF@0..20\n+  FN@0..20\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "2185d3c9152ae9fcfaba3aa67cc08062f094469c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0039_type_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..46\n-  TYPE_ALIAS_DEF@0..45\n+  TYPE_ALIAS@0..45\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "47cbe7c1f0022eb7f521d3db84e3af459221bf4d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0040_crate_keyword_vis.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..71\n-  FN_DEF@0..19\n+  FN@0..19\n     VISIBILITY@0..5\n       CRATE_KW@0..5 \"crate\"\n     WHITESPACE@5..6 \" \""}, {"sha": "40875ae1e5cf64137a71a987b6a53dafa74d6b7d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0042_call_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..118\n-  FN_DEF@0..117\n+  FN@0..117\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "1fd3cd0e783c50cd4664b213e800c2796640c0bc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0044_block_items.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  FN_DEF@0..20\n+  FN@0..20\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -11,7 +11,7 @@ SOURCE_FILE@0..21\n     BLOCK_EXPR@7..20\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..9 \" \"\n-      FN_DEF@9..18\n+      FN@9..18\n         FN_KW@9..11 \"fn\"\n         WHITESPACE@11..12 \" \"\n         NAME@12..13"}, {"sha": "fbf2e7c671d6cd846e26187464a1940170a5440b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..35\n-  FN_DEF@0..34\n+  FN@0..34\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "e89284c1405b2d6f4113bb6897d4057eab86066b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0046_singleton_tuple_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..17\n-  TYPE_ALIAS_DEF@0..16\n+  TYPE_ALIAS@0..16\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "37757ccd45336f4caba71c3775c2229ba5807c5e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0048_path_type_with_bounds.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..58\n-  FN_DEF@0..26\n+  FN@0..26\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -38,7 +38,7 @@ SOURCE_FILE@0..58\n       L_CURLY@24..25 \"{\"\n       R_CURLY@25..26 \"}\"\n   WHITESPACE@26..27 \"\\n\"\n-  FN_DEF@27..57\n+  FN@27..57\n     FN_KW@27..29 \"fn\"\n     WHITESPACE@29..30 \" \"\n     NAME@30..33"}, {"sha": "02c57079f60ca2c20f6e76ce4026e22b13e0be07", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0050_fn_decl.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ SOURCE_FILE@0..22\n     ASSOC_ITEM_LIST@8..21\n       L_CURLY@8..9 \"{\"\n       WHITESPACE@9..10 \" \"\n-      FN_DEF@10..19\n+      FN@10..19\n         FN_KW@10..12 \"fn\"\n         WHITESPACE@12..13 \" \"\n         NAME@13..16"}, {"sha": "6330dbf9e6041f093da5a0629114813d81afeca8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0051_unit_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..13\n-  TYPE_ALIAS_DEF@0..12\n+  TYPE_ALIAS@0..12\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "9bc36bea70a4bfb416b57ba00ac30aac79a8dc05", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0052_path_type.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..71\n-  TYPE_ALIAS_DEF@0..13\n+  TYPE_ALIAS@0..13\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -14,7 +14,7 @@ SOURCE_FILE@0..71\n             IDENT@9..12 \"Foo\"\n     SEMICOLON@12..13 \";\"\n   WHITESPACE@13..14 \"\\n\"\n-  TYPE_ALIAS_DEF@14..29\n+  TYPE_ALIAS@14..29\n     TYPE_KW@14..18 \"type\"\n     WHITESPACE@18..19 \" \"\n     NAME@19..20\n@@ -30,7 +30,7 @@ SOURCE_FILE@0..71\n             IDENT@25..28 \"Foo\"\n     SEMICOLON@28..29 \";\"\n   WHITESPACE@29..30 \"\\n\"\n-  TYPE_ALIAS_DEF@30..49\n+  TYPE_ALIAS@30..49\n     TYPE_KW@30..34 \"type\"\n     WHITESPACE@34..35 \" \"\n     NAME@35..36\n@@ -49,7 +49,7 @@ SOURCE_FILE@0..71\n             IDENT@45..48 \"Foo\"\n     SEMICOLON@48..49 \";\"\n   WHITESPACE@49..50 \"\\n\"\n-  TYPE_ALIAS_DEF@50..70\n+  TYPE_ALIAS@50..70\n     TYPE_KW@50..54 \"type\"\n     WHITESPACE@54..55 \" \"\n     NAME@55..56"}, {"sha": "2bfb524530671f35c44db3438dc54153a0c8b29a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0053_path_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..91\n-  FN_DEF@0..90\n+  FN@0..90\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "68bb43852566ae8a7dde307d22d06cdb17173994", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0055_literal_pattern.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..113\n-  FN_DEF@0..112\n+  FN@0..112\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "28129c50c61882fd5532c539c2c32c21e41089a3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0056_where_clause.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..116\n-  FN_DEF@0..115\n+  FN@0..115\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "97548a5eebcbd5041ca6c15086154d7fab4c1060", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0057_const_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..18\n-  FN_DEF@0..17\n+  FN@0..17\n     CONST_KW@0..5 \"const\"\n     WHITESPACE@5..6 \" \"\n     FN_KW@6..8 \"fn\""}, {"sha": "3e72f9671c37628cab2545a27e792d9ea141f42d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0058_range_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..112\n-  FN_DEF@0..111\n+  FN@0..111\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "fa659c19bb09f60efd8c65e3f82f628f06173795", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0059_match_arms_commas.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..83\n-  FN_DEF@0..82\n+  FN@0..82\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "b0aa73b7de49e8e7c6680174530f9825bdabc552", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_record_lit.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..112\n-  FN_DEF@0..111\n+  FN@0..111\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "f6417ab131e7e328f1ff2833bb6bb61d2979e6e0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0062_mod_contents.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..70\n-  FN_DEF@0..11\n+  FN@0..11\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "5871600034474d1c58a72d6f16b2d098cdcdb2d2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0064_if_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..137\n-  FN_DEF@0..136\n+  FN@0..136\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "629fea99d4f4fb21edc097d1ab197a7447ce8a2a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0065_dyn_trait_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..42\n-  TYPE_ALIAS_DEF@0..41\n+  TYPE_ALIAS@0..41\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "d2279877b41ff7a91744393aa289c87574aec375", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0066_match_arm.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..167\n-  FN_DEF@0..166\n+  FN@0..166\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "4c1165dc831f6a5f238c5e1b7826f72c2a6a8626", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..46\n-  FN_DEF@0..45\n+  FN@0..45\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "d6926425c13119cdeec0f57088a25233f0928d96", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0071_match_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..97\n-  FN_DEF@0..96\n+  FN@0..96\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "437d7ac0424bd2ead8b1d8e73733ddcbe5222e1b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0072_return_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..40\n-  FN_DEF@0..39\n+  FN@0..39\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "0123cb1080e0d24d12dfc1feaae0d393bf089134", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0073_type_item_type_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  TYPE_ALIAS_DEF@0..20\n+  TYPE_ALIAS@0..20\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..11"}, {"sha": "3ca70f021b82891287a40aa0e27dd343d745bfe3", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0074_stmt_postfix_expr_ambiguity.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..84\n-  FN_DEF@0..83\n+  FN@0..83\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "5cefc5076735c56b5c652aad3bf92e919ddf18be", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0075_block.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..65\n-  FN_DEF@0..9\n+  FN@0..9\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -12,7 +12,7 @@ SOURCE_FILE@0..65\n       L_CURLY@7..8 \"{\"\n       R_CURLY@8..9 \"}\"\n   WHITESPACE@9..10 \"\\n\"\n-  FN_DEF@10..31\n+  FN@10..31\n     FN_KW@10..12 \"fn\"\n     WHITESPACE@12..13 \" \"\n     NAME@13..14\n@@ -38,7 +38,7 @@ SOURCE_FILE@0..65\n       WHITESPACE@29..30 \" \"\n       R_CURLY@30..31 \"}\"\n   WHITESPACE@31..32 \"\\n\"\n-  FN_DEF@32..48\n+  FN@32..48\n     FN_KW@32..34 \"fn\"\n     WHITESPACE@34..35 \" \"\n     NAME@35..36\n@@ -62,7 +62,7 @@ SOURCE_FILE@0..65\n       WHITESPACE@46..47 \" \"\n       R_CURLY@47..48 \"}\"\n   WHITESPACE@48..49 \"\\n\"\n-  FN_DEF@49..64\n+  FN@49..64\n     FN_KW@49..51 \"fn\"\n     WHITESPACE@51..52 \" \"\n     NAME@52..53"}, {"sha": "cfa4c05f53e078762e438640c73500c4fcc6ff80", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0076_function_where_clause.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..29\n-  FN_DEF@0..28\n+  FN@0..28\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "33e6fb93f7a5e3db5478bf4a5867c3cd16deeb23", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0077_try_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  FN_DEF@0..20\n+  FN@0..20\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "2befc8388ec70abcb7c245c0b679a425780f0850", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0078_type_item.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..16\n-  TYPE_ALIAS_DEF@0..15\n+  TYPE_ALIAS@0..15\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..8"}, {"sha": "3c80846db90b38783dd4b872eec844ae8a7f8c75", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0080_postfix_range.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..89\n-  FN_DEF@0..88\n+  FN@0..88\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "175ec984407659fd3116074763c66049e002fc29", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..121\n-  TYPE_ALIAS_DEF@0..28\n+  TYPE_ALIAS@0..28\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -29,7 +29,7 @@ SOURCE_FILE@0..121\n             R_PAREN@26..27 \")\"\n     SEMICOLON@27..28 \";\"\n   WHITESPACE@28..29 \"\\n\"\n-  TYPE_ALIAS_DEF@29..81\n+  TYPE_ALIAS@29..81\n     TYPE_KW@29..33 \"type\"\n     WHITESPACE@33..34 \" \"\n     NAME@34..35\n@@ -74,7 +74,7 @@ SOURCE_FILE@0..121\n             R_PAREN@79..80 \")\"\n     SEMICOLON@80..81 \";\"\n   WHITESPACE@81..82 \"\\n\"\n-  TYPE_ALIAS_DEF@82..120\n+  TYPE_ALIAS@82..120\n     TYPE_KW@82..86 \"type\"\n     WHITESPACE@86..87 \" \"\n     NAME@87..90"}, {"sha": "1563b1988b6c2680373a9439be4e5cf94e9830e6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..200\n-  FN_DEF@0..199\n+  FN@0..199\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "ee889496686f7e125c6a61eadbb755dee3e8dac2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0084_paren_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..16\n-  TYPE_ALIAS_DEF@0..15\n+  TYPE_ALIAS@0..15\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "ded36949a0c57fceab0e59c3ec128ccd4284cd80", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0085_expr_literals.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..189\n-  FN_DEF@0..188\n+  FN@0..188\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "70e05a859b176e241fe2251c6c6c2a5478c4f42d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0086_function_ret_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..11\n+  FN@0..11\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -12,7 +12,7 @@ SOURCE_FILE@0..30\n       L_CURLY@9..10 \"{\"\n       R_CURLY@10..11 \"}\"\n   WHITESPACE@11..12 \"\\n\"\n-  FN_DEF@12..29\n+  FN@12..29\n     FN_KW@12..14 \"fn\"\n     WHITESPACE@14..15 \" \"\n     NAME@15..18"}, {"sha": "34f520994b0e6d9de9da3cd7db3006f91bfcdd72", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0088_break_ambiguity.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..88\n-  FN_DEF@0..87\n+  FN@0..87\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "405b6a259f97fa9775f7beda238c37c7df8e60c8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0089_extern_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..19\n-  FN_DEF@0..18\n+  FN@0..18\n     ABI@0..6\n       EXTERN_KW@0..6 \"extern\"\n     WHITESPACE@6..7 \" \""}, {"sha": "95686977fee88adc82e9e4a7d97d6efdc4e5dd21", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0092_fn_pointer_type_with_ret.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..21\n-  TYPE_ALIAS_DEF@0..20\n+  TYPE_ALIAS@0..20\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "82f03f9c18bdaaaee7bf5cd30412c8dec71c0f0d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0093_index_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..26\n-  FN_DEF@0..25\n+  FN@0..25\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "25706d2a40ddff5c504e34a63e50cc095bb69261", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0095_placeholder_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..26\n-  FN_DEF@0..25\n+  FN@0..25\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "cb5316a0dd000b278b3606458ed319c19630f0f8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0096_no_semi_after_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..167\n-  FN_DEF@0..166\n+  FN@0..166\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "32a77ba490e6ce31ccabac110ac0c980f50dca78", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0098_const_unsafe_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..25\n-  FN_DEF@0..24\n+  FN@0..24\n     CONST_KW@0..5 \"const\"\n     WHITESPACE@5..6 \" \"\n     UNSAFE_KW@6..12 \"unsafe\""}, {"sha": "1627556c85025ada2309a03052a7eb7a845cf299", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0099_param_list.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0099_param_list.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..67\n-  FN_DEF@0..9\n+  FN@0..9\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -12,7 +12,7 @@ SOURCE_FILE@0..67\n       L_CURLY@7..8 \"{\"\n       R_CURLY@8..9 \"}\"\n   WHITESPACE@9..10 \"\\n\"\n-  FN_DEF@10..25\n+  FN@10..25\n     FN_KW@10..12 \"fn\"\n     WHITESPACE@12..13 \" \"\n     NAME@13..14\n@@ -36,7 +36,7 @@ SOURCE_FILE@0..67\n       L_CURLY@23..24 \"{\"\n       R_CURLY@24..25 \"}\"\n   WHITESPACE@25..26 \"\\n\"\n-  FN_DEF@26..43\n+  FN@26..43\n     FN_KW@26..28 \"fn\"\n     WHITESPACE@28..29 \" \"\n     NAME@29..30\n@@ -62,7 +62,7 @@ SOURCE_FILE@0..67\n       L_CURLY@41..42 \"{\"\n       R_CURLY@42..43 \"}\"\n   WHITESPACE@43..44 \"\\n\"\n-  FN_DEF@44..66\n+  FN@44..66\n     FN_KW@44..46 \"fn\"\n     WHITESPACE@46..47 \" \"\n     NAME@47..48"}, {"sha": "766de4efe82b49538fbf981aa5e2799e6681ad14", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0100_for_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0100_for_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..32\n+  FN@0..32\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "73c94e5d43aac3367b03133fb178fa00135b717d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0101_unsafe_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0101_unsafe_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..19\n-  FN_DEF@0..18\n+  FN@0..18\n     UNSAFE_KW@0..6 \"unsafe\"\n     WHITESPACE@6..7 \" \"\n     FN_KW@7..9 \"fn\""}, {"sha": "fe1c290c3e4bd2dabe2d1a0dd871663e3121ebb7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0102_record_field_pat_list.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0102_record_field_pat_list.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..119\n-  FN_DEF@0..118\n+  FN@0..118\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "c4c0a0568a4591de6faaadfe7167190e0eb1c676", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0103_array_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0103_array_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..55\n-  FN_DEF@0..54\n+  FN@0..54\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "3f53d60c09e939a6265e0d03bf34366acf369e3b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0104_path_fn_trait_args.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..29\n-  TYPE_ALIAS_DEF@0..28\n+  TYPE_ALIAS@0..28\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6"}, {"sha": "51a6c5170850711ad38dd12be0b94a6b1c807fed", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0106_lambda_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..134\n-  FN_DEF@0..133\n+  FN@0..133\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "b2961b0ff1e407d6efce8bda7a8c95e05b700e51", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0107_method_call_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0107_method_call_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..49\n-  FN_DEF@0..48\n+  FN@0..48\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "ca7e4a5c36169517c1171f64beb8363445679708", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0108_tuple_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0108_tuple_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..40\n-  FN_DEF@0..39\n+  FN@0..39\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "a6a169f1b137a8543f3c676c239cf6a76047fc21", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0109_label.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0109_label.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..74\n-  FN_DEF@0..73\n+  FN@0..73\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "432318da0b55472accb767b4c25c41b0348526e2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0111_tuple_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..94\n-  FN_DEF@0..93\n+  FN@0..93\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "3cd554d4590ce0f1ea4cb2b551ec1c553ed55584", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0112_bind_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0112_bind_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..146\n-  FN_DEF@0..145\n+  FN@0..145\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "d761c1c68e1d8cf5cd8908580d8229d8ef7bbb89", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0113_nocontentexpr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0113_nocontentexpr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..50\n-  FN_DEF@0..49\n+  FN@0..49\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "f3d4ad72c325ff0728ff3a08c5416383a3127d63", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0117_macro_call_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0117_macro_call_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..41\n-  TYPE_ALIAS_DEF@0..16\n+  TYPE_ALIAS@0..16\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -18,7 +18,7 @@ SOURCE_FILE@0..41\n         R_PAREN@14..15 \")\"\n     SEMICOLON@15..16 \";\"\n   WHITESPACE@16..17 \"\\n\"\n-  TYPE_ALIAS_DEF@17..40\n+  TYPE_ALIAS@17..40\n     TYPE_KW@17..21 \"type\"\n     WHITESPACE@21..22 \" \"\n     NAME@22..23"}, {"sha": "aaaf803b7ccf6b3e64246128d1bf8b9ec58dce08", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0118_match_guard.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0118_match_guard.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..58\n-  FN_DEF@0..57\n+  FN@0..57\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "4b5f9cdc99d7d0c49de9a78b61d2bbc7b6101e98", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0120_match_arms_inner_attribute.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0120_match_arms_inner_attribute.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..139\n-  FN_DEF@0..138\n+  FN@0..138\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "54cc3be3a0d30a9d8b1bccc659cdb0062a08a21c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0121_match_arms_outer_attributes.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0121_match_arms_outer_attributes.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..259\n-  FN_DEF@0..258\n+  FN@0..258\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "f4008cfdc99e7fd9c3921ec6fb4989f98dd9271a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0122_generic_lifetime_type_attribute.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0122_generic_lifetime_type_attribute.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..64\n-  FN_DEF@0..63\n+  FN@0..63\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "f155743cfbc6580f27198402a14700567485d429", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0123_param_list_vararg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0123_param_list_vararg.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ SOURCE_FILE@0..57\n     EXTERN_ITEM_LIST@11..56\n       L_CURLY@11..12 \"{\"\n       WHITESPACE@12..13 \" \"\n-      FN_DEF@13..54\n+      FN@13..54\n         FN_KW@13..15 \"fn\"\n         WHITESPACE@15..16 \" \"\n         NAME@16..22"}, {"sha": "a7df188bd636eb0634fd30bff8af332581bf3f26", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0124_async_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0124_async_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..18\n-  FN_DEF@0..17\n+  FN@0..17\n     ASYNC_KW@0..5 \"async\"\n     WHITESPACE@5..6 \" \"\n     FN_KW@6..8 \"fn\""}, {"sha": "aa4d7a784f430ceead927fe7697f9b7cbead1971", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_crate_keyword_path.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_crate_keyword_path.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..27\n-  FN_DEF@0..26\n+  FN@0..26\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "20979cef3f58d980ece130ca31975b54f1d3c3b1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0125_record_literal_field_with_attr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0125_record_literal_field_with_attr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..46\n-  FN_DEF@0..45\n+  FN@0..45\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "0342e64f396c89face1fef50582e5e2907923540", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0126_attr_on_expr_stmt.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0126_attr_on_expr_stmt.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..82\n-  FN_DEF@0..81\n+  FN@0..81\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "3b46e5b479d7f543ab1adff8def1b72e68db1775", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0127_attr_on_last_expr_in_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0127_attr_on_last_expr_in_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..47\n-  FN_DEF@0..46\n+  FN@0..46\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "98a20f36d6247a6a153f5f660e4c2c461eeeabdc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0128_combined_fns.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0128_combined_fns.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..50\n-  FN_DEF@0..24\n+  FN@0..24\n     ASYNC_KW@0..5 \"async\"\n     WHITESPACE@5..6 \" \"\n     UNSAFE_KW@6..12 \"unsafe\"\n@@ -16,7 +16,7 @@ SOURCE_FILE@0..50\n       L_CURLY@22..23 \"{\"\n       R_CURLY@23..24 \"}\"\n   WHITESPACE@24..25 \"\\n\"\n-  FN_DEF@25..49\n+  FN@25..49\n     CONST_KW@25..30 \"const\"\n     WHITESPACE@30..31 \" \"\n     UNSAFE_KW@31..37 \"unsafe\""}, {"sha": "e283966ca239e8186214d3879060d48f22c2a8ae", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0129_marco_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0129_marco_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..32\n+  FN@0..32\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "931e81f2748638ef8fae802487978b70b0f9184e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_let_stmt.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_let_stmt.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..135\n-  FN_DEF@0..134\n+  FN@0..134\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "0fe3bf582a17f3513550060f6e2a3715a6b442cc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0130_try_block_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0130_try_block_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..32\n+  FN@0..32\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "d47071a911a9e039edcd48df382b24264d3392b2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0131_existential_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0131_existential_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..37\n-  TYPE_ALIAS_DEF@0..36\n+  TYPE_ALIAS@0..36\n     EXISTENTIAL_KW@0..11 \"existential\"\n     WHITESPACE@11..12 \" \"\n     TYPE_KW@12..16 \"type\""}, {"sha": "48f4838138d80a72825506283876cc464bcbdfbf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_box_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_box_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..106\n-  FN_DEF@0..105\n+  FN@0..105\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "de02238df782cf38670b306687deb142deadcd98", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0132_default_fn_type.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0132_default_fn_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -19,7 +19,7 @@ SOURCE_FILE@0..69\n     ASSOC_ITEM_LIST@15..68\n       L_CURLY@15..16 \"{\"\n       WHITESPACE@16..21 \"\\n    \"\n-      TYPE_ALIAS_DEF@21..42\n+      TYPE_ALIAS@21..42\n         DEFAULT_KW@21..28 \"default\"\n         WHITESPACE@28..29 \" \"\n         TYPE_KW@29..33 \"type\"\n@@ -36,7 +36,7 @@ SOURCE_FILE@0..69\n                 IDENT@38..41 \"Bar\"\n         SEMICOLON@41..42 \";\"\n       WHITESPACE@42..47 \"\\n    \"\n-      FN_DEF@47..66\n+      FN@47..66\n         DEFAULT_KW@47..54 \"default\"\n         WHITESPACE@54..55 \" \"\n         FN_KW@55..57 \"fn\""}, {"sha": "ceae8a4ec65d0e586f0114da1c79ce68e1873e98", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0134_nocontentexpr_after_item.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0134_nocontentexpr_after_item.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..111\n-  FN_DEF@0..110\n+  FN@0..110\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..18\n@@ -33,7 +33,7 @@ SOURCE_FILE@0..111\n           R_CURLY@74..75 \"}\"\n       SEMICOLON@75..76 \";\"\n       WHITESPACE@76..81 \"\\n    \"\n-      FN_DEF@81..90\n+      FN@81..90\n         FN_KW@81..83 \"fn\"\n         WHITESPACE@83..84 \" \"\n         NAME@84..85"}, {"sha": "923effe3831088eaf530acb7e2d368691742b50b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0137_await_expr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0137_await_expr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..67\n-  FN_DEF@0..66\n+  FN@0..66\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "1ad03e0058c30464863fe98e6f4a34342a5c065a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_associated_type_bounds.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_associated_type_bounds.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..59\n-  FN_DEF@0..58\n+  FN@0..58\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..12"}, {"sha": "a03139ab51c8b440824288c6ae5ac11fb2848f34", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_expression_after_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_expression_after_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..52\n-  FN_DEF@0..51\n+  FN@0..51\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "6403ff8d5c72e5d8ac19d1c671dbc4e663c03c68", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0138_self_param_outer_attr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0138_self_param_outer_attr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..26\n-  FN_DEF@0..25\n+  FN@0..25\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4"}, {"sha": "36fd2997b0067718160956fe7b045ca61302a96a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0139_param_outer_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0139_param_outer_arg.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..28\n-  FN_DEF@0..27\n+  FN@0..27\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4"}, {"sha": "d11019076d3800f50a2c2e67624366ed2dca8c82", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0142_for_range_from.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0142_for_range_from.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..51\n-  FN_DEF@0..50\n+  FN@0..50\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "09fd9e9b8cf3666c43623b5de94cc89826f80bbd", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0143_box_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0143_box_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..118\n-  FN_DEF@0..117\n+  FN@0..117\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "8d0f1ead5329ea096efa960fd89b826a003941a4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..555\n-  FN_DEF@0..554\n+  FN@0..554\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "b41ef4098aece032f7e2efcbe2879769f9ebe596", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0145_record_field_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0145_record_field_pat.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..63\n-  FN_DEF@0..62\n+  FN@0..62\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "2d0c834587e5cfb841eeb32b47bb77de8c271697", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0146_as_precedence.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0146_as_precedence.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..43\n-  FN_DEF@0..42\n+  FN@0..42\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "2905c5f1a5daaed5d3581929d069907580b9d6c5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..34\n-  FN_DEF@0..33\n+  FN@0..33\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "69b4d73d728fdc7cd187f77426eefed1cf09a7a9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0154_fn_pointer_param_ident_path.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0154_fn_pointer_param_ident_path.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..55\n-  TYPE_ALIAS_DEF@0..24\n+  TYPE_ALIAS@0..24\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..8\n@@ -25,7 +25,7 @@ SOURCE_FILE@0..55\n         R_PAREN@22..23 \")\"\n     SEMICOLON@23..24 \";\"\n   WHITESPACE@24..25 \"\\n\"\n-  TYPE_ALIAS_DEF@25..54\n+  TYPE_ALIAS@25..54\n     TYPE_KW@25..29 \"type\"\n     WHITESPACE@29..30 \" \"\n     NAME@30..33"}, {"sha": "c63a55a56b1984db6175c3d62009476377bdec9c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0155_closure_params.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0155_closure_params.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..63\n-  FN_DEF@0..62\n+  FN@0..62\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "3b8dfefc6ab427827c84525878e9d234863c951b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_fn_def_param.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_fn_def_param.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..30\n-  FN_DEF@0..29\n+  FN@0..29\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "4d4c41f1a5c2a129e23a4620089cb882bc563e11", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0156_or_pattern.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0156_or_pattern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..130\n-  FN_DEF@0..129\n+  FN@0..129\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "ccca045b6b6977613cc7777df84ddb7475bd9a6a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0157_fn_pointer_unnamed_arg.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0157_fn_pointer_unnamed_arg.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..23\n-  TYPE_ALIAS_DEF@0..22\n+  TYPE_ALIAS@0..22\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..8"}, {"sha": "8ae24b9c101735d21e4644e6257768fc66678af6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_binop_resets_statementness.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_binop_resets_statementness.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..28\n-  FN_DEF@0..27\n+  FN@0..27\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "9c071ec2e1c6bf0a16c8c82ffc340f755fa9b776", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0158_lambda_ret_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0158_lambda_ret_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..34\n-  FN_DEF@0..33\n+  FN@0..33\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "fb46d4ce401ae43310007e03b08cdb7b8159c5a4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0159_try_macro_fallback.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0159_try_macro_fallback.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0159_try_macro_fallback.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0159_try_macro_fallback.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..27\n-  FN_DEF@0..26\n+  FN@0..26\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "9e9a5f9c5b5a216af56f49c30e834d716bed5d6d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0161_labeled_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0161_labeled_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..23\n-  FN_DEF@0..22\n+  FN@0..22\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4"}, {"sha": "ca9a1183d6ae59e1f8af84f3b2eb7b4aa812174a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0162_unsafe_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0162_unsafe_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0162_unsafe_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0162_unsafe_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..22\n-  FN_DEF@0..21\n+  FN@0..21\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4"}, {"sha": "680f3544582ea352b7873d616cc9e4994add15da", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0163_default_unsafe_fn.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0163_default_unsafe_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -19,7 +19,7 @@ SOURCE_FILE@0..50\n     ASSOC_ITEM_LIST@15..49\n       L_CURLY@15..16 \"{\"\n       WHITESPACE@16..21 \"\\n    \"\n-      FN_DEF@21..47\n+      FN@21..47\n         DEFAULT_KW@21..28 \"default\"\n         WHITESPACE@28..29 \" \"\n         UNSAFE_KW@29..35 \"unsafe\""}, {"sha": "f5e20b93dd7f91f13e0ad737a30508c93cb0f677", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0164_type_path_in_pattern.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_type_path_in_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_type_path_in_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_type_path_in_pattern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..33\n-  FN_DEF@0..32\n+  FN@0..32\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "a7a2b11a7233cc05d981a269b57aa9e4df06815f", "filename": "crates/ra_syntax/test_data/parser/ok/0005_fn_item.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0005_fn_item.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..13\n-  FN_DEF@0..12\n+  FN@0..12\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "ea26f1440d31f8de82a2fec72b67469cd34a1686", "filename": "crates/ra_syntax/test_data/parser/ok/0008_mod_item.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0008_mod_item.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -26,7 +26,7 @@ SOURCE_FILE@0..118\n     ITEM_LIST@25..65\n       L_CURLY@25..26 \"{\"\n       WHITESPACE@26..31 \"\\n    \"\n-      FN_DEF@31..47\n+      FN@31..47\n         FN_KW@31..33 \"fn\"\n         WHITESPACE@33..34 \" \"\n         NAME@34..37"}, {"sha": "478fdba758a30d05eef411a332d5311560c76462", "filename": "crates/ra_syntax/test_data/parser/ok/0011_outer_attribute.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0011_outer_attribute.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..60\n-  FN_DEF@0..34\n+  FN@0..34\n     ATTR@0..12\n       POUND@0..1 \"#\"\n       L_BRACK@1..2 \"[\""}, {"sha": "83a93b5a9e53b24bee16e43f51a8dd25afc7bc44", "filename": "crates/ra_syntax/test_data/parser/ok/0012_visibility.rast", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0012_visibility.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..98\n-  FN_DEF@0..9\n+  FN@0..9\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -12,7 +12,7 @@ SOURCE_FILE@0..98\n       L_CURLY@7..8 \"{\"\n       R_CURLY@8..9 \"}\"\n   WHITESPACE@9..10 \"\\n\"\n-  FN_DEF@10..23\n+  FN@10..23\n     VISIBILITY@10..13\n       PUB_KW@10..13 \"pub\"\n     WHITESPACE@13..14 \" \"\n@@ -28,7 +28,7 @@ SOURCE_FILE@0..98\n       L_CURLY@21..22 \"{\"\n       R_CURLY@22..23 \"}\"\n   WHITESPACE@23..24 \"\\n\"\n-  FN_DEF@24..44\n+  FN@24..44\n     VISIBILITY@24..34\n       PUB_KW@24..27 \"pub\"\n       L_PAREN@27..28 \"(\"\n@@ -47,7 +47,7 @@ SOURCE_FILE@0..98\n       L_CURLY@42..43 \"{\"\n       R_CURLY@43..44 \"}\"\n   WHITESPACE@44..45 \"\\n\"\n-  FN_DEF@45..65\n+  FN@45..65\n     VISIBILITY@45..55\n       PUB_KW@45..48 \"pub\"\n       L_PAREN@48..49 \"(\"\n@@ -66,7 +66,7 @@ SOURCE_FILE@0..98\n       L_CURLY@63..64 \"{\"\n       R_CURLY@64..65 \"}\"\n   WHITESPACE@65..66 \"\\n\"\n-  FN_DEF@66..97\n+  FN@66..97\n     VISIBILITY@66..87\n       PUB_KW@66..69 \"pub\"\n       L_PAREN@69..70 \"(\""}, {"sha": "a3e091ad369afa982b4cf55193951ea9aa495b0b", "filename": "crates/ra_syntax/test_data/parser/ok/0017_attr_trailing_comma.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0017_attr_trailing_comma.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..23\n-  FN_DEF@0..22\n+  FN@0..22\n     ATTR@0..10\n       POUND@0..1 \"#\"\n       L_BRACK@1..2 \"[\""}, {"sha": "5524efaafedd4ed9730a96a35219d4e60eef507f", "filename": "crates/ra_syntax/test_data/parser/ok/0021_extern_fn.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0021_extern_fn.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..71\n-  FN_DEF@0..19\n+  FN@0..19\n     ABI@0..6\n       EXTERN_KW@0..6 \"extern\"\n     WHITESPACE@6..7 \" \"\n@@ -16,7 +16,7 @@ SOURCE_FILE@0..71\n       WHITESPACE@17..18 \"\\n\"\n       R_CURLY@18..19 \"}\"\n   WHITESPACE@19..21 \"\\n\\n\"\n-  FN_DEF@21..44\n+  FN@21..44\n     ABI@21..31\n       EXTERN_KW@21..27 \"extern\"\n       WHITESPACE@27..28 \" \"\n@@ -35,7 +35,7 @@ SOURCE_FILE@0..71\n       WHITESPACE@42..43 \"\\n\"\n       R_CURLY@43..44 \"}\"\n   WHITESPACE@44..46 \"\\n\\n\"\n-  FN_DEF@46..70\n+  FN@46..70\n     ABI@46..57\n       EXTERN_KW@46..52 \"extern\"\n       WHITESPACE@52..53 \" \""}, {"sha": "bb6527b484ab73d48dacc01502762172ce26237f", "filename": "crates/ra_syntax/test_data/parser/ok/0025_extern_fn_in_block.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0025_extern_fn_in_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..35\n-  FN_DEF@0..34\n+  FN@0..34\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7\n@@ -11,7 +11,7 @@ SOURCE_FILE@0..35\n     BLOCK_EXPR@10..34\n       L_CURLY@10..11 \"{\"\n       WHITESPACE@11..16 \"\\n    \"\n-      FN_DEF@16..32\n+      FN@16..32\n         ABI@16..22\n           EXTERN_KW@16..22 \"extern\"\n         WHITESPACE@22..23 \" \""}, {"sha": "5bcf54deb696e2bb6fc53dd433d6b80e06bd1b7a", "filename": "crates/ra_syntax/test_data/parser/ok/0026_const_fn_in_block.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0026_const_fn_in_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..34\n-  FN_DEF@0..33\n+  FN@0..33\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7\n@@ -11,7 +11,7 @@ SOURCE_FILE@0..34\n     BLOCK_EXPR@10..33\n       L_CURLY@10..11 \"{\"\n       WHITESPACE@11..16 \"\\n    \"\n-      FN_DEF@16..31\n+      FN@16..31\n         CONST_KW@16..21 \"const\"\n         WHITESPACE@21..22 \" \"\n         FN_KW@22..24 \"fn\""}, {"sha": "a7cc122951feb7a4dfeadbb90a033dd372dacdad", "filename": "crates/ra_syntax/test_data/parser/ok/0027_unsafe_fn_in_block.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0027_unsafe_fn_in_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..53\n-  FN_DEF@0..52\n+  FN@0..52\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7\n@@ -11,7 +11,7 @@ SOURCE_FILE@0..53\n     BLOCK_EXPR@10..52\n       L_CURLY@10..11 \"{\"\n       WHITESPACE@11..16 \"\\n    \"\n-      FN_DEF@16..32\n+      FN@16..32\n         UNSAFE_KW@16..22 \"unsafe\"\n         WHITESPACE@22..23 \" \"\n         FN_KW@23..25 \"fn\""}, {"sha": "efe0184848bb9ebdeeaf7453a17e39c03706ba0e", "filename": "crates/ra_syntax/test_data/parser/ok/0028_operator_binding_power.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0028_operator_binding_power.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..248\n-  FN_DEF@0..247\n+  FN@0..247\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..16"}, {"sha": "47e46f009735ab8f36cf760bdc3fc66dd097dc3b", "filename": "crates/ra_syntax/test_data/parser/ok/0029_range_forms.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0029_range_forms.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..153\n-  FN_DEF@0..152\n+  FN@0..152\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "93f76614909e668fb024105be30cb12e55af71ea", "filename": "crates/ra_syntax/test_data/parser/ok/0030_string_suffixes.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_string_suffixes.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..112\n-  FN_DEF@0..111\n+  FN@0..111\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "4bcf07ffbb99c03f66c58b4e8944d0d2427b2616", "filename": "crates/ra_syntax/test_data/parser/ok/0030_traits.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0030_traits.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ SOURCE_FILE@0..96\n     ASSOC_ITEM_LIST@15..36\n       L_CURLY@15..16 \"{\"\n       WHITESPACE@16..21 \"\\n    \"\n-      FN_DEF@21..34\n+      FN@21..34\n         FN_KW@21..23 \"fn\"\n         WHITESPACE@23..24 \" \"\n         NAME@24..31\n@@ -29,7 +29,7 @@ SOURCE_FILE@0..96\n     ASSOC_ITEM_LIST@58..95\n       L_CURLY@58..59 \"{\"\n       WHITESPACE@59..64 \"\\n    \"\n-      FN_DEF@64..93\n+      FN@64..93\n         FN_KW@64..66 \"fn\"\n         WHITESPACE@66..67 \" \"\n         NAME@67..79"}, {"sha": "0509f75042c3f6023308082a72f0e0dd7f9162e0", "filename": "crates/ra_syntax/test_data/parser/ok/0031_extern.rast", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0031_extern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -6,7 +6,7 @@ SOURCE_FILE@0..1598\n     EXTERN_ITEM_LIST@7..1597\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      FN_DEF@13..87\n+      FN@13..87\n         VISIBILITY@13..16\n           PUB_KW@13..16 \"pub\"\n         WHITESPACE@16..17 \" \"\n@@ -69,7 +69,7 @@ SOURCE_FILE@0..1598\n                   IDENT@81..86 \"c_int\"\n         SEMICOLON@86..87 \";\"\n       WHITESPACE@87..92 \"\\n    \"\n-      FN_DEF@92..167\n+      FN@92..167\n         VISIBILITY@92..95\n           PUB_KW@92..95 \"pub\"\n         WHITESPACE@95..96 \" \"\n@@ -134,7 +134,7 @@ SOURCE_FILE@0..1598\n                   IDENT@161..166 \"c_int\"\n         SEMICOLON@166..167 \";\"\n       WHITESPACE@167..172 \"\\n    \"\n-      FN_DEF@172..276\n+      FN@172..276\n         VISIBILITY@172..175\n           PUB_KW@172..175 \"pub\"\n         WHITESPACE@175..176 \" \"\n@@ -199,7 +199,7 @@ SOURCE_FILE@0..1598\n                   IDENT@270..275 \"c_int\"\n         SEMICOLON@275..276 \";\"\n       WHITESPACE@276..281 \"\\n    \"\n-      FN_DEF@281..341\n+      FN@281..341\n         VISIBILITY@281..284\n           PUB_KW@281..284 \"pub\"\n         WHITESPACE@284..285 \" \"\n@@ -248,7 +248,7 @@ SOURCE_FILE@0..1598\n                   IDENT@335..340 \"c_int\"\n         SEMICOLON@340..341 \";\"\n       WHITESPACE@341..346 \"\\n    \"\n-      FN_DEF@346..469\n+      FN@346..469\n         VISIBILITY@346..349\n           PUB_KW@346..349 \"pub\"\n         WHITESPACE@349..350 \" \"\n@@ -317,7 +317,7 @@ SOURCE_FILE@0..1598\n                   IDENT@463..468 \"c_int\"\n         SEMICOLON@468..469 \";\"\n       WHITESPACE@469..474 \"\\n    \"\n-      FN_DEF@474..691\n+      FN@474..691\n         VISIBILITY@474..477\n           PUB_KW@474..477 \"pub\"\n         WHITESPACE@477..478 \" \"\n@@ -416,7 +416,7 @@ SOURCE_FILE@0..1598\n                   IDENT@685..690 \"c_int\"\n         SEMICOLON@690..691 \";\"\n       WHITESPACE@691..696 \"\\n    \"\n-      FN_DEF@696..864\n+      FN@696..864\n         VISIBILITY@696..699\n           PUB_KW@696..699 \"pub\"\n         WHITESPACE@699..700 \" \"\n@@ -510,7 +510,7 @@ SOURCE_FILE@0..1598\n                   IDENT@858..863 \"c_int\"\n         SEMICOLON@863..864 \";\"\n       WHITESPACE@864..869 \"\\n    \"\n-      FN_DEF@869..992\n+      FN@869..992\n         VISIBILITY@869..872\n           PUB_KW@869..872 \"pub\"\n         WHITESPACE@872..873 \" \"\n@@ -579,7 +579,7 @@ SOURCE_FILE@0..1598\n                   IDENT@986..991 \"c_int\"\n         SEMICOLON@991..992 \";\"\n       WHITESPACE@992..997 \"\\n    \"\n-      FN_DEF@997..1173\n+      FN@997..1173\n         VISIBILITY@997..1000\n           PUB_KW@997..1000 \"pub\"\n         WHITESPACE@1000..1001 \" \"\n@@ -690,7 +690,7 @@ SOURCE_FILE@0..1598\n                   IDENT@1165..1172 \"ssize_t\"\n         SEMICOLON@1172..1173 \";\"\n       WHITESPACE@1173..1178 \"\\n    \"\n-      FN_DEF@1178..1289\n+      FN@1178..1289\n         VISIBILITY@1178..1181\n           PUB_KW@1178..1181 \"pub\"\n         WHITESPACE@1181..1182 \" \"\n@@ -771,7 +771,7 @@ SOURCE_FILE@0..1598\n                   IDENT@1281..1288 \"ssize_t\"\n         SEMICOLON@1288..1289 \";\"\n       WHITESPACE@1289..1294 \"\\n    \"\n-      FN_DEF@1294..1481\n+      FN@1294..1481\n         VISIBILITY@1294..1297\n           PUB_KW@1294..1297 \"pub\"\n         WHITESPACE@1297..1298 \" \"\n@@ -888,7 +888,7 @@ SOURCE_FILE@0..1598\n                   IDENT@1473..1480 \"ssize_t\"\n         SEMICOLON@1480..1481 \";\"\n       WHITESPACE@1481..1486 \"\\n    \"\n-      FN_DEF@1486..1595\n+      FN@1486..1595\n         VISIBILITY@1486..1489\n           PUB_KW@1486..1489 \"pub\"\n         WHITESPACE@1489..1490 \" \""}, {"sha": "1b2325a2d532c5e3e0a45bc3bf0483854aa28bd7", "filename": "crates/ra_syntax/test_data/parser/ok/0032_where_for.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0032_where_for.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..116\n-  FN_DEF@0..115\n+  FN@0..115\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..21"}, {"sha": "b3f29638c831314724eb665ecff2f94fe1289c64", "filename": "crates/ra_syntax/test_data/parser/ok/0033_label_break.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0033_label_break.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..506\n-  FN_DEF@0..505\n+  FN@0..505\n     COMMENT@0..33 \"// format with label  ...\"\n     WHITESPACE@33..34 \"\\n\"\n     FN_KW@34..36 \"fn\""}, {"sha": "5ad8c570d26db907897e909582731688b84d11f7", "filename": "crates/ra_syntax/test_data/parser/ok/0034_crate_path_in_call.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0034_crate_path_in_call.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..62\n-  FN_DEF@0..61\n+  FN@0..61\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "2e36b54bcc3699f4ac49bc49598d9ae8238e7b9e", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -120,7 +120,7 @@ SOURCE_FILE@0..3813\n   WHITESPACE@447..449 \"\\n\\n\"\n   COMMENT@449..518 \"// Just a grab bag of ...\"\n   WHITESPACE@518..520 \"\\n\\n\"\n-  FN_DEF@520..572\n+  FN@520..572\n     FN_KW@520..522 \"fn\"\n     WHITESPACE@522..523 \" \"\n     NAME@523..530\n@@ -166,7 +166,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@570..571 \" \"\n       R_CURLY@571..572 \"}\"\n   WHITESPACE@572..574 \"\\n\\n\"\n-  FN_DEF@574..624\n+  FN@574..624\n     FN_KW@574..576 \"fn\"\n     WHITESPACE@576..577 \" \"\n     NAME@577..582\n@@ -178,7 +178,7 @@ SOURCE_FILE@0..3813\n     BLOCK_EXPR@585..624\n       L_CURLY@585..586 \"{\"\n       WHITESPACE@586..591 \"\\n    \"\n-      FN_DEF@591..607\n+      FN@591..607\n         FN_KW@591..593 \"fn\"\n         WHITESPACE@593..594 \" \"\n         NAME@594..595\n@@ -217,7 +217,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@622..623 \"\\n\"\n       R_CURLY@623..624 \"}\"\n   WHITESPACE@624..626 \"\\n\\n\"\n-  FN_DEF@626..816\n+  FN@626..816\n     FN_KW@626..628 \"fn\"\n     WHITESPACE@628..629 \" \"\n     NAME@629..633\n@@ -229,7 +229,7 @@ SOURCE_FILE@0..3813\n     BLOCK_EXPR@636..816\n       L_CURLY@636..637 \"{\"\n       WHITESPACE@637..642 \"\\n    \"\n-      FN_DEF@642..720\n+      FN@642..720\n         FN_KW@642..644 \"fn\"\n         WHITESPACE@644..645 \" \"\n         NAME@645..648\n@@ -407,7 +407,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@814..815 \"\\n\"\n       R_CURLY@815..816 \"}\"\n   WHITESPACE@816..818 \"\\n\\n\"\n-  FN_DEF@818..1322\n+  FN@818..1322\n     FN_KW@818..820 \"fn\"\n     WHITESPACE@820..821 \" \"\n     NAME@821..832\n@@ -572,7 +572,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@1320..1321 \"\\n\"\n       R_CURLY@1321..1322 \"}\"\n   WHITESPACE@1322..1324 \"\\n\\n\"\n-  FN_DEF@1324..1539\n+  FN@1324..1539\n     FN_KW@1324..1326 \"fn\"\n     WHITESPACE@1326..1327 \" \"\n     NAME@1327..1334\n@@ -809,7 +809,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@1537..1538 \"\\n\"\n       R_CURLY@1538..1539 \"}\"\n   WHITESPACE@1539..1541 \"\\n\\n\"\n-  FN_DEF@1541..1741\n+  FN@1541..1741\n     FN_KW@1541..1543 \"fn\"\n     WHITESPACE@1543..1544 \" \"\n     NAME@1544..1557\n@@ -830,7 +830,7 @@ SOURCE_FILE@0..3813\n     BLOCK_EXPR@1569..1741\n       L_CURLY@1569..1570 \"{\"\n       WHITESPACE@1570..1575 \"\\n    \"\n-      FN_DEF@1575..1598\n+      FN@1575..1598\n         FN_KW@1575..1577 \"fn\"\n         WHITESPACE@1577..1578 \" \"\n         NAME@1578..1579\n@@ -988,7 +988,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@1739..1740 \"\\n\"\n       R_CURLY@1740..1741 \"}\"\n   WHITESPACE@1741..1743 \"\\n\\n\"\n-  FN_DEF@1743..1904\n+  FN@1743..1904\n     FN_KW@1743..1745 \"fn\"\n     WHITESPACE@1745..1746 \" \"\n     NAME@1746..1755\n@@ -1131,7 +1131,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@1902..1903 \"\\n\"\n       R_CURLY@1903..1904 \"}\"\n   WHITESPACE@1904..1906 \"\\n\\n\"\n-  FN_DEF@1906..1960\n+  FN@1906..1960\n     FN_KW@1906..1908 \"fn\"\n     WHITESPACE@1908..1909 \" \"\n     NAME@1909..1921\n@@ -1166,7 +1166,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@1958..1959 \" \"\n       R_CURLY@1959..1960 \"}\"\n   WHITESPACE@1960..1962 \"\\n\\n\"\n-  FN_DEF@1962..2198\n+  FN@1962..2198\n     FN_KW@1962..1964 \"fn\"\n     WHITESPACE@1964..1965 \" \"\n     NAME@1965..1969\n@@ -1284,7 +1284,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@2196..2197 \"\\n\"\n       R_CURLY@2197..2198 \"}\"\n   WHITESPACE@2198..2200 \"\\n\\n\"\n-  FN_DEF@2200..2693\n+  FN@2200..2693\n     FN_KW@2200..2202 \"fn\"\n     WHITESPACE@2202..2203 \" \"\n     NAME@2203..2205\n@@ -1468,7 +1468,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@2691..2692 \"\\n\"\n       R_CURLY@2692..2693 \"}\"\n   WHITESPACE@2693..2695 \"\\n\\n\"\n-  FN_DEF@2695..2832\n+  FN@2695..2832\n     FN_KW@2695..2697 \"fn\"\n     WHITESPACE@2697..2698 \" \"\n     NAME@2698..2703\n@@ -1548,7 +1548,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@2830..2831 \"\\n\"\n       R_CURLY@2831..2832 \"}\"\n   WHITESPACE@2832..2834 \"\\n\\n\"\n-  FN_DEF@2834..2906\n+  FN@2834..2906\n     FN_KW@2834..2836 \"fn\"\n     WHITESPACE@2836..2837 \" \"\n     NAME@2837..2842\n@@ -1599,7 +1599,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@2904..2905 \"\\n\"\n       R_CURLY@2905..2906 \"}\"\n   WHITESPACE@2906..2908 \"\\n\\n\"\n-  FN_DEF@2908..3042\n+  FN@2908..3042\n     FN_KW@2908..2910 \"fn\"\n     WHITESPACE@2910..2911 \" \"\n     NAME@2911..2929\n@@ -1722,7 +1722,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@3040..3041 \"\\n\"\n       R_CURLY@3041..3042 \"}\"\n   WHITESPACE@3042..3044 \"\\n\\n\"\n-  FN_DEF@3044..3514\n+  FN@3044..3514\n     FN_KW@3044..3046 \"fn\"\n     WHITESPACE@3046..3047 \" \"\n     NAME@3047..3057\n@@ -2056,7 +2056,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@3512..3513 \"\\n\"\n       R_CURLY@3513..3514 \"}\"\n   WHITESPACE@3514..3516 \"\\n\\n\"\n-  FN_DEF@3516..3552\n+  FN@3516..3552\n     FN_KW@3516..3518 \"fn\"\n     WHITESPACE@3518..3519 \" \"\n     NAME@3519..3525\n@@ -2090,7 +2090,7 @@ SOURCE_FILE@0..3813\n       WHITESPACE@3550..3551 \"\\n\"\n       R_CURLY@3551..3552 \"}\"\n   WHITESPACE@3552..3554 \"\\n\\n\"\n-  FN_DEF@3554..3812\n+  FN@3554..3812\n     VISIBILITY@3554..3557\n       PUB_KW@3554..3557 \"pub\"\n     WHITESPACE@3557..3558 \" \""}, {"sha": "a5f09e364547637ec1bf232bea8035ad59f83de2", "filename": "crates/ra_syntax/test_data/parser/ok/0036_fully_qualified.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0036_fully_qualified.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,7 +1,7 @@\n SOURCE_FILE@0..157\n   COMMENT@0..60 \"// https://github.com ...\"\n   WHITESPACE@60..62 \"\\n\\n\"\n-  FN_DEF@62..156\n+  FN@62..156\n     VISIBILITY@62..65\n       PUB_KW@62..65 \"pub\"\n     WHITESPACE@65..66 \" \""}, {"sha": "22168eaf1acbdaba8681103660f35b33c153db3a", "filename": "crates/ra_syntax/test_data/parser/ok/0038_where_pred_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0038_where_pred_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..34\n-  FN_DEF@0..34\n+  FN@0..34\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "68a366354e6f7216545f43096e8bde731cc3774c", "filename": "crates/ra_syntax/test_data/parser/ok/0039_raw_fn_item.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0039_raw_fn_item.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..15\n-  FN_DEF@0..14\n+  FN@0..14\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..8"}, {"sha": "92ede8ccb65b3027f61885a3b4b0f8966f921e90", "filename": "crates/ra_syntax/test_data/parser/ok/0041_raw_keywords.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0041_raw_keywords.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..59\n-  FN_DEF@0..59\n+  FN@0..59\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "4f0c68822038f9159573d86860b9231bd253511d", "filename": "crates/ra_syntax/test_data/parser/ok/0042_ufcs_call_list.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0042_ufcs_call_list.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -20,7 +20,7 @@ SOURCE_FILE@0..199\n     ASSOC_ITEM_LIST@84..141\n       L_CURLY@84..85 \"{\"\n       WHITESPACE@85..90 \"\\n    \"\n-      FN_DEF@90..139\n+      FN@90..139\n         FN_KW@90..92 \"fn\"\n         WHITESPACE@92..93 \" \"\n         NAME@93..96\n@@ -55,7 +55,7 @@ SOURCE_FILE@0..199\n       WHITESPACE@139..140 \"\\n\"\n       R_CURLY@140..141 \"}\"\n   WHITESPACE@141..143 \"\\n\\n\"\n-  FN_DEF@143..161\n+  FN@143..161\n     FN_KW@143..145 \"fn\"\n     WHITESPACE@145..146 \" \"\n     NAME@146..149\n@@ -78,7 +78,7 @@ SOURCE_FILE@0..199\n       L_CURLY@159..160 \"{\"\n       R_CURLY@160..161 \"}\"\n   WHITESPACE@161..163 \"\\n\\n\"\n-  FN_DEF@163..198\n+  FN@163..198\n     FN_KW@163..165 \"fn\"\n     WHITESPACE@165..166 \" \"\n     NAME@166..170"}, {"sha": "22eb22e3c4ddb3b51e5b9096526e92fcd96ef191", "filename": "crates/ra_syntax/test_data/parser/ok/0043_complex_assignment.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0043_complex_assignment.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -30,7 +30,7 @@ SOURCE_FILE@0..160\n       WHITESPACE@88..89 \" \"\n       R_CURLY@89..90 \"}\"\n   WHITESPACE@90..92 \"\\n\\n\"\n-  FN_DEF@92..159\n+  FN@92..159\n     FN_KW@92..94 \"fn\"\n     WHITESPACE@94..95 \" \"\n     NAME@95..98"}, {"sha": "c9e6d88eb5f49fa039b042b9adfea80c7edd3bb5", "filename": "crates/ra_syntax/test_data/parser/ok/0044_let_attrs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0044_let_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..166\n-  FN_DEF@0..165\n+  FN@0..165\n     COMMENT@0..60 \"// https://github.com ...\"\n     WHITESPACE@60..61 \"\\n\"\n     FN_KW@61..63 \"fn\""}, {"sha": "5ebc53618c91e02f25024b32303a5eb9b68adfe6", "filename": "crates/ra_syntax/test_data/parser/ok/0045_block_inner_attrs.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0045_block_inner_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..686\n-  FN_DEF@0..461\n+  FN@0..461\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..8\n@@ -101,7 +101,7 @@ SOURCE_FILE@0..686\n     ASSOC_ITEM_LIST@538..685\n       L_CURLY@538..539 \"{\"\n       WHITESPACE@539..544 \"\\n    \"\n-      FN_DEF@544..683\n+      FN@544..683\n         FN_KW@544..546 \"fn\"\n         WHITESPACE@546..547 \" \"\n         NAME@547..558"}, {"sha": "29a5d48e6400e1eac5f6eb5eca65b8855ba29d5c", "filename": "crates/ra_syntax/test_data/parser/ok/0047_minus_in_inner_pattern.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0047_minus_in_inner_pattern.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,7 +1,7 @@\n SOURCE_FILE@0..395\n   COMMENT@0..60 \"// https://github.com ...\"\n   WHITESPACE@60..62 \"\\n\\n\"\n-  FN_DEF@62..341\n+  FN@62..341\n     FN_KW@62..64 \"fn\"\n     WHITESPACE@64..65 \" \"\n     NAME@65..69\n@@ -288,7 +288,7 @@ SOURCE_FILE@0..395\n       WHITESPACE@365..366 \"\\n\"\n       R_CURLY@366..367 \"}\"\n   WHITESPACE@367..369 \"\\n\\n\"\n-  FN_DEF@369..394\n+  FN@369..394\n     FN_KW@369..371 \"fn\"\n     WHITESPACE@371..372 \" \"\n     NAME@372..375"}, {"sha": "662576e5f41c78f03010fc26bffb47d921c76050", "filename": "crates/ra_syntax/test_data/parser/ok/0048_compound_assignment.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0048_compound_assignment.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,7 +1,7 @@\n SOURCE_FILE@0..257\n   COMMENT@0..58 \"// https://github.com ...\"\n   WHITESPACE@58..60 \"\\n\\n\"\n-  FN_DEF@60..256\n+  FN@60..256\n     FN_KW@60..62 \"fn\"\n     WHITESPACE@62..63 \" \"\n     NAME@63..82"}, {"sha": "57ecad3cfa51ab12cfd5f73fb8028152fa5fafbe", "filename": "crates/ra_syntax/test_data/parser/ok/0049_async_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0049_async_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..47\n-  FN_DEF@0..45\n+  FN@0..45\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "798e81ca652c1b1c2dcc5a19625d8f8e6557c2f3", "filename": "crates/ra_syntax/test_data/parser/ok/0050_async_block_as_argument.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0050_async_block_as_argument.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..95\n-  FN_DEF@0..52\n+  FN@0..52\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -52,7 +52,7 @@ SOURCE_FILE@0..95\n       L_CURLY@50..51 \"{\"\n       R_CURLY@51..52 \"}\"\n   WHITESPACE@52..54 \"\\n\\n\"\n-  FN_DEF@54..94\n+  FN@54..94\n     FN_KW@54..56 \"fn\"\n     WHITESPACE@56..57 \" \"\n     NAME@57..61"}, {"sha": "9a173b00284eb86df1ab58960b3cb4eb28aa31b0", "filename": "crates/ra_syntax/test_data/parser/ok/0051_parameter_attrs.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0051_parameter_attrs.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..519\n-  FN_DEF@0..37\n+  FN@0..37\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..5\n@@ -41,7 +41,7 @@ SOURCE_FILE@0..519\n       L_CURLY@35..36 \"{\"\n       R_CURLY@36..37 \"}\"\n   WHITESPACE@37..38 \"\\n\"\n-  FN_DEF@38..62\n+  FN@38..62\n     FN_KW@38..40 \"fn\"\n     WHITESPACE@40..41 \" \"\n     NAME@41..43\n@@ -83,7 +83,7 @@ SOURCE_FILE@0..519\n     EXTERN_ITEM_LIST@75..128\n       L_CURLY@75..76 \"{\"\n       WHITESPACE@76..77 \" \"\n-      FN_DEF@77..126\n+      FN@77..126\n         FN_KW@77..79 \"fn\"\n         WHITESPACE@79..80 \" \"\n         NAME@80..86\n@@ -132,7 +132,7 @@ SOURCE_FILE@0..519\n       WHITESPACE@126..127 \" \"\n       R_CURLY@127..128 \"}\"\n   WHITESPACE@128..130 \"\\n\\n\"\n-  FN_DEF@130..172\n+  FN@130..172\n     FN_KW@130..132 \"fn\"\n     WHITESPACE@132..133 \" \"\n     NAME@133..136\n@@ -195,7 +195,7 @@ SOURCE_FILE@0..519\n     ASSOC_ITEM_LIST@184..236\n       L_CURLY@184..185 \"{\"\n       WHITESPACE@185..190 \"\\n    \"\n-      FN_DEF@190..234\n+      FN@190..234\n         FN_KW@190..192 \"fn\"\n         WHITESPACE@192..193 \" \"\n         NAME@193..196\n@@ -263,7 +263,7 @@ SOURCE_FILE@0..519\n     ASSOC_ITEM_LIST@245..519\n       L_CURLY@245..246 \"{\"\n       WHITESPACE@246..252 \"\\n     \"\n-      FN_DEF@252..277\n+      FN@252..277\n         FN_KW@252..254 \"fn\"\n         WHITESPACE@254..255 \" \"\n         NAME@255..256\n@@ -287,7 +287,7 @@ SOURCE_FILE@0..519\n           L_CURLY@275..276 \"{\"\n           R_CURLY@276..277 \"}\"\n       WHITESPACE@277..283 \"\\n     \"\n-      FN_DEF@283..305\n+      FN@283..305\n         FN_KW@283..285 \"fn\"\n         WHITESPACE@285..286 \" \"\n         NAME@286..288\n@@ -311,7 +311,7 @@ SOURCE_FILE@0..519\n           L_CURLY@303..304 \"{\"\n           R_CURLY@304..305 \"}\"\n       WHITESPACE@305..311 \"\\n     \"\n-      FN_DEF@311..334\n+      FN@311..334\n         FN_KW@311..313 \"fn\"\n         WHITESPACE@313..314 \" \"\n         NAME@314..316\n@@ -336,7 +336,7 @@ SOURCE_FILE@0..519\n           L_CURLY@332..333 \"{\"\n           R_CURLY@333..334 \"}\"\n       WHITESPACE@334..340 \"\\n     \"\n-      FN_DEF@340..371\n+      FN@340..371\n         FN_KW@340..342 \"fn\"\n         WHITESPACE@342..343 \" \"\n         NAME@343..345\n@@ -368,7 +368,7 @@ SOURCE_FILE@0..519\n           L_CURLY@369..370 \"{\"\n           R_CURLY@370..371 \"}\"\n       WHITESPACE@371..377 \"\\n     \"\n-      FN_DEF@377..407\n+      FN@377..407\n         FN_KW@377..379 \"fn\"\n         WHITESPACE@379..380 \" \"\n         NAME@380..382\n@@ -400,7 +400,7 @@ SOURCE_FILE@0..519\n           L_CURLY@405..406 \"{\"\n           R_CURLY@406..407 \"}\"\n       WHITESPACE@407..413 \"\\n     \"\n-      FN_DEF@413..447\n+      FN@413..447\n         FN_KW@413..415 \"fn\"\n         WHITESPACE@415..416 \" \"\n         NAME@416..418\n@@ -434,7 +434,7 @@ SOURCE_FILE@0..519\n           L_CURLY@445..446 \"{\"\n           R_CURLY@446..447 \"}\"\n       WHITESPACE@447..453 \"\\n     \"\n-      FN_DEF@453..480\n+      FN@453..480\n         FN_KW@453..455 \"fn\"\n         WHITESPACE@455..456 \" \"\n         NAME@456..457\n@@ -465,7 +465,7 @@ SOURCE_FILE@0..519\n           L_CURLY@478..479 \"{\"\n           R_CURLY@479..480 \"}\"\n       WHITESPACE@480..486 \"\\n     \"\n-      FN_DEF@486..517\n+      FN@486..517\n         FN_KW@486..488 \"fn\"\n         WHITESPACE@488..489 \" \"\n         NAME@489..490"}, {"sha": "a3000039869c64e1d05ab269534c90c2fc5e2f4c", "filename": "crates/ra_syntax/test_data/parser/ok/0052_for_range_block.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0052_for_range_block.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..80\n-  FN_DEF@0..79\n+  FN@0..79\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "e3997ac5b82620efe8f257bc1fe7ee6e2f09c0ef", "filename": "crates/ra_syntax/test_data/parser/ok/0054_qual_path_in_type_arg.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0054_qual_path_in_type_arg.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..88\n-  FN_DEF@0..26\n+  FN@0..26\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4\n@@ -35,7 +35,7 @@ SOURCE_FILE@0..88\n       L_CURLY@24..25 \"{\"\n       R_CURLY@25..26 \"}\"\n   WHITESPACE@26..28 \"\\n\\n\"\n-  FN_DEF@28..56\n+  FN@28..56\n     FN_KW@28..30 \"fn\"\n     WHITESPACE@30..31 \" \"\n     NAME@31..32\n@@ -77,7 +77,7 @@ SOURCE_FILE@0..88\n       L_CURLY@54..55 \"{\"\n       R_CURLY@55..56 \"}\"\n   WHITESPACE@56..58 \"\\n\\n\"\n-  FN_DEF@58..87\n+  FN@58..87\n     FN_KW@58..60 \"fn\"\n     WHITESPACE@60..61 \" \"\n     NAME@61..62"}, {"sha": "7447d516ed10760673537b4b968c11f2c10c98a8", "filename": "crates/ra_syntax/test_data/parser/ok/0055_dot_dot_dot.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0055_dot_dot_dot.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..49\n-  TYPE_ALIAS_DEF@0..12\n+  TYPE_ALIAS@0..12\n     TYPE_KW@0..4 \"type\"\n     WHITESPACE@4..5 \" \"\n     NAME@5..6\n@@ -12,7 +12,7 @@ SOURCE_FILE@0..49\n       R_PAREN@10..11 \")\"\n     SEMICOLON@11..12 \";\"\n   WHITESPACE@12..14 \"\\n\\n\"\n-  FN_DEF@14..48\n+  FN@14..48\n     FN_KW@14..16 \"fn\"\n     WHITESPACE@16..17 \" \"\n     NAME@17..21"}, {"sha": "3ef916e5565c7039b7dd41fa9fd6d1b14aa655fd", "filename": "crates/ra_syntax/test_data/parser/ok/0056_neq_in_type.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0056_neq_in_type.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..71\n-  FN_DEF@0..70\n+  FN@0..70\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "53410a1eee2aa19bef7a007cb5353398ebbaffa2", "filename": "crates/ra_syntax/test_data/parser/ok/0057_loop_in_call.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0057_loop_in_call.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..50\n-  FN_DEF@0..17\n+  FN@0..17\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6\n@@ -23,7 +23,7 @@ SOURCE_FILE@0..50\n       L_CURLY@15..16 \"{\"\n       R_CURLY@16..17 \"}\"\n   WHITESPACE@17..19 \"\\n\\n\"\n-  FN_DEF@19..50\n+  FN@19..50\n     FN_KW@19..21 \"fn\"\n     WHITESPACE@21..22 \" \"\n     NAME@22..26"}, {"sha": "a1dfd58f26bee62738aa8b29a920209fdc879383", "filename": "crates/ra_syntax/test_data/parser/ok/0058_unary_expr_precedence.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0058_unary_expr_precedence.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..79\n-  FN_DEF@0..78\n+  FN@0..78\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..6"}, {"sha": "767b516a25de80cd7e9cddd7f712deea80eb9c5f", "filename": "crates/ra_syntax/test_data/parser/ok/0059_loops_in_parens.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0059_loops_in_parens.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..105\n-  FN_DEF@0..104\n+  FN@0..104\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "1fd1a288845595f7a9fb0323aebc48689943af5b", "filename": "crates/ra_syntax/test_data/parser/ok/0060_as_range.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0060_as_range.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..56\n-  FN_DEF@0..55\n+  FN@0..55\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "ba49c115b5a6fb4ab97ead08e68d3edbe4d6df49", "filename": "crates/ra_syntax/test_data/parser/ok/0061_match_full_range.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0061_match_full_range.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..35\n-  FN_DEF@0..34\n+  FN@0..34\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..7"}, {"sha": "0c22c31a4f62898e5dfdb15b243ba075300181d3", "filename": "crates/ra_syntax/test_data/parser/ok/0062_macro_2.0.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -51,7 +51,7 @@ SOURCE_FILE@0..349\n         WHITESPACE@91..92 \"\\n\"\n         R_CURLY@92..93 \"}\"\n   WHITESPACE@93..95 \"\\n\\n\"\n-  FN_DEF@95..348\n+  FN@95..348\n     ATTR@95..102\n       POUND@95..96 \"#\"\n       L_BRACK@96..97 \"[\""}, {"sha": "a87bbf4eb97395061aa64579233cfaf23f141078", "filename": "crates/ra_syntax/test_data/parser/ok/0063_trait_fn_patterns.rast", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_trait_fn_patterns.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ SOURCE_FILE@0..170\n     ASSOC_ITEM_LIST@8..169\n       L_CURLY@8..9 \"{\"\n       WHITESPACE@9..14 \"\\n    \"\n-      FN_DEF@14..46\n+      FN@14..46\n         FN_KW@14..16 \"fn\"\n         WHITESPACE@16..17 \" \"\n         NAME@17..19\n@@ -50,7 +50,7 @@ SOURCE_FILE@0..170\n           L_CURLY@44..45 \"{\"\n           R_CURLY@45..46 \"}\"\n       WHITESPACE@46..51 \"\\n    \"\n-      FN_DEF@51..74\n+      FN@51..74\n         FN_KW@51..53 \"fn\"\n         WHITESPACE@53..54 \" \"\n         NAME@54..56\n@@ -92,7 +92,7 @@ SOURCE_FILE@0..170\n           L_CURLY@72..73 \"{\"\n           R_CURLY@73..74 \"}\"\n       WHITESPACE@74..79 \"\\n    \"\n-      FN_DEF@79..108\n+      FN@79..108\n         FN_KW@79..81 \"fn\"\n         WHITESPACE@81..82 \" \"\n         NAME@82..84\n@@ -123,7 +123,7 @@ SOURCE_FILE@0..170\n           L_CURLY@106..107 \"{\"\n           R_CURLY@107..108 \"}\"\n       WHITESPACE@108..113 \"\\n    \"\n-      FN_DEF@113..135\n+      FN@113..135\n         FN_KW@113..115 \"fn\"\n         WHITESPACE@115..116 \" \"\n         NAME@116..118\n@@ -155,7 +155,7 @@ SOURCE_FILE@0..170\n           L_CURLY@133..134 \"{\"\n           R_CURLY@134..135 \"}\"\n       WHITESPACE@135..140 \"\\n    \"\n-      FN_DEF@140..167\n+      FN@140..167\n         FN_KW@140..142 \"fn\"\n         WHITESPACE@142..143 \" \"\n         NAME@143..146"}, {"sha": "7adedb02e34cc52a15e515324f1e79c63a021580", "filename": "crates/ra_syntax/test_data/parser/ok/0063_variadic_fun.rast", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0063_variadic_fun.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,7 +8,7 @@ SOURCE_FILE@0..126\n     EXTERN_ITEM_LIST@11..125\n       L_CURLY@11..12 \"{\"\n       WHITESPACE@12..17 \"\\n    \"\n-      FN_DEF@17..40\n+      FN@17..40\n         FN_KW@17..19 \"fn\"\n         WHITESPACE@19..20 \" \"\n         NAME@20..21\n@@ -37,7 +37,7 @@ SOURCE_FILE@0..126\n           R_PAREN@38..39 \")\"\n         SEMICOLON@39..40 \";\"\n       WHITESPACE@40..45 \"\\n    \"\n-      FN_DEF@45..70\n+      FN@45..70\n         FN_KW@45..47 \"fn\"\n         WHITESPACE@47..48 \" \"\n         NAME@48..49\n@@ -69,7 +69,7 @@ SOURCE_FILE@0..126\n           R_PAREN@68..69 \")\"\n         SEMICOLON@69..70 \";\"\n       WHITESPACE@70..75 \"\\n    \"\n-      FN_DEF@75..123\n+      FN@75..123\n         FN_KW@75..77 \"fn\"\n         WHITESPACE@77..78 \" \"\n         NAME@78..79"}, {"sha": "ef0eca47ccd3783efeaa976cff8582078cd2d58a", "filename": "crates/ra_syntax/test_data/parser/ok/0064_impl_fn_params.rast", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0064_impl_fn_params.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@0..137\n     ASSOC_ITEM_LIST@7..136\n       L_CURLY@7..8 \"{\"\n       WHITESPACE@8..13 \"\\n    \"\n-      FN_DEF@13..45\n+      FN@13..45\n         FN_KW@13..15 \"fn\"\n         WHITESPACE@15..16 \" \"\n         NAME@16..18\n@@ -53,7 +53,7 @@ SOURCE_FILE@0..137\n           L_CURLY@43..44 \"{\"\n           R_CURLY@44..45 \"}\"\n       WHITESPACE@45..50 \"\\n    \"\n-      FN_DEF@50..73\n+      FN@50..73\n         FN_KW@50..52 \"fn\"\n         WHITESPACE@52..53 \" \"\n         NAME@53..55\n@@ -95,7 +95,7 @@ SOURCE_FILE@0..137\n           L_CURLY@71..72 \"{\"\n           R_CURLY@72..73 \"}\"\n       WHITESPACE@73..78 \"\\n    \"\n-      FN_DEF@78..107\n+      FN@78..107\n         FN_KW@78..80 \"fn\"\n         WHITESPACE@80..81 \" \"\n         NAME@81..83\n@@ -126,7 +126,7 @@ SOURCE_FILE@0..137\n           L_CURLY@105..106 \"{\"\n           R_CURLY@106..107 \"}\"\n       WHITESPACE@107..112 \"\\n    \"\n-      FN_DEF@112..134\n+      FN@112..134\n         FN_KW@112..114 \"fn\"\n         WHITESPACE@114..115 \" \"\n         NAME@115..117"}, {"sha": "29bd38c051fa381decf92d7a22ce9bf0b4e08281", "filename": "crates/ra_syntax/test_data/parser/ok/0065_comment_newline.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_comment_newline.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_comment_newline.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_comment_newline.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..26\n-  FN_DEF@0..25\n+  FN@0..25\n     COMMENT@0..11 \"/// Example\"\n     WHITESPACE@11..13 \"\\n\\n\"\n     FN_KW@13..15 \"fn\""}, {"sha": "7996dc121a999ffc97e1427b5c48646b7ef097ba", "filename": "crates/ra_syntax/test_data/parser/ok/0065_plus_after_fn_trait_bound.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0065_plus_after_fn_trait_bound.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..40\n-  FN_DEF@0..39\n+  FN@0..39\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..4"}, {"sha": "e4c2578f6e46b3e8bd8e91527029c38f4341149e", "filename": "crates/ra_syntax/test_data/parser/ok/0067_where_for_pred.rast", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0067_where_for_pred.rast?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@0..374\n-  FN_DEF@0..55\n+  FN@0..55\n     FN_KW@0..2 \"fn\"\n     WHITESPACE@2..3 \" \"\n     NAME@3..12\n@@ -59,7 +59,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@53..54 \"\\n\"\n       R_CURLY@54..55 \"}\"\n   WHITESPACE@55..56 \"\\n\"\n-  FN_DEF@56..107\n+  FN@56..107\n     FN_KW@56..58 \"fn\"\n     WHITESPACE@58..59 \" \"\n     NAME@59..66\n@@ -110,7 +110,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@105..106 \"\\n\"\n       R_CURLY@106..107 \"}\"\n   WHITESPACE@107..108 \"\\n\"\n-  FN_DEF@108..170\n+  FN@108..170\n     FN_KW@108..110 \"fn\"\n     WHITESPACE@110..111 \" \"\n     NAME@111..121\n@@ -177,7 +177,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@168..169 \"\\n\"\n       R_CURLY@169..170 \"}\"\n   WHITESPACE@170..171 \"\\n\"\n-  FN_DEF@171..223\n+  FN@171..223\n     FN_KW@171..173 \"fn\"\n     WHITESPACE@173..174 \" \"\n     NAME@174..183\n@@ -231,7 +231,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@221..222 \"\\n\"\n       R_CURLY@222..223 \"}\"\n   WHITESPACE@223..224 \"\\n\"\n-  FN_DEF@224..300\n+  FN@224..300\n     FN_KW@224..226 \"fn\"\n     WHITESPACE@226..227 \" \"\n     NAME@227..236\n@@ -313,7 +313,7 @@ SOURCE_FILE@0..374\n       WHITESPACE@298..299 \"\\n\"\n       R_CURLY@299..300 \"}\"\n   WHITESPACE@300..301 \"\\n\"\n-  FN_DEF@301..373\n+  FN@301..373\n     FN_KW@301..303 \"fn\"\n     WHITESPACE@303..304 \" \"\n     NAME@304..314"}, {"sha": "3a0780eb5f53a4d274d4bcaa5359a0d04d23cb55", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -1095,7 +1095,7 @@ pub(crate) fn handle_call_hierarchy_prepare(\n     let RangeInfo { range: _, info: navs } = nav_info;\n     let res = navs\n         .into_iter()\n-        .filter(|it| it.kind == SyntaxKind::FN_DEF)\n+        .filter(|it| it.kind == SyntaxKind::FN)\n         .map(|it| to_proto::call_hierarchy_item(&snap, it))\n         .collect::<Result<Vec<_>>>()?;\n "}, {"sha": "34a0d039c7f27508cc55fc753f33a70ac518acc5", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -31,14 +31,14 @@ pub(crate) fn range(line_index: &LineIndex, range: TextRange) -> lsp_types::Rang\n \n pub(crate) fn symbol_kind(syntax_kind: SyntaxKind) -> lsp_types::SymbolKind {\n     match syntax_kind {\n-        SyntaxKind::FN_DEF => lsp_types::SymbolKind::Function,\n+        SyntaxKind::FN => lsp_types::SymbolKind::Function,\n         SyntaxKind::STRUCT_DEF => lsp_types::SymbolKind::Struct,\n         SyntaxKind::ENUM_DEF => lsp_types::SymbolKind::Enum,\n         SyntaxKind::ENUM_VARIANT => lsp_types::SymbolKind::EnumMember,\n         SyntaxKind::TRAIT_DEF => lsp_types::SymbolKind::Interface,\n         SyntaxKind::MACRO_CALL => lsp_types::SymbolKind::Function,\n         SyntaxKind::MODULE => lsp_types::SymbolKind::Module,\n-        SyntaxKind::TYPE_ALIAS_DEF => lsp_types::SymbolKind::TypeParameter,\n+        SyntaxKind::TYPE_ALIAS => lsp_types::SymbolKind::TypeParameter,\n         SyntaxKind::RECORD_FIELD_DEF => lsp_types::SymbolKind::Field,\n         SyntaxKind::STATIC_DEF => lsp_types::SymbolKind::Constant,\n         SyntaxKind::CONST_DEF => lsp_types::SymbolKind::Constant,"}, {"sha": "d4bc4b07c4e0cf3048f8acc53808867690f2bfd3", "filename": "docs/dev/syntax.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/docs%2Fdev%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/docs%2Fdev%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fsyntax.md?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -82,7 +82,7 @@ Points of note:\n An input like `fn f() { 90 + 2 }` might be parsed as\n \n ```\n-FN_DEF@0..17\n+FN@0..17\n   FN_KW@0..2 \"fn\"\n   WHITESPACE@2..3 \" \"\n   NAME@3..4\n@@ -342,7 +342,7 @@ pub struct FnDef {\n impl AstNode for FnDef {\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         match kind {\n-            FN_DEF => Some(FnDef { syntax }),\n+            FN => Some(FnDef { syntax }),\n             _ => None,\n         }\n     }"}, {"sha": "e66e96d64952a207f61f5bc98c1d3e2cbe10aa3f", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -96,7 +96,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"STRUCT_DEF\",\n         \"UNION_DEF\",\n         \"ENUM_DEF\",\n-        \"FN_DEF\",\n+        \"FN\",\n         \"RET_TYPE\",\n         \"EXTERN_CRATE\",\n         \"MODULE\",\n@@ -105,7 +105,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"CONST_DEF\",\n         \"TRAIT_DEF\",\n         \"IMPL_DEF\",\n-        \"TYPE_ALIAS_DEF\",\n+        \"TYPE_ALIAS\",\n         \"MACRO_CALL\",\n         \"TOKEN_TREE\",\n         \"MACRO_DEF\","}, {"sha": "072527208c3b3f283d5d4bd81f3eb70b87cb7371", "filename": "xtask/src/codegen/gen_syntax.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_syntax.rs?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -471,6 +471,7 @@ impl Field {\n                     \"::\" => \"coloncolon\",\n                     \"#\" => \"pound\",\n                     \"?\" => \"question_mark\",\n+                    \",\" => \"comma\",\n                     _ => name,\n                 };\n                 format_ident!(\"{}_token\", name)\n@@ -599,13 +600,9 @@ fn lower_rule(acc: &mut Vec<Field>, grammar: &Grammar, rule: &Rule) {\n     }\n }\n \n-// (T (',' T)* ','?)?\n+// (T (',' T)* ','?)\n fn lower_comma_list(acc: &mut Vec<Field>, grammar: &Grammar, rule: &Rule) -> bool {\n     let rule = match rule {\n-        Rule::Opt(it) => it,\n-        _ => return false,\n-    };\n-    let rule = match &**rule {\n         Rule::Seq(it) => it,\n         _ => return false,\n     };"}, {"sha": "760a8dd95a994c12b8ef357e0b7e37c0263bbf32", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 33, "deletions": 25, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/ee00679331b87dacc5fe608f153be160c1cb144c/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=ee00679331b87dacc5fe608f153be160c1cb144c", "patch": "@@ -8,14 +8,14 @@ Item =\n | EnumDef\n | ExternBlock\n | ExternCrate\n-| FnDef\n+| Fn\n | ImplDef\n | MacroCall\n | Module\n | StaticDef\n | StructDef\n | TraitDef\n-| TypeAliasDef\n+| TypeAlias\n | UnionDef\n | Use\n \n@@ -42,15 +42,40 @@ UseTree =\n UseTreeList =\n   '{' (UseTree (',' UseTree)* ','?)? '}'\n \n-FnDef =\n- Attr* Visibility? Abi? 'const' 'default' 'async' 'unsafe' 'fn' Name TypeParamList?\n- ParamList RetType?\n+Fn =\n+ Attr* Visibility?\n+ 'default'? ('async' | 'const')? 'unsafe'? Abi?\n+ 'fn' Name TypeParamList? ParamList RetType?\n  WhereClause?\n  (body:BlockExpr | ';')\n \n+Abi =\n+  'extern' 'string'?\n+\n+ParamList =\n+  '('(\n+    (Param (',' Param)* ','?)?\n+  | SelfParam ','?\n+  | SelfParam ',' (Param (',' Param)* ','?)\n+  )')'\n+\n+SelfParam =\n+  Attr* (\n+    ('&' 'lifetime'?)? 'mut'? 'self'\n+  | 'mut'? 'self' ':' ascribed_type:TypeRef\n+  )\n+\n+Param =\n+  Attr* Pat (':' ascribed_type:TypeRef)\n+| '...'\n+\n RetType =\n   '->' TypeRef\n \n+TypeAlias =\n+  Attr* Visibility? 'default'? 'type' Name TypeParamList? (':' TypeBoundList?)? WhereClause?\n+  '=' TypeRef ';'\n+\n StructDef =\n   Attr* Visibility? 'struct' Name TypeParamList? (\n     WhereClause?  (RecordFieldDefList | ';')\n@@ -103,10 +128,6 @@ StaticDef =\n   Attr* Visibility? 'static'? 'mut'? 'static' Name ':' ascribed_type:TypeRef\n   '=' body:Expr ';'\n \n-TypeAliasDef =\n-  Attr* Visibility? 'default'? 'type' Name TypeParamList? WhereClause? (':' TypeBoundList?)?\n-  '=' TypeRef ';'\n-\n ImplDef =\n  Attr* Visibility? 'const'? 'default'? 'unsafe'? 'impl' TypeParamList? '!'? 'for'\n  WhereClause?\n@@ -388,26 +409,13 @@ WherePred =\n WhereClause =\n   'where' predicates:WherePred*\n \n-Abi =\n-  'string'\n-\n ExprStmt =\n   Attr* Expr ';'\n \n LetStmt =\n   Attr* 'let' Pat (':' ascribed_type:TypeRef)\n   '=' initializer:Expr ';'\n \n-ParamList =\n-  '(' SelfParam Param* ')'\n-\n-SelfParam =\n-  Attr* ('&' 'lifetime'?)? 'mut'? 'self' (':' ascribed_type:TypeRef)\n-\n-Param =\n-  Attr* Pat (':' ascribed_type:TypeRef)\n-| '...'\n-\n Path =\n   (qualifier:Path '::')? segment:PathSegment\n \n@@ -465,13 +473,13 @@ TypeRef =\n | DynTraitType\n \n AssocItem =\n-  FnDef\n-| TypeAliasDef\n+  Fn\n+| TypeAlias\n | ConstDef\n | MacroCall\n \n ExternItem =\n-  FnDef | StaticDef\n+  Fn | StaticDef\n \n AttrInput =\n   Literal"}]}