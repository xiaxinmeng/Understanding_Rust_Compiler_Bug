{"sha": "5384a11fcaa71d74d93f7e4ea4a2662ae28698fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzODRhMTFmY2FhNzFkNzRkOTNmN2U0ZWE0YTI2NjJhZTI4Njk4ZmU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-06T00:17:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-06T00:17:50Z"}, "message": "Apply suggestions from code review\n\nCo-Authored-By: cuviper <cuviper@gmail.com>", "tree": {"sha": "ae501c729aa9547d6054cd36005baef0397beecb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae501c729aa9547d6054cd36005baef0397beecb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcfxGuCRBK7hj4Ov3rIwAAdHIIAJEbn97zf7oM6gQ2juMdrfwg\n+9Oanvk5gHRwYTX0/iEIbVolfwQlJildAvch5l69ScPWwPpMQYDZye2UAvYpQia6\nt/NmKdLq+0gmHAPtaIFFXhPZwd8aR5iHPt5EuhuUu0pcWT+s6mdZSvi2iXmOfrmZ\nmwVBP5sPzLnddEGrtZ6SA7o96+WsqRZ2TLeMqNL3nrguJO0ruX4trTgf8jMx7Omm\nEpMdbrGiau/tdfQcte7+gmjPolsXaU+8Y2EuXxpQY8pi/CH1xbp3c/MKA4YkLaTo\nvIVwDTCbLAQTFpAcrGMcMa4GwORCM5esmW+9kYamD//AEAwqgGV9tcZwemqSkEE=\n=n8Z6\n-----END PGP SIGNATURE-----\n", "payload": "tree ae501c729aa9547d6054cd36005baef0397beecb\nparent 538a0963ff4a55da47fcf2a1e14c62edab5af48d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1551831470 -0800\ncommitter GitHub <noreply@github.com> 1551831470 -0800\n\nApply suggestions from code review\n\nCo-Authored-By: cuviper <cuviper@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe", "html_url": "https://github.com/rust-lang/rust/commit/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "538a0963ff4a55da47fcf2a1e14c62edab5af48d", "url": "https://api.github.com/repos/rust-lang/rust/commits/538a0963ff4a55da47fcf2a1e14c62edab5af48d", "html_url": "https://github.com/rust-lang/rust/commit/538a0963ff4a55da47fcf2a1e14c62edab5af48d"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4bccd44f5036a6b638454f75c71c6167a6cdb22a", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5384a11fcaa71d74d93f7e4ea4a2662ae28698fe/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=5384a11fcaa71d74d93f7e4ea4a2662ae28698fe", "patch": "@@ -3291,8 +3291,8 @@ impl<'a, T> IterMut<'a, T> {\n \n     /// Views the underlying data as a subslice of the original data.\n     ///\n-    /// To avoid creating `&mut` references that alias, this has a\n-    /// borrowed lifetime from the iterator.\n+    /// To avoid creating `&mut [T]` references that alias, the returned slice\n+    /// borrows its lifetime from the iterator the method is applied on.\n     ///\n     /// # Examples\n     ///\n@@ -3302,11 +3302,11 @@ impl<'a, T> IterMut<'a, T> {\n     /// # #![feature(slice_iter_mut_as_slice)]\n     /// // First, we declare a type which has `iter_mut` method to get the `IterMut`\n     /// // struct (&[usize here]):\n-    /// let mut slice = &mut [1, 2, 3];\n+    /// let mut slice: &mut [usize] = &mut [1, 2, 3];\n     ///\n     /// // Then, we get the iterator:\n     /// let mut iter = slice.iter_mut();\n-    /// // So if we print what `as_slice` method returns here, we have \"[1, 2, 3]\":\n+    /// // So if we print what the `as_slice` method returns here, we have \"[1, 2, 3]\":\n     /// println!(\"{:?}\", iter.as_slice());\n     /// assert_eq!(iter.as_slice(), &[1, 2, 3]);\n     ///"}]}