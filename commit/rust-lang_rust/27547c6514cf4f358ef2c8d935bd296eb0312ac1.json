{"sha": "27547c6514cf4f358ef2c8d935bd296eb0312ac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NTQ3YzY1MTRjZjRmMzU4ZWYyYzhkOTM1YmQyOTZlYjAzMTJhYzE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-08T21:20:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-08T21:20:16Z"}, "message": "Revert \"Move the glue asm code to a .o file. This reduces how much asm we print\"\n\nThis reverts commit 55c80e763bfd850682b3217fcfc5cdb516eafae0.", "tree": {"sha": "94f4949ba5a65a56633e374aee0e1851b4f42ffc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94f4949ba5a65a56633e374aee0e1851b4f42ffc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27547c6514cf4f358ef2c8d935bd296eb0312ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27547c6514cf4f358ef2c8d935bd296eb0312ac1", "html_url": "https://github.com/rust-lang/rust/commit/27547c6514cf4f358ef2c8d935bd296eb0312ac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27547c6514cf4f358ef2c8d935bd296eb0312ac1/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55c80e763bfd850682b3217fcfc5cdb516eafae0", "url": "https://api.github.com/repos/rust-lang/rust/commits/55c80e763bfd850682b3217fcfc5cdb516eafae0", "html_url": "https://github.com/rust-lang/rust/commit/55c80e763bfd850682b3217fcfc5cdb516eafae0"}], "stats": {"total": 73, "additions": 6, "deletions": 67}, "files": [{"sha": "a239329f4e541720d23c55ee81b7fac6840b96d3", "filename": "src/Makefile", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/27547c6514cf4f358ef2c8d935bd296eb0312ac1/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/27547c6514cf4f358ef2c8d935bd296eb0312ac1/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=27547c6514cf4f358ef2c8d935bd296eb0312ac1", "patch": "@@ -90,7 +90,6 @@ ifdef CFG_WINDOWSY\n   CFG_EXE_SUFFIX := .exe\n   CFG_BOOT := ./rustboot.exe\n   CFG_RUSTC := ./rustc.exe\n-  CFG_GLUE := ./glue.exe\n   CFG_GCC_CFLAGS += -march=i686\n   CFG_GCC_LINK_FLAGS += -shared -fPIC\n   CFG_RUN_TARG = $(1)\n@@ -102,7 +101,6 @@ ifdef CFG_UNIXY\n   CFG_INFO := $(info cfg: unix-y environment)\n   CFG_BOOT := ./rustboot\n   CFG_RUSTC := ./rustc\n-  CFG_GLUE := ./glue\n   CFG_OBJ_SUFFIX := .o\n   CFG_RUN_TARG = LD_LIBRARY_PATH=. $(CFG_VALGRIND) $(1)\n   CFG_GCC := 1\n@@ -113,7 +111,6 @@ ifdef CFG_UNIXY\n     CFG_RUNTIME := rustrt.dll\n     CFG_STDLIB := std.dll\n     CFG_RUSTC := ./rustc.exe\n-    CFG_GLUE := ./glue\n     ifdef CFG_VALGRIND\n       CFG_VALGRIND += wine\n     endif\n@@ -311,13 +308,11 @@ RUNTIME_LIBS := $(CFG_RUNTIME_LIBS)\n STDLIB_CRATE := lib/std.rc\n STDLIB_INPUTS := $(wildcard lib/*.rc lib/*.rs lib/*/*.rs)\n COMPILER_CRATE := comp/rustc.rc\n-COMPILER_INPUTS := $(wildcard comp/rustc.rc comp/*.rs comp/*/*.rs)\n-GLUE_CRATE := comp/glue.rc\n-GLUE_INPUTS := $(wildcard comp/glue.rc comp/*.rs comp/*/*.rs)\n+COMPILER_INPUTS := $(wildcard comp/*.rc comp/*.rs comp/*/*.rs)\n \n GENERATED := boot/fe/lexer.ml boot/util/version.ml\n \n-all: $(CFG_RUSTC) $(CFG_GLUE) $(MKFILES) $(GENERATED) glue.o\n+all: $(CFG_RUSTC) $(MKFILES) $(GENERATED)\n \n boot/util/version.ml: Makefile\n \t$(CFG_QUIET)git log -1 \\\n@@ -373,16 +368,6 @@ $(CFG_RUSTC): $(COMPILER_INPUTS) $(CFG_BOOT) $(CFG_RUNTIME) $(CFG_STDLIB)\n \t$(BOOT) -minimal -o $@ $<\n \t$(CFG_QUIET)chmod 0755 $@\n \n-$(CFG_GLUE): $(GLUE_INPUTS) $(CFG_BOOT) $(CFG_RUNTIME) $(CFG_STDLIB)\n-\t@$(call CFG_ECHO, compile: $<)\n-\t$(BOOT) -minimal -o $@ $<\n-\t$(CFG_QUIET)chmod 0755 $@\n-\n-glue.o: glue.s\n-\n-glue.s: $(CFG_GLUE)\n-\t$(CFG_GLUE) > $@\n-\n self: $(CFG_RUSTC)\n \t@$(call CFG_ECHO, compile: $<)\n \t$(RUSTC) $(COMPILER_CRATE)\n@@ -778,9 +763,9 @@ test/bench/shootout/%.boot$(CFG_EXE_SUFFIX): \\\n \t@$(call CFG_ECHO, assemble [llvm]: $<)\n \t$(CFG_QUIET)gcc $(CFG_GCC_CFLAGS) -o $@ -c $<\n \n-%.rustc$(CFG_EXE_SUFFIX): %.o $(CFG_RUNTIME) glue.o\n+%.rustc$(CFG_EXE_SUFFIX): %.o $(CFG_RUNTIME)\n \t@$(call CFG_ECHO, link [llvm]: $<)\n-\t$(CFG_QUIET)gcc $(CFG_GCC_CFLAGS) glue.o -o $@ $< -L. -lrustrt\n+\t$(CFG_QUIET)gcc $(CFG_GCC_CFLAGS) -o $@ $< -L. -lrustrt\n \t@# dsymutil sometimes fails or prints a warning, but the\n \t@# program still runs.  Since it simplifies debugging other\n \t@# programs, I\\'ll live with the noise."}, {"sha": "1048341ab463d9a1e5f40ebdc228b8e67544f304", "filename": "src/comp/glue.rc", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/55c80e763bfd850682b3217fcfc5cdb516eafae0/src%2Fcomp%2Fglue.rc", "raw_url": "https://github.com/rust-lang/rust/raw/55c80e763bfd850682b3217fcfc5cdb516eafae0/src%2Fcomp%2Fglue.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fglue.rc?ref=55c80e763bfd850682b3217fcfc5cdb516eafae0", "patch": "@@ -1,37 +0,0 @@\n-// -*- rust -*-\n-\n-use std;\n-\n-mod front {\n-    mod ast;\n-}\n-\n-mod middle {\n-  mod ty;\n-}\n-\n-mod driver {\n-  mod session;\n-}\n-\n-mod glue {\n-  mod glue;\n-}\n-\n-mod back {\n-    mod abi;\n-    mod x86;\n-}\n-\n-mod util {\n-    mod common;\n-}\n-\n-\n-// Local Variables:\n-// fill-column: 78;\n-// indent-tabs-mode: nil\n-// c-basic-offset: 4\n-// buffer-file-coding-system: utf-8-unix\n-// compile-command: \"make -k -C .. 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n-// End:"}, {"sha": "96bdba76a42cc4d8751a131b4c4215b1e567bd19", "filename": "src/comp/glue/glue.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/55c80e763bfd850682b3217fcfc5cdb516eafae0/src%2Fcomp%2Fglue%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c80e763bfd850682b3217fcfc5cdb516eafae0/src%2Fcomp%2Fglue%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fglue%2Fglue.rs?ref=55c80e763bfd850682b3217fcfc5cdb516eafae0", "patch": "@@ -1,11 +0,0 @@\n-import back.x86;\n-import std._str;\n-import std._vec;\n-import std.os.libc;\n-\n-fn main(vec[str] args) {\n-  auto module_asm = x86.get_module_asm() + \"\\n\";\n-  auto bytes = _str.bytes(module_asm);\n-  auto b = _vec.buf[u8](bytes);\n-  libc.write(1, b, _vec.len[u8](bytes));\n-}"}, {"sha": "7457a5326bd89d4088b754bc17f1eb510d190baa", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27547c6514cf4f358ef2c8d935bd296eb0312ac1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27547c6514cf4f358ef2c8d935bd296eb0312ac1/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=27547c6514cf4f358ef2c8d935bd296eb0312ac1", "patch": "@@ -5708,6 +5708,8 @@ fn trans_crate(session.session sess, @ast.crate crate, str output,\n     let ValueRef crate_ptr =\n         llvm.LLVMAddGlobal(llmod, T_crate(tn), _str.buf(\"rust_crate\"));\n \n+    llvm.LLVMSetModuleInlineAsm(llmod, _str.buf(x86.get_module_asm()));\n+\n     auto intrinsics = declare_intrinsics(llmod);\n \n     auto glues = make_glues(llmod, tn);"}]}