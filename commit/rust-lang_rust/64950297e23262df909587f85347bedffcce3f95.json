{"sha": "64950297e23262df909587f85347bedffcce3f95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0OTUwMjk3ZTIzMjYyZGY5MDk1ODdmODUzNDdiZWRmZmNjZTNmOTU=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2021-01-28T06:47:53Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2021-02-06T10:03:48Z"}, "message": "path trimming: disable on src/test/run-make-fulldeps/coverage-spanview", "tree": {"sha": "707dbeb87858c3757919be0c09657ab8ba813ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/707dbeb87858c3757919be0c09657ab8ba813ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64950297e23262df909587f85347bedffcce3f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64950297e23262df909587f85347bedffcce3f95", "html_url": "https://github.com/rust-lang/rust/commit/64950297e23262df909587f85347bedffcce3f95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64950297e23262df909587f85347bedffcce3f95/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaefe4a230d7c32d7c99da437ee8b87860f28704", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaefe4a230d7c32d7c99da437ee8b87860f28704", "html_url": "https://github.com/rust-lang/rust/commit/eaefe4a230d7c32d7c99da437ee8b87860f28704"}], "stats": {"total": 7590, "additions": 3796, "deletions": 3794}, "files": [{"sha": "cd54ac0ed4c75ce94ec9e74316bb4a5f9c890785", "filename": "src/test/run-make-fulldeps/coverage-spanview/Makefile", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2FMakefile?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -42,6 +42,7 @@ endif\n \t\t\t\techo \"--edition=2018\" \\\n \t\t\t) \\\n \t\t\t--crate-type rlib \\\n+\t\t\t-Ztrim-diagnostic-paths=no \\\n \t\t\t-Zinstrument-coverage \\\n \t\t\t-Zdump-mir=InstrumentCoverage \\\n \t\t\t-Zdump-mir-spanview \\\n@@ -73,6 +74,7 @@ endif\n \t\t\t\techo \"--edition=2018\" \\\n \t\t\t) \\\n \t\t\t-L \"$(TMPDIR)\" \\\n+\t\t\t-Ztrim-diagnostic-paths=no \\\n \t\t\t-Zinstrument-coverage \\\n \t\t\t-Zdump-mir=InstrumentCoverage \\\n \t\t\t-Zdump-mir-spanview \\"}, {"sha": "176587af25be05aac85a7236beffa5d8595020c7", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -97,10 +97,10 @@\n 26:9-26:23: @18[0]: _1 = move (_18.0: i32)\"><span class=\"annotation\">@17,18\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n-28:5-28:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _20)\n+28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n 29:2-29:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"28:8-28:10: @4[4]: _20 = ()\n-28:5-28:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _20)\n+28:5-28:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _20)\n 29:2-29:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "a302b974ae1d2285b50078b2a8e7b2cb844733a5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,10 +81,10 @@\n 7:9-7:33: @1[18]: _13 = &amp;(*_32)\n 7:9-7:33: @1[19]: _12 = &amp;(*_13)\n 7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-7:9-7:33: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+7:9-7:33: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+7:9-7:33: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n 7:9-7:33: @4[5]: _4 = const ()\n-8:9-8:37: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"aborting...\");</span></span>\n+8:9-8:37: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"aborting...\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @1[6]: _33 = const might_abort::promoted[3]\n 7:18-7:31: @1[7]: _9 = &amp;(*_33)\n 7:18-7:31: @1[8]: _8 = &amp;(*_9)\n@@ -95,10 +95,10 @@\n 7:9-7:33: @1[18]: _13 = &amp;(*_32)\n 7:9-7:33: @1[19]: _12 = &amp;(*_13)\n 7:9-7:33: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:9-7:33: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-7:9-7:33: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+7:9-7:33: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+7:9-7:33: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n 7:9-7:33: @4[5]: _4 = const ()\n-8:9-8:37: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+8:9-8:37: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb7\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n 10:18-10:31: @2[7]: _23 = &amp;(*_31)\n 10:18-10:31: @2[8]: _22 = &amp;(*_23)\n@@ -109,8 +109,8 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 10:9-10:33: @6[5]: _18 = const ()\n 9:12-11:6: @6[7]: _0 = const ()\n 12:2-12:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n@@ -124,8 +124,8 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 10:9-10:33: @6[5]: _18 = const ()\n 9:12-11:6: @6[7]: _0 = const ()\n 12:2-12:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n@@ -139,8 +139,8 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 10:9-10:33: @6[5]: _18 = const ()\n 9:12-11:6: @6[7]: _0 = const ()\n 12:2-12:2: @6.Return: return\">    }</span></span>\n@@ -154,8 +154,8 @@\n 10:9-10:33: @2[18]: _27 = &amp;(*_30)\n 10:9-10:33: @2[19]: _26 = &amp;(*_27)\n 10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-10:9-10:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+10:9-10:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+10:9-10:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 10:9-10:33: @6[5]: _18 = const ()\n 9:12-11:6: @6[7]: _0 = const ()\n 12:2-12:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>"}, {"sha": "365e94cd31e50f6951608e54b2721ce55b0ec3f8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -93,10 +93,10 @@\n 17:9-17:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n-19:5-19:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _15)\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n 20:2-20:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n-19:5-19:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _15)\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n 20:2-20:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "b7f3cf0819fc5399de2d298cc0714ea30e7e9f08", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -80,13 +80,13 @@\n 5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n 5:5-5:48: @0[25]: _17 = &amp;(*_15)\n 5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb12]\n+5:5-5:48: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb12]\n 5:5-5:48: @1[2]: _12 = [move _16]\n 5:5-5:48: @1[5]: _11 = &amp;_12\n 5:5-5:48: @1[6]: _10 = &amp;(*_11)\n 5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb12]\n-5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb12]\n+5:5-5:48: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb12]\n+5:5-5:48: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb12]\n 5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @5[28]: _70 = const might_fail_assert::promoted[1]\n 6:37-6:61: @5[29]: _50 = &amp;(*_70)"}, {"sha": "64fc1568b00855750595b71995304508851b60d3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,12 +73,12 @@\n 24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n 24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n 24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n 24:38-24:74: @2[2]: _12 = [move _26]\n 24:38-24:74: @2[5]: _11 = &amp;_12\n 24:38-24:74: @2[6]: _10 = &amp;(*_11)\n 24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "1bbcfa5744b6bf32efb2f1301ba7e4826e47094b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,12 +73,12 @@\n 24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n 24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n 24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n 24:38-24:74: @2[2]: _12 = [move _26]\n 24:38-24:74: @2[5]: _11 = &amp;_12\n 24:38-24:74: @2[6]: _10 = &amp;(*_11)\n 24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "14cb98d20c98885e1b2324fcb865671ceaadbf00", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,12 +73,12 @@\n 24:38-24:74: @1[5]: FakeRead(ForMatchedPlace, _13)\n 24:38-24:74: @1[7]: _25 = (_13.0: &amp;std::fmt::Arguments)\n 24:38-24:74: @1[10]: _27 = &amp;(*_25)\n-24:38-24:74: @1[12]: _28 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:38-24:74: @1.Call: _26 = ArgumentV1::new::&lt;Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n+24:38-24:74: @1[12]: _28 = &lt;std::fmt::Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:38-24:74: @1.Call: _26 = std::fmt::ArgumentV1::new::&lt;std::fmt::Arguments&gt;(move _27, move _28) -&gt; [return: bb2, unwind: bb4]\n 24:38-24:74: @2[2]: _12 = [move _26]\n 24:38-24:74: @2[5]: _11 = &amp;_12\n 24:38-24:74: @2[6]: _10 = &amp;(*_11)\n 24:38-24:74: @2[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:38-24:74: @2.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n+24:38-24:74: @2.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb3, unwind: bb4]\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">$crate::panicking::panic_fmt($crate::format_args!($fmt, $($arg)+))</span></span></div>\n </body>\n </html>"}, {"sha": "9a5bd6e42cd3762785fd6a0f29cf2bc33025db42", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 68, "deletions": 68, "changes": 136, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -70,166 +70,166 @@\n </head>\n <body>\n <div class=\"code\" style=\"counter-reset: line 109\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>pub fn block_on&lt;F: Future&gt;(mut future: F) -&gt; F::Output {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut future = unsafe { Pin::new_unchecked(&amp;mut future) };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        static VTABLE: RawWakerVTable = RawWakerVTable::new(</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"clone\"),</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake\"),</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake_by_ref\"),</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">            |_| (),</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        );</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &amp;VTABLE)) };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:54-111:65: @0[2]: _3 = &amp;mut _1\n-111:35-111:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+111:35-111:66: @0.Call: _2 = std::pin::Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n 111:13-111:23: @1[1]: FakeRead(ForLet, _2)\n-119:60-119:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n-119:80-119:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+119:60-119:77: @1.Call: _6 = std::ptr::null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+119:80-119:86: @2[3]: _9 = const {alloc0: &amp;std::task::RawWakerVTable}\n 119:79-119:86: @2[4]: _8 = &amp;(*_9)\n 119:79-119:86: @2[5]: _7 = &amp;(*_8)\n-119:46-119:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n-119:30-119:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+119:46-119:87: @2.Call: _5 = std::task::RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+119:30-119:88: @3.Call: _4 = std::task::Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n 119:13-119:18: @4[1]: FakeRead(ForLet, _4)\n 120:47-120:53: @4[7]: _12 = &amp;_4\n 120:47-120:53: @4[8]: _11 = &amp;(*_12)\n-120:27-120:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+120:27-120:54: @4.Call: _10 = std::task::Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n 120:13-120:24: @5[1]: FakeRead(ForLet, _10)\">        let mut context = Context::from_waker(&amp;waker)<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        loop {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if let Poll::Ready(</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"123:32-123:35: @12[1]: _20 = move ((_14 as Ready).0: &lt;F as std::future::Future&gt;::Output)\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">) = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"123:39-123:45: @7[3]: _16 = &amp;mut _2\n-123:39-123:54: @7.Call: _15 = Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n+123:39-123:54: @7.Call: _15 = std::pin::Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n 123:60-123:72: @8[3]: _18 = &amp;mut _10\n 123:60-123:72: @8[4]: _17 = &amp;mut (*_18)\n-123:39-123:73: @8.Call: _14 = &lt;F as Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n+123:39-123:73: @8.Call: _14 = &lt;F as std::future::Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n 123:39-123:73: @9[2]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@6,7,8,9\u298a</span>future.as_mut().poll(&amp;mut context)<span class=\"annotation\">\u2989@6,7,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                break </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"124:23-124:26: @12[2]: _0 = move _20\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"125:14-125:14: @11[0]: _13 = const ()\"><span class=\"annotation\">@11,13\u298a</span>\u2038<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>"}, {"sha": "b892af0ed37d5c4ab809861a8d37da8ca42c0bc8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -72,118 +72,118 @@\n <div class=\"code\" style=\"counter-reset: line 92\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9,10,11,12,13\u298a</span>fn main() {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    let _ = g(10);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    let _ = h(9);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    let mut future = Box::pin(i(8));</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    j(7);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    l(6);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    let _ = m(5);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">    executor::block_on(future.as_mut());</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"94:13-94:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb16]\n 95:13-95:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb16]\n 96:31-96:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb16]\n-96:22-96:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n+96:22-96:36: @5.Call: _3 = std::boxed::Box::&lt;impl std::future::Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb15]\n 96:9-96:19: @6[1]: FakeRead(ForLet, _3)\n 97:5-97:9: @6.Call: _5 = j(const 7_u8) -&gt; [return: bb7, unwind: bb14]\n 98:5-98:9: @7.Call: _6 = l(const 6_u8) -&gt; [return: bb8, unwind: bb14]\n 99:13-99:17: @8.Call: _7 = m(const 5_u8) -&gt; [return: bb9, unwind: bb14]\n 100:24-100:30: @10[4]: _10 = &amp;mut _3\n-100:24-100:39: @10.Call: _9 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n-100:5-100:40: @11.Call: _8 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n+100:24-100:39: @10.Call: _9 = std::pin::Pin::&lt;std::boxed::Box&lt;impl std::future::Future&gt;&gt;::as_mut(move _10) -&gt; [return: bb11, unwind: bb14]\n+100:5-100:40: @11.Call: _8 = executor::block_on::&lt;std::pin::Pin&lt;&amp;mut impl std::future::Future&gt;&gt;(move _9) -&gt; [return: bb12, unwind: bb14]\n 93:11-101:2: @12[2]: _0 = const ()\n 101:2-101:2: @13.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9,10,11,12,13</span></span></span></span></div>\n </body>"}, {"sha": "3998295a0525e70eb9a2aa6e4880d233e7ec1e6b", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -86,11 +86,11 @@\n 36:21-38:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:10-38:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @3[5]: _5 = &amp;(*_6)\n-39:9-39:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+39:9-39:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 40:6-40:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 2\".to_owned()</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"39:9-39:23: @3[4]: _6 = const &quot;alt string 2&quot;\n 39:9-39:23: @3[5]: _5 = &amp;(*_6)\n-39:9-39:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+39:9-39:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 40:6-40:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "3bdfe71b48c2760d745c786fe6390454379c5071", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#10}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2310%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -86,11 +86,11 @@\n 21:29-23:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:18-23:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @3[5]: _5 = &amp;(*_6)\n-24:17-24:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+24:17-24:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 25:14-25:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 1\".to_owned()</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"24:17-24:31: @3[4]: _6 = const &quot;alt string 1&quot;\n 24:17-24:31: @3[5]: _5 = &amp;(*_6)\n-24:17-24:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+24:17-24:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 25:14-25:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "4b3f04b5a0c7e6cd81c94195c028656269f33ec0", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#11}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%2311%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -86,11 +86,11 @@\n 63:29-65:18: @1[1]: _3 = const ()\">                }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"65:18-65:18: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @3[5]: _5 = &amp;(*_6)\n-66:17-66:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+66:17-66:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 67:14-67:14: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 3\".to_owned()</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"66:17-66:31: @3[4]: _6 = const &quot;alt string 3&quot;\n 66:17-66:31: @3[5]: _5 = &amp;(*_6)\n-66:17-66:42: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+66:17-66:42: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 67:14-67:14: @4.Return: return\">            }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "8ae494178f70b41a8a458595690ad787337a6661", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -86,11 +86,11 @@\n 78:21-80:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:10-80:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @3[5]: _5 = &amp;(*_6)\n-81:9-81:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+81:9-81:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 82:6-82:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"alt string 4\".to_owned()</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"81:9-81:23: @3[4]: _6 = const &quot;alt string 4&quot;\n 81:9-81:23: @3[5]: _5 = &amp;(*_6)\n-81:9-81:34: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+81:9-81:34: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 82:6-82:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "ad40ba57d69be40f4b21548c8e0e8c166b0dc394", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#2}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -94,13 +94,13 @@\n 103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n 103:9-103:29: @3[26]: _20 = &amp;(*_18)\n 103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n+103:9-103:29: @3.Call: _19 = std::fmt::ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n 103:9-103:29: @4[2]: _15 = [move _19]\n 103:9-103:29: @4[5]: _14 = &amp;_15\n 103:9-103:29: @4[6]: _13 = &amp;(*_14)\n 103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n-103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb8]\n+103:9-103:29: @4.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n+103:9-103:29: @5.Call: _6 = std::fmt::format(move _7) -&gt; [return: bb6, unwind: bb8]\n 103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n 103:9-103:29: @6[6]: _0 = move _6\n 104:6-104:6: @7.Return: return\"><span class=\"annotation\">@3,4,5,6,7\u298a</span>format!(\"'{}'\", val)</span></span>\n@@ -114,13 +114,13 @@\n 103:9-103:29: @3[23]: _18 = (_16.0: &amp;&amp;str)\n 103:9-103:29: @3[26]: _20 = &amp;(*_18)\n 103:9-103:29: @3[28]: _21 = &lt;&amp;str as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;str, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-103:9-103:29: @3.Call: _19 = ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n+103:9-103:29: @3.Call: _19 = std::fmt::ArgumentV1::new::&lt;&amp;str&gt;(move _20, move _21) -&gt; [return: bb4, unwind: bb8]\n 103:9-103:29: @4[2]: _15 = [move _19]\n 103:9-103:29: @4[5]: _14 = &amp;_15\n 103:9-103:29: @4[6]: _13 = &amp;(*_14)\n 103:9-103:29: @4[7]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-103:9-103:29: @4.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n-103:9-103:29: @5.Call: _6 = format(move _7) -&gt; [return: bb6, unwind: bb8]\n+103:9-103:29: @4.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb5, unwind: bb8]\n+103:9-103:29: @5.Call: _6 = std::fmt::format(move _7) -&gt; [return: bb6, unwind: bb8]\n 103:9-103:29: @6[1]: FakeRead(ForLet, _6)\n 103:9-103:29: @6[6]: _0 = move _6\n 104:6-104:6: @7.Return: return\">    }<span class=\"annotation\">\u2989@3,4,5,6,7</span></span></span></span></div>"}, {"sha": "23101d76a8ef46c8b2fa6348e90c1967fb2bb610", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#3}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,11 +81,11 @@\n 124:21-126:10: @1[1]: _3 = const ()\">        }<span class=\"annotation\">\u2989@1</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"126:10-126:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n 127:9-127:35: @3[5]: _5 = &amp;(*_6)\n-127:9-127:46: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+127:9-127:46: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 128:6-128:6: @4.Return: return\"><span class=\"annotation\">@3,4\u298a</span>\"closure should be unused\".to_owned()</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"127:9-127:35: @3[4]: _6 = const &quot;closure should be unused&quot;\n 127:9-127:35: @3[5]: _5 = &amp;(*_6)\n-127:9-127:46: @3.Call: _0 = &lt;str as ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n+127:9-127:46: @3.Call: _0 = &lt;str as std::borrow::ToOwned&gt;::to_owned(move _5) -&gt; [return: bb4, unwind: bb5]\n 128:6-128:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "8ba7a6187fdb41f3c1adf0fbae0bfbca089d22cc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#5}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%235%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -79,8 +79,8 @@\n 112:28-112:61: @0[17]: _11 = &amp;(*_14)\n 112:28-112:61: @0[18]: _10 = &amp;(*_11)\n 112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+112:28-112:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 111:23-113:6: @2[5]: _0 = const ()\n 111:23-113:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:23-113:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n@@ -93,8 +93,8 @@\n 112:28-112:61: @0[17]: _11 = &amp;(*_14)\n 112:28-112:61: @0[18]: _10 = &amp;(*_11)\n 112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+112:28-112:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 111:23-113:6: @2[5]: _0 = const ()\n 111:23-113:6: @2.Return: return\">        $crate::io::_print($crate::format_args_nl!($($arg)*));</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"111:23-113:6: @0[5]: _15 = const main::{closure#5}::promoted[1]\n@@ -107,8 +107,8 @@\n 112:28-112:61: @0[17]: _11 = &amp;(*_14)\n 112:28-112:61: @0[18]: _10 = &amp;(*_11)\n 112:28-112:61: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-112:28-112:61: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-112:9-112:62: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+112:28-112:61: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+112:9-112:62: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 111:23-113:6: @2[5]: _0 = const ()\n 111:23-113:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "74c75c6c46ca20fbad7f47d09e05be610aa77523", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#6}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%236%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -79,8 +79,8 @@\n 141:61-141:83: @0[17]: _11 = &amp;(*_14)\n 141:61-141:83: @0[18]: _10 = &amp;(*_11)\n 141:61-141:83: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-141:61-141:83: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-141:61-141:83: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+141:61-141:83: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+141:61-141:83: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 141:61-141:83: @2[5]: _0 = const ()\n 141:85-141:85: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "386fb1b9e6f954080afd8d40398b944006de6109", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#7}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%237%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -79,8 +79,8 @@\n 144:9-144:31: @0[17]: _11 = &amp;(*_14)\n 144:9-144:31: @0[18]: _10 = &amp;(*_11)\n 144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 144:9-144:31: @2[5]: _0 = const ()\n 145:6-145:6: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n@@ -93,8 +93,8 @@\n 144:9-144:31: @0[17]: _11 = &amp;(*_14)\n 144:9-144:31: @0[18]: _10 = &amp;(*_11)\n 144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 144:9-144:31: @2[5]: _0 = const ()\n 145:6-145:6: @2.Return: return\">        println!(\"not called\")</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"144:18-144:30: @0[5]: _15 = const main::{closure#7}::promoted[1]\n@@ -107,8 +107,8 @@\n 144:9-144:31: @0[17]: _11 = &amp;(*_14)\n 144:9-144:31: @0[18]: _10 = &amp;(*_11)\n 144:9-144:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-144:9-144:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-144:9-144:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+144:9-144:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+144:9-144:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 144:9-144:31: @2[5]: _0 = const ()\n 145:6-145:6: @2.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "f9da6ac9dfc342dd9ca6f7695fe7ef6abccd9770", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#8}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%238%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,8 +81,8 @@\n 149:9-149:31: @0[17]: _11 = &amp;(*_14)\n 149:9-149:31: @0[18]: _10 = &amp;(*_11)\n 149:9-149:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-149:9-149:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-149:9-149:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+149:9-149:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+149:9-149:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 149:9-149:31: @2[5]: _0 = const ()\n 149:33-149:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "e259fc9bb67e7f25345619201dcb5a010c57e86a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main-{closure#9}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main-%7Bclosure%239%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,8 +81,8 @@\n 153:9-153:31: @0[17]: _11 = &amp;(*_14)\n 153:9-153:31: @0[18]: _10 = &amp;(*_11)\n 153:9-153:31: @0[19]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-153:9-153:31: @0.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n-153:9-153:31: @1.Call: _3 = _print(move _4) -&gt; [return: bb2, unwind: bb3]\n+153:9-153:31: @0.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb1, unwind: bb3]\n+153:9-153:31: @1.Call: _3 = std::io::_print(move _4) -&gt; [return: bb2, unwind: bb3]\n 153:9-153:31: @2[5]: _0 = const ()\n 153:33-153:33: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{ println!(\"not called\") }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "a7d1728114ec9efe34d341f1e32bf3696d7c1cdc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.closure/closure.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2935, "deletions": 2935, "changes": 5870, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.closure%2Fclosure.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95"}, {"sha": "0aa6fe65686cff09b5ec482f6deb02350f87f3ad", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -87,10 +87,10 @@\n 10:16-10:29: @3[6]: _5 = Gt(move _6, const 7_u32)\"><span class=\"annotation\">@3\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n 11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @6[1]: _4 = const B\"><span class=\"annotation\">@4,6\u298a</span>countdown -= 4;</span></span>\n+12:9-12:10: @6[1]: _4 = const main::B\"><span class=\"annotation\">@4,6\u298a</span>countdown -= 4;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @4[0]: _7 = CheckedSub(_1, const 4_u32)\n 11:9-11:23: @6[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @6[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+12:9-12:10: @6[1]: _4 = const main::B\">        B<span class=\"annotation\">\u2989@4,6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @5[2]: _9 = _1\n 13:15-13:28: @5[3]: _8 = Gt(move _9, const 2_u32)\"><span class=\"annotation\">@5\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:12-14:21: @7[5]: _14 = _1\n@@ -239,8 +239,8 @@\n 73:9-73:29: @74[21]: _92 = &amp;(*_112)\n 73:9-73:29: @74[22]: _91 = &amp;(*_92)\n 73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n-73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @74.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = std::io::_print(move _85) -&gt; [return: bb88, unwind: bb112]\n 73:9-73:29: @88[5]: _83 = const ()\n 74:9-74:15: @88[7]: _0 = const ()\"><span class=\"annotation\">@74,87,88\u298a</span>should_be_reachable = countdown;</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @74[1]: _82 = _62\n@@ -255,8 +255,8 @@\n 73:9-73:29: @74[21]: _92 = &amp;(*_112)\n 73:9-73:29: @74[22]: _91 = &amp;(*_92)\n 73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n-73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @74.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = std::io::_print(move _85) -&gt; [return: bb88, unwind: bb112]\n 73:9-73:29: @88[5]: _83 = const ()\n 74:9-74:15: @88[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"72:35-72:44: @74[1]: _82 = _62\n@@ -271,8 +271,8 @@\n 73:9-73:29: @74[21]: _92 = &amp;(*_112)\n 73:9-73:29: @74[22]: _91 = &amp;(*_92)\n 73:9-73:29: @74[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-73:9-73:29: @74.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n-73:9-73:29: @87.Call: _84 = _print(move _85) -&gt; [return: bb88, unwind: bb112]\n+73:9-73:29: @74.Call: _85 = std::fmt::Arguments::new_v1(move _86, move _90) -&gt; [return: bb87, unwind: bb112]\n+73:9-73:29: @87.Call: _84 = std::io::_print(move _85) -&gt; [return: bb88, unwind: bb112]\n 73:9-73:29: @88[5]: _83 = const ()\n 74:9-74:15: @88[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@74,87,88</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>"}, {"sha": "be06ddd126da9564128ccb33cefd5ad3c6661360", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,65 +69,65 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 26\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 26\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32\n 33:9-33:22: @3[3]: FakeRead(ForLet, _5)\n 34:8-34:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"31:19-31:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 31:19-31:35: @1[0]: _3 = &amp;_4\n-31:19-31:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+31:19-31:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 31:19-31:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 31:9-31:16: @2[3]: FakeRead(ForLet, _1)\n 33:25-33:26: @3[2]: _5 = const 0_i32"}, {"sha": "7f2d8d3c8ec1ed96fe15491b3ed68acd3601c41f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_fn.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_fn.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,65 +69,65 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_fn() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32\n 21:9-21:22: @3[3]: FakeRead(ForLet, _5)\n 22:8-22:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:19-19:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 19:19-19:35: @1[0]: _3 = &amp;_4\n-19:19-19:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+19:19-19:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 19:19-19:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 19:9-19:16: @2[3]: FakeRead(ForLet, _1)\n 21:25-21:26: @3[2]: _5 = const 0_i32"}, {"sha": "be44f71348c1719d7d97c70addff82fdd79e76b6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.dead_code/dead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.dead_code%2Fdead_code.unused_pub_fn_not_in_library.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,65 +69,65 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_pub_fn_not_in_library() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[5]: _6 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32"}, {"sha": "93a4004991fbd6d554f9a345e2356666b06369be", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest/doctest.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest%2Fdoctest.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -84,16 +84,16 @@\n 75:9-75:26: @3[28]: _29 = (_24.0: &amp;&amp;i32)\n 75:9-75:26: @3[30]: _30 = (_24.1: &amp;&amp;i32)\n 75:9-75:26: @3[33]: _32 = &amp;(*_29)\n-75:9-75:26: @3[35]: _33 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @3.Call: _31 = ArgumentV1::new::&lt;&amp;i32&gt;(move _32, move _33) -&gt; [return: bb5, unwind: bb14]\n+75:9-75:26: @3[35]: _33 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+75:9-75:26: @3.Call: _31 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _32, move _33) -&gt; [return: bb5, unwind: bb14]\n 75:9-75:26: @5[4]: _35 = &amp;(*_30)\n-75:9-75:26: @5[6]: _36 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-75:9-75:26: @5.Call: _34 = ArgumentV1::new::&lt;&amp;i32&gt;(move _35, move _36) -&gt; [return: bb6, unwind: bb14]\n+75:9-75:26: @5[6]: _36 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+75:9-75:26: @5.Call: _34 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _35, move _36) -&gt; [return: bb6, unwind: bb14]\n 75:9-75:26: @6[2]: _23 = [move _31, move _34]\n 75:9-75:26: @6[7]: _22 = &amp;_23\n 75:9-75:26: @6[8]: _21 = &amp;(*_22)\n 75:9-75:26: @6[9]: _20 = move _21 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-75:9-75:26: @6.Call: _15 = Arguments::new_v1(move _16, move _20) -&gt; [return: bb7, unwind: bb14]\n+75:9-75:26: @6.Call: _15 = std::fmt::Arguments::new_v1(move _16, move _20) -&gt; [return: bb7, unwind: bb14]\n 75:9-75:26: @7.Call: core::panicking::panic_fmt(move _15) -&gt; bb14\"><span class=\"annotation\">@3,5,6,7\u298a</span>assert_eq!(1, 1);<span class=\"annotation\">\u2989@3,5,6,7</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:9-75:26: @4[0]: _2 = const ()\"><span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">@9\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"77:9-77:26: @8[5]: _72 = const main::promoted[0]\n@@ -109,16 +109,16 @@\n 77:9-77:26: @8[28]: _64 = (_59.0: &amp;&amp;i32)\n 77:9-77:26: @8[30]: _65 = (_59.1: &amp;&amp;i32)\n 77:9-77:26: @8[33]: _67 = &amp;(*_64)\n-77:9-77:26: @8[35]: _68 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @8.Call: _66 = ArgumentV1::new::&lt;&amp;i32&gt;(move _67, move _68) -&gt; [return: bb10, unwind: bb14]\n+77:9-77:26: @8[35]: _68 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+77:9-77:26: @8.Call: _66 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _67, move _68) -&gt; [return: bb10, unwind: bb14]\n 77:9-77:26: @10[4]: _70 = &amp;(*_65)\n-77:9-77:26: @10[6]: _71 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-77:9-77:26: @10.Call: _69 = ArgumentV1::new::&lt;&amp;i32&gt;(move _70, move _71) -&gt; [return: bb11, unwind: bb14]\n+77:9-77:26: @10[6]: _71 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+77:9-77:26: @10.Call: _69 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _70, move _71) -&gt; [return: bb11, unwind: bb14]\n 77:9-77:26: @11[2]: _58 = [move _66, move _69]\n 77:9-77:26: @11[7]: _57 = &amp;_58\n 77:9-77:26: @11[8]: _56 = &amp;(*_57)\n 77:9-77:26: @11[9]: _55 = move _56 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-77:9-77:26: @11.Call: _50 = Arguments::new_v1(move _51, move _55) -&gt; [return: bb12, unwind: bb14]\n+77:9-77:26: @11.Call: _50 = std::fmt::Arguments::new_v1(move _51, move _55) -&gt; [return: bb12, unwind: bb14]\n 77:9-77:26: @12.Call: core::panicking::panic_fmt(move _50) -&gt; bb14\"><span class=\"annotation\">@8,10,11,12\u298a</span>assert_eq!(1, 2);<span class=\"annotation\">\u2989@8,10,11,12</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:26: @9[0]: _37 = const ()\"><span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"79:2-79:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>"}, {"sha": "f55bb0f32d9ce6d586569316817e675485d7ee80", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.doctest_crate/doctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.doctest_crate%2Fdoctest_crate.fn_run_in_doctests.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -84,16 +84,16 @@\n 4:14-4:30: @6[28]: _28 = (_23.0: &amp;&amp;i32)\n 4:14-4:30: @6[30]: _29 = (_23.1: &amp;&amp;i32)\n 4:14-4:30: @6[33]: _31 = &amp;(*_28)\n-4:14-4:30: @6[35]: _32 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @6.Call: _30 = ArgumentV1::new::&lt;&amp;i32&gt;(move _31, move _32) -&gt; [return: bb8, unwind: bb29]\n+4:14-4:30: @6[35]: _32 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+4:14-4:30: @6.Call: _30 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _31, move _32) -&gt; [return: bb8, unwind: bb29]\n 4:14-4:30: @8[4]: _34 = &amp;(*_29)\n-4:14-4:30: @8[6]: _35 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-4:14-4:30: @8.Call: _33 = ArgumentV1::new::&lt;&amp;i32&gt;(move _34, move _35) -&gt; [return: bb9, unwind: bb29]\n+4:14-4:30: @8[6]: _35 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+4:14-4:30: @8.Call: _33 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _34, move _35) -&gt; [return: bb9, unwind: bb29]\n 4:14-4:30: @9[2]: _22 = [move _30, move _33]\n 4:14-4:30: @9[7]: _21 = &amp;_22\n 4:14-4:30: @9[8]: _20 = &amp;(*_21)\n 4:14-4:30: @9[9]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-4:14-4:30: @9.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb29]\n+4:14-4:30: @9.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb29]\n 4:14-4:30: @10.Call: core::panicking::panic_fmt(move _14) -&gt; bb29\"><span class=\"annotation\">@6,8,9,10\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@6,8,9,10</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"4:14-4:30: @7[0]: _0 = const ()\"><span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this is run,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        2 =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">@13\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"5:14-5:30: @12[5]: _141 = const fn_run_in_doctests::promoted[3]\n 5:14-5:30: @12[6]: _51 = &amp;(*_141)\n@@ -108,16 +108,16 @@\n 5:14-5:30: @12[28]: _62 = (_57.0: &amp;&amp;i32)\n 5:14-5:30: @12[30]: _63 = (_57.1: &amp;&amp;i32)\n 5:14-5:30: @12[33]: _65 = &amp;(*_62)\n-5:14-5:30: @12[35]: _66 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @12.Call: _64 = ArgumentV1::new::&lt;&amp;i32&gt;(move _65, move _66) -&gt; [return: bb14, unwind: bb29]\n+5:14-5:30: @12[35]: _66 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:14-5:30: @12.Call: _64 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _65, move _66) -&gt; [return: bb14, unwind: bb29]\n 5:14-5:30: @14[4]: _68 = &amp;(*_63)\n-5:14-5:30: @14[6]: _69 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-5:14-5:30: @14.Call: _67 = ArgumentV1::new::&lt;&amp;i32&gt;(move _68, move _69) -&gt; [return: bb15, unwind: bb29]\n+5:14-5:30: @14[6]: _69 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:14-5:30: @14.Call: _67 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _68, move _69) -&gt; [return: bb15, unwind: bb29]\n 5:14-5:30: @15[2]: _56 = [move _64, move _67]\n 5:14-5:30: @15[7]: _55 = &amp;_56\n 5:14-5:30: @15[8]: _54 = &amp;(*_55)\n 5:14-5:30: @15[9]: _53 = move _54 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-5:14-5:30: @15.Call: _48 = Arguments::new_v1(move _49, move _53) -&gt; [return: bb16, unwind: bb29]\n+5:14-5:30: @15.Call: _48 = std::fmt::Arguments::new_v1(move _49, move _53) -&gt; [return: bb16, unwind: bb29]\n 5:14-5:30: @16.Call: core::panicking::panic_fmt(move _48) -&gt; bb29\"><span class=\"annotation\">@12,14,15,16\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@12,14,15,16</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:30: @13[0]: _0 = const ()\"><span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\">, // this,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        3 =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">@19\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"6:14-6:30: @18[5]: _144 = const fn_run_in_doctests::promoted[6]\n 6:14-6:30: @18[6]: _85 = &amp;(*_144)\n@@ -132,16 +132,16 @@\n 6:14-6:30: @18[28]: _96 = (_91.0: &amp;&amp;i32)\n 6:14-6:30: @18[30]: _97 = (_91.1: &amp;&amp;i32)\n 6:14-6:30: @18[33]: _99 = &amp;(*_96)\n-6:14-6:30: @18[35]: _100 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @18.Call: _98 = ArgumentV1::new::&lt;&amp;i32&gt;(move _99, move _100) -&gt; [return: bb20, unwind: bb29]\n+6:14-6:30: @18[35]: _100 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+6:14-6:30: @18.Call: _98 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _99, move _100) -&gt; [return: bb20, unwind: bb29]\n 6:14-6:30: @20[4]: _102 = &amp;(*_97)\n-6:14-6:30: @20[6]: _103 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-6:14-6:30: @20.Call: _101 = ArgumentV1::new::&lt;&amp;i32&gt;(move _102, move _103) -&gt; [return: bb21, unwind: bb29]\n+6:14-6:30: @20[6]: _103 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+6:14-6:30: @20.Call: _101 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _102, move _103) -&gt; [return: bb21, unwind: bb29]\n 6:14-6:30: @21[2]: _90 = [move _98, move _101]\n 6:14-6:30: @21[7]: _89 = &amp;_90\n 6:14-6:30: @21[8]: _88 = &amp;(*_89)\n 6:14-6:30: @21[9]: _87 = move _88 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:14-6:30: @21.Call: _82 = Arguments::new_v1(move _83, move _87) -&gt; [return: bb22, unwind: bb29]\n+6:14-6:30: @21.Call: _82 = std::fmt::Arguments::new_v1(move _83, move _87) -&gt; [return: bb22, unwind: bb29]\n 6:14-6:30: @22.Call: core::panicking::panic_fmt(move _82) -&gt; bb29\"><span class=\"annotation\">@18,20,21,22\u298a</span>assert_eq!(1, 1)<span class=\"annotation\">\u2989@18,20,21,22</span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:14-6:30: @19[0]: _0 = const ()\"><span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\">, // and this too</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">@24\u298a</span></span></span><span class=\"code even\" style=\"--layer: 2\" title=\"7:14-7:30: @23[5]: _147 = const fn_run_in_doctests::promoted[9]\n 7:14-7:30: @23[6]: _119 = &amp;(*_147)\n@@ -156,16 +156,16 @@\n 7:14-7:30: @23[28]: _130 = (_125.0: &amp;&amp;i32)\n 7:14-7:30: @23[30]: _131 = (_125.1: &amp;&amp;i32)\n 7:14-7:30: @23[33]: _133 = &amp;(*_130)\n-7:14-7:30: @23[35]: _134 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @23.Call: _132 = ArgumentV1::new::&lt;&amp;i32&gt;(move _133, move _134) -&gt; [return: bb25, unwind: bb29]\n+7:14-7:30: @23[35]: _134 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+7:14-7:30: @23.Call: _132 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _133, move _134) -&gt; [return: bb25, unwind: bb29]\n 7:14-7:30: @25[4]: _136 = &amp;(*_131)\n-7:14-7:30: @25[6]: _137 = &lt;&amp;i32 as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-7:14-7:30: @25.Call: _135 = ArgumentV1::new::&lt;&amp;i32&gt;(move _136, move _137) -&gt; [return: bb26, unwind: bb29]\n+7:14-7:30: @25[6]: _137 = &lt;&amp;i32 as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r &amp;i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+7:14-7:30: @25.Call: _135 = std::fmt::ArgumentV1::new::&lt;&amp;i32&gt;(move _136, move _137) -&gt; [return: bb26, unwind: bb29]\n 7:14-7:30: @26[2]: _124 = [move _132, move _135]\n 7:14-7:30: @26[7]: _123 = &amp;_124\n 7:14-7:30: @26[8]: _122 = &amp;(*_123)\n 7:14-7:30: @26[9]: _121 = move _122 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-7:14-7:30: @26.Call: _116 = Arguments::new_v1(move _117, move _121) -&gt; [return: bb27, unwind: bb29]\n+7:14-7:30: @26.Call: _116 = std::fmt::Arguments::new_v1(move _117, move _121) -&gt; [return: bb27, unwind: bb29]\n 7:14-7:30: @27.Call: core::panicking::panic_fmt(move _116) -&gt; bb29\"><span class=\"annotation\">@23,25,26,27\u298a</span>assert_eq!(1, 2)<span class=\"annotation\">\u2989@23,25,26,27</span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:14-7:30: @24[0]: _0 = const ()\"><span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">, // however this is not</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:2-9:2: @28.Return: return\"><span class=\"annotation\">@28\u298a</span>\u2038<span class=\"annotation\">\u2989@28</span></span></span></span></div>"}, {"sha": "66a6e776a0622d57cc54de40d3625699a932b9a2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -109,10 +109,10 @@\n 20:9-20:43: @1[18]: _15 = &amp;(*_20)\n 20:9-20:43: @1[19]: _14 = &amp;(*_15)\n 20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @1.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n-20:9-20:43: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb11]\n+20:9-20:43: @1.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n+20:9-20:43: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb11]\n 20:9-20:43: @4[5]: _6 = const ()\n-21:16-21:22: @4[7]: _0 = Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,8,9\u298a</span>println!(\"Exiting with error...\");</span></span>\n+21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@1,3,4,8,9\u298a</span>println!(\"Exiting with error...\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"20:18-20:41: @1[6]: _21 = const main::promoted[1]\n 20:18-20:41: @1[7]: _11 = &amp;(*_21)\n 20:18-20:41: @1[8]: _10 = &amp;(*_11)\n@@ -123,30 +123,30 @@\n 20:9-20:43: @1[18]: _15 = &amp;(*_20)\n 20:9-20:43: @1[19]: _14 = &amp;(*_15)\n 20:9-20:43: @1[20]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:9-20:43: @1.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n-20:9-20:43: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb11]\n+20:9-20:43: @1.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb11]\n+20:9-20:43: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb11]\n 20:9-20:43: @4[5]: _6 = const ()\n-21:16-21:22: @4[7]: _0 = Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+21:16-21:22: @4[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@1,3,4,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,5,6,7\u298a</span></span></span>\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"><span class=\"annotation\">@2,5,6,7\u298a</span></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _19)\">    let _ = Firework { strength: 1000 };</span></span>\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    let _ = Firework { strength: 1000 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:6-22:6: @2[0]: _3 = const ()\n 24:13-24:40: @2[4]: _18 = Firework { strength: const 1000_i32 }\n 26:8-26:10: @5[2]: _19 = ()\n-26:5-26:11: @5[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,5,6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+26:5-26:11: @5[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _19)\">    Ok(())<span class=\"annotation\">\u2989@2,5,6,7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:2-27:2: @10.Return: return\"><span class=\"annotation\">@10\u298a</span>\u2038<span class=\"annotation\">\u2989@10</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "57d56c5cf736954fb6b408b659c57702d286f906", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.drop_trait/drop_trait.{impl#0}-drop.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.drop_trait%2Fdrop_trait.%7Bimpl%230%7D-drop.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,7 +69,7 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n 10:18-10:36: @0[7]: _7 = &amp;(*_19)\n 10:18-10:36: @0[8]: _6 = &amp;(*_7)\n 10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -79,17 +79,17 @@\n 10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n 10:9-10:53: @0[25]: _17 = &amp;(*_15)\n 10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 10:9-10:53: @1[2]: _12 = [move _16]\n 10:9-10:53: @1[5]: _11 = &amp;_12\n 10:9-10:53: @1[6]: _10 = &amp;(*_11)\n 10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 10:9-10:53: @3[6]: _2 = const ()\n 9:24-11:6: @3[8]: _0 = const ()\n 11:6-11:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn drop(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n 10:18-10:36: @0[7]: _7 = &amp;(*_19)\n 10:18-10:36: @0[8]: _6 = &amp;(*_7)\n 10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -99,17 +99,17 @@\n 10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n 10:9-10:53: @0[25]: _17 = &amp;(*_15)\n 10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 10:9-10:53: @1[2]: _12 = [move _16]\n 10:9-10:53: @1[5]: _11 = &amp;_12\n 10:9-10:53: @1[6]: _10 = &amp;(*_11)\n 10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 10:9-10:53: @3[6]: _2 = const ()\n 9:24-11:6: @3[8]: _0 = const ()\n 11:6-11:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as Drop&gt;::drop::promoted[0]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:36: @0[6]: _19 = const &lt;Firework as std::ops::Drop&gt;::drop::promoted[0]\n 10:18-10:36: @0[7]: _7 = &amp;(*_19)\n 10:18-10:36: @0[8]: _6 = &amp;(*_7)\n 10:18-10:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -119,13 +119,13 @@\n 10:9-10:53: @0[22]: _15 = (_13.0: &amp;i32)\n 10:9-10:53: @0[25]: _17 = &amp;(*_15)\n 10:9-10:53: @0[27]: _18 = &lt;i32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r i32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-10:9-10:53: @0.Call: _16 = ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+10:9-10:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;i32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 10:9-10:53: @1[2]: _12 = [move _16]\n 10:9-10:53: @1[5]: _11 = &amp;_12\n 10:9-10:53: @1[6]: _10 = &amp;(*_11)\n 10:9-10:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-10:9-10:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-10:9-10:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+10:9-10:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+10:9-10:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 10:9-10:53: @3[6]: _2 = const ()\n 9:24-11:6: @3[8]: _0 = const ()\n 11:6-11:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>"}, {"sha": "098c140425160b70e3e9e5dc728143cf9045b373", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -178,10 +178,10 @@\n 31:9-31:43: @4[18]: _21 = &amp;(*_26)\n 31:9-31:43: @4[19]: _20 = &amp;(*_21)\n 31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @4.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n-31:9-31:43: @6.Call: _13 = _print(move _14) -&gt; [return: bb7, unwind: bb14]\n+31:9-31:43: @4.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n+31:9-31:43: @6.Call: _13 = std::io::_print(move _14) -&gt; [return: bb7, unwind: bb14]\n 31:9-31:43: @7[5]: _12 = const ()\n-32:16-32:22: @7[7]: _0 = Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,11,12\u298a</span>println!(\"Exiting with error...\");</span></span>\n+32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@4,6,7,11,12\u298a</span>println!(\"Exiting with error...\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"31:18-31:41: @4[6]: _27 = const main::promoted[1]\n 31:18-31:41: @4[7]: _17 = &amp;(*_27)\n 31:18-31:41: @4[8]: _16 = &amp;(*_17)\n@@ -192,46 +192,46 @@\n 31:9-31:43: @4[18]: _21 = &amp;(*_26)\n 31:9-31:43: @4[19]: _20 = &amp;(*_21)\n 31:9-31:43: @4[20]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-31:9-31:43: @4.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n-31:9-31:43: @6.Call: _13 = _print(move _14) -&gt; [return: bb7, unwind: bb14]\n+31:9-31:43: @4.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb6, unwind: bb14]\n+31:9-31:43: @6.Call: _13 = std::io::_print(move _14) -&gt; [return: bb7, unwind: bb14]\n 31:9-31:43: @7[5]: _12 = const ()\n-32:16-32:22: @7[7]: _0 = Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+32:16-32:22: @7[7]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\">        return Err(1)<span class=\"annotation\">\u2989@4,6,7,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,8,9,10\u298a</span> // The remaining lines below have no coverage because `if true` (with the constant literal</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"><span class=\"annotation\">@5,8,9,10\u298a</span> // The remaining lines below have no coverage because `if true` (with the constant literal</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // `true`) is guaranteed to execute the `then` block, which is also guaranteed to `return`.</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // Thankfully, in the normal case, conditions are not guaranteed ahead of time, and as shown</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">      // in other tests, the lines below would have coverage (which would show they had `0`</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // in other tests, the lines below would have coverage (which would show they had `0`</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">      // executions, assuming the condition still evaluated to `true`).</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">      // executions, assuming the condition still evaluated to `true`).</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">    let _ = Firework { strength: 1000 };</span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    let _ = Firework { strength: 1000 };</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\"></span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:6-33:6: @5[0]: _9 = const ()\n 39:13-39:40: @5[4]: _24 = Firework::&lt;i32&gt; { strength: const 1000_i32 }\n 41:8-41:10: @8[2]: _25 = ()\n-41:5-41:11: @8[3]: _0 = Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+41:5-41:11: @8[3]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _25)\">    Ok(())<span class=\"annotation\">\u2989@5,8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:2-42:2: @13.Return: return\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "4908bc7b4a7723f9f1c8b2726590ffdc024df8bd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.generics/generics.{impl#1}-drop.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.generics%2Fgenerics.%7Bimpl%231%7D-drop.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,7 +69,7 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+<div class=\"code\" style=\"counter-reset: line 16\"><span class=\"line\">    <span><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n 18:18-18:36: @0[7]: _7 = &amp;(*_19)\n 18:18-18:36: @0[8]: _6 = &amp;(*_7)\n 18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -79,17 +79,17 @@\n 18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n 18:9-18:53: @0[25]: _17 = &amp;(*_15)\n 18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 18:9-18:53: @1[2]: _12 = [move _16]\n 18:9-18:53: @1[5]: _11 = &amp;_12\n 18:9-18:53: @1[6]: _10 = &amp;(*_11)\n 18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 18:9-18:53: @3[6]: _2 = const ()\n 17:24-19:6: @3[8]: _0 = const ()\n 19:6-19:6: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn drop(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n 18:18-18:36: @0[7]: _7 = &amp;(*_19)\n 18:18-18:36: @0[8]: _6 = &amp;(*_7)\n 18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -99,17 +99,17 @@\n 18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n 18:9-18:53: @0[25]: _17 = &amp;(*_15)\n 18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 18:9-18:53: @1[2]: _12 = [move _16]\n 18:9-18:53: @1[5]: _11 = &amp;_12\n 18:9-18:53: @1[6]: _10 = &amp;(*_11)\n 18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 18:9-18:53: @3[6]: _2 = const ()\n 17:24-19:6: @3[8]: _0 = const ()\n 19:6-19:6: @3.Return: return\">        println!(\"BOOM times {}!!!\", self.strength);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as Drop&gt;::drop::promoted[0]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"18:18-18:36: @0[6]: _19 = const &lt;Firework&lt;T&gt; as std::ops::Drop&gt;::drop::promoted[0]\n 18:18-18:36: @0[7]: _7 = &amp;(*_19)\n 18:18-18:36: @0[8]: _6 = &amp;(*_7)\n 18:18-18:36: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -119,13 +119,13 @@\n 18:9-18:53: @0[22]: _15 = (_13.0: &amp;T)\n 18:9-18:53: @0[25]: _17 = &amp;(*_15)\n 18:9-18:53: @0[27]: _18 = &lt;T as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:9-18:53: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+18:9-18:53: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 18:9-18:53: @1[2]: _12 = [move _16]\n 18:9-18:53: @1[5]: _11 = &amp;_12\n 18:9-18:53: @1[6]: _10 = &amp;(*_11)\n 18:9-18:53: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:9-18:53: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-18:9-18:53: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+18:9-18:53: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+18:9-18:53: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 18:9-18:53: @3[6]: _2 = const ()\n 17:24-19:6: @3[8]: _0 = const ()\n 19:6-19:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>"}, {"sha": "d6eccf57846ef4a817c6af1f8d61f57b4a5cf8a4", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if/if.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if%2Fif.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,153 +69,153 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    is_true</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">        std::env::args().len()</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    ==</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">        1</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    let</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">        mut</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    =</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">        0</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    ;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32\n 15:9-16:14: @3[3]: FakeRead(ForLet, _5)\n 21:9-21:16: @3[5]: _6 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:9-10:25: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 10:9-10:25: @1[0]: _3 = &amp;_4\n-10:9-10:31: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+10:9-10:31: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 10:9-12:10: @2[1]: _1 = Eq(move _2, const 1_usize)\n 8:5-8:12: @2[3]: FakeRead(ForLet, _1)\n 18:9-18:10: @3[2]: _5 = const 0_i32"}, {"sha": "e0f0ac40205947b275aab639c0451c980d1aac79", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.if_else/if_else.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.if_else%2Fif_else.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,73 +69,73 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 11:9-11:16: @3[6]: _7 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb11]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb11]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb10]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32"}, {"sha": "1dc5bb64e0bc3c36141ce34fc5cf553864ba69c8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-InTrait-default_trait_func.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,24 +69,24 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = in_func(const IN_CONST) -&gt; [return: bb1, unwind: bb3]\n+<div class=\"code\" style=\"counter-reset: line 32\"><span class=\"line\">        <span><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n 35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as InTrait&gt;::trait_func(move _4, const IN_CONST) -&gt; [return: bb2, unwind: bb3]\n+35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n 33:42-36:10: @2[2]: _0 = const ()\n 36:10-36:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>fn default_trait_func(&amp;mut self) {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = in_func(const IN_CONST) -&gt; [return: bb1, unwind: bb3]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n 35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as InTrait&gt;::trait_func(move _4, const IN_CONST) -&gt; [return: bb2, unwind: bb3]\n+35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n 33:42-36:10: @2[2]: _0 = const ()\n 36:10-36:10: @2.Return: return\">            in_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = in_func(const IN_CONST) -&gt; [return: bb1, unwind: bb3]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n 35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as InTrait&gt;::trait_func(move _4, const IN_CONST) -&gt; [return: bb2, unwind: bb3]\n+35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n 33:42-36:10: @2[2]: _0 = const ()\n 36:10-36:10: @2.Return: return\">            self.trait_func(IN_CONST);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = in_func(const IN_CONST) -&gt; [return: bb1, unwind: bb3]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"34:13-34:30: @0.Call: _2 = main::in_func(const main::IN_CONST) -&gt; [return: bb1, unwind: bb3]\n 35:13-35:17: @1[3]: _4 = &amp;mut (*_1)\n-35:13-35:38: @1.Call: _3 = &lt;Self as InTrait&gt;::trait_func(move _4, const IN_CONST) -&gt; [return: bb2, unwind: bb3]\n+35:13-35:38: @1.Call: _3 = &lt;Self as main::InTrait&gt;::trait_func(move _4, const main::IN_CONST) -&gt; [return: bb2, unwind: bb3]\n 33:42-36:10: @2[2]: _0 = const ()\n 36:10-36:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "82724e5e8651773f8c1b2445f9d4fdeaecfb0151", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -76,7 +76,7 @@\n 20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n 20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n 20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -86,13 +86,13 @@\n 21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n 21:9-21:30: @1[28]: _21 = &amp;(*_19)\n 21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n 21:9-21:30: @2[2]: _16 = [move _20]\n 21:9-21:30: @2[5]: _15 = &amp;_16\n 21:9-21:30: @2[6]: _14 = &amp;(*_15)\n 21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n 22:6-22:6: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>fn in_func(a: u32) {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n@@ -102,7 +102,7 @@\n 20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n 20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n 20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -112,13 +112,13 @@\n 21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n 21:9-21:30: @1[28]: _21 = &amp;(*_19)\n 21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n 21:9-21:30: @2[2]: _16 = [move _20]\n 21:9-21:30: @2[5]: _15 = &amp;_16\n 21:9-21:30: @2[6]: _14 = &amp;(*_15)\n 21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n 22:6-22:6: @4.Return: return\">        let b = 1;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n@@ -128,7 +128,7 @@\n 20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n 20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n 20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -138,13 +138,13 @@\n 21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n 21:9-21:30: @1[28]: _21 = &amp;(*_19)\n 21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n 21:9-21:30: @2[2]: _16 = [move _20]\n 21:9-21:30: @2[5]: _15 = &amp;_16\n 21:9-21:30: @2[6]: _14 = &amp;(*_15)\n 21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n 22:6-22:6: @4.Return: return\">        let c = a + b;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n@@ -154,7 +154,7 @@\n 20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n 20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n 20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -164,13 +164,13 @@\n 21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n 21:9-21:30: @1[28]: _21 = &amp;(*_19)\n 21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n 21:9-21:30: @2[2]: _16 = [move _20]\n 21:9-21:30: @2[5]: _15 = &amp;_16\n 21:9-21:30: @2[6]: _14 = &amp;(*_15)\n 21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n 22:6-22:6: @4.Return: return\">        println!(\"c = {}\", c)</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n@@ -180,7 +180,7 @@\n 20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n 20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n 20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n-21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[9]: _23 = const main::in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -190,13 +190,13 @@\n 21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n 21:9-21:30: @1[28]: _21 = &amp;(*_19)\n 21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @1.Call: _20 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n 21:9-21:30: @2[2]: _16 = [move _20]\n 21:9-21:30: @2[5]: _15 = &amp;_16\n 21:9-21:30: @2[6]: _14 = &amp;(*_15)\n 21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n-21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @2.Call: _8 = std::fmt::Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = std::io::_print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n 22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n </body>"}, {"sha": "b00a781a0a74c815968df4353d0ff8a6c6eb5945", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,28 +73,28 @@\n 41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n 41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n 42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 40:45-43:10: @2[2]: _0 = const ()\n 43:10-43:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>fn trait_func(&amp;mut self, incr: u32) {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n 41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n 41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n 42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 40:45-43:10: @2[2]: _0 = const ()\n 43:10-43:10: @2.Return: return\">            self.in_struct_field += incr;</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n 41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n 41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n 42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 40:45-43:10: @2[2]: _0 = const ()\n 43:10-43:10: @2.Return: return\">            in_func(self.in_struct_field);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n 41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n 41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n 42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n-42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+42:13-42:42: @1.Call: _5 = main::in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n 40:45-43:10: @2[2]: _0 = const ()\n 43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>"}, {"sha": "4a1003dfbed32c7164ef80039f7fc41024c901fc", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.inner_items/inner_items.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.inner_items%2Finner_items.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,33 +73,33 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_u32\n@@ -146,44 +146,44 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    type InType = String;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:8-48:15: @6[4]: _9 = _1\"><span class=\"annotation\">@6\u298a</span>is_true<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n 48:16-50:6: @9[2]: _8 = const ()\"><span class=\"annotation\">@7,9\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n 48:16-50:6: @9[2]: _8 = const ()\">        in_func(countdown);</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"49:17-49:26: @7[2]: _11 = _5\n-49:9-49:27: @7.Call: _10 = in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n+49:9-49:27: @7.Call: _10 = main::in_func(move _11) -&gt; [return: bb9, unwind: bb13]\n 48:16-50:6: @9[2]: _8 = const ()\">    }<span class=\"annotation\">\u2989@7,9</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:6-50:6: @8[0]: _8 = const ()\"><span class=\"annotation\">@8\u298a</span>\u2038<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\"><span class=\"annotation\">@10,11\u298a</span>mut val = InStruct {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\">        in_struct_field: 101,</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\">    };</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\">    val.default_trait_func();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = InStruct { in_struct_field: const 101_u32 }\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:19-54:6: @10[3]: _12 = main::InStruct { in_struct_field: const 101_u32 }\n 52:9-52:16: @10[4]: FakeRead(ForLet, _12)\n 56:5-56:8: @10[7]: _14 = &amp;mut _12\n-56:5-56:29: @10.Call: _13 = &lt;InStruct as InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n+56:5-56:29: @10.Call: _13 = &lt;main::InStruct as main::InTrait&gt;::default_trait_func(move _14) -&gt; [return: bb11, unwind: bb13]\n 57:2-57:2: @11.Return: return\">}<span class=\"annotation\">\u2989@10,11</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "358e2e2bbba3c143565f0591d0315abe69b1d7a6", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.lazy_boolean/lazy_boolean.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.lazy_boolean%2Flazy_boolean.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,79 +69,79 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)\n 9:10-9:15: @3[4]: _5 = (_8.0: i32)\n 9:17-9:22: @3[6]: _6 = (_8.1: i32)\n 9:24-9:29: @3[8]: _7 = (_8.2: i32)\n 10:8-10:15: @3[12]: _10 = _1\">    let (mut a, mut b, mut c) = (0, 0, 0);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb36]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb36]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb35]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:33-9:42: @3[2]: _8 = (const 0_i32, const 0_i32, const 0_i32)"}, {"sha": "95e8f0b71eab80dc1a6fe6912d070326801150ec", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -80,14 +80,14 @@\n 24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n 24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n 24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 24:5-24:34: @1[2]: _12 = [move _16]\n 24:5-24:34: @1[5]: _11 = &amp;_12\n 24:5-24:34: @1[6]: _10 = &amp;(*_11)\n 24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 24:5-24:34: @3[6]: _2 = const ()\n 22:11-25:2: @3[8]: _0 = const ()\n 25:2-25:2: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n@@ -102,14 +102,14 @@\n 24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n 24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n 24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 24:5-24:34: @1[2]: _12 = [move _16]\n 24:5-24:34: @1[5]: _11 = &amp;_12\n 24:5-24:34: @1[6]: _10 = &amp;(*_11)\n 24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 24:5-24:34: @3[6]: _2 = const ()\n 22:11-25:2: @3[8]: _0 = const ()\n 25:2-25:2: @3.Return: return\">    let debug_test = DebugTest;</span></span>\n@@ -124,14 +124,14 @@\n 24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n 24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n 24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 24:5-24:34: @1[2]: _12 = [move _16]\n 24:5-24:34: @1[5]: _11 = &amp;_12\n 24:5-24:34: @1[6]: _10 = &amp;(*_11)\n 24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 24:5-24:34: @3[6]: _2 = const ()\n 22:11-25:2: @3[8]: _0 = const ()\n 25:2-25:2: @3.Return: return\">    println!(\"{:?}\", debug_test);</span></span>\n@@ -146,14 +146,14 @@\n 24:5-24:34: @0[23]: FakeRead(ForMatchedPlace, _13)\n 24:5-24:34: @0[25]: _15 = (_13.0: &amp;DebugTest)\n 24:5-24:34: @0[28]: _17 = &amp;(*_15)\n-24:5-24:34: @0[30]: _18 = &lt;DebugTest as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-24:5-24:34: @0.Call: _16 = ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n+24:5-24:34: @0[30]: _18 = &lt;DebugTest as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r DebugTest, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+24:5-24:34: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;DebugTest&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb4]\n 24:5-24:34: @1[2]: _12 = [move _16]\n 24:5-24:34: @1[5]: _11 = &amp;_12\n 24:5-24:34: @1[6]: _10 = &amp;(*_11)\n 24:5-24:34: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-24:5-24:34: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n-24:5-24:34: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb4]\n+24:5-24:34: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb4]\n+24:5-24:34: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb4]\n 24:5-24:34: @3[6]: _2 = const ()\n 22:11-25:2: @3[8]: _0 = const ()\n 25:2-25:2: @3.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>"}, {"sha": "f6f08b6a7704bd45ec016b323a493c9db44c613d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.loops_branches/loops_branches.{impl#0}-fmt.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.loops_branches%2Floops_branches.%7Bimpl%230%7D-fmt.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -77,24 +77,24 @@\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:28-13:18: @8[0]: _7 = const ()\">                }<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:14-14:14: @3[0]: _5 = const ()\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:20-15:21: @9[6]: _13 = &amp;mut (*_2)\n-15:23-15:30: @9[11]: _32 = const &lt;DebugTest as Debug&gt;::fmt::promoted[1]\n+15:23-15:30: @9[11]: _32 = const &lt;DebugTest as std::fmt::Debug&gt;::fmt::promoted[1]\n 15:23-15:30: @9[12]: _17 = &amp;(*_32)\n 15:23-15:30: @9[13]: _16 = &amp;(*_17)\n 15:23-15:30: @9[14]: _15 = move _16 as &amp;[&amp;str] (Pointer(Unsize))\n 15:13-15:31: @9[20]: _23 = ()\n 15:13-15:31: @9[21]: FakeRead(ForMatchedPlace, _23)\n-15:13-15:31: @9[22]: _31 = const &lt;DebugTest as Debug&gt;::fmt::promoted[0]\n+15:13-15:31: @9[22]: _31 = const &lt;DebugTest as std::fmt::Debug&gt;::fmt::promoted[0]\n 15:13-15:31: @9[23]: _21 = &amp;(*_31)\n 15:13-15:31: @9[24]: _20 = &amp;(*_21)\n 15:13-15:31: @9[25]: _19 = move _20 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-15:13-15:31: @9.Call: _14 = Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb21]\n-15:13-15:31: @10.Call: _12 = Formatter::write_fmt(move _13, move _14) -&gt; [return: bb11, unwind: bb21]\"><span class=\"annotation\">@9,10,11,12\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@9,10,11,12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:31-15:32: @16[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n+15:13-15:31: @9.Call: _14 = std::fmt::Arguments::new_v1(move _15, move _19) -&gt; [return: bb10, unwind: bb21]\n+15:13-15:31: @10.Call: _12 = std::fmt::Formatter::write_fmt(move _13, move _14) -&gt; [return: bb11, unwind: bb21]\"><span class=\"annotation\">@9,10,11,12\u298a</span>write!(f, \"error\")<span class=\"annotation\">\u2989@9,10,11,12</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:31-15:32: @16[1]: _25 = ((_11 as Err).0: std::fmt::Error)\n 15:31-15:32: @16[4]: _28 = _25\n-15:31-15:32: @16.Call: _27 = &lt;std::fmt::Error as From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb17, unwind: bb21]\"><span class=\"annotation\">@14,16,17,18\u298a</span>?<span class=\"annotation\">\u2989@14,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+15:31-15:32: @16.Call: _27 = &lt;std::fmt::Error as std::convert::From&lt;std::fmt::Error&gt;&gt;::from(move _28) -&gt; [return: bb17, unwind: bb21]\"><span class=\"annotation\">@14,16,17,18\u298a</span>?<span class=\"annotation\">\u2989@14,16,17,18</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\"><span class=\"annotation\">@2\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"16:16-17:10: @2[0]: _3 = const ()\">        }<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:14: @19[3]: _30 = ()\n-18:9-18:15: @19[4]: _0 = Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@19\u298a</span>Ok(())<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+18:9-18:15: @19[4]: _0 = std::result::Result::&lt;(), std::fmt::Error&gt;::Ok(move _30)\"><span class=\"annotation\">@19\u298a</span>Ok(())<span class=\"annotation\">\u2989@19</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:6-19:6: @20.Return: return\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "013c292ce9a4318b929f5bddb5c047f993141e15", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.match_or_pattern/match_or_pattern.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.match_or_pattern%2Fmatch_or_pattern.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,9 +69,9 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -81,9 +81,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -93,9 +93,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -105,9 +105,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -117,9 +117,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -129,9 +129,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -141,9 +141,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -153,9 +153,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    let mut a: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8\n@@ -165,9 +165,9 @@\n 10:9-10:14: @3[7]: FakeRead(ForLet, _6)\n 10:16-10:18: @3[8]: AscribeUserType(_6, o, UserTypeProjection { base: UserType(3), projs: [] })\n 11:8-11:15: @3[11]: _8 = _1\">    let mut b: u8 = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb37]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb37]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb36]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:21-9:22: @3[2]: _5 = const 0_u8"}, {"sha": "1abc24156d9c384ffedecde1f54ab7f957d2a65d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,23 +69,23 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n+<div class=\"code\" style=\"counter-reset: line 0\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n+2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n 3:9-3:22: @3[3]: FakeRead(ForLet, _5)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n+2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n 3:9-3:22: @3[3]: FakeRead(ForLet, _5)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb32]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"2:19-2:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb32]\n 2:19-2:35: @1[0]: _3 = &amp;_4\n-2:19-2:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n+2:19-2:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb31]\n 2:19-2:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 2:9-2:16: @2[3]: FakeRead(ForLet, _1)\n 3:25-3:27: @3[2]: _5 = const 10_i32\n@@ -107,7 +107,7 @@\n 8:13-8:14: @16[4]: _15 = move _22\n 8:13-8:14: @16[5]: _16 = const ()\"><span class=\"annotation\">@14,16\u298a</span>_<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> in </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:18-8:23: @11[5]: _19 = &amp;mut _14\n 8:18-8:23: @11[6]: _18 = &amp;mut (*_19)\n-8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb32]\n+8:18-8:23: @11.Call: _17 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _18) -&gt; [return: bb12, unwind: bb32]\n 8:18-8:23: @12[1]: FakeRead(ForMatchedPlace, _17)\"><span class=\"annotation\">@10,11,12\u298a</span>0..50<span class=\"annotation\">\u2989@10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"9:16-9:17: @16[15]: _27 = _9\n 9:16-9:22: @16[16]: _26 = Lt(move _27, const 30_i32)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>"}, {"sha": "2a9b1b10efcd24006c341b9d123133dbbff65f33", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -89,13 +89,13 @@\n 20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n 20:13-20:44: @8[26]: _25 = &amp;(*_23)\n 20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n 20:13-20:44: @9[2]: _20 = [move _24]\n 20:13-20:44: @9[5]: _19 = &amp;_20\n 20:13-20:44: @9[6]: _18 = &amp;(*_19)\n 20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n 20:13-20:44: @11[6]: _10 = const ()\n 18:27-21:10: @11[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n@@ -110,13 +110,13 @@\n 20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n 20:13-20:44: @8[26]: _25 = &amp;(*_23)\n 20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n 20:13-20:44: @9[2]: _20 = [move _24]\n 20:13-20:44: @9[5]: _19 = &amp;_20\n 20:13-20:44: @9[6]: _18 = &amp;(*_19)\n 20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n 20:13-20:44: @11[6]: _10 = const ()\n 18:27-21:10: @11[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n@@ -131,13 +131,13 @@\n 20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n 20:13-20:44: @8[26]: _25 = &amp;(*_23)\n 20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n 20:13-20:44: @9[2]: _20 = [move _24]\n 20:13-20:44: @9[5]: _19 = &amp;_20\n 20:13-20:44: @9[6]: _18 = &amp;(*_19)\n 20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n 20:13-20:44: @11[6]: _10 = const ()\n 18:27-21:10: @11[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @6.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb8, unwind: bb21]\n@@ -152,13 +152,13 @@\n 20:13-20:44: @8[23]: _23 = (_21.0: &amp;u32)\n 20:13-20:44: @8[26]: _25 = &amp;(*_23)\n 20:13-20:44: @8[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-20:13-20:44: @8.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n+20:13-20:44: @8.Call: _24 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb9, unwind: bb21]\n 20:13-20:44: @9[2]: _20 = [move _24]\n 20:13-20:44: @9[5]: _19 = &amp;_20\n 20:13-20:44: @9[6]: _18 = &amp;(*_19)\n 20:13-20:44: @9[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-20:13-20:44: @9.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n-20:13-20:44: @10.Call: _11 = _print(move _12) -&gt; [return: bb11, unwind: bb21]\n+20:13-20:44: @9.Call: _12 = std::fmt::Arguments::new_v1(move _13, move _17) -&gt; [return: bb10, unwind: bb21]\n+20:13-20:44: @10.Call: _11 = std::io::_print(move _12) -&gt; [return: bb11, unwind: bb21]\n 20:13-20:44: @11[6]: _10 = const ()\n 18:27-21:10: @11[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n 21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n@@ -173,13 +173,13 @@\n 23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n 23:13-23:44: @14[26]: _45 = &amp;(*_43)\n 23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n 23:13-23:44: @15[2]: _40 = [move _44]\n 23:13-23:44: @15[5]: _39 = &amp;_40\n 23:13-23:44: @15[6]: _38 = &amp;(*_39)\n 23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n 23:13-23:44: @17[6]: _30 = const ()\n 21:33-24:10: @17[8]: _6 = const ()\"><span class=\"annotation\">@12,14,15,16,17\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n@@ -194,13 +194,13 @@\n 23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n 23:13-23:44: @14[26]: _45 = &amp;(*_43)\n 23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n 23:13-23:44: @15[2]: _40 = [move _44]\n 23:13-23:44: @15[5]: _39 = &amp;_40\n 23:13-23:44: @15[6]: _38 = &amp;(*_39)\n 23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n 23:13-23:44: @17[6]: _30 = const ()\n 21:33-24:10: @17[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n@@ -215,13 +215,13 @@\n 23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n 23:13-23:44: @14[26]: _45 = &amp;(*_43)\n 23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n 23:13-23:44: @15[2]: _40 = [move _44]\n 23:13-23:44: @15[5]: _39 = &amp;_40\n 23:13-23:44: @15[6]: _38 = &amp;(*_39)\n 23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n 23:13-23:44: @17[6]: _30 = const ()\n 21:33-24:10: @17[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @12.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb14, unwind: bb21]\n@@ -236,23 +236,23 @@\n 23:13-23:44: @14[23]: _43 = (_41.0: &amp;u32)\n 23:13-23:44: @14[26]: _45 = &amp;(*_43)\n 23:13-23:44: @14[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-23:13-23:44: @14.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n+23:13-23:44: @14.Call: _44 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb15, unwind: bb21]\n 23:13-23:44: @15[2]: _40 = [move _44]\n 23:13-23:44: @15[5]: _39 = &amp;_40\n 23:13-23:44: @15[6]: _38 = &amp;(*_39)\n 23:13-23:44: @15[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-23:13-23:44: @15.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n-23:13-23:44: @16.Call: _31 = _print(move _32) -&gt; [return: bb17, unwind: bb21]\n+23:13-23:44: @15.Call: _32 = std::fmt::Arguments::new_v1(move _33, move _37) -&gt; [return: bb16, unwind: bb21]\n+23:13-23:44: @16.Call: _31 = std::io::_print(move _32) -&gt; [return: bb17, unwind: bb21]\n 23:13-23:44: @17[6]: _30 = const ()\n 21:33-24:10: @17[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@12,14,15,16,17</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @13[0]: _6 = const ()\"><span class=\"annotation\">@13\u298a</span>\u2038<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:9-25:23: @19[2]: _47 = CheckedSub(_1, const 1_i32)\n 25:9-25:23: @20[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@19,20\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@19,20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n-27:5-27:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _49)\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n 28:2-28:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n-27:5-27:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _49)\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n 28:2-28:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "c6043f0bd07fec61148af490e6570b099fb68818", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -82,8 +82,8 @@\n 6:9-6:49: @1[18]: _14 = &amp;(*_60)\n 6:9-6:49: @1[19]: _13 = &amp;(*_14)\n 6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n 6:9-6:49: @4[5]: _5 = const ()\n 5:19-7:6: @4[7]: _2 = const ()\"><span class=\"annotation\">@1,3,4\u298a</span>{</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n@@ -96,8 +96,8 @@\n 6:9-6:49: @1[18]: _14 = &amp;(*_60)\n 6:9-6:49: @1[19]: _13 = &amp;(*_14)\n 6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n 6:9-6:49: @4[5]: _5 = const ()\n 5:19-7:6: @4[7]: _2 = const ()\">        println!(\"this will probably overflow\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @1[6]: _61 = const might_overflow::promoted[4]\n@@ -110,8 +110,8 @@\n 6:9-6:49: @1[18]: _14 = &amp;(*_60)\n 6:9-6:49: @1[19]: _13 = &amp;(*_14)\n 6:9-6:49: @1[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:49: @1.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n-6:9-6:49: @3.Call: _6 = _print(move _7) -&gt; [return: bb4, unwind: bb14]\n+6:9-6:49: @1.Call: _7 = std::fmt::Arguments::new_v1(move _8, move _12) -&gt; [return: bb3, unwind: bb14]\n+6:9-6:49: @3.Call: _6 = std::io::_print(move _7) -&gt; [return: bb4, unwind: bb14]\n 6:9-6:49: @4[5]: _5 = const ()\n 5:19-7:6: @4[7]: _2 = const ()\">    }<span class=\"annotation\">\u2989@1,3,4</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2[0]: _2 = const ()\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @5[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n@@ -129,16 +129,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -155,8 +155,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\"><span class=\"annotation\">@5,6,7,8,9,10,11,12,13\u298a</span>add_to = u32::MAX - 5;</span></span>\n@@ -175,16 +175,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -201,8 +201,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n@@ -221,16 +221,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -247,8 +247,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\">    let result = to_add + add_to;</span></span>\n@@ -267,16 +267,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -293,8 +293,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n@@ -313,16 +313,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -339,8 +339,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\">    result</span></span>\n@@ -359,16 +359,16 @@\n 9:5-9:56: @6[29]: _34 = (_30.1: &amp;u32)\n 9:5-9:56: @6[32]: _36 = &amp;(*_33)\n 9:5-9:56: @6[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @6.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n+9:5-9:56: @6.Call: _35 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb7, unwind: bb14]\n 9:5-9:56: @7[4]: _39 = &amp;(*_34)\n 9:5-9:56: @7[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-9:5-9:56: @7.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n+9:5-9:56: @7.Call: _38 = std::fmt::ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb8, unwind: bb14]\n 9:5-9:56: @8[2]: _29 = [move _35, move _38]\n 9:5-9:56: @8[7]: _28 = &amp;_29\n 9:5-9:56: @8[8]: _27 = &amp;(*_28)\n 9:5-9:56: @8[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:5-9:56: @8.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n-9:5-9:56: @9.Call: _20 = _print(move _21) -&gt; [return: bb10, unwind: bb14]\n+9:5-9:56: @8.Call: _21 = std::fmt::Arguments::new_v1(move _22, move _26) -&gt; [return: bb9, unwind: bb14]\n+9:5-9:56: @9.Call: _20 = std::io::_print(move _21) -&gt; [return: bb10, unwind: bb14]\n 9:5-9:56: @10[6]: _19 = const ()\n 10:18-10:24: @10[10]: _42 = _1\n 10:27-10:33: @10[12]: _43 = _17\n@@ -385,8 +385,8 @@\n 11:5-11:49: @11[22]: _54 = &amp;(*_57)\n 11:5-11:49: @11[23]: _53 = &amp;(*_54)\n 11:5-11:49: @11[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-11:5-11:49: @11.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n-11:5-11:49: @12.Call: _46 = _print(move _47) -&gt; [return: bb13, unwind: bb14]\n+11:5-11:49: @11.Call: _47 = std::fmt::Arguments::new_v1(move _48, move _52) -&gt; [return: bb12, unwind: bb14]\n+11:5-11:49: @12.Call: _46 = std::io::_print(move _47) -&gt; [return: bb13, unwind: bb14]\n 11:5-11:49: @13[5]: _45 = const ()\n 12:5-12:11: @13[7]: _0 = _41\n 13:2-13:2: @13.Return: return\">}<span class=\"annotation\">\u2989@5,6,7,8,9,10,11,12,13</span></span></span></span></div>"}, {"sha": "5b097f118e3a8779afc97e20ed722dc0c93115c5", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -93,10 +93,10 @@\n 21:9-21:23: @14[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@13,14\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@13,14</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n-23:5-23:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _15)\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n 24:2-24:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n-23:5-23:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _15)\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n 24:2-24:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "32988629ba0eb421873fea27611138327b4b8e9c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,10 +81,10 @@\n 6:9-6:34: @1[18]: _13 = &amp;(*_32)\n 6:9-6:34: @1[19]: _12 = &amp;(*_13)\n 6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-6:9-6:34: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+6:9-6:34: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+6:9-6:34: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n 6:9-6:34: @4[5]: _4 = const ()\n-7:9-7:26: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"panicking...\");</span></span>\n+7:9-7:26: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\"><span class=\"annotation\">@1,3,4\u298a</span>println!(\"panicking...\");</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @1[6]: _33 = const might_panic::promoted[3]\n 6:18-6:32: @1[7]: _9 = &amp;(*_33)\n 6:18-6:32: @1[8]: _8 = &amp;(*_9)\n@@ -95,10 +95,10 @@\n 6:9-6:34: @1[18]: _13 = &amp;(*_32)\n 6:9-6:34: @1[19]: _12 = &amp;(*_13)\n 6:9-6:34: @1[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-6:9-6:34: @1.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n-6:9-6:34: @3.Call: _5 = _print(move _6) -&gt; [return: bb4, unwind: bb7]\n+6:9-6:34: @1.Call: _6 = std::fmt::Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb7]\n+6:9-6:34: @3.Call: _5 = std::io::_print(move _6) -&gt; [return: bb4, unwind: bb7]\n 6:9-6:34: @4[5]: _4 = const ()\n-7:9-7:26: @4.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+7:9-7:26: @4.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb7\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n 9:18-9:31: @2[7]: _23 = &amp;(*_31)\n 9:18-9:31: @2[8]: _22 = &amp;(*_23)\n@@ -109,8 +109,8 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 9:9-9:33: @6[5]: _18 = const ()\n 8:12-10:6: @6[7]: _0 = const ()\n 11:2-11:2: @6.Return: return\"><span class=\"annotation\">@2,5,6\u298a</span>{</span></span>\n@@ -124,8 +124,8 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 9:9-9:33: @6[5]: _18 = const ()\n 8:12-10:6: @6[7]: _0 = const ()\n 11:2-11:2: @6.Return: return\">        println!(\"Don't Panic\");</span></span>\n@@ -139,8 +139,8 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 9:9-9:33: @6[5]: _18 = const ()\n 8:12-10:6: @6[7]: _0 = const ()\n 11:2-11:2: @6.Return: return\">    }</span></span>\n@@ -154,8 +154,8 @@\n 9:9-9:33: @2[18]: _27 = &amp;(*_30)\n 9:9-9:33: @2[19]: _26 = &amp;(*_27)\n 9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n-9:9-9:33: @5.Call: _19 = _print(move _20) -&gt; [return: bb6, unwind: bb7]\n+9:9-9:33: @2.Call: _20 = std::fmt::Arguments::new_v1(move _21, move _25) -&gt; [return: bb5, unwind: bb7]\n+9:9-9:33: @5.Call: _19 = std::io::_print(move _20) -&gt; [return: bb6, unwind: bb7]\n 9:9-9:33: @6[5]: _18 = const ()\n 8:12-10:6: @6[7]: _0 = const ()\n 11:2-11:2: @6.Return: return\">}<span class=\"annotation\">\u2989@2,5,6</span></span></span></span></div>"}, {"sha": "3e307c4f460d5a8b5005caffe897b508061c9957", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,28 +81,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>fn main() {</span></span>\n@@ -118,28 +118,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\">    let version_3_2_1 = Version::new(3, 2, 1);</span></span>\n@@ -155,28 +155,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\">    let version_3_3_0 = Version::new(3, 3, 0);</span></span>\n@@ -192,28 +192,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\"></span></span>\n@@ -229,28 +229,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\">    println!(\"{:?} &lt; {:?} = {}\", version_3_2_1, version_3_3_0, version_3_2_1 &lt; version_3_3_0);</span></span>\n@@ -266,28 +266,28 @@\n 25:49-25:62: @2[20]: _16 = &amp;_2\n 25:64-25:77: @2[24]: _19 = &amp;_1\n 25:80-25:93: @2[26]: _20 = &amp;_2\n-25:64-25:93: @2.Call: _18 = &lt;Version as PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n+25:64-25:93: @2.Call: _18 = &lt;Version as std::cmp::PartialOrd&gt;::lt(move _19, move _20) -&gt; [return: bb3, unwind: bb9]\n 25:64-25:93: @3[2]: _17 = &amp;_18\n 25:5-25:95: @3[3]: _14 = (move _15, move _16, move _17)\n 25:5-25:95: @3[7]: FakeRead(ForMatchedPlace, _14)\n 25:5-25:95: @3[9]: _21 = (_14.0: &amp;Version)\n 25:5-25:95: @3[11]: _22 = (_14.1: &amp;Version)\n 25:5-25:95: @3[13]: _23 = (_14.2: &amp;bool)\n 25:5-25:95: @3[16]: _25 = &amp;(*_21)\n-25:5-25:95: @3[18]: _26 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @3.Call: _24 = ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n+25:5-25:95: @3[18]: _26 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @3.Call: _24 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _25, move _26) -&gt; [return: bb4, unwind: bb9]\n 25:5-25:95: @4[4]: _28 = &amp;(*_22)\n-25:5-25:95: @4[6]: _29 = &lt;Version as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @4.Call: _27 = ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n+25:5-25:95: @4[6]: _29 = &lt;Version as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r Version, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+25:5-25:95: @4.Call: _27 = std::fmt::ArgumentV1::new::&lt;Version&gt;(move _28, move _29) -&gt; [return: bb5, unwind: bb9]\n 25:5-25:95: @5[4]: _31 = &amp;(*_23)\n 25:5-25:95: @5[6]: _32 = &lt;bool as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r bool, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-25:5-25:95: @5.Call: _30 = ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n+25:5-25:95: @5.Call: _30 = std::fmt::ArgumentV1::new::&lt;bool&gt;(move _31, move _32) -&gt; [return: bb6, unwind: bb9]\n 25:5-25:95: @6[2]: _13 = [move _24, move _27, move _30]\n 25:5-25:95: @6[9]: _12 = &amp;_13\n 25:5-25:95: @6[10]: _11 = &amp;(*_12)\n 25:5-25:95: @6[11]: _10 = move _11 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-25:5-25:95: @6.Call: _5 = Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n-25:5-25:95: @7.Call: _4 = _print(move _5) -&gt; [return: bb8, unwind: bb9]\n+25:5-25:95: @6.Call: _5 = std::fmt::Arguments::new_v1(move _6, move _10) -&gt; [return: bb7, unwind: bb9]\n+25:5-25:95: @7.Call: _4 = std::io::_print(move _5) -&gt; [return: bb8, unwind: bb9]\n 25:5-25:95: @8[7]: _3 = const ()\n 21:11-26:2: @8[9]: _0 = const ()\n 26:2-26:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>"}, {"sha": "3954fc3d0bd981e5b6cdf6abd5e001aeb95e334d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 8:5-8:17: @0[4]: _3 = &amp;(*_4)\n 8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Less\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @0.Call: _2 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = std::cmp::Ordering::Less\n+8:5-8:17: @1.Call: _0 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n 8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "86e18b3dbfd7b9bf541e67f7b4d428938c805bcb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 7:5-7:17: @0[5]: _4 = &amp;(*_5)\n 7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @0.Call: _3 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = std::cmp::Ordering::Equal\n+7:5-7:17: @1.Call: _2 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n 7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n 7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n </body>"}, {"sha": "652dc277081135305cbeb982c363842c8cf5f0ca", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-ge.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-ge.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,9 +81,9 @@\n 4:39-4:49: @0[21]: _13 = &amp;(*_14)\n 4:39-4:49: @0[24]: _16 = &amp;(*_3)\n 4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @0.Call: _12 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = std::cmp::Ordering::Equal\n+4:39-4:49: @1.Call: _11 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n 4:39-4:49: @2[4]: _19 = &amp;_7\n 4:39-4:49: @2[6]: _20 = &amp;_4\n 4:39-4:49: @2[8]: _21 = &amp;_8"}, {"sha": "57fc5d8d6dede92f67add88ef93cdee5f635faea", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 8:5-8:17: @0[4]: _3 = &amp;(*_4)\n 8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Less\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @0.Call: _2 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = std::cmp::Ordering::Less\n+8:5-8:17: @1.Call: _0 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n 8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "6fbcdff5ab7f7dcb1362a7c977f9b1627483997f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 7:5-7:17: @0[5]: _4 = &amp;(*_5)\n 7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @0.Call: _3 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = std::cmp::Ordering::Equal\n+7:5-7:17: @1.Call: _2 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n 7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n 7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n </body>"}, {"sha": "37f2661cf1809fb17a787094be97e616b0dc0d06", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-gt.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-gt.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,9 +81,9 @@\n 4:39-4:49: @0[21]: _13 = &amp;(*_14)\n 4:39-4:49: @0[24]: _16 = &amp;(*_3)\n 4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @0.Call: _12 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = std::cmp::Ordering::Equal\n+4:39-4:49: @1.Call: _11 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n 4:39-4:49: @2[4]: _19 = &amp;_7\n 4:39-4:49: @2[6]: _20 = &amp;_4\n 4:39-4:49: @2[8]: _21 = &amp;_8"}, {"sha": "5789988c991690d402b8a3029b80cce9c04efb87", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-le-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 8:5-8:17: @0[4]: _3 = &amp;(*_4)\n 8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Greater\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @0.Call: _2 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = std::cmp::Ordering::Greater\n+8:5-8:17: @1.Call: _0 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n 8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "de7c38bc9c4fa15b0500a493f58a3b6594e81b96", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-le-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 7:5-7:17: @0[5]: _4 = &amp;(*_5)\n 7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @0.Call: _3 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = std::cmp::Ordering::Equal\n+7:5-7:17: @1.Call: _2 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n 7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n 7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n </body>"}, {"sha": "1f3068868f618717fcb87498616f2f12b104a989", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-le.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-le.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,9 +81,9 @@\n 4:39-4:49: @0[21]: _13 = &amp;(*_14)\n 4:39-4:49: @0[24]: _16 = &amp;(*_3)\n 4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @0.Call: _12 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = std::cmp::Ordering::Equal\n+4:39-4:49: @1.Call: _11 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n 4:39-4:49: @2[4]: _19 = &amp;_7\n 4:39-4:49: @2[6]: _20 = &amp;_4\n 4:39-4:49: @2[8]: _21 = &amp;_8"}, {"sha": "746daab5ac1c942cbd8291b88dc235c923e59d1c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt-{closure#0}-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 8:5-8:17: @0[4]: _3 = &amp;(*_4)\n 8:5-8:17: @0[7]: _6 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 8:5-8:17: @0[8]: _5 = &amp;(*_6)\n-8:5-8:17: @0.Call: _2 = &lt;usize as PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n-8:5-8:17: @1[3]: _7 = Greater\n-8:5-8:17: @1.Call: _0 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n+8:5-8:17: @0.Call: _2 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _3, move _5) -&gt; [return: bb1, unwind: bb3]\n+8:5-8:17: @1[3]: _7 = std::cmp::Ordering::Greater\n+8:5-8:17: @1.Call: _0 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _2, move _7) -&gt; [return: bb2, unwind: bb3]\n 8:5-8:17: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>patch: usize<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "0867a7ad3641ba7e1537f1624ad8ecab206b9d6a", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt-{closure#0}.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -74,9 +74,9 @@\n 7:5-7:17: @0[5]: _4 = &amp;(*_5)\n 7:5-7:17: @0[8]: _7 = &amp;(*(*(_1.1: &amp;&amp;usize)))\n 7:5-7:17: @0[9]: _6 = &amp;(*_7)\n-7:5-7:17: @0.Call: _3 = &lt;usize as PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n-7:5-7:17: @1[3]: _8 = Equal\n-7:5-7:17: @1.Call: _2 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n+7:5-7:17: @0.Call: _3 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _4, move _6) -&gt; [return: bb1, unwind: bb4]\n+7:5-7:17: @1[3]: _8 = std::cmp::Ordering::Equal\n+7:5-7:17: @1.Call: _2 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _3, move _8) -&gt; [return: bb2, unwind: bb4]\n 7:5-7:17: @2[4]: _10 = &amp;(*(_1.2: &amp;&amp;usize))\n 7:5-7:17: @2[6]: _11 = &amp;(*(_1.3: &amp;&amp;usize))\"><span class=\"annotation\">@0,1,2,3\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">minor: usize</span></span></div>\n </body>"}, {"sha": "abcd7147c6fb3dc58dab17b4ce9446c2c6b1c9e3", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#2}-lt.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%232%7D-lt.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -81,9 +81,9 @@\n 4:39-4:49: @0[21]: _13 = &amp;(*_14)\n 4:39-4:49: @0[24]: _16 = &amp;(*_3)\n 4:39-4:49: @0[25]: _15 = &amp;(*_16)\n-4:39-4:49: @0.Call: _12 = &lt;usize as PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n-4:39-4:49: @1[3]: _17 = Equal\n-4:39-4:49: @1.Call: _11 = Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n+4:39-4:49: @0.Call: _12 = &lt;usize as std::cmp::PartialOrd&gt;::partial_cmp(move _13, move _15) -&gt; [return: bb1, unwind: bb5]\n+4:39-4:49: @1[3]: _17 = std::cmp::Ordering::Equal\n+4:39-4:49: @1.Call: _11 = std::option::Option::&lt;std::cmp::Ordering&gt;::unwrap_or(move _12, move _17) -&gt; [return: bb2, unwind: bb5]\n 4:39-4:49: @2[4]: _19 = &amp;_7\n 4:39-4:49: @2[6]: _20 = &amp;_4\n 4:39-4:49: @2[8]: _21 = &amp;_8"}, {"sha": "5b9e070864b4004cfc6c49fb7a8c593e66278dfd", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#7}-fmt.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%237%7D-fmt.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -76,7 +76,7 @@\n 4:17-4:22: @0[9]: _7 = &amp;mut (*_2)\n 4:17-4:22: @0[12]: _9 = const &quot;Version&quot;\n 4:17-4:22: @0[13]: _8 = &amp;(*_9)\n-4:17-4:22: @0.Call: _6 = Formatter::debug_struct(move _7, move _8) -&gt; [return: bb1, unwind: bb6]\n+4:17-4:22: @0.Call: _6 = std::fmt::Formatter::debug_struct(move _7, move _8) -&gt; [return: bb1, unwind: bb6]\n 4:17-4:22: @1[2]: FakeRead(ForLet, _6)\n 4:17-4:22: @1[7]: _12 = &amp;mut _6\n 4:17-4:22: @1[8]: _11 = &amp;mut (*_12)\n@@ -86,7 +86,7 @@\n 4:17-4:22: @1[18]: _17 = &amp;_18\n 4:17-4:22: @1[19]: _16 = &amp;(*_17)\n 4:17-4:22: @1[20]: _15 = move _16 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @1.Call: _10 = DebugStruct::field(move _11, move _13, move _15) -&gt; [return: bb2, unwind: bb6]\n+4:17-4:22: @1.Call: _10 = std::fmt::DebugStruct::field(move _11, move _13, move _15) -&gt; [return: bb2, unwind: bb6]\n 4:17-4:22: @2[11]: _21 = &amp;mut _6\n 4:17-4:22: @2[12]: _20 = &amp;mut (*_21)\n 4:17-4:22: @2[15]: _23 = const &quot;minor&quot;\n@@ -95,7 +95,7 @@\n 4:17-4:22: @2[22]: _26 = &amp;_27\n 4:17-4:22: @2[23]: _25 = &amp;(*_26)\n 4:17-4:22: @2[24]: _24 = move _25 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @2.Call: _19 = DebugStruct::field(move _20, move _22, move _24) -&gt; [return: bb3, unwind: bb6]\n+4:17-4:22: @2.Call: _19 = std::fmt::DebugStruct::field(move _20, move _22, move _24) -&gt; [return: bb3, unwind: bb6]\n 4:17-4:22: @3[11]: _30 = &amp;mut _6\n 4:17-4:22: @3[12]: _29 = &amp;mut (*_30)\n 4:17-4:22: @3[15]: _32 = const &quot;patch&quot;\n@@ -104,10 +104,10 @@\n 4:17-4:22: @3[22]: _35 = &amp;_36\n 4:17-4:22: @3[23]: _34 = &amp;(*_35)\n 4:17-4:22: @3[24]: _33 = move _34 as &amp;dyn std::fmt::Debug (Pointer(Unsize))\n-4:17-4:22: @3.Call: _28 = DebugStruct::field(move _29, move _31, move _33) -&gt; [return: bb4, unwind: bb6]\n+4:17-4:22: @3.Call: _28 = std::fmt::DebugStruct::field(move _29, move _31, move _33) -&gt; [return: bb4, unwind: bb6]\n 4:17-4:22: @4[10]: _38 = &amp;mut _6\n 4:17-4:22: @4[11]: _37 = &amp;mut (*_38)\n-4:17-4:22: @4.Call: _0 = DebugStruct::finish(move _37) -&gt; [return: bb5, unwind: bb6]\n+4:17-4:22: @4.Call: _0 = std::fmt::DebugStruct::finish(move _37) -&gt; [return: bb5, unwind: bb6]\n 4:22-4:22: @5.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>Debug<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "f1c983933432c1e08847eeea86bb3b15ff820c6c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.partial_eq/partial_eq.{impl#8}-clone.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.partial_eq%2Fpartial_eq.%7Bimpl%238%7D-clone.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -75,13 +75,13 @@\n 4:10-4:15: @0[6]: _4 = &amp;((*_1).2: usize)\n 4:10-4:15: @0[10]: _7 = &amp;(*_2)\n 4:10-4:15: @0[11]: _6 = &amp;(*_7)\n-4:10-4:15: @0.Call: _5 = &lt;usize as Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n+4:10-4:15: @0.Call: _5 = &lt;usize as std::clone::Clone&gt;::clone(move _6) -&gt; [return: bb1, unwind: bb4]\n 4:10-4:15: @1[4]: _10 = &amp;(*_3)\n 4:10-4:15: @1[5]: _9 = &amp;(*_10)\n-4:10-4:15: @1.Call: _8 = &lt;usize as Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n+4:10-4:15: @1.Call: _8 = &lt;usize as std::clone::Clone&gt;::clone(move _9) -&gt; [return: bb2, unwind: bb4]\n 4:10-4:15: @2[4]: _13 = &amp;(*_4)\n 4:10-4:15: @2[5]: _12 = &amp;(*_13)\n-4:10-4:15: @2.Call: _11 = &lt;usize as Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n+4:10-4:15: @2.Call: _11 = &lt;usize as std::clone::Clone&gt;::clone(move _12) -&gt; [return: bb3, unwind: bb4]\n 4:10-4:15: @3[1]: _0 = Version { major: move _5, minor: move _8, patch: move _11 }\n 4:15-4:15: @3.Return: return\"><span class=\"annotation\">@0,1,2,3\u298a</span>Clone<span class=\"annotation\">\u2989@0,1,2,3</span></span></span></span></div>\n </body>"}, {"sha": "6b911eea341216b0e47abe170cafd6a27bf953ee", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,81 +69,81 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 12:9-12:16: @3[6]: _7 = _1\">    if</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb13]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb13]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb12]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 0_i32"}, {"sha": "a56692d9c2a485f2373dd5a370a63759784a0e84", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.simple_match/simple_match.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.simple_match%2Fsimple_match.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,65 +69,65 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<div class=\"code\" style=\"counter-reset: line 2\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\"></span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n 9:9-9:22: @3[3]: FakeRead(ForLet, _5)\n 10:8-10:15: @3[6]: _7 = _1\">    let mut countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb21]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"7:19-7:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb21]\n 7:19-7:35: @1[0]: _3 = &amp;_4\n-7:19-7:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n+7:19-7:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb20]\n 7:19-7:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 7:9-7:16: @2[3]: FakeRead(ForLet, _1)\n 9:25-9:26: @3[2]: _5 = const 1_i32\n@@ -147,7 +147,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:13: @9[5]: _16 = &amp;mut _10\n 17:9-17:13: @9[6]: _15 = &amp;mut (*_16)\n-17:9-17:13: @9.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _15) -&gt; [return: bb10, unwind: bb21]\n+17:9-17:13: @9.Call: _14 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _15) -&gt; [return: bb10, unwind: bb21]\n 17:9-17:13: @10[1]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@8,9,10\u298a</span>0..2<span class=\"annotation\">\u2989@8,9,10</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let z</span></span>"}, {"sha": "a8a3139334c962a34423e86c0f9923c9e9370843", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.call.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.call.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -72,10 +72,10 @@\n <div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\"><span class=\"annotation\">@0\u298a</span>fn call(return_error: bool) -&gt; Result&lt;(),()&gt; {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\">    if return_error<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:13-6:15: @1[1]: _3 = ()\n-6:9-6:16: @1[2]: _0 = Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1\u298a</span>Err(())<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+6:9-6:16: @1[2]: _0 = std::result::Result::&lt;(), ()&gt;::Err(move _3)\"><span class=\"annotation\">@1\u298a</span>Err(())<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:12-8:14: @2[1]: _4 = ()\n-8:9-8:15: @2[2]: _0 = Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+8:9-8:15: @2[2]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _4)\"><span class=\"annotation\">@2\u298a</span>Ok(())<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:2-10:2: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\u2038<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n </body>"}, {"sha": "5b0c5cb072f043153cc3bb0624b9edbfe23b588f", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -84,7 +84,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n 19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n-19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb39]\n+19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as std::iter::Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb39]\n 19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n@@ -110,20 +110,20 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @10.Call: _22 = call(const true) -&gt; [return: bb12, unwind: bb39]\"><span class=\"annotation\">@10,12,13\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @17[1]: _24 = ((_21 as Err).0: ())\n 27:41-27:42: @17[4]: _27 = _24\n-27:41-27:42: @17.Call: _26 = &lt;() as From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb18, unwind: bb39]\"><span class=\"annotation\">@15,17,18,19\u298a</span>?<span class=\"annotation\">\u2989@15,17,18,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+27:41-27:42: @17.Call: _26 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _27) -&gt; [return: bb18, unwind: bb39]\"><span class=\"annotation\">@15,17,18,19\u298a</span>?<span class=\"annotation\">\u2989@15,17,18,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:13-28:42: @14.Call: _31 = call(const false) -&gt; [return: bb20, unwind: bb39]\"><span class=\"annotation\">@14,20,21\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@14,20,21</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:42-28:43: @25[1]: _33 = ((_30 as Err).0: ())\n 28:42-28:43: @25[4]: _36 = _33\n-28:42-28:43: @25.Call: _35 = &lt;() as From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb26, unwind: bb39]\"><span class=\"annotation\">@23,25,26,27\u298a</span>?<span class=\"annotation\">\u2989@23,25,26,27</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+28:42-28:43: @25.Call: _35 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _36) -&gt; [return: bb26, unwind: bb39]\"><span class=\"annotation\">@23,25,26,27\u298a</span>?<span class=\"annotation\">\u2989@23,25,26,27</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"32:13-32:42: @11.Call: _40 = call(const false) -&gt; [return: bb28, unwind: bb39]\"><span class=\"annotation\">@11,28,29\u298a</span>call(/*return_error=*/ false)<span class=\"annotation\">\u2989@11,28,29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"32:42-32:43: @33[1]: _42 = ((_39 as Err).0: ())\n 32:42-32:43: @33[4]: _45 = _42\n-32:42-32:43: @33.Call: _44 = &lt;() as From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb34, unwind: bb39]\"><span class=\"annotation\">@31,33,34,35\u298a</span>?<span class=\"annotation\">\u2989@31,33,34,35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+32:42-32:43: @33.Call: _44 = &lt;() as std::convert::From&lt;()&gt;&gt;::from(move _45) -&gt; [return: bb34, unwind: bb39]\"><span class=\"annotation\">@31,33,34,35\u298a</span>?<span class=\"annotation\">\u2989@31,33,34,35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:8-35:10: @5[9]: _47 = ()\n-35:5-35:11: @5[10]: _0 = Result::&lt;(), ()&gt;::Ok(move _47)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+35:5-35:11: @5[10]: _0 = std::result::Result::&lt;(), ()&gt;::Ok(move _47)\"><span class=\"annotation\">@5\u298a</span>Ok(())<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"36:2-36:2: @38.Return: return\"><span class=\"annotation\">@38\u298a</span>\u2038<span class=\"annotation\">\u2989@38</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "65e21ecef13bdab7f1278e0ef20b363cbf656ead", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,36 +69,36 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 36\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 36\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n 40:8-40:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>pub fn unused_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n 40:8-40:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32\n 39:9-39:22: @3[3]: FakeRead(ForLet, _5)\n 40:9-40:16: @3[6]: _7 = _1\n 40:8-40:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"38:19-38:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 38:19-38:35: @1[0]: _3 = &amp;_4\n-38:19-38:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+38:19-38:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 38:19-38:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 38:9-38:16: @2[3]: FakeRead(ForLet, _1)\n 39:25-39:26: @3[2]: _5 = const 2_i32"}, {"sha": "02154a2268b75d4dcb44d98cd35ff6ff4caf850c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_generic_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -78,14 +78,14 @@\n 34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n 34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n 34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 34:5-34:56: @1[2]: _12 = [move _16]\n 34:5-34:56: @1[5]: _11 = &amp;_12\n 34:5-34:56: @1[6]: _10 = &amp;(*_11)\n 34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 34:5-34:56: @3[6]: _2 = const ()\n 33:50-35:2: @3[8]: _0 = const ()\n 35:2-35:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn unused_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n@@ -98,14 +98,14 @@\n 34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n 34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n 34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 34:5-34:56: @1[2]: _12 = [move _16]\n 34:5-34:56: @1[5]: _11 = &amp;_12\n 34:5-34:56: @1[6]: _10 = &amp;(*_11)\n 34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 34:5-34:56: @3[6]: _2 = const ()\n 33:50-35:2: @3[8]: _0 = const ()\n 35:2-35:2: @4.Return: return\">    println!(\"unused_generic_function with {:?}\", arg);</span></span>\n@@ -118,14 +118,14 @@\n 34:5-34:56: @0[20]: FakeRead(ForMatchedPlace, _13)\n 34:5-34:56: @0[22]: _15 = (_13.0: &amp;T)\n 34:5-34:56: @0[25]: _17 = &amp;(*_15)\n-34:5-34:56: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-34:5-34:56: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+34:5-34:56: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+34:5-34:56: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 34:5-34:56: @1[2]: _12 = [move _16]\n 34:5-34:56: @1[5]: _11 = &amp;_12\n 34:5-34:56: @1[6]: _10 = &amp;(*_11)\n 34:5-34:56: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-34:5-34:56: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-34:5-34:56: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+34:5-34:56: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+34:5-34:56: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 34:5-34:56: @3[6]: _2 = const ()\n 33:50-35:2: @3[8]: _0 = const ()\n 35:2-35:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>"}, {"sha": "78228594e3753d0a28823a2e29bd4c4259037873", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.unused_private_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.unused_private_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,36 +69,36 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<div class=\"code\" style=\"counter-reset: line 44\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n 48:8-48:16: @3[7]: _6 = Not(move _7)\"><span class=\"annotation\">@0,1,2,3\u298a</span>fn unused_private_function() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n 48:8-48:16: @3[7]: _6 = Not(move _7)\">    let is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32\n 47:9-47:22: @3[3]: FakeRead(ForLet, _5)\n 48:9-48:16: @3[6]: _7 = _1\n 48:8-48:16: @3[7]: _6 = Not(move _7)\">    let mut countdown = 2;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb8]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"46:19-46:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb8]\n 46:19-46:35: @1[0]: _3 = &amp;_4\n-46:19-46:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n+46:19-46:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb7]\n 46:19-46:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 46:9-46:16: @2[3]: FakeRead(ForLet, _1)\n 47:25-47:26: @3[2]: _5 = const 2_i32"}, {"sha": "8f618d2e24954d5760c1bc2111ca31ae8e6bcbff", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.use_this_lib_crate.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -75,10 +75,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8\u298a</span>fn use_this_lib_crate() {</span></span>\n@@ -88,10 +88,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    used_from_bin_crate_and_lib_crate_generic_function(\"used from library used_crate.rs\");</span></span>\n@@ -101,10 +101,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    used_with_same_type_from_bin_crate_and_lib_crate_generic_function(</span></span>\n@@ -114,10 +114,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">        \"used from library used_crate.rs\",</span></span>\n@@ -127,10 +127,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    );</span></span>\n@@ -140,10 +140,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    let some_vec = vec![5, 6, 7, 8];</span></span>\n@@ -153,10 +153,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(some_vec);</span></span>\n@@ -166,10 +166,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">    used_only_from_this_lib_crate_generic_function(\"used ONLY from library used_crate.rs\");</span></span>\n@@ -179,10 +179,10 @@\n 58:20-58:36: @2[6]: (*_6) = [const 5_i32, const 6_i32, const 7_i32, const 8_i32]\n 58:20-58:36: @2[7]: _5 = move _6\n 58:20-58:36: @2[8]: _4 = move _5 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-58:20-58:36: @4.Call: _3 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n+58:20-58:36: @4.Call: _3 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _4) -&gt; [return: bb5, unwind: bb12]\n 58:9-58:17: @5[1]: FakeRead(ForLet, _3)\n 59:52-59:60: @5[4]: _8 = move _3\n-59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n+59:5-59:61: @5.Call: _7 = used_only_from_this_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _8) -&gt; [return: bb6, unwind: bb9]\n 60:5-60:91: @6.Call: _9 = used_only_from_this_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;used ONLY from library used_crate.rs&quot;) -&gt; [return: bb7, unwind: bb10]\n 53:25-61:2: @7[1]: _0 = const ()\n 61:2-61:2: @8.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8</span></span></span></span></div>"}, {"sha": "61a709c4729f28399842398689e101a098823b7d", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -78,14 +78,14 @@\n 26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n 26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n 26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 26:5-26:83: @1[2]: _12 = [move _16]\n 26:5-26:83: @1[5]: _11 = &amp;_12\n 26:5-26:83: @1[6]: _10 = &amp;(*_11)\n 26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 26:5-26:83: @3[6]: _2 = const ()\n 25:77-27:2: @3[8]: _0 = const ()\n 27:2-27:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n@@ -98,14 +98,14 @@\n 26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n 26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n 26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 26:5-26:83: @1[2]: _12 = [move _16]\n 26:5-26:83: @1[5]: _11 = &amp;_12\n 26:5-26:83: @1[6]: _10 = &amp;(*_11)\n 26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 26:5-26:83: @3[6]: _2 = const ()\n 25:77-27:2: @3[8]: _0 = const ()\n 27:2-27:2: @4.Return: return\">    println!(\"used_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n@@ -118,14 +118,14 @@\n 26:5-26:83: @0[20]: FakeRead(ForMatchedPlace, _13)\n 26:5-26:83: @0[22]: _15 = (_13.0: &amp;T)\n 26:5-26:83: @0[25]: _17 = &amp;(*_15)\n-26:5-26:83: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-26:5-26:83: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+26:5-26:83: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+26:5-26:83: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 26:5-26:83: @1[2]: _12 = [move _16]\n 26:5-26:83: @1[5]: _11 = &amp;_12\n 26:5-26:83: @1[6]: _10 = &amp;(*_11)\n 26:5-26:83: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-26:5-26:83: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-26:5-26:83: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+26:5-26:83: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+26:5-26:83: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 26:5-26:83: @3[6]: _2 = const ()\n 25:77-27:2: @3[8]: _0 = const ()\n 27:2-27:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>"}, {"sha": "974a24b2c6d44b7973428d7d642a03cf4b259ac2", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -73,25 +73,25 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // Initialize test constants in a way that cannot be determined at compile time, to ensure</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // rustc and LLVM cannot optimize out statements (or coverage counters) downstream from</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    // dependent conditions.</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32\n 10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n 11:8-11:15: @3[6]: _7 = _1\"><span class=\"annotation\">@0,1,2,3\u298a</span>is_true = std::env::args().len() == 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32\n 10:9-10:22: @3[3]: FakeRead(ForLet, _5)\n 11:8-11:15: @3[6]: _7 = _1\">    let mut countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = args() -&gt; [return: bb1, unwind: bb9]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:19-9:35: @0.Call: _4 = std::env::args() -&gt; [return: bb1, unwind: bb9]\n 9:19-9:35: @1[0]: _3 = &amp;_4\n-9:19-9:41: @1.Call: _2 = &lt;Args as ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n+9:19-9:41: @1.Call: _2 = &lt;std::env::Args as std::iter::ExactSizeIterator&gt;::len(move _3) -&gt; [return: bb2, unwind: bb8]\n 9:19-9:46: @2[1]: _1 = Eq(move _2, const 1_usize)\n 9:9-9:16: @2[3]: FakeRead(ForLet, _1)\n 10:25-10:26: @3[2]: _5 = const 0_i32"}, {"sha": "68035339fe4a8f0f8848600aadc7925fbd72423c", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_bin_crate_generic_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -78,14 +78,14 @@\n 18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n 18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n 18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 18:5-18:74: @1[2]: _12 = [move _16]\n 18:5-18:74: @1[5]: _11 = &amp;_12\n 18:5-18:74: @1[6]: _10 = &amp;(*_11)\n 18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 18:5-18:74: @3[6]: _2 = const ()\n 17:68-19:2: @3[8]: _0 = const ()\n 19:2-19:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_bin_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n@@ -98,14 +98,14 @@\n 18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n 18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n 18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 18:5-18:74: @1[2]: _12 = [move _16]\n 18:5-18:74: @1[5]: _11 = &amp;_12\n 18:5-18:74: @1[6]: _10 = &amp;(*_11)\n 18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 18:5-18:74: @3[6]: _2 = const ()\n 17:68-19:2: @3[8]: _0 = const ()\n 19:2-19:2: @4.Return: return\">    println!(\"used_only_from_bin_crate_generic_function with {:?}\", arg);</span></span>\n@@ -118,14 +118,14 @@\n 18:5-18:74: @0[20]: FakeRead(ForMatchedPlace, _13)\n 18:5-18:74: @0[22]: _15 = (_13.0: &amp;T)\n 18:5-18:74: @0[25]: _17 = &amp;(*_15)\n-18:5-18:74: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-18:5-18:74: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+18:5-18:74: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+18:5-18:74: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 18:5-18:74: @1[2]: _12 = [move _16]\n 18:5-18:74: @1[5]: _11 = &amp;_12\n 18:5-18:74: @1[6]: _10 = &amp;(*_11)\n 18:5-18:74: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-18:5-18:74: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-18:5-18:74: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+18:5-18:74: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+18:5-18:74: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 18:5-18:74: @3[6]: _2 = const ()\n 17:68-19:2: @3[8]: _0 = const ()\n 19:2-19:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>"}, {"sha": "63944eb9ab38ed14b5fe16bdbb4ee9effab1c0f1", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_only_from_this_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -78,14 +78,14 @@\n 22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n 22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n 22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 22:5-22:79: @1[2]: _12 = [move _16]\n 22:5-22:79: @1[5]: _11 = &amp;_12\n 22:5-22:79: @1[6]: _10 = &amp;(*_11)\n 22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 22:5-22:79: @3[6]: _2 = const ()\n 21:73-23:2: @3[8]: _0 = const ()\n 23:2-23:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_only_from_this_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n@@ -98,14 +98,14 @@\n 22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n 22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n 22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 22:5-22:79: @1[2]: _12 = [move _16]\n 22:5-22:79: @1[5]: _11 = &amp;_12\n 22:5-22:79: @1[6]: _10 = &amp;(*_11)\n 22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 22:5-22:79: @3[6]: _2 = const ()\n 21:73-23:2: @3[8]: _0 = const ()\n 23:2-23:2: @4.Return: return\">    println!(\"used_only_from_this_lib_crate_generic_function with {:?}\", arg);</span></span>\n@@ -118,14 +118,14 @@\n 22:5-22:79: @0[20]: FakeRead(ForMatchedPlace, _13)\n 22:5-22:79: @0[22]: _15 = (_13.0: &amp;T)\n 22:5-22:79: @0[25]: _17 = &amp;(*_15)\n-22:5-22:79: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-22:5-22:79: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+22:5-22:79: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+22:5-22:79: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 22:5-22:79: @1[2]: _12 = [move _16]\n 22:5-22:79: @1[5]: _11 = &amp;_12\n 22:5-22:79: @1[6]: _10 = &amp;(*_11)\n 22:5-22:79: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-22:5-22:79: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-22:5-22:79: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+22:5-22:79: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+22:5-22:79: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 22:5-22:79: @3[6]: _2 = const ()\n 21:73-23:2: @3[8]: _0 = const ()\n 23:2-23:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>"}, {"sha": "b146180fbd15556ee6968299c950ebbbcd3bc2e8", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.used_crate/used_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.used_crate%2Fused_crate.used_with_same_type_from_bin_crate_and_lib_crate_generic_function.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -78,14 +78,14 @@\n 30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n 30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n 30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 30:5-30:98: @1[2]: _12 = [move _16]\n 30:5-30:98: @1[5]: _11 = &amp;_12\n 30:5-30:98: @1[6]: _10 = &amp;(*_11)\n 30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 30:5-30:98: @3[6]: _2 = const ()\n 29:92-31:2: @3[8]: _0 = const ()\n 31:2-31:2: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>pub fn used_with_same_type_from_bin_crate_and_lib_crate_generic_function&lt;T: Debug&gt;(arg: T) {</span></span>\n@@ -98,14 +98,14 @@\n 30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n 30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n 30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 30:5-30:98: @1[2]: _12 = [move _16]\n 30:5-30:98: @1[5]: _11 = &amp;_12\n 30:5-30:98: @1[6]: _10 = &amp;(*_11)\n 30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 30:5-30:98: @3[6]: _2 = const ()\n 29:92-31:2: @3[8]: _0 = const ()\n 31:2-31:2: @4.Return: return\">    println!(\"used_with_same_type_from_bin_crate_and_lib_crate_generic_function with {:?}\", arg);</span></span>\n@@ -118,14 +118,14 @@\n 30:5-30:98: @0[20]: FakeRead(ForMatchedPlace, _13)\n 30:5-30:98: @0[22]: _15 = (_13.0: &amp;T)\n 30:5-30:98: @0[25]: _17 = &amp;(*_15)\n-30:5-30:98: @0[27]: _18 = &lt;T as Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n-30:5-30:98: @0.Call: _16 = ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n+30:5-30:98: @0[27]: _18 = &lt;T as std::fmt::Debug&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r T, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+30:5-30:98: @0.Call: _16 = std::fmt::ArgumentV1::new::&lt;T&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb5]\n 30:5-30:98: @1[2]: _12 = [move _16]\n 30:5-30:98: @1[5]: _11 = &amp;_12\n 30:5-30:98: @1[6]: _10 = &amp;(*_11)\n 30:5-30:98: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-30:5-30:98: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n-30:5-30:98: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb5]\n+30:5-30:98: @1.Call: _4 = std::fmt::Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb5]\n+30:5-30:98: @2.Call: _3 = std::io::_print(move _4) -&gt; [return: bb3, unwind: bb5]\n 30:5-30:98: @3[6]: _2 = const ()\n 29:92-31:2: @3[8]: _0 = const ()\n 31:2-31:2: @4.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>"}, {"sha": "28cf051ecf8734ab8bb0971a2e20ec93bdfa2734", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.uses_crate/uses_crate.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.uses_crate%2Fuses_crate.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -69,124 +69,124 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9\u298a</span>fn main() {</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    used_crate::used_function();</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    let some_vec = vec![1, 2, 3, 4];</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    used_crate::used_only_from_bin_crate_generic_function(&amp;some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    used_crate::used_only_from_bin_crate_generic_function(\"used from bin uses_crate.rs\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    used_crate::used_from_bin_crate_and_lib_crate_generic_function(some_vec);</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">    used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function(\"interesting?\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_function() -&gt; [return: bb1, unwind: bb14]\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"6:5-6:32: @0.Call: _1 = used_crate::used_function() -&gt; [return: bb1, unwind: bb14]\n 7:20-7:36: @1[5]: _5 = Box([i32; 4])\n 7:20-7:36: @1[6]: (*_5) = [const 1_i32, const 2_i32, const 3_i32, const 4_i32]\n 7:20-7:36: @1[7]: _4 = move _5\n 7:20-7:36: @1[8]: _3 = move _4 as std::boxed::Box&lt;[i32]&gt; (Pointer(Unsize))\n-7:20-7:36: @3.Call: _2 = slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n+7:20-7:36: @3.Call: _2 = std::slice::&lt;impl [i32]&gt;::into_vec::&lt;std::alloc::Global&gt;(move _3) -&gt; [return: bb4, unwind: bb13]\n 7:9-7:17: @4[1]: FakeRead(ForLet, _2)\n 8:59-8:68: @4[4]: _7 = &amp;_2\n-8:5-8:69: @4.Call: _6 = used_only_from_bin_crate_generic_function::&lt;&amp;Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n-9:5-9:89: @5.Call: _8 = used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n+8:5-8:69: @4.Call: _6 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;std::vec::Vec&lt;i32&gt;&gt;(move _7) -&gt; [return: bb5, unwind: bb11]\n+9:5-9:89: @5.Call: _8 = used_crate::used_only_from_bin_crate_generic_function::&lt;&amp;str&gt;(const &quot;used from bin uses_crate.rs&quot;) -&gt; [return: bb6, unwind: bb11]\n 10:68-10:76: @6[3]: _10 = move _2\n-10:5-10:77: @6.Call: _9 = used_from_bin_crate_and_lib_crate_generic_function::&lt;Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n-11:5-11:98: @7.Call: _11 = used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n+10:5-10:77: @6.Call: _9 = used_crate::used_from_bin_crate_and_lib_crate_generic_function::&lt;std::vec::Vec&lt;i32&gt;&gt;(move _10) -&gt; [return: bb7, unwind: bb10]\n+11:5-11:98: @7.Call: _11 = used_crate::used_with_same_type_from_bin_crate_and_lib_crate_generic_function::&lt;&amp;str&gt;(const &quot;interesting?&quot;) -&gt; [return: bb8, unwind: bb11]\n 5:11-12:2: @8[1]: _0 = const ()\n 12:2-12:2: @9.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9</span></span></span></span></div>\n </body>"}, {"sha": "fcb5418e1d0cfee7c62cfd57442482778ec59cbb", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -102,11 +102,11 @@\n 18:21-20:22: @6[3]: _10 = Gt(move _11, const 8_i32)\">                    8<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:24-22:26: @8[1]: _12 = ()\n-22:21-22:27: @8[2]: _0 = Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@8\u298a</span>Ok(())<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+22:21-22:27: @8[2]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\"><span class=\"annotation\">@8\u298a</span>Ok(())<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                else</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @9[0]: _0 = Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@9\u298a</span>Err(1)<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:21-26:27: @9[0]: _0 = std::result::Result::&lt;(), u8&gt;::Err(const 1_u8)\"><span class=\"annotation\">@9\u298a</span>Err(1)<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:10-29:10: @7[0]: _6 = const ()\n@@ -124,7 +124,7 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()\n-35:5-35:11: @4[5]: _0 = Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+35:5-35:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\"><span class=\"annotation\">@4\u298a</span>Ok(())<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:2-36:2: @12.Return: return\"><span class=\"annotation\">@12\u298a</span>\u2038<span class=\"annotation\">\u2989@12</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "4c0c0d562b84089821362e6b07565b003dc61bfe", "filename": "src/test/run-make-fulldeps/coverage-spanview/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/64950297e23262df909587f85347bedffcce3f95/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html?ref=64950297e23262df909587f85347bedffcce3f95", "patch": "@@ -76,26 +76,26 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n-13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:11-13:35: @0.Call: _4 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n 13:43-13:45: @1[2]: _6 = ()\n-13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n 13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n 14:9-14:35: @2[3]: _7 = discriminant(_3)\"><span class=\"annotation\">@0,1,2\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n-13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:11-13:35: @0.Call: _4 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n 13:43-13:45: @1[2]: _6 = ()\n-13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n 13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n 14:9-14:35: @2[3]: _7 = discriminant(_3)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:39-14:41: @6[0]: _2 = const ()\"><span class=\"annotation\">@4,6,7,8\u298a</span>{}<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:14-15:52: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@5\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:14-15:52: @5.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@5\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:20-17:34: @6[7]: _12 = &amp;mut _1\n-17:11-17:35: @6.Call: _11 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _12) -&gt; [return: bb7, unwind: bb26]\n+17:11-17:35: @6.Call: _11 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _12) -&gt; [return: bb7, unwind: bb26]\n 17:43-17:45: @7[2]: _13 = ()\n-17:11-17:46: @7.Call: _10 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _11, move _13) -&gt; [return: bb8, unwind: bb26]\n+17:11-17:46: @7.Call: _10 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _11, move _13) -&gt; [return: bb8, unwind: bb26]\n 17:11-17:46: @8[2]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@4,6,7,8\u298a</span>Pin::new(&amp;mut generator).resume(())<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        GeneratorState::Complete(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:34-18:39: @10.Call: _14 = &lt;str as PartialEq&gt;::eq(((_10 as Complete).0: &amp;str), const &quot;foo&quot;) -&gt; [return: bb11, unwind: bb26]\"><span class=\"annotation\">@10,11\u298a</span>\"foo\"<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">) =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:44-18:46: @13[0]: _9 = const ()\"><span class=\"annotation\">@12,13,14,15\u298a</span>{}<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:14-19:52: @9.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@9\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        GeneratorState::Complete(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:34-18:39: @10.Call: _14 = &lt;str as std::cmp::PartialEq&gt;::eq(((_10 as Complete).0: &amp;str), const &quot;foo&quot;) -&gt; [return: bb11, unwind: bb26]\"><span class=\"annotation\">@10,11\u298a</span>\"foo\"<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">) =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:44-18:46: @13[0]: _9 = const ()\"><span class=\"annotation\">@12,13,14,15\u298a</span>{}<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:14-19:52: @9.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@9\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:22: @13[5]: FakeRead(ForLet, _17)\"><span class=\"annotation\">@12,13,14,15\u298a</span>mut generator<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n@@ -106,32 +106,32 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n-29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:11-29:35: @13.Call: _20 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n 29:43-29:45: @14[2]: _22 = ()\n-29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n 29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n 30:9-30:35: @15[3]: _23 = discriminant(_19)\"><span class=\"annotation\">@12,13,14,15\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n-29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:11-29:35: @13.Call: _20 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n 29:43-29:45: @14[2]: _22 = ()\n-29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n 29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n 30:9-30:35: @15[3]: _23 = discriminant(_19)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:39-30:41: @19[0]: _18 = const ()\"><span class=\"annotation\">@17,19,20,21\u298a</span>{}<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:14-31:52: @18.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@18\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:14-31:52: @18.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@18\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n-33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:11-33:35: @19.Call: _26 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n 33:43-33:45: @20[2]: _28 = ()\n-33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n 33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n 34:9-34:35: @21[3]: _29 = discriminant(_25)\"><span class=\"annotation\">@17,19,20,21\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n-33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:11-33:35: @19.Call: _26 = std::pin::Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n 33:43-33:45: @20[2]: _28 = ()\n-33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as std::ops::Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n 33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n 34:9-34:35: @21[3]: _29 = discriminant(_25)\">        GeneratorState::Yielded(2)<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:39-34:41: @25[0]: _0 = const ()\"><span class=\"annotation\">@23,25\u298a</span>{}<span class=\"annotation\">\u2989@23,25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:14-35:52: @24.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@24\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:14-35:52: @24.Call: std::rt::begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@24\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @25.Return: return\"><span class=\"annotation\">@23,25\u298a</span>\u2038<span class=\"annotation\">\u2989@23,25</span></span></span></span></div>\n </body>"}]}