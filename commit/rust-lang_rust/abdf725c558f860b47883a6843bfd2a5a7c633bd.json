{"sha": "abdf725c558f860b47883a6843bfd2a5a7c633bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZGY3MjVjNTU4Zjg2MGI0Nzg4M2E2ODQzYmZkMmE1YTdjNjMzYmQ=", "commit": {"author": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-13T01:29:14Z"}, "committer": {"name": "IceSentry", "email": "c.giguere42@gmail.com", "date": "2020-04-13T01:29:14Z"}, "message": "Fix double comma when merge imports on second line\n\nThis fixes the a bug when merging imports from the second line when it already has a comma it would previously insert a comma.\n\nThere's probably a better way to check for a COMMA. \n\nThis also ends up with a weird indentation, but rust-fmt can easily deal with it so I'm not sure how to resolve that.\n\nCloses #3832", "tree": {"sha": "ccdaed7162ae2e36208aa5cac532f90f8c87d844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccdaed7162ae2e36208aa5cac532f90f8c87d844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abdf725c558f860b47883a6843bfd2a5a7c633bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abdf725c558f860b47883a6843bfd2a5a7c633bd", "html_url": "https://github.com/rust-lang/rust/commit/abdf725c558f860b47883a6843bfd2a5a7c633bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abdf725c558f860b47883a6843bfd2a5a7c633bd/comments", "author": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IceSentry", "id": 8348954, "node_id": "MDQ6VXNlcjgzNDg5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8348954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IceSentry", "html_url": "https://github.com/IceSentry", "followers_url": "https://api.github.com/users/IceSentry/followers", "following_url": "https://api.github.com/users/IceSentry/following{/other_user}", "gists_url": "https://api.github.com/users/IceSentry/gists{/gist_id}", "starred_url": "https://api.github.com/users/IceSentry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IceSentry/subscriptions", "organizations_url": "https://api.github.com/users/IceSentry/orgs", "repos_url": "https://api.github.com/users/IceSentry/repos", "events_url": "https://api.github.com/users/IceSentry/events{/privacy}", "received_events_url": "https://api.github.com/users/IceSentry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c388130f5ffbcbe7d3131213a24d12d02f769b87", "url": "https://api.github.com/repos/rust-lang/rust/commits/c388130f5ffbcbe7d3131213a24d12d02f769b87", "html_url": "https://github.com/rust-lang/rust/commit/c388130f5ffbcbe7d3131213a24d12d02f769b87"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "ab1fb2a0b82c0f71d07202970a8b2337f6ea60bb", "filename": "crates/ra_assists/src/handlers/merge_imports.rs", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/abdf725c558f860b47883a6843bfd2a5a7c633bd/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abdf725c558f860b47883a6843bfd2a5a7c633bd/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_imports.rs?ref=abdf725c558f860b47883a6843bfd2a5a7c633bd", "patch": "@@ -3,7 +3,8 @@ use std::iter::successors;\n use ra_syntax::{\n     algo::{neighbor, SyntaxRewriter},\n     ast::{self, edit::AstNodeEdit, make},\n-    AstNode, Direction, InsertPosition, SyntaxElement, T,\n+    AstNode, Direction, InsertPosition, NodeOrToken, SyntaxElement, SyntaxKind, SyntaxToken, Token,\n+    T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -72,9 +73,24 @@ fn try_merge_trees(old: &ast::UseTree, new: &ast::UseTree) -> Option<ast::UseTre\n     let lhs = old.split_prefix(&lhs_prefix);\n     let rhs = new.split_prefix(&rhs_prefix);\n \n+    let mut should_insert_comma = true;\n+\n+    lhs.syntax()\n+        .last_child()\n+        .and_then(|child| child.children().last())\n+        .and_then(|last| last.next_sibling_or_token())\n+        .map(|next_sibling| {\n+            // FIXME: there's probably a better way to check if it's a COMMA\n+            if let NodeOrToken::Token(maybe_comma) = next_sibling {\n+                should_insert_comma = maybe_comma.to_string() != \",\";\n+            }\n+        });\n+\n     let mut to_insert: Vec<SyntaxElement> = Vec::new();\n-    to_insert.push(make::token(T![,]).into());\n-    to_insert.push(make::tokens::single_space().into());\n+    if should_insert_comma {\n+        to_insert.push(make::token(T![,]).into());\n+        to_insert.push(make::tokens::single_space().into());\n+    }\n     to_insert.extend(\n         rhs.use_tree_list()?\n             .syntax()\n@@ -247,4 +263,22 @@ use {\n \",\n         );\n     }\n+\n+    #[test]\n+    fn test_double_comma() {\n+        check_assist(\n+            merge_imports,\n+            r\"\n+use hyper::service::make_service_fn;\n+use hyper::<|>{\n+    StatusCode,\n+};\n+\",\n+            r\"\n+use hyper::{<|>\n+    StatusCode,\n+service::make_service_fn};\n+\",\n+        )\n+    }\n }"}]}