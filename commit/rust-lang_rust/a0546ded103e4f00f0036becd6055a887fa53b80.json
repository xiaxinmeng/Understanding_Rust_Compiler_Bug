{"sha": "a0546ded103e4f00f0036becd6055a887fa53b80", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNTQ2ZGVkMTAzZTRmMDBmMDAzNmJlY2Q2MDU1YTg4N2ZhNTNiODA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-11T21:52:38Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-17T04:55:38Z"}, "message": "rustc: Disable rpath settings by default\n\nThis commit disables rustc's emission of rpath attributes into dynamic libraries\nand executables by default. The functionality is still preserved, but it must\nnow be manually enabled via a `-C rpath` flag.\n\nThis involved a few changes to the local build system:\n\n* --disable-rpath is now the default configure option\n* Makefiles now prefer our own LD_LIBRARY_PATH over the user's LD_LIBRARY_PATH\n  in order to support building rust with rust already installed.\n* The compiletest program was taught to correctly pass through the aux dir as a\n  component of LD_LIBRARY_PATH in more situations.\n\nThe major impact of this change is that neither rustdoc nor rustc will work\nout-of-the-box in all situations because they are dynamically linked. It must be\narranged to ensure that the libraries of a rust installation are part of the\nLD_LIBRARY_PATH. The default installation paths for all platforms ensure this,\nbut if an installation is in a nonstandard location, then configuration may be\nnecessary.\n\nAdditionally, for all developers of rustc, it will no longer be possible to run\n$target/stageN/bin/rustc out-of-the-box. The old behavior can be regained\nthrough the `--enable-rpath` option to the configure script.\n\nThis change brings linux/mac installations in line with windows installations\nwhere rpath is not possible.\n\nCloses #11747\n[breaking-change]", "tree": {"sha": "31c58d2b2e9d2e081a632a2e33243761a2069e00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31c58d2b2e9d2e081a632a2e33243761a2069e00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0546ded103e4f00f0036becd6055a887fa53b80", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0546ded103e4f00f0036becd6055a887fa53b80", "html_url": "https://github.com/rust-lang/rust/commit/a0546ded103e4f00f0036becd6055a887fa53b80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0546ded103e4f00f0036becd6055a887fa53b80/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09967665eaa5ca3d259f0f59ef26c8d236bf47a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/09967665eaa5ca3d259f0f59ef26c8d236bf47a7", "html_url": "https://github.com/rust-lang/rust/commit/09967665eaa5ca3d259f0f59ef26c8d236bf47a7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5839b19c2d9c263b8f4919d4326dea5f63a98ea9", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0546ded103e4f00f0036becd6055a887fa53b80/configure", "raw_url": "https://github.com/rust-lang/rust/raw/a0546ded103e4f00f0036becd6055a887fa53b80/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=a0546ded103e4f00f0036becd6055a887fa53b80", "patch": "@@ -418,7 +418,7 @@ opt ccache 0 \"invoke gcc/clang via ccache to reuse object files between builds\"\n opt local-rust 0 \"use an installed rustc rather than downloading a snapshot\"\n opt inject-std-version 1 \"inject the current compiler version of libstd into programs\"\n opt llvm-static-stdcpp 0 \"statically link to libstdc++ for LLVM\"\n-opt rpath 1 \"build rpaths into rustc itself\"\n+opt rpath 0 \"build rpaths into rustc itself\"\n opt nightly 0 \"build nightly packages\"\n opt verify-install 1 \"verify installed binaries work\"\n opt jemalloc 1 \"build liballoc with jemalloc\""}, {"sha": "b9737bca10457cdc44a6cb53d42e0400b947a341", "filename": "man/rustc.1", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0546ded103e4f00f0036becd6055a887fa53b80/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/a0546ded103e4f00f0036becd6055a887fa53b80/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=a0546ded103e4f00f0036becd6055a887fa53b80", "patch": "@@ -138,8 +138,8 @@ A space-separated list of arguments to pass through to LLVM.\n If specified, the compiler will save more files (.bc, .o, .no-opt.bc) generated\n throughout compilation in the output directory.\n .TP\n-\\fBno-rpath\\fR\n-If specified, then the rpath value for dynamic libraries will not be set in\n+\\fBrpath\\fR\n+If specified, then the rpath value for dynamic libraries will be set in\n either dynamic library or executable outputs.\n .TP\n \\fBno-prepopulate-passes\\fR"}, {"sha": "e43c8c6b984bed0128d867090a652eae865b3a62", "filename": "mk/main.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0546ded103e4f00f0036becd6055a887fa53b80/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a0546ded103e4f00f0036becd6055a887fa53b80/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=a0546ded103e4f00f0036becd6055a887fa53b80", "patch": "@@ -120,8 +120,8 @@ endif\n ifdef TRACE\n   CFG_RUSTC_FLAGS += -Z trace\n endif\n-ifdef CFG_DISABLE_RPATH\n-CFG_RUSTC_FLAGS += -C no-rpath\n+ifdef CFG_ENABLE_RPATH\n+CFG_RUSTC_FLAGS += -C rpath\n endif\n \n # The executables crated during this compilation process have no need to include"}, {"sha": "aad6b72edf3fd4ca6e01dc19c121200d3afdfc58", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0546ded103e4f00f0036becd6055a887fa53b80/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0546ded103e4f00f0036becd6055a887fa53b80/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=a0546ded103e4f00f0036becd6055a887fa53b80", "patch": "@@ -1327,7 +1327,7 @@ fn link_args(cmd: &mut Command,\n         if sess.targ_cfg.os == abi::OsMacos {\n             cmd.args([\"-dynamiclib\", \"-Wl,-dylib\"]);\n \n-            if !sess.opts.cg.no_rpath {\n+            if sess.opts.cg.rpath {\n                 let mut v = Vec::from_slice(\"-Wl,-install_name,@rpath/\".as_bytes());\n                 v.push_all(out_filename.filename().unwrap());\n                 cmd.arg(v.as_slice());\n@@ -1346,7 +1346,7 @@ fn link_args(cmd: &mut Command,\n     // FIXME (#2397): At some point we want to rpath our guesses as to\n     // where extern libraries might live, based on the\n     // addl_lib_search_paths\n-    if !sess.opts.cg.no_rpath {\n+    if sess.opts.cg.rpath {\n         cmd.args(rpath::get_rpath_flags(sess, out_filename).as_slice());\n     }\n "}, {"sha": "575373419f0da05bf3b89978888ca75022acfb01", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a0546ded103e4f00f0036becd6055a887fa53b80/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0546ded103e4f00f0036becd6055a887fa53b80/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=a0546ded103e4f00f0036becd6055a887fa53b80", "patch": "@@ -300,8 +300,8 @@ cgoptions!(\n         \"a list of arguments to pass to llvm (space separated)\"),\n     save_temps: bool = (false, parse_bool,\n         \"save all temporary output files during compilation\"),\n-    no_rpath: bool = (false, parse_bool,\n-        \"disables setting the rpath in libs/exes\"),\n+    rpath: bool = (false, parse_bool,\n+        \"set rpath values in libs/exes\"),\n     no_prepopulate_passes: bool = (false, parse_bool,\n         \"don't pre-populate the pass manager with a list of passes\"),\n     no_vectorize_loops: bool = (false, parse_bool,"}]}