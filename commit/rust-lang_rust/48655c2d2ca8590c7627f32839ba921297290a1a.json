{"sha": "48655c2d2ca8590c7627f32839ba921297290a1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NjU1YzJkMmNhODU5MGM3NjI3ZjMyODM5YmE5MjEyOTcyOTBhMWE=", "commit": {"author": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-09-17T10:14:18Z"}, "committer": {"name": "khyperia", "email": "github@khyperia.com", "date": "2020-09-17T10:18:09Z"}, "message": "PR feedback", "tree": {"sha": "a415b07578f7df2d23acd60c10054c52d1d88bfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a415b07578f7df2d23acd60c10054c52d1d88bfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48655c2d2ca8590c7627f32839ba921297290a1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48655c2d2ca8590c7627f32839ba921297290a1a", "html_url": "https://github.com/rust-lang/rust/commit/48655c2d2ca8590c7627f32839ba921297290a1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48655c2d2ca8590c7627f32839ba921297290a1a/comments", "author": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "khyperia", "id": 953151, "node_id": "MDQ6VXNlcjk1MzE1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/953151?v=4", "gravatar_id": "", "url": "https://api.github.com/users/khyperia", "html_url": "https://github.com/khyperia", "followers_url": "https://api.github.com/users/khyperia/followers", "following_url": "https://api.github.com/users/khyperia/following{/other_user}", "gists_url": "https://api.github.com/users/khyperia/gists{/gist_id}", "starred_url": "https://api.github.com/users/khyperia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/khyperia/subscriptions", "organizations_url": "https://api.github.com/users/khyperia/orgs", "repos_url": "https://api.github.com/users/khyperia/repos", "events_url": "https://api.github.com/users/khyperia/events{/privacy}", "received_events_url": "https://api.github.com/users/khyperia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c946c40d9d47328fc1a08919dec174a77c12fd6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c946c40d9d47328fc1a08919dec174a77c12fd6b", "html_url": "https://github.com/rust-lang/rust/commit/c946c40d9d47328fc1a08919dec174a77c12fd6b"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "2e2abe9fb30f8a5b311e3136642965e5a32c8808", "filename": "compiler/rustc_codegen_llvm/src/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Flib.rs?ref=48655c2d2ca8590c7627f32839ba921297290a1a", "patch": "@@ -32,7 +32,6 @@ use rustc_serialize::json;\n use rustc_session::config::{self, OptLevel, OutputFilenames, PrintRequest};\n use rustc_session::Session;\n use rustc_span::symbol::Symbol;\n-use rustc_target::spec::Target;\n \n use std::any::Any;\n use std::ffi::CStr;\n@@ -245,10 +244,6 @@ impl CodegenBackend for LlvmCodegenBackend {\n         target_features(sess)\n     }\n \n-    fn target_override(&self, _opts: &config::Options) -> Option<Target> {\n-        None\n-    }\n-\n     fn metadata_loader(&self) -> Box<MetadataLoaderDyn> {\n         Box::new(metadata::LlvmMetadataLoader)\n     }"}, {"sha": "90520f77e3c04337111a9c01213531431a070d73", "filename": "compiler/rustc_codegen_ssa/src/traits/backend.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftraits%2Fbackend.rs?ref=48655c2d2ca8590c7627f32839ba921297290a1a", "patch": "@@ -55,9 +55,11 @@ pub trait CodegenBackend {\n     fn print_passes(&self) {}\n     fn print_version(&self) {}\n \n-    /// If this plugin provides additional builtin targets, provide them here.\n+    /// If this plugin provides additional builtin targets, provide the one enabled by the options here.\n     /// Be careful: this is called *before* init() is called.\n-    fn target_override(&self, opts: &config::Options) -> Option<Target>;\n+    fn target_override(&self, _opts: &config::Options) -> Option<Target> {\n+        None\n+    }\n \n     fn metadata_loader(&self) -> Box<MetadataLoaderDyn>;\n     fn provide(&self, _providers: &mut Providers);"}, {"sha": "0eed6938c316923e106d31f67fb74d059ad4d836", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48655c2d2ca8590c7627f32839ba921297290a1a/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=48655c2d2ca8590c7627f32839ba921297290a1a", "patch": "@@ -65,7 +65,7 @@ pub fn create_session(\n     lint_caps: FxHashMap<lint::LintId, lint::Level>,\n     descriptions: Registry,\n ) -> (Lrc<Session>, Lrc<Box<dyn CodegenBackend>>) {\n-    let codegen_backend = get_codegen_backend(sopts.debugging_opts.codegen_backend.as_deref());\n+    let codegen_backend = get_codegen_backend(&sopts);\n     // target_override is documented to be called before init(), so this is okay\n     let target_override = codegen_backend.target_override(&sopts);\n \n@@ -224,13 +224,13 @@ fn load_backend_from_dylib(path: &Path) -> fn() -> Box<dyn CodegenBackend> {\n     }\n }\n \n-pub fn get_codegen_backend(codegen_name: Option<&str>) -> Box<dyn CodegenBackend> {\n+pub fn get_codegen_backend(sopts: &config::Options) -> Box<dyn CodegenBackend> {\n     static INIT: Once = Once::new();\n \n     static mut LOAD: fn() -> Box<dyn CodegenBackend> = || unreachable!();\n \n     INIT.call_once(|| {\n-        let codegen_name = codegen_name.unwrap_or(\"llvm\");\n+        let codegen_name = sopts.debugging_opts.codegen_backend.as_deref().unwrap_or(\"llvm\");\n         let backend = match codegen_name {\n             filename if filename.contains('.') => load_backend_from_dylib(filename.as_ref()),\n             codegen_name => get_builtin_codegen_backend(codegen_name),"}]}