{"sha": "dbd16a5b475606f1131cd41529be830ee89e7221", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZDE2YTViNDc1NjA2ZjExMzFjZDQxNTI5YmU4MzBlZTg5ZTcyMjE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2015-03-19T00:35:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2015-03-19T05:05:19Z"}, "message": "liballoc: Partially inline the refcount manipulation in the Arc\ndestructor.", "tree": {"sha": "dd795f2e7df6b8d81f1942bd31128079c1545599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd795f2e7df6b8d81f1942bd31128079c1545599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbd16a5b475606f1131cd41529be830ee89e7221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbd16a5b475606f1131cd41529be830ee89e7221", "html_url": "https://github.com/rust-lang/rust/commit/dbd16a5b475606f1131cd41529be830ee89e7221", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbd16a5b475606f1131cd41529be830ee89e7221/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12cb7c6a2847959460ecac75b2c983d071585472", "url": "https://api.github.com/repos/rust-lang/rust/commits/12cb7c6a2847959460ecac75b2c983d071585472", "html_url": "https://github.com/rust-lang/rust/commit/12cb7c6a2847959460ecac75b2c983d071585472"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "8528be2860cca2624f820c46349daaf942ac4445", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dbd16a5b475606f1131cd41529be830ee89e7221/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbd16a5b475606f1131cd41529be830ee89e7221/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=dbd16a5b475606f1131cd41529be830ee89e7221", "patch": "@@ -210,6 +210,21 @@ impl<T> Arc<T> {\n         // contents.\n         unsafe { &**self._ptr }\n     }\n+\n+    // Non-inlined part of `drop`.\n+    #[inline(never)]\n+    unsafe fn drop_slow(&mut self) {\n+        let ptr = *self._ptr;\n+\n+        // Destroy the data at this time, even though we may not free the box allocation itself\n+        // (there may still be weak pointers lying around).\n+        drop(ptr::read(&self.inner().data));\n+\n+        if self.inner().weak.fetch_sub(1, Release) == 1 {\n+            atomic::fence(Acquire);\n+            deallocate(ptr as *mut u8, size_of::<ArcInner<T>>(), min_align_of::<ArcInner<T>>())\n+        }\n+    }\n }\n \n /// Get the number of weak references to this value.\n@@ -325,6 +340,7 @@ impl<T: Sync + Send> Drop for Arc<T> {\n     ///\n     /// } // implicit drop\n     /// ```\n+    #[inline]\n     fn drop(&mut self) {\n         // This structure has #[unsafe_no_drop_flag], so this drop glue may run more than once (but\n         // it is guaranteed to be zeroed after the first if it's run more than once)\n@@ -353,14 +369,8 @@ impl<T: Sync + Send> Drop for Arc<T> {\n         // [1]: (www.boost.org/doc/libs/1_55_0/doc/html/atomic/usage_examples.html)\n         atomic::fence(Acquire);\n \n-        // Destroy the data at this time, even though we may not free the box allocation itself\n-        // (there may still be weak pointers lying around).\n-        unsafe { drop(ptr::read(&self.inner().data)); }\n-\n-        if self.inner().weak.fetch_sub(1, Release) == 1 {\n-            atomic::fence(Acquire);\n-            unsafe { deallocate(ptr as *mut u8, size_of::<ArcInner<T>>(),\n-                                min_align_of::<ArcInner<T>>()) }\n+        unsafe {\n+            self.drop_slow()\n         }\n     }\n }"}]}