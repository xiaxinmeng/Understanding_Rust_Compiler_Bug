{"sha": "f505cc9f7265eee332984f30516852e24d6e8385", "node_id": "C_kwDOAAsO6NoAKGY1MDVjYzlmNzI2NWVlZTMzMjk4NGYzMDUxNjg1MmUyNGQ2ZTgzODU", "commit": {"author": {"name": "binggh", "email": "binggh@proton.me", "date": "2022-05-03T09:51:23Z"}, "committer": {"name": "binggh", "email": "binggh@proton.me", "date": "2022-05-03T09:51:23Z"}, "message": "Easier readability for needless_late_init", "tree": {"sha": "85f37649b0d9468ff73b6c897b949d312b9c80a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85f37649b0d9468ff73b6c897b949d312b9c80a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f505cc9f7265eee332984f30516852e24d6e8385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f505cc9f7265eee332984f30516852e24d6e8385", "html_url": "https://github.com/rust-lang/rust/commit/f505cc9f7265eee332984f30516852e24d6e8385", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f505cc9f7265eee332984f30516852e24d6e8385/comments", "author": null, "committer": null, "parents": [{"sha": "0ceacbe1854633ed3a4554d4b9ceab4223948b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ceacbe1854633ed3a4554d4b9ceab4223948b7b", "html_url": "https://github.com/rust-lang/rust/commit/0ceacbe1854633ed3a4554d4b9ceab4223948b7b"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b70871b38beab178f63735330657ab8388e2f355", "filename": "clippy_lints/src/needless_late_init.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f505cc9f7265eee332984f30516852e24d6e8385/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f505cc9f7265eee332984f30516852e24d6e8385/clippy_lints%2Fsrc%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_late_init.rs?ref=f505cc9f7265eee332984f30516852e24d6e8385", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::path_to_local;\n use clippy_utils::source::snippet_opt;\n use clippy_utils::ty::needs_ordered_drop;\n use clippy_utils::visitors::{expr_visitor, expr_visitor_no_bodies, is_local_used};\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, MultiSpan};\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::{\n     BindingAnnotation, Block, Expr, ExprKind, HirId, Local, LocalSource, MatchSource, Node, Pat, PatKind, Stmt,\n@@ -267,11 +267,14 @@ fn check<'tcx>(\n     match usage.expr.kind {\n         ExprKind::Assign(..) => {\n             let assign = LocalAssign::new(cx, usage.expr, binding_id)?;\n+            let mut msg_span = MultiSpan::from_spans(vec![local_stmt.span, assign.span]);\n+            msg_span.push_span_label(local_stmt.span, \"created here\");\n+            msg_span.push_span_label(assign.span, \"initialised here\");\n \n             span_lint_and_then(\n                 cx,\n                 NEEDLESS_LATE_INIT,\n-                local_stmt.span,\n+                msg_span,\n                 \"unneeded late initialization\",\n                 |diag| {\n                     diag.tool_only_span_suggestion(\n@@ -365,7 +368,6 @@ fn check<'tcx>(\n impl<'tcx> LateLintPass<'tcx> for NeedlessLateInit {\n     fn check_local(&mut self, cx: &LateContext<'tcx>, local: &'tcx Local<'tcx>) {\n         let mut parents = cx.tcx.hir().parent_iter(local.hir_id);\n-\n         if_chain! {\n             if let Local {\n                 init: None,"}]}