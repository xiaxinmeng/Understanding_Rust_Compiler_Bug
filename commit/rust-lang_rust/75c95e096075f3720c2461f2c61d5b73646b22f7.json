{"sha": "75c95e096075f3720c2461f2c61d5b73646b22f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1Yzk1ZTA5NjA3NWYzNzIwYzI0NjFmMmM2MWQ1YjczNjQ2YjIyZjc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T02:03:06Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:34Z"}, "message": "librustc: De-`@mut` the region maps", "tree": {"sha": "bc45dca0c6665486a7037399022f9ae03f755ed2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc45dca0c6665486a7037399022f9ae03f755ed2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75c95e096075f3720c2461f2c61d5b73646b22f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75c95e096075f3720c2461f2c61d5b73646b22f7", "html_url": "https://github.com/rust-lang/rust/commit/75c95e096075f3720c2461f2c61d5b73646b22f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75c95e096075f3720c2461f2c61d5b73646b22f7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f759fe15a1f796f0c9f201891aa642e2eadd5d42", "url": "https://api.github.com/repos/rust-lang/rust/commits/f759fe15a1f796f0c9f201891aa642e2eadd5d42", "html_url": "https://github.com/rust-lang/rust/commit/f759fe15a1f796f0c9f201891aa642e2eadd5d42"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "3f8f2f35100d7d60ff891720e9fa6631e8d9a9ba", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/75c95e096075f3720c2461f2c61d5b73646b22f7/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c95e096075f3720c2461f2c61d5b73646b22f7/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=75c95e096075f3720c2461f2c61d5b73646b22f7", "patch": "@@ -69,12 +69,12 @@ struct RegionResolutionVisitor {\n     sess: Session,\n \n     // Generated maps:\n-    region_maps: @mut RegionMaps,\n+    region_maps: @RegionMaps,\n }\n \n \n impl RegionMaps {\n-    pub fn relate_free_regions(&mut self, sub: FreeRegion, sup: FreeRegion) {\n+    pub fn relate_free_regions(&self, sub: FreeRegion, sup: FreeRegion) {\n         let mut free_region_map = self.free_region_map.borrow_mut();\n         match free_region_map.get().find_mut(&sub) {\n             Some(sups) => {\n@@ -91,15 +91,15 @@ impl RegionMaps {\n         free_region_map.get().insert(sub, ~[sup]);\n     }\n \n-    pub fn record_parent(&mut self, sub: ast::NodeId, sup: ast::NodeId) {\n+    pub fn record_parent(&self, sub: ast::NodeId, sup: ast::NodeId) {\n         debug!(\"record_parent(sub={:?}, sup={:?})\", sub, sup);\n         assert!(sub != sup);\n \n         let mut scope_map = self.scope_map.borrow_mut();\n         scope_map.get().insert(sub, sup);\n     }\n \n-    pub fn record_cleanup_scope(&mut self, scope_id: ast::NodeId) {\n+    pub fn record_cleanup_scope(&self, scope_id: ast::NodeId) {\n         //! Records that a scope is a CLEANUP SCOPE.  This is invoked\n         //! from within regionck.  We wait until regionck because we do\n         //! not know which operators are overloaded until that point,\n@@ -504,10 +504,8 @@ impl Visitor<Context> for RegionResolutionVisitor {\n     }\n }\n \n-pub fn resolve_crate(sess: Session,\n-                     crate: &ast::Crate) -> @mut RegionMaps\n-{\n-    let region_maps = @mut RegionMaps {\n+pub fn resolve_crate(sess: Session, crate: &ast::Crate) -> @RegionMaps {\n+    let region_maps = @RegionMaps {\n         scope_map: RefCell::new(HashMap::new()),\n         free_region_map: RefCell::new(HashMap::new()),\n         cleanup_scopes: RefCell::new(HashSet::new()),"}, {"sha": "250db8e119a86380a1e9a180a0aac0cf51704fef", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75c95e096075f3720c2461f2c61d5b73646b22f7/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75c95e096075f3720c2461f2c61d5b73646b22f7/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=75c95e096075f3720c2461f2c61d5b73646b22f7", "patch": "@@ -272,7 +272,7 @@ struct ctxt_ {\n \n     named_region_map: @RefCell<resolve_lifetime::NamedRegionMap>,\n \n-    region_maps: @mut middle::region::RegionMaps,\n+    region_maps: @middle::region::RegionMaps,\n \n     // Stores the types for various nodes in the AST.  Note that this table\n     // is not guaranteed to be populated until after typeck.  See\n@@ -962,7 +962,7 @@ pub fn mk_ctxt(s: session::Session,\n                named_region_map: @RefCell<resolve_lifetime::NamedRegionMap>,\n                amap: ast_map::map,\n                freevars: freevars::freevar_map,\n-               region_maps: @mut middle::region::RegionMaps,\n+               region_maps: @middle::region::RegionMaps,\n                lang_items: middle::lang_items::LanguageItems)\n             -> ctxt {\n     @ctxt_ {"}]}