{"sha": "24e87965ae35843fe340a5104482be1d1f827af7", "node_id": "C_kwDOAAsO6NoAKDI0ZTg3OTY1YWUzNTg0M2ZlMzQwYTUxMDQ0ODJiZTFkMWY4MjdhZjc", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-12T07:22:52Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-07-12T07:22:52Z"}, "message": "Use some more visible sigils than `,`", "tree": {"sha": "7f8b98b5fe8ecb252cc2e7f2edccd94d65792240", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f8b98b5fe8ecb252cc2e7f2edccd94d65792240"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24e87965ae35843fe340a5104482be1d1f827af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24e87965ae35843fe340a5104482be1d1f827af7", "html_url": "https://github.com/rust-lang/rust/commit/24e87965ae35843fe340a5104482be1d1f827af7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24e87965ae35843fe340a5104482be1d1f827af7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3338593afd6a010a2ce6799d3bf4bf4c2a252950", "url": "https://api.github.com/repos/rust-lang/rust/commits/3338593afd6a010a2ce6799d3bf4bf4c2a252950", "html_url": "https://github.com/rust-lang/rust/commit/3338593afd6a010a2ce6799d3bf4bf4c2a252950"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "e82eaa38612cd76558f405229ebbb330ead5713e", "filename": "src/test/ui/layout/unsafe-cell-hides-niche.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/24e87965ae35843fe340a5104482be1d1f827af7/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24e87965ae35843fe340a5104482be1d1f827af7/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Funsafe-cell-hides-niche.rs?ref=24e87965ae35843fe340a5104482be1d1f827af7", "patch": "@@ -26,7 +26,7 @@ macro_rules! check_sizes {\n     (check_one_specific_size: $ty:ty, $size:expr) => {\n         const _: Size::<{$size}> = Size::<{size_of::<$ty>()}>;\n     };\n-    ($ty:ty, $size:expr, $optioned_size:expr) => {\n+    ($ty:ty: $size:expr => $optioned_size:expr) => {\n         check_sizes!(check_one_specific_size: $ty, $size);\n         check_sizes!(check_one_specific_size: Option<$ty>, $optioned_size);\n         check_sizes!(check_no_niche_opt: $size != $optioned_size, $ty);\n@@ -41,30 +41,30 @@ macro_rules! check_sizes {\n \n const PTR_SIZE: usize = std::mem::size_of::<*const ()>();\n \n-check_sizes!(Wrapper<u32>,     4, 8);\n-check_sizes!(Wrapper<N32>,     4, 4); // (\u2713 niche opt)\n-check_sizes!(Transparent<u32>, 4, 8);\n-check_sizes!(Transparent<N32>, 4, 4); // (\u2713 niche opt)\n-check_sizes!(NoNiche<u32>,     4, 8);\n-check_sizes!(NoNiche<N32>,     4, 8);\n+check_sizes!(Wrapper<u32>:     4 => 8);\n+check_sizes!(Wrapper<N32>:     4 => 4); // (\u2713 niche opt)\n+check_sizes!(Transparent<u32>: 4 => 8);\n+check_sizes!(Transparent<N32>: 4 => 4); // (\u2713 niche opt)\n+check_sizes!(NoNiche<u32>:     4 => 8);\n+check_sizes!(NoNiche<N32>:     4 => 8);\n \n-check_sizes!(UnsafeCell<u32>,  4, 8);\n-check_sizes!(UnsafeCell<N32>,  4, 8);\n+check_sizes!(UnsafeCell<u32>:  4 => 8);\n+check_sizes!(UnsafeCell<N32>:  4 => 8);\n \n-check_sizes!(UnsafeCell<&()> , PTR_SIZE, PTR_SIZE * 2);\n-check_sizes!(      Cell<&()> , PTR_SIZE, PTR_SIZE * 2);\n-check_sizes!(   RefCell<&()> , PTR_SIZE * 2, PTR_SIZE * 3);\n+check_sizes!(UnsafeCell<&()>: PTR_SIZE => PTR_SIZE * 2);\n+check_sizes!(      Cell<&()>: PTR_SIZE => PTR_SIZE * 2);\n+check_sizes!(   RefCell<&()>: PTR_SIZE * 2 => PTR_SIZE * 3);\n \n check_sizes!(RwLock<&()>);\n check_sizes!(Mutex<&()>);\n \n-check_sizes!(UnsafeCell<&[i32]> , PTR_SIZE * 2, PTR_SIZE * 3);\n-check_sizes!(UnsafeCell<(&(), &())> , PTR_SIZE * 2, PTR_SIZE * 3);\n+check_sizes!(UnsafeCell<&[i32]>: PTR_SIZE * 2 => PTR_SIZE * 3);\n+check_sizes!(UnsafeCell<(&(), &())>: PTR_SIZE * 2 => PTR_SIZE * 3);\n \n trait Trait {}\n-check_sizes!(UnsafeCell<&dyn Trait> , PTR_SIZE * 2, PTR_SIZE * 3);\n+check_sizes!(UnsafeCell<&dyn Trait>: PTR_SIZE * 2 => PTR_SIZE * 3);\n \n #[repr(simd)]\n pub struct Vec4<T>([T; 4]);\n \n-check_sizes!(UnsafeCell<Vec4<N32>> , 16, 32);\n+check_sizes!(UnsafeCell<Vec4<N32>>: 16 => 32);"}]}