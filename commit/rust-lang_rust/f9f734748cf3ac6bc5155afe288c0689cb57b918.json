{"sha": "f9f734748cf3ac6bc5155afe288c0689cb57b918", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZjczNDc0OGNmM2FjNmJjNTE1NWFmZTI4OGMwNjg5Y2I1N2I5MTg=", "commit": {"author": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-11-11T19:25:18Z"}, "committer": {"name": "arcnmx", "email": "arcnmx@users.noreply.github.com", "date": "2015-11-11T19:25:18Z"}, "message": "Cleaner c_char cfg logic", "tree": {"sha": "ab2fa7cffeb3642fa74b0b08e5fb407e7f7abf27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab2fa7cffeb3642fa74b0b08e5fb407e7f7abf27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9f734748cf3ac6bc5155afe288c0689cb57b918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f734748cf3ac6bc5155afe288c0689cb57b918", "html_url": "https://github.com/rust-lang/rust/commit/f9f734748cf3ac6bc5155afe288c0689cb57b918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9f734748cf3ac6bc5155afe288c0689cb57b918/comments", "author": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arcnmx", "id": 13426784, "node_id": "MDQ6VXNlcjEzNDI2Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/13426784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arcnmx", "html_url": "https://github.com/arcnmx", "followers_url": "https://api.github.com/users/arcnmx/followers", "following_url": "https://api.github.com/users/arcnmx/following{/other_user}", "gists_url": "https://api.github.com/users/arcnmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/arcnmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arcnmx/subscriptions", "organizations_url": "https://api.github.com/users/arcnmx/orgs", "repos_url": "https://api.github.com/users/arcnmx/repos", "events_url": "https://api.github.com/users/arcnmx/events{/privacy}", "received_events_url": "https://api.github.com/users/arcnmx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc60b2c73e8c8b00152a1305cd27239b50fdd267", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc60b2c73e8c8b00152a1305cd27239b50fdd267", "html_url": "https://github.com/rust-lang/rust/commit/fc60b2c73e8c8b00152a1305cd27239b50fdd267"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "42fd2321f011dc4bd09dae14ce3492bb28ab1189", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9f734748cf3ac6bc5155afe288c0689cb57b918/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f734748cf3ac6bc5155afe288c0689cb57b918/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=f9f734748cf3ac6bc5155afe288c0689cb57b918", "patch": "@@ -37,11 +37,10 @@ use vec::Vec;\n ///\n /// A `CString` is created from either a byte slice or a byte vector. After\n /// being created, a `CString` predominately inherits all of its methods from\n-/// the `Deref` implementation to `[os::raw::c_char]`. Note that the underlying\n-/// array is represented as an array of `os::raw::c_char` as opposed to `u8`. A\n-/// `u8` slice can be obtained with the `as_bytes` method.  Slices produced from\n-/// a `CString` do *not* contain the trailing nul terminator unless otherwise\n-/// specified.\n+/// the `Deref` implementation to `[c_char]`. Note that the underlying array\n+/// is represented as an array of `c_char` as opposed to `u8`. A `u8` slice\n+/// can be obtained with the `as_bytes` method.  Slices produced from a `CString`\n+/// do *not* contain the trailing nul terminator unless otherwise specified.\n ///\n /// # Examples\n ///"}, {"sha": "17d6b2605c62831c7300491b4a824f3f90bb79cd", "filename": "src/libstd/os/raw.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f9f734748cf3ac6bc5155afe288c0689cb57b918/src%2Flibstd%2Fos%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9f734748cf3ac6bc5155afe288c0689cb57b918/src%2Flibstd%2Fos%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fraw.rs?ref=f9f734748cf3ac6bc5155afe288c0689cb57b918", "patch": "@@ -12,13 +12,13 @@\n \n #![stable(feature = \"raw_os\", since = \"1.1.0\")]\n \n-#[cfg(all(not(target_os = \"ios\"), not(target_os = \"macos\"),\n-          any(target_arch = \"aarch64\", target_arch = \"arm\",\n-              target_os = \"android\")))]\n+#[cfg(any(target_os = \"android\",\n+          all(target_os = \"linux\", any(target_arch = \"aarch64\",\n+                                       target_arch = \"arm\"))))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_char = u8;\n-#[cfg(any(target_os = \"ios\", target_os = \"macos\",\n-          not(any(target_arch = \"aarch64\", target_arch = \"arm\",\n-                  target_os = \"android\"))))]\n+#[cfg(not(any(target_os = \"android\",\n+              all(target_os = \"linux\", any(target_arch = \"aarch64\",\n+                                           target_arch = \"arm\")))))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_char = i8;\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_schar = i8;\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_uchar = u8;"}]}