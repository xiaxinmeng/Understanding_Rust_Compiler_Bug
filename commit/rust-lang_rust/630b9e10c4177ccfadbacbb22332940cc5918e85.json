{"sha": "630b9e10c4177ccfadbacbb22332940cc5918e85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMGI5ZTEwYzQxNzdjY2ZhZGJhY2JiMjIzMzI5NDBjYzU5MThlODU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-01-16T21:48:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-16T21:48:24Z"}, "message": "Rollup merge of #39084 - sphela:book-update-patterns, r=steveklabnik\n\nAn update to patterns documentation\n\nAs it is written the current pattern page creates a lot of confusion, even for someone with previous rust experience. It's so hard because it introduces an entirely new language feature without explaining. Someone could update it within the span of a few minutes by just explaining the newly introduced feature.\n\n```rust\nmatch c {\n    x => println!(\"x: {} c: {}\", x, c),\n}\n```\nNo where in the book up to this point has it explained that identifiers match patterns with just a name create an irrefutable pattern. The page uses this feature without explanation, it just assumes that readers would immediately understand it. To confuse the issue even further the topic uses this feature to explain shadowing, placing two x's from different scopes and different meanings without ever explaining why there is shadowing.\n\nWhat follows comes across as utterly nonsensical given everything the reader would know about Rust about this point:\n\n```rust\nthe result:\nx: c c: c\nx: x\n```\n\nx is c? What? Yes even if you understand that x here is not the x in the previous scope why would x equal 'c' here? What previous chapter explained this? The previous chapter on 'matching' only mentions the catch all '_' and never in any shape or form mentioned that a name here creates an irrefutable pattern and binds a value.\n\nThere are numerous examples of people not understanding this section, not finding answers and looking for them online about `x: c c: c`:\n\nhttps://github.com/rust-lang/book/issues/316\n\nhttps://stackoverflow.com/questions/35563141/match-shadowing-example-in-the-patterns-section-of-the-rust-book-is-very-perplex\n\nhttps://users.rust-lang.org/t/confusion-about-match-and-patterns/3937\n\nhttps://www.bountysource.com/issues/38852461-question-on-patterns-section-shadowing-example-existing-book\n\nAnd a [google search for `rust x: c c: c`](https://www.google.com/search?q=rust+%22x:+c+c:+c%22) finds many more people being tripped up, including people who speak a language other than English. I am confident that this page has resulted in questions on the irc channel more than once. Given rust already has a pretty big learning curve I recommend this be fixed.\n\nI was asked to create PR from where I made this same case in the [rust book repository issue](https://github.com/rust-lang/book/issues/316) (I didn't realize this was a separate project).", "tree": {"sha": "9e8b4e54852f6b1456f6ff7169c0786ce3d63a03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e8b4e54852f6b1456f6ff7169c0786ce3d63a03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/630b9e10c4177ccfadbacbb22332940cc5918e85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/630b9e10c4177ccfadbacbb22332940cc5918e85", "html_url": "https://github.com/rust-lang/rust/commit/630b9e10c4177ccfadbacbb22332940cc5918e85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/630b9e10c4177ccfadbacbb22332940cc5918e85/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "url": "https://api.github.com/repos/rust-lang/rust/commits/04921398b688cf3eda8d5394d7a5dbeecd1f2baf", "html_url": "https://github.com/rust-lang/rust/commit/04921398b688cf3eda8d5394d7a5dbeecd1f2baf"}, {"sha": "0dad9dcf9ec7284283ef97dd0f192060a70cfad5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dad9dcf9ec7284283ef97dd0f192060a70cfad5", "html_url": "https://github.com/rust-lang/rust/commit/0dad9dcf9ec7284283ef97dd0f192060a70cfad5"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "24f71608a5bf3ff8ae1b425803d89c74280d8f18", "filename": "src/doc/book/patterns.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/630b9e10c4177ccfadbacbb22332940cc5918e85/src%2Fdoc%2Fbook%2Fpatterns.md", "raw_url": "https://github.com/rust-lang/rust/raw/630b9e10c4177ccfadbacbb22332940cc5918e85/src%2Fdoc%2Fbook%2Fpatterns.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fpatterns.md?ref=630b9e10c4177ccfadbacbb22332940cc5918e85", "patch": "@@ -23,6 +23,33 @@ match x {\n \n This prints `one`.\n \n+It's possible to create a binding for the value in the any case:\n+\n+```rust\n+let x = 1;\n+\n+match x {\n+    y => println!(\"x: {} y: {}\", x, y),\n+}\n+```\n+\n+This prints:\n+\n+```text\n+x: 1 y: 1\n+```\n+\n+Note it is an error to have both a catch-all `_` and a catch-all binding in the same match block:\n+\n+```rust\n+let x = 1;\n+\n+match x {\n+    y => println!(\"x: {} y: {}\", x, y),\n+    _ => println!(\"anything\"), // this causes an error as it is unreachable\n+}\n+```\n+\n There\u2019s one pitfall with patterns: like anything that introduces a new binding,\n they introduce shadowing. For example:\n "}]}