{"sha": "9e5fa74279b939a752826a52e1c4693205377a26", "node_id": "C_kwDOAAsO6NoAKDllNWZhNzQyNzliOTM5YTc1MjgyNmE1MmUxYzQ2OTMyMDUzNzdhMjY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-27T14:51:45Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-02-27T14:51:45Z"}, "message": "Simplify", "tree": {"sha": "081a3af41057696d6531454583429b607c2d6b96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/081a3af41057696d6531454583429b607c2d6b96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5fa74279b939a752826a52e1c4693205377a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5fa74279b939a752826a52e1c4693205377a26", "html_url": "https://github.com/rust-lang/rust/commit/9e5fa74279b939a752826a52e1c4693205377a26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5fa74279b939a752826a52e1c4693205377a26/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b38fcde3ba6010d64d22138fa82dccb852fa8b23", "url": "https://api.github.com/repos/rust-lang/rust/commits/b38fcde3ba6010d64d22138fa82dccb852fa8b23", "html_url": "https://github.com/rust-lang/rust/commit/b38fcde3ba6010d64d22138fa82dccb852fa8b23"}], "stats": {"total": 96, "additions": 44, "deletions": 52}, "files": [{"sha": "6bdfca08920708294bc2dd4cdd8829cdd234cb73", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 15, "deletions": 26, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -867,33 +867,28 @@ fn iterate_method_candidates_with_autoref(\n         return ControlFlow::Continue(());\n     }\n \n-    iterate_method_candidates_by_receiver(\n-        receiver_ty,\n-        first_adjustment.clone(),\n-        db,\n-        env.clone(),\n-        traits_in_scope,\n-        visible_from_module,\n-        name,\n-        &mut callback,\n-    )?;\n+    let iterate_method_candidates_by_receiver = |receiver_ty, first_adjustment| {\n+        iterate_method_candidates_by_receiver(\n+            receiver_ty,\n+            first_adjustment,\n+            db,\n+            env.clone(),\n+            traits_in_scope,\n+            visible_from_module,\n+            name,\n+            &mut callback,\n+        )\n+    };\n+\n+    iterate_method_candidates_by_receiver(receiver_ty, first_adjustment.clone())?;\n \n     let refed = Canonical {\n         value: TyKind::Ref(Mutability::Not, static_lifetime(), receiver_ty.value.clone())\n             .intern(Interner),\n         binders: receiver_ty.binders.clone(),\n     };\n \n-    iterate_method_candidates_by_receiver(\n-        &refed,\n-        first_adjustment.with_autoref(Mutability::Not),\n-        db,\n-        env.clone(),\n-        traits_in_scope,\n-        visible_from_module,\n-        name,\n-        &mut callback,\n-    )?;\n+    iterate_method_candidates_by_receiver(&refed, first_adjustment.with_autoref(Mutability::Not))?;\n \n     let ref_muted = Canonical {\n         value: TyKind::Ref(Mutability::Mut, static_lifetime(), receiver_ty.value.clone())\n@@ -904,12 +899,6 @@ fn iterate_method_candidates_with_autoref(\n     iterate_method_candidates_by_receiver(\n         &ref_muted,\n         first_adjustment.with_autoref(Mutability::Mut),\n-        db,\n-        env,\n-        traits_in_scope,\n-        visible_from_module,\n-        name,\n-        &mut callback,\n     )\n }\n "}, {"sha": "1f4f3091dfcfb35fde4e25f18671f920c8658f8a", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -3339,12 +3339,10 @@ impl Type {\n             .map(move |ty| self.derived(ty))\n     }\n \n-    pub fn iterate_method_candidates<T>(\n+    pub fn iterate_method_candidates_with_traits<T>(\n         &self,\n         db: &dyn HirDatabase,\n         scope: &SemanticsScope<'_>,\n-        // FIXME this can be retrieved from `scope`, except autoimport uses this\n-        // to specify a different set, so the method needs to be split\n         traits_in_scope: &FxHashSet<TraitId>,\n         with_local_impls: Option<Module>,\n         name: Option<&Name>,\n@@ -3372,6 +3370,24 @@ impl Type {\n         slot\n     }\n \n+    pub fn iterate_method_candidates<T>(\n+        &self,\n+        db: &dyn HirDatabase,\n+        scope: &SemanticsScope<'_>,\n+        with_local_impls: Option<Module>,\n+        name: Option<&Name>,\n+        mut callback: impl FnMut(Function) -> Option<T>,\n+    ) -> Option<T> {\n+        self.iterate_method_candidates_with_traits(\n+            db,\n+            scope,\n+            &scope.visible_traits().0,\n+            with_local_impls,\n+            name,\n+            callback,\n+        )\n+    }\n+\n     fn iterate_method_candidates_dyn(\n         &self,\n         db: &dyn HirDatabase,"}, {"sha": "b3ba1c7d349fc635a4dc2c2ed78a0ea30c6a4ec1", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -1673,6 +1673,7 @@ impl<'a> SemanticsScope<'a> {\n     }\n }\n \n+#[derive(Debug)]\n pub struct VisibleTraits(pub FxHashSet<TraitId>);\n \n impl ops::Deref for VisibleTraits {"}, {"sha": "9e1d9a702a15f3a7d8e4856453577bc1ee2a0814", "filename": "crates/ide-assists/src/handlers/convert_iter_for_each_to_for.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -157,19 +157,12 @@ fn is_ref_and_impls_iter_method(\n     let iter_trait = FamousDefs(sema, krate).core_iter_Iterator()?;\n \n     let has_wanted_method = ty\n-        .iterate_method_candidates(\n-            sema.db,\n-            &scope,\n-            &scope.visible_traits().0,\n-            None,\n-            Some(&wanted_method),\n-            |func| {\n-                if func.ret_type(sema.db).impls_trait(sema.db, iter_trait, &[]) {\n-                    return Some(());\n-                }\n-                None\n-            },\n-        )\n+        .iterate_method_candidates(sema.db, &scope, None, Some(&wanted_method), |func| {\n+            if func.ret_type(sema.db).impls_trait(sema.db, iter_trait, &[]) {\n+                return Some(());\n+            }\n+            None\n+        })\n         .is_some();\n     if !has_wanted_method {\n         return None;"}, {"sha": "442918619604448b7950f5796c0a27c160872162", "filename": "crates/ide-assists/src/handlers/generate_is_empty_from_len.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_is_empty_from_len.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -95,14 +95,7 @@ fn get_impl_method(\n \n     let scope = ctx.sema.scope(impl_.syntax())?;\n     let ty = impl_def.self_ty(db);\n-    ty.iterate_method_candidates(\n-        db,\n-        &scope,\n-        &scope.visible_traits().0,\n-        None,\n-        Some(fn_name),\n-        |func| Some(func),\n-    )\n+    ty.iterate_method_candidates(db, &scope, None, Some(fn_name), |func| Some(func))\n }\n \n #[cfg(test)]"}, {"sha": "09ac57153ae8b65df027bcda23b0ed7d98a84fdc", "filename": "crates/ide-completion/src/completions/dot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -122,7 +122,7 @@ fn complete_methods(\n     mut f: impl FnMut(hir::Function),\n ) {\n     let mut seen_methods = FxHashSet::default();\n-    receiver.iterate_method_candidates(\n+    receiver.iterate_method_candidates_with_traits(\n         ctx.db,\n         &ctx.scope,\n         &ctx.traits_in_scope(),"}, {"sha": "b26b0a9087ea2f3858efbe7a9d31bd2c3dabd49b", "filename": "crates/ide-db/src/imports/import_assets.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-db%2Fsrc%2Fimports%2Fimport_assets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5fa74279b939a752826a52e1c4693205377a26/crates%2Fide-db%2Fsrc%2Fimports%2Fimport_assets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Fimports%2Fimport_assets.rs?ref=9e5fa74279b939a752826a52e1c4693205377a26", "patch": "@@ -528,7 +528,7 @@ fn trait_applicable_items(\n             },\n         )\n     } else {\n-        trait_candidate.receiver_ty.iterate_method_candidates(\n+        trait_candidate.receiver_ty.iterate_method_candidates_with_traits(\n             db,\n             scope,\n             &trait_candidates,"}]}