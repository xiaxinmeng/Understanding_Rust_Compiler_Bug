{"sha": "188f3eb8f54d6224cec6a14c1c70372e02550a15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OGYzZWI4ZjU0ZDYyMjRjZWM2YTE0YzFjNzAzNzJlMDI1NTBhMTU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-27T14:26:19Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-27T14:26:19Z"}, "message": "Rollup merge of #24863 - dhardy:patch-1, r=steveklabnik\n\nRemove the name \"multi-line string literal\" since the rule appears to affect each line-break individually rather than the whole string literal. Re-word, and remove the stray reference to raw strings.", "tree": {"sha": "47157ca576061912a364cd8e77603269ef7a42ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47157ca576061912a364cd8e77603269ef7a42ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/188f3eb8f54d6224cec6a14c1c70372e02550a15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/188f3eb8f54d6224cec6a14c1c70372e02550a15", "html_url": "https://github.com/rust-lang/rust/commit/188f3eb8f54d6224cec6a14c1c70372e02550a15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/188f3eb8f54d6224cec6a14c1c70372e02550a15/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be569bcd3591204825c02874d9bdbc9d6bc5fa1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/be569bcd3591204825c02874d9bdbc9d6bc5fa1d", "html_url": "https://github.com/rust-lang/rust/commit/be569bcd3591204825c02874d9bdbc9d6bc5fa1d"}, {"sha": "cf650a217495940bdf3f8a843f5dd959b6e37b5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf650a217495940bdf3f8a843f5dd959b6e37b5e", "html_url": "https://github.com/rust-lang/rust/commit/cf650a217495940bdf3f8a843f5dd959b6e37b5e"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "848c0df10ee9af5484d919b4e72ea2188f7574fc", "filename": "src/doc/reference.md", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/188f3eb8f54d6224cec6a14c1c70372e02550a15/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/188f3eb8f54d6224cec6a14c1c70372e02550a15/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=188f3eb8f54d6224cec6a14c1c70372e02550a15", "patch": "@@ -192,13 +192,13 @@ which must be _escaped_ by a preceding `U+005C` character (`\\`).\n \n A _string literal_ is a sequence of any Unicode characters enclosed within two\n `U+0022` (double-quote) characters, with the exception of `U+0022` itself,\n-which must be _escaped_ by a preceding `U+005C` character (`\\`), or a _raw\n-string literal_.\n+which must be _escaped_ by a preceding `U+005C` character (`\\`).\n \n-A multi-line string literal may be defined by terminating each line with a\n-`U+005C` character (`\\`) immediately before the newline. This causes the\n-`U+005C` character, the newline, and all whitespace at the beginning of the\n-next line to be ignored.\n+Line-break characters are allowed in string literals. Normally they represent\n+themselves (i.e. no translation), but as a special exception, when a `U+005C`\n+character (`\\`) occurs immediately before the newline, the `U+005C` character,\n+the newline, and all whitespace at the beginning of the next line are ignored.\n+Thus `a` and `b` are equal:\n \n ```rust\n let a = \"foobar\";\n@@ -366,11 +366,19 @@ A _floating-point literal_ has one of two forms:\n   optionally followed by another decimal literal, with an optional _exponent_.\n * A single _decimal literal_ followed by an _exponent_.\n \n-By default, a floating-point literal has a generic type, and, like integer\n-literals, the type must be uniquely determined from the context. There are two valid\n+Like integer literals, a floating-point literal may be followed by a\n+suffix, so long as the pre-suffix part does not end with `U+002E` (`.`).\n+The suffix forcibly sets the type of the literal. There are two valid\n _floating-point suffixes_, `f32` and `f64` (the 32-bit and 64-bit floating point\n types), which explicitly determine the type of the literal.\n \n+The type of an _unsuffixed_ floating-point literal is determined by type\n+inference. If a floating-point type can be _uniquely_ determined from the\n+surrounding program context, the unsuffixed floating-point literal has that type.\n+If the program context underconstrains the type, it defaults to double-precision `f64`;\n+if the program context overconstrains the type, it is considered a static type\n+error.\n+\n Examples of floating-point literals of various forms:\n \n ```"}]}