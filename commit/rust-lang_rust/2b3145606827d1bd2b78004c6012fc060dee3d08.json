{"sha": "2b3145606827d1bd2b78004c6012fc060dee3d08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMzE0NTYwNjgyN2QxYmQyYjc4MDA0YzYwMTJmYzA2MGRlZTNkMDg=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-09-28T14:47:41Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2019-12-02T13:30:30Z"}, "message": "Add pass to ensure predecessors cache is generated after optimization", "tree": {"sha": "fd8fa27aa11b355821e684276a8f24d020b9615d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd8fa27aa11b355821e684276a8f24d020b9615d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b3145606827d1bd2b78004c6012fc060dee3d08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b3145606827d1bd2b78004c6012fc060dee3d08", "html_url": "https://github.com/rust-lang/rust/commit/2b3145606827d1bd2b78004c6012fc060dee3d08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b3145606827d1bd2b78004c6012fc060dee3d08/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f534d9f8c4bc7aceb80dd06803d709b830a68b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/f534d9f8c4bc7aceb80dd06803d709b830a68b21", "html_url": "https://github.com/rust-lang/rust/commit/f534d9f8c4bc7aceb80dd06803d709b830a68b21"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "78764ec8cd6e2e33b4136a9a80c2258a5ca4f70f", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=2b3145606827d1bd2b78004c6012fc060dee3d08", "patch": "@@ -207,27 +207,14 @@ impl<'tcx> Body<'tcx> {\n     }\n \n     pub fn basic_block_terminator_opt_mut(&mut self, bb: BasicBlock) -> &mut Option<Terminator<'tcx>> {\n+        // FIXME we should look into improving the cache invalidation\n         self.predecessors_cache = None;\n         &mut self.basic_blocks[bb].terminator\n     }\n \n     pub fn basic_block_terminator_mut(&mut self, bb: BasicBlock) -> &mut Terminator<'tcx> {\n+        // FIXME we should look into improving the cache invalidation\n         self.predecessors_cache = None;\n-/*\n-        let data = &mut self.basic_blocks[bb];\n-        if let Some(cache) = self.predecessors_cache.as_mut() {\n-            for successor in data.terminator().successors() {\n-                let successor_vec = &mut cache[*successor];\n-                for i in (0..successor_vec.len()).rev() {\n-                    if successor_vec[i] == bb {\n-                        successor_vec.swap_remove(i);\n-                        break;\n-                    }\n-                }\n-            }\n-        }\n-*/\n-\n         self.basic_blocks[bb].terminator_mut()\n     }\n \n@@ -245,6 +232,7 @@ impl<'tcx> Body<'tcx> {\n     }\n \n     #[inline]\n+    /// This will recompute the predecessors cache if it is not available\n     pub fn predecessors(&mut self) -> &IndexVec<BasicBlock, Vec<BasicBlock>> {\n         if self.predecessors_cache.is_none() {\n             self.predecessors_cache = Some(self.calculate_predecessors())"}, {"sha": "ed5b26d7b05937daa109a4ea084037ac211149ae", "filename": "src/librustc_mir/transform/ensure_predecessors_cache.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc_mir%2Ftransform%2Fensure_predecessors_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc_mir%2Ftransform%2Fensure_predecessors_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fensure_predecessors_cache.rs?ref=2b3145606827d1bd2b78004c6012fc060dee3d08", "patch": "@@ -0,0 +1,15 @@\n+use rustc::mir::Body;\n+use rustc::ty::TyCtxt;\n+use crate::transform::{MirPass, MirSource};\n+\n+pub struct EnsurePredecessorsCache;\n+\n+impl<'tcx> MirPass<'tcx> for EnsurePredecessorsCache {\n+    fn run_pass(&self, _: TyCtxt<'tcx>, _: MirSource<'tcx>, body: &mut Body<'tcx>) {\n+        // predecessors is lazily calculated. We want to ensure that the cache is properly filled\n+        // before the next stages of compilation, since thise following stages will only be allowed\n+        // to read the cache and not generate it. If the cache is already up to date, this line is\n+        // a nop.\n+        let _predecessors = body.predecessors();\n+    }\n+}"}, {"sha": "096fe82ae99529603bce63ffd175b15fe45c2ef5", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b3145606827d1bd2b78004c6012fc060dee3d08/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=2b3145606827d1bd2b78004c6012fc060dee3d08", "patch": "@@ -20,6 +20,7 @@ pub mod check_unsafety;\n pub mod simplify_branches;\n pub mod simplify_try;\n pub mod simplify;\n+pub mod ensure_predecessors_cache;\n pub mod erase_regions;\n pub mod no_landing_pads;\n pub mod rustc_peek;\n@@ -313,6 +314,7 @@ fn run_optimization_passes<'tcx>(\n         &simplify::SimplifyLocals,\n \n         &add_call_guards::CriticalCallEdges,\n+        &ensure_predecessors_cache::EnsurePredecessorsCache,\n         &dump_mir::Marker(\"PreCodegen\"),\n     ]);\n }"}]}