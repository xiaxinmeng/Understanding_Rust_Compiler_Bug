{"sha": "b1398a0de67ce647f490c04a69cab0f76c649f9e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxMzk4YTBkZTY3Y2U2NDdmNDkwYzA0YTY5Y2FiMGY3NmM2NDlmOWU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T21:32:16Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:45Z"}, "message": "Update item_children", "tree": {"sha": "c2c937febb13aa9399031e2a88edabbb63da91fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2c937febb13aa9399031e2a88edabbb63da91fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1398a0de67ce647f490c04a69cab0f76c649f9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1398a0de67ce647f490c04a69cab0f76c649f9e", "html_url": "https://github.com/rust-lang/rust/commit/b1398a0de67ce647f490c04a69cab0f76c649f9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1398a0de67ce647f490c04a69cab0f76c649f9e/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "529aed81dea8bd808a72fd7e0d06468b0dd673fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/529aed81dea8bd808a72fd7e0d06468b0dd673fe", "html_url": "https://github.com/rust-lang/rust/commit/529aed81dea8bd808a72fd7e0d06468b0dd673fe"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "4514121da91090c58485da8a872f959e61ac6b8d", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=b1398a0de67ce647f490c04a69cab0f76c649f9e", "patch": "@@ -784,7 +784,7 @@ rustc_queries! {\n             eval_always\n             desc { \"fetching what a crate is named\" }\n         }\n-        query item_children(_: DefId) -> Lrc<Vec<Export<hir::HirId>>> {}\n+        query item_children(_: DefId) -> &'tcx [Export<hir::HirId>] {}\n         query extern_mod_stmt_cnum(_: DefId) -> Option<CrateNum> {}\n \n         query get_lib_features(_: CrateNum) -> Lrc<LibFeatures> {"}, {"sha": "aea2c816b6a9d68cee276aeac6a65eba158cd024", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=b1398a0de67ce647f490c04a69cab0f76c649f9e", "patch": "@@ -223,9 +223,9 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     }\n     crate_name => { cdata.name }\n     item_children => {\n-        let mut result = vec![];\n+        let mut result = SmallVec::<[_; 8]>::new();\n         cdata.each_child_of_item(def_id.index, |child| result.push(child), tcx.sess);\n-        Lrc::new(result)\n+        tcx.arena.alloc_slice(&result)\n     }\n     defined_lib_features => { Lrc::new(cdata.get_lib_features()) }\n     defined_lang_items => { Lrc::new(cdata.get_lang_items()) }"}, {"sha": "9d4b55526d00418dde25fa6f6980c2b92f605f87", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1398a0de67ce647f490c04a69cab0f76c649f9e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=b1398a0de67ce647f490c04a69cab0f76c649f9e", "patch": "@@ -4434,7 +4434,7 @@ pub fn path_to_def(tcx: TyCtxt<'_, '_, '_>, path: &[Symbol]) -> Option<DefId> {\n         loop {\n             let segment = path_it.next()?;\n \n-            for item in mem::replace(&mut items, Lrc::new(vec![])).iter() {\n+            for item in mem::replace(&mut items, &[]).iter() {\n                 if item.ident.name == *segment {\n                     if path_it.peek().is_none() {\n                         return match item.res {"}]}