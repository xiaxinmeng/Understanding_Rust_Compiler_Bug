{"sha": "2765f426da76fd7b7b9bd377de7f92dd181387c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NjVmNDI2ZGE3NmZkN2I3YjliZDM3N2RlN2Y5MmRkMTgxMzg3YzA=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T15:29:26Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-04-14T15:57:14Z"}, "message": "cleanup `is_expr_delims_necessary`", "tree": {"sha": "b422d99794947016dc565a6f651d8635fb4231f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b422d99794947016dc565a6f651d8635fb4231f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2765f426da76fd7b7b9bd377de7f92dd181387c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2765f426da76fd7b7b9bd377de7f92dd181387c0", "html_url": "https://github.com/rust-lang/rust/commit/2765f426da76fd7b7b9bd377de7f92dd181387c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2765f426da76fd7b7b9bd377de7f92dd181387c0/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba72b15666b2491415aec703a02c2364fe5e2790", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba72b15666b2491415aec703a02c2364fe5e2790", "html_url": "https://github.com/rust-lang/rust/commit/ba72b15666b2491415aec703a02c2364fe5e2790"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3e1e9cc70aa11216e1013868885363e24a112c6b", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2765f426da76fd7b7b9bd377de7f92dd181387c0/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2765f426da76fd7b7b9bd377de7f92dd181387c0/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=2765f426da76fd7b7b9bd377de7f92dd181387c0", "patch": "@@ -384,7 +384,7 @@ trait UnusedDelimLint {\n     fn is_expr_delims_necessary(inner: &ast::Expr, followed_by_block: bool) -> bool {\n         followed_by_block\n             && match inner.kind {\n-                ast::ExprKind::Ret(_) | ast::ExprKind::Break(..) => true,\n+                ExprKind::Ret(_) | ExprKind::Break(..) => true,\n                 _ => parser::contains_exterior_struct_lit(&inner),\n             }\n     }"}]}