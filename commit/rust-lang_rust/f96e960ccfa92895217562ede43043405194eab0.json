{"sha": "f96e960ccfa92895217562ede43043405194eab0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NmU5NjBjY2ZhOTI4OTUyMTc1NjJlZGU0MzA0MzQwNTE5NGVhYjA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-11-12T19:48:37Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-02-20T21:53:46Z"}, "message": "Access the session directly from DepContext.", "tree": {"sha": "04e883ddf732fbdcc85c0f754d4bf617225faa5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04e883ddf732fbdcc85c0f754d4bf617225faa5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f96e960ccfa92895217562ede43043405194eab0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f96e960ccfa92895217562ede43043405194eab0", "html_url": "https://github.com/rust-lang/rust/commit/f96e960ccfa92895217562ede43043405194eab0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f96e960ccfa92895217562ede43043405194eab0/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83b30a639d5abd1270ade35d9bd92271f5a5ba18", "url": "https://api.github.com/repos/rust-lang/rust/commits/83b30a639d5abd1270ade35d9bd92271f5a5ba18", "html_url": "https://github.com/rust-lang/rust/commit/83b30a639d5abd1270ade35d9bd92271f5a5ba18"}], "stats": {"total": 61, "additions": 21, "deletions": 40}, "files": [{"sha": "4f16bf6ca3ffac11484e7018d0c37988d626d793", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -4203,6 +4203,7 @@ dependencies = [\n  \"rustc_index\",\n  \"rustc_macros\",\n  \"rustc_serialize\",\n+ \"rustc_session\",\n  \"rustc_span\",\n  \"smallvec 1.6.1\",\n  \"tracing\","}, {"sha": "c688b23be1d02c74a8132e6e40b55503123692e2", "filename": "compiler/rustc_middle/src/dep_graph/mod.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fmod.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -2,6 +2,7 @@ use crate::ich::StableHashingContext;\n use crate::ty::{self, TyCtxt};\n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::sync::Lock;\n+use rustc_session::Session;\n \n #[macro_use]\n mod dep_node;\n@@ -101,20 +102,18 @@ impl<'tcx> DepContext for TyCtxt<'tcx> {\n         TyCtxt::create_stable_hashing_context(*self)\n     }\n \n-    fn debug_dep_tasks(&self) -> bool {\n-        self.sess.opts.debugging_opts.dep_tasks\n-    }\n-    fn debug_dep_node(&self) -> bool {\n-        self.sess.opts.debugging_opts.incremental_info\n-            || self.sess.opts.debugging_opts.query_dep_graph\n-    }\n-\n     #[inline]\n     fn dep_graph(&self) -> &DepGraph {\n         &self.dep_graph\n     }\n \n+    #[inline(always)]\n     fn profiler(&self) -> &SelfProfilerRef {\n         &self.prof\n     }\n+\n+    #[inline(always)]\n+    fn sess(&self) -> &Session {\n+        self.sess\n+    }\n }"}, {"sha": "100e9c5ceb034f496fe3e57a94881fce1653c276", "filename": "compiler/rustc_query_impl/src/plumbing.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fplumbing.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -47,13 +47,6 @@ impl HasDepContext for QueryCtxt<'tcx> {\n impl QueryContext for QueryCtxt<'tcx> {\n     type Query = Query<'tcx>;\n \n-    fn incremental_verify_ich(&self) -> bool {\n-        self.sess.opts.debugging_opts.incremental_verify_ich\n-    }\n-    fn verbose(&self) -> bool {\n-        self.sess.verbose()\n-    }\n-\n     fn def_path_str(&self, def_id: DefId) -> String {\n         self.tcx.def_path_str(def_id)\n     }\n@@ -132,14 +125,6 @@ impl QueryContext for QueryCtxt<'tcx> {\n         (cb.force_from_dep_node)(*self, dep_node)\n     }\n \n-    fn has_errors_or_delayed_span_bugs(&self) -> bool {\n-        self.sess.has_errors_or_delayed_span_bugs()\n-    }\n-\n-    fn diagnostic(&self) -> &rustc_errors::Handler {\n-        self.sess.diagnostic()\n-    }\n-\n     // Interactions with on_disk_cache\n     fn load_diagnostics(&self, prev_dep_node_index: SerializedDepNodeIndex) -> Vec<Diagnostic> {\n         self.on_disk_cache"}, {"sha": "7d3357f8fa2eff274b375bdbe3d426a0dc94bb33", "filename": "compiler/rustc_query_system/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2FCargo.toml?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -16,6 +16,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n+rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }\n parking_lot = \"0.11\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }"}, {"sha": "f55e2f777a26a7be9c7b7a6abd04d2792f1898db", "filename": "compiler/rustc_query_system/src/dep_graph/dep_node.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fdep_node.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -87,7 +87,10 @@ impl<K: DepKind> DepNode<K> {\n \n         #[cfg(debug_assertions)]\n         {\n-            if !kind.can_reconstruct_query_key() && tcx.debug_dep_node() {\n+            if !kind.can_reconstruct_query_key()\n+                && (tcx.sess().opts.debugging_opts.incremental_info\n+                    || tcx.sess().opts.debugging_opts.query_dep_graph)\n+            {\n                 tcx.dep_graph().register_dep_node_debug_str(dep_node, || arg.to_debug_str(tcx));\n             }\n         }"}, {"sha": "0f25572170f53dae1d539a43fcb26662d17862fa", "filename": "compiler/rustc_query_system/src/dep_graph/graph.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fgraph.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -280,7 +280,7 @@ impl<K: DepKind> DepGraph<K> {\n             let mut hcx = dcx.create_stable_hashing_context();\n             let current_fingerprint = hash_result(&mut hcx, &result);\n \n-            let print_status = cfg!(debug_assertions) && dcx.debug_dep_tasks();\n+            let print_status = cfg!(debug_assertions) && dcx.sess().opts.debugging_opts.dep_tasks;\n \n             // Intern the new `DepNode`.\n             let dep_node_index = if let Some(prev_index) = data.previous.node_to_index_opt(&key) {\n@@ -731,7 +731,7 @@ impl<K: DepKind> DepGraph<K> {\n                                 return None;\n                             }\n                             None => {\n-                                if !tcx.has_errors_or_delayed_span_bugs() {\n+                                if !tcx.dep_context().sess().has_errors_or_delayed_span_bugs() {\n                                     panic!(\n                                         \"try_mark_previous_green() - Forcing the DepNode \\\n                                           should have set its color\"\n@@ -835,7 +835,7 @@ impl<K: DepKind> DepGraph<K> {\n             // Promote the previous diagnostics to the current session.\n             tcx.store_diagnostics(dep_node_index, diagnostics.clone().into());\n \n-            let handle = tcx.diagnostic();\n+            let handle = tcx.dep_context().sess().diagnostic();\n \n             for diagnostic in diagnostics {\n                 handle.emit_diagnostic(&diagnostic);"}, {"sha": "e8fb71be3e08ffcb25c72829c7180b5f840fbadd", "filename": "compiler/rustc_query_system/src/dep_graph/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fdep_graph%2Fmod.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -13,6 +13,7 @@ pub use serialized::{SerializedDepGraph, SerializedDepNodeIndex};\n \n use rustc_data_structures::profiling::SelfProfilerRef;\n use rustc_data_structures::sync::Lock;\n+use rustc_session::Session;\n \n use std::fmt;\n use std::hash::Hash;\n@@ -24,16 +25,16 @@ pub trait DepContext: Copy {\n     /// Create a hashing context for hashing new results.\n     fn create_stable_hashing_context(&self) -> Self::StableHashingContext;\n \n-    fn debug_dep_tasks(&self) -> bool;\n-    fn debug_dep_node(&self) -> bool;\n-\n     /// Access the DepGraph.\n     fn dep_graph(&self) -> &DepGraph<Self::DepKind>;\n \n     fn register_reused_dep_node(&self, dep_node: &DepNode<Self::DepKind>);\n \n     /// Access the profiler.\n     fn profiler(&self) -> &SelfProfilerRef;\n+\n+    /// Access the compiler session.\n+    fn sess(&self) -> &Session;\n }\n \n pub trait HasDepContext: Copy {"}, {"sha": "bc5ad2cc3852761edadca57c22aade0298d0181a", "filename": "compiler/rustc_query_system/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fmod.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -26,9 +26,6 @@ use rustc_span::def_id::DefId;\n pub trait QueryContext: HasDepContext {\n     type Query: Clone + HashStable<Self::StableHashingContext>;\n \n-    fn incremental_verify_ich(&self) -> bool;\n-    fn verbose(&self) -> bool;\n-\n     /// Get string representation from DefPath.\n     fn def_path_str(&self, def_id: DefId) -> String;\n \n@@ -43,12 +40,6 @@ pub trait QueryContext: HasDepContext {\n     /// Try to force a dep node to execute and see if it's green.\n     fn try_force_from_dep_node(&self, dep_node: &DepNode<Self::DepKind>) -> bool;\n \n-    /// Return whether the current session is tainted by errors.\n-    fn has_errors_or_delayed_span_bugs(&self) -> bool;\n-\n-    /// Return the diagnostic handler.\n-    fn diagnostic(&self) -> &rustc_errors::Handler;\n-\n     /// Load diagnostics associated to the node in the previous session.\n     fn load_diagnostics(&self, prev_dep_node_index: SerializedDepNodeIndex) -> Vec<Diagnostic>;\n "}, {"sha": "fdc73dcc5408e4e72569890848f32f1ebce97cbb", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f96e960ccfa92895217562ede43043405194eab0/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=f96e960ccfa92895217562ede43043405194eab0", "patch": "@@ -550,7 +550,7 @@ where\n \n     // If `-Zincremental-verify-ich` is specified, re-hash results from\n     // the cache and make sure that they have the expected fingerprint.\n-    if unlikely!(tcx.incremental_verify_ich()) {\n+    if unlikely!(tcx.dep_context().sess().opts.debugging_opts.incremental_verify_ich) {\n         incremental_verify_ich(*tcx.dep_context(), &result, dep_node, dep_node_index, query);\n     }\n "}]}