{"sha": "0358f5fdebb7f462e72aaf77eea8c842709127fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNThmNWZkZWJiN2Y0NjJlNzJhYWY3N2VlYThjODQyNzA5MTI3ZmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-14T10:13:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-14T10:29:43Z"}, "message": "Use lang-items to resolve future trait", "tree": {"sha": "17b58eacb9a6fbad911e4e62815d066a139782b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17b58eacb9a6fbad911e4e62815d066a139782b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0358f5fdebb7f462e72aaf77eea8c842709127fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0358f5fdebb7f462e72aaf77eea8c842709127fc", "html_url": "https://github.com/rust-lang/rust/commit/0358f5fdebb7f462e72aaf77eea8c842709127fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0358f5fdebb7f462e72aaf77eea8c842709127fc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aedff7cdcfb2340a3a23b540b50cadc94a367428", "url": "https://api.github.com/repos/rust-lang/rust/commits/aedff7cdcfb2340a3a23b540b50cadc94a367428", "html_url": "https://github.com/rust-lang/rust/commit/aedff7cdcfb2340a3a23b540b50cadc94a367428"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "bd5ef14663496487a374fa9723b1e9eaca8119d9", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0358f5fdebb7f462e72aaf77eea8c842709127fc/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0358f5fdebb7f462e72aaf77eea8c842709127fc/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=0358f5fdebb7f462e72aaf77eea8c842709127fc", "patch": "@@ -15,7 +15,6 @@ use hir_def::{\n     },\n     expr::{ExprId, PatId},\n     nameres::ModuleSource,\n-    path::path,\n     resolver::{self, resolver_for_scope, HasResolver, Resolver, TypeNs, ValueNs},\n     AssocItemId, DefWithBodyId,\n };\n@@ -399,20 +398,20 @@ impl SourceAnalyzer {\n     /// Checks that particular type `ty` implements `std::future::Future`.\n     /// This function is used in `.await` syntax completion.\n     pub fn impls_future(&self, db: &impl HirDatabase, ty: Type) -> bool {\n-        let std_future_path = path![std::future::Future];\n-\n-        let std_future_trait = match self.resolver.resolve_known_trait(db, &std_future_path) {\n-            Some(it) => it.into(),\n-            _ => return false,\n-        };\n-\n         let krate = match self.resolver.krate() {\n             Some(krate) => krate,\n-            _ => return false,\n+            None => return false,\n+        };\n+\n+        let std_future_trait =\n+            db.lang_item(krate, \"future_trait\".into()).and_then(|it| it.as_trait());\n+        let std_future_trait = match std_future_trait {\n+            Some(it) => it,\n+            None => return false,\n         };\n \n         let canonical_ty = Canonical { value: ty.ty.value, num_vars: 0 };\n-        implements_trait(&canonical_ty, db, &self.resolver, krate.into(), std_future_trait)\n+        implements_trait(&canonical_ty, db, &self.resolver, krate, std_future_trait)\n     }\n \n     pub fn expand("}, {"sha": "fe02e36b3542cc06666bdc66794284233d7be47a", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0358f5fdebb7f462e72aaf77eea8c842709127fc/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0358f5fdebb7f462e72aaf77eea8c842709127fc/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=0358f5fdebb7f462e72aaf77eea8c842709127fc", "patch": "@@ -525,6 +525,7 @@ mod tests {\n \n             //- /std/lib.rs\n             pub mod future {\n+                #[lang = \"future_trait\"]\n                 pub trait Future {}\n             }\n             \"###, CompletionKind::Keyword),"}]}