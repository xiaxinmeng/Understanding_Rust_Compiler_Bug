{"sha": "47380768e7debc2ee6b66e491733b89534e80988", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MzgwNzY4ZTdkZWJjMmVlNmI2NmU0OTE3MzNiODk1MzRlODA5ODg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-07-06T07:34:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-06T07:34:51Z"}, "message": "Auto merge of #34546 - jseyfried:cfg_attr_path, r=nrc\n\nSupport `cfg_attr` on `path` attributes\n\nFixes #25544.\nThis is technically a [breaking-change]. For example, the following would break:\n```rust\nmod foo; // Suppose `foo.rs` existed in the appropriate location\n```", "tree": {"sha": "5d8c6f6facd508b34f15539dd1d9e0d18f055adc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d8c6f6facd508b34f15539dd1d9e0d18f055adc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47380768e7debc2ee6b66e491733b89534e80988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47380768e7debc2ee6b66e491733b89534e80988", "html_url": "https://github.com/rust-lang/rust/commit/47380768e7debc2ee6b66e491733b89534e80988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47380768e7debc2ee6b66e491733b89534e80988/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e5e3ab43b02817e22a47a9678ee39ad4c6c96d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e5e3ab43b02817e22a47a9678ee39ad4c6c96d", "html_url": "https://github.com/rust-lang/rust/commit/d1e5e3ab43b02817e22a47a9678ee39ad4c6c96d"}, {"sha": "ba59d42f24e68cae82167372d96e065dd94f36bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba59d42f24e68cae82167372d96e065dd94f36bc", "html_url": "https://github.com/rust-lang/rust/commit/ba59d42f24e68cae82167372d96e065dd94f36bc"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "ff75149f518abd8c1f16c65519abdb072bffb924", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47380768e7debc2ee6b66e491733b89534e80988/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47380768e7debc2ee6b66e491733b89534e80988/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=47380768e7debc2ee6b66e491733b89534e80988", "patch": "@@ -33,7 +33,7 @@ impl<'a> StripUnconfigured<'a> {\n         if self.in_cfg(node.attrs()) { Some(node) } else { None }\n     }\n \n-    fn process_cfg_attrs<T: HasAttrs>(&mut self, node: T) -> T {\n+    pub fn process_cfg_attrs<T: HasAttrs>(&mut self, node: T) -> T {\n         node.map_attrs(|attrs| {\n             attrs.into_iter().filter_map(|attr| self.process_cfg_attr(attr)).collect()\n         })"}, {"sha": "a06270bb7727a4ac3c5927c0afdbbe25f55750e8", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/47380768e7debc2ee6b66e491733b89534e80988/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47380768e7debc2ee6b66e491733b89534e80988/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=47380768e7debc2ee6b66e491733b89534e80988", "patch": "@@ -5296,15 +5296,22 @@ impl<'a> Parser<'a> {\n \n     /// Parse a `mod <foo> { ... }` or `mod <foo>;` item\n     fn parse_item_mod(&mut self, outer_attrs: &[Attribute]) -> PResult<'a, ItemInfo> {\n+        let outer_attrs = ::config::StripUnconfigured {\n+            config: &self.cfg,\n+            sess: self.sess,\n+            should_test: false, // irrelevant\n+            features: None, // don't perform gated feature checking\n+        }.process_cfg_attrs(outer_attrs.to_owned());\n+\n         let id_span = self.span;\n         let id = self.parse_ident()?;\n         if self.check(&token::Semi) {\n             self.bump();\n             // This mod is in an external file. Let's go get it!\n-            let (m, attrs) = self.eval_src_mod(id, outer_attrs, id_span)?;\n+            let (m, attrs) = self.eval_src_mod(id, &outer_attrs, id_span)?;\n             Ok((id, m, Some(attrs)))\n         } else {\n-            self.push_mod_path(id, outer_attrs);\n+            self.push_mod_path(id, &outer_attrs);\n             self.expect(&token::OpenDelim(token::Brace))?;\n             let mod_inner_lo = self.span.lo;\n             let attrs = self.parse_inner_attributes()?;"}, {"sha": "502768cc44e41c8070a5ac43dcc9c04275477058", "filename": "src/test/compile-fail/cfg_attr_path.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47380768e7debc2ee6b66e491733b89534e80988/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47380768e7debc2ee6b66e491733b89534e80988/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcfg_attr_path.rs?ref=47380768e7debc2ee6b66e491733b89534e80988", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[cfg_attr(all(), path = \"nonexistent_file.rs\")] mod foo;\n+//~^ ERROR nonexistent_file.rs"}]}