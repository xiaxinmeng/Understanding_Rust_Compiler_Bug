{"sha": "6cdfdd02f65da9d11742e15cd3d1176bb2ab3858", "node_id": "C_kwDOAAsO6NoAKDZjZGZkZDAyZjY1ZGE5ZDExNzQyZTE1Y2QzZDExNzZiYjJhYjM4NTg", "commit": {"author": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-08-24T22:52:46Z"}, "committer": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-08-25T17:06:45Z"}, "message": "adjust to new error value", "tree": {"sha": "7ec4c601855b41f1dd14aabce1c6fb3bf5a9429e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ec4c601855b41f1dd14aabce1c6fb3bf5a9429e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858", "html_url": "https://github.com/rust-lang/rust/commit/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858/comments", "author": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "30c750665517756484b0154b1b33a1256e614e6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/30c750665517756484b0154b1b33a1256e614e6b", "html_url": "https://github.com/rust-lang/rust/commit/30c750665517756484b0154b1b33a1256e614e6b"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "3a2875e5d27d56b37c9f538d97236382d138e052", "filename": "compiler/rustc_codegen_cranelift/src/base.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cdfdd02f65da9d11742e15cd3d1176bb2ab3858/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fbase.rs?ref=6cdfdd02f65da9d11742e15cd3d1176bb2ab3858", "patch": "@@ -925,8 +925,11 @@ pub(crate) fn codegen_panic_inner<'tcx>(\n     args: &[Value],\n     span: Span,\n ) {\n-    let def_id =\n-        fx.tcx.lang_items().require(lang_item).unwrap_or_else(|s| fx.tcx.sess.span_fatal(span, &s));\n+    let def_id = fx\n+        .tcx\n+        .lang_items()\n+        .require(lang_item)\n+        .unwrap_or_else(|e| fx.tcx.sess.span_fatal(span, e.to_string()));\n \n     let instance = Instance::mono(fx.tcx, def_id).polymorphize(fx.tcx);\n     let symbol_name = fx.tcx.symbol_name(instance).name;"}]}