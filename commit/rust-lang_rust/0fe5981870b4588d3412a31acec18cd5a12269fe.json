{"sha": "0fe5981870b4588d3412a31acec18cd5a12269fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZTU5ODE4NzBiNDU4OGQzNDEyYTMxYWNlYzE4Y2Q1YTEyMjY5ZmU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-10-28T16:50:00Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-10-29T06:50:35Z"}, "message": "New lint for statement with no effect", "tree": {"sha": "144ba436a42f37fe04f05366f24cc4bcd2b8bae4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/144ba436a42f37fe04f05366f24cc4bcd2b8bae4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fe5981870b4588d3412a31acec18cd5a12269fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe5981870b4588d3412a31acec18cd5a12269fe", "html_url": "https://github.com/rust-lang/rust/commit/0fe5981870b4588d3412a31acec18cd5a12269fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fe5981870b4588d3412a31acec18cd5a12269fe/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aee42f70f3e5d5b670bcc8c0e482601e19cda547", "url": "https://api.github.com/repos/rust-lang/rust/commits/aee42f70f3e5d5b670bcc8c0e482601e19cda547", "html_url": "https://github.com/rust-lang/rust/commit/aee42f70f3e5d5b670bcc8c0e482601e19cda547"}], "stats": {"total": 108, "additions": 107, "deletions": 1}, "files": [{"sha": "29eb6750d1621b1f86e05ad55f4774bcffa93e0f", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -6,7 +6,7 @@ A collection of lints to catch common mistakes and improve your Rust code.\n [Jump to usage instructions](#usage)\n \n ##Lints\n-There are 69 lints included in this crate:\n+There are 70 lints included in this crate:\n \n name                                                                                                   | default | meaning\n -------------------------------------------------------------------------------------------------------|---------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@@ -46,6 +46,7 @@ name\n [needless_range_loop](https://github.com/Manishearth/rust-clippy/wiki#needless_range_loop)             | warn    | for-looping over a range of indices where an iterator over items would do\n [needless_return](https://github.com/Manishearth/rust-clippy/wiki#needless_return)                     | warn    | using a return statement like `return expr;` where an expression would suffice\n [needless_update](https://github.com/Manishearth/rust-clippy/wiki#needless_update)                     | warn    | using `{ ..base }` when there are no missing fields\n+[no_effect](https://github.com/Manishearth/rust-clippy/wiki#no_effect)                                 | warn    | statements with no effect\n [non_ascii_literal](https://github.com/Manishearth/rust-clippy/wiki#non_ascii_literal)                 | allow   | using any literal non-ASCII chars in a string literal; suggests using the \\\\u escape instead\n [nonsensical_open_options](https://github.com/Manishearth/rust-clippy/wiki#nonsensical_open_options)   | warn    | nonsensical combination of options for opening a file\n [option_unwrap_used](https://github.com/Manishearth/rust-clippy/wiki#option_unwrap_used)               | allow   | using `Option.unwrap()`, which should at least get a better message using `expect()`"}, {"sha": "60ab18566b8cc63964b539dffe783208615b1af3", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -52,6 +52,7 @@ pub mod zero_div_zero;\n pub mod open_options;\n pub mod needless_features;\n pub mod needless_update;\n+pub mod no_effect;\n \n mod reexport {\n     pub use syntax::ast::{Name, Ident, NodeId};\n@@ -98,6 +99,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box mutex_atomic::MutexAtomic);\n     reg.register_late_lint_pass(box needless_features::NeedlessFeaturesPass);\n     reg.register_late_lint_pass(box needless_update::NeedlessUpdatePass);\n+    reg.register_late_lint_pass(box no_effect::NoEffectPass);\n \n     reg.register_lint_group(\"clippy_pedantic\", vec![\n         methods::OPTION_UNWRAP_USED,\n@@ -159,6 +161,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         needless_features::UNSTABLE_AS_MUT_SLICE,\n         needless_features::UNSTABLE_AS_SLICE,\n         needless_update::NEEDLESS_UPDATE,\n+        no_effect::NO_EFFECT,\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n         precedence::PRECEDENCE,\n         ptr_arg::PTR_ARG,"}, {"sha": "82fcf92fd4c5bfed2c2f785aaec6ccf83398dbb1", "filename": "src/no_effect.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/src%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/src%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fno_effect.rs?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -0,0 +1,61 @@\n+use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::middle::def::{DefStruct, DefVariant};\n+use rustc_front::hir::{Expr, ExprCall, ExprLit, ExprPath, ExprStruct};\n+use rustc_front::hir::{Stmt, StmtSemi};\n+\n+use utils::in_macro;\n+use utils::span_lint;\n+\n+declare_lint! {\n+    pub NO_EFFECT,\n+    Warn,\n+    \"statements with no effect\"\n+}\n+\n+fn has_no_effect(cx: &LateContext, expr: &Expr) -> bool {\n+    if in_macro(cx, expr.span) {\n+        return false;\n+    }\n+    match expr.node {\n+        ExprLit(..) |\n+        ExprPath(..) => true,\n+        ExprStruct(_, ref fields, ref base) => {\n+            fields.iter().all(|field| has_no_effect(cx, &field.expr)) &&\n+            match *base {\n+                Some(ref base) => has_no_effect(cx, base),\n+                None => true,\n+            }\n+        }\n+        ExprCall(ref callee, ref args) => {\n+            let def = cx.tcx.def_map.borrow().get(&callee.id).map(|d| d.full_def());\n+            match def {\n+                Some(DefStruct(..)) |\n+                Some(DefVariant(..)) => {\n+                    args.iter().all(|arg| has_no_effect(cx, arg))\n+                }\n+                _ => false,\n+            }\n+        }\n+        _ => false,\n+    }\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct NoEffectPass;\n+\n+impl LintPass for NoEffectPass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(NO_EFFECT)\n+    }\n+}\n+\n+impl LateLintPass for NoEffectPass {\n+    fn check_stmt(&mut self, cx: &LateContext, stmt: &Stmt) {\n+        if let StmtSemi(ref expr, _) = stmt.node {\n+            if has_no_effect(cx, expr) {\n+                span_lint(cx, NO_EFFECT, stmt.span,\n+                          \"statement with no effect\");\n+            }\n+        }\n+    }\n+}"}, {"sha": "55cfed76d5d3ef9290d6176637b45229849e13e4", "filename": "tests/compile-fail/needless_update.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_update.rs?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -2,6 +2,7 @@\n #![plugin(clippy)]\n \n #![deny(needless_update)]\n+#![allow(no_effect)]\n \n struct S {\n     pub a: i32,"}, {"sha": "8da119eb16de9d8bc08b70d741e819cc629c8435", "filename": "tests/compile-fail/no_effect.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fno_effect.rs?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -0,0 +1,39 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(no_effect)]\n+#![allow(dead_code)]\n+#![allow(path_statements)]\n+\n+struct Unit;\n+struct Tuple(i32);\n+struct Struct {\n+    field: i32\n+}\n+enum Enum {\n+    TupleVariant(i32),\n+    StructVariant { field: i32 },\n+}\n+\n+fn get_number() -> i32 { 0 }\n+fn get_struct() -> Struct { Struct { field: 0 } }\n+\n+fn main() {\n+    let s = get_struct();\n+\n+    0; //~ERROR statement with no effect\n+    Unit; //~ERROR statement with no effect\n+    Tuple(0); //~ERROR statement with no effect\n+    Struct { field: 0 }; //~ERROR statement with no effect\n+    Struct { ..s }; //~ERROR statement with no effect\n+    Enum::TupleVariant(0); //~ERROR statement with no effect\n+    Enum::StructVariant { field: 0 }; //~ERROR statement with no effect\n+\n+    // Do not warn\n+    get_number();\n+    Tuple(get_number());\n+    Struct { field: get_number() };\n+    Struct { ..get_struct() };\n+    Enum::TupleVariant(get_number());\n+    Enum::StructVariant { field: get_number() };\n+}"}, {"sha": "1a28953ace11d6b87322e717d26078e66da8c290", "filename": "tests/compile-fail/unit_cmp.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Funit_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fe5981870b4588d3412a31acec18cd5a12269fe/tests%2Fcompile-fail%2Funit_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funit_cmp.rs?ref=0fe5981870b4588d3412a31acec18cd5a12269fe", "patch": "@@ -2,6 +2,7 @@\n #![plugin(clippy)]\n \n #![deny(unit_cmp)]\n+#![allow(no_effect)]\n \n #[derive(PartialEq)]\n pub struct ContainsUnit(()); // should be fine"}]}