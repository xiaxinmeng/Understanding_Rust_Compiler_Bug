{"sha": "bdf4fd3e82542cea1f9104cef7bd82839ed84213", "node_id": "C_kwDOAAsO6NoAKGJkZjRmZDNlODI1NDJjZWExZjkxMDRjZWY3YmQ4MjgzOWVkODQyMTM", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-01-13T11:54:51Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-02-15T20:34:48Z"}, "message": "Tests pass", "tree": {"sha": "743ab965a71a1de7c8011dc67cbb4e9cb038d612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/743ab965a71a1de7c8011dc67cbb4e9cb038d612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdf4fd3e82542cea1f9104cef7bd82839ed84213", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmPtQegACgkQTTgXC1ov\nwzTClg/7BLQCEiYtGa2ZYt4rIM34UYlmKs18HBmIxkXAE6cCTFfv332QfydxB6cn\nw1f7p3MBfomeUo0g4uK8BrW1cnfk1NolEledD2DvaA7xDnqhVyzu3u+do2btrYgN\nVwKUv1c43MUIKhpV9s2dKe8hx66eoQ6/MkusF1BJqz8TuooOCwA6ePLypzfv4uc5\nyfF6KBBi/6FRVYzA6T+F5Us6+fNWrq2auarTRvHAAmulZfSd4xFbmW9Na5O/15lS\nDModqMU9Rz+uJm1q5qZNCHUPGidi1wc2Lh03QGn8ZWVZNzLcST1ScLM/AeyS/++a\nALBRSyiIsV9nsAv1U2Wc/sJFJpjNtmXAI0fzJODAGvB9CST/Udl732rKVmqBdKpF\nMFQcJNsk1FvWCJOA9BXplMsGv2k58s9kHkN4UQwOgbyyxeH5Hd8OKmqzhK3fIldR\npei8FTOHwZ9EJ7fqHoQmeY9uvg51Lv/0erhaAW1w5TdSPiLP/qY6Fi0poZYVZJKo\nnPlMGdMYGfyMS1/xM9oeYB4Uq0u7g7PtZeQIvfUKg+RcvhmzisFnCSTo5N+tzt8T\nHLXrxk23eK9epB5Oa8XTQxvbrkJVLaVAKyF5iOQWRsIFKeErLFAf8Tkj3m2SOlZL\ndFJkt69p5CYuTItwWQ7bv7im/QwuGW9x/6Uo4PzU+83ulrww6UQ=\n=vGOE\n-----END PGP SIGNATURE-----", "payload": "tree 743ab965a71a1de7c8011dc67cbb4e9cb038d612\nparent 6c9983b936645629d8bf66d2aac9ba5e588f5fb7\nauthor blyxyas <blyxyas@gmail.com> 1673610891 +0100\ncommitter blyxyas <blyxyas@gmail.com> 1676493288 +0100\n\nTests pass\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdf4fd3e82542cea1f9104cef7bd82839ed84213", "html_url": "https://github.com/rust-lang/rust/commit/bdf4fd3e82542cea1f9104cef7bd82839ed84213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdf4fd3e82542cea1f9104cef7bd82839ed84213/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9983b936645629d8bf66d2aac9ba5e588f5fb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9983b936645629d8bf66d2aac9ba5e588f5fb7", "html_url": "https://github.com/rust-lang/rust/commit/6c9983b936645629d8bf66d2aac9ba5e588f5fb7"}], "stats": {"total": 32, "additions": 17, "deletions": 15}, "files": [{"sha": "e7f22f8d778cdf69ad427de8c3a64f6f56cd9589", "filename": "clippy_lints/src/functions/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdf4fd3e82542cea1f9104cef7bd82839ed84213/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdf4fd3e82542cea1f9104cef7bd82839ed84213/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmod.rs?ref=bdf4fd3e82542cea1f9104cef7bd82839ed84213", "patch": "@@ -344,7 +344,7 @@ declare_clippy_lint! {\n     /// Use instead:\n     /// ```rust\n     /// trait MyTrait {}\n-    /// fn foo<T: A>(a: A) {\n+    /// fn foo<T: MyTrait>(a: T) {\n     /// \t// [...]\n     /// }\n     /// ```"}, {"sha": "90e752211ff05b84973eae6c4bddfd094faaff7d", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=bdf4fd3e82542cea1f9104cef7bd82839ed84213", "patch": "@@ -1,5 +1,5 @@\n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:20:14\n+  --> $DIR/borrow_box.rs:24:14\n    |\n LL |     let foo: &Box<bool>;\n    |              ^^^^^^^^^^ help: try: `&bool`\n@@ -11,55 +11,55 @@ LL | #![deny(clippy::borrowed_box)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:24:10\n+  --> $DIR/borrow_box.rs:28:10\n    |\n LL |     foo: &'a Box<bool>,\n    |          ^^^^^^^^^^^^^ help: try: `&'a bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:28:17\n+  --> $DIR/borrow_box.rs:32:17\n    |\n LL |     fn test4(a: &Box<bool>);\n    |                 ^^^^^^^^^^ help: try: `&bool`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:94:25\n+  --> $DIR/borrow_box.rs:98:25\n    |\n LL | pub fn test14(_display: &Box<dyn Display>) {}\n    |                         ^^^^^^^^^^^^^^^^^ help: try: `&dyn Display`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:95:25\n+  --> $DIR/borrow_box.rs:99:25\n    |\n LL | pub fn test15(_display: &Box<dyn Display + Send>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:96:29\n+  --> $DIR/borrow_box.rs:100:29\n    |\n LL | pub fn test16<'a>(_display: &'a Box<dyn Display + 'a>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (dyn Display + 'a)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:98:25\n+  --> $DIR/borrow_box.rs:102:25\n    |\n LL | pub fn test17(_display: &Box<impl Display>) {}\n    |                         ^^^^^^^^^^^^^^^^^^ help: try: `&impl Display`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:99:25\n+  --> $DIR/borrow_box.rs:103:25\n    |\n LL | pub fn test18(_display: &Box<impl Display + Send>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(impl Display + Send)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:100:29\n+  --> $DIR/borrow_box.rs:104:29\n    |\n LL | pub fn test19<'a>(_display: &'a Box<impl Display + 'a>) {}\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a (impl Display + 'a)`\n \n error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n-  --> $DIR/borrow_box.rs:105:25\n+  --> $DIR/borrow_box.rs:109:25\n    |\n LL | pub fn test20(_display: &Box<(dyn Display + Send)>) {}\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&(dyn Display + Send)`"}, {"sha": "07560101a4167cb2047d8ad33a91991cbe773e7f", "filename": "tests/ui/impl_trait_in_params.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fimpl_trait_in_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fimpl_trait_in_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl_trait_in_params.rs?ref=bdf4fd3e82542cea1f9104cef7bd82839ed84213", "patch": "@@ -2,14 +2,16 @@\n #![warn(clippy::impl_trait_in_params)]\n \n pub trait Trait {}\n+pub trait AnotherTrait<T> {}\n \n // Should warn\n pub fn a(_: impl Trait) {}\n pub fn c<C: Trait>(_: C, _: impl Trait) {}\n+fn d(_: impl AnotherTrait<u32>) {}\n \n // Shouldn't warn\n \n pub fn b<B: Trait>(_: B) {}\n-fn d<D: Trait>(_: D, _: impl Trait) {}\n+fn e<T: AnotherTrait<u32>>(_: T) {}\n \n fn main() {}"}, {"sha": "a43986017febddb0f653420400dbb4da118dff42", "filename": "tests/ui/impl_trait_in_params.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fimpl_trait_in_params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdf4fd3e82542cea1f9104cef7bd82839ed84213/tests%2Fui%2Fimpl_trait_in_params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimpl_trait_in_params.stderr?ref=bdf4fd3e82542cea1f9104cef7bd82839ed84213", "patch": "@@ -1,17 +1,17 @@\n error: 'impl Trait' in the function's parameters\n-  --> $DIR/impl_trait_param.rs:7:13\n+  --> $DIR/impl_trait_in_params.rs:8:13\n    |\n LL | pub fn a(_: impl Trait) {}\n    |             ^^^^^^^^^^\n    |\n-   = note: `-D clippy::impl-trait-param` implied by `-D warnings`\n+   = note: `-D clippy::impl-trait-in-params` implied by `-D warnings`\n help: create a generic type here and replace that 'impl Trait' with `T`\n    |\n LL | pub fn a<T: Trait>(_: impl Trait) {}\n    |         ++++++++++\n \n error: 'impl Trait' in the function's parameters\n-  --> $DIR/impl_trait_param.rs:8:29\n+  --> $DIR/impl_trait_in_params.rs:9:29\n    |\n LL | pub fn c<C: Trait>(_: C, _: impl Trait) {}\n    |                             ^^^^^^^^^^"}]}