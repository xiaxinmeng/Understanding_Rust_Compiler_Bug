{"sha": "371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MWZmYTQ3MTBlNGJhYmZlMGY4N2Q0OTI5ZjE1YThmMGNiOTNlYmI=", "commit": {"author": {"name": "David Wickes", "email": "dave.wickes@gmail.com", "date": "2017-02-26T21:44:05Z"}, "committer": {"name": "David Wickes", "email": "dave.wickes@gmail.com", "date": "2017-02-26T22:28:53Z"}, "message": "Small reformat", "tree": {"sha": "7fbaca86c7b3f4e784676ba41ff01d9b74f44418", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fbaca86c7b3f4e784676ba41ff01d9b74f44418"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "html_url": "https://github.com/rust-lang/rust/commit/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb/comments", "author": {"login": "gypsydave5", "id": 5469544, "node_id": "MDQ6VXNlcjU0Njk1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5469544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gypsydave5", "html_url": "https://github.com/gypsydave5", "followers_url": "https://api.github.com/users/gypsydave5/followers", "following_url": "https://api.github.com/users/gypsydave5/following{/other_user}", "gists_url": "https://api.github.com/users/gypsydave5/gists{/gist_id}", "starred_url": "https://api.github.com/users/gypsydave5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gypsydave5/subscriptions", "organizations_url": "https://api.github.com/users/gypsydave5/orgs", "repos_url": "https://api.github.com/users/gypsydave5/repos", "events_url": "https://api.github.com/users/gypsydave5/events{/privacy}", "received_events_url": "https://api.github.com/users/gypsydave5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gypsydave5", "id": 5469544, "node_id": "MDQ6VXNlcjU0Njk1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5469544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gypsydave5", "html_url": "https://github.com/gypsydave5", "followers_url": "https://api.github.com/users/gypsydave5/followers", "following_url": "https://api.github.com/users/gypsydave5/following{/other_user}", "gists_url": "https://api.github.com/users/gypsydave5/gists{/gist_id}", "starred_url": "https://api.github.com/users/gypsydave5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gypsydave5/subscriptions", "organizations_url": "https://api.github.com/users/gypsydave5/orgs", "repos_url": "https://api.github.com/users/gypsydave5/repos", "events_url": "https://api.github.com/users/gypsydave5/events{/privacy}", "received_events_url": "https://api.github.com/users/gypsydave5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "094c8898e11525d85b184cfe223e17508424c675", "url": "https://api.github.com/repos/rust-lang/rust/commits/094c8898e11525d85b184cfe223e17508424c675", "html_url": "https://github.com/rust-lang/rust/commit/094c8898e11525d85b184cfe223e17508424c675"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "457c6749520f8706240aa4d5f96f3b4adf3ec411", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/371ffa4710e4babfe0f87d4929f15a8f0cb93ebb/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=371ffa4710e4babfe0f87d4929f15a8f0cb93ebb", "patch": "@@ -1240,11 +1240,11 @@ pub fn rewrite_associated_type(ident: ast::Ident,\n     let type_bounds_str = if let Some(ty_param_bounds) = ty_param_bounds_opt {\n         let bounds: &[_] = ty_param_bounds;\n         let bound_str = try_opt!(bounds.iter()\n-                                     .map(|ty_bound| {\n-            ty_bound.rewrite(context, Shape::legacy(context.config.max_width, indent))\n-        })\n-                                     .intersperse(Some(\" + \".to_string()))\n-                                     .collect::<Option<String>>());\n+            .map(|ty_bound| {\n+                ty_bound.rewrite(context, Shape::legacy(context.config.max_width, indent))\n+            })\n+            .intersperse(Some(\" + \".to_string()))\n+            .collect::<Option<String>>());\n         if bounds.len() > 0 {\n             format!(\": {}\", bound_str)\n         } else {"}]}