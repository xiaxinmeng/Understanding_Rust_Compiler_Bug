{"sha": "a84e2a0c91613e92ebf946d650b315aa2cd111a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NGUyYTBjOTE2MTNlOTJlYmY5NDZkNjUwYjMxNWFhMmNkMTExYTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-28T21:49:36Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-04-28T21:49:36Z"}, "message": "add test for const-ref-to-cross-crate-mutable-static", "tree": {"sha": "57b12db318138e77cecc9938927806a13f5c9778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57b12db318138e77cecc9938927806a13f5c9778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a84e2a0c91613e92ebf946d650b315aa2cd111a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a84e2a0c91613e92ebf946d650b315aa2cd111a1", "html_url": "https://github.com/rust-lang/rust/commit/a84e2a0c91613e92ebf946d650b315aa2cd111a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a84e2a0c91613e92ebf946d650b315aa2cd111a1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8ffa2182bc41f3511a214a8ae6dad85d9d60e79", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ffa2182bc41f3511a214a8ae6dad85d9d60e79", "html_url": "https://github.com/rust-lang/rust/commit/e8ffa2182bc41f3511a214a8ae6dad85d9d60e79"}], "stats": {"total": 115, "additions": 101, "deletions": 14}, "files": [{"sha": "c86b724ac9438bf85785e6d50409c71d13d1b556", "filename": "src/test/ui/consts/miri_unleashed/auxiliary/static_cross_crate.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fauxiliary%2Fstatic_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fauxiliary%2Fstatic_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fauxiliary%2Fstatic_cross_crate.rs?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -0,0 +1 @@\n+pub static mut ZERO: [u8; 1] = [0];"}, {"sha": "6b205a2f66d9ba5e273fffbc5095aabf20a2e7cd", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.rs?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -7,7 +7,8 @@\n use std::sync::atomic::AtomicUsize;\n use std::sync::atomic::Ordering;\n \n-// These tests only cause an error when *using* the const.\n+// These fail during CTFE (as they read a static), so they only cause an error\n+// when *using* the const.\n \n const MUTATE_INTERIOR_MUT: usize = {\n     static FOO: AtomicUsize = AtomicUsize::new(0);"}, {"sha": "acc3b637f58bccb31939b851db75bb248bfa2d6a", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static.stderr?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -1,47 +1,47 @@\n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:14:5\n+  --> $DIR/const_refers_to_static.rs:15:5\n    |\n LL |     FOO.fetch_add(1, Ordering::Relaxed)\n    |     ^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:14:5\n+  --> $DIR/const_refers_to_static.rs:15:5\n    |\n LL |     FOO.fetch_add(1, Ordering::Relaxed)\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:21:17\n+  --> $DIR/const_refers_to_static.rs:22:17\n    |\n LL |     unsafe { *(&FOO as *const _ as *const usize) }\n    |                 ^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:26:32\n+  --> $DIR/const_refers_to_static.rs:27:32\n    |\n LL | const READ_MUT: u32 = unsafe { MUTABLE };\n    |                                ^^^^^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static.rs:26:32\n+  --> $DIR/const_refers_to_static.rs:27:32\n    |\n LL | const READ_MUT: u32 = unsafe { MUTABLE };\n    |                                ^^^^^^^\n \n error[E0080]: erroneous constant used\n-  --> $DIR/const_refers_to_static.rs:31:5\n+  --> $DIR/const_refers_to_static.rs:32:5\n    |\n LL |     MUTATE_INTERIOR_MUT;\n    |     ^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n \n error[E0080]: erroneous constant used\n-  --> $DIR/const_refers_to_static.rs:33:5\n+  --> $DIR/const_refers_to_static.rs:34:5\n    |\n LL |     READ_INTERIOR_MUT;\n    |     ^^^^^^^^^^^^^^^^^ referenced constant has errors\n \n error[E0080]: erroneous constant used\n-  --> $DIR/const_refers_to_static.rs:35:5\n+  --> $DIR/const_refers_to_static.rs:36:5\n    |\n LL |     READ_MUT;\n    |     ^^^^^^^^ referenced constant has errors"}, {"sha": "553d90f1891cc38d49bc7044daf3de1fc76144e9", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static2.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.rs?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -6,16 +6,21 @@\n use std::sync::atomic::AtomicUsize;\n use std::sync::atomic::Ordering;\n \n-// These tests cause immediate error when *defining* the const.\n+// These only fail during validation (they do not use but just create a reference to a static),\n+// so they cause an immediate error when *defining* the const.\n \n const REF_INTERIOR_MUT: &usize = { //~ ERROR undefined behavior to use this value\n+//~| NOTE encountered a reference pointing to a static variable\n+//~| NOTE\n     static FOO: AtomicUsize = AtomicUsize::new(0);\n     unsafe { &*(&FOO as *const _ as *const usize) }\n     //~^ WARN skipping const checks\n };\n \n // ok some day perhaps\n const READ_IMMUT: &usize = { //~ ERROR it is undefined behavior to use this value\n+//~| NOTE encountered a reference pointing to a static variable\n+//~| NOTE\n     static FOO: usize = 0;\n     &FOO\n     //~^ WARN skipping const checks"}, {"sha": "33f4a42605ccecdaa60006319162cb4dbbc096b9", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static2.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static2.stderr?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -1,19 +1,21 @@\n warning: skipping const checks\n-  --> $DIR/const_refers_to_static2.rs:13:18\n+  --> $DIR/const_refers_to_static2.rs:16:18\n    |\n LL |     unsafe { &*(&FOO as *const _ as *const usize) }\n    |                  ^^^\n \n warning: skipping const checks\n-  --> $DIR/const_refers_to_static2.rs:20:6\n+  --> $DIR/const_refers_to_static2.rs:25:6\n    |\n LL |     &FOO\n    |      ^^^\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/const_refers_to_static2.rs:11:1\n+  --> $DIR/const_refers_to_static2.rs:12:1\n    |\n LL | / const REF_INTERIOR_MUT: &usize = {\n+LL | |\n+LL | |\n LL | |     static FOO: AtomicUsize = AtomicUsize::new(0);\n LL | |     unsafe { &*(&FOO as *const _ as *const usize) }\n LL | |\n@@ -23,9 +25,11 @@ LL | | };\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/const_refers_to_static2.rs:18:1\n+  --> $DIR/const_refers_to_static2.rs:21:1\n    |\n LL | / const READ_IMMUT: &usize = {\n+LL | |\n+LL | |\n LL | |     static FOO: usize = 0;\n LL | |     &FOO\n LL | |"}, {"sha": "cf277308c0895d1a7970ad78fc470657a55ff3a9", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static_cross_crate.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.rs?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -0,0 +1,35 @@\n+// compile-flags: -Zunleash-the-miri-inside-of-you\n+// aux-build:static_cross_crate.rs\n+#![allow(const_err)]\n+\n+#![feature(exclusive_range_pattern)]\n+#![feature(half_open_range_patterns)]\n+\n+extern crate static_cross_crate;\n+\n+// Sneaky: reference to a mutable static.\n+// Allowing this would be a disaster for pattern matching, we could violate exhaustiveness checking!\n+const SLICE_MUT: &[u8; 1] = { //~ ERROR undefined behavior to use this value\n+//~| NOTE encountered a reference pointing to a static variable\n+//~| NOTE\n+    unsafe { &static_cross_crate::ZERO }\n+    //~^ WARN skipping const checks\n+    //~| WARN skipping const checks\n+};\n+\n+pub fn test(x: &[u8; 1]) -> bool {\n+    match x {\n+        SLICE_MUT => true,\n+        //~^ ERROR could not evaluate constant pattern\n+        //~| ERROR could not evaluate constant pattern\n+        &[1..] => false,\n+    }\n+}\n+\n+fn main() {\n+    unsafe {\n+        static_cross_crate::ZERO[0] = 1;\n+    }\n+    // Now the pattern is not exhaustive any more!\n+    test(&[0]);\n+}"}, {"sha": "dfee007c740496c36a3c0448dc27e721294f0304", "filename": "src/test/ui/consts/miri_unleashed/const_refers_to_static_cross_crate.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a84e2a0c91613e92ebf946d650b315aa2cd111a1/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fconst_refers_to_static_cross_crate.stderr?ref=a84e2a0c91613e92ebf946d650b315aa2cd111a1", "patch": "@@ -0,0 +1,41 @@\n+warning: skipping const checks\n+  --> $DIR/const_refers_to_static_cross_crate.rs:15:15\n+   |\n+LL |     unsafe { &static_cross_crate::ZERO }\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: skipping const checks\n+  --> $DIR/const_refers_to_static_cross_crate.rs:15:15\n+   |\n+LL |     unsafe { &static_cross_crate::ZERO }\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/const_refers_to_static_cross_crate.rs:12:1\n+   |\n+LL | / const SLICE_MUT: &[u8; 1] = {\n+LL | |\n+LL | |\n+LL | |     unsafe { &static_cross_crate::ZERO }\n+LL | |\n+LL | |\n+LL | | };\n+   | |__^ type validation failed: encountered a reference pointing to a static variable\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/const_refers_to_static_cross_crate.rs:22:9\n+   |\n+LL |         SLICE_MUT => true,\n+   |         ^^^^^^^^^\n+\n+error: could not evaluate constant pattern\n+  --> $DIR/const_refers_to_static_cross_crate.rs:22:9\n+   |\n+LL |         SLICE_MUT => true,\n+   |         ^^^^^^^^^\n+\n+error: aborting due to 3 previous errors; 2 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0080`."}]}