{"sha": "099da13f531c84a7c69fbf5eed6a658bf64b531b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OWRhMTNmNTMxYzg0YTdjNjlmYmY1ZWVkNmE2NThiZjY0YjUzMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T11:58:01Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-20T11:58:01Z"}, "message": "Make some queries private\n\nConvention: we prefix private queries with `_` until salsa support\nreal visibility.", "tree": {"sha": "2c0d8ce777cc380223cfca91d408de96ea632b5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c0d8ce777cc380223cfca91d408de96ea632b5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/099da13f531c84a7c69fbf5eed6a658bf64b531b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/099da13f531c84a7c69fbf5eed6a658bf64b531b", "html_url": "https://github.com/rust-lang/rust/commit/099da13f531c84a7c69fbf5eed6a658bf64b531b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/099da13f531c84a7c69fbf5eed6a658bf64b531b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e683d7af1d752f2d7bc6e2ed4d6b85405bc84a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e683d7af1d752f2d7bc6e2ed4d6b85405bc84a8", "html_url": "https://github.com/rust-lang/rust/commit/4e683d7af1d752f2d7bc6e2ed4d6b85405bc84a8"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "8133b78753b5036e6df13175af2ec8fad986044a", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=099da13f531c84a7c69fbf5eed6a658bf64b531b", "patch": "@@ -85,10 +85,10 @@ salsa::database_storage! {\n         }\n         impl DescriptorDatabase {\n             fn module_tree() for ModuleTreeQuery;\n-            fn module_descriptor() for SubmodulesQuery;\n             fn module_scope() for ModuleScopeQuery;\n-            fn fn_syntax() for FnSyntaxQuery;\n             fn fn_scopes() for FnScopesQuery;\n+            fn _fn_syntax() for FnSyntaxQuery;\n+            fn _submodules() for SubmodulesQuery;\n         }\n     }\n }"}, {"sha": "e09deba0f3563f826f393e8d234e6d50422cb268", "filename": "crates/ra_analysis/src/descriptors/function/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Ffunction%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Ffunction%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Ffunction%2Fimp.rs?ref=099da13f531c84a7c69fbf5eed6a658bf64b531b", "patch": "@@ -15,7 +15,7 @@ pub(crate) fn fn_syntax(db: &impl DescriptorDatabase, fn_id: FnId) -> FnDefNode\n }\n \n pub(crate) fn fn_scopes(db: &impl DescriptorDatabase, fn_id: FnId) -> Arc<FnScopes> {\n-    let syntax = db.fn_syntax(fn_id);\n+    let syntax = db._fn_syntax(fn_id);\n     let res = FnScopes::new(syntax.borrowed());\n     Arc::new(res)\n }"}, {"sha": "f47ac49c5a622f143f1c104bb0d13ed5ae0e476c", "filename": "crates/ra_analysis/src/descriptors/mod.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs?ref=099da13f531c84a7c69fbf5eed6a658bf64b531b", "patch": "@@ -24,23 +24,24 @@ salsa::query_group! {\n             type ModuleTreeQuery;\n             use fn module::imp::module_tree;\n         }\n-        fn submodules(source: ModuleSource) -> Cancelable<Arc<Vec<module::imp::Submodule>>> {\n-            type SubmodulesQuery;\n-            use fn module::imp::submodules;\n-        }\n         fn module_scope(source_root_id: SourceRootId, module_id: ModuleId) -> Cancelable<Arc<ModuleScope>> {\n             type ModuleScopeQuery;\n             use fn module::imp::module_scope;\n         }\n-        fn fn_syntax(fn_id: FnId) -> FnDefNode {\n+        fn fn_scopes(fn_id: FnId) -> Arc<FnScopes> {\n+            type FnScopesQuery;\n+            use fn function::imp::fn_scopes;\n+        }\n+\n+        fn _fn_syntax(fn_id: FnId) -> FnDefNode {\n             type FnSyntaxQuery;\n             // Don't retain syntax trees in memory\n             storage volatile;\n             use fn function::imp::fn_syntax;\n         }\n-        fn fn_scopes(fn_id: FnId) -> Arc<FnScopes> {\n-            type FnScopesQuery;\n-            use fn function::imp::fn_scopes;\n+        fn _submodules(source: ModuleSource) -> Cancelable<Arc<Vec<module::imp::Submodule>>> {\n+            type SubmodulesQuery;\n+            use fn module::imp::submodules;\n         }\n     }\n }"}, {"sha": "ec0885938eaf854b4c2129a711e28d0832fb5cbd", "filename": "crates/ra_analysis/src/descriptors/module/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099da13f531c84a7c69fbf5eed6a658bf64b531b/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs?ref=099da13f531c84a7c69fbf5eed6a658bf64b531b", "patch": "@@ -155,7 +155,7 @@ fn build_subtree(\n         parent,\n         children: Vec::new(),\n     });\n-    for sub in db.submodules(source)?.iter() {\n+    for sub in db._submodules(source)?.iter() {\n         let link = tree.push_link(LinkData {\n             name: sub.name().clone(),\n             owner: id,"}]}