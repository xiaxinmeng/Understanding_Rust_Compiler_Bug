{"sha": "b27642973421c6c4e588b4a2d12c7120c4c21176", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNzY0Mjk3MzQyMWM2YzRlNTg4YjRhMmQxMmM3MTIwYzRjMjExNzY=", "commit": {"author": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2017-11-15T00:57:09Z"}, "committer": {"name": "Christopher Vittal", "email": "christopher.vittal@gmail.com", "date": "2017-11-15T20:46:01Z"}, "message": "Disallow all impl Trait within Fn trait sugar\n\nWe already disallowed them to be in the arg list, such as\nFn(impl Debug), but now we disallow Fn() -> impl Debug.\n\nAlso remove the ImplTraitContext argument from the function\nlower_parenthesized_parameter_data as it is now unused.\n\nComment out part of test run-pass/impl-trait/xcrate.rs that now fails.", "tree": {"sha": "2b9318fc577fcbeae0f10aba6ee41770d1141eab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9318fc577fcbeae0f10aba6ee41770d1141eab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b27642973421c6c4e588b4a2d12c7120c4c21176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b27642973421c6c4e588b4a2d12c7120c4c21176", "html_url": "https://github.com/rust-lang/rust/commit/b27642973421c6c4e588b4a2d12c7120c4c21176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b27642973421c6c4e588b4a2d12c7120c4c21176/comments", "author": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chrisvittal", "id": 15916123, "node_id": "MDQ6VXNlcjE1OTE2MTIz", "avatar_url": "https://avatars.githubusercontent.com/u/15916123?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chrisvittal", "html_url": "https://github.com/chrisvittal", "followers_url": "https://api.github.com/users/chrisvittal/followers", "following_url": "https://api.github.com/users/chrisvittal/following{/other_user}", "gists_url": "https://api.github.com/users/chrisvittal/gists{/gist_id}", "starred_url": "https://api.github.com/users/chrisvittal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chrisvittal/subscriptions", "organizations_url": "https://api.github.com/users/chrisvittal/orgs", "repos_url": "https://api.github.com/users/chrisvittal/repos", "events_url": "https://api.github.com/users/chrisvittal/events{/privacy}", "received_events_url": "https://api.github.com/users/chrisvittal/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b4372e3b1a4a25972e524687ba1c719bcaf243a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4372e3b1a4a25972e524687ba1c719bcaf243a", "html_url": "https://github.com/rust-lang/rust/commit/9b4372e3b1a4a25972e524687ba1c719bcaf243a"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "8c9d1a38e7088a72dc28b9a877d52351653215e6", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=b27642973421c6c4e588b4a2d12c7120c4c21176", "patch": "@@ -1018,7 +1018,7 @@ impl<'a> LoweringContext<'a> {\n                 }\n                 PathParameters::Parenthesized(ref data) => match parenthesized_generic_args {\n                     ParenthesizedGenericArgs::Ok =>\n-                        self.lower_parenthesized_parameter_data(data, itctx),\n+                        self.lower_parenthesized_parameter_data(data),\n                     ParenthesizedGenericArgs::Warn => {\n                         self.sess.buffer_lint(PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES,\n                                               CRATE_NODE_ID, data.span, msg.into());\n@@ -1063,8 +1063,7 @@ impl<'a> LoweringContext<'a> {\n     }\n \n     fn lower_parenthesized_parameter_data(&mut self,\n-                                          data: &ParenthesizedParameterData,\n-                                          itctx: ImplTraitContext)\n+                                          data: &ParenthesizedParameterData)\n                                           -> (hir::PathParameters, bool) {\n         const DISALLOWED: ImplTraitContext = ImplTraitContext::Disallowed;\n         let &ParenthesizedParameterData { ref inputs, ref output, span } = data;\n@@ -1080,7 +1079,7 @@ impl<'a> LoweringContext<'a> {\n             bindings: hir_vec![hir::TypeBinding {\n                 id: self.next_id().node_id,\n                 name: Symbol::intern(FN_OUTPUT_NAME),\n-                ty: output.as_ref().map(|ty| self.lower_ty(&ty, itctx))\n+                ty: output.as_ref().map(|ty| self.lower_ty(&ty, DISALLOWED))\n                                    .unwrap_or_else(|| mk_tup(self, hir::HirVec::new(), span)),\n                 span: output.as_ref().map_or(span, |ty| ty.span),\n             }],"}, {"sha": "e4f525a9826100b4f20c038fd16a0e824d49f7b4", "filename": "src/test/run-pass/impl-trait/auxiliary/xcrate.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fauxiliary%2Fxcrate.rs?ref=b27642973421c6c4e588b4a2d12c7120c4c21176", "patch": "@@ -10,9 +10,10 @@\n \n #![feature(conservative_impl_trait)]\n \n-pub fn fourway_add(a: i32) -> impl Fn(i32) -> impl Fn(i32) -> impl Fn(i32) -> i32 {\n-    move |b| move |c| move |d| a + b + c + d\n-}\n+// NOTE commented out due to issue #45994\n+//pub fn fourway_add(a: i32) -> impl Fn(i32) -> impl Fn(i32) -> impl Fn(i32) -> i32 {\n+//    move |b| move |c| move |d| a + b + c + d\n+//}\n \n fn some_internal_fn() -> u32 {\n     1"}, {"sha": "35ae185b3e1de285f751e32da653d6eaaab9522d", "filename": "src/test/run-pass/impl-trait/xcrate.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fxcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b27642973421c6c4e588b4a2d12c7120c4c21176/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fxcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fxcrate.rs?ref=b27642973421c6c4e588b4a2d12c7120c4c21176", "patch": "@@ -13,6 +13,7 @@\n extern crate xcrate;\n \n fn main() {\n-    assert_eq!(xcrate::fourway_add(1)(2)(3)(4), 10);\n+//  NOTE line below commeted out due to issue #45994\n+//  assert_eq!(xcrate::fourway_add(1)(2)(3)(4), 10);\n     xcrate::return_closure_accessing_internal_fn()();\n }"}]}