{"sha": "76cd8f05945e5edd8272e2e8c8f41ffd0182f403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2Y2Q4ZjA1OTQ1ZTVlZGQ4MjcyZTJlOGM4ZjQxZmZkMDE4MmY0MDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-03T14:14:31Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-03T14:14:31Z"}, "message": "improve wording", "tree": {"sha": "7f8f49408e6d0f1b1ab5c2fe84be65216e0592ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f8f49408e6d0f1b1ab5c2fe84be65216e0592ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76cd8f05945e5edd8272e2e8c8f41ffd0182f403", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76cd8f05945e5edd8272e2e8c8f41ffd0182f403", "html_url": "https://github.com/rust-lang/rust/commit/76cd8f05945e5edd8272e2e8c8f41ffd0182f403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76cd8f05945e5edd8272e2e8c8f41ffd0182f403/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b6ad7a960dd330e8c8401a598bd2f2ec6901100", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6ad7a960dd330e8c8401a598bd2f2ec6901100", "html_url": "https://github.com/rust-lang/rust/commit/7b6ad7a960dd330e8c8401a598bd2f2ec6901100"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "68d3f19cdeae431941594d48fd06a2f5d2dec96b", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/76cd8f05945e5edd8272e2e8c8f41ffd0182f403/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76cd8f05945e5edd8272e2e8c8f41ffd0182f403/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=76cd8f05945e5edd8272e2e8c8f41ffd0182f403", "patch": "@@ -806,9 +806,10 @@ const NOTIFIED: usize = 2;\n /// In other words, each [`Thread`] acts a bit like a spinlock that can be\n /// locked and unlocked using `park` and `unpark`.\n ///\n-/// Notice that it would be a valid (but inefficient) implementation to make both [`park`] and\n-/// [`unpark`] NOPs that return immediately.  Being unblocked does not imply\n-/// any synchronization with someone that unparked this thread, it could also be spurious.\n+/// Notice that being unblocked does not imply any synchronization with someone\n+/// that unparked this thread, it could also be spurious.\n+/// For example, it would be a valid, but inefficient, implementation to make both [`park`] and\n+/// [`unpark`] return immediately without doing anything.\n ///\n /// The API is typically used by acquiring a handle to the current thread,\n /// placing that handle in a shared data structure so that other threads can"}]}