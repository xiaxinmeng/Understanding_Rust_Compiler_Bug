{"sha": "2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZjA3YWY5OTZjYTRjZmU2NWJiMGQwMGI2YWExZDAxMzRlNTU3ZDI=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-09-16T17:39:08Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-09-16T18:29:29Z"}, "message": "Deprecate libnum in favor of rust-lang/num\n\nThis is part of the migration of crates into the Cargo ecosystem. There\nis now an external repository https://github.com/rust-lang/num for bignums.\n\nThe single use of libnum elsewhere in the repository is for a shootout\nbenchmark, which is being moved into the external crate.\n\nDue to deprecation, this is a:\n\n[breaking-change]", "tree": {"sha": "273aaaeee11c7724c5abd5680c9eba2d80a26c10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/273aaaeee11c7724c5abd5680c9eba2d80a26c10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "html_url": "https://github.com/rust-lang/rust/commit/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "946654a721d6fd5eeb91e93293cdc2cba83c78b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/946654a721d6fd5eeb91e93293cdc2cba83c78b9", "html_url": "https://github.com/rust-lang/rust/commit/946654a721d6fd5eeb91e93293cdc2cba83c78b9"}], "stats": {"total": 133, "additions": 3, "deletions": 130}, "files": [{"sha": "d1b115fc9138fd33578abb7537fa35375bacf00c", "filename": "src/etc/licenseck.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2/src%2Fetc%2Flicenseck.py", "raw_url": "https://github.com/rust-lang/rust/raw/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2/src%2Fetc%2Flicenseck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flicenseck.py?ref=2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "patch": "@@ -49,7 +49,6 @@\n     \"test/bench/shootout-mandelbrot.rs\", # BSD\n     \"test/bench/shootout-meteor.rs\", # BSD\n     \"test/bench/shootout-nbody.rs\", # BSD\n-    \"test/bench/shootout-pidigits.rs\", # BSD\n     \"test/bench/shootout-regex-dna.rs\", # BSD\n     \"test/bench/shootout-reverse-complement.rs\", # BSD\n     \"test/bench/shootout-threadring.rs\", # BSD"}, {"sha": "43fe82ee899767eac09d4385ad7f6b63e68ad398", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=2ff07af996ca4cfe65bb0d00b6aa1d0134e557d2", "patch": "@@ -46,7 +46,9 @@\n #![feature(default_type_params)]\n \n #![crate_name = \"num\"]\n-#![experimental]\n+#![deprecated = \"This is now a cargo package located at: \\\n+                 https://github.com/rust-lang/num\"]\n+#![allow(deprecated)]\n #![crate_type = \"rlib\"]\n #![crate_type = \"dylib\"]\n #![license = \"MIT/ASL2\"]"}, {"sha": "d22633b341289dcb97efc49428e5046ad36311f2", "filename": "src/test/bench/shootout-pidigits.rs", "status": "removed", "additions": 0, "deletions": 128, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/946654a721d6fd5eeb91e93293cdc2cba83c78b9/src%2Ftest%2Fbench%2Fshootout-pidigits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/946654a721d6fd5eeb91e93293cdc2cba83c78b9/src%2Ftest%2Fbench%2Fshootout-pidigits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pidigits.rs?ref=946654a721d6fd5eeb91e93293cdc2cba83c78b9", "patch": "@@ -1,128 +0,0 @@\n-// The Computer Language Benchmarks Game\n-// http://benchmarksgame.alioth.debian.org/\n-//\n-// contributed by the Rust Project Developers\n-\n-// Copyright (c) 2013-2014 The Rust Project Developers\n-//\n-// All rights reserved.\n-//\n-// Redistribution and use in source and binary forms, with or without\n-// modification, are permitted provided that the following conditions\n-// are met:\n-//\n-// - Redistributions of source code must retain the above copyright\n-//   notice, this list of conditions and the following disclaimer.\n-//\n-// - Redistributions in binary form must reproduce the above copyright\n-//   notice, this list of conditions and the following disclaimer in\n-//   the documentation and/or other materials provided with the\n-//   distribution.\n-//\n-// - Neither the name of \"The Computer Language Benchmarks Game\" nor\n-//   the name of \"The Computer Language Shootout Benchmarks\" nor the\n-//   names of its contributors may be used to endorse or promote\n-//   products derived from this software without specific prior\n-//   written permission.\n-//\n-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n-// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n-// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\n-// FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n-// COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n-// INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n-// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n-// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n-// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n-// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n-// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n-// OF THE POSSIBILITY OF SUCH DAMAGE.\n-\n-extern crate num;\n-\n-use std::from_str::FromStr;\n-use std::num::One;\n-use std::num::Zero;\n-use std::num::FromPrimitive;\n-use num::Integer;\n-use num::bigint::BigInt;\n-\n-struct Context {\n-    numer: BigInt,\n-    accum: BigInt,\n-    denom: BigInt,\n-}\n-\n-impl Context {\n-    fn new() -> Context {\n-        Context {\n-            numer: One::one(),\n-            accum: Zero::zero(),\n-            denom: One::one(),\n-        }\n-    }\n-\n-    fn from_int(i: int) -> BigInt {\n-        FromPrimitive::from_int(i).unwrap()\n-    }\n-\n-    fn extract_digit(&self) -> int {\n-        if self.numer > self.accum {return -1;}\n-        let (q, r) =\n-            (self.numer * Context::from_int(3) + self.accum)\n-            .div_rem(&self.denom);\n-        if r + self.numer >= self.denom {return -1;}\n-        q.to_int().unwrap()\n-    }\n-\n-    fn next_term(&mut self, k: int) {\n-        let y2 = Context::from_int(k * 2 + 1);\n-        self.accum = (self.accum + (self.numer << 1)) * y2;\n-        self.numer = self.numer * Context::from_int(k);\n-        self.denom = self.denom * y2;\n-    }\n-\n-    fn eliminate_digit(&mut self, d: int) {\n-        let d = Context::from_int(d);\n-        let ten = Context::from_int(10);\n-        self.accum = (self.accum - self.denom * d) * ten;\n-        self.numer = self.numer * ten;\n-    }\n-}\n-\n-fn pidigits(n: int) {\n-    let mut k = 0;\n-    let mut context = Context::new();\n-\n-    for i in range(1, n + 1) {\n-        let mut d;\n-        loop {\n-            k += 1;\n-            context.next_term(k);\n-            d = context.extract_digit();\n-            if d != -1 {break;}\n-        }\n-\n-        print!(\"{}\", d);\n-        if i % 10 == 0 {print!(\"\\t:{}\\n\", i);}\n-\n-        context.eliminate_digit(d);\n-    }\n-\n-    let m = n % 10;\n-    if m != 0 {\n-        for _ in range(m, 10) { print!(\" \"); }\n-        print!(\"\\t:{}\\n\", n);\n-    }\n-}\n-\n-fn main() {\n-    let args = std::os::args();\n-    let args = args.as_slice();\n-    let n = if args.len() < 2 {\n-        512\n-    } else {\n-        FromStr::from_str(args[1].as_slice()).unwrap()\n-    };\n-    pidigits(n);\n-}"}]}