{"sha": "2e8a7663b45790310adac4f62a88df08821261f1", "node_id": "C_kwDOAAsO6NoAKDJlOGE3NjYzYjQ1NzkwMzEwYWRhYzRmNjJhODhkZjA4ODIxMjYxZjE", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-17T12:46:47Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2022-02-21T18:28:22Z"}, "message": "Simplify gating of BPF w registers behind the alu32 target feature\n\nThis is already handled by supported_types().", "tree": {"sha": "d7262de757a5a3897e1c65aaec61e6df5126b875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7262de757a5a3897e1c65aaec61e6df5126b875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e8a7663b45790310adac4f62a88df08821261f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e8a7663b45790310adac4f62a88df08821261f1", "html_url": "https://github.com/rust-lang/rust/commit/2e8a7663b45790310adac4f62a88df08821261f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e8a7663b45790310adac4f62a88df08821261f1/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1103d2e914b67c18b0deb86073c26c6aefda761d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1103d2e914b67c18b0deb86073c26c6aefda761d", "html_url": "https://github.com/rust-lang/rust/commit/1103d2e914b67c18b0deb86073c26c6aefda761d"}], "stats": {"total": 38, "additions": 12, "deletions": 26}, "files": [{"sha": "3b03766a089b22f12406b083cae5cd2e84d716d2", "filename": "compiler/rustc_target/src/asm/bpf.rs", "status": "modified", "additions": 12, "deletions": 26, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/2e8a7663b45790310adac4f62a88df08821261f1/compiler%2Frustc_target%2Fsrc%2Fasm%2Fbpf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e8a7663b45790310adac4f62a88df08821261f1/compiler%2Frustc_target%2Fsrc%2Fasm%2Fbpf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Fbpf.rs?ref=2e8a7663b45790310adac4f62a88df08821261f1", "patch": "@@ -1,7 +1,6 @@\n-use super::{InlineAsmArch, InlineAsmType, Target};\n-use rustc_data_structures::stable_set::FxHashSet;\n+use super::{InlineAsmArch, InlineAsmType};\n use rustc_macros::HashStable_Generic;\n-use rustc_span::{sym, Symbol};\n+use rustc_span::Symbol;\n use std::fmt;\n \n def_reg_class! {\n@@ -43,19 +42,6 @@ impl BpfInlineAsmRegClass {\n     }\n }\n \n-fn only_alu32(\n-    _arch: InlineAsmArch,\n-    target_features: &FxHashSet<Symbol>,\n-    _target: &Target,\n-    _is_clobber: bool,\n-) -> Result<(), &'static str> {\n-    if !target_features.contains(&sym::alu32) {\n-        Err(\"register can't be used without the `alu32` target feature\")\n-    } else {\n-        Ok(())\n-    }\n-}\n-\n def_regs! {\n     Bpf BpfInlineAsmReg BpfInlineAsmRegClass {\n         r0: reg = [\"r0\"],\n@@ -68,16 +54,16 @@ def_regs! {\n         r7: reg = [\"r7\"],\n         r8: reg = [\"r8\"],\n         r9: reg = [\"r9\"],\n-        w0: wreg = [\"w0\"] % only_alu32,\n-        w1: wreg = [\"w1\"] % only_alu32,\n-        w2: wreg = [\"w2\"] % only_alu32,\n-        w3: wreg = [\"w3\"] % only_alu32,\n-        w4: wreg = [\"w4\"] % only_alu32,\n-        w5: wreg = [\"w5\"] % only_alu32,\n-        w6: wreg = [\"w6\"] % only_alu32,\n-        w7: wreg = [\"w7\"] % only_alu32,\n-        w8: wreg = [\"w8\"] % only_alu32,\n-        w9: wreg = [\"w9\"] % only_alu32,\n+        w0: wreg = [\"w0\"],\n+        w1: wreg = [\"w1\"],\n+        w2: wreg = [\"w2\"],\n+        w3: wreg = [\"w3\"],\n+        w4: wreg = [\"w4\"],\n+        w5: wreg = [\"w5\"],\n+        w6: wreg = [\"w6\"],\n+        w7: wreg = [\"w7\"],\n+        w8: wreg = [\"w8\"],\n+        w9: wreg = [\"w9\"],\n \n         #error = [\"r10\", \"w10\"] =>\n             \"the stack pointer cannot be used as an operand for inline asm\","}]}