{"sha": "bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8", "node_id": "C_kwDOAAsO6NoAKGJkNDE5N2NiZjkyODYwZTExYWUwNjgxZjFhYjc2OTBjYTRjMWMwYzg", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-31T12:14:30Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-31T14:07:15Z"}, "message": "Simplify an `if let Some` to a `?`", "tree": {"sha": "24a9fb958d40aefad680821d3c8e0b92adf93f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24a9fb958d40aefad680821d3c8e0b92adf93f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8", "html_url": "https://github.com/rust-lang/rust/commit/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1722aa79ea58dc6644016fbc282d6ed4f2cafe36", "url": "https://api.github.com/repos/rust-lang/rust/commits/1722aa79ea58dc6644016fbc282d6ed4f2cafe36", "html_url": "https://github.com/rust-lang/rust/commit/1722aa79ea58dc6644016fbc282d6ed4f2cafe36"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "9df6d2f43ad57b8493fc700c8081031853831a83", "filename": "compiler/rustc_mir_build/src/thir/pattern/deconstruct_pat.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fdeconstruct_pat.rs?ref=bd4197cbf92860e11ae0681f1ab7690ca4c1c0c8", "patch": "@@ -140,20 +140,17 @@ impl IntRange {\n         value: mir::ConstantKind<'tcx>,\n     ) -> Option<IntRange> {\n         let ty = value.ty();\n-        if let Some((target_size, bias)) = Self::integral_size_and_signed_bias(tcx, ty) {\n-            let val = match value {\n-                mir::ConstantKind::Ty(c) if let ty::ConstKind::Value(valtree) = c.kind() => {\n-                    valtree.unwrap_leaf().to_bits(target_size).ok()\n-                },\n-                // This is a more general form of the previous case.\n-                _ => value.try_eval_bits(tcx, param_env, ty),\n-            }?;\n+        let (target_size, bias) = Self::integral_size_and_signed_bias(tcx, ty)?;\n+        let val = match value {\n+            mir::ConstantKind::Ty(c) if let ty::ConstKind::Value(valtree) = c.kind() => {\n+                valtree.unwrap_leaf().to_bits(target_size).ok()\n+            },\n+            // This is a more general form of the previous case.\n+            _ => value.try_eval_bits(tcx, param_env, ty),\n+        }?;\n \n-            let val = val ^ bias;\n-            Some(IntRange { range: val..=val, bias })\n-        } else {\n-            None\n-        }\n+        let val = val ^ bias;\n+        Some(IntRange { range: val..=val, bias })\n     }\n \n     #[inline]"}]}