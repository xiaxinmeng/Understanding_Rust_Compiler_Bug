{"sha": "4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9", "node_id": "C_kwDOAAsO6NoAKDRjMzY5OWYwMWEzZDFjYjUxZTVjZDFjMGU5MTNhMzczOWFkYzRmYzk", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-11-12T16:17:57Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2021-11-26T20:18:39Z"}, "message": "Add 1.57.0 release notes", "tree": {"sha": "6edeed553e909331cad26efbcb88346442344aa9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6edeed553e909331cad26efbcb88346442344aa9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9", "html_url": "https://github.com/rust-lang/rust/commit/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d246f0c8d3063fea86abbb65a824362709541ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d246f0c8d3063fea86abbb65a824362709541ba", "html_url": "https://github.com/rust-lang/rust/commit/6d246f0c8d3063fea86abbb65a824362709541ba"}], "stats": {"total": 114, "additions": 114, "deletions": 0}, "files": [{"sha": "4b9b20f4cba606cd75ecb00ceab7ca2ba7894f6a", "filename": "RELEASES.md", "status": "modified", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=4c3699f01a3d1cb51e5cd1c0e913a3739adc4fc9", "patch": "@@ -1,3 +1,117 @@\n+Version 1.57.0 (2021-12-02)\n+==========================\n+\n+Language\n+--------\n+\n+- [Macro attributes may follow `#[derive]` and will see the original (pre-`cfg`) input.][87220]\n+- [Accept curly-brace macros in expressions, like `m!{ .. }.method()` and `m!{ .. }?`.][88690]\n+- [Allow panicking in constant evaluation.][89508]\n+\n+Compiler\n+--------\n+\n+- [Create more accurate debuginfo for vtables.][89597]\n+- [Add `armv6k-nintendo-3ds` at Tier 3\\*.][88529]\n+- [Add `armv7-unknown-linux-uclibceabihf` at Tier 3\\*.][88952]\n+- [Add `m68k-unknown-linux-gnu` at Tier 3\\*.][88321]\n+- [Add SOLID targets at Tier 3\\*:][86191] `aarch64-kmc-solid_asp3`, `armv7a-kmc-solid_asp3-eabi`, `armv7a-kmc-solid_asp3-eabihf`\n+\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n+   information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+\n+- [Avoid allocations and copying in `Vec::leak`][89337]\n+- [Add `#[repr(i8)]` to `Ordering`][89507]\n+- [Optimize `File::read_to_end` and `read_to_string`][89582]\n+- [Update to Unicode 14.0][89614]\n+- [Many more functions are marked `#[must_use]`][89692], producing a warning\n+  when ignoring their return value. This helps catch mistakes such as expecting\n+  a function to mutate a value in place rather than return a new value.\n+\n+Stabilised APIs\n+---------------\n+\n+- [`[T; N]::as_mut_slice`][`array::as_mut_slice`]\n+- [`[T; N]::as_slice`][`array::as_slice`]\n+- [`collections::TryReserveError`]\n+- [`HashMap::try_reserve`]\n+- [`HashSet::try_reserve`]\n+- [`String::try_reserve`]\n+- [`String::try_reserve_exact`]\n+- [`Vec::try_reserve`]\n+- [`Vec::try_reserve_exact`]\n+- [`VecDeque::try_reserve`]\n+- [`VecDeque::try_reserve_exact`]\n+- [`Iterator::map_while`]\n+- [`iter::MapWhile`]\n+- [`proc_macro::is_available`]\n+- [`Command::get_program`]\n+- [`Command::get_args`]\n+- [`Command::get_envs`]\n+- [`Command::get_current_dir`]\n+- [`CommandArgs`]\n+- [`CommandEnvs`]\n+\n+These APIs are now usable in const contexts:\n+\n+- [`hint::unreachable_unchecked`]\n+\n+Cargo\n+-----\n+\n+- [Stabilize custom profiles][cargo/9943]\n+\n+Compatibility notes\n+-------------------\n+\n+Internal changes\n+----------------\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of rustc\n+and related tools.\n+\n+- [Added an experimental backend for codegen with `libgccjit`.][87260]\n+\n+[86191]: https://github.com/rust-lang/rust/pull/86191/\n+[87220]: https://github.com/rust-lang/rust/pull/87220/\n+[87260]: https://github.com/rust-lang/rust/pull/87260/\n+[88243]: https://github.com/rust-lang/rust/pull/88243/\n+[88321]: https://github.com/rust-lang/rust/pull/88321/\n+[88529]: https://github.com/rust-lang/rust/pull/88529/\n+[88690]: https://github.com/rust-lang/rust/pull/88690/\n+[88952]: https://github.com/rust-lang/rust/pull/88952/\n+[89337]: https://github.com/rust-lang/rust/pull/89337/\n+[89507]: https://github.com/rust-lang/rust/pull/89507/\n+[89508]: https://github.com/rust-lang/rust/pull/89508/\n+[89582]: https://github.com/rust-lang/rust/pull/89582/\n+[89597]: https://github.com/rust-lang/rust/pull/89597/\n+[89614]: https://github.com/rust-lang/rust/pull/89614/\n+[89692]: https://github.com/rust-lang/rust/issues/89692/\n+[cargo/9943]: https://github.com/rust-lang/cargo/pull/9943/\n+[`array::as_mut_slice`]: https://doc.rust-lang.org/std/primitive.array.html#method.as_mut_slice\n+[`array::as_slice`]: https://doc.rust-lang.org/std/primitive.array.html#method.as_slice\n+[`collections::TryReserveError`]: https://doc.rust-lang.org/std/collections/struct.TryReserveError.html\n+[`HashMap::try_reserve`]: https://doc.rust-lang.org/std/collections/hash_map/struct.HashMap.html#method.try_reserve\n+[`HashSet::try_reserve`]: https://doc.rust-lang.org/std/collections/hash_set/struct.HashSet.html#method.try_reserve\n+[`String::try_reserve`]: https://doc.rust-lang.org/alloc/string/struct.String.html#method.try_reserve\n+[`String::try_reserve_exact`]: https://doc.rust-lang.org/alloc/string/struct.String.html#method.try_reserve_exact\n+[`Vec::try_reserve`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.try_reserve\n+[`Vec::try_reserve_exact`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.try_reserve_exact\n+[`VecDeque::try_reserve`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.try_reserve\n+[`VecDeque::try_reserve_exact`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.try_reserve_exact\n+[`Iterator::map_while`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.map_while\n+[`iter::MapWhile`]: https://doc.rust-lang.org/std/iter/struct.MapWhile.html\n+[`proc_macro::is_available`]: https://doc.rust-lang.org/proc_macro/fn.is_available.html\n+[`Command::get_program`]: https://doc.rust-lang.org/std/process/struct.Command.html#method.get_program\n+[`Command::get_args`]: https://doc.rust-lang.org/std/process/struct.Command.html#method.get_args\n+[`Command::get_envs`]: https://doc.rust-lang.org/std/process/struct.Command.html#method.get_envs\n+[`Command::get_current_dir`]: https://doc.rust-lang.org/std/process/struct.Command.html#method.get_current_dir\n+[`CommandArgs`]: https://doc.rust-lang.org/std/process/struct.CommandArgs.html\n+[`CommandEnvs`]: https://doc.rust-lang.org/std/process/struct.CommandEnvs.html\n+\n Version 1.56.1 (2021-11-01)\n ===========================\n "}]}