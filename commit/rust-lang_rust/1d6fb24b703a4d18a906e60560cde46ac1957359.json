{"sha": "1d6fb24b703a4d18a906e60560cde46ac1957359", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNmZiMjRiNzAzYTRkMThhOTA2ZTYwNTYwY2RlNDZhYzE5NTczNTk=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-22T22:11:34Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-22T22:11:34Z"}, "message": "Hack to make [] and []/~ the same type in preparation for switching to []/~.", "tree": {"sha": "84a39f794c95ef4fa1a0fc4a0ea5349a71ac0aba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84a39f794c95ef4fa1a0fc4a0ea5349a71ac0aba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d6fb24b703a4d18a906e60560cde46ac1957359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6fb24b703a4d18a906e60560cde46ac1957359", "html_url": "https://github.com/rust-lang/rust/commit/1d6fb24b703a4d18a906e60560cde46ac1957359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d6fb24b703a4d18a906e60560cde46ac1957359/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "275c1e44383bbacd8d81a9f80df9ad4da99f0168", "url": "https://api.github.com/repos/rust-lang/rust/commits/275c1e44383bbacd8d81a9f80df9ad4da99f0168", "html_url": "https://github.com/rust-lang/rust/commit/275c1e44383bbacd8d81a9f80df9ad4da99f0168"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ef85132ded10dad4f2938066c87103f04a3a4b7f", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=1d6fb24b703a4d18a906e60560cde46ac1957359", "patch": "@@ -684,7 +684,7 @@ fn mk_nil_ptr(cx: ctxt) -> t {\n     mk_ptr(cx, {ty: mk_nil(cx), mutbl: ast::m_imm})\n }\n \n-fn mk_vec(cx: ctxt, tm: mt) -> t { mk_t(cx, ty_vec(tm)) }\n+fn mk_vec(cx: ctxt, tm: mt) -> t { mk_evec(cx, tm, vstore_uniq) }\n \n fn mk_evec(cx: ctxt, tm: mt, t: vstore) -> t {\n     mk_t(cx, ty_evec(tm, t))"}, {"sha": "636a0b0c9b9dd9ae439f1072337ae882d0ace70d", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=1d6fb24b703a4d18a906e60560cde46ac1957359", "patch": "@@ -218,7 +218,7 @@ fn require_same_types(\n \n fn arg_is_argv_ty(_tcx: ty::ctxt, a: ty::arg) -> bool {\n     alt ty::get(a.ty).struct {\n-      ty::ty_vec(mt) {\n+      ty::ty_evec(mt, vstore_uniq) {\n         if mt.mutbl != ast::m_imm { ret false; }\n         alt ty::get(mt.ty).struct {\n           ty::ty_str { ret true; }"}, {"sha": "c40b86d05309ea7b677fb3256d6284723a423d28", "filename": "src/rustc/middle/typeck/astconv.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=1d6fb24b703a4d18a906e60560cde46ac1957359", "patch": "@@ -170,6 +170,12 @@ fn ast_ty_to_ty<AC: ast_conv, RS: region_scope copy>(\n             ret ty::mk_evec(tcx, mt, vst);\n           }\n \n+          // HACK: if we get a []/~, we assume that it was actually a\n+          // [] that got written down, and we throw away the /~...\n+          ty::ty_evec(mt, vstore_uniq) {\n+            ret ty::mk_evec(tcx, mt, vst);\n+          }\n+\n           ty::ty_str {\n             ret ty::mk_estr(tcx, vst);\n           }"}, {"sha": "e0d3680a381b5eff0b3f0122e7f26ad56749b3d7", "filename": "src/test/compile-fail/fail-type-err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d6fb24b703a4d18a906e60560cde46ac1957359/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs?ref=1d6fb24b703a4d18a906e60560cde46ac1957359", "patch": "@@ -1,2 +1,2 @@\n-// error-pattern:expected `str` but found `[int]`\n+// error-pattern:expected `str` but found `[int]/~`\n fn main() { fail [0i]; }"}]}