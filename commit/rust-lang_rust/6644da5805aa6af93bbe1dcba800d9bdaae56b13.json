{"sha": "6644da5805aa6af93bbe1dcba800d9bdaae56b13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NDRkYTU4MDVhYTZhZjkzYmJlMWRjYmE4MDBkOWJkYWFlNTZiMTM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-10T01:14:30Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-01-10T01:21:21Z"}, "message": "core: fix crashing vec methods due to non-working moved self.", "tree": {"sha": "38b6eddbc4e97731001f72d027d4611a00f5c298", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38b6eddbc4e97731001f72d027d4611a00f5c298"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6644da5805aa6af93bbe1dcba800d9bdaae56b13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6644da5805aa6af93bbe1dcba800d9bdaae56b13", "html_url": "https://github.com/rust-lang/rust/commit/6644da5805aa6af93bbe1dcba800d9bdaae56b13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6644da5805aa6af93bbe1dcba800d9bdaae56b13/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a2e495d673932526676ca6980e0ea8da14725dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a2e495d673932526676ca6980e0ea8da14725dd", "html_url": "https://github.com/rust-lang/rust/commit/6a2e495d673932526676ca6980e0ea8da14725dd"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "f84c1a9f0beeaea7d71e937eb5207d8f938e4f46", "filename": "src/libcore/vec.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6644da5805aa6af93bbe1dcba800d9bdaae56b13/src%2Flibcore%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6644da5805aa6af93bbe1dcba800d9bdaae56b13/src%2Flibcore%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fvec.rs?ref=6644da5805aa6af93bbe1dcba800d9bdaae56b13", "patch": "@@ -413,7 +413,9 @@ pub fn partition<T>(v: ~[T], f: fn(&T) -> bool) -> (~[T], ~[T]) {\n     let mut lefts  = ~[];\n     let mut rights = ~[];\n \n-    do v.consume |_, elt| {\n+    // FIXME (#4355 maybe): using v.consume here crashes\n+    // do v.consume |_, elt| {\n+    do consume(v) |_, elt| {\n         if f(&elt) {\n             lefts.push(elt);\n         } else {\n@@ -855,7 +857,9 @@ pub pure fn filter_map<T, U: Copy>(v: &[T], f: fn(t: &T) -> Option<U>)\n  */\n pub fn filter<T>(v: ~[T], f: fn(t: &T) -> bool) -> ~[T] {\n     let mut result = ~[];\n-    do v.consume |_, elem| {\n+    // FIXME (#4355 maybe): using v.consume here crashes\n+    // do v.consume |_, elem| {\n+    do consume(v) |_, elem| {\n         if f(&elem) { result.push(elem); }\n     }\n     result\n@@ -3186,10 +3190,11 @@ mod tests {\n \n     #[test]\n     fn test_partition() {\n-        assert (~[]).partition(|x: &int| *x < 3) == (~[], ~[]);\n-        assert (~[1, 2, 3]).partition(|x: &int| *x < 4) == (~[1, 2, 3], ~[]);\n-        assert (~[1, 2, 3]).partition(|x: &int| *x < 2) == (~[1], ~[2, 3]);\n-        assert (~[1, 2, 3]).partition(|x: &int| *x < 0) == (~[], ~[1, 2, 3]);\n+        // FIXME (#4355 maybe): using v.partition here crashes\n+        assert partition(~[], |x: &int| *x < 3) == (~[], ~[]);\n+        assert partition(~[1, 2, 3], |x: &int| *x < 4) == (~[1, 2, 3], ~[]);\n+        assert partition(~[1, 2, 3], |x: &int| *x < 2) == (~[1], ~[2, 3]);\n+        assert partition(~[1, 2, 3], |x: &int| *x < 0) == (~[], ~[1, 2, 3]);\n     }\n \n     #[test]"}]}