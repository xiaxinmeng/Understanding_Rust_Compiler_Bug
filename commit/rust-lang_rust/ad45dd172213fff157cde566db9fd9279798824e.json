{"sha": "ad45dd172213fff157cde566db9fd9279798824e", "node_id": "C_kwDOAAsO6NoAKGFkNDVkZDE3MjIxM2ZmZjE1N2NkZTU2NmRiOWZkOTI3OTc5ODgyNGU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-13T12:49:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-13T12:49:18Z"}, "message": "Rollup merge of #102765 - TaKO8Ki:follow-up-to-102708, r=compiler-errors\n\nSuggest `==` to the first expr which has `ExprKind::Assign` kind\n\nfollow-up to #102708\n\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4241dc33ed8af02e1ef530d6b14903fd)", "tree": {"sha": "b507e1ca4cb3f03d8c751dc3eaaec5e705e18a1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b507e1ca4cb3f03d8c751dc3eaaec5e705e18a1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad45dd172213fff157cde566db9fd9279798824e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjSAlOCRBK7hj4Ov3rIwAAooUIAJlV0b+y0qli2vNZezDijE5T\nSrCaHfCbTLdzKufTr/ZmhbcDqJXSAyvH3SgIgw5fxA7SlA2C3YY6D6m0i1mKZYNS\nCFL4axl+sPbK7uM/vT8YA/bHyu1wiMPvCTWbUqJDR1dXHT2DNb2lJHT3X0qC8Uln\nNDk9Orad9gz6SKqb59DFCzu4qBtJJYL6iT5Q8rCX5YwTafrklQKmlQJsCb1FROtY\nA50xEelLD7bUn7K2qU2APH9JsQxVTzS+2YabLxLvmODFShMDmga863yhgjUJ1Pi7\nr2V17Ra9d/ACRc3WJ/0VnwBVibYj55WakVBn0shs/TeZBWcl+27lieJaO7ebvc0=\n=LZNd\n-----END PGP SIGNATURE-----\n", "payload": "tree b507e1ca4cb3f03d8c751dc3eaaec5e705e18a1d\nparent fa0ca783f89a83046e6ce0383385ba5b28296435\nparent 57d0278d5cd397a89bb33f1857b3ed431c1f341c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665665358 +0530\ncommitter GitHub <noreply@github.com> 1665665358 +0530\n\nRollup merge of #102765 - TaKO8Ki:follow-up-to-102708, r=compiler-errors\n\nSuggest `==` to the first expr which has `ExprKind::Assign` kind\n\nfollow-up to #102708\n\n[playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=4241dc33ed8af02e1ef530d6b14903fd)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad45dd172213fff157cde566db9fd9279798824e", "html_url": "https://github.com/rust-lang/rust/commit/ad45dd172213fff157cde566db9fd9279798824e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad45dd172213fff157cde566db9fd9279798824e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa0ca783f89a83046e6ce0383385ba5b28296435", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0ca783f89a83046e6ce0383385ba5b28296435", "html_url": "https://github.com/rust-lang/rust/commit/fa0ca783f89a83046e6ce0383385ba5b28296435"}, {"sha": "57d0278d5cd397a89bb33f1857b3ed431c1f341c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d0278d5cd397a89bb33f1857b3ed431c1f341c", "html_url": "https://github.com/rust-lang/rust/commit/57d0278d5cd397a89bb33f1857b3ed431c1f341c"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "34c257845971e4617462413929e2b50dfef2f7e7", "filename": "compiler/rustc_hir_analysis/src/check/expr.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ad45dd172213fff157cde566db9fd9279798824e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad45dd172213fff157cde566db9fd9279798824e/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fexpr.rs?ref=ad45dd172213fff157cde566db9fd9279798824e", "patch": "@@ -1051,8 +1051,20 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 rhs_expr,\n             ) = lhs.kind\n             {\n+                // if x == 1 && y == 2 { .. }\n+                //                 +\n                 let actual_lhs_ty = self.check_expr(&rhs_expr);\n                 (Applicability::MaybeIncorrect, self.can_coerce(rhs_ty, actual_lhs_ty))\n+            } else if let ExprKind::Binary(\n+                Spanned { node: hir::BinOpKind::And | hir::BinOpKind::Or, .. },\n+                lhs_expr,\n+                _,\n+            ) = rhs.kind\n+            {\n+                // if x == 1 && y == 2 { .. }\n+                //       +\n+                let actual_rhs_ty = self.check_expr(&lhs_expr);\n+                (Applicability::MaybeIncorrect, self.can_coerce(actual_rhs_ty, lhs_ty))\n             } else {\n                 (Applicability::MaybeIncorrect, false)\n             };"}, {"sha": "ada250df24695ac5f6fb95d1eb844f8e063b141e", "filename": "src/test/ui/type/type-check/assignment-in-if.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ad45dd172213fff157cde566db9fd9279798824e/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad45dd172213fff157cde566db9fd9279798824e/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.rs?ref=ad45dd172213fff157cde566db9fd9279798824e", "patch": "@@ -53,4 +53,10 @@ fn main() {\n         //~| ERROR mismatched types\n         println!(\"{}\", x);\n     }\n+\n+    if x = 1 && x == 1 {\n+        //~^ ERROR mismatched types\n+        //~| ERROR mismatched types\n+        println!(\"{}\", x);\n+    }\n }"}, {"sha": "8ab08e25e30920213a4c8e03cc669b11adcce23b", "filename": "src/test/ui/type/type-check/assignment-in-if.stderr", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ad45dd172213fff157cde566db9fd9279798824e/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ad45dd172213fff157cde566db9fd9279798824e/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fassignment-in-if.stderr?ref=ad45dd172213fff157cde566db9fd9279798824e", "patch": "@@ -104,6 +104,23 @@ help: you might have meant to compare for equality\n LL |     if x == x && x == x && x == x {\n    |                               +\n \n-error: aborting due to 11 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-in-if.rs:57:12\n+   |\n+LL |     if x = 1 && x == 1 {\n+   |            ^ expected `bool`, found integer\n+\n+error[E0308]: mismatched types\n+  --> $DIR/assignment-in-if.rs:57:8\n+   |\n+LL |     if x = 1 && x == 1 {\n+   |        ^^^^^^^^^^^^^^^ expected `bool`, found `()`\n+   |\n+help: you might have meant to compare for equality\n+   |\n+LL |     if x == 1 && x == 1 {\n+   |           +\n+\n+error: aborting due to 13 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}