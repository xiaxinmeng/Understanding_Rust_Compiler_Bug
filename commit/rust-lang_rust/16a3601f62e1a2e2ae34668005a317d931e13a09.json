{"sha": "16a3601f62e1a2e2ae34668005a317d931e13a09", "node_id": "C_kwDOAAsO6NoAKDE2YTM2MDFmNjJlMWEyZTJhZTM0NjY4MDA1YTMxN2Q5MzFlMTNhMDk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-27T05:06:46Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-03T01:37:02Z"}, "message": "Delay a bug when failed to normalize trait ref during specialization", "tree": {"sha": "d3625a069ebda9ef6b05eb4f86b153ed3e53e3b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3625a069ebda9ef6b05eb4f86b153ed3e53e3b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16a3601f62e1a2e2ae34668005a317d931e13a09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16a3601f62e1a2e2ae34668005a317d931e13a09", "html_url": "https://github.com/rust-lang/rust/commit/16a3601f62e1a2e2ae34668005a317d931e13a09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16a3601f62e1a2e2ae34668005a317d931e13a09/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4417cf020fbcd6182c11637bc6b8694434bd81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4417cf020fbcd6182c11637bc6b8694434bd81a", "html_url": "https://github.com/rust-lang/rust/commit/e4417cf020fbcd6182c11637bc6b8694434bd81a"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "f9c06178368ebf6604646fa05134cf6e1a1ddbe1", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/16a3601f62e1a2e2ae34668005a317d931e13a09/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a3601f62e1a2e2ae34668005a317d931e13a09/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=16a3601f62e1a2e2ae34668005a317d931e13a09", "patch": "@@ -149,8 +149,6 @@ pub(super) fn specializes(tcx: TyCtxt<'_>, (impl1_def_id, impl2_def_id): (DefId,\n \n     // Create an infcx, taking the predicates of impl1 as assumptions:\n     tcx.infer_ctxt().enter(|infcx| {\n-        // Normalize the trait reference. The WF rules ought to ensure\n-        // that this always succeeds.\n         let impl1_trait_ref = match traits::fully_normalize(\n             &infcx,\n             FulfillmentContext::new(),\n@@ -159,8 +157,12 @@ pub(super) fn specializes(tcx: TyCtxt<'_>, (impl1_def_id, impl2_def_id): (DefId,\n             impl1_trait_ref,\n         ) {\n             Ok(impl1_trait_ref) => impl1_trait_ref,\n-            Err(err) => {\n-                bug!(\"failed to fully normalize {:?}: {:?}\", impl1_trait_ref, err);\n+            Err(_errors) => {\n+                tcx.sess.delay_span_bug(\n+                    tcx.def_span(impl1_def_id),\n+                    format!(\"failed to fully normalize {impl1_trait_ref}\"),\n+                );\n+                impl1_trait_ref\n             }\n         };\n "}, {"sha": "c49119f9c095b73e07a3361c57e6d72bfeb69dd5", "filename": "src/test/ui/specialization/issue-43037.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.rs?ref=16a3601f62e1a2e2ae34668005a317d931e13a09", "patch": "@@ -0,0 +1,20 @@\n+#![feature(specialization)]\n+#![allow(incomplete_features)]\n+\n+trait X {}\n+trait Y: X {}\n+trait Z {\n+    type Assoc: Y;\n+}\n+struct A<T>(T);\n+\n+impl<T> Y for T where T: X {}\n+impl<T: X> Z for A<T> {\n+    type Assoc = T;\n+}\n+\n+// this impl is invalid, but causes an ICE anyway\n+impl<T> From<<A<T> as Z>::Assoc> for T {}\n+//~^ ERROR type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+\n+fn main() {}"}, {"sha": "4249cd89477160e549188d49c1bf642336c99235", "filename": "src/test/ui/specialization/issue-43037.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-43037.stderr?ref=16a3601f62e1a2e2ae34668005a317d931e13a09", "patch": "@@ -0,0 +1,12 @@\n+error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n+  --> $DIR/issue-43037.rs:17:6\n+   |\n+LL | impl<T> From<<A<T> as Z>::Assoc> for T {}\n+   |      ^ type parameter `T` must be used as the type parameter for some local type\n+   |\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n+   = note: only traits defined in the current crate can be implemented for a type parameter\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0210`."}, {"sha": "8ee5d3e2e58da627b5b3d942493867a70035300d", "filename": "src/test/ui/specialization/issue-45814.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.rs?ref=16a3601f62e1a2e2ae34668005a317d931e13a09", "patch": "@@ -0,0 +1,12 @@\n+//~ ERROR overflow evaluating the requirement `T: Trait<_>`\n+\n+#![feature(specialization)]\n+#![allow(incomplete_features)]\n+\n+pub trait Trait<T> {}\n+\n+default impl<T, U> Trait<T> for U {}\n+\n+impl<T> Trait<<T as Iterator>::Item> for T {}\n+\n+fn main() {}"}, {"sha": "ab6adf477c97888b7b4a7e182f9fbf5276263a35", "filename": "src/test/ui/specialization/issue-45814.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16a3601f62e1a2e2ae34668005a317d931e13a09/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-45814.stderr?ref=16a3601f62e1a2e2ae34668005a317d931e13a09", "patch": "@@ -0,0 +1,14 @@\n+error[E0275]: overflow evaluating the requirement `T: Trait<_>`\n+   |\n+   = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"256\"]` attribute to your crate (`issue_45814`)\n+note: required because of the requirements on the impl of `Trait<_>` for `T`\n+  --> $DIR/issue-45814.rs:8:20\n+   |\n+LL | default impl<T, U> Trait<T> for U {}\n+   |                    ^^^^^^^^     ^\n+   = note: 128 redundant requirements hidden\n+   = note: required because of the requirements on the impl of `Trait<_>` for `T`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0275`."}]}