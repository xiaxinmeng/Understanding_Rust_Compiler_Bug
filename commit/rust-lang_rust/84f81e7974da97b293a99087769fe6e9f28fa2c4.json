{"sha": "84f81e7974da97b293a99087769fe6e9f28fa2c4", "node_id": "C_kwDOAAsO6NoAKDg0ZjgxZTc5NzRkYTk3YjI5M2E5OTA4Nzc2OWZlNmU5ZjI4ZmEyYzQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-20T05:09:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-20T05:09:03Z"}, "message": "Rollup merge of #100723 - 5225225:the-easy-ones, r=compiler-errors\n\nAdd the diagnostic translation lints to crates that don't emit them\n\nSome of these have a note saying that they should build on a stable compiler, does that mean they shouldn't get these lints? Or can we cfg them out on those?", "tree": {"sha": "5d1848873506d3c5eae9154f1f33a297c1f33735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d1848873506d3c5eae9154f1f33a297c1f33735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84f81e7974da97b293a99087769fe6e9f28fa2c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjAGxvCRBK7hj4Ov3rIwAAiwwIAHzSBGZOk7MM4Z8PNgepQ23D\nqXIIMisl15GNtWQ82gwjAXzge2i45jV/lXR8bJPvs8F7FFYAOvjnG5stc++HPw/y\nyGGvxfPQhCNHhvbd1qjRWS3fsxjIaZ07Vy/9dCjvf85Kgnvo3gRZCc1s1aQGMqXy\nny+t19JJGu30yLhSq9B+Pw6IDN9xhH90xuPZXdXV0z1432Zfyhj3ZWxaHdQVw+iu\nAlQGUKB+RuIula3HZUY3BcpCIt5AfoSP7L4tmSabQzlXEBJpj08M3WUP5495OiZA\nRYydXMuQ5ASCvVpDofGHImNiU4J/7UXIIi7MTojZfICvbpjiZcf0aM0lmvirB5k=\n=pAD1\n-----END PGP SIGNATURE-----\n", "payload": "tree 5d1848873506d3c5eae9154f1f33a297c1f33735\nparent 67f77f5a55d0daf3193cc87c6a2c8863ca229169\nparent 09ea9f0a87be489250bdb8d9171c7deb20fd04b1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660972143 +0200\ncommitter GitHub <noreply@github.com> 1660972143 +0200\n\nRollup merge of #100723 - 5225225:the-easy-ones, r=compiler-errors\n\nAdd the diagnostic translation lints to crates that don't emit them\n\nSome of these have a note saying that they should build on a stable compiler, does that mean they shouldn't get these lints? Or can we cfg them out on those?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84f81e7974da97b293a99087769fe6e9f28fa2c4", "html_url": "https://github.com/rust-lang/rust/commit/84f81e7974da97b293a99087769fe6e9f28fa2c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84f81e7974da97b293a99087769fe6e9f28fa2c4/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67f77f5a55d0daf3193cc87c6a2c8863ca229169", "url": "https://api.github.com/repos/rust-lang/rust/commits/67f77f5a55d0daf3193cc87c6a2c8863ca229169", "html_url": "https://github.com/rust-lang/rust/commit/67f77f5a55d0daf3193cc87c6a2c8863ca229169"}, {"sha": "09ea9f0a87be489250bdb8d9171c7deb20fd04b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/09ea9f0a87be489250bdb8d9171c7deb20fd04b1", "html_url": "https://github.com/rust-lang/rust/commit/09ea9f0a87be489250bdb8d9171c7deb20fd04b1"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "dde368e7b924fa870e29482e041b0d96bbce4f76", "filename": "compiler/rustc_apfloat/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_apfloat%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -33,6 +33,8 @@\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![no_std]\n #![forbid(unsafe_code)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate alloc;"}, {"sha": "98faacdc1fb59cb14fb6100ef4e610d319a5c1e9", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -19,6 +19,8 @@\n #![feature(rustc_attrs)]\n #![cfg_attr(test, feature(test))]\n #![feature(strict_provenance)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use smallvec::SmallVec;\n "}, {"sha": "2426a0cb7dd10b67ea7a8f21e0912bbc190d5f52", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -19,6 +19,8 @@\n #![feature(slice_internals)]\n #![feature(stmt_expr_attributes)]\n #![recursion_limit = \"256\"]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "bf094af5f7bb0910beec66e0b3d114457345943c", "filename": "compiler/rustc_ast_pretty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,3 +1,5 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n #![feature(associated_type_bounds)]\n #![feature(box_patterns)]\n #![feature(with_negative_coherence)]"}, {"sha": "c8b09cffe0136e0ef5cfb8b4d5c9a4262fb0c0ea", "filename": "compiler/rustc_data_structures/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -28,6 +28,8 @@\n #![feature(vec_into_raw_parts)]\n #![allow(rustc::default_hash_types)]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate tracing;"}, {"sha": "bd424dd9d068580fdaf7935eaf72b3ebfe77abff", "filename": "compiler/rustc_error_codes/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,4 +1,6 @@\n #![deny(rustdoc::invalid_codeblock_attributes)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n //! This library is used to gather all error codes into one place,\n //! the goal being to make their maintenance easier.\n "}, {"sha": "ee978f04be2a5db31b3bdeb42233e8be6b63170a", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,6 +1,8 @@\n #![feature(once_cell)]\n #![feature(rustc_attrs)]\n #![feature(type_alias_impl_trait)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use fluent_bundle::FluentResource;\n use fluent_syntax::parser::ParserError;"}, {"sha": "e44c9291f84838c7f66a152b05b211ee4d0171ac", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -12,6 +12,8 @@\n //! symbol to the `accepted` or `removed` modules respectively.\n \n #![feature(once_cell)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n mod accepted;\n mod active;"}, {"sha": "63998bb6b00cf8467305edaad139b7d9d9fd80de", "filename": "compiler/rustc_fs_util/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_fs_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_fs_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_fs_util%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,3 +1,6 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+\n use std::ffi::CString;\n use std::fs;\n use std::io;"}, {"sha": "3c1bb5532661aa20c4bdc454936ddf4fd0e4d2d5", "filename": "compiler/rustc_graphviz/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_graphviz%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -273,6 +273,8 @@\n     html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\",\n     test(attr(allow(unused_variables), deny(warnings)))\n )]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use LabelText::*;\n "}, {"sha": "7097f998bebda712288402632ecc1b25dc5e34f8", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -11,6 +11,8 @@\n #![feature(never_type)]\n #![feature(rustc_attrs)]\n #![recursion_limit = \"256\"]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "42663da8a3f9c173d400e46eca4660dcea8b0c5c", "filename": "compiler/rustc_hir_pretty/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_pretty%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,4 +1,6 @@\n #![recursion_limit = \"256\"]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use rustc_ast as ast;\n use rustc_ast::util::parser::{self, AssocOp, Fixity};"}, {"sha": "aa34673de81d77063902c7575db6f8979223a626", "filename": "compiler/rustc_index/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,3 +1,5 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n #![feature(allow_internal_unstable)]\n #![feature(bench_black_box)]\n #![feature(extend_one)]"}, {"sha": "178366f7d8045a9263ec22a7081bef423f103ffa", "filename": "compiler/rustc_lexer/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -18,6 +18,8 @@\n //! lexeme types.\n //!\n //! [`rustc_parse::lexer`]: ../rustc_parse/lexer/index.html\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n // We want to be able to build this crate with a stable compiler, so no\n // `#![feature]` attributes should be added.\n "}, {"sha": "a826f599e9cd5f92e5384ba794c9c163bbf316c3", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,4 +1,6 @@\n #![feature(min_specialization)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "8542dcf5bf0fe4012215e4b58daeb2ee9f3508d3", "filename": "compiler/rustc_llvm/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_llvm%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,3 +1,5 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n \n // NOTE: This crate only exists to allow linking on mingw targets."}, {"sha": "458f5e87baeacff3d4d72e44cb95b8f5c2874ef0", "filename": "compiler/rustc_log/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_log%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_log%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_log%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -38,6 +38,9 @@\n //! debugging, you can make changes inside those crates and quickly run main.rs\n //! to read the debug logs.\n \n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+\n use std::env::{self, VarError};\n use std::fmt::{self, Display};\n use std::io;"}, {"sha": "e01d035767ba6d68e0f121fbf7472b5c1801787a", "filename": "compiler/rustc_macros/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -4,6 +4,8 @@\n #![feature(proc_macro_diagnostic)]\n #![feature(proc_macro_span)]\n #![allow(rustc::default_hash_types)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n #![recursion_limit = \"128\"]\n \n use synstructure::decl_derive;"}, {"sha": "e4842d2afb705f2325d5f20a76da31066fd0c3eb", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -9,6 +9,8 @@\n     html_playground_url = \"https://play.rust-lang.org/\",\n     test(attr(deny(warnings)))\n )]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n // We want to be able to build this crate with a stable compiler, so no\n // `#![feature]` attributes should be added.\n "}, {"sha": "df187ea0c94d8a6f5d3b8b52fcd0b1707a6707a3", "filename": "compiler/rustc_query_impl/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -7,6 +7,8 @@\n #![feature(rustc_attrs)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "079d44bac685bf1afd6ad02e8da87ff40d72e5b0", "filename": "compiler/rustc_serialize/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_serialize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_serialize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -18,6 +18,8 @@ Core encoding and decoding interfaces.\n #![feature(new_uninit)]\n #![cfg_attr(test, feature(test))]\n #![allow(rustc::internal)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n pub use self::serialize::{Decodable, Decoder, Encodable, Encoder};\n "}, {"sha": "3e93c6bba977fc1510731443c423fa6ffff64983", "filename": "compiler/rustc_smir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_smir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_smir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_smir%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -11,6 +11,8 @@\n     test(attr(allow(unused_variables), deny(warnings)))\n )]\n #![cfg_attr(not(feature = \"default\"), feature(rustc_private))]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n pub mod mir;\n "}, {"sha": "d14e28e85be1a5407dc22b6788f5986c445d1a07", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -20,6 +20,8 @@\n #![feature(negative_impls)]\n #![feature(min_specialization)]\n #![feature(rustc_attrs)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate rustc_macros;"}, {"sha": "9c9e297849ed52d23541511a8cef6a319e78bd09", "filename": "compiler/rustc_target/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_target%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_target%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -16,6 +16,8 @@\n #![feature(never_type)]\n #![feature(rustc_attrs)]\n #![feature(step_trait)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n use std::iter::FromIterator;\n use std::path::{Path, PathBuf};"}, {"sha": "318e76c79f18bae510b82c980a9e31b09a059f84", "filename": "compiler/rustc_traits/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_traits%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84f81e7974da97b293a99087769fe6e9f28fa2c4/compiler%2Frustc_traits%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Flib.rs?ref=84f81e7974da97b293a99087769fe6e9f28fa2c4", "patch": "@@ -1,6 +1,8 @@\n //! New recursive solver modeled on Chalk's recursive solver. Most of\n //! the guts are broken up into modules; see the comments in those modules.\n \n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n #![feature(let_else)]\n #![recursion_limit = \"256\"]\n "}]}