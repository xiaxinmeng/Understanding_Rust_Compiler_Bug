{"sha": "aba96b82b4a9600ea8d01934c799f0539def356b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYTk2YjgyYjRhOTYwMGVhOGQwMTkzNGM3OTlmMDUzOWRlZjM1NmI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T14:34:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-19T14:34:14Z"}, "message": "fix write_os_str_to_wide_str", "tree": {"sha": "9893c816523a06021b4f524bedb8f949c320adc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9893c816523a06021b4f524bedb8f949c320adc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aba96b82b4a9600ea8d01934c799f0539def356b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aba96b82b4a9600ea8d01934c799f0539def356b", "html_url": "https://github.com/rust-lang/rust/commit/aba96b82b4a9600ea8d01934c799f0539def356b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aba96b82b4a9600ea8d01934c799f0539def356b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a27150cb201fbe5aedda3748b08d3428bba5e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a27150cb201fbe5aedda3748b08d3428bba5e0", "html_url": "https://github.com/rust-lang/rust/commit/e4a27150cb201fbe5aedda3748b08d3428bba5e0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8a3f5677706ec04b922baa91f7fe44f7995c62e1", "filename": "src/shims/os_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aba96b82b4a9600ea8d01934c799f0539def356b/src%2Fshims%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aba96b82b4a9600ea8d01934c799f0539def356b/src%2Fshims%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fos_str.rs?ref=aba96b82b4a9600ea8d01934c799f0539def356b", "patch": "@@ -146,7 +146,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let this = self.eval_context_mut();\n         let mut alloc = this\n             .memory\n-            .get_mut(sptr, Size::from_bytes(string_length), Align::from_bytes(2).unwrap())?\n+            .get_mut(sptr, size2 * string_length, Align::from_bytes(2).unwrap())?\n             .unwrap(); // not a ZST, so we will get a result\n         for (offset, wchar) in u16_vec.into_iter().chain(iter::once(0x0000)).enumerate() {\n             let offset = u64::try_from(offset).unwrap();"}]}