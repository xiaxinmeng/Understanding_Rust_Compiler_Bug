{"sha": "6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNjJlYTY4Mjg3OGU5ZjllODg5YzQ0YTQyZjU3YTdlYjE4MjJlMGQ=", "commit": {"author": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-10-30T22:33:57Z"}, "committer": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-10-30T22:33:57Z"}, "message": "Add a nicer error message for missing  in for loop, fixes #40782.", "tree": {"sha": "0403c267a03c2b212bb845d546339c7268269880", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0403c267a03c2b212bb845d546339c7268269880"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "html_url": "https://github.com/rust-lang/rust/commit/6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/comments", "author": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0fe716dbcbf2363ab8f929325d32a17e51039d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0fe716dbcbf2363ab8f929325d32a17e51039d0", "html_url": "https://github.com/rust-lang/rust/commit/f0fe716dbcbf2363ab8f929325d32a17e51039d0"}], "stats": {"total": 80, "additions": 74, "deletions": 6}, "files": [{"sha": "37a12801ddcfc6560e30e1d133f89d841f9686ff", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 48, "deletions": 6, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "patch": "@@ -3154,13 +3154,55 @@ impl<'a> Parser<'a> {\n         // Parse: `for <src_pat> in <src_expr> <src_loop_block>`\n \n         let pat = self.parse_pat()?;\n-        self.expect_keyword(keywords::In)?;\n-        let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n-        let (iattrs, loop_block) = self.parse_inner_attrs_and_block()?;\n-        attrs.extend(iattrs);\n+        // Save the state of the parser before parsing 'in'.\n+        let parser_snapshot_before_in = self.clone();\n+        match self.expect_keyword(keywords::In) {\n+            Ok(()) => {\n+                let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n+                let (iattrs, loop_block) = self.parse_inner_attrs_and_block()?;\n+                attrs.extend(iattrs);\n \n-        let hi = self.prev_span;\n-        Ok(self.mk_expr(span_lo.to(hi), ExprKind::ForLoop(pat, expr, loop_block, opt_ident), attrs))\n+                let hi = self.prev_span;\n+                Ok(self.mk_expr(\n+                    span_lo.to(hi),\n+                    ExprKind::ForLoop(pat, expr, loop_block, opt_ident),\n+                    attrs))\n+            }\n+            Err(mut in_err) => {\n+                let parser_snapshot_after_in = self.clone();\n+                // Rewind to before attempting to parse the 'in'.\n+                mem::replace(self, parser_snapshot_before_in);\n+\n+                match self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None) {\n+                    Ok(expr) => {\n+                        // Successfully parsed the expr, print a nice error message.\n+                        in_err.cancel();\n+                        let in_span = parser_snapshot_after_in.span;\n+                        let mut err = self.sess.span_diagnostic\n+                            .struct_span_err(in_span, \"missing `in` in `for` loop\");\n+                        err.span_label(in_span, \"expected `in` here\");\n+                        let sugg = pprust::to_string(|s| {\n+                            s.s.word(\"for \")?;\n+                            s.print_pat(&pat)?;\n+                            s.s.word(\" in \")?;\n+                            s.print_expr(&expr)\n+                        });\n+                        err.span_suggestion(\n+                            in_span,\n+                            \"try adding `in`\",\n+                            sugg);\n+                        Err(err)\n+                    }\n+                    Err(mut expr_err) => {\n+                        // Couldn't parse as an expr, return original error and parser state.\n+                        expr_err.cancel();\n+                        mem::replace(self, parser_snapshot_after_in);\n+                        Err(in_err)\n+                    }\n+                }\n+            }\n+\n+            }\n     }\n \n     /// Parse a 'while' or 'while let' expression ('while' token already eaten)"}, {"sha": "56ee225105f8922793c92443d0421733d2372e44", "filename": "src/test/ui/issue-40782.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Ftest%2Fui%2Fissue-40782.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Ftest%2Fui%2Fissue-40782.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40782.rs?ref=6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    for i 0..2 {\n+    }\n+}\n+"}, {"sha": "a267c9bf4af789350dbb4e918f5de8b290a6340d", "filename": "src/test/ui/issue-40782.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Ftest%2Fui%2Fissue-40782.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6a62ea682878e9f9e889c44a42f57a7eb1822e0d/src%2Ftest%2Fui%2Fissue-40782.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40782.stderr?ref=6a62ea682878e9f9e889c44a42f57a7eb1822e0d", "patch": "@@ -0,0 +1,11 @@\n+error: missing `in` in `for` loop\n+  --> $DIR/issue-40782.rs:12:11\n+   |\n+12 |     for i 0..2 {\n+   |           ^\n+   |           |\n+   |           expected `in` here\n+   |           help: try adding `in`: `for i in 0..2`\n+\n+error: aborting due to previous error\n+"}]}