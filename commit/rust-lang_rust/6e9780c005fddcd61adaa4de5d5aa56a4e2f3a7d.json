{"sha": "6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlOTc4MGMwMDVmZGRjZDYxYWRhYTRkZTVkNWFhNTZhNGUyZjNhN2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-04T12:41:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-07-04T12:44:03Z"}, "message": "internal: make CompletionItem and SourceChange consistent\n\nBefore this PR, SourceChange used a bool and CompletionItem used an enum\nto signify if edit is a snippet. It makes sense to use the same pattern\nin both cases. `bool` feels simpler, as there's only one consumer of\nthis API, and all producers are encapsulated anyway (we check the\ncapability at the production site).", "tree": {"sha": "96ca6015f74455840d1037f01bafaf89e6f9bad8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96ca6015f74455840d1037f01bafaf89e6f9bad8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "html_url": "https://github.com/rust-lang/rust/commit/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ce88b504cd40144d7e34cb8b0f0a07d34e8a410", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ce88b504cd40144d7e34cb8b0f0a07d34e8a410", "html_url": "https://github.com/rust-lang/rust/commit/2ce88b504cd40144d7e34cb8b0f0a07d34e8a410"}], "stats": {"total": 47, "additions": 16, "deletions": 31}, "files": [{"sha": "b954e330cf50431a9abb22e2eafe907ffc35280a", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "patch": "@@ -97,7 +97,6 @@ pub use ide_assists::{\n };\n pub use ide_completion::{\n     CompletionConfig, CompletionItem, CompletionItemKind, CompletionRelevance, ImportEdit,\n-    InsertTextFormat,\n };\n pub use ide_db::{\n     base_db::{"}, {"sha": "9f808e7628a463818728a55f288df977f355a7ea", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 10, "deletions": 17, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "patch": "@@ -39,8 +39,7 @@ pub struct CompletionItem {\n     ///\n     /// Typically, replaces `source_range` with new identifier.\n     text_edit: TextEdit,\n-\n-    insert_text_format: InsertTextFormat,\n+    is_snippet: bool,\n \n     /// What item (struct, function, etc) are we completing.\n     kind: Option<CompletionItemKind>,\n@@ -272,12 +271,6 @@ pub(crate) enum CompletionKind {\n     Attribute,\n }\n \n-#[derive(Debug, PartialEq, Eq, Copy, Clone)]\n-pub enum InsertTextFormat {\n-    PlainText,\n-    Snippet,\n-}\n-\n impl CompletionItem {\n     pub(crate) fn new(\n         completion_kind: CompletionKind,\n@@ -290,7 +283,7 @@ impl CompletionItem {\n             completion_kind,\n             label,\n             insert_text: None,\n-            insert_text_format: InsertTextFormat::PlainText,\n+            is_snippet: false,\n             detail: None,\n             documentation: None,\n             lookup: None,\n@@ -312,13 +305,13 @@ impl CompletionItem {\n         self.source_range\n     }\n \n-    pub fn insert_text_format(&self) -> InsertTextFormat {\n-        self.insert_text_format\n-    }\n-\n     pub fn text_edit(&self) -> &TextEdit {\n         &self.text_edit\n     }\n+    /// Whether `text_edit` is a snippet (contains `$0` markers).\n+    pub fn is_snippet(&self) -> bool {\n+        self.is_snippet\n+    }\n \n     /// Short one-line additional information, like a type\n     pub fn detail(&self) -> Option<&str> {\n@@ -396,7 +389,7 @@ pub(crate) struct Builder {\n     import_to_add: Option<ImportEdit>,\n     label: String,\n     insert_text: Option<String>,\n-    insert_text_format: InsertTextFormat,\n+    is_snippet: bool,\n     detail: Option<String>,\n     documentation: Option<Documentation>,\n     lookup: Option<String>,\n@@ -442,8 +435,8 @@ impl Builder {\n         CompletionItem {\n             source_range: self.source_range,\n             label,\n-            insert_text_format: self.insert_text_format,\n             text_edit,\n+            is_snippet: self.is_snippet,\n             detail: self.detail,\n             documentation: self.documentation,\n             lookup,\n@@ -473,7 +466,7 @@ impl Builder {\n         _cap: SnippetCap,\n         snippet: impl Into<String>,\n     ) -> &mut Builder {\n-        self.insert_text_format = InsertTextFormat::Snippet;\n+        self.is_snippet = true;\n         self.insert_text(snippet)\n     }\n     pub(crate) fn kind(&mut self, kind: impl Into<CompletionItemKind>) -> &mut Builder {\n@@ -485,7 +478,7 @@ impl Builder {\n         self\n     }\n     pub(crate) fn snippet_edit(&mut self, _cap: SnippetCap, edit: TextEdit) -> &mut Builder {\n-        self.insert_text_format = InsertTextFormat::Snippet;\n+        self.is_snippet = true;\n         self.text_edit(edit)\n     }\n     pub(crate) fn detail(&mut self, detail: impl Into<String>) -> &mut Builder {"}, {"sha": "14d2e5cf165a8920e6121bdbda18c4f6903814b5", "filename": "crates/ide_completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide_completion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Fide_completion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Flib.rs?ref=6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "patch": "@@ -25,7 +25,7 @@ use crate::{completions::Completions, context::CompletionContext, item::Completi\n \n pub use crate::{\n     config::CompletionConfig,\n-    item::{CompletionItem, CompletionItemKind, CompletionRelevance, ImportEdit, InsertTextFormat},\n+    item::{CompletionItem, CompletionItemKind, CompletionRelevance, ImportEdit},\n };\n \n //FIXME: split the following feature into fine-grained features."}, {"sha": "9bd671e36c15f6e6ce8524a9bac4ca0a6e132c1c", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=6e9780c005fddcd61adaa4de5d5aa56a4e2f3a7d", "patch": "@@ -9,8 +9,8 @@ use ide::{\n     Annotation, AnnotationKind, Assist, AssistKind, CallInfo, Cancellable, CompletionItem,\n     CompletionItemKind, CompletionRelevance, Documentation, FileId, FileRange, FileSystemEdit,\n     Fold, FoldKind, Highlight, HlMod, HlOperator, HlPunct, HlRange, HlTag, Indel, InlayHint,\n-    InlayKind, InsertTextFormat, Markup, NavigationTarget, ReferenceAccess, RenameError, Runnable,\n-    Severity, SourceChange, StructureNodeKind, SymbolKind, TextEdit, TextRange, TextSize,\n+    InlayKind, Markup, NavigationTarget, ReferenceAccess, RenameError, Runnable, Severity,\n+    SourceChange, StructureNodeKind, SymbolKind, TextEdit, TextRange, TextSize,\n };\n use itertools::Itertools;\n use serde_json::to_value;\n@@ -92,15 +92,6 @@ pub(crate) fn documentation(documentation: Documentation) -> lsp_types::Document\n     lsp_types::Documentation::MarkupContent(markup_content)\n }\n \n-pub(crate) fn insert_text_format(\n-    insert_text_format: InsertTextFormat,\n-) -> lsp_types::InsertTextFormat {\n-    match insert_text_format {\n-        InsertTextFormat::Snippet => lsp_types::InsertTextFormat::Snippet,\n-        InsertTextFormat::PlainText => lsp_types::InsertTextFormat::PlainText,\n-    }\n-}\n-\n pub(crate) fn completion_item_kind(\n     completion_item_kind: CompletionItemKind,\n ) -> lsp_types::CompletionItemKind {\n@@ -278,7 +269,9 @@ fn completion_item(\n         lsp_item.command = Some(command::trigger_parameter_hints());\n     }\n \n-    lsp_item.insert_text_format = Some(insert_text_format(item.insert_text_format()));\n+    if item.is_snippet() {\n+        lsp_item.insert_text_format = Some(lsp_types::InsertTextFormat::Snippet);\n+    }\n     if enable_imports_on_the_fly {\n         if let Some(import_edit) = item.import_to_add() {\n             let import_path = &import_edit.import.import_path;"}]}