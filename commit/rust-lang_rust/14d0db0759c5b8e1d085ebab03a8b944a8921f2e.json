{"sha": "14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZDBkYjA3NTljNWI4ZTFkMDg1ZWJhYjAzYThiOTQ0YTg5MjFmMmU=", "commit": {"author": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-01T03:14:09Z"}, "committer": {"name": "Nick Spain", "email": "nicholas.spain@stileeducation.com", "date": "2021-01-02T10:53:52Z"}, "message": "HasSource::source_old -> HasSource::source for places where proc-macros were special cased\n\nIn #6901 some special case handling for proc-macros was introduced to\nprevent panicing as they have no AST. Now the new HasSource::source\nmethod is used that returns an option.\n\nGenerally this was a pretty trivial change, the only thing of much\ninterest is that `hir::MacroDef` now implements `TryToNav` not `ToNav`\nas this allows us to handle `HasSource::source` now returning an option.", "tree": {"sha": "8dfb49f723094cc92d86e6d902309e5bc7ecf239", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dfb49f723094cc92d86e6d902309e5bc7ecf239"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "html_url": "https://github.com/rust-lang/rust/commit/14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/comments", "author": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nick96", "id": 9591268, "node_id": "MDQ6VXNlcjk1OTEyNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/9591268?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nick96", "html_url": "https://github.com/nick96", "followers_url": "https://api.github.com/users/nick96/followers", "following_url": "https://api.github.com/users/nick96/following{/other_user}", "gists_url": "https://api.github.com/users/nick96/gists{/gist_id}", "starred_url": "https://api.github.com/users/nick96/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nick96/subscriptions", "organizations_url": "https://api.github.com/users/nick96/orgs", "repos_url": "https://api.github.com/users/nick96/repos", "events_url": "https://api.github.com/users/nick96/events{/privacy}", "received_events_url": "https://api.github.com/users/nick96/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea4708c444509449b86c50b7b1b23f9ff5af4e97", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea4708c444509449b86c50b7b1b23f9ff5af4e97", "html_url": "https://github.com/rust-lang/rust/commit/ea4708c444509449b86c50b7b1b23f9ff5af4e97"}], "stats": {"total": 53, "additions": 11, "deletions": 42}, "files": [{"sha": "0612591fd26bad0763e15839856803a06ed654ad", "filename": "crates/completion/src/render/macro_.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Frender%2Fmacro_.rs?ref=14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "patch": "@@ -39,20 +39,13 @@ impl<'a> MacroRender<'a> {\n     }\n \n     fn render(&self, import_to_add: Option<ImportEdit>) -> Option<CompletionItem> {\n-        // FIXME: Currently proc-macro do not have ast-node,\n-        // such that it does not have source\n-        // more discussion: https://github.com/rust-analyzer/rust-analyzer/issues/6913\n-        if self.macro_.is_proc_macro() {\n-            return None;\n-        }\n-\n         let mut builder =\n             CompletionItem::new(CompletionKind::Reference, self.ctx.source_range(), &self.label())\n                 .kind(CompletionItemKind::Macro)\n                 .set_documentation(self.docs.clone())\n                 .set_deprecated(self.ctx.is_deprecated(self.macro_))\n                 .add_import(import_to_add)\n-                .detail(self.detail());\n+                .detail(self.detail()?);\n \n         let needs_bang = self.needs_bang();\n         builder = match self.ctx.snippet_cap() {\n@@ -95,10 +88,9 @@ impl<'a> MacroRender<'a> {\n         format!(\"{}!\", self.name)\n     }\n \n-    fn detail(&self) -> String {\n-        #[allow(deprecated)]\n-        let ast_node = self.macro_.source_old(self.ctx.db()).value;\n-        macro_label(&ast_node)\n+    fn detail(&self) -> Option<String> {\n+        let ast_node = self.macro_.source(self.ctx.db())?.value;\n+        Some(macro_label(&ast_node))\n     }\n }\n "}, {"sha": "62237f481723d61da8eb91728a05f98cd1df71d8", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "patch": "@@ -983,14 +983,7 @@ impl MacroDef {\n \n     /// XXX: this parses the file\n     pub fn name(self, db: &dyn HirDatabase) -> Option<Name> {\n-        // FIXME: Currently proc-macro do not have ast-node,\n-        // such that it does not have source\n-        // more discussion: https://github.com/rust-analyzer/rust-analyzer/issues/6913\n-        if self.is_proc_macro() {\n-            return None;\n-        }\n-        #[allow(deprecated)]\n-        self.source_old(db).value.name().map(|it| it.as_name())\n+        self.source(db)?.value.name().map(|it| it.as_name())\n     }\n \n     /// Indicate it is a proc-macro"}, {"sha": "5dc3f412873f0ddc19b27c262c9415698231ac8b", "filename": "crates/ide/src/display/navigation_target.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "patch": "@@ -210,15 +210,7 @@ impl ToNav for FileSymbol {\n impl TryToNav for Definition {\n     fn try_to_nav(&self, db: &RootDatabase) -> Option<NavigationTarget> {\n         match self {\n-            Definition::Macro(it) => {\n-                // FIXME: Currently proc-macro do not have ast-node,\n-                // such that it does not have source\n-                // more discussion: https://github.com/rust-analyzer/rust-analyzer/issues/6913\n-                if it.is_proc_macro() {\n-                    return None;\n-                }\n-                Some(it.to_nav(db))\n-            }\n+            Definition::Macro(it) => it.try_to_nav(db),\n             Definition::Field(it) => Some(it.to_nav(db)),\n             Definition::ModuleDef(it) => it.try_to_nav(db),\n             Definition::SelfType(it) => Some(it.to_nav(db)),\n@@ -366,18 +358,17 @@ impl ToNav for hir::Field {\n     }\n }\n \n-impl ToNav for hir::MacroDef {\n-    fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n-        #[allow(deprecated)]\n-        let src = self.source_old(db);\n+impl TryToNav for hir::MacroDef {\n+    fn try_to_nav(&self, db: &RootDatabase) -> Option<NavigationTarget> {\n+        let src = self.source(db)?;\n         log::debug!(\"nav target {:#?}\", src.value.syntax());\n         let mut res = NavigationTarget::from_named(\n             db,\n             src.as_ref().map(|it| it as &dyn ast::NameOwner),\n             SymbolKind::Macro,\n         );\n         res.docs = self.docs(db);\n-        res\n+        Some(res)\n     }\n }\n "}, {"sha": "a18dcdd8e20a189f2b01762c79229a1098d479e8", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14d0db0759c5b8e1d085ebab03a8b944a8921f2e/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=14d0db0759c5b8e1d085ebab03a8b944a8921f2e", "patch": "@@ -327,14 +327,7 @@ fn hover_for_definition(db: &RootDatabase, def: Definition) -> Option<Markup> {\n     let mod_path = definition_mod_path(db, &def);\n     return match def {\n         Definition::Macro(it) => {\n-            // FIXME: Currently proc-macro do not have ast-node,\n-            // such that it does not have source\n-            // more discussion: https://github.com/rust-analyzer/rust-analyzer/issues/6913\n-            if it.is_proc_macro() {\n-                return None;\n-            }\n-            #[allow(deprecated)]\n-            let label = macro_label(&it.source_old(db).value);\n+            let label = macro_label(&it.source(db)?.value);\n             from_def_source_labeled(db, it, Some(label), mod_path)\n         }\n         Definition::Field(def) => {"}]}