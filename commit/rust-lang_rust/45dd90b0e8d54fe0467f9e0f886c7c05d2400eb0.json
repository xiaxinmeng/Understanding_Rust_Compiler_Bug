{"sha": "45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZGQ5MGIwZThkNTRmZTA0NjdmOWUwZjg4NmM3YzA1ZDI0MDBlYjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-05T10:46:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-02-05T10:46:05Z"}, "message": "Cleanup", "tree": {"sha": "92dd8cb2f920a48a8d2c0ef16617e0ec46ebe5cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92dd8cb2f920a48a8d2c0ef16617e0ec46ebe5cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0", "html_url": "https://github.com/rust-lang/rust/commit/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9e1aab8803264a40023aa09600b0a8fab8e00ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e1aab8803264a40023aa09600b0a8fab8e00ff", "html_url": "https://github.com/rust-lang/rust/commit/c9e1aab8803264a40023aa09600b0a8fab8e00ff"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "885d5036d0b7ff7333fa860007e893cf9c65e490", "filename": "crates/ra_assists/src/assists/merge_match_arms.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fmerge_match_arms.rs?ref=45dd90b0e8d54fe0467f9e0f886c7c05d2400eb0", "patch": "@@ -1,6 +1,7 @@\n-use crate::{Assist, AssistCtx, AssistId, TextRange, TextUnit};\n use hir::db::HirDatabase;\n-use ra_syntax::ast::{AstNode, MatchArm};\n+use ra_syntax::ast::{self, AstNode};\n+\n+use crate::{Assist, AssistCtx, AssistId, TextRange, TextUnit};\n \n // Assist: merge_match_arms\n //\n@@ -27,12 +28,12 @@ use ra_syntax::ast::{AstNode, MatchArm};\n // }\n // ```\n pub(crate) fn merge_match_arms(ctx: AssistCtx<impl HirDatabase>) -> Option<Assist> {\n-    let current_arm = ctx.find_node_at_offset::<MatchArm>()?;\n+    let current_arm = ctx.find_node_at_offset::<ast::MatchArm>()?;\n \n     // We check if the following match arm matches this one. We could, but don't,\n     // compare to the previous match arm as well.\n     let next = current_arm.syntax().next_sibling();\n-    let next_arm = MatchArm::cast(next?)?;\n+    let next_arm = ast::MatchArm::cast(next?)?;\n \n     // Don't try to handle arms with guards for now - can add support for this later\n     if current_arm.guard().is_some() || next_arm.guard().is_some() {\n@@ -53,13 +54,6 @@ pub(crate) fn merge_match_arms(ctx: AssistCtx<impl HirDatabase>) -> Option<Assis\n     let cursor_to_end = current_arm.syntax().text_range().end() - ctx.frange.range.start();\n \n     ctx.add_assist(AssistId(\"merge_match_arms\"), \"Merge match arms\", |edit| {\n-        fn contains_placeholder(a: &MatchArm) -> bool {\n-            a.pats().any(|x| match x {\n-                ra_syntax::ast::Pat::PlaceholderPat(..) => true,\n-                _ => false,\n-            })\n-        }\n-\n         let pats = if contains_placeholder(&current_arm) || contains_placeholder(&next_arm) {\n             \"_\".into()\n         } else {\n@@ -83,6 +77,13 @@ pub(crate) fn merge_match_arms(ctx: AssistCtx<impl HirDatabase>) -> Option<Assis\n     })\n }\n \n+fn contains_placeholder(a: &ast::MatchArm) -> bool {\n+    a.pats().any(|x| match x {\n+        ra_syntax::ast::Pat::PlaceholderPat(..) => true,\n+        _ => false,\n+    })\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::merge_match_arms;"}]}