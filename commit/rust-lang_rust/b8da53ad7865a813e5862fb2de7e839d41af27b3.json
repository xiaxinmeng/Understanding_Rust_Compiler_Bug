{"sha": "b8da53ad7865a813e5862fb2de7e839d41af27b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4ZGE1M2FkNzg2NWE4MTNlNTg2MmZiMmRlN2U4MzlkNDFhZjI3YjM=", "commit": {"author": {"name": "Marcus Ball", "email": "marcus@marcusball.me", "date": "2017-02-28T20:46:10Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-02-28T20:46:10Z"}, "message": "Fix wrap_match_arms resulting in a missing comma (#1307)\n\n* Fix match arms missing comma with \"wrap_match_arms = false\"\r\n\r\n* remove assert; use body_suffix for comma\r\n\r\n* basic test case for issue 1127", "tree": {"sha": "58efbd2c0e53f8d19e2071ff0b1c1962112f7833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58efbd2c0e53f8d19e2071ff0b1c1962112f7833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8da53ad7865a813e5862fb2de7e839d41af27b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8da53ad7865a813e5862fb2de7e839d41af27b3", "html_url": "https://github.com/rust-lang/rust/commit/b8da53ad7865a813e5862fb2de7e839d41af27b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8da53ad7865a813e5862fb2de7e839d41af27b3/comments", "author": {"login": "marcusball", "id": 1077559, "node_id": "MDQ6VXNlcjEwNzc1NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1077559?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusball", "html_url": "https://github.com/marcusball", "followers_url": "https://api.github.com/users/marcusball/followers", "following_url": "https://api.github.com/users/marcusball/following{/other_user}", "gists_url": "https://api.github.com/users/marcusball/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusball/subscriptions", "organizations_url": "https://api.github.com/users/marcusball/orgs", "repos_url": "https://api.github.com/users/marcusball/repos", "events_url": "https://api.github.com/users/marcusball/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eff665c5c45d19d216cb8bd395021444000312b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/eff665c5c45d19d216cb8bd395021444000312b6", "html_url": "https://github.com/rust-lang/rust/commit/eff665c5c45d19d216cb8bd395021444000312b6"}], "stats": {"total": 78, "additions": 69, "deletions": 9}, "files": [{"sha": "edf48d6d7bbec333a6523bcf3d690bac709fd18a", "filename": "src/expr.rs", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b8da53ad7865a813e5862fb2de7e839d41af27b3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8da53ad7865a813e5862fb2de7e839d41af27b3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=b8da53ad7865a813e5862fb2de7e839d41af27b3", "patch": "@@ -1293,21 +1293,33 @@ impl Rewrite for ast::Arm {\n                 (\"{\", \"}\")\n             }\n         } else {\n-            (\"\", \"\")\n+            (\"\", \",\")\n         };\n \n+\n         let block_sep = match context.config.control_brace_style {\n             ControlBraceStyle::AlwaysNextLine => alt_block_sep + body_prefix + \"\\n\",\n             _ => String::from(\" \") + body_prefix + \"\\n\",\n         };\n-        Some(format!(\"{}{} =>{}{}{}\\n{}{}\",\n-                     attr_str.trim_left(),\n-                     pats_str,\n-                     block_sep,\n-                     indent_str,\n-                     next_line_body,\n-                     shape.indent.to_string(context.config),\n-                     body_suffix))\n+\n+        if context.config.wrap_match_arms {\n+            Some(format!(\"{}{} =>{}{}{}\\n{}{}\",\n+                         attr_str.trim_left(),\n+                         pats_str,\n+                         block_sep,\n+                         indent_str,\n+                         next_line_body,\n+                         shape.indent.to_string(context.config),\n+                         body_suffix))\n+        } else {\n+            Some(format!(\"{}{} =>{}{}{}{}\",\n+                         attr_str.trim_left(),\n+                         pats_str,\n+                         block_sep,\n+                         indent_str,\n+                         next_line_body,\n+                         body_suffix))\n+        }\n     }\n }\n "}, {"sha": "4820f5ea2295d84bdd2803c2989efe05036d6ea7", "filename": "tests/source/issue-1127.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b8da53ad7865a813e5862fb2de7e839d41af27b3/tests%2Fsource%2Fissue-1127.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8da53ad7865a813e5862fb2de7e839d41af27b3/tests%2Fsource%2Fissue-1127.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-1127.rs?ref=b8da53ad7865a813e5862fb2de7e839d41af27b3", "patch": "@@ -0,0 +1,23 @@\n+// rustfmt-max_width:120\n+// rustfmt-wrap_match_arms: false\n+// rustfmt-match_block_trailing_comma: true\n+\n+fn a_very_very_very_very_very_very_very_very_very_very_very_long_function_name() -> i32 {\n+    42\n+}\n+\n+enum TestEnum {\n+    AVeryVeryLongEnumName,\n+    AnotherVeryLongEnumName,\n+    TheLastVeryLongEnumName,\n+}\n+\n+fn main() {\n+    let var = TestEnum::AVeryVeryLongEnumName;\n+    let num = match var {\n+        TestEnum::AVeryVeryLongEnumName => a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+        TestEnum::AnotherVeryLongEnumName => a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+        TestEnum::TheLastVeryLongEnumName => a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+    };\n+}\n+"}, {"sha": "3d133f4ce9c0c275ed05eaad463d5ae1f6ac7f14", "filename": "tests/target/issue-1127.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b8da53ad7865a813e5862fb2de7e839d41af27b3/tests%2Ftarget%2Fissue-1127.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8da53ad7865a813e5862fb2de7e839d41af27b3/tests%2Ftarget%2Fissue-1127.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-1127.rs?ref=b8da53ad7865a813e5862fb2de7e839d41af27b3", "patch": "@@ -0,0 +1,25 @@\n+// rustfmt-max_width:120\n+// rustfmt-wrap_match_arms: false\n+// rustfmt-match_block_trailing_comma: true\n+\n+fn a_very_very_very_very_very_very_very_very_very_very_very_long_function_name() -> i32 {\n+    42\n+}\n+\n+enum TestEnum {\n+    AVeryVeryLongEnumName,\n+    AnotherVeryLongEnumName,\n+    TheLastVeryLongEnumName,\n+}\n+\n+fn main() {\n+    let var = TestEnum::AVeryVeryLongEnumName;\n+    let num = match var {\n+        TestEnum::AVeryVeryLongEnumName => \n+            a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+        TestEnum::AnotherVeryLongEnumName => \n+            a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+        TestEnum::TheLastVeryLongEnumName => \n+            a_very_very_very_very_very_very_very_very_very_very_very_long_function_name(),\n+    };\n+}"}]}