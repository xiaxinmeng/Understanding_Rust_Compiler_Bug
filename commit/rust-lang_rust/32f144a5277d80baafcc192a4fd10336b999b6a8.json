{"sha": "32f144a5277d80baafcc192a4fd10336b999b6a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZjE0NGE1Mjc3ZDgwYmFhZmNjMTkyYTRmZDEwMzM2Yjk5OWI2YTg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-10T11:30:39Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-10T11:52:07Z"}, "message": "Implement Clean<Crate> on hir::Crate directly", "tree": {"sha": "f64468190a7942acbc9ad6bcdbd9f40a3cf24c68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f64468190a7942acbc9ad6bcdbd9f40a3cf24c68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32f144a5277d80baafcc192a4fd10336b999b6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32f144a5277d80baafcc192a4fd10336b999b6a8", "html_url": "https://github.com/rust-lang/rust/commit/32f144a5277d80baafcc192a4fd10336b999b6a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32f144a5277d80baafcc192a4fd10336b999b6a8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78d9088e7784849dbfe14f1e550a08111d547622", "url": "https://api.github.com/repos/rust-lang/rust/commits/78d9088e7784849dbfe14f1e550a08111d547622", "html_url": "https://github.com/rust-lang/rust/commit/78d9088e7784849dbfe14f1e550a08111d547622"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "6f33bdd7f4d2f4cc59a7d3727224e3dba1b27244", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/32f144a5277d80baafcc192a4fd10336b999b6a8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f144a5277d80baafcc192a4fd10336b999b6a8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=32f144a5277d80baafcc192a4fd10336b999b6a8", "patch": "@@ -137,13 +137,15 @@ pub struct Crate {\n     pub masked_crates: FxHashSet<CrateNum>,\n }\n \n-// The `()` here is rather ugly and would be great to remove. Unfortunately, we\n-// already have a different Clean impl for `doctree::Module` which makes this\n-// the only way to easily disambiguate.\n-impl<'tcx> Clean<Crate> for ((), doctree::Module<'tcx>) {\n+impl Clean<Crate> for hir::Crate {\n+    // note that self here is ignored in favor of `cx.tcx.hir().krate()` since\n+    // that gets around tying self's lifetime to the '_ in cx.\n     fn clean(&self, cx: &DocContext<'_>) -> Crate {\n         use crate::visit_lib::LibEmbargoVisitor;\n \n+        let v = crate::visit_ast::RustdocVisitor::new(&cx);\n+        let module = v.visit(cx.tcx.hir().krate());\n+\n         {\n             let mut r = cx.renderinfo.borrow_mut();\n             r.deref_trait_did = cx.tcx.lang_items().deref_trait();\n@@ -161,7 +163,7 @@ impl<'tcx> Clean<Crate> for ((), doctree::Module<'tcx>) {\n \n         // Clean the crate, translating the entire libsyntax AST to one that is\n         // understood by rustdoc.\n-        let mut module = self.1.clean(cx);\n+        let mut module = module.clean(cx);\n         let mut masked_crates = FxHashSet::default();\n \n         match module.inner {"}, {"sha": "5138e4a23a47ea4520b5fe499a60f487ef4125f7", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/32f144a5277d80baafcc192a4fd10336b999b6a8/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f144a5277d80baafcc192a4fd10336b999b6a8/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=32f144a5277d80baafcc192a4fd10336b999b6a8", "patch": "@@ -30,7 +30,6 @@ use rustc_data_structures::sync::{self, Lrc};\n use std::sync::Arc;\n use std::rc::Rc;\n \n-use crate::visit_ast::RustdocVisitor;\n use crate::config::{Options as RustdocOptions, RenderOptions};\n use crate::clean;\n use crate::clean::{Clean, MAX_DEF_ID, AttributesExt};\n@@ -392,11 +391,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n             };\n             debug!(\"crate: {:?}\", tcx.hir().krate());\n \n-            let mut krate = {\n-                let v = RustdocVisitor::new(&ctxt);\n-                let module = v.visit(tcx.hir().krate());\n-                ((), module).clean(&ctxt)\n-            };\n+            let mut krate = tcx.hir().krate().clean(&ctxt);\n \n             fn report_deprecated_attr(name: &str, diag: &errors::Handler) {\n                 let mut msg = diag.struct_warn(&format!(\"the `#![doc({})]` attribute is \\"}]}