{"sha": "fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMWRlZDAyMjhlNWRiZDNiM2JjOGRkZDhkODc0NzQyMDhhYWViMWI=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-03-16T19:05:38Z"}, "committer": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-03-16T19:05:38Z"}, "message": "Merge pull request #773 from mcarton/rustup\n\nRustup to *1.9.0-nightly (c66d2380a 2016-03-15)*", "tree": {"sha": "5e42fc13077691ef8bf46735c859639db0f7555f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e42fc13077691ef8bf46735c859639db0f7555f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "html_url": "https://github.com/rust-lang/rust/commit/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e2aab05ccad9ee9ad1637f57def3a82ec2ebc64", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e2aab05ccad9ee9ad1637f57def3a82ec2ebc64", "html_url": "https://github.com/rust-lang/rust/commit/9e2aab05ccad9ee9ad1637f57def3a82ec2ebc64"}, {"sha": "0323d0b05b377af7e27d21f2cefcdf7dd1ead611", "url": "https://api.github.com/repos/rust-lang/rust/commits/0323d0b05b377af7e27d21f2cefcdf7dd1ead611", "html_url": "https://github.com/rust-lang/rust/commit/0323d0b05b377af7e27d21f2cefcdf7dd1ead611"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "dd675981fae5207a61deb85b9f64ecc0546baaa8", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.53\"\n+version = \"0.0.54\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "f81a05d43d5151c9c3f0dd7272a3d5e179894ab1", "filename": "src/escape.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/src%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/src%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fescape.rs?ref=fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "patch": "@@ -3,6 +3,7 @@ use rustc::lint::*;\n use rustc::middle::expr_use_visitor::*;\n use rustc::middle::infer;\n use rustc::middle::mem_categorization::{cmt, Categorization};\n+use rustc::middle::traits::ProjectionMode;\n use rustc::middle::ty::adjustment::AutoAdjustment;\n use rustc::middle::ty;\n use rustc::util::nodemap::NodeSet;\n@@ -54,7 +55,7 @@ impl LintPass for EscapePass {\n impl LateLintPass for EscapePass {\n     fn check_fn(&mut self, cx: &LateContext, _: visit::FnKind, decl: &FnDecl, body: &Block, _: Span, id: NodeId) {\n         let param_env = ty::ParameterEnvironment::for_item(cx.tcx, id);\n-        let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, Some(param_env));\n+        let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, Some(param_env), ProjectionMode::Any);\n         let mut v = EscapeDelegate {\n             cx: cx,\n             set: NodeSet(),"}, {"sha": "2934f1c4fba72f0de8ad0433f6f71f857f055ff2", "filename": "src/utils/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/src%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/src%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fmod.rs?ref=fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "patch": "@@ -2,6 +2,7 @@ use reexport::*;\n use rustc::front::map::Node;\n use rustc::lint::{LintContext, LateContext, Level, Lint};\n use rustc::middle::def_id::DefId;\n+use rustc::middle::traits::ProjectionMode;\n use rustc::middle::{cstore, def, infer, ty, traits};\n use rustc::session::Session;\n use rustc_front::hir::*;\n@@ -269,7 +270,7 @@ pub fn implements_trait<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ty: ty::Ty<'tcx>,\n                                   -> bool {\n     cx.tcx.populate_implementations_for_trait_if_necessary(trait_id);\n \n-    let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, None);\n+    let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, None, ProjectionMode::Any);\n     let obligation = traits::predicate_for_trait_def(cx.tcx,\n                                                      traits::ObligationCause::dummy(),\n                                                      trait_id,\n@@ -773,6 +774,6 @@ pub fn return_ty(fun: ty::Ty) -> Option<ty::Ty> {\n // FIXME: this works correctly for lifetimes bounds (`for <'a> Foo<'a>` == `for <'b> Foo<'b>` but\n // not for type parameters.\n pub fn same_tys<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, a: ty::Ty<'tcx>, b: ty::Ty<'tcx>) -> bool {\n-    let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, None);\n+    let infcx = infer::new_infer_ctxt(cx.tcx, &cx.tcx.tables, None, ProjectionMode::Any);\n     infcx.can_equate(&cx.tcx.erase_regions(&a), &cx.tcx.erase_regions(&b)).is_ok()\n }"}, {"sha": "775669dcbd508f0e2f06327855e7624630a74c6e", "filename": "tests/compile-fail/derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/tests%2Fcompile-fail%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b/tests%2Fcompile-fail%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fderive.rs?ref=fe1ded0228e5dbd3b3bc8ddd8d87474208aaeb1b", "patch": "@@ -3,6 +3,7 @@\n \n #![deny(warnings)]\n #![allow(dead_code)]\n+#![allow(unused_variables)] // Temporary fix for rustc false positive. To be removed.\n \n use std::hash::{Hash, Hasher};\n "}]}