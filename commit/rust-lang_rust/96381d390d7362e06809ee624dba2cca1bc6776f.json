{"sha": "96381d390d7362e06809ee624dba2cca1bc6776f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MzgxZDM5MGQ3MzYyZTA2ODA5ZWU2MjRkYmEyY2NhMWJjNjc3NmY=", "commit": {"author": {"name": "linux1", "email": "tmaloney@pdx.edu", "date": "2021-08-24T01:53:23Z"}, "committer": {"name": "linux1", "email": "tmaloney@pdx.edu", "date": "2021-08-24T01:53:23Z"}, "message": "Fix: added necessary prefix", "tree": {"sha": "773825246efca783c73baac37ec98a74ad7821dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/773825246efca783c73baac37ec98a74ad7821dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96381d390d7362e06809ee624dba2cca1bc6776f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96381d390d7362e06809ee624dba2cca1bc6776f", "html_url": "https://github.com/rust-lang/rust/commit/96381d390d7362e06809ee624dba2cca1bc6776f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96381d390d7362e06809ee624dba2cca1bc6776f/comments", "author": {"login": "Sl1mb0", "id": 56142018, "node_id": "MDQ6VXNlcjU2MTQyMDE4", "avatar_url": "https://avatars.githubusercontent.com/u/56142018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sl1mb0", "html_url": "https://github.com/Sl1mb0", "followers_url": "https://api.github.com/users/Sl1mb0/followers", "following_url": "https://api.github.com/users/Sl1mb0/following{/other_user}", "gists_url": "https://api.github.com/users/Sl1mb0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sl1mb0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sl1mb0/subscriptions", "organizations_url": "https://api.github.com/users/Sl1mb0/orgs", "repos_url": "https://api.github.com/users/Sl1mb0/repos", "events_url": "https://api.github.com/users/Sl1mb0/events{/privacy}", "received_events_url": "https://api.github.com/users/Sl1mb0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Sl1mb0", "id": 56142018, "node_id": "MDQ6VXNlcjU2MTQyMDE4", "avatar_url": "https://avatars.githubusercontent.com/u/56142018?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Sl1mb0", "html_url": "https://github.com/Sl1mb0", "followers_url": "https://api.github.com/users/Sl1mb0/followers", "following_url": "https://api.github.com/users/Sl1mb0/following{/other_user}", "gists_url": "https://api.github.com/users/Sl1mb0/gists{/gist_id}", "starred_url": "https://api.github.com/users/Sl1mb0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Sl1mb0/subscriptions", "organizations_url": "https://api.github.com/users/Sl1mb0/orgs", "repos_url": "https://api.github.com/users/Sl1mb0/repos", "events_url": "https://api.github.com/users/Sl1mb0/events{/privacy}", "received_events_url": "https://api.github.com/users/Sl1mb0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f623707b8dcaba260b547e1950a4679b3b40eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9f623707b8dcaba260b547e1950a4679b3b40eb", "html_url": "https://github.com/rust-lang/rust/commit/a9f623707b8dcaba260b547e1950a4679b3b40eb"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "ec0515b20bdfbd852eec8b163c6b1a38b1a0cc43", "filename": "src/test/assembly/asm/s390x-types.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/96381d390d7362e06809ee624dba2cca1bc6776f/src%2Ftest%2Fassembly%2Fasm%2Fs390x-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96381d390d7362e06809ee624dba2cca1bc6776f/src%2Ftest%2Fassembly%2Fasm%2Fs390x-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fasm%2Fs390x-types.rs?ref=96381d390d7362e06809ee624dba2cca1bc6776f", "patch": "@@ -51,7 +51,7 @@ extern \"Rust\" {\n macro_rules! check { ($func:ident, $ty:ty, $class:ident, $mov:literal) => {\n     #[no_mangle]\n     pub unsafe fn $func(x: $ty) -> $ty {\n-        dont_merge(stringify!(func));\n+        dont_merge(stringify!($func));\n \n         let y;\n         asm!(concat!($mov,\" {}, {}\"), out($class) y, in($class) x);\n@@ -62,7 +62,7 @@ macro_rules! check { ($func:ident, $ty:ty, $class:ident, $mov:literal) => {\n macro_rules! check_reg { ($func:ident, $ty:ty, $reg:tt, $mov:literal) => {\n     #[no_mangle]\n     pub unsafe fn $func(x: $ty) -> $ty {\n-        dont_merge(stringify!(func));\n+        dont_merge(stringify!($func));\n \n         let y;\n         asm!(concat!($mov, \" \", $reg, \", \", $reg), lateout($reg) y, in($reg) x);\n@@ -124,3 +124,9 @@ check!(reg_f32, f32, freg, \"ler\");\n // CHECK: ldr %f{{[0-9]+}}, %f{{[0-9]+}}\n // CHECK: #NO_APP\n check!(reg_f64, f64, freg, \"ldr\");\n+\n+// CHECK-LABEL: reg_ptr:\n+// CHECK: #APP\n+// CHECK: lgr %r{{[0-9]+}}, %r{{[0-9]+}}\n+// CHECK: #NO_APP\n+check!(reg_ptr, ptr, reg, \"lgr\");"}]}