{"sha": "1a54144349cf461e6cb6767607e90cc7e73a6e1c", "node_id": "C_kwDOAAsO6NoAKDFhNTQxNDQzNDljZjQ2MWU2Y2I2NzY3NjA3ZTkwY2M3ZTczYTZlMWM", "commit": {"author": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-31T03:27:51Z"}, "committer": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-31T03:27:51Z"}, "message": "add test for normalization in implied bounds query\n\nSee https://github.com/rust-lang/rust/issues/109799.", "tree": {"sha": "35039bc57366cd32a51c3c91187837cc48768833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35039bc57366cd32a51c3c91187837cc48768833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a54144349cf461e6cb6767607e90cc7e73a6e1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a54144349cf461e6cb6767607e90cc7e73a6e1c", "html_url": "https://github.com/rust-lang/rust/commit/1a54144349cf461e6cb6767607e90cc7e73a6e1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a54144349cf461e6cb6767607e90cc7e73a6e1c/comments", "author": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1d3610ac1ddd1cd605479274047fd0a3f37d220", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1d3610ac1ddd1cd605479274047fd0a3f37d220", "html_url": "https://github.com/rust-lang/rust/commit/c1d3610ac1ddd1cd605479274047fd0a3f37d220"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "898e5e9511e71c442e03920c7913a5992fde02c8", "filename": "tests/ui/implied-bounds/normalization-nested.lifetime.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1a54144349cf461e6cb6767607e90cc7e73a6e1c/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a54144349cf461e6cb6767607e90cc7e73a6e1c/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.lifetime.stderr?ref=1a54144349cf461e6cb6767607e90cc7e73a6e1c", "patch": "@@ -0,0 +1,18 @@\n+error[E0759]: `fn` parameter has lifetime `'x` but it needs to satisfy a `'static` lifetime requirement\n+  --> $DIR/normalization-nested.rs:35:20\n+   |\n+LL | pub fn test<'x>(_: Map<Vec<&'x ()>>, s: &'x str) -> &'static str {\n+   |                    ^^^^^^^^^^^^^^^^\n+   |                    |\n+   |                    this data with lifetime `'x`...\n+   |                    ...is used and required to live as long as `'static` here\n+   |\n+note: `'static` lifetime requirement introduced by this bound\n+  --> $DIR/normalization-nested.rs:33:14\n+   |\n+LL |     I::Item: 'static;\n+   |              ^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0759`."}, {"sha": "5f1cbb3f697793626b8c953f90dc01a21f56bad1", "filename": "tests/ui/implied-bounds/normalization-nested.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1a54144349cf461e6cb6767607e90cc7e73a6e1c/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a54144349cf461e6cb6767607e90cc7e73a6e1c/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fnormalization-nested.rs?ref=1a54144349cf461e6cb6767607e90cc7e73a6e1c", "patch": "@@ -0,0 +1,39 @@\n+// Test for normalization of projections that appear in the item bounds\n+// (versus those that appear directly in the input types).\n+// Both revisions should pass. `lifetime` revision is a bug.\n+//\n+// revisions: param_ty lifetime\n+// [param_ty] check-pass\n+// [lifetime] check-fail\n+// [lifetime] known-bug: #109799\n+\n+pub trait Iter {\n+    type Item;\n+}\n+\n+#[cfg(param_ty)]\n+impl<X, I> Iter for I\n+where\n+    I: IntoIterator<Item = X>,\n+{\n+    type Item = X;\n+}\n+\n+#[cfg(lifetime)]\n+impl<'x, I> Iter for I\n+where\n+    I: IntoIterator<Item = &'x ()>,\n+{\n+    type Item = &'x ();\n+}\n+\n+pub struct Map<I>(I)\n+where\n+    I: Iter,\n+    I::Item: 'static;\n+\n+pub fn test<'x>(_: Map<Vec<&'x ()>>, s: &'x str) -> &'static str {\n+    s\n+}\n+\n+fn main() {}"}]}