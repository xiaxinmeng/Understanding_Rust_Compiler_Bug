{"sha": "ed75d0686e1ab674636e784268b4b7f5e03c53de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNzVkMDY4NmUxYWI2NzQ2MzZlNzg0MjY4YjRiN2Y1ZTAzYzUzZGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-21T13:00:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-21T13:00:22Z"}, "message": "Auto merge of #83339 - Aaron1011:deep-recollect, r=petrochenkov\n\nPerform 'deep recollection' in test helper macros\n\nCurrently, the print helper macro performs 'recollection' by doing\n`token_stream.into_iter().collect()`. However, this will not affect\nnonterminals that occur nested inside delimited groups, since the\nwrapping delimited group will be left untouched.\n\nThis commit adds 'deep recollection', which recursively recollects every\ndelimited group in the token stream. As with normal recollection, we\nonly print out something if deep recollection results in a different\nstringified token stream.\n\nThis is useful for catching bugs where we update the AST of a\nnonterminal (which affects pretty-printing), but do not update the\nattatched `TokenStream`", "tree": {"sha": "067d2aab72f6e1a4ab91a009e840a1fbe430719b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/067d2aab72f6e1a4ab91a009e840a1fbe430719b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed75d0686e1ab674636e784268b4b7f5e03c53de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed75d0686e1ab674636e784268b4b7f5e03c53de", "html_url": "https://github.com/rust-lang/rust/commit/ed75d0686e1ab674636e784268b4b7f5e03c53de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed75d0686e1ab674636e784268b4b7f5e03c53de/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbf07c0b4f210ced7bd2785ab554e0d805644235", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf07c0b4f210ced7bd2785ab554e0d805644235", "html_url": "https://github.com/rust-lang/rust/commit/bbf07c0b4f210ced7bd2785ab554e0d805644235"}, {"sha": "6d7294a00c3f831ed7d60a530911bff67f4e54ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7294a00c3f831ed7d60a530911bff67f4e54ba", "html_url": "https://github.com/rust-lang/rust/commit/6d7294a00c3f831ed7d60a530911bff67f4e54ba"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "7a46aee462b7db456069e6aaff5c332860087819", "filename": "src/test/ui/proc-macro/auxiliary/test-macros.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs?ref=ed75d0686e1ab674636e784268b4b7f5e03c53de", "patch": "@@ -83,21 +83,52 @@ fn print_helper(input: TokenStream, kind: &str) -> TokenStream {\n     print_helper_ext(input, kind, true)\n }\n \n+fn deep_recollect(input: TokenStream) -> TokenStream {\n+    input.into_iter().map(|tree| {\n+        match tree {\n+            TokenTree::Group(group) => {\n+                let inner = deep_recollect(group.stream());\n+                let mut new_group = TokenTree::Group(\n+                    proc_macro::Group::new(group.delimiter(), inner)\n+                );\n+                new_group.set_span(group.span());\n+                new_group\n+            }\n+            _ => tree,\n+        }\n+    }).collect()\n+}\n+\n fn print_helper_ext(input: TokenStream, kind: &str, debug: bool) -> TokenStream {\n     let input_display = format!(\"{}\", input);\n     let input_debug = format!(\"{:#?}\", input);\n-    let recollected = input.into_iter().collect();\n+    let recollected = input.clone().into_iter().collect();\n     let recollected_display = format!(\"{}\", recollected);\n     let recollected_debug = format!(\"{:#?}\", recollected);\n+\n+    let deep_recollected = deep_recollect(input);\n+    let deep_recollected_display = format!(\"{}\", deep_recollected);\n+    let deep_recollected_debug = format!(\"{:#?}\", deep_recollected);\n+\n+\n+\n     println!(\"PRINT-{} INPUT (DISPLAY): {}\", kind, input_display);\n     if recollected_display != input_display {\n         println!(\"PRINT-{} RE-COLLECTED (DISPLAY): {}\", kind, recollected_display);\n     }\n+\n+    if deep_recollected_display != recollected_display {\n+        println!(\"PRINT-{} DEEP-RE-COLLECTED (DISPLAY): {}\", kind, deep_recollected_display);\n+    }\n+\n     if debug {\n         println!(\"PRINT-{} INPUT (DEBUG): {}\", kind, input_debug);\n         if recollected_debug != input_debug {\n             println!(\"PRINT-{} RE-COLLECTED (DEBUG): {}\", kind, recollected_debug);\n         }\n+        if deep_recollected_debug != recollected_debug {\n+            println!(\"PRINT-{} DEEP-RE-COLLETED (DEBUG): {}\", kind, deep_recollected_debug);\n+        }\n     }\n     recollected\n }"}, {"sha": "9b467a5970bab0d2df0c9f93c3c9bc8c592f6b71", "filename": "src/test/ui/proc-macro/issue-78675-captured-inner-attrs.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout?ref=ed75d0686e1ab674636e784268b4b7f5e03c53de", "patch": "@@ -1,6 +1,7 @@\n PRINT-BANG INPUT (DISPLAY): foo ! { #[fake_attr] mod bar {\n     #![doc = r\" Foo\"]\n } }\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): foo ! { #[fake_attr] mod bar { # ! [doc = r\" Foo\"] } }\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"foo\","}, {"sha": "4ffe3f35e8e42fe10954cd218d5ff35d184ed7c0", "filename": "src/test/ui/proc-macro/nodelim-groups.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/ed75d0686e1ab674636e784268b4b7f5e03c53de/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout?ref=ed75d0686e1ab674636e784268b4b7f5e03c53de", "patch": "@@ -71,6 +71,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): \"hi\" \"hello\".len() + \"world\".len() (1 + 1)\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): \"hi\" \"hello\" . len() + \"world\" . len() (1 + 1)\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Literal {\n         kind: Str,"}]}