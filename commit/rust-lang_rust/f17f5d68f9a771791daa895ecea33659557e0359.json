{"sha": "f17f5d68f9a771791daa895ecea33659557e0359", "node_id": "C_kwDOAAsO6NoAKGYxN2Y1ZDY4ZjlhNzcxNzkxZGFhODk1ZWNlYTMzNjU5NTU3ZTAzNTk", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T19:23:38Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:08:02Z"}, "message": "move tests", "tree": {"sha": "d1f15627b2d64b7a41cfbe31d83e3702d78bbdb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1f15627b2d64b7a41cfbe31d83e3702d78bbdb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f17f5d68f9a771791daa895ecea33659557e0359", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f17f5d68f9a771791daa895ecea33659557e0359", "html_url": "https://github.com/rust-lang/rust/commit/f17f5d68f9a771791daa895ecea33659557e0359", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f17f5d68f9a771791daa895ecea33659557e0359/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a47dba761b706e747bc9e8728e14a7b9aeba5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a47dba761b706e747bc9e8728e14a7b9aeba5b0", "html_url": "https://github.com/rust-lang/rust/commit/3a47dba761b706e747bc9e8728e14a7b9aeba5b0"}], "stats": {"total": 115, "additions": 69, "deletions": 46}, "files": [{"sha": "ae93ce2ae8d9158ed90c3c745d6baa826eb90eff", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f17f5d68f9a771791daa895ecea33659557e0359/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17f5d68f9a771791daa895ecea33659557e0359/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=f17f5d68f9a771791daa895ecea33659557e0359", "patch": "@@ -635,3 +635,72 @@ macro panic_2015 {\n \"#]],\n     );\n }\n+\n+#[test]\n+fn test_path() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($p:path) => { fn foo() { let a = $p; } }\n+}\n+\n+m! { foo }\n+\n+m! { bar::<u8>::baz::<u8> }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($p:path) => { fn foo() { let a = $p; } }\n+}\n+\n+fn foo() {\n+    let a = foo;\n+}\n+\n+fn foo() {\n+    let a = bar::<u8>::baz::<u8> ;\n+}\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_two_paths() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($i:path, $j:path) => { fn foo() { let a = $ i; let b = $j; } }\n+}\n+m! { foo, bar }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($i:path, $j:path) => { fn foo() { let a = $ i; let b = $j; } }\n+}\n+fn foo() {\n+    let a = foo;\n+    let b = bar;\n+}\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_path_with_path() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($p:path) => { fn foo() { let a = $p::bar; } }\n+}\n+m! { foo }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($p:path) => { fn foo() { let a = $p::bar; } }\n+}\n+fn foo() {\n+    let a = foo::bar;\n+}\n+\"#]],\n+    );\n+}"}, {"sha": "b3e30391f7cd43648098cc5c6438703310b86271", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f17f5d68f9a771791daa895ecea33659557e0359/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17f5d68f9a771791daa895ecea33659557e0359/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=f17f5d68f9a771791daa895ecea33659557e0359", "patch": "@@ -101,52 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_path() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:path) => {\n-                fn foo() { let a = $ i; }\n-            }\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\"foo! { foo }\", \"fn foo () {let a = foo ;}\")\n-    .assert_expand_items(\n-        \"foo! { bar::<u8>::baz::<u8> }\",\n-        \"fn foo () {let a = bar ::< u8 >:: baz ::< u8 > ;}\",\n-    );\n-}\n-\n-#[test]\n-fn test_two_paths() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:path, $ j:path) => {\n-                fn foo() { let a = $ i; let b = $j; }\n-            }\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\"foo! { foo, bar }\", \"fn foo () {let a = foo ; let b = bar ;}\");\n-}\n-\n-#[test]\n-fn test_path_with_path() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:path) => {\n-                fn foo() { let a = $ i :: bar; }\n-            }\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\"foo! { foo }\", \"fn foo () {let a = foo :: bar ;}\");\n-}\n-\n #[test]\n fn test_expr() {\n     parse_macro("}]}