{"sha": "12433a78871610edfccc82442846615872747e06", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyNDMzYTc4ODcxNjEwZWRmY2NjODI0NDI4NDY2MTU4NzI3NDdlMDY=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-01-31T14:28:31Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2019-02-01T13:36:51Z"}, "message": "split hirdatabase", "tree": {"sha": "f891a768fe4f92e002166b6fac891d7dedf320b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f891a768fe4f92e002166b6fac891d7dedf320b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12433a78871610edfccc82442846615872747e06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12433a78871610edfccc82442846615872747e06", "html_url": "https://github.com/rust-lang/rust/commit/12433a78871610edfccc82442846615872747e06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12433a78871610edfccc82442846615872747e06/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21c593593163c22b996f7c8bffe05b9708f5b2d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/21c593593163c22b996f7c8bffe05b9708f5b2d0", "html_url": "https://github.com/rust-lang/rust/commit/21c593593163c22b996f7c8bffe05b9708f5b2d0"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "7183b1630d7e97b4f043e9d6b1ceb3bdbd880d43", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/12433a78871610edfccc82442846615872747e06/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12433a78871610edfccc82442846615872747e06/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=12433a78871610edfccc82442846615872747e06", "patch": "@@ -19,8 +19,8 @@ use crate::{\n     ids::SourceFileItemId,\n };\n \n-#[salsa::query_group(HirDatabaseStorage)]\n-pub trait HirDatabase: SourceDatabase + AsRef<HirInterner> {\n+#[salsa::query_group(PersistentHirDatabaseStorage)]\n+pub trait PersistentHirDatabase: SourceDatabase + AsRef<HirInterner> {\n     #[salsa::invoke(HirFileId::hir_parse)]\n     fn hir_parse(&self, file_id: HirFileId) -> TreeArc<SourceFile>;\n \n@@ -36,21 +36,9 @@ pub trait HirDatabase: SourceDatabase + AsRef<HirInterner> {\n     #[salsa::invoke(crate::adt::EnumData::enum_data_query)]\n     fn enum_data(&self, e: Enum) -> Arc<EnumData>;\n \n-    #[salsa::invoke(crate::ty::infer)]\n-    fn infer(&self, func: Function) -> Arc<InferenceResult>;\n-\n-    #[salsa::invoke(crate::ty::type_for_def)]\n-    fn type_for_def(&self, def: TypableDef) -> Ty;\n-\n-    #[salsa::invoke(crate::ty::type_for_field)]\n-    fn type_for_field(&self, field: StructField) -> Ty;\n-\n     #[salsa::invoke(query_definitions::file_items)]\n     fn file_items(&self, file_id: HirFileId) -> Arc<SourceFileItems>;\n \n-    #[salsa::invoke(query_definitions::file_item)]\n-    fn file_item(&self, source_item_id: SourceItemId) -> TreeArc<SyntaxNode>;\n-\n     #[salsa::invoke(crate::module_tree::Submodule::submodules_query)]\n     fn submodules(\n         &self,\n@@ -88,15 +76,33 @@ pub trait HirDatabase: SourceDatabase + AsRef<HirInterner> {\n     #[salsa::invoke(crate::ty::method_resolution::CrateImplBlocks::impls_in_crate_query)]\n     fn impls_in_crate(&self, krate: Crate) -> Arc<CrateImplBlocks>;\n \n-    #[salsa::invoke(crate::expr::body_hir)]\n-    fn body_hir(&self, func: Function) -> Arc<crate::expr::Body>;\n-\n-    #[salsa::invoke(crate::expr::body_syntax_mapping)]\n-    fn body_syntax_mapping(&self, func: Function) -> Arc<crate::expr::BodySyntaxMapping>;\n-\n     #[salsa::invoke(crate::generics::GenericParams::generic_params_query)]\n     fn generic_params(&self, def: GenericDef) -> Arc<GenericParams>;\n \n     #[salsa::invoke(crate::FnSignature::fn_signature_query)]\n     fn fn_signature(&self, func: Function) -> Arc<FnSignature>;\n }\n+\n+#[salsa::query_group(HirDatabaseStorage)]\n+pub trait HirDatabase: PersistentHirDatabase {\n+    #[salsa::invoke(query_definitions::fn_scopes)]\n+    fn fn_scopes(&self, func: Function) -> Arc<FnScopes>;\n+\n+    #[salsa::invoke(query_definitions::file_item)]\n+    fn file_item(&self, source_item_id: SourceItemId) -> TreeArc<SyntaxNode>;\n+\n+    #[salsa::invoke(crate::ty::infer)]\n+    fn infer(&self, func: Function) -> Arc<InferenceResult>;\n+\n+    #[salsa::invoke(crate::ty::type_for_def)]\n+    fn type_for_def(&self, def: TypableDef) -> Ty;\n+\n+    #[salsa::invoke(crate::ty::type_for_field)]\n+    fn type_for_field(&self, field: StructField) -> Ty;\n+\n+    #[salsa::invoke(crate::expr::body_hir)]\n+    fn body_hir(&self, func: Function) -> Arc<crate::expr::Body>;\n+\n+    #[salsa::invoke(crate::expr::body_syntax_mapping)]\n+    fn body_syntax_mapping(&self, func: Function) -> Arc<crate::expr::BodySyntaxMapping>;\n+}"}]}