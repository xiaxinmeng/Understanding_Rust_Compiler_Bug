{"sha": "cb0097f7d82e58e0ac84e776ea367b11ac6e90cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMDA5N2Y3ZDgyZTU4ZTBhYzg0ZTc3NmVhMzY3YjExYWM2ZTkwY2M=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-22T23:12:48Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-22T23:12:48Z"}, "message": "Use multiple lines for function calls with 0 arg which exceeds max width\n\ne.g.\n\nfoo(\n)", "tree": {"sha": "49357bae257a0b2195d747e050b3c64b59be72e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49357bae257a0b2195d747e050b3c64b59be72e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc", "html_url": "https://github.com/rust-lang/rust/commit/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5a8878f7e79bbb1ea77a15c369ccfd17e620524", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5a8878f7e79bbb1ea77a15c369ccfd17e620524", "html_url": "https://github.com/rust-lang/rust/commit/c5a8878f7e79bbb1ea77a15c369ccfd17e620524"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "d45e12514fe6d50f58b1c6d86d9635bba919074f", "filename": "rustfmt-core/src/expr.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc/rustfmt-core%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb0097f7d82e58e0ac84e776ea367b11ac6e90cc/rustfmt-core%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fexpr.rs?ref=cb0097f7d82e58e0ac84e776ea367b11ac6e90cc", "patch": "@@ -2327,9 +2327,16 @@ pub fn wrap_args_with_parens(\n     shape: Shape,\n     nested_shape: Shape,\n ) -> String {\n+    let paren_overhead = paren_overhead(context);\n+    let fits_one_line = args_str.len() + paren_overhead <= shape.width;\n+    let extend_width = if args_str.is_empty() {\n+        paren_overhead\n+    } else {\n+        paren_overhead / 2\n+    };\n     if !context.use_block_indent()\n-        || (context.inside_macro && !args_str.contains('\\n')\n-            && args_str.len() + paren_overhead(context) <= shape.width) || is_extendable\n+        || (context.inside_macro && !args_str.contains('\\n') && fits_one_line)\n+        || (is_extendable && extend_width <= shape.width)\n     {\n         let mut result = String::with_capacity(args_str.len() + 4);\n         if context.config.spaces_within_parens_and_brackets() && !args_str.is_empty() {\n@@ -2348,8 +2355,10 @@ pub fn wrap_args_with_parens(\n         let mut result =\n             String::with_capacity(args_str.len() + 2 + indent_str.len() + nested_indent_str.len());\n         result.push_str(\"(\");\n-        result.push_str(&nested_indent_str);\n-        result.push_str(args_str);\n+        if !args_str.is_empty() {\n+            result.push_str(&nested_indent_str);\n+            result.push_str(args_str);\n+        }\n         result.push_str(&indent_str);\n         result.push_str(\")\");\n         result"}]}