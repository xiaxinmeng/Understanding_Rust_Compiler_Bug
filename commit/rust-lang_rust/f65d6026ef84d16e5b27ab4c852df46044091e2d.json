{"sha": "f65d6026ef84d16e5b27ab4c852df46044091e2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NWQ2MDI2ZWY4NGQxNmU1YjI3YWI0Yzg1MmRmNDYwNDQwOTFlMmQ=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-18T23:28:58Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T19:12:25Z"}, "message": "Started playing with macros to make receiving easier", "tree": {"sha": "e1407612fd16a0ccbfd44dd535eb0b68aa245bbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1407612fd16a0ccbfd44dd535eb0b68aa245bbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f65d6026ef84d16e5b27ab4c852df46044091e2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f65d6026ef84d16e5b27ab4c852df46044091e2d", "html_url": "https://github.com/rust-lang/rust/commit/f65d6026ef84d16e5b27ab4c852df46044091e2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f65d6026ef84d16e5b27ab4c852df46044091e2d/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6535da84176bb1a72871a89740b0def9221cc351", "url": "https://api.github.com/repos/rust-lang/rust/commits/6535da84176bb1a72871a89740b0def9221cc351", "html_url": "https://github.com/rust-lang/rust/commit/6535da84176bb1a72871a89740b0def9221cc351"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "d811eaacbe1c9557b4aed671521d53e87dd83e17", "filename": "src/test/run-pass/pipe-bank-proto.rs", "status": "modified", "additions": 72, "deletions": 6, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/f65d6026ef84d16e5b27ab4c852df46044091e2d/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f65d6026ef84d16e5b27ab4c852df46044091e2d/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-bank-proto.rs?ref=f65d6026ef84d16e5b27ab4c852df46044091e2d", "patch": "@@ -32,20 +32,86 @@ proto! bank {\n     }\n }\n \n-fn macros() {\n-    #macro[\n-        [#move[x],\n-         unsafe { let y <- *ptr::addr_of(x); y }]\n-    ];\n+macro_rules! move {\n+    { $x:expr } => { unsafe { let y <- *ptr::addr_of($x); y } }\n }\n \n+fn switch<T: send, U>(+endp: pipes::recv_packet<T>,\n+                      f: fn(+option<T>) -> U) -> U {\n+    f(pipes::try_recv(endp))\n+}\n+\n+fn move<T>(-x: T) -> T { x }\n+\n+macro_rules! follow {\n+    { \n+        $($message:path($($x: ident),+) => $next:ident $e:expr)+\n+    } => (\n+        |m| alt move(m) {\n+          $(some($message($($x,)* next)) {\n+            let $next = move!{next};\n+            $e })+\n+          _ { fail }\n+        }\n+    );\n+\n+    { \n+        $($message:path => $next:ident $e:expr)+\n+    } => (\n+        |m| alt move(m) {\n+            $(some($message(next)) {\n+                let $next = move!{next};\n+                $e })+\n+                _ { fail }\n+        } \n+    )\n+}\n+\n+/*\n+fn client_follow(+bank: bank::client::login) {\n+    import bank::*;\n+\n+    let bank = client::login(bank, ~\"theincredibleholk\", ~\"1234\");\n+    let bank = switch(bank, follow! {\n+        ok => connected { connected }\n+        invalid => _next { fail ~\"bank closed the connected\" }\n+    });\n+\n+    /* // potential alternate syntax\n+    let bank = recv_alt! {\n+        bank => {\n+            | ok -> connected { connected }\n+            | invalid -> _next { fail }\n+        }\n+        bank2 => {\n+            | foo -> _n { fail }\n+        }\n+    }\n+    */\n+\n+    let bank = client::deposit(bank, 100.00);\n+    let bank = client::withdrawal(bank, 50.00);\n+    alt try_recv(bank) {\n+      some(money(m, _)) {\n+        io::println(~\"Yay! I got money!\");\n+      }\n+      some(insufficient_funds(_)) {\n+        fail ~\"someone stole my money\"\n+      }\n+      none {\n+        fail ~\"bank closed the connection\"\n+      }\n+    }    \n+}\n+*/\n+\n fn bank_client(+bank: bank::client::login) {\n     import bank::*;\n \n     let bank = client::login(bank, ~\"theincredibleholk\", ~\"1234\");\n     let bank = alt try_recv(bank) {\n       some(ok(connected)) {\n-        #move(connected)\n+        move!{connected}\n       }\n       some(invalid(_)) { fail ~\"login unsuccessful\" }\n       none { fail ~\"bank closed the connection\" }"}]}