{"sha": "6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae", "node_id": "C_kwDOAAsO6NoAKDZiMTljZjlmNzQzOGMxZWY3MTVlNWZiOWE0ZGZmNTA4ZjhlNzRkYWU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2021-12-15T00:14:21Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-14T20:05:35Z"}, "message": "rustdoc: remove some unnecessary sigils.", "tree": {"sha": "bc18689e0967a75d2544694fe900915020c05817", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc18689e0967a75d2544694fe900915020c05817"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae", "html_url": "https://github.com/rust-lang/rust/commit/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e4637cf4d7cfb527cf7ec6e44dfb36e1e008985", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e4637cf4d7cfb527cf7ec6e44dfb36e1e008985", "html_url": "https://github.com/rust-lang/rust/commit/1e4637cf4d7cfb527cf7ec6e44dfb36e1e008985"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b6cb0fbc76a1961a697ebdc5f63818a3cb5b4b2d", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=6b19cf9f7438c1ef715e5fb9a4dff508f8e74dae", "patch": "@@ -786,7 +786,7 @@ crate fn anchor<'a, 'cx: 'a>(\n                 url,\n                 short_ty,\n                 join_with_double_colon(&fqp),\n-                &*text.as_str()\n+                text.as_str()\n             )\n         } else {\n             write!(f, \"{}\", text)"}]}