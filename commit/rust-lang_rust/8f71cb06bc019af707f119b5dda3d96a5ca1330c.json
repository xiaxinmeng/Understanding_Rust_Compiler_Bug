{"sha": "8f71cb06bc019af707f119b5dda3d96a5ca1330c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNzFjYjA2YmMwMTlhZjcwN2YxMTliNWRkYTNkOTZhNWNhMTMzMGM=", "commit": {"author": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-02T07:08:08Z"}, "committer": {"name": "P1start", "email": "rewi-github@whanau.org", "date": "2014-08-12T03:33:05Z"}, "message": "Implement Index for TrieMap", "tree": {"sha": "c8142c6e83f0a96998a115b2912c362127ba8065", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8142c6e83f0a96998a115b2912c362127ba8065"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f71cb06bc019af707f119b5dda3d96a5ca1330c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f71cb06bc019af707f119b5dda3d96a5ca1330c", "html_url": "https://github.com/rust-lang/rust/commit/8f71cb06bc019af707f119b5dda3d96a5ca1330c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f71cb06bc019af707f119b5dda3d96a5ca1330c/comments", "author": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ftxqxd", "id": 2055302, "node_id": "MDQ6VXNlcjIwNTUzMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2055302?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ftxqxd", "html_url": "https://github.com/ftxqxd", "followers_url": "https://api.github.com/users/ftxqxd/followers", "following_url": "https://api.github.com/users/ftxqxd/following{/other_user}", "gists_url": "https://api.github.com/users/ftxqxd/gists{/gist_id}", "starred_url": "https://api.github.com/users/ftxqxd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ftxqxd/subscriptions", "organizations_url": "https://api.github.com/users/ftxqxd/orgs", "repos_url": "https://api.github.com/users/ftxqxd/repos", "events_url": "https://api.github.com/users/ftxqxd/events{/privacy}", "received_events_url": "https://api.github.com/users/ftxqxd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b8f9c3f666e3a0533da0f3a00188689fc60cb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/11b8f9c3f666e3a0533da0f3a00188689fc60cb4", "html_url": "https://github.com/rust-lang/rust/commit/11b8f9c3f666e3a0533da0f3a00188689fc60cb4"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "c3dcebfc815b1fd4cddbe1715e4d733a30ff7139", "filename": "src/libcollections/trie.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8f71cb06bc019af707f119b5dda3d96a5ca1330c/src%2Flibcollections%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f71cb06bc019af707f119b5dda3d96a5ca1330c/src%2Flibcollections%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie.rs?ref=8f71cb06bc019af707f119b5dda3d96a5ca1330c", "patch": "@@ -502,6 +502,21 @@ impl<S: Writer, T: Hash<S>> Hash<S> for TrieMap<T> {\n     }\n }\n \n+impl<T> Index<uint, T> for TrieMap<T> {\n+    #[inline]\n+    fn index<'a>(&'a self, i: &uint) -> &'a T {\n+        self.find(i).expect(\"key not present\")\n+    }\n+}\n+\n+// FIXME(#12825) Indexing will always try IndexMut first and that causes issues.\n+/*impl<T> IndexMut<uint, T> for TrieMap<T> {\n+    #[inline]\n+    fn index_mut<'a>(&'a mut self, i: &uint) -> &'a mut T {\n+        self.find_mut(i).expect(\"key not present\")\n+    }\n+}*/\n+\n /// A set implemented as a radix trie.\n ///\n /// # Example\n@@ -1391,6 +1406,29 @@ mod test_map {\n         assert!(map_str == \"{1: a, 2: b}\".to_string());\n         assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n     }\n+\n+    #[test]\n+    fn test_index() {\n+        let mut map = TrieMap::new();\n+\n+        map.insert(1, 2i);\n+        map.insert(2, 1i);\n+        map.insert(3, 4i);\n+\n+        assert_eq!(map[2], 1);\n+    }\n+\n+    #[test]\n+    #[should_fail]\n+    fn test_index_nonexistent() {\n+        let mut map = TrieMap::new();\n+\n+        map.insert(1, 2i);\n+        map.insert(2, 1i);\n+        map.insert(3, 4i);\n+\n+        map[4];\n+    }\n }\n \n #[cfg(test)]"}]}