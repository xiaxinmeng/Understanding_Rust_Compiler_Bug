{"sha": "2461b3102607c1cb4469c94bbe95d67db6c5e54d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NjFiMzEwMjYwN2MxY2I0NDY5Yzk0YmJlOTVkNjdkYjZjNWU1NGQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-10-01T16:03:26Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2013-10-01T16:03:26Z"}, "message": "incoporate suggestion from huonw to move code into lint.rs", "tree": {"sha": "66238e4afb8d6e866c77118b749a078004e9b150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66238e4afb8d6e866c77118b749a078004e9b150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2461b3102607c1cb4469c94bbe95d67db6c5e54d", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2461b3102607c1cb4469c94bbe95d67db6c5e54d", "html_url": "https://github.com/rust-lang/rust/commit/2461b3102607c1cb4469c94bbe95d67db6c5e54d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2461b3102607c1cb4469c94bbe95d67db6c5e54d/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88d34ff2498e3ca8020c79c63d4501f749831f2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/88d34ff2498e3ca8020c79c63d4501f749831f2f", "html_url": "https://github.com/rust-lang/rust/commit/88d34ff2498e3ca8020c79c63d4501f749831f2f"}], "stats": {"total": 40, "additions": 21, "deletions": 19}, "files": [{"sha": "c891e57ff39aaf3da4ed3f0134e2cd8a0d14b5ea", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2461b3102607c1cb4469c94bbe95d67db6c5e54d/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2461b3102607c1cb4469c94bbe95d67db6c5e54d/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=2461b3102607c1cb4469c94bbe95d67db6c5e54d", "patch": "@@ -11,7 +11,6 @@\n \n use middle::const_eval::{compare_const_vals, lookup_const_by_id};\n use middle::const_eval::{eval_const_expr, const_val, const_bool, const_float};\n-use middle::lint::non_uppercase_pattern_statics;\n use middle::pat_util::*;\n use middle::ty::*;\n use middle::ty;\n@@ -135,29 +134,11 @@ pub fn check_arms(cx: &MatchCheckCtxt, arms: &[Arm]) {\n                 }\n             };\n \n-            // Lint for constants that look like binding identifiers (#7526)\n-            let pat_matches_non_uppercase_static: &fn(@Pat) = |p| {\n-                let msg = \"static constant in pattern should be all caps\";\n-                match (&p.node, cx.tcx.def_map.find(&p.id)) {\n-                    (&PatIdent(_, ref path, _), Some(&DefStatic(_, false))) => {\n-                        // last identifier alone is right choice for this lint.\n-                        let ident = path.segments.last().identifier;\n-                        let s = cx.tcx.sess.str_of(ident);\n-                        if s.iter().any(|c| c.is_lowercase()) {\n-                            cx.tcx.sess.add_lint(non_uppercase_pattern_statics,\n-                                                 p.id, path.span, msg.to_owned());\n-                        }\n-                    }\n-                    _ => {}\n-                }\n-            };\n-\n             do walk_pat(*pat) |p| {\n                 if pat_matches_nan(p) {\n                     cx.tcx.sess.span_warn(p.span, \"unmatchable NaN in pattern, \\\n                                                    use the is_nan method in a guard instead\");\n                 }\n-                pat_matches_non_uppercase_static(p);\n                 true\n             };\n "}, {"sha": "b3d595c6efb7224904476ba31ead02cd38c1cf23", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2461b3102607c1cb4469c94bbe95d67db6c5e54d/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2461b3102607c1cb4469c94bbe95d67db6c5e54d/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=2461b3102607c1cb4469c94bbe95d67db6c5e54d", "patch": "@@ -1118,6 +1118,22 @@ fn check_item_non_uppercase_statics(cx: &Context, it: &ast::item) {\n     }\n }\n \n+fn check_pat_non_uppercase_statics(cx: &Context, p: &ast::Pat) {\n+    // Lint for constants that look like binding identifiers (#7526)\n+    match (&p.node, cx.tcx.def_map.find(&p.id)) {\n+        (&ast::PatIdent(_, ref path, _), Some(&ast::DefStatic(_, false))) => {\n+            // last identifier alone is right choice for this lint.\n+            let ident = path.segments.last().identifier;\n+            let s = cx.tcx.sess.str_of(ident);\n+            if s.iter().any(|c| c.is_lowercase()) {\n+                cx.span_lint(non_uppercase_pattern_statics, path.span,\n+                             \"static constant in pattern should be all caps\");\n+            }\n+        }\n+        _ => {}\n+    }\n+}\n+\n struct UnusedUnsafeLintVisitor { stopping_on_items: bool }\n \n impl SubitemStoppableVisitor for UnusedUnsafeLintVisitor {\n@@ -1524,6 +1540,11 @@ struct LintCheckVisitor;\n \n impl Visitor<@mut Context> for LintCheckVisitor {\n \n+    fn visit_pat(&mut self, p:@ast::Pat, cx: @mut Context) {\n+        check_pat_non_uppercase_statics(cx, p);\n+        visit::walk_pat(self, p, cx);\n+    }\n+\n     fn visit_item(&mut self, it:@ast::item, cx: @mut Context) {\n \n                 do cx.with_lint_attrs(it.attrs) {"}]}