{"sha": "9f3d133813e519ea769c23565843587dea8d55b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmM2QxMzM4MTNlNTE5ZWE3NjljMjM1NjU4NDM1ODdkZWE4ZDU1YjI=", "commit": {"author": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-22T13:36:57Z"}, "committer": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-22T13:36:57Z"}, "message": "Prefer TYPE_FIRST", "tree": {"sha": "098add8ec62789f334163dd30ff7e00490f1bb44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/098add8ec62789f334163dd30ff7e00490f1bb44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f3d133813e519ea769c23565843587dea8d55b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f3d133813e519ea769c23565843587dea8d55b2", "html_url": "https://github.com/rust-lang/rust/commit/9f3d133813e519ea769c23565843587dea8d55b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f3d133813e519ea769c23565843587dea8d55b2/comments", "author": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8198cde13b8dc7c04190e5341bce3f6a0315e99b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8198cde13b8dc7c04190e5341bce3f6a0315e99b", "html_url": "https://github.com/rust-lang/rust/commit/8198cde13b8dc7c04190e5341bce3f6a0315e99b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c626abcfda2566b15f708b7c42c0bef5fdddc1b1", "filename": "crates/ra_syntax/src/grammar/types.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9f3d133813e519ea769c23565843587dea8d55b2/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f3d133813e519ea769c23565843587dea8d55b2/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar%2Ftypes.rs?ref=9f3d133813e519ea769c23565843587dea8d55b2", "patch": "@@ -37,10 +37,10 @@ fn type_with_bounds_cond(p: &mut Parser, allow_bounds: bool) {\n }\n \n pub(super) fn is_type_start(p: &mut Parser) -> bool {\n-    match p.current() {\n-        L_PAREN | EXCL | STAR | L_BRACK | AMP | UNDERSCORE | FN_KW | FOR_KW | IMPL_KW | DYN_KW\n-        | L_ANGLE => true,\n-        _ => paths::is_path_start(p),\n+    if TYPE_FIRST.contains(p.current()) {\n+        true\n+    } else {\n+        paths::is_path_start(p)\n     }\n }\n "}]}