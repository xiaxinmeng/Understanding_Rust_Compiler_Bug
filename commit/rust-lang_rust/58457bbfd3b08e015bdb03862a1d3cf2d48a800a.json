{"sha": "58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "node_id": "C_kwDOAAsO6NoAKDU4NDU3YmJmZDNiMDhlMDE1YmRiMDM4NjJhMWQzY2YyZDQ4YTgwMGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-12T03:50:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-12T03:50:30Z"}, "message": "Auto merge of #89404 - Kobzol:hash-stable-sort, r=Mark-Simulacrum\n\nSlightly optimize hash map stable hashing\n\nI was profiling some of the `rustc-perf` benchmarks locally and noticed that quite some time is spent inside the stable hash of hashmaps. I tried to use a `SmallVec` instead of a `Vec` there, which helped very slightly.\n\nThen I tried to remove the sorting, which was a bottleneck, and replaced it with insertion into a binary heap. Locally, it yielded nice improvements in instruction counts and RSS in several benchmarks for incremental builds. The implementation could probably be much nicer and possibly extended to other stable hashes, but first I wanted to test the perf impact properly.\n\nCan I ask someone to do a perf run? Thank you!", "tree": {"sha": "88445fa8b6de5be3d113c178fdd0fcecf5a42532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88445fa8b6de5be3d113c178fdd0fcecf5a42532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "html_url": "https://github.com/rust-lang/rust/commit/58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58457bbfd3b08e015bdb03862a1d3cf2d48a800a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143", "html_url": "https://github.com/rust-lang/rust/commit/e70e4d499dd9dd1f7ff3717b9d91ca5dd0757143"}, {"sha": "e4b4d18f589b2d0cfcf244124ab43da34a3d8794", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4b4d18f589b2d0cfcf244124ab43da34a3d8794", "html_url": "https://github.com/rust-lang/rust/commit/e4b4d18f589b2d0cfcf244124ab43da34a3d8794"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "b8ad66901c6991fce35ebb861778a5143ef02801", "filename": "compiler/rustc_data_structures/src/stable_hasher.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58457bbfd3b08e015bdb03862a1d3cf2d48a800a/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58457bbfd3b08e015bdb03862a1d3cf2d48a800a/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs?ref=58457bbfd3b08e015bdb03862a1d3cf2d48a800a", "patch": "@@ -559,7 +559,8 @@ pub fn hash_stable_hashmap<HCX, K, V, R, SK, F>(\n     SK: HashStable<HCX> + Ord,\n     F: Fn(&K, &HCX) -> SK,\n {\n-    let mut entries: Vec<_> = map.iter().map(|(k, v)| (to_stable_hash_key(k, hcx), v)).collect();\n+    let mut entries: SmallVec<[_; 3]> =\n+        map.iter().map(|(k, v)| (to_stable_hash_key(k, hcx), v)).collect();\n     entries.sort_unstable_by(|&(ref sk1, _), &(ref sk2, _)| sk1.cmp(sk2));\n     entries.hash_stable(hcx, hasher);\n }"}]}