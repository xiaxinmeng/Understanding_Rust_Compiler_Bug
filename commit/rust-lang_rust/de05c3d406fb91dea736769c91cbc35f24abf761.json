{"sha": "de05c3d406fb91dea736769c91cbc35f24abf761", "node_id": "C_kwDOAAsO6NoAKGRlMDVjM2Q0MDZmYjkxZGVhNzM2NzY5YzkxY2JjMzVmMjRhYmY3NjE", "commit": {"author": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-12-05T03:59:05Z"}, "committer": {"name": "Brandon", "email": "brandondong604@hotmail.com", "date": "2021-12-05T03:59:05Z"}, "message": "Refactor away unnecessary Vec", "tree": {"sha": "e0bc4d9d95042bcdcac7cd46ac20e82139c486d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0bc4d9d95042bcdcac7cd46ac20e82139c486d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de05c3d406fb91dea736769c91cbc35f24abf761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de05c3d406fb91dea736769c91cbc35f24abf761", "html_url": "https://github.com/rust-lang/rust/commit/de05c3d406fb91dea736769c91cbc35f24abf761", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de05c3d406fb91dea736769c91cbc35f24abf761/comments", "author": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brandondong", "id": 13722457, "node_id": "MDQ6VXNlcjEzNzIyNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/13722457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brandondong", "html_url": "https://github.com/brandondong", "followers_url": "https://api.github.com/users/brandondong/followers", "following_url": "https://api.github.com/users/brandondong/following{/other_user}", "gists_url": "https://api.github.com/users/brandondong/gists{/gist_id}", "starred_url": "https://api.github.com/users/brandondong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brandondong/subscriptions", "organizations_url": "https://api.github.com/users/brandondong/orgs", "repos_url": "https://api.github.com/users/brandondong/repos", "events_url": "https://api.github.com/users/brandondong/events{/privacy}", "received_events_url": "https://api.github.com/users/brandondong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6005ea544028042b552e3d6d6a6386b2e5eb9159", "url": "https://api.github.com/repos/rust-lang/rust/commits/6005ea544028042b552e3d6d6a6386b2e5eb9159", "html_url": "https://github.com/rust-lang/rust/commit/6005ea544028042b552e3d6d6a6386b2e5eb9159"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c0dab45889307ff4ca2b817238efa96812a8d42f", "filename": "crates/rust-analyzer/src/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics.rs?ref=de05c3d406fb91dea736769c91cbc35f24abf761", "patch": "@@ -43,7 +43,7 @@ impl DiagnosticCollection {\n         &mut self,\n         file_id: FileId,\n         diagnostic: lsp_types::Diagnostic,\n-        fixes: Vec<lsp_ext::CodeAction>,\n+        fix: Option<lsp_ext::CodeAction>,\n     ) {\n         let diagnostics = self.check.entry(file_id).or_default();\n         for existing_diagnostic in diagnostics.iter() {\n@@ -56,7 +56,7 @@ impl DiagnosticCollection {\n         check_fixes\n             .entry(file_id)\n             .or_default()\n-            .extend(fixes.into_iter().map(|action| Fix { range: diagnostic.range, action }));\n+            .extend(fix.into_iter().map(|action| Fix { range: diagnostic.range, action }));\n         diagnostics.push(diagnostic);\n         self.changes.insert(file_id);\n     }"}, {"sha": "48af9c186dc05d0526d320eb91dbb38df6d553c7", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=de05c3d406fb91dea736769c91cbc35f24abf761", "patch": "@@ -192,7 +192,7 @@ fn map_rust_child_diagnostic(\n pub(crate) struct MappedRustDiagnostic {\n     pub(crate) url: lsp_types::Url,\n     pub(crate) diagnostic: lsp_types::Diagnostic,\n-    pub(crate) fixes: Vec<lsp_ext::CodeAction>,\n+    pub(crate) fix: Option<lsp_ext::CodeAction>,\n }\n \n /// Converts a Rust root diagnostic to LSP form\n@@ -349,7 +349,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 diagnostics.push(MappedRustDiagnostic {\n                     url: secondary_location.uri,\n                     diagnostic,\n-                    fixes: Vec::new(),\n+                    fix: None,\n                 });\n             }\n \n@@ -378,7 +378,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                     tags: if tags.is_empty() { None } else { Some(tags.clone()) },\n                     data: None,\n                 },\n-                fixes: Vec::new(),\n+                fix: None,\n             });\n \n             // Emit hint-level diagnostics for all `related_information` entries such as \"help\"s.\n@@ -395,7 +395,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n                 }\n                 diagnostics.push(MappedRustDiagnostic {\n                     url: sub.related.location.uri.clone(),\n-                    fixes: sub.suggested_fix.iter().cloned().collect(),\n+                    fix: sub.suggested_fix.clone(),\n                     diagnostic: lsp_types::Diagnostic {\n                         range: sub.related.location.range,\n                         severity: Some(lsp_types::DiagnosticSeverity::Hint),"}, {"sha": "c05a97eeed7c960e550f5a8f0bea8b6d40dc4297", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de05c3d406fb91dea736769c91cbc35f24abf761/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=de05c3d406fb91dea736769c91cbc35f24abf761", "patch": "@@ -370,7 +370,7 @@ impl GlobalState {\n                                     Ok(file_id) => self.diagnostics.add_check_diagnostic(\n                                         file_id,\n                                         diag.diagnostic,\n-                                        diag.fixes,\n+                                        diag.fix,\n                                     ),\n                                     Err(err) => {\n                                         tracing::error!("}]}