{"sha": "b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "node_id": "C_kwDOAAsO6NoAKGIxZTliY2RkYzJkZDgzNTY4ZWE1YTVlZDE1YTUxZWYyZDFjZGQ4OWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-10T14:43:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-10T14:43:23Z"}, "message": "Auto merge of #12984 - Veykril:keep-going, r=Veykril\n\nUse `--keep-going` cargo flag when building build scripts\n\nSee https://github.com/rust-lang/rust-analyzer/issues/12973#issuecomment-1209159426", "tree": {"sha": "4e24054b3091f5a82a9884d8ba99528b97f9ef82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e24054b3091f5a82a9884d8ba99528b97f9ef82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "html_url": "https://github.com/rust-lang/rust/commit/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70681f208403b7de148ba027a6d14603aeaa461", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70681f208403b7de148ba027a6d14603aeaa461", "html_url": "https://github.com/rust-lang/rust/commit/e70681f208403b7de148ba027a6d14603aeaa461"}, {"sha": "25d4fbe9dae2b875ebfa81a28e10796475def74b", "url": "https://api.github.com/repos/rust-lang/rust/commits/25d4fbe9dae2b875ebfa81a28e10796475def74b", "html_url": "https://github.com/rust-lang/rust/commit/25d4fbe9dae2b875ebfa81a28e10796475def74b"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "84e772d1684a18e8c47bf85d56cd164fd60f416d", "filename": "crates/project-model/src/build_scripts.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Fbuild_scripts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Fbuild_scripts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fbuild_scripts.rs?ref=b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "patch": "@@ -12,6 +12,7 @@ use cargo_metadata::{camino::Utf8Path, Message};\n use la_arena::ArenaMap;\n use paths::AbsPathBuf;\n use rustc_hash::FxHashMap;\n+use semver::Version;\n use serde::Deserialize;\n \n use crate::{cfg_flag::CfgFlag, CargoConfig, CargoWorkspace, Package};\n@@ -77,9 +78,32 @@ impl WorkspaceBuildScripts {\n         config: &CargoConfig,\n         workspace: &CargoWorkspace,\n         progress: &dyn Fn(String),\n+        toolchain: &Option<Version>,\n     ) -> io::Result<WorkspaceBuildScripts> {\n-        let mut cmd = Self::build_command(config);\n+        const RUST_1_62: Version = Version::new(1, 62, 0);\n \n+        match Self::run_(Self::build_command(config), config, workspace, progress) {\n+            Ok(WorkspaceBuildScripts { error: Some(error), .. })\n+                if toolchain.as_ref().map_or(false, |it| *it >= RUST_1_62) =>\n+            {\n+                // building build scripts failed, attempt to build with --keep-going so\n+                // that we potentially get more build data\n+                let mut cmd = Self::build_command(config);\n+                cmd.args(&[\"-Z\", \"unstable-options\", \"--keep-going\"]).env(\"RUSTC_BOOTSTRAP\", \"1\");\n+                let mut res = Self::run_(cmd, config, workspace, progress)?;\n+                res.error = Some(error);\n+                Ok(res)\n+            }\n+            res => res,\n+        }\n+    }\n+\n+    fn run_(\n+        mut cmd: Command,\n+        config: &CargoConfig,\n+        workspace: &CargoWorkspace,\n+        progress: &dyn Fn(String),\n+    ) -> io::Result<WorkspaceBuildScripts> {\n         if config.wrap_rustc_in_build_scripts {\n             // Setup RUSTC_WRAPPER to point to `rust-analyzer` binary itself. We use\n             // that to compile only proc macros and build scripts during the initial"}, {"sha": "8d0fa757c2e176baf6c0904927bfe252a9e4772d", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "patch": "@@ -28,6 +28,7 @@ fn load_cargo_with_overrides(file: &str, cfg_overrides: CfgOverrides) -> CrateGr\n         rustc: None,\n         rustc_cfg: Vec::new(),\n         cfg_overrides,\n+        toolchain: None,\n     };\n     to_crate_graph(project_workspace)\n }"}, {"sha": "daabb299f76cb0f18f454e3012dafc711d8e0c59", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "patch": "@@ -12,6 +12,7 @@ use base_db::{\n use cfg::{CfgDiff, CfgOptions};\n use paths::{AbsPath, AbsPathBuf};\n use rustc_hash::{FxHashMap, FxHashSet};\n+use semver::Version;\n use stdx::always;\n \n use crate::{\n@@ -77,6 +78,7 @@ pub enum ProjectWorkspace {\n         /// different target.\n         rustc_cfg: Vec<CfgFlag>,\n         cfg_overrides: CfgOverrides,\n+        toolchain: Option<Version>,\n     },\n     /// Project workspace was manually specified using a `rust-project.json` file.\n     Json { project: ProjectJson, sysroot: Option<Sysroot>, rustc_cfg: Vec<CfgFlag> },\n@@ -105,6 +107,7 @@ impl fmt::Debug for ProjectWorkspace {\n                 rustc,\n                 rustc_cfg,\n                 cfg_overrides,\n+                toolchain,\n             } => f\n                 .debug_struct(\"Cargo\")\n                 .field(\"root\", &cargo.workspace_root().file_name())\n@@ -116,6 +119,7 @@ impl fmt::Debug for ProjectWorkspace {\n                 )\n                 .field(\"n_rustc_cfg\", &rustc_cfg.len())\n                 .field(\"n_cfg_overrides\", &cfg_overrides.len())\n+                .field(\"toolchain\", &toolchain)\n                 .finish(),\n             ProjectWorkspace::Json { project, sysroot, rustc_cfg } => {\n                 let mut debug_struct = f.debug_struct(\"Json\");\n@@ -160,6 +164,9 @@ impl ProjectWorkspace {\n                     cmd.arg(\"--version\");\n                     cmd\n                 })?;\n+                let toolchain = cargo_version\n+                    .get(\"cargo \".len()..)\n+                    .and_then(|it| Version::parse(it.split_whitespace().next()?).ok());\n \n                 let meta = CargoWorkspace::fetch_metadata(\n                     &cargo_toml,\n@@ -169,9 +176,9 @@ impl ProjectWorkspace {\n                 )\n                 .with_context(|| {\n                     format!(\n-                        \"Failed to read Cargo metadata from Cargo.toml file {}, {}\",\n+                        \"Failed to read Cargo metadata from Cargo.toml file {}, {:?}\",\n                         cargo_toml.display(),\n-                        cargo_version\n+                        toolchain\n                     )\n                 })?;\n                 let cargo = CargoWorkspace::new(meta);\n@@ -219,6 +226,7 @@ impl ProjectWorkspace {\n                     rustc,\n                     rustc_cfg,\n                     cfg_overrides,\n+                    toolchain,\n                 }\n             }\n         };\n@@ -271,8 +279,8 @@ impl ProjectWorkspace {\n         progress: &dyn Fn(String),\n     ) -> Result<WorkspaceBuildScripts> {\n         match self {\n-            ProjectWorkspace::Cargo { cargo, .. } => {\n-                WorkspaceBuildScripts::run(config, cargo, progress).with_context(|| {\n+            ProjectWorkspace::Cargo { cargo, toolchain, .. } => {\n+                WorkspaceBuildScripts::run(config, cargo, progress, toolchain).with_context(|| {\n                     format!(\"Failed to run build scripts for {}\", &cargo.workspace_root().display())\n                 })\n             }\n@@ -320,6 +328,7 @@ impl ProjectWorkspace {\n                 rustc_cfg: _,\n                 cfg_overrides: _,\n                 build_scripts,\n+                toolchain: _,\n             } => {\n                 cargo\n                     .packages()\n@@ -425,6 +434,7 @@ impl ProjectWorkspace {\n                 rustc_cfg,\n                 cfg_overrides,\n                 build_scripts,\n+                toolchain: _,\n             } => cargo_to_crate_graph(\n                 rustc_cfg.clone(),\n                 cfg_overrides,"}, {"sha": "ceb2a6d703d959ad819f422ae27d0e807f1d25d9", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=b1e9bcddc2dd83568ea5a5ed15a51ef2d1cdd89f", "patch": "@@ -219,6 +219,7 @@ impl GlobalState {\n                     cfg_overrides,\n \n                     build_scripts: _,\n+                    toolchain: _,\n                 } => Some((cargo, sysroot, rustc, rustc_cfg, cfg_overrides)),\n                 _ => None,\n             };"}]}