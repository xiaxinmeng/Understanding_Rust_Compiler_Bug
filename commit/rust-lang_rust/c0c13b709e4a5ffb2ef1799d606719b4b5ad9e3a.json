{"sha": "c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "node_id": "C_kwDOAAsO6NoAKGMwYzEzYjcwOWU0YTVmZmIyZWYxNzk5ZDYwNjcxOWI0YjVhZDllM2E", "commit": {"author": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-12-12T22:28:19Z"}, "committer": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-12-14T10:58:11Z"}, "message": "Improve test coverage of `early_otherwise_branch` mir opt", "tree": {"sha": "56029232793a7a08485e8b222ea6019e26fb03d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56029232793a7a08485e8b222ea6019e26fb03d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "html_url": "https://github.com/rust-lang/rust/commit/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "709c94a9be9d9611340a1a5083996208ade23ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/709c94a9be9d9611340a1a5083996208ade23ff6", "html_url": "https://github.com/rust-lang/rust/commit/709c94a9be9d9611340a1a5083996208ade23ff6"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "a272266066246ce21169db924e061d480a578125", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff?ref=c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "patch": "@@ -0,0 +1,43 @@\n+- // MIR for `no_deref_ptr` before EarlyOtherwiseBranch\n++ // MIR for `no_deref_ptr` after EarlyOtherwiseBranch\n+  \n+  fn no_deref_ptr(_1: Option<i32>, _2: *const Option<i32>) -> i32 {\n+      debug a => _1;                       // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:18:24: 18:25\n+      debug b => _2;                       // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:18:40: 18:41\n+      let mut _0: i32;                     // return place in scope 0 at $DIR/early_otherwise_branch_soundness.rs:18:66: 18:69\n+      let mut _3: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:21:9: 21:16\n+      let mut _4: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:13: 22:20\n+      let _5: i32;                         // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:18: 22:19\n+      scope 1 {\n+          debug v => _5;                   // in scope 1 at $DIR/early_otherwise_branch_soundness.rs:22:18: 22:19\n+      }\n+  \n+      bb0: {\n+          _3 = discriminant(_1);           // scope 0 at $DIR/early_otherwise_branch_soundness.rs:19:11: 19:12\n+          switchInt(move _3) -> [1_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:19:5: 19:12\n+      }\n+  \n+      bb1: {\n+          _0 = const 0_i32;                // scope 0 at $DIR/early_otherwise_branch_soundness.rs:25:14: 25:15\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_soundness.rs:25:14: 25:15\n+      }\n+  \n+      bb2: {\n+          _4 = discriminant((*_2));        // scope 0 at $DIR/early_otherwise_branch_soundness.rs:21:26: 21:28\n+          switchInt(move _4) -> [1_isize: bb4, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:21:20: 21:28\n+      }\n+  \n+      bb3: {\n+          _0 = const 0_i32;                // scope 0 at $DIR/early_otherwise_branch_soundness.rs:23:18: 23:19\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_soundness.rs:23:18: 23:19\n+      }\n+  \n+      bb4: {\n+          StorageLive(_5);                 // scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:18: 22:19\n+          _5 = (((*_2) as Some).0: i32);   // scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:18: 22:19\n+          _0 = _5;                         // scope 1 at $DIR/early_otherwise_branch_soundness.rs:22:24: 22:25\n+          StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:24: 22:25\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_soundness.rs:22:24: 22:25\n+      }\n+  }\n+  "}, {"sha": "56b7c9a2db47815e93b688c19054e01a1eb35e42", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff?ref=c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "patch": "@@ -0,0 +1,30 @@\n+- // MIR for `no_downcast` before EarlyOtherwiseBranch\n++ // MIR for `no_downcast` after EarlyOtherwiseBranch\n+  \n+  fn no_downcast(_1: &E) -> u32 {\n+      debug e => _1;                       // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:12:16: 12:17\n+      let mut _0: u32;                     // return place in scope 0 at $DIR/early_otherwise_branch_soundness.rs:12:26: 12:29\n+      let mut _2: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:20: 13:30\n+      let mut _3: isize;                   // in scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+  \n+      bb0: {\n+          _3 = discriminant((*_1));        // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          switchInt(move _3) -> [1_isize: bb1, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+      }\n+  \n+      bb1: {\n+          _2 = discriminant((*(((*_1) as Some).0: &E))); // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+          switchInt(move _2) -> [1_isize: bb2, otherwise: bb3]; // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:12: 13:31\n+      }\n+  \n+      bb2: {\n+          _0 = const 1_u32;                // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:38: 13:39\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:5: 13:52\n+      }\n+  \n+      bb3: {\n+          _0 = const 2_u32;                // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:49: 13:50\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_soundness.rs:13:5: 13:52\n+      }\n+  }\n+  "}, {"sha": "d2513213d796f7591efe2a5fadc7774df2aa9dab", "filename": "src/test/mir-opt/early_otherwise_branch_soundness.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_soundness.rs?ref=c0c13b709e4a5ffb2ef1799d606719b4b5ad9e3a", "patch": "@@ -0,0 +1,32 @@\n+// compile-flags: -Z mir-opt-level=4 -Zunsound-mir-opts\n+\n+// Tests various cases that the `early_otherwise_branch` opt should *not* optimize\n+\n+// From #78496\n+enum E<'a> {\n+    Empty,\n+    Some(&'a E<'a>),\n+}\n+\n+// EMIT_MIR early_otherwise_branch_soundness.no_downcast.EarlyOtherwiseBranch.diff\n+fn no_downcast(e: &E) -> u32 {\n+    if let E::Some(E::Some(_)) = e { 1 } else { 2 }\n+}\n+\n+// SAFETY: if `a` is `Some`, `b` must point to a valid, initialized value\n+// EMIT_MIR early_otherwise_branch_soundness.no_deref_ptr.EarlyOtherwiseBranch.diff\n+unsafe fn no_deref_ptr(a: Option<i32>, b: *const Option<i32>) -> i32 {\n+    match a {\n+        // `*b` being correct depends on `a == Some(_)`\n+        Some(_) => match *b {\n+            Some(v) => v,\n+            _ => 0,\n+        },\n+        _ => 0,\n+    }\n+}\n+\n+fn main() {\n+    no_downcast(&E::Empty);\n+    unsafe { no_deref_ptr(None, std::ptr::null()) };\n+}"}]}