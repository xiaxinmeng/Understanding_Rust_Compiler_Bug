{"sha": "db138485b1caa7cc8be5ba7827c1889ab4ccf532", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMTM4NDg1YjFjYWE3Y2M4YmU1YmE3ODI3YzE4ODlhYjRjY2Y1MzI=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-10T18:41:57Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-08-12T14:02:22Z"}, "message": "Adjust `check_no_mangle` and `check_export_name` to warn/error on `#[no_mangle]`/`#[export_name]` on trait methods", "tree": {"sha": "eb6ee46e2f3b3932541bc8f725fdac76538fbe4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb6ee46e2f3b3932541bc8f725fdac76538fbe4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db138485b1caa7cc8be5ba7827c1889ab4ccf532", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYRUp7hUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLiQRgEA2nSwwHlUqprRE7yzrk1XrjD2mLk8\nSJFGINtyoukP+nABAO1N8a9Ce2cKKj3svjCtBEdsjywzP3tO6HCjBCbCmeIH\n=txCA\n-----END PGP SIGNATURE-----", "payload": "tree eb6ee46e2f3b3932541bc8f725fdac76538fbe4f\nparent 0bb2ea653e59093719674be186b3c3d7caceea92\nauthor hyd-dev <yd-huang@outlook.com> 1628620917 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1628776942 +0800\n\nAdjust `check_no_mangle` and `check_export_name` to warn/error on `#[no_mangle]`/`#[export_name]` on trait methods\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db138485b1caa7cc8be5ba7827c1889ab4ccf532", "html_url": "https://github.com/rust-lang/rust/commit/db138485b1caa7cc8be5ba7827c1889ab4ccf532", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db138485b1caa7cc8be5ba7827c1889ab4ccf532/comments", "author": null, "committer": null, "parents": [{"sha": "0bb2ea653e59093719674be186b3c3d7caceea92", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb2ea653e59093719674be186b3c3d7caceea92", "html_url": "https://github.com/rust-lang/rust/commit/0bb2ea653e59093719674be186b3c3d7caceea92"}], "stats": {"total": 450, "additions": 254, "deletions": 196}, "files": [{"sha": "7cca11f20bb9f687774a0c52bf8eed2db25b44d1", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/db138485b1caa7cc8be5ba7827c1889ab4ccf532/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db138485b1caa7cc8be5ba7827c1889ab4ccf532/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=db138485b1caa7cc8be5ba7827c1889ab4ccf532", "patch": "@@ -962,6 +962,10 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n+    fn is_impl_item(&self, hir_id: HirId) -> bool {\n+        matches!(self.tcx.hir().get(hir_id), hir::Node::ImplItem(..))\n+    }\n+\n     /// Checks if `#[export_name]` is applied to a function or static. Returns `true` if valid.\n     fn check_export_name(\n         &self,\n@@ -971,7 +975,8 @@ impl CheckAttrVisitor<'tcx> {\n         target: Target,\n     ) -> bool {\n         match target {\n-            Target::Static | Target::Fn | Target::Method(..) => true,\n+            Target::Static | Target::Fn => true,\n+            Target::Method(..) if self.is_impl_item(hir_id) => true,\n             // FIXME(#80564): We permit struct fields, match arms and macro defs to have an\n             // `#[export_name]` attribute with just a lint, because we previously\n             // erroneously allowed it and some crates used it accidentally, to to be compatible\n@@ -985,9 +990,9 @@ impl CheckAttrVisitor<'tcx> {\n                     .sess\n                     .struct_span_err(\n                         attr.span,\n-                        \"attribute should be applied to a function or static\",\n+                        \"attribute should be applied to a free function, impl method or static\",\n                     )\n-                    .span_label(*span, \"not a function or static\")\n+                    .span_label(*span, \"not a free function, impl method or static\")\n                     .emit();\n                 false\n             }\n@@ -1169,7 +1174,8 @@ impl CheckAttrVisitor<'tcx> {\n     /// Checks if `#[no_mangle]` is applied to a function or static.\n     fn check_no_mangle(&self, hir_id: HirId, attr: &Attribute, span: &Span, target: Target) {\n         match target {\n-            Target::Static | Target::Fn | Target::Method(..) => {}\n+            Target::Static | Target::Fn => {}\n+            Target::Method(..) if self.is_impl_item(hir_id) => {}\n             // FIXME(#80564): We permit struct fields, match arms and macro defs to have an\n             // `#[no_mangle]` attribute with just a lint, because we previously\n             // erroneously allowed it and some crates used it accidentally, to to be compatible\n@@ -1181,14 +1187,16 @@ impl CheckAttrVisitor<'tcx> {\n                 // FIXME: #[no_mangle] was previously allowed on non-functions/statics and some\n                 // crates used this, so only emit a warning.\n                 self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n-                    lint.build(\"attribute should be applied to a function or static\")\n-                        .warn(\n-                            \"this was previously accepted by the compiler but is \\\n-                             being phased out; it will become a hard error in \\\n-                             a future release!\",\n-                        )\n-                        .span_label(*span, \"not a function or static\")\n-                        .emit();\n+                    lint.build(\n+                        \"attribute should be applied to a free function, impl method or static\",\n+                    )\n+                    .warn(\n+                        \"this was previously accepted by the compiler but is \\\n+                         being phased out; it will become a hard error in \\\n+                         a future release!\",\n+                    )\n+                    .span_label(*span, \"not a free function, impl method or static\")\n+                    .emit();\n                 });\n             }\n         }"}, {"sha": "44abe160f87168d499d3361b9f89e2355cc249e1", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs?ref=db138485b1caa7cc8be5ba7827c1889ab4ccf532", "patch": "@@ -1,5 +1,5 @@\n //~ NOTE: not an `extern crate` item\n-//~^ NOTE: not a function or static\n+//~^ NOTE: not a free function, impl method or static\n //~^^ NOTE: not a function or closure\n // This is testing whether various builtin attributes signals an\n // error or warning when put in \"weird\" places.\n@@ -25,7 +25,7 @@\n #![no_link]\n //~^ ERROR: attribute should be applied to an `extern crate` item\n #![export_name = \"2200\"]\n-//~^ ERROR: attribute should be applied to a function or static\n+//~^ ERROR: attribute should be applied to a free function, impl method or static\n #![inline]\n //~^ ERROR: attribute should be applied to function or closure\n #[inline]\n@@ -83,27 +83,37 @@ mod no_link {\n }\n \n #[export_name = \"2200\"]\n-//~^ ERROR attribute should be applied to a function or static\n+//~^ ERROR attribute should be applied to a free function, impl method or static\n mod export_name {\n-    //~^ NOTE not a function or static\n+    //~^ NOTE not a free function, impl method or static\n \n     mod inner { #![export_name=\"2200\"] }\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n+    //~^ ERROR attribute should be applied to a free function, impl method or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[export_name = \"2200\"] fn f() { }\n \n     #[export_name = \"2200\"] struct S;\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n+    //~^ ERROR attribute should be applied to a free function, impl method or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[export_name = \"2200\"] type T = S;\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n+    //~^ ERROR attribute should be applied to a free function, impl method or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[export_name = \"2200\"] impl S { }\n-    //~^ ERROR attribute should be applied to a function or static\n-    //~| NOTE not a function or static\n+    //~^ ERROR attribute should be applied to a free function, impl method or static\n+    //~| NOTE not a free function, impl method or static\n+\n+    trait Tr {\n+        #[export_name = \"2200\"] fn foo();\n+        //~^ ERROR attribute should be applied to a free function, impl method or static\n+        //~| NOTE not a free function, impl method or static\n+\n+        #[export_name = \"2200\"] fn bar() {}\n+        //~^ ERROR attribute should be applied to a free function, impl method or static\n+        //~| NOTE not a free function, impl method or static\n+    }\n }\n \n #[start]"}, {"sha": "aed1312155db57d597fbdc6bc667db6f9645a57e", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.stderr", "status": "modified", "additions": 30, "deletions": 18, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr?ref=db138485b1caa7cc8be5ba7827c1889ab4ccf532", "patch": "@@ -17,31 +17,31 @@ LL |     #[inline = \"2100\"] fn f() { }\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:109:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:119:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:112:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:122:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:117:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:127:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:130:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:123:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:133:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n@@ -76,7 +76,7 @@ LL | |\n LL | | }\n    | |_- not an `extern crate` item\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:85:1\n    |\n LL |   #[export_name = \"2200\"]\n@@ -87,17 +87,17 @@ LL | |\n LL | |\n LL | |     mod inner { #![export_name=\"2200\"] }\n ...  |\n-LL | |\n+LL | |     }\n LL | | }\n-   | |_- not a function or static\n+   | |_- not a free function, impl method or static\n \n error: attribute should be applied to an `extern crate` item\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:25:1\n    |\n LL | #![no_link]\n    | ^^^^^^^^^^^\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:27:1\n    |\n LL | #![export_name = \"2200\"]\n@@ -199,31 +199,43 @@ error: attribute should be applied to an `extern crate` item\n LL |     #[no_link] impl S { }\n    |     ^^^^^^^^^^ ---------- not an `extern crate` item\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:90:17\n    |\n LL |     mod inner { #![export_name=\"2200\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n+   |     ------------^^^^^^^^^^^^^^^^^^^^^^-- not a free function, impl method or static\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:96:5\n    |\n LL |     #[export_name = \"2200\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ --------- not a free function, impl method or static\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:100:5\n    |\n LL |     #[export_name = \"2200\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a free function, impl method or static\n \n-error: attribute should be applied to a function or static\n+error: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:104:5\n    |\n LL |     #[export_name = \"2200\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a free function, impl method or static\n+\n+error: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:109:9\n+   |\n+LL |         #[export_name = \"2200\"] fn foo();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^ --------- not a free function, impl method or static\n+\n+error: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:113:9\n+   |\n+LL |         #[export_name = \"2200\"] fn bar() {}\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a free function, impl method or static\n \n-error: aborting due to 32 previous errors\n+error: aborting due to 34 previous errors\n \n Some errors have detailed explanations: E0518, E0658.\n For more information about an error, try `rustc --explain E0518`."}, {"sha": "b30ab446d7a01a444fbb7a302bbabd7bfbe6d923", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=db138485b1caa7cc8be5ba7827c1889ab4ccf532", "patch": "@@ -295,31 +295,43 @@ mod automatically_derived {\n }\n \n #[no_mangle]\n-//~^ WARN attribute should be applied to a function or static [unused_attributes]\n+//~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n mod no_mangle {\n-    //~^ NOTE not a function or static\n+    //~^ NOTE not a free function, impl method or static\n     mod inner { #![no_mangle] }\n-    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n     //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-    //~| NOTE not a function or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[no_mangle] fn f() { }\n \n     #[no_mangle] struct S;\n-    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n     //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-    //~| NOTE not a function or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[no_mangle] type T = S;\n-    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n     //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-    //~| NOTE not a function or static\n+    //~| NOTE not a free function, impl method or static\n \n     #[no_mangle] impl S { }\n-    //~^ WARN attribute should be applied to a function or static [unused_attributes]\n+    //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n     //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-    //~| NOTE not a function or static\n+    //~| NOTE not a free function, impl method or static\n+\n+    trait Tr {\n+        #[no_mangle] fn foo();\n+        //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n+        //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+        //~| NOTE not a free function, impl method or static\n+\n+        #[no_mangle] fn bar() {}\n+        //~^ WARN attribute should be applied to a free function, impl method or static [unused_attributes]\n+        //~| WARN this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+        //~| NOTE not a free function, impl method or static\n+    }\n }\n \n #[should_panic]"}, {"sha": "b0fc71c8a62ceb00a363562339ce6934137fb46e", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 160, "deletions": 144, "changes": 304, "blob_url": "https://github.com/rust-lang/rust/blob/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db138485b1caa7cc8be5ba7827c1889ab4ccf532/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=db138485b1caa7cc8be5ba7827c1889ab4ccf532", "patch": "@@ -173,15 +173,15 @@ LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n@@ -200,7 +200,7 @@ warning: use of deprecated attribute `no_start`: no longer used.\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n-warning: attribute should be applied to a function or static\n+warning: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:297:1\n    |\n LL |   #[no_mangle]\n@@ -211,9 +211,9 @@ LL | |\n LL | |     mod inner { #![no_mangle] }\n LL | |\n ...  |\n-LL | |\n+LL | |     }\n LL | | }\n-   | |_- not a function or static\n+   | |_- not a free function, impl method or static\n    |\n note: the lint level is defined here\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:9\n@@ -223,7 +223,7 @@ LL | #![warn(unused_attributes, unknown_lints)]\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:464:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -240,7 +240,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:493:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -257,7 +257,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:532:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -297,72 +297,88 @@ LL | #![link_section = \"1800\"]\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a function or static\n+warning: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:17\n    |\n LL |     mod inner { #![no_mangle] }\n-   |     ------------^^^^^^^^^^^^^-- not a function or static\n+   |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a function or static\n+warning: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:309:5\n    |\n LL |     #[no_mangle] struct S;\n-   |     ^^^^^^^^^^^^ --------- not a function or static\n+   |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a function or static\n+warning: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:314:5\n    |\n LL |     #[no_mangle] type T = S;\n-   |     ^^^^^^^^^^^^ ----------- not a function or static\n+   |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a function or static\n+warning: attribute should be applied to a free function, impl method or static\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n    |\n LL |     #[no_mangle] impl S { }\n-   |     ^^^^^^^^^^^^ ---------- not a function or static\n+   |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:9\n+   |\n+LL |         #[no_mangle] fn foo();\n+   |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:330:9\n+   |\n+LL |         #[no_mangle] fn bar() {}\n+   |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:487:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -372,77 +388,77 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:506:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:518:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:523:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:516:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:521:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:526:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:538:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:538:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:550:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:545:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:557:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:550:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:562:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:555:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:567:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n@@ -596,676 +612,676 @@ LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:340:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:331:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:343:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:334:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:346:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:349:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:340:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:352:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:359:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:362:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:353:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:359:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:371:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:381:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:384:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:400:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:403:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:406:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:415:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:623:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:631:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:648:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:656:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:673:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:681:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:707:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:737:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:741:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:762:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:766:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:770:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: 193 warnings emitted\n+warning: 195 warnings emitted\n "}]}