{"sha": "787eddc1ab49766204c35d2a60c3d75b6ea7413c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4N2VkZGMxYWI0OTc2NjIwNGMzNWQyYTYwYzNkNzViNmVhNzQxM2M=", "commit": {"author": {"name": "arlo", "email": "arlo@indeed.com", "date": "2020-04-23T19:07:50Z"}, "committer": {"name": "arlo", "email": "arlo@indeed.com", "date": "2020-04-24T09:44:20Z"}, "message": "Add BinaryHeap::retain as suggested in #42849", "tree": {"sha": "32c004d1ddbfe4540fe23d83c0b6334fe779bf61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32c004d1ddbfe4540fe23d83c0b6334fe779bf61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/787eddc1ab49766204c35d2a60c3d75b6ea7413c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/787eddc1ab49766204c35d2a60c3d75b6ea7413c", "html_url": "https://github.com/rust-lang/rust/commit/787eddc1ab49766204c35d2a60c3d75b6ea7413c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/787eddc1ab49766204c35d2a60c3d75b6ea7413c/comments", "author": null, "committer": null, "parents": [{"sha": "00f677d8974b393ff32ca25bf916b6b9650c75b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/00f677d8974b393ff32ca25bf916b6b9650c75b0", "html_url": "https://github.com/rust-lang/rust/commit/00f677d8974b393ff32ca25bf916b6b9650c75b0"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "8e170d970bc57260d9915274ed41170f72957d50", "filename": "src/liballoc/collections/binary_heap.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fbinary_heap.rs?ref=787eddc1ab49766204c35d2a60c3d75b6ea7413c", "patch": "@@ -665,6 +665,34 @@ impl<T: Ord> BinaryHeap<T> {\n     pub fn drain_sorted(&mut self) -> DrainSorted<'_, T> {\n         DrainSorted { inner: self }\n     }\n+\n+    /// Retains only the elements specified by the predicate.\n+    ///\n+    /// In other words, remove all elements `e` such that `f(&e)` returns\n+    /// `false`. The elements are visited in unsorted (and unspecified) order.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(binary_heap_retain)]\n+    /// use std::collections::BinaryHeap;\n+    ///\n+    /// let mut heap = BinaryHeap::from(vec![-10, -5, 1, 2, 4, 13]);\n+    ///\n+    /// heap.retain(|x| x % 2 == 0); // only keep even numbers\n+    ///\n+    /// assert_eq!(heap.into_sorted_vec(), [-10, 2, 4])\n+    /// ```\n+    #[unstable(feature = \"binary_heap_retain\", issue = \"71503\")]\n+    pub fn retain<F>(&mut self, f: F)\n+    where\n+        F: FnMut(&T) -> bool,\n+    {\n+        self.data.retain(f);\n+        self.rebuild();\n+    }\n }\n \n impl<T> BinaryHeap<T> {"}, {"sha": "08ed5447772a1e7b9aedd591244c005926a6ba56", "filename": "src/liballoc/tests/binary_heap.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Ftests%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fbinary_heap.rs?ref=787eddc1ab49766204c35d2a60c3d75b6ea7413c", "patch": "@@ -372,6 +372,14 @@ fn assert_covariance() {\n     }\n }\n \n+#[test]\n+fn test_retain() {\n+    let mut a = BinaryHeap::from(vec![-10, -5, 1, 2, 4, 13]);\n+    a.retain(|x| x % 2 == 0);\n+\n+    assert_eq!(a.into_sorted_vec(), [-10, 2, 4])\n+}\n+\n // old binaryheap failed this test\n //\n // Integrity means that all elements are present after a comparison panics,"}, {"sha": "78d49558262e36f2afecd675b8d705bbd7da96a0", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/787eddc1ab49766204c35d2a60c3d75b6ea7413c/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=787eddc1ab49766204c35d2a60c3d75b6ea7413c", "patch": "@@ -14,6 +14,7 @@\n #![feature(binary_heap_drain_sorted)]\n #![feature(vec_remove_item)]\n #![feature(split_inclusive)]\n+#![feature(binary_heap_retain)]\n \n use std::collections::hash_map::DefaultHasher;\n use std::hash::{Hash, Hasher};"}]}