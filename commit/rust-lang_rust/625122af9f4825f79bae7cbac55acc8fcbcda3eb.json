{"sha": "625122af9f4825f79bae7cbac55acc8fcbcda3eb", "node_id": "C_kwDOAAsO6NoAKDYyNTEyMmFmOWY0ODI1Zjc5YmFlN2NiYWM1NWFjYzhmY2JjZGEzZWI", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2022-06-30T20:17:38Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2022-06-30T20:17:38Z"}, "message": "fix grammar in useless doc comment lint", "tree": {"sha": "6f5a4105956b731884c72e6b187cbac6baf6cfa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f5a4105956b731884c72e6b187cbac6baf6cfa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/625122af9f4825f79bae7cbac55acc8fcbcda3eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAmK+BQMWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdKHZB/9yL0OLkTLiwAzNNjXQaxMhn46L\nOjGlGNwuKA94ZgXJPJTiBx6LUDCR9VOefCHkhj6idqeT6HPGiCp5fOaiglokeFOS\n4gUF7i8ugaCy3b5luN0o7z9pF7+89aL/pQMG26Ua07Gem4C7Z4MH8a+gBKMSBRbm\no3p4EKHIJrm047b155Wm+TCjD2KQ1yCMKsYxuOX0XfJJgC1NXlnuVN8867kVHtz/\nVtfsh2hdB3Ep5CLK3E3NwwWjpQxL5rvNT3wJvBu1Y7XmSJTn5EbKP8WW2DAALhzy\nfMpsLwHTLExeOog8wwVWeKARLcG8+aF8tIJ+f7oVelt1EclwC7MiU2YOYD1u\n=A7HB\n-----END PGP SIGNATURE-----", "payload": "tree 6f5a4105956b731884c72e6b187cbac6baf6cfa2\nparent 7425fb293f510a6f138e82a963a3bc599a5b9e1c\nauthor Andy Russell <arussell123@gmail.com> 1656620258 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1656620258 -0400\n\nfix grammar in useless doc comment lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/625122af9f4825f79bae7cbac55acc8fcbcda3eb", "html_url": "https://github.com/rust-lang/rust/commit/625122af9f4825f79bae7cbac55acc8fcbcda3eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/625122af9f4825f79bae7cbac55acc8fcbcda3eb/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7425fb293f510a6f138e82a963a3bc599a5b9e1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7425fb293f510a6f138e82a963a3bc599a5b9e1c", "html_url": "https://github.com/rust-lang/rust/commit/7425fb293f510a6f138e82a963a3bc599a5b9e1c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c0cf8c6b76b786c500ea8d3396aadad50fd5a05e", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/625122af9f4825f79bae7cbac55acc8fcbcda3eb/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/625122af9f4825f79bae7cbac55acc8fcbcda3eb/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=625122af9f4825f79bae7cbac55acc8fcbcda3eb", "patch": "@@ -1098,12 +1098,12 @@ impl EarlyLintPass for UnusedDocComment {\n     }\n \n     fn check_block(&mut self, cx: &EarlyContext<'_>, block: &ast::Block) {\n-        warn_if_doc(cx, block.span, \"block\", &block.attrs());\n+        warn_if_doc(cx, block.span, \"blocks\", &block.attrs());\n     }\n \n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &ast::Item) {\n         if let ast::ItemKind::ForeignMod(_) = item.kind {\n-            warn_if_doc(cx, item.span, \"extern block\", &item.attrs);\n+            warn_if_doc(cx, item.span, \"extern blocks\", &item.attrs);\n         }\n     }\n }"}, {"sha": "1a022c30938f29f68e237809e4a7aa1c8e20c4fe", "filename": "src/test/ui/lint/unused/unused-doc-comments-edge-cases.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/625122af9f4825f79bae7cbac55acc8fcbcda3eb/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/625122af9f4825f79bae7cbac55acc8fcbcda3eb/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-doc-comments-edge-cases.stderr?ref=625122af9f4825f79bae7cbac55acc8fcbcda3eb", "patch": "@@ -71,7 +71,7 @@ LL |\n LL | / extern \"C\" {\n LL | |     fn foo();\n LL | | }\n-   | |_- rustdoc does not generate documentation for extern block\n+   | |_- rustdoc does not generate documentation for extern blocks\n    |\n    = help: use `//` for a plain comment\n "}]}