{"sha": "4bfaa9397857b5b49657e3596e33800dbf35ade4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZmFhOTM5Nzg1N2I1YjQ5NjU3ZTM1OTZlMzM4MDBkYmYzNWFkZTQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T15:40:19Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T21:30:49Z"}, "message": "std: fix fallout", "tree": {"sha": "d74185e435917e9fd7bc96217a2db0b2048339bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d74185e435917e9fd7bc96217a2db0b2048339bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bfaa9397857b5b49657e3596e33800dbf35ade4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bfaa9397857b5b49657e3596e33800dbf35ade4", "html_url": "https://github.com/rust-lang/rust/commit/4bfaa9397857b5b49657e3596e33800dbf35ade4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bfaa9397857b5b49657e3596e33800dbf35ade4/comments", "author": null, "committer": null, "parents": [{"sha": "32dd592d36c731fd3bbd0cda8040d33b44a90f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/32dd592d36c731fd3bbd0cda8040d33b44a90f4b", "html_url": "https://github.com/rust-lang/rust/commit/32dd592d36c731fd3bbd0cda8040d33b44a90f4b"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "f246e9df3b9870b4b6f10cf2bbf2baf9aa81feba", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4bfaa9397857b5b49657e3596e33800dbf35ade4/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bfaa9397857b5b49657e3596e33800dbf35ade4/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=4bfaa9397857b5b49657e3596e33800dbf35ade4", "patch": "@@ -1300,6 +1300,8 @@ impl<K: Eq + Hash<S>, V, S, H: Hasher<S> + Default> Default for HashMap<K, V, H>\n     }\n }\n \n+// NOTE(stage0): remove impl after a snapshot\n+#[cfg(stage0)]\n #[stable]\n impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> Index<Q, V> for HashMap<K, V, H>\n     where Q: BorrowFrom<K> + Hash<S> + Eq\n@@ -1310,6 +1312,21 @@ impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> Index<Q, V> for HashMap<K, V\n     }\n }\n \n+#[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable]\n+impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> Index<Q> for HashMap<K, V, H>\n+    where Q: BorrowFrom<K> + Hash<S> + Eq\n+{\n+    type Output = V;\n+\n+    #[inline]\n+    fn index<'a>(&'a self, index: &Q) -> &'a V {\n+        self.get(index).expect(\"no entry found for key\")\n+    }\n+}\n+\n+// NOTE(stage0): remove impl after a snapshot\n+#[cfg(stage0)]\n #[stable]\n impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> IndexMut<Q, V> for HashMap<K, V, H>\n     where Q: BorrowFrom<K> + Hash<S> + Eq\n@@ -1320,6 +1337,19 @@ impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> IndexMut<Q, V> for HashMap<K\n     }\n }\n \n+#[cfg(not(stage0))]  // NOTE(stage0): remove cfg after a snapshot\n+#[stable]\n+impl<K: Hash<S> + Eq, Sized? Q, V, S, H: Hasher<S>> IndexMut<Q> for HashMap<K, V, H>\n+    where Q: BorrowFrom<K> + Hash<S> + Eq\n+{\n+    type Output = V;\n+\n+    #[inline]\n+    fn index_mut<'a>(&'a mut self, index: &Q) -> &'a mut V {\n+        self.get_mut(index).expect(\"no entry found for key\")\n+    }\n+}\n+\n /// HashMap iterator\n #[stable]\n pub struct Iter<'a, K: 'a, V: 'a> {"}]}