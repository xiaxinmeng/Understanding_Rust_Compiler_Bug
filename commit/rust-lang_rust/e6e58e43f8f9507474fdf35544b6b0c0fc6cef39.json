{"sha": "e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZTU4ZTQzZjhmOTUwNzQ3NGZkZjM1NTQ0YjZiMGMwZmM2Y2VmMzk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-11-11T18:45:59Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-11-11T18:45:59Z"}, "message": "libsyntax: Forbid type parameters in field expressions.\n\nThis breaks code like:\n\n    struct Foo {\n        x: int,\n    }\n\n    let f: Foo = ...;\n    ... f.x::<int> ...\n\nChange this code to not contain an unused type parameter. For example:\n\n    struct Foo {\n        x: int,\n    }\n\n    let f: Foo = ...;\n    ... f.x ...\n\nCloses #18680.\n\n[breaking-change]", "tree": {"sha": "a00320aad3332c0dd6d60f8ab46f4458f6696665", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a00320aad3332c0dd6d60f8ab46f4458f6696665"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "html_url": "https://github.com/rust-lang/rust/commit/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d29209bda553e4d23a8b499d2ceb8db5c4f8be5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d29209bda553e4d23a8b499d2ceb8db5c4f8be5", "html_url": "https://github.com/rust-lang/rust/commit/5d29209bda553e4d23a8b499d2ceb8db5c4f8be5"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "90ada8a687c432879b45f65c40078e7618dd0625", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "patch": "@@ -2415,9 +2415,16 @@ impl<'a> Parser<'a> {\n                             e = self.mk_expr(lo, hi, nd);\n                         }\n                         _ => {\n+                            if !tys.is_empty() {\n+                                let last_span = self.last_span;\n+                                self.span_err(last_span,\n+                                              \"field expressions may not \\\n+                                               have type parameters\");\n+                            }\n+\n                             let id = spanned(dot, hi, i);\n                             let field = self.mk_field(e, id, tys);\n-                            e = self.mk_expr(lo, hi, field)\n+                            e = self.mk_expr(lo, hi, field);\n                         }\n                     }\n                   }"}, {"sha": "023f7d1c29f5f935cd71402bbc87a9d374c44a15", "filename": "src/test/compile-fail/type-parameters-in-field-exprs.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39/src%2Ftest%2Fcompile-fail%2Ftype-parameters-in-field-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e58e43f8f9507474fdf35544b6b0c0fc6cef39/src%2Ftest%2Fcompile-fail%2Ftype-parameters-in-field-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameters-in-field-exprs.rs?ref=e6e58e43f8f9507474fdf35544b6b0c0fc6cef39", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct Foo {\n+    x: int,\n+    y: int,\n+}\n+\n+fn main() {\n+    let f = Foo {\n+        x: 1,\n+        y: 2,\n+    };\n+    f.x::<int>;\n+    //~^ ERROR field expressions may not have type parameters\n+}\n+"}]}