{"sha": "4a12a13b588d54b6992bc74131aa4868357dd716", "node_id": "C_kwDOAAsO6NoAKDRhMTJhMTNiNTg4ZDU0YjY5OTJiYzc0MTMxYWE0ODY4MzU3ZGQ3MTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T14:51:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-01T14:51:45Z"}, "message": "Auto merge of #2707 - oli-obk:ui_test_bump, r=RalfJung\n\nBump ui_test crate\n\nAll commands can now be revisioned: https://github.com/oli-obk/ui_test/pull/33", "tree": {"sha": "b0db9f0616438d5faa99c60b18c3137adc98492d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0db9f0616438d5faa99c60b18c3137adc98492d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a12a13b588d54b6992bc74131aa4868357dd716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a12a13b588d54b6992bc74131aa4868357dd716", "html_url": "https://github.com/rust-lang/rust/commit/4a12a13b588d54b6992bc74131aa4868357dd716", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a12a13b588d54b6992bc74131aa4868357dd716/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "623b4aba6c83a3aa725dfd722c47eb8e0f468c83", "url": "https://api.github.com/repos/rust-lang/rust/commits/623b4aba6c83a3aa725dfd722c47eb8e0f468c83", "html_url": "https://github.com/rust-lang/rust/commit/623b4aba6c83a3aa725dfd722c47eb8e0f468c83"}, {"sha": "e8ff9b1836fc8e69ab4fe78c35a6799277c8e700", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8ff9b1836fc8e69ab4fe78c35a6799277c8e700", "html_url": "https://github.com/rust-lang/rust/commit/e8ff9b1836fc8e69ab4fe78c35a6799277c8e700"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "876d49257caa5beb283092fddea261457706a970", "filename": "src/tools/miri/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FCargo.lock?ref=4a12a13b588d54b6992bc74131aa4868357dd716", "patch": "@@ -724,9 +724,9 @@ dependencies = [\n \n [[package]]\n name = \"ui_test\"\n-version = \"0.4.0\"\n+version = \"0.5.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bf4559da3fe6b481f8674a29379677cb9606cd6f75fc254a2c9834c55638503d\"\n+checksum = \"54ddb6f31025943e2f9d59237f433711c461a43d9415974c3eb3a4902edc1c1f\"\n dependencies = [\n  \"bstr\",\n  \"cargo_metadata\","}, {"sha": "717020f43c4f0c869c0432ffbdbfdfa8080c05af", "filename": "src/tools/miri/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FCargo.toml?ref=4a12a13b588d54b6992bc74131aa4868357dd716", "patch": "@@ -39,7 +39,7 @@ libloading = \"0.7\"\n \n [dev-dependencies]\n colored = \"2\"\n-ui_test = \"0.4\"\n+ui_test = \"0.5\"\n rustc_version = \"0.4\"\n # Features chosen to match those required by env_logger, to avoid rebuilds\n regex = { version = \"1.5.5\", default-features = false, features = [\"perf\", \"std\"] }"}, {"sha": "50a0e8e6edef8e551c36a89056c9d52212501c55", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_abi_mismatch.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.rs?ref=4a12a13b588d54b6992bc74131aa4868357dd716", "patch": "@@ -12,7 +12,7 @@ fn main() {\n     #[cfg(fn_ptr)]\n     unsafe {\n         std::mem::transmute::<unsafe fn(), unsafe extern \"C\" fn()>(foo)();\n-        //[fn_ptr]~^ ERROR: calling a function with calling convention Rust using calling convention C\n+        //~[fn_ptr]^ ERROR: calling a function with calling convention Rust using calling convention C\n     }\n \n     // `Instance` caching should not suppress ABI check.\n@@ -28,8 +28,8 @@ fn main() {\n         }\n         unsafe {\n             foo();\n-            //[no_cache]~^ ERROR: calling a function with calling convention Rust using calling convention C\n-            //[cache]~| ERROR: calling a function with calling convention Rust using calling convention C\n+            //~[no_cache]^ ERROR: calling a function with calling convention Rust using calling convention C\n+            //~[cache]| ERROR: calling a function with calling convention Rust using calling convention C\n         }\n     }\n }"}, {"sha": "554cbe09cf03d18d4c29b47b3b1779e600246166", "filename": "src/tools/miri/tests/fail/function_calls/exported_symbol_bad_unwind2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a12a13b588d54b6992bc74131aa4868357dd716/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Ffunction_calls%2Fexported_symbol_bad_unwind2.rs?ref=4a12a13b588d54b6992bc74131aa4868357dd716", "patch": "@@ -4,8 +4,8 @@\n #[cfg_attr(any(definition, both), rustc_nounwind)]\n #[no_mangle]\n extern \"C-unwind\" fn nounwind() {\n-    //[definition]~^ ERROR: abnormal termination: the program aborted execution\n-    //[both]~^^ ERROR: abnormal termination: the program aborted execution\n+    //~[definition]^ ERROR: abnormal termination: the program aborted execution\n+    //~[both]^^ ERROR: abnormal termination: the program aborted execution\n     panic!();\n }\n \n@@ -15,5 +15,5 @@ fn main() {\n         fn nounwind();\n     }\n     unsafe { nounwind() }\n-    //[extern_block]~^ ERROR: unwinding past a stack frame that does not allow unwinding\n+    //~[extern_block]^ ERROR: unwinding past a stack frame that does not allow unwinding\n }"}]}