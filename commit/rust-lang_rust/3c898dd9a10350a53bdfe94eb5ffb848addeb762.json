{"sha": "3c898dd9a10350a53bdfe94eb5ffb848addeb762", "node_id": "C_kwDOAAsO6NoAKDNjODk4ZGQ5YTEwMzUwYTUzYmRmZTk0ZWI1ZmZiODQ4YWRkZWI3NjI", "commit": {"author": {"name": "Alex Vasilev", "email": "vaspiring@gmail.com", "date": "2023-01-24T17:52:30Z"}, "committer": {"name": "Alex Vasilev", "email": "vaspiring@gmail.com", "date": "2023-01-24T17:52:30Z"}, "message": "fix", "tree": {"sha": "5a6b3060cc0abf026818d508d089418266ee9f12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a6b3060cc0abf026818d508d089418266ee9f12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c898dd9a10350a53bdfe94eb5ffb848addeb762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c898dd9a10350a53bdfe94eb5ffb848addeb762", "html_url": "https://github.com/rust-lang/rust/commit/3c898dd9a10350a53bdfe94eb5ffb848addeb762", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c898dd9a10350a53bdfe94eb5ffb848addeb762/comments", "author": {"login": "vasilev-alex", "id": 4973437, "node_id": "MDQ6VXNlcjQ5NzM0Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4973437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vasilev-alex", "html_url": "https://github.com/vasilev-alex", "followers_url": "https://api.github.com/users/vasilev-alex/followers", "following_url": "https://api.github.com/users/vasilev-alex/following{/other_user}", "gists_url": "https://api.github.com/users/vasilev-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/vasilev-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vasilev-alex/subscriptions", "organizations_url": "https://api.github.com/users/vasilev-alex/orgs", "repos_url": "https://api.github.com/users/vasilev-alex/repos", "events_url": "https://api.github.com/users/vasilev-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/vasilev-alex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vasilev-alex", "id": 4973437, "node_id": "MDQ6VXNlcjQ5NzM0Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/4973437?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vasilev-alex", "html_url": "https://github.com/vasilev-alex", "followers_url": "https://api.github.com/users/vasilev-alex/followers", "following_url": "https://api.github.com/users/vasilev-alex/following{/other_user}", "gists_url": "https://api.github.com/users/vasilev-alex/gists{/gist_id}", "starred_url": "https://api.github.com/users/vasilev-alex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vasilev-alex/subscriptions", "organizations_url": "https://api.github.com/users/vasilev-alex/orgs", "repos_url": "https://api.github.com/users/vasilev-alex/repos", "events_url": "https://api.github.com/users/vasilev-alex/events{/privacy}", "received_events_url": "https://api.github.com/users/vasilev-alex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d013a79d6852c56213d6fd052c8814397f5f714", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d013a79d6852c56213d6fd052c8814397f5f714", "html_url": "https://github.com/rust-lang/rust/commit/5d013a79d6852c56213d6fd052c8814397f5f714"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "6da650aeb6b91dadc2430d23c8d403241fde8624", "filename": "crates/ide-db/src/rename.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3c898dd9a10350a53bdfe94eb5ffb848addeb762/crates%2Fide-db%2Fsrc%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c898dd9a10350a53bdfe94eb5ffb848addeb762/crates%2Fide-db%2Fsrc%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Frename.rs?ref=3c898dd9a10350a53bdfe94eb5ffb848addeb762", "patch": "@@ -334,11 +334,12 @@ pub fn source_edit_from_references(\n             _ => false,\n         };\n         if !has_emitted_edit && !edited_ranges.contains(&range.start()) {\n-            let new_name = match name {\n-                ast::NameLike::Lifetime(_) => {\n-                    format!(\"'{}\", new_name.trim_start_matches(\"'\"))\n-                }\n-                _ => new_name.into(),\n+            let (range, new_name) = match name {\n+                ast::NameLike::Lifetime(_) => (\n+                    TextRange::new(range.start() + syntax::TextSize::from(1), range.end()),\n+                    new_name.strip_prefix('\\'').unwrap_or(new_name).to_owned(),\n+                ),\n+                _ => (range, new_name.to_owned()),\n             };\n \n             edit.replace(range, new_name);\n@@ -507,14 +508,14 @@ fn source_edit_from_def(\n         }\n     }\n     if edit.is_empty() {\n-        let new_name = match def {\n+        let (range, new_name) = match def {\n             Definition::GenericParam(hir::GenericParam::LifetimeParam(_))\n-            | Definition::Label(_) => {\n-                format!(\"'{}\", new_name.trim_start_matches(\"'\"))\n-            }\n-            _ => new_name.into(),\n+            | Definition::Label(_) => (\n+                TextRange::new(range.start() + syntax::TextSize::from(1), range.end()),\n+                new_name.strip_prefix('\\'').unwrap_or(new_name).to_owned(),\n+            ),\n+            _ => (range, new_name.to_owned()),\n         };\n-\n         edit.replace(range, new_name);\n     }\n     Ok((file_id, edit.finish()))"}]}