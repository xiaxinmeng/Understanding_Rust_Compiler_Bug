{"sha": "44842db533134fcaca1f95fc8de4f6659a28778b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODQyZGI1MzMxMzRmY2FjYTFmOTVmYzhkZTRmNjY1OWEyODc3OGI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-21T19:50:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-24T21:29:16Z"}, "message": "mk: Cleanup version handling and add support for nightly dists", "tree": {"sha": "b23b229d5a6409c910f760b2283e19e1fe01da00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23b229d5a6409c910f760b2283e19e1fe01da00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44842db533134fcaca1f95fc8de4f6659a28778b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44842db533134fcaca1f95fc8de4f6659a28778b", "html_url": "https://github.com/rust-lang/rust/commit/44842db533134fcaca1f95fc8de4f6659a28778b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44842db533134fcaca1f95fc8de4f6659a28778b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669a0554da0c8c9837fba613369d32cc3b945ab0", "url": "https://api.github.com/repos/rust-lang/rust/commits/669a0554da0c8c9837fba613369d32cc3b945ab0", "html_url": "https://github.com/rust-lang/rust/commit/669a0554da0c8c9837fba613369d32cc3b945ab0"}], "stats": {"total": 76, "additions": 47, "deletions": 29}, "files": [{"sha": "60662c2a3d5b3579287e4d934d07af472e8e6b76", "filename": "mk/dist.mk", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/44842db533134fcaca1f95fc8de4f6659a28778b/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/44842db533134fcaca1f95fc8de4f6659a28778b/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=44842db533134fcaca1f95fc8de4f6659a28778b", "patch": "@@ -21,9 +21,7 @@\n # * dist-osx - OS X .pkg installers\n # * dist-tar-bins - Ad-hoc Unix binary installers\n \n-PKG_NAME := rust\n-PKG_DIR = $(PKG_NAME)-$(CFG_RELEASE)\n-PKG_TAR = dist/$(PKG_DIR).tar.gz\n+PKG_NAME = $(CFG_PACKAGE_NAME)\n \n PKG_GITMODULES := $(S)src/libuv $(S)src/llvm $(S)src/gyp $(S)src/compiler-rt\n \n@@ -62,10 +60,12 @@ LICENSE.txt: $(S)COPYRIGHT $(S)LICENSE-APACHE $(S)LICENSE-MIT\n # Source tarball\n ######################################################################\n \n+PKG_TAR = dist/$(PKG_NAME).tar.gz\n+\n $(PKG_TAR): $(PKG_FILES)\n \t@$(call E, making dist dir)\n-\t$(Q)rm -Rf tmp/dist/$(PKG_DIR)\n-\t$(Q)mkdir -p tmp/dist/$(PKG_DIR)\n+\t$(Q)rm -Rf tmp/dist/$(PKG_NAME)\n+\t$(Q)mkdir -p tmp/dist/$(PKG_NAME)\n \t$(Q)tar \\\n          -C $(S) \\\n          --exclude-vcs \\\n@@ -76,9 +76,9 @@ $(PKG_TAR): $(PKG_FILES)\n          --exclude=*/llvm/test/*/*/*.ll \\\n          --exclude=*/llvm/test/*/*/*.td \\\n          --exclude=*/llvm/test/*/*/*.s \\\n-         -c $(UNROOTED_PKG_FILES) | tar -x -C tmp/dist/$(PKG_DIR)\n-\t$(Q)tar -czf $(PKG_TAR) -C tmp/dist $(PKG_DIR)\n-\t$(Q)rm -Rf tmp/dist/$(PKG_DIR)\n+         -c $(UNROOTED_PKG_FILES) | tar -x -C tmp/dist/$(PKG_NAME)\n+\t$(Q)tar -czf $(PKG_TAR) -C tmp/dist $(PKG_NAME)\n+\t$(Q)rm -Rf tmp/dist/$(PKG_NAME)\n \n dist-tar-src: $(PKG_TAR)\n \n@@ -88,7 +88,7 @@ dist-tar-src: $(PKG_TAR)\n \n ifdef CFG_ISCC\n \n-PKG_EXE = dist/$(PKG_DIR)-install.exe\n+PKG_EXE = dist/$(PKG_NAME)-install.exe\n \n %.iss: $(S)src/etc/pkg/%.iss\n \tcp $< $@\n@@ -134,17 +134,17 @@ dist-prepare-osx-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n dist-prepare-osx-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n dist-prepare-osx-$(1): prepare-base\n \n-dist/$(PKG_DIR)-$(1).pkg: $(S)src/etc/pkg/Distribution.xml LICENSE.txt dist-prepare-osx-$(1)\n+dist/$(PKG_NAME)-$(1).pkg: $(S)src/etc/pkg/Distribution.xml LICENSE.txt dist-prepare-osx-$(1)\n \t@$$(call E, making OS X pkg)\n \t$(Q)pkgbuild --identifier org.rust-lang.rust --root tmp/dist/pkgroot-$(1) rust.pkg\n-\t$(Q)productbuild --distribution $(S)src/etc/pkg/Distribution.xml --resources . dist/$(PKG_DIR)-$(1).pkg\n+\t$(Q)productbuild --distribution $(S)src/etc/pkg/Distribution.xml --resources . dist/$(PKG_NAME)-$(1).pkg\n \t$(Q)rm -rf tmp rust.pkg\n \n endef\n \n $(foreach host,$(CFG_HOST),$(eval $(call DEF_OSX_PKG,$(host))))\n \n-dist-osx: $(foreach host,$(CFG_HOST),dist/$(PKG_DIR)-$(host).pkg)\n+dist-osx: $(foreach host,$(CFG_HOST),dist/$(PKG_NAME)-$(host).pkg)\n \n endif\n \n@@ -155,12 +155,12 @@ endif\n \n dist-install-dirs: $(foreach host,$(CFG_HOST),dist-install-dir-$(host))\n \n-dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_DIR)-$(host).tar.gz)\n+dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_NAME)-$(host).tar.gz)\n \n define DEF_INSTALLER\n dist-install-dir-$(1): PREPARE_HOST=$(1)\n dist-install-dir-$(1): PREPARE_TARGETS=$(1)\n-dist-install-dir-$(1): PREPARE_DEST_DIR=tmp/dist/$$(PKG_DIR)-$(1)\n+dist-install-dir-$(1): PREPARE_DEST_DIR=tmp/dist/$$(PKG_NAME)-$(1)\n dist-install-dir-$(1): PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n dist-install-dir-$(1): PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n dist-install-dir-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n@@ -175,9 +175,9 @@ dist-install-dir-$(1): prepare-base\n \t$$(Q)$$(PREPARE_MAN_CMD) $$(S)README.md $$(PREPARE_DEST_DIR)\n \t$$(Q)$$(PREPARE_BIN_CMD) $$(S)src/etc/install.sh $$(PREPARE_DEST_DIR)\n \n-dist/$$(PKG_DIR)-$(1).tar.gz: dist-install-dir-$(1)\n+dist/$$(PKG_NAME)-$(1).tar.gz: dist-install-dir-$(1)\n \t@$(call E, build: $$@)\n-\t$$(Q)tar -czf dist/$$(PKG_DIR)-$(1).tar.gz -C tmp/dist $$(PKG_DIR)-$(1)\n+\t$$(Q)tar -czf dist/$$(PKG_NAME)-$(1).tar.gz -C tmp/dist $$(PKG_NAME)-$(1)\n \n endef\n \n@@ -206,15 +206,15 @@ dist: dist-tar-src\n distcheck: $(PKG_TAR)\n \t$(Q)rm -Rf dist\n \t$(Q)mkdir -p dist\n-\t@$(call E, unpacking $(PKG_TAR) in dist/$(PKG_DIR))\n+\t@$(call E, unpacking $(PKG_TAR) in dist/$(PKG_NAME))\n \t$(Q)cd dist && tar -xzf ../$(PKG_TAR)\n-\t@$(call E, configuring in dist/$(PKG_DIR)-build)\n-\t$(Q)mkdir -p dist/$(PKG_DIR)-build\n-\t$(Q)cd dist/$(PKG_DIR)-build && ../$(PKG_DIR)/configure\n-\t@$(call E, making 'check' in dist/$(PKG_DIR)-build)\n-\t$(Q)+make -C dist/$(PKG_DIR)-build check\n-\t@$(call E, making 'clean' in dist/$(PKG_DIR)-build)\n-\t$(Q)+make -C dist/$(PKG_DIR)-build clean\n+\t@$(call E, configuring in dist/$(PKG_NAME)-build)\n+\t$(Q)mkdir -p dist/$(PKG_NAME)-build\n+\t$(Q)cd dist/$(PKG_NAME)-build && ../$(PKG_NAME)/configure\n+\t@$(call E, making 'check' in dist/$(PKG_NAME)-build)\n+\t$(Q)+make -C dist/$(PKG_NAME)-build check\n+\t@$(call E, making 'clean' in dist/$(PKG_NAME)-build)\n+\t$(Q)+make -C dist/$(PKG_NAME)-build clean\n \t$(Q)rm -Rf dist\n \t@echo\n \t@echo -----------------------------------------------"}, {"sha": "1cae05cc74a54be140dadbdf1b288e5e40f6111a", "filename": "mk/main.mk", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/44842db533134fcaca1f95fc8de4f6659a28778b/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/44842db533134fcaca1f95fc8de4f6659a28778b/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=44842db533134fcaca1f95fc8de4f6659a28778b", "patch": "@@ -13,9 +13,25 @@\n ######################################################################\n \n # The version number\n-CFG_RELEASE = 0.10-pre\n+CFG_RELEASE_NUM=0.10\n+CFG_RELEASE_LABEL=-pre\n \n-# The version string plus commit information\n+ifndef CFG_NIGHTLY\n+# This is the normal version string\n+CFG_RELEASE=$(CFG_RELEASE_NUM)$(CFG_RELEASE_LABEL)\n+CFG_PACKAGE_VERS=$(CFG_RELEASE)\n+else\n+# Modify the version label for nightly builds\n+CFG_RELEASE=$(CFG_RELEASE_NUM)$(CFG_RELEASE_LABEL)-nightly\n+# When building nightly distributables just reuse the same \"rust-nightly\" name\n+# so when we upload we'll always override the previous nighly. This doesn't actually\n+# impact the version reported by rustc - it's just for file naming.\n+CFG_PACKAGE_VERS=nightly\n+endif\n+# The name of the package to use for creating tarballs, installers etc.\n+CFG_PACKAGE_NAME=rust-$(CFG_PACKAGE_VERS)\n+\n+# The version string plus commit information - this is what rustc reports\n CFG_VERSION = $(CFG_RELEASE)\n CFG_GIT_DIR := $(CFG_SRC_DIR).git\n # since $(CFG_GIT) may contain spaces (especially on Windows),\n@@ -32,9 +48,9 @@ ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT_DIR))),)\n endif\n endif\n \n-# windows exe's need numeric versions - don't use anything but\n+# Windows exe's need numeric versions - don't use anything but\n # numbers and dots here\n-CFG_VERSION_WIN = $(subst -pre,,$(CFG_RELEASE))\n+CFG_VERSION_WIN = $(CFG_RELEASE_NUM)\n \n \n ######################################################################\n@@ -259,6 +275,7 @@ export CFG_BUILD_DIR\n export CFG_VERSION\n export CFG_VERSION_WIN\n export CFG_RELEASE\n+export CFG_PACKAGE_NAME\n export CFG_BUILD\n export CFG_LLVM_ROOT\n export CFG_ENABLE_MINGW_CROSS"}, {"sha": "4be90666e3daaab8022a2854c539affd8b07f4f7", "filename": "src/etc/pkg/rust.iss", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/44842db533134fcaca1f95fc8de4f6659a28778b/src%2Fetc%2Fpkg%2Frust.iss", "raw_url": "https://github.com/rust-lang/rust/raw/44842db533134fcaca1f95fc8de4f6659a28778b/src%2Fetc%2Fpkg%2Frust.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpkg%2Frust.iss?ref=44842db533134fcaca1f95fc8de4f6659a28778b", "patch": "@@ -1,5 +1,6 @@\n #define CFG_VERSION_WIN GetEnv(\"CFG_VERSION_WIN\")\n #define CFG_RELEASE GetEnv(\"CFG_RELEASE\")\n+#define CFG_PACKAGE_NAME GetEnv(\"CFG_PACKAGE_NAME\")\n \n [Setup]\n \n@@ -19,7 +20,7 @@ DisableStartupPrompt=true\n \n OutputDir=.\\\n SourceDir=.\\\n-OutputBaseFilename=rust-{#CFG_RELEASE}-install\n+OutputBaseFilename={#CFG_PACKAGE_NAME}-install\n DefaultDirName={pf32}\\Rust\n \n Compression=lzma2/ultra"}]}