{"sha": "c3cff0a75412f18971a325640a5dd7bd67b28972", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzY2ZmMGE3NTQxMmYxODk3MWEzMjU2NDBhNWRkN2JkNjdiMjg5NzI=", "commit": {"author": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-29T04:09:36Z"}, "committer": {"name": "Cheng XU", "email": "git@xuc.me", "date": "2021-08-29T04:09:43Z"}, "message": "VecDeque: improve performance for From<[T; N]>\n\nCreate VecDeque directly from the array instead of inserting items one-by-one.", "tree": {"sha": "ad8f5e09128b3a9f032cba03d2bc175f96396b26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad8f5e09128b3a9f032cba03d2bc175f96396b26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3cff0a75412f18971a325640a5dd7bd67b28972", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQMYHRMWe9yVY/QcCqHlLXXo8Z/cAUCYSsIhwAKCRCHlLXXo8Z/\ncOORAQDDXhjXntjPadreMmHH31QRTkqOZ768qJtqyabnBKZNuAD+KbEw9vFKy1S+\nEL7S52g/05FRdFmAtA7fB2+pjWxILQg=\n=7vU1\n-----END PGP SIGNATURE-----", "payload": "tree ad8f5e09128b3a9f032cba03d2bc175f96396b26\nparent 2ab73cf63d94d9ca0dc8a777813ad9339b3991f1\nauthor Cheng XU <git@xuc.me> 1630210176 -0700\ncommitter Cheng XU <git@xuc.me> 1630210183 -0700\n\nVecDeque: improve performance for From<[T; N]>\n\nCreate VecDeque directly from the array instead of inserting items one-by-one.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3cff0a75412f18971a325640a5dd7bd67b28972", "html_url": "https://github.com/rust-lang/rust/commit/c3cff0a75412f18971a325640a5dd7bd67b28972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3cff0a75412f18971a325640a5dd7bd67b28972/comments", "author": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xu-cheng", "id": 3105373, "node_id": "MDQ6VXNlcjMxMDUzNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3105373?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xu-cheng", "html_url": "https://github.com/xu-cheng", "followers_url": "https://api.github.com/users/xu-cheng/followers", "following_url": "https://api.github.com/users/xu-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/xu-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/xu-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xu-cheng/subscriptions", "organizations_url": "https://api.github.com/users/xu-cheng/orgs", "repos_url": "https://api.github.com/users/xu-cheng/repos", "events_url": "https://api.github.com/users/xu-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/xu-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ab73cf63d94d9ca0dc8a777813ad9339b3991f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ab73cf63d94d9ca0dc8a777813ad9339b3991f1", "html_url": "https://github.com/rust-lang/rust/commit/2ab73cf63d94d9ca0dc8a777813ad9339b3991f1"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "31d92b0ef73662eede25ca47a7c82a688167a8e3", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c3cff0a75412f18971a325640a5dd7bd67b28972/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3cff0a75412f18971a325640a5dd7bd67b28972/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=c3cff0a75412f18971a325640a5dd7bd67b28972", "patch": "@@ -3003,6 +3003,16 @@ impl<T, const N: usize> From<[T; N]> for VecDeque<T> {\n     /// assert_eq!(deq1, deq2);\n     /// ```\n     fn from(arr: [T; N]) -> Self {\n-        core::array::IntoIter::new(arr).collect()\n+        let mut deq = VecDeque::with_capacity(N);\n+        let arr = ManuallyDrop::new(arr);\n+        if mem::size_of::<T>() != 0 {\n+            // SAFETY: VecDeque::with_capacity ensures that there is enough capacity.\n+            unsafe {\n+                ptr::copy_nonoverlapping(arr.as_ptr(), deq.ptr(), N);\n+            }\n+        }\n+        deq.tail = 0;\n+        deq.head = N;\n+        deq\n     }\n }"}, {"sha": "2be83f68f017f280b50a910b05987c924e161d58", "filename": "library/alloc/src/collections/vec_deque/tests.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/c3cff0a75412f18971a325640a5dd7bd67b28972/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3cff0a75412f18971a325640a5dd7bd67b28972/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Ftests.rs?ref=c3cff0a75412f18971a325640a5dd7bd67b28972", "patch": "@@ -507,6 +507,36 @@ fn test_from_vec_zst_overflow() {\n     assert_eq!(vd.len(), vec.len());\n }\n \n+#[test]\n+fn test_from_array() {\n+    fn test<const N: usize>() {\n+        let mut array: [usize; N] = [0; N];\n+\n+        for i in 0..N {\n+            array[i] = i;\n+        }\n+\n+        let deq: VecDeque<_> = array.into();\n+\n+        for i in 0..N {\n+            assert_eq!(deq[i], i);\n+        }\n+\n+        assert!(deq.cap().is_power_of_two());\n+        assert_eq!(deq.len(), N);\n+    }\n+    test::<0>();\n+    test::<1>();\n+    test::<2>();\n+    test::<32>();\n+    test::<35>();\n+\n+    let array = [(); MAXIMUM_ZST_CAPACITY - 1];\n+    let deq = VecDeque::from(array);\n+    assert!(deq.cap().is_power_of_two());\n+    assert_eq!(deq.len(), MAXIMUM_ZST_CAPACITY - 1);\n+}\n+\n #[test]\n fn test_vec_from_vecdeque() {\n     use crate::vec::Vec;"}]}