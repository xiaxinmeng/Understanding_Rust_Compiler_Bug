{"sha": "604e6ba0e2fb011987554f878bed4b8ba9bc00ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNGU2YmEwZTJmYjAxMTk4NzU1NGY4NzhiZWQ0YjhiYTliYzAwZWM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-29T11:57:10Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-11-29T11:57:10Z"}, "message": "Add projections check to EUV for escape analysis", "tree": {"sha": "f42911d08a08cd841e30c21959143a36f30daa84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f42911d08a08cd841e30c21959143a36f30daa84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/604e6ba0e2fb011987554f878bed4b8ba9bc00ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl3hB5YACgkQaTCGhp1Q\nZjcq3Q//VIPh9Fv2reu2AijhN1i2xKcRj+LeQeSyHmKnZRoaJIbZ9fHyZDOf1A1M\noj4vI1RAREcsezfEoqo8ohh7K00Ruukeo2J7WmvQ6EteNqgr9ZX1vXRXKuIkRHNI\nluqEh1xcv6lPLJXcLomsYomSL3nYtJXYBMlNKiU9ybpxM/oUaXg2JRdzzTUfZLdT\n48UHVnfrhEEMT+2AYS7OBI/qsqWyDsdTtFPzamUdXrZwXYvxGaFD+2S8aiQ/S1ay\nWi07cx65VIH4fRnDaYBkRiMJIKE3a/7s7E2/pr9kDEU9LnmKrs5MiMIGXkhnDH21\nWQ0sXhW87Y4nFkR8Mip0pAOA9UD7ivXoEinORxR/zRyV5ZjVLIVAphC5papzcp53\nycyhvQ1e6wDuizqKVPsYLroEcr1AH/IlbRGqdoFK5HyYONYRmeYxsRV9NVcMuoCI\nZg6VQHNM5DTFjDgwUOodEPhDjeMulM/fI09k2A2G/16tG38ZnnhAARiB/g/3F++u\nv43hwFBy/Ub9OYjbj2/fWMUPxYbpIQb6Mmr8vJL8U/eXpGw7KJ17wP6nh5v8Ar5z\n1TAMdkzB9n0kR0Lz8yo1nvVfXzNipNjRLtKFVeBwjWvOOJtiHhMv5QDlhSSG5MBC\n8VduPkv9wAjdKSlQ92C73tubq1alSnIYeZMW6v7Zx7BDIRJjvBU=\n=IPVj\n-----END PGP SIGNATURE-----", "payload": "tree f42911d08a08cd841e30c21959143a36f30daa84\nparent b2523afae4fd1896844e960db2e192206f71e903\nauthor flip1995 <hello@philkrones.com> 1575028630 +0100\ncommitter flip1995 <hello@philkrones.com> 1575028630 +0100\n\nAdd projections check to EUV for escape analysis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/604e6ba0e2fb011987554f878bed4b8ba9bc00ec", "html_url": "https://github.com/rust-lang/rust/commit/604e6ba0e2fb011987554f878bed4b8ba9bc00ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/604e6ba0e2fb011987554f878bed4b8ba9bc00ec/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2523afae4fd1896844e960db2e192206f71e903", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2523afae4fd1896844e960db2e192206f71e903", "html_url": "https://github.com/rust-lang/rust/commit/b2523afae4fd1896844e960db2e192206f71e903"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "e796b465944d9e61dee61817624a6df8bf8f1ab7", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 29, "deletions": 25, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/604e6ba0e2fb011987554f878bed4b8ba9bc00ec/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/604e6ba0e2fb011987554f878bed4b8ba9bc00ec/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=604e6ba0e2fb011987554f878bed4b8ba9bc00ec", "patch": "@@ -106,44 +106,48 @@ fn is_argument(map: &hir::map::Map<'_>, id: HirId) -> bool {\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n     fn consume(&mut self, cmt: &Place<'tcx>, mode: ConsumeMode) {\n-        if let PlaceBase::Local(lid) = cmt.base {\n-            if let ConsumeMode::Move = mode {\n-                // moved out or in. clearly can't be localized\n-                self.set.remove(&lid);\n-            }\n-        }\n-        let map = &self.cx.tcx.hir();\n-        if let PlaceBase::Local(lid) = cmt.base {\n-            if let Some(Node::Binding(_)) = map.find(cmt.hir_id) {\n-                if self.set.contains(&lid) {\n-                    // let y = x where x is known\n-                    // remove x, insert y\n-                    self.set.insert(cmt.hir_id);\n+        if cmt.projections.is_empty() {\n+            if let PlaceBase::Local(lid) = cmt.base {\n+                if let ConsumeMode::Move = mode {\n+                    // moved out or in. clearly can't be localized\n                     self.set.remove(&lid);\n                 }\n+                let map = &self.cx.tcx.hir();\n+                if let Some(Node::Binding(_)) = map.find(cmt.hir_id) {\n+                    if self.set.contains(&lid) {\n+                        // let y = x where x is known\n+                        // remove x, insert y\n+                        self.set.insert(cmt.hir_id);\n+                        self.set.remove(&lid);\n+                    }\n+                }\n             }\n         }\n     }\n \n     fn borrow(&mut self, cmt: &Place<'tcx>, _: ty::BorrowKind) {\n-        if let PlaceBase::Local(lid) = cmt.base {\n-            self.set.remove(&lid);\n+        if cmt.projections.is_empty() {\n+            if let PlaceBase::Local(lid) = cmt.base {\n+                self.set.remove(&lid);\n+            }\n         }\n     }\n \n     fn mutate(&mut self, cmt: &Place<'tcx>) {\n-        let map = &self.cx.tcx.hir();\n-        if is_argument(map, cmt.hir_id) {\n-            // Skip closure arguments\n-            let parent_id = map.get_parent_node(cmt.hir_id);\n-            if let Some(Node::Expr(..)) = map.find(map.get_parent_node(parent_id)) {\n-                return;\n-            }\n+        if cmt.projections.is_empty() {\n+            let map = &self.cx.tcx.hir();\n+            if is_argument(map, cmt.hir_id) {\n+                // Skip closure arguments\n+                let parent_id = map.get_parent_node(cmt.hir_id);\n+                if let Some(Node::Expr(..)) = map.find(map.get_parent_node(parent_id)) {\n+                    return;\n+                }\n \n-            if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n-                self.set.insert(cmt.hir_id);\n+                if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n+                    self.set.insert(cmt.hir_id);\n+                }\n+                return;\n             }\n-            return;\n         }\n     }\n }"}]}