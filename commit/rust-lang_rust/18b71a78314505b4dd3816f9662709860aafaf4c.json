{"sha": "18b71a78314505b4dd3816f9662709860aafaf4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YjcxYTc4MzE0NTA1YjRkZDM4MTZmOTY2MjcwOTg2MGFhZmFmNGM=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-12T08:02:58Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-03-12T08:03:35Z"}, "message": "Add alignstack option for inline asm.", "tree": {"sha": "88b7845f948ff3c5b5ae3c31d9f96e27bf2f724e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b7845f948ff3c5b5ae3c31d9f96e27bf2f724e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18b71a78314505b4dd3816f9662709860aafaf4c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18b71a78314505b4dd3816f9662709860aafaf4c", "html_url": "https://github.com/rust-lang/rust/commit/18b71a78314505b4dd3816f9662709860aafaf4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18b71a78314505b4dd3816f9662709860aafaf4c/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f500ab4c1303723192952f9ae1f09290bc1fe1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f500ab4c1303723192952f9ae1f09290bc1fe1e", "html_url": "https://github.com/rust-lang/rust/commit/7f500ab4c1303723192952f9ae1f09290bc1fe1e"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "50a7669a1be9f0035e087e11585dc6396325c2c1", "filename": "src/librustc/middle/trans/build.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbuild.rs?ref=18b71a78314505b4dd3816f9662709860aafaf4c", "patch": "@@ -873,12 +873,19 @@ pub fn add_comment(bcx: block, text: &str) {\n }\n \n pub fn InlineAsmCall(cx: block, asm: *c_char, cons: *c_char,\n-                     volatile: lib::llvm::Bool, dia: AsmDialect) -> ValueRef {\n+                     volatile: bool, alignstack: bool,\n+                     dia: AsmDialect) -> ValueRef {\n     unsafe {\n         count_insn(cx, \"inlineasm\");\n \n+        let volatile = if volatile { lib::llvm::True }\n+                       else        { lib::llvm::False };\n+        let alignstack = if alignstack { lib::llvm::True }\n+                         else          { lib::llvm::False };\n+\n         let llfty = T_fn(~[], T_void());\n-        let v = llvm::LLVMInlineAsm(llfty, asm, cons, volatile, False, dia);\n+        let v = llvm::LLVMInlineAsm(llfty, asm, cons, volatile,\n+                                    alignstack, dia);\n \n         Call(cx, v, ~[])\n     }"}, {"sha": "c163183bfc8efef0284913c436dbb1961ffd1479", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=18b71a78314505b4dd3816f9662709860aafaf4c", "patch": "@@ -691,14 +691,13 @@ fn trans_rvalue_dps_unadjusted(bcx: block, expr: @ast::expr,\n         ast::expr_assign_op(op, dst, src) => {\n             return trans_assign_op(bcx, expr, op, dst, src);\n         }\n-        ast::expr_inline_asm(asm, cons, volatile) => {\n+        ast::expr_inline_asm(asm, cons, volatile, alignstack) => {\n             // XXX: cons doesn't actual contain ALL the stuff we should\n             // be passing since the constraints for in/outputs aren't included\n             do str::as_c_str(*asm) |a| {\n                 do str::as_c_str(*cons) |c| {\n-                    let v = if volatile { lib::llvm::True }\n-                            else        { lib::llvm::False };\n-                    InlineAsmCall(bcx, a, c, v, lib::llvm::AD_ATT);\n+                    InlineAsmCall(bcx, a, c, volatile, alignstack,\n+                                  lib::llvm::AD_ATT);\n                 }\n             }\n             return bcx;"}, {"sha": "b22018c4c76e13b577766b90c8462c29b1942f72", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=18b71a78314505b4dd3816f9662709860aafaf4c", "patch": "@@ -601,8 +601,8 @@ pub enum expr_ {\n     expr_ret(Option<@expr>),\n     expr_log(log_level, @expr, @expr),\n \n-    /* asm, clobbers + constraints, volatile */\n-    expr_inline_asm(@~str, @~str, bool),\n+    /* asm, clobbers + constraints, volatile, align stack */\n+    expr_inline_asm(@~str, @~str, bool, bool),\n \n     expr_mac(mac),\n "}, {"sha": "8051a67d8fdc72c74e778556386ca51a87c8dc41", "filename": "src/libsyntax/ext/asm.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fext%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fext%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fasm.rs?ref=18b71a78314505b4dd3816f9662709860aafaf4c", "patch": "@@ -52,6 +52,7 @@ pub fn expand_asm(cx: ext_ctxt, sp: span, tts: &[ast::token_tree])\n     let mut inputs = ~[];\n     let mut cons = ~\"\";\n     let mut volatile = false;\n+    let mut alignstack = false;\n \n     let mut state = Asm;\n     loop outer: {\n@@ -115,6 +116,8 @@ pub fn expand_asm(cx: ext_ctxt, sp: span, tts: &[ast::token_tree])\n \n                 if option == ~\"volatile\" {\n                     volatile = true;\n+                } else if option == ~\"alignstack\" {\n+                    alignstack = true;\n                 }\n \n                 if *p.token == token::COMMA {\n@@ -153,7 +156,7 @@ pub fn expand_asm(cx: ext_ctxt, sp: span, tts: &[ast::token_tree])\n     MRExpr(@ast::expr {\n         id: cx.next_id(),\n         callee_id: cx.next_id(),\n-        node: ast::expr_inline_asm(@asm, @cons, volatile),\n+        node: ast::expr_inline_asm(@asm, @cons, volatile, alignstack),\n         span: sp\n     })\n }"}, {"sha": "92883123782067af68c214e1ee5d0045b3bdd8f4", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b71a78314505b4dd3816f9662709860aafaf4c/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=18b71a78314505b4dd3816f9662709860aafaf4c", "patch": "@@ -1398,7 +1398,7 @@ pub fn print_expr(s: @ps, &&expr: @ast::expr) {\n           }\n         }\n       }\n-      ast::expr_inline_asm(a, c, v) => {\n+      ast::expr_inline_asm(a, c, v, _) => {\n         if v {\n             word(s.s, ~\"__volatile__ asm!\");\n         } else {"}]}