{"sha": "adfe9a45d60198316952baa5088ae77a8a5e919a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZmU5YTQ1ZDYwMTk4MzE2OTUyYmFhNTA4OGFlNzdhOGE1ZTkxOWE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-11T19:37:48Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-28T16:56:53Z"}, "message": "Call out the types that are non local on E0117", "tree": {"sha": "261872f1c9bc15784d7ac861884a1f5b77d63023", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/261872f1c9bc15784d7ac861884a1f5b77d63023"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adfe9a45d60198316952baa5088ae77a8a5e919a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adfe9a45d60198316952baa5088ae77a8a5e919a", "html_url": "https://github.com/rust-lang/rust/commit/adfe9a45d60198316952baa5088ae77a8a5e919a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adfe9a45d60198316952baa5088ae77a8a5e919a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03a50ae9b87021d4a166c70d2c932f1cb0aa8f28", "url": "https://api.github.com/repos/rust-lang/rust/commits/03a50ae9b87021d4a166c70d2c932f1cb0aa8f28", "html_url": "https://github.com/rust-lang/rust/commit/03a50ae9b87021d4a166c70d2c932f1cb0aa8f28"}], "stats": {"total": 135, "additions": 74, "deletions": 61}, "files": [{"sha": "da095ed5f36e41507e2f122f5c2dcd5db7cd25b5", "filename": "src/librustc/traits/coherence.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -237,7 +237,7 @@ pub fn trait_ref_is_local_or_fundamental<'tcx>(\n }\n \n pub enum OrphanCheckErr<'tcx> {\n-    NoLocalInputType,\n+    NonLocalInputType(Vec<Ty<'tcx>>),\n     UncoveredTy(Ty<'tcx>),\n }\n \n@@ -390,6 +390,7 @@ fn orphan_check_trait_ref<'tcx>(\n             }\n         }\n \n+        let mut non_local_spans = vec![];\n         for input_ty in\n             trait_ref.input_types().flat_map(|ty| uncover_fundamental_ty(tcx, ty, in_crate))\n         {\n@@ -401,11 +402,13 @@ fn orphan_check_trait_ref<'tcx>(\n                 debug!(\"orphan_check_trait_ref: uncovered ty: `{:?}`\", input_ty);\n                 return Err(OrphanCheckErr::UncoveredTy(input_ty))\n             }\n+            non_local_spans.push(input_ty);\n         }\n         // If we exit above loop, never found a local type.\n         debug!(\"orphan_check_trait_ref: no local type\");\n-        Err(OrphanCheckErr::NoLocalInputType)\n+        Err(OrphanCheckErr::NonLocalInputType(non_local_spans))\n     } else {\n+        let mut non_local_spans = vec![];\n         // First, create an ordered iterator over all the type\n         // parameters to the trait, with the self type appearing\n         // first.  Find the first input type that either references a\n@@ -438,10 +441,12 @@ fn orphan_check_trait_ref<'tcx>(\n                 debug!(\"orphan_check_trait_ref: uncovered type `{:?}`\", param);\n                 return Err(OrphanCheckErr::UncoveredTy(param));\n             }\n+\n+            non_local_spans.push(input_ty);\n         }\n         // If we exit above loop, never found a local type.\n         debug!(\"orphan_check_trait_ref: no local type\");\n-        Err(OrphanCheckErr::NoLocalInputType)\n+        Err(OrphanCheckErr::NonLocalInputType(non_local_spans))\n     }\n }\n "}, {"sha": "c19b588eb078dd0b09faae966c5866cf78248fd5", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -33,16 +33,20 @@ impl ItemLikeVisitor<'v> for OrphanChecker<'tcx> {\n             let sp = cm.def_span(item.span);\n             match traits::orphan_check(self.tcx, def_id) {\n                 Ok(()) => {}\n-                Err(traits::OrphanCheckErr::NoLocalInputType) => {\n-                    struct_span_err!(self.tcx.sess,\n-                                     sp,\n-                                     E0117,\n-                                     \"only traits defined in the current crate can be \\\n-                                      implemented for arbitrary types\")\n-                        .span_label(sp, \"impl doesn't use types inside crate\")\n-                        .note(\"the impl does not reference only types defined in this crate\")\n-                        .note(\"define and implement a trait or new type instead\")\n-                        .emit();\n+                Err(traits::OrphanCheckErr::NonLocalInputType(tys)) => {\n+                    let mut err = struct_span_err!(\n+                        self.tcx.sess,\n+                        sp,\n+                        E0117,\n+                        \"only traits defined in the current crate can be implemented for \\\n+                         arbitrary types\"\n+                    );\n+                    err.span_label(sp, \"impl doesn't use types inside crate\");\n+                    for ty in &tys {\n+                        err.note(&format!(\"`{}` is not defined in the current create\", ty));\n+                    }\n+                    err.note(\"define and implement a trait or new type instead\");\n+                    err.emit();\n                     return;\n                 }\n                 Err(traits::OrphanCheckErr::UncoveredTy(param_ty)) => {"}, {"sha": "be4fe4c8f6dd8a8a38f8462fe9f4f0190d6c406c", "filename": "src/test/ui/coherence/coherence-cow.re_a.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_a.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T> Remote for Pair<T,Cover<T>> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Pair<T, Cover<T>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "3d248e8b589ddaaaa35966e7090ded8efcac173b", "filename": "src/test/ui/coherence/coherence-cow.re_b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_b.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T> Remote for Pair<Cover<T>,T> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Pair<Cover<T>, T>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "e07c21aa915d24fdd6cdb67ba567fd6feb44d780", "filename": "src/test/ui/coherence/coherence-cow.re_c.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cow.re_c.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T,U> Remote for Pair<Cover<T>,U> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Pair<Cover<T>, U>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "e96c30bb0d60e8679e6738a03723e180d7bc10b3", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Misc for dyn Fundamental<Local> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "e96c30bb0d60e8679e6738a03723e180d7bc10b3", "filename": "src/test/ui/coherence/coherence-fundamental-trait-objects.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fundamental-trait-objects.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Misc for dyn Fundamental<Local> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(dyn coherence_fundamental_trait_lib::Fundamental<Local> + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "8832203dd5568d1d9d51dde658c59bac3741da2c", "filename": "src/test/ui/coherence/coherence-impl-trait-for-marker-trait-negative.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-negative.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -16,7 +16,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl !Send for dyn Marker2 {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(dyn Marker2 + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + 'static)`"}, {"sha": "0fe1b933394b67be5549ff5c2a2cff1205d2e363", "filename": "src/test/ui/coherence/coherence-impl-trait-for-marker-trait-positive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impl-trait-for-marker-trait-positive.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -16,7 +16,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for dyn Marker2 {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(dyn Marker2 + 'static)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `(dyn Object + 'static)`"}, {"sha": "9556e4f8e33e8cbcd330c309290ccb32f8820c7b", "filename": "src/test/ui/coherence/coherence-impls-copy.old.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -51,7 +51,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for i32 {}\n    | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `i32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -60,7 +60,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -69,7 +69,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -78,7 +78,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 10 previous errors"}, {"sha": "d5374aaed017af3d7a63ca779f01d3795328586b", "filename": "src/test/ui/coherence/coherence-impls-copy.re.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -51,7 +51,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for i32 {}\n    | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `i32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -60,7 +60,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -69,7 +69,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -78,7 +78,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 10 previous errors"}, {"sha": "e30b8b11f194cba273632c5231d95cc4c707097b", "filename": "src/test/ui/coherence/coherence-impls-send.old.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `&'static NotSync`\n@@ -19,7 +19,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -28,7 +28,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}, {"sha": "b6ff4b23fd31fed1a505010aa03696cc5a4962ca", "filename": "src/test/ui/coherence/coherence-impls-send.re.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`, can only be implemented for a struct/enum type, not `&'static NotSync`\n@@ -19,7 +19,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -28,7 +28,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | unsafe impl Send for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}, {"sha": "a0b025b8a49e9f683b4f9650e2b25a2bd731626a", "filename": "src/test/ui/coherence/coherence-impls-sized.old.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -40,7 +40,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -49,7 +49,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -58,7 +58,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `&'static [NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 9 previous errors"}, {"sha": "6515b98ba4af52668182b9fd7c78bce45de1045c", "filename": "src/test/ui/coherence/coherence-impls-sized.re.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-sized.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -40,7 +40,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for (MyType, MyType) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType, MyType)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -49,7 +49,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for [MyType] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[MyType]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -58,7 +58,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Sized for &'static [NotSync] {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[NotSync]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 9 previous errors"}, {"sha": "83d1bc2d4ad7f713f07a2bda6e0d6486281ca3f0", "filename": "src/test/ui/coherence/coherence-orphan.old.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,8 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl TheTrait<usize> for isize { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `isize` is not defined in the current create\n+   = note: `usize` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -13,7 +14,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl !Send for Vec<isize> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `std::vec::Vec<isize>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "83d1bc2d4ad7f713f07a2bda6e0d6486281ca3f0", "filename": "src/test/ui/coherence/coherence-orphan.re.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-orphan.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,8 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl TheTrait<usize> for isize { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `isize` is not defined in the current create\n+   = note: `usize` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -13,7 +14,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl !Send for Vec<isize> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `std::vec::Vec<isize>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "577a9576c9df5b8feda3c2214fcce9c7ae7d101d", "filename": "src/test/ui/coherence/coherence-overlapping-pairs.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlapping-pairs.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T> Remote for lib::Pair<T,Foo> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Pair<T, Foo>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "44fb85fba0807ce89cdfba11d3ac3dd7d46148f2", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered-1.re.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered-1.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,8 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T, U> Remote1<Pair<T, Local<U>>> for i32 { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `i32` is not defined in the current create\n+   = note: `lib::Pair<T, Local<U>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "e42470940b2f64a76c176296fbca80991d75935b", "filename": "src/test/ui/coherence/coherence-pair-covered-uncovered.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-pair-covered-uncovered.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T,U> Remote for Pair<T,Local<U>> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Pair<T, Local<U>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "ef31e1f0b25a758e5687b8768090038e66408404", "filename": "src/test/ui/coherence/coherence-vec-local-2.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local-2.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<T> Remote for Vec<Local<T>> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `std::vec::Vec<Local<T>>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "cb8ac28fab0c0ce72b67eade37eae42a7889c051", "filename": "src/test/ui/coherence/coherence-vec-local.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Remote for Vec<Local> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `std::vec::Vec<Local>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "cb8ac28fab0c0ce72b67eade37eae42a7889c051", "filename": "src/test/ui/coherence/coherence-vec-local.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-vec-local.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Remote for Vec<Local> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `std::vec::Vec<Local>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "818195f184160e3ad386b008ef032f798a1a0b33", "filename": "src/test/ui/coherence/coherence_local_err_struct.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl lib::MyCopy for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::MyStruct<MyType>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "818195f184160e3ad386b008ef032f798a1a0b33", "filename": "src/test/ui/coherence/coherence_local_err_struct.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_struct.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl lib::MyCopy for lib::MyStruct<MyType> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::MyStruct<MyType>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "aebca9cfacc09f691ef5aaadb41292467fabf6ca", "filename": "src/test/ui/coherence/coherence_local_err_tuple.old.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.old.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl lib::MyCopy for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "aebca9cfacc09f691ef5aaadb41292467fabf6ca", "filename": "src/test/ui/coherence/coherence_local_err_tuple.re.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_local_err_tuple.re.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl lib::MyCopy for (MyType,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(MyType,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "cfd4685528924f088ee3f47e61a92fc8213c334e", "filename": "src/test/ui/coherence/impl-foreign[foreign]-for-foreign.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl-foreign%5Bforeign%5D-for-foreign.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,8 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Remote1<u32> for f64 {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `f64` is not defined in the current create\n+   = note: `u32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to previous error"}, {"sha": "334adb27fda2639b64458fa811104060ce0c2a38", "filename": "src/test/ui/dropck/drop-on-non-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdrop-on-non-struct.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -10,7 +10,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl<'a> Drop for &'a mut isize {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `&'a mut isize` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "ecd0c152f28c87032be61a7a96c9efdfc451dc01", "filename": "src/test/ui/error-codes/E0117.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0117.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -10,7 +10,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Drop for u32 {}\n    | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `u32` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 2 previous errors"}, {"sha": "322fdd9f11d056f037acd747e66c553b54682f88", "filename": "src/test/ui/error-codes/E0206.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0206.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -16,7 +16,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl Copy for Foo { }\n    | ^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `[u8; _]` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 3 previous errors"}, {"sha": "42d6792d0d0e6237546c21e45b32eb7044cf76b8", "filename": "src/test/ui/typeck/typeck-default-trait-impl-cross-crate-coherence.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adfe9a45d60198316952baa5088ae77a8a5e919a/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Ftypeck-default-trait-impl-cross-crate-coherence.stderr?ref=adfe9a45d60198316952baa5088ae77a8a5e919a", "patch": "@@ -4,7 +4,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl DefaultedTrait for (A,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(A,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0117]: only traits defined in the current crate can be implemented for arbitrary types\n@@ -13,7 +13,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl !DefaultedTrait for (B,) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `(B,)` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error[E0321]: cross-crate traits with a default impl, like `lib::DefaultedTrait`, can only be implemented for a struct/enum type defined in the current crate\n@@ -28,7 +28,7 @@ error[E0117]: only traits defined in the current crate can be implemented for ar\n LL | impl DefaultedTrait for lib::Something<C> { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl doesn't use types inside crate\n    |\n-   = note: the impl does not reference only types defined in this crate\n+   = note: `lib::Something<C>` is not defined in the current create\n    = note: define and implement a trait or new type instead\n \n error: aborting due to 4 previous errors"}]}