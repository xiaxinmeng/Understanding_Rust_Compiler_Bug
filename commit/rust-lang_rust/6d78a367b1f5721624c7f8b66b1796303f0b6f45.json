{"sha": "6d78a367b1f5721624c7f8b66b1796303f0b6f45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNzhhMzY3YjFmNTcyMTYyNGM3ZjhiNjZiMTc5NjMwM2YwYjZmNDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-17T19:28:48Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2013-07-17T19:28:48Z"}, "message": "extra: avoid possible divide-by-zero conditions test.", "tree": {"sha": "e463a650c0b08222315db8d3a6355f53a2c32cab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e463a650c0b08222315db8d3a6355f53a2c32cab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d78a367b1f5721624c7f8b66b1796303f0b6f45", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d78a367b1f5721624c7f8b66b1796303f0b6f45", "html_url": "https://github.com/rust-lang/rust/commit/6d78a367b1f5721624c7f8b66b1796303f0b6f45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d78a367b1f5721624c7f8b66b1796303f0b6f45/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bf6b84a4d23606394fb7176b4f2f216dff06e5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bf6b84a4d23606394fb7176b4f2f216dff06e5b", "html_url": "https://github.com/rust-lang/rust/commit/4bf6b84a4d23606394fb7176b4f2f216dff06e5b"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "deef1fc36138ddfa81603b6fb48257b6a9a1ba71", "filename": "src/libextra/test.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d78a367b1f5721624c7f8b66b1796303f0b6f45/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d78a367b1f5721624c7f8b66b1796303f0b6f45/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=6d78a367b1f5721624c7f8b66b1796303f0b6f45", "patch": "@@ -845,7 +845,7 @@ impl MetricMap {\n                     if delta.abs() <= noise {\n                         LikelyNoise\n                     } else {\n-                        let pct = delta.abs() / vold.value * 100.0;\n+                        let pct = delta.abs() / (vold.value).max(&f64::epsilon) * 100.0;\n                         if vold.noise < 0.0 {\n                             // When 'noise' is negative, it means we want\n                             // to see deltas that go up over time, and can\n@@ -954,7 +954,7 @@ impl BenchHarness {\n         if self.iterations == 0 {\n             0\n         } else {\n-            self.ns_elapsed() / self.iterations\n+            self.ns_elapsed() / self.iterations.max(&1)\n         }\n     }\n \n@@ -977,7 +977,7 @@ impl BenchHarness {\n         if self.ns_per_iter() == 0 {\n             n = 1_000_000;\n         } else {\n-            n = 1_000_000 / self.ns_per_iter();\n+            n = 1_000_000 / self.ns_per_iter().max(&1);\n         }\n \n         let mut total_run = 0;\n@@ -1047,7 +1047,8 @@ pub mod bench {\n \n         let ns_iter_summ = bs.auto_bench(f);\n \n-        let iter_s = 1_000_000_000 / (ns_iter_summ.median as u64);\n+        let ns_iter = (ns_iter_summ.median as u64).max(&1);\n+        let iter_s = 1_000_000_000 / ns_iter;\n         let mb_s = (bs.bytes * iter_s) / 1_000_000;\n \n         BenchSamples {"}]}