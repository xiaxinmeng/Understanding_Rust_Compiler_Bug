{"sha": "5f2099d4af1a88c616fc2fae74c6429461de49fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMjA5OWQ0YWYxYTg4YzYxNmZjMmZhZTc0YzY0Mjk0NjFkZTQ5ZmM=", "commit": {"author": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-12T12:38:07Z"}, "committer": {"name": "ggomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-05-12T14:42:43Z"}, "message": "Add more details and examples in error code", "tree": {"sha": "824ae5c1b8abb5ba05c862ea98b18d235214087b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/824ae5c1b8abb5ba05c862ea98b18d235214087b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f2099d4af1a88c616fc2fae74c6429461de49fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f2099d4af1a88c616fc2fae74c6429461de49fc", "html_url": "https://github.com/rust-lang/rust/commit/5f2099d4af1a88c616fc2fae74c6429461de49fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f2099d4af1a88c616fc2fae74c6429461de49fc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992bb1332ffc68093a6aa555807b9129a1e94977", "url": "https://api.github.com/repos/rust-lang/rust/commits/992bb1332ffc68093a6aa555807b9129a1e94977", "html_url": "https://github.com/rust-lang/rust/commit/992bb1332ffc68093a6aa555807b9129a1e94977"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "457d25923c611b21c56ba249b20267446344797e", "filename": "src/librustc_const_eval/diagnostics.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5f2099d4af1a88c616fc2fae74c6429461de49fc/src%2Flibrustc_const_eval%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2099d4af1a88c616fc2fae74c6429461de49fc/src%2Flibrustc_const_eval%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fdiagnostics.rs?ref=5f2099d4af1a88c616fc2fae74c6429461de49fc", "patch": "@@ -62,8 +62,6 @@ fn foo(x: Empty) {\n However, this won't:\n \n ```compile_fail\n-enum Empty {}\n-\n fn foo(x: Option<String>) {\n     match x {\n         // empty\n@@ -191,7 +189,7 @@ inner `String` to be moved into a variable called `s`.\n let x = Some(\"s\".to_string());\n \n match x {\n-    op_string @ Some(s) => {},\n+    op_string @ Some(s) => {}, // error: cannot bind by-move with sub-bindings\n     None => {},\n }\n ```\n@@ -288,7 +286,8 @@ struct X { x: (), }\n \n let x = Some((X { x: () }, X { x: () }));\n match x {\n-    Some((y, ref z)) => {},\n+    Some((y, ref z)) => {}, // error: cannot bind by-move and by-ref in the\n+                            //        same pattern\n     None => panic!()\n }\n ```\n@@ -574,6 +573,12 @@ be a compile-time constant. Erroneous code example:\n     let x = [0i32; len]; // error: expected constant integer for repeat count,\n                          //        found variable\n ```\n+\n+Working example:\n+\n+```\n+let x = [0i32; 10];\n+```\n \"##,\n \n }"}, {"sha": "ac23d6f57ea7ddfe54fbfd072004250460969c51", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5f2099d4af1a88c616fc2fae74c6429461de49fc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f2099d4af1a88c616fc2fae74c6429461de49fc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=5f2099d4af1a88c616fc2fae74c6429461de49fc", "patch": "@@ -45,8 +45,8 @@ Matching with the wrong number of fields has no sensible interpretation:\n \n ```compile_fail\n enum Fruit {\n-    Apple(String, String),\n-    Pear(u32),\n+    Fruit::Apple(String, String),\n+    Fruit::Pear(u32),\n }\n \n let x = Fruit::Apple(String::new(), String::new());\n@@ -77,8 +77,8 @@ enum Number {\n \n // Assuming x is a Number we can pattern match on its contents.\n match x {\n-    Zero(inside) => {},\n-    One(inside) => {},\n+    Number::Zero(inside) => {},\n+    Number::One(inside) => {},\n }\n ```\n "}]}