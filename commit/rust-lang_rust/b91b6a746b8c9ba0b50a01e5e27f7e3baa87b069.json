{"sha": "b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MWI2YTc0NmI4YzliYTBiNTBhMDFlNWUyN2Y3ZTNiYWE4N2IwNjk=", "commit": {"author": {"name": "chromatic", "email": "chromatic@wgz.org", "date": "2014-02-07T00:00:49Z"}, "committer": {"name": "chromatic", "email": "chromatic@wgz.org", "date": "2014-02-07T17:59:19Z"}, "message": "Cleaned up imports per coding standards.\n\nNo functional changes; just style.", "tree": {"sha": "700a109c6e1560a3c09867e07fa6a17703169bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/700a109c6e1560a3c09867e07fa6a17703169bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "html_url": "https://github.com/rust-lang/rust/commit/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/comments", "author": {"login": "chromatic", "id": 50255, "node_id": "MDQ6VXNlcjUwMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/50255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chromatic", "html_url": "https://github.com/chromatic", "followers_url": "https://api.github.com/users/chromatic/followers", "following_url": "https://api.github.com/users/chromatic/following{/other_user}", "gists_url": "https://api.github.com/users/chromatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/chromatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chromatic/subscriptions", "organizations_url": "https://api.github.com/users/chromatic/orgs", "repos_url": "https://api.github.com/users/chromatic/repos", "events_url": "https://api.github.com/users/chromatic/events{/privacy}", "received_events_url": "https://api.github.com/users/chromatic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chromatic", "id": 50255, "node_id": "MDQ6VXNlcjUwMjU1", "avatar_url": "https://avatars.githubusercontent.com/u/50255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chromatic", "html_url": "https://github.com/chromatic", "followers_url": "https://api.github.com/users/chromatic/followers", "following_url": "https://api.github.com/users/chromatic/following{/other_user}", "gists_url": "https://api.github.com/users/chromatic/gists{/gist_id}", "starred_url": "https://api.github.com/users/chromatic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chromatic/subscriptions", "organizations_url": "https://api.github.com/users/chromatic/orgs", "repos_url": "https://api.github.com/users/chromatic/repos", "events_url": "https://api.github.com/users/chromatic/events{/privacy}", "received_events_url": "https://api.github.com/users/chromatic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "813886b22ccd0976db03c1bfcbb9738b5b7c41db", "url": "https://api.github.com/repos/rust-lang/rust/commits/813886b22ccd0976db03c1bfcbb9738b5b7c41db", "html_url": "https://github.com/rust-lang/rust/commit/813886b22ccd0976db03c1bfcbb9738b5b7c41db"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "7965127007c1ce8f8e095fa05b0e475ec016a077", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -10,17 +10,17 @@\n \n //! Operations on ASCII strings and characters\n \n-use to_str::{ToStr,IntoStr};\n+use to_str::{ToStr, IntoStr};\n use str;\n use str::Str;\n use str::StrSlice;\n use str::OwnedStr;\n use container::Container;\n use cast;\n use iter::Iterator;\n-use vec::{ImmutableVector,MutableVector,Vector};\n+use vec::{ImmutableVector, MutableVector, Vector};\n use to_bytes::IterBytes;\n-use option::{Option,Some,None};\n+use option::{Option, Some, None};\n \n /// Datatype to hold one ascii character. It wraps a `u8`, with the highest bit always zero.\n #[deriving(Clone, Eq, Ord, TotalOrd, TotalEq)]"}, {"sha": "0a3c87f405893080a785373571c1acf6a4bf84e8", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -10,10 +10,10 @@\n \n //! Types dealing with dynamic mutability\n \n-use clone::{Clone,DeepClone};\n+use clone::{Clone, DeepClone};\n use cmp::Eq;\n use ops::Drop;\n-use option::{None,Option,Some};\n+use option::{None, Option, Some};\n use cast;\n use kinds::{marker, Pod};\n "}, {"sha": "8e6643f0413645a6cda367e03197ae8777b42a23", "filename": "src/libstd/local_data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Flocal_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Flocal_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flocal_data.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -41,8 +41,8 @@ local_data::get(key_vector, |opt| assert_eq!(*opt.unwrap(), ~[4]));\n // magic.\n \n use cast;\n-use option::{None,Option,Some};\n-use vec::{ImmutableVector,MutableVector,OwnedVector};\n+use option::{None, Option, Some};\n+use vec::{ImmutableVector, MutableVector, OwnedVector};\n use iter::{Iterator};\n use rt::task::{Task, LocalStorage};\n use util::replace;"}, {"sha": "fdbca2b9f3322ca8590636d1591a3f6ed49f1516", "filename": "src/libstd/reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Freference.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -11,7 +11,7 @@\n //! Utilities for references\n \n #[cfg(not(test))]\n-use cmp::{Eq,Ord,Ordering,TotalEq,TotalOrd};\n+use cmp::{Eq, Ord, Ordering, TotalEq, TotalOrd};\n \n // Equality for region pointers\n #[cfg(not(test))]"}, {"sha": "fdd26c6c3839cd351989ff08c34b546b5279b43d", "filename": "src/libstd/run.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -20,9 +20,9 @@ use io::process;\n use io;\n use libc::{pid_t, c_int};\n use libc;\n-use option::{None,Option,Some};\n+use option::{None, Option, Some};\n use task::spawn;\n-use path::{Path,GenericPath};\n+use path::{Path, GenericPath};\n use result::Ok;\n use str::Str;\n use vec::Vector;"}, {"sha": "f1c3d7a7a911d7048130192fb61686614f54c8c2", "filename": "src/libstd/trie.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftrie.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -10,16 +10,16 @@\n \n //! Ordered containers with integer keys, implemented as radix tries (`TrieSet` and `TrieMap` types)\n \n-use option::{None,Option,Some};\n-use container::{Container,Map,Mutable,MutableMap};\n-use iter::{Extendable,FromIterator,Iterator};\n+use option::{None, Option, Some};\n+use container::{Container, Map, Mutable, MutableMap};\n+use iter::{Extendable, FromIterator, Iterator};\n use mem;\n use uint;\n use util::replace;\n use unstable::intrinsics::init;\n use vec;\n use ptr::RawPtr;\n-use vec::{ImmutableVector,Items,MutableVector,MutItems,OwnedVector};\n+use vec::{ImmutableVector, Items, MutableVector, MutItems, OwnedVector};\n \n // FIXME: #5244: need to manually update the TrieNode constructor\n static SHIFT: uint = 4;"}, {"sha": "675d6f35aab2e74a59b2974e03c70a8cef6b47a9", "filename": "src/libstd/unit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069/src%2Flibstd%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funit.rs?ref=b91b6a746b8c9ba0b50a01e5e27f7e3baa87b069", "patch": "@@ -12,7 +12,7 @@\n \n #[cfg(not(test))]\n use default::Default;\n-use cmp::{Eq,Equal,Ord,Ordering,TotalEq,TotalOrd};\n+use cmp::{Eq, Equal, Ord, Ordering, TotalEq, TotalOrd};\n \n #[cfg(not(test))]\n impl Eq for () {"}]}