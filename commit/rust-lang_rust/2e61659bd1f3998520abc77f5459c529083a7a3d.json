{"sha": "2e61659bd1f3998520abc77f5459c529083a7a3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNjE2NTliZDFmMzk5ODUyMGFiYzc3ZjU0NTljNTI5MDgzYTdhM2Q=", "commit": {"author": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-08-14T00:48:59Z"}, "committer": {"name": "Roxane", "email": "roxane.fruytier@hotmail.com", "date": "2021-08-14T00:48:59Z"}, "message": "Update comment and fix fmt", "tree": {"sha": "746685fbed51b64008d7c383a444ef29cd7b67cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/746685fbed51b64008d7c383a444ef29cd7b67cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e61659bd1f3998520abc77f5459c529083a7a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e61659bd1f3998520abc77f5459c529083a7a3d", "html_url": "https://github.com/rust-lang/rust/commit/2e61659bd1f3998520abc77f5459c529083a7a3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e61659bd1f3998520abc77f5459c529083a7a3d/comments", "author": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "roxelo", "id": 12419401, "node_id": "MDQ6VXNlcjEyNDE5NDAx", "avatar_url": "https://avatars.githubusercontent.com/u/12419401?v=4", "gravatar_id": "", "url": "https://api.github.com/users/roxelo", "html_url": "https://github.com/roxelo", "followers_url": "https://api.github.com/users/roxelo/followers", "following_url": "https://api.github.com/users/roxelo/following{/other_user}", "gists_url": "https://api.github.com/users/roxelo/gists{/gist_id}", "starred_url": "https://api.github.com/users/roxelo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/roxelo/subscriptions", "organizations_url": "https://api.github.com/users/roxelo/orgs", "repos_url": "https://api.github.com/users/roxelo/repos", "events_url": "https://api.github.com/users/roxelo/events{/privacy}", "received_events_url": "https://api.github.com/users/roxelo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d0afaec5ad5b1c4e80d359bd070edba9f60f396", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0afaec5ad5b1c4e80d359bd070edba9f60f396", "html_url": "https://github.com/rust-lang/rust/commit/7d0afaec5ad5b1c4e80d359bd070edba9f60f396"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1bdad508daa2d05c0e54cba1c36ba09abcb4e1e8", "filename": "compiler/rustc_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e61659bd1f3998520abc77f5459c529083a7a3d/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e61659bd1f3998520abc77f5459c529083a7a3d/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=2e61659bd1f3998520abc77f5459c529083a7a3d", "patch": "@@ -266,7 +266,7 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                                         needs_to_be_read = true;\n                                     }\n                                 } else {\n-                                    // If it is not ty::Adt, then it is a MultiVariant\n+                                    // If it is not ty::Adt, then it should be read\n                                     needs_to_be_read = true;\n                                 }\n                             }"}, {"sha": "914ebbe26a57d0b817ac99b8a36cd9ad8c92ac62", "filename": "src/test/ui/closures/2229_closure_analysis/match-edge-cases.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2e61659bd1f3998520abc77f5459c529083a7a3d/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch-edge-cases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e61659bd1f3998520abc77f5459c529083a7a3d/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch-edge-cases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmatch-edge-cases.rs?ref=2e61659bd1f3998520abc77f5459c529083a7a3d", "patch": "@@ -5,7 +5,7 @@ const PATTERN_REF: &str = \"Hello World\";\n const NUMBER: i32 = 30;\n const NUMBER_POINTER: *const i32 = &NUMBER;\n \n-pub fn multi_variant_ref(event: &str) {\n+pub fn edge_case_ref(event: &str) {\n     let _ = || {\n         match event {\n             PATTERN_REF => (),\n@@ -14,7 +14,7 @@ pub fn multi_variant_ref(event: &str) {\n     };\n }\n \n-pub fn multi_variant_str(event: String) {\n+pub fn edge_case_str(event: String) {\n     let _ = || {\n         match event.as_str() {\n             \"hello\" => (),\n@@ -23,7 +23,7 @@ pub fn multi_variant_str(event: String) {\n     };\n }\n \n-pub fn multi_variant_raw_ptr(event: *const i32) {\n+pub fn edge_case_raw_ptr(event: *const i32) {\n     let _ = || {\n         match event {\n             NUMBER_POINTER => (),\n@@ -32,7 +32,7 @@ pub fn multi_variant_raw_ptr(event: *const i32) {\n     };\n }\n \n-pub fn multi_variant_char(event: char) {\n+pub fn edge_case_char(event: char) {\n     let _ = || {\n         match event {\n             'a' => (),", "previous_filename": "src/test/ui/closures/2229_closure_analysis/match-multi-variant.rs"}]}