{"sha": "1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "node_id": "C_kwDOAAsO6NoAKDFjNDgwMjU2ODVjYjY0ZWNkZjYzN2Y0YWVkM2E4NzBkNmZlMmNkMWE", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-12-11T00:11:26Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-12-12T11:26:59Z"}, "message": "Address review feedback", "tree": {"sha": "721c6e13c0cf3ea66a8d23bfa9a87eab309b0336", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/721c6e13c0cf3ea66a8d23bfa9a87eab309b0336"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "html_url": "https://github.com/rust-lang/rust/commit/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0dcd812de849fd0be56da98726a11773b9f72bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0dcd812de849fd0be56da98726a11773b9f72bf2", "html_url": "https://github.com/rust-lang/rust/commit/0dcd812de849fd0be56da98726a11773b9f72bf2"}], "stats": {"total": 83, "additions": 41, "deletions": 42}, "files": [{"sha": "71db58f2d8baee23c59b3fb533da1e065bcd5542", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -772,7 +772,6 @@ pub trait LintContext: Sized {\n                 }\n                 BuiltinLintDiagnostics::NamedAsmLabel(help) => {\n                     db.help(&help);\n-                    //db.note(\"see the asm section of the unstable book <https://doc.rust-lang.org/nightly/unstable-book/library-features/asm.html#labels> for more information\");\n                 }\n             }\n             // Rewrap `db`, and pass control to the user."}, {"sha": "1afc83f766df3e6bed0ad5d972509dd70005156e", "filename": "library/std/src/sys/solid/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fsolid%2Fabi%2Fmod.rs?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -11,7 +11,7 @@ pub fn breakpoint_program_exited(tid: usize) {\n             // SOLID_BP_PROGRAM_EXITED = 15\n             #[cfg(target_arch = \"arm\")]\n             () => core::arch::asm!(\"bkpt #15\", in(\"r0\") tid),\n-            #[cfg(core::arch::asm = \"aarch64\")]\n+            #[cfg(target_arch = \"aarch64\")]\n             () => core::arch::asm!(\"hlt #15\", in(\"x0\") tid),\n         }\n     }"}, {"sha": "d630f4ecb7b2293e59310ed8556c21aece2cd3dd", "filename": "src/doc/unstable-book/src/compiler-flags/sanitizer.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -201,6 +201,7 @@ LLVM CFI can be enabled with -Zsanitizer=cfi and requires LTO (i.e., -Clto).\n ```text\n #![feature(naked_functions)]\n \n+use std::arch::asm;\n use std::mem;\n \n fn add_one(x: i32) -> i32 {"}, {"sha": "c316379d5b12e4be84bc532854616db68ffd23a2", "filename": "src/test/assembly/x86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fx86_64-fortanix-unknown-sgx-lvi-inline-assembly.rs?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -29,9 +29,9 @@ pub extern \"C\" fn get(ptr: *const u64) -> u64 {\n pub extern \"C\" fn myret() {\n     unsafe {\n         asm!(\n-            \".start_myret_inline_asm:\n-            ret\n-            .end_myret_inline_asm:\"\n+            \".start_myret_inline_asm:\",\n+            \"ret\",\n+            \".end_myret_inline_asm:\",\n         );\n     }\n }"}, {"sha": "3bab95083b6d9cb1d2087c5afcfd3b5f2998a65a", "filename": "src/test/ui/macros/macros-nonfatal-errors.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -9,6 +9,8 @@\n #![feature(derive_default_enum)]\n #![allow(deprecated)] // llvm_asm!\n \n+use std::arch::asm;\n+\n #[derive(Default)]\n struct DefaultInnerAttrStruct {\n     #[default] //~ ERROR the `#[default]` attribute may only be used on unit enum variants"}, {"sha": "9a360206e6eea4ae3743303ca81322900de756dc", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 34, "deletions": 37, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1c48025685cb64ecdf637f4aed3a870d6fe2cd1a/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=1c48025685cb64ecdf637f4aed3a870d6fe2cd1a", "patch": "@@ -1,41 +1,41 @@\n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:14:5\n+  --> $DIR/macros-nonfatal-errors.rs:16:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:19:36\n+  --> $DIR/macros-nonfatal-errors.rs:21:36\n    |\n LL | struct DefaultInnerAttrTupleStruct(#[default] ());\n    |                                    ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:23:1\n+  --> $DIR/macros-nonfatal-errors.rs:25:1\n    |\n LL | #[default]\n    | ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:27:1\n+  --> $DIR/macros-nonfatal-errors.rs:29:1\n    |\n LL | #[default]\n    | ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:37:11\n+  --> $DIR/macros-nonfatal-errors.rs:39:11\n    |\n LL |     Foo = #[default] 0,\n    |           ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:38:14\n+  --> $DIR/macros-nonfatal-errors.rs:40:14\n    |\n LL |     Bar([u8; #[default] 1]),\n    |              ^^^^^^^^^^\n \n error: no default declared\n-  --> $DIR/macros-nonfatal-errors.rs:43:10\n+  --> $DIR/macros-nonfatal-errors.rs:45:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -44,7 +44,7 @@ LL | #[derive(Default)]\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: multiple declared defaults\n-  --> $DIR/macros-nonfatal-errors.rs:49:10\n+  --> $DIR/macros-nonfatal-errors.rs:51:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -62,15 +62,15 @@ LL |     Baz,\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `#[default]` attribute does not accept a value\n-  --> $DIR/macros-nonfatal-errors.rs:61:5\n+  --> $DIR/macros-nonfatal-errors.rs:63:5\n    |\n LL |     #[default = 1]\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: try using `#[default]`\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:69:5\n+  --> $DIR/macros-nonfatal-errors.rs:71:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -81,13 +81,13 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing this\n-  --> $DIR/macros-nonfatal-errors.rs:68:5\n+  --> $DIR/macros-nonfatal-errors.rs:70:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:79:5\n+  --> $DIR/macros-nonfatal-errors.rs:81:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -99,7 +99,7 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing these\n-  --> $DIR/macros-nonfatal-errors.rs:76:5\n+  --> $DIR/macros-nonfatal-errors.rs:78:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n@@ -109,15 +109,15 @@ LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:86:5\n+  --> $DIR/macros-nonfatal-errors.rs:88:5\n    |\n LL |     Foo {},\n    |     ^^^\n    |\n    = help: consider a manual implementation of `Default`\n \n error: default variant must be exhaustive\n-  --> $DIR/macros-nonfatal-errors.rs:94:5\n+  --> $DIR/macros-nonfatal-errors.rs:96:5\n    |\n LL |     #[non_exhaustive]\n    |     ----------------- declared `#[non_exhaustive]` here\n@@ -126,46 +126,52 @@ LL |     Foo,\n    |\n    = help: consider a manual implementation of `Default`\n \n+error: asm template must be a string literal\n+  --> $DIR/macros-nonfatal-errors.rs:101:10\n+   |\n+LL |     asm!(invalid);\n+   |          ^^^^^^^\n+\n error: inline assembly must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:100:15\n+  --> $DIR/macros-nonfatal-errors.rs:102:15\n    |\n LL |     llvm_asm!(invalid);\n    |               ^^^^^^^\n \n error: concat_idents! requires ident args\n-  --> $DIR/macros-nonfatal-errors.rs:102:5\n+  --> $DIR/macros-nonfatal-errors.rs:104:5\n    |\n LL |     concat_idents!(\"not\", \"idents\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:104:17\n+  --> $DIR/macros-nonfatal-errors.rs:106:17\n    |\n LL |     option_env!(invalid);\n    |                 ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:105:10\n+  --> $DIR/macros-nonfatal-errors.rs:107:10\n    |\n LL |     env!(invalid);\n    |          ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:106:10\n+  --> $DIR/macros-nonfatal-errors.rs:108:10\n    |\n LL |     env!(foo, abr, baz);\n    |          ^^^\n \n error: environment variable `RUST_HOPEFULLY_THIS_DOESNT_EXIST` not defined\n-  --> $DIR/macros-nonfatal-errors.rs:107:5\n+  --> $DIR/macros-nonfatal-errors.rs:109:5\n    |\n LL |     env!(\"RUST_HOPEFULLY_THIS_DOESNT_EXIST\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: format argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:109:13\n+  --> $DIR/macros-nonfatal-errors.rs:111:13\n    |\n LL |     format!(invalid);\n    |             ^^^^^^^\n@@ -176,53 +182,44 @@ LL |     format!(\"{}\", invalid);\n    |             +++++\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:111:14\n+  --> $DIR/macros-nonfatal-errors.rs:113:14\n    |\n LL |     include!(invalid);\n    |              ^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:113:18\n+  --> $DIR/macros-nonfatal-errors.rs:115:18\n    |\n LL |     include_str!(invalid);\n    |                  ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:114:5\n+  --> $DIR/macros-nonfatal-errors.rs:116:5\n    |\n LL |     include_str!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_str` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:115:20\n+  --> $DIR/macros-nonfatal-errors.rs:117:20\n    |\n LL |     include_bytes!(invalid);\n    |                    ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:116:5\n+  --> $DIR/macros-nonfatal-errors.rs:118:5\n    |\n LL |     include_bytes!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trace_macros! accepts only `true` or `false`\n-  --> $DIR/macros-nonfatal-errors.rs:118:5\n+  --> $DIR/macros-nonfatal-errors.rs:120:5\n    |\n LL |     trace_macros!(invalid);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: cannot find macro `asm` in this scope\n-  --> $DIR/macros-nonfatal-errors.rs:99:5\n-   |\n-LL |     asm!(invalid);\n-   |     ^^^\n-   |\n-   = note: consider importing this macro:\n-           std::arch::asm\n-\n error: aborting due to 27 previous errors\n "}]}