{"sha": "65ae0b9a094d83616585438b86e38b36047d8b45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YWUwYjlhMDk0ZDgzNjE2NTg1NDM4Yjg2ZTM4YjM2MDQ3ZDhiNDU=", "commit": {"author": {"name": "moxian", "email": "moxian@google.com", "date": "2018-09-26T18:29:26Z"}, "committer": {"name": "moxian", "email": "moxian@google.com", "date": "2018-09-26T18:47:17Z"}, "message": "Change enum align semantics to care about absolute length, rather than difference.\n\nIf we're only aligning enum discriminants that are \"not too far apart\n(length-wise)\", then this works really well for enums with\nconsistently-long or consistently-short idents, but not for the mixed\nones.\nHowever, consistently-long idents is somewhate of an uncommon case and\noverlong idents may be allowed to be formatted suboptimally if that\nmakes mixed-length idents work better (and it does in this case).", "tree": {"sha": "712397fa9260d6acf08a33524c33288dc214ac1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712397fa9260d6acf08a33524c33288dc214ac1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65ae0b9a094d83616585438b86e38b36047d8b45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65ae0b9a094d83616585438b86e38b36047d8b45", "html_url": "https://github.com/rust-lang/rust/commit/65ae0b9a094d83616585438b86e38b36047d8b45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65ae0b9a094d83616585438b86e38b36047d8b45/comments", "author": {"login": "moxian", "id": 7831163, "node_id": "MDQ6VXNlcjc4MzExNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7831163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moxian", "html_url": "https://github.com/moxian", "followers_url": "https://api.github.com/users/moxian/followers", "following_url": "https://api.github.com/users/moxian/following{/other_user}", "gists_url": "https://api.github.com/users/moxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/moxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moxian/subscriptions", "organizations_url": "https://api.github.com/users/moxian/orgs", "repos_url": "https://api.github.com/users/moxian/repos", "events_url": "https://api.github.com/users/moxian/events{/privacy}", "received_events_url": "https://api.github.com/users/moxian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "moxian", "id": 7831163, "node_id": "MDQ6VXNlcjc4MzExNjM=", "avatar_url": "https://avatars.githubusercontent.com/u/7831163?v=4", "gravatar_id": "", "url": "https://api.github.com/users/moxian", "html_url": "https://github.com/moxian", "followers_url": "https://api.github.com/users/moxian/followers", "following_url": "https://api.github.com/users/moxian/following{/other_user}", "gists_url": "https://api.github.com/users/moxian/gists{/gist_id}", "starred_url": "https://api.github.com/users/moxian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/moxian/subscriptions", "organizations_url": "https://api.github.com/users/moxian/orgs", "repos_url": "https://api.github.com/users/moxian/repos", "events_url": "https://api.github.com/users/moxian/events{/privacy}", "received_events_url": "https://api.github.com/users/moxian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc22869fb45f5ad73dce67f8484dd2a6a61bd41e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc22869fb45f5ad73dce67f8484dd2a6a61bd41e", "html_url": "https://github.com/rust-lang/rust/commit/cc22869fb45f5ad73dce67f8484dd2a6a61bd41e"}], "stats": {"total": 124, "additions": 68, "deletions": 56}, "files": [{"sha": "824868bca098290a33e8404a903d5eb2d9d4034b", "filename": "Configurations.md", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/65ae0b9a094d83616585438b86e38b36047d8b45/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/65ae0b9a094d83616585438b86e38b36047d8b45/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=65ae0b9a094d83616585438b86e38b36047d8b45", "patch": "@@ -887,28 +887,30 @@ See also [`brace_style`](#brace_style), [`control_brace_style`](#control_brace_s\n \n ## `enum_discrim_align_threshold`\n \n-The maximum diff of width between enum variants to have discriminants aligned with each other.\n+The maximum length of enum variant having discriminant, that gets vertically aligned with others.\n Variants without discriminants would be ignored for the purpose of alignment.\n \n+Note that this is not how much whitespace is inserted, but instead the longest variant name that\n+doesn't get ignored when aligning.\n+\n - **Default value** : 0\n - **Possible values**: any positive integer\n - **Stable**: No\n \n #### `0` (default):\n \n ```rust\n-enum Foo {\n+enum Bar {\n     A = 0,\n     Bb = 1,\n-    RandomLongVariantWithoutDiscriminant,\n+    RandomLongVariantGoesHere = 10,\n     Ccc = 71,\n }\n \n enum Bar {\n-    A = 0,\n-    Bb = 1,\n-    ThisOneisWithDiscriminantAndPreventsAlignment = 10,\n-    Ccc = 71,\n+    VeryLongVariantNameHereA = 0,\n+    VeryLongVariantNameHereBb = 1,\n+    VeryLongVariantNameHereCcc = 2,\n }\n ```\n \n@@ -918,15 +920,14 @@ enum Bar {\n enum Foo {\n     A   = 0,\n     Bb  = 1,\n-    RandomLongVariantWithoutDiscriminant,\n+    RandomLongVariantGoesHere = 10,\n     Ccc = 2,\n }\n \n enum Bar {\n-    A = 0,\n-    Bb = 1,\n-    ThisOneisWithDiscriminantAndPreventsAlignment = 10,\n-    Ccc = 71,\n+    VeryLongVariantNameHereA = 0,\n+    VeryLongVariantNameHereBb = 1,\n+    VeryLongVariantNameHereCcc = 2,\n }\n ```\n "}, {"sha": "04e95935844a6b251beef769ae5645eae345e823", "filename": "src/items.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/65ae0b9a094d83616585438b86e38b36047d8b45/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae0b9a094d83616585438b86e38b36047d8b45/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=65ae0b9a094d83616585438b86e38b36047d8b45", "patch": "@@ -501,22 +501,21 @@ impl<'a> FmtVisitor<'a> {\n         self.block_indent = self.block_indent.block_indent(self.config);\n \n         // If enum variants have discriminants, try to vertically align those,\n-        // provided it does not result in too much padding\n-        let pad_discrim_ident_to;\n-        let diff_threshold = self.config.enum_discrim_align_threshold();\n-        let discr_ident_lens: Vec<_> = enum_def\n+        // provided the discrims are not shifted too much  to the right\n+        let align_threshold: usize = self.config.enum_discrim_align_threshold();\n+        let discr_ident_lens: Vec<usize> = enum_def\n             .variants\n             .iter()\n             .filter(|var| var.node.disr_expr.is_some())\n             .map(|var| rewrite_ident(&self.get_context(), var.node.ident).len())\n             .collect();\n-        let shortest_w_discr = *discr_ident_lens.iter().min().unwrap_or(&0);\n-        let longest_w_discr = *discr_ident_lens.iter().max().unwrap_or(&0);\n-        if longest_w_discr > shortest_w_discr + diff_threshold {\n-            pad_discrim_ident_to = 0;\n-        } else {\n-            pad_discrim_ident_to = longest_w_discr;\n-        }\n+        // cut the list at the point of longest discrim shorter than the threshold\n+        // All of the discrims under the threshold will get padded, and all above - left as is.\n+        let pad_discrim_ident_to = *discr_ident_lens\n+            .iter()\n+            .filter(|&l| *l <= align_threshold)\n+            .max()\n+            .unwrap_or(&0);\n \n         let itemize_list_with = |one_line_width: usize| {\n             itemize_list("}, {"sha": "796e47c384ba54908dee83dad1874ad37aad1063", "filename": "tests/source/configs/enum_discrim_align_threshold/40.rs", "status": "renamed", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/65ae0b9a094d83616585438b86e38b36047d8b45/tests%2Fsource%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae0b9a094d83616585438b86e38b36047d8b45/tests%2Fsource%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs?ref=65ae0b9a094d83616585438b86e38b36047d8b45", "patch": "@@ -1,19 +1,25 @@\n-// rustfmt-enum_discrim_align_threshold: 20\r\n+// rustfmt-enum_discrim_align_threshold: 40\r\n \r\n enum Standard {\r\n     A = 1,\r\n     Bcdef = 2,\r\n }\r\n \r\n-enum Mixed {\r\n-    ThisIsAFairlyLongEnumVariantWithoutDiscrim,\r\n+enum NoDiscrims {\r\n+    ThisIsAFairlyLongEnumVariantWithoutDiscrimLongerThan40,\r\n     A = 1,\r\n-    ThisIsAFairlyLongEnumVariantWithoutDiscrim2,\r\n+    ThisIsAnotherFairlyLongEnumVariantWithoutDiscrimLongerThan40,\r\n     Bcdef = 2,\r\n }\r\n \r\n enum TooLong {\r\n-    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaaaaaaaa = 10,\r\n+    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaaChar40 = 10,\r\n+    A = 1,\r\n+    Bcdef = 2,\r\n+}\r\n+\r\n+enum Borderline {\r\n+    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaa = 10,\r\n     A = 1,\r\n     Bcdef = 2,\r\n }\r", "previous_filename": "tests/source/configs/enum_discrim_align_threshold/20.rs"}, {"sha": "06d621a34ccbe3b2ebdf9513457e11c6c100b3b5", "filename": "tests/target/configs/enum_discrim_align_threshold/20.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/cc22869fb45f5ad73dce67f8484dd2a6a61bd41e/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F20.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc22869fb45f5ad73dce67f8484dd2a6a61bd41e/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F20.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F20.rs?ref=cc22869fb45f5ad73dce67f8484dd2a6a61bd41e", "patch": "@@ -1,28 +0,0 @@\n-// rustfmt-enum_discrim_align_threshold: 20\r\n-\r\n-enum Standard {\r\n-    A     = 1,\r\n-    Bcdef = 2,\r\n-}\r\n-\r\n-enum Mixed {\r\n-    ThisIsAFairlyLongEnumVariantWithoutDiscrim,\r\n-    A     = 1,\r\n-    ThisIsAFairlyLongEnumVariantWithoutDiscrim2,\r\n-    Bcdef = 2,\r\n-}\r\n-\r\n-enum TooLong {\r\n-    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaaaaaaaa = 10,\r\n-    A = 1,\r\n-    Bcdef = 2,\r\n-}\r\n-\r\n-// Live specimen from #1686\r\n-enum LongWithSmallDiff {\r\n-    SceneColorimetryEstimates             = 0x73636F65,\r\n-    SceneAppearanceEstimates              = 0x73617065,\r\n-    FocalPlaneColorimetryEstimates        = 0x66706365,\r\n-    ReflectionHardcopyOriginalColorimetry = 0x72686F63,\r\n-    ReflectionPrintOutputColorimetry      = 0x72706F63,\r\n-}\r"}, {"sha": "3ed66039c9dd31122c13813d8bae0e9d8e0835d4", "filename": "tests/target/configs/enum_discrim_align_threshold/40.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/65ae0b9a094d83616585438b86e38b36047d8b45/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae0b9a094d83616585438b86e38b36047d8b45/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Fenum_discrim_align_threshold%2F40.rs?ref=65ae0b9a094d83616585438b86e38b36047d8b45", "patch": "@@ -0,0 +1,34 @@\n+// rustfmt-enum_discrim_align_threshold: 40\r\n+\r\n+enum Standard {\r\n+    A     = 1,\r\n+    Bcdef = 2,\r\n+}\r\n+\r\n+enum NoDiscrims {\r\n+    ThisIsAFairlyLongEnumVariantWithoutDiscrimLongerThan40,\r\n+    A     = 1,\r\n+    ThisIsAnotherFairlyLongEnumVariantWithoutDiscrimLongerThan40,\r\n+    Bcdef = 2,\r\n+}\r\n+\r\n+enum TooLong {\r\n+    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaaChar40 = 10,\r\n+    A     = 1,\r\n+    Bcdef = 2,\r\n+}\r\n+\r\n+enum Borderline {\r\n+    ThisOneHasDiscrimAaaaaaaaaaaaaaaaaaaaaa = 10,\r\n+    A                                       = 1,\r\n+    Bcdef                                   = 2,\r\n+}\r\n+\r\n+// Live specimen from #1686\r\n+enum LongWithSmallDiff {\r\n+    SceneColorimetryEstimates             = 0x73636F65,\r\n+    SceneAppearanceEstimates              = 0x73617065,\r\n+    FocalPlaneColorimetryEstimates        = 0x66706365,\r\n+    ReflectionHardcopyOriginalColorimetry = 0x72686F63,\r\n+    ReflectionPrintOutputColorimetry      = 0x72706F63,\r\n+}\r"}]}