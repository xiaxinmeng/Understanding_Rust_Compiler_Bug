{"sha": "c24b1928ca97f98b72b4413b177a7eb3fe73456f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNGIxOTI4Y2E5N2Y5OGI3MmI0NDEzYjE3N2E3ZWIzZmU3MzQ1NmY=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-12-22T04:01:45Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-12-22T04:01:45Z"}, "message": "rebasing fix", "tree": {"sha": "df0821cefe54e253bdbf34ce042d7d7694d0f719", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df0821cefe54e253bdbf34ce042d7d7694d0f719"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c24b1928ca97f98b72b4413b177a7eb3fe73456f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c24b1928ca97f98b72b4413b177a7eb3fe73456f", "html_url": "https://github.com/rust-lang/rust/commit/c24b1928ca97f98b72b4413b177a7eb3fe73456f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c24b1928ca97f98b72b4413b177a7eb3fe73456f/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d971ab5f27e802409c49a3ee5642c433b2cca3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d971ab5f27e802409c49a3ee5642c433b2cca3b", "html_url": "https://github.com/rust-lang/rust/commit/5d971ab5f27e802409c49a3ee5642c433b2cca3b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "448bb2e761749c380ba4620ee669ef262b502c37", "filename": "src/librustc_save_analysis/span_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c24b1928ca97f98b72b4413b177a7eb3fe73456f/src%2Flibrustc_save_analysis%2Fspan_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c24b1928ca97f98b72b4413b177a7eb3fe73456f/src%2Flibrustc_save_analysis%2Fspan_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fspan_utils.rs?ref=c24b1928ca97f98b72b4413b177a7eb3fe73456f", "patch": "@@ -91,7 +91,7 @@ impl<'a> SpanUtils<'a> {\n \n     fn span_to_tts(&self, span: Span) -> Vec<TokenTree> {\n         let srdr = self.retokenise_span(span);\n-        let mut p = Parser::new(&self.sess.parse_sess, Box::new(srdr));\n+        let mut p = Parser::new(&self.sess.parse_sess, Box::new(srdr), None, false);\n         p.parse_all_token_trees().expect(\"Couldn't re-parse span\")\n     }\n "}]}