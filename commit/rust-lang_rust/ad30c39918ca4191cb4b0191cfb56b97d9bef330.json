{"sha": "ad30c39918ca4191cb4b0191cfb56b97d9bef330", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMzBjMzk5MThjYTQxOTFjYjRiMDE5MWNmYjU2Yjk3ZDliZWYzMzA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-02-23T14:19:13Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-04T20:22:43Z"}, "message": "Pass TyCtxt directly instead of DocContext in librustdoc::visit_ast::inherits_doc_hidden", "tree": {"sha": "cb451b34d352e08132e14dfcedf514c0e54aacf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb451b34d352e08132e14dfcedf514c0e54aacf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad30c39918ca4191cb4b0191cfb56b97d9bef330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad30c39918ca4191cb4b0191cfb56b97d9bef330", "html_url": "https://github.com/rust-lang/rust/commit/ad30c39918ca4191cb4b0191cfb56b97d9bef330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad30c39918ca4191cb4b0191cfb56b97d9bef330/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "186f13914a825039081795d382eb75c6a9f981ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/186f13914a825039081795d382eb75c6a9f981ae", "html_url": "https://github.com/rust-lang/rust/commit/186f13914a825039081795d382eb75c6a9f981ae"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2ce43dd9ff81843b69ed8b5e32e1870717108ebd", "filename": "src/librustdoc/passes/doc_test_lints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad30c39918ca4191cb4b0191cfb56b97d9bef330/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad30c39918ca4191cb4b0191cfb56b97d9bef330/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fdoc_test_lints.rs?ref=ad30c39918ca4191cb4b0191cfb56b97d9bef330", "patch": "@@ -73,7 +73,7 @@ crate fn should_have_doc_example(cx: &DocContext<'_>, item: &clean::Item) -> boo\n     }\n     let hir_id = cx.tcx.hir().local_def_id_to_hir_id(item.def_id.expect_local());\n     if cx.tcx.hir().attrs(hir_id).lists(sym::doc).has_word(sym::hidden)\n-        || inherits_doc_hidden(cx, hir_id)\n+        || inherits_doc_hidden(cx.tcx, hir_id)\n     {\n         return false;\n     }"}, {"sha": "ba6bb359b9135664aa8d8fa983a26f7beeff568c", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad30c39918ca4191cb4b0191cfb56b97d9bef330/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad30c39918ca4191cb4b0191cfb56b97d9bef330/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=ad30c39918ca4191cb4b0191cfb56b97d9bef330", "patch": "@@ -29,10 +29,10 @@ fn def_id_to_path(tcx: TyCtxt<'_>, did: DefId) -> Vec<String> {\n     std::iter::once(crate_name).chain(relative).collect()\n }\n \n-crate fn inherits_doc_hidden(cx: &core::DocContext<'_>, mut node: hir::HirId) -> bool {\n-    while let Some(id) = cx.tcx.hir().get_enclosing_scope(node) {\n+crate fn inherits_doc_hidden(tcx: TyCtxt<'_>, mut node: hir::HirId) -> bool {\n+    while let Some(id) = tcx.hir().get_enclosing_scope(node) {\n         node = id;\n-        if cx.tcx.hir().attrs(node).lists(sym::doc).has_word(sym::hidden) {\n+        if tcx.hir().attrs(node).lists(sym::doc).has_word(sym::hidden) {\n             return true;\n         }\n     }\n@@ -209,7 +209,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n         };\n \n         let is_private = !self.cx.cache.access_levels.is_public(res_did);\n-        let is_hidden = inherits_doc_hidden(self.cx, res_hir_id);\n+        let is_hidden = inherits_doc_hidden(self.cx.tcx, res_hir_id);\n \n         // Only inline if requested or if the item would otherwise be stripped.\n         if (!please_inline && !is_private && !is_hidden) || is_no_inline {"}]}