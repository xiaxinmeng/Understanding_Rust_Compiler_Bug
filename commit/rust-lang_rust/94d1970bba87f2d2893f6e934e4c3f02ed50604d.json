{"sha": "94d1970bba87f2d2893f6e934e4c3f02ed50604d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0ZDE5NzBiYmE4N2YyZDI4OTNmNmU5MzRlNGMzZjAyZWQ1MDYwNGQ=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-28T20:37:37Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-03-29T12:58:07Z"}, "message": "Move the alloc::allocator module to core::heap\n\nThis is the `Alloc` trait and its dependencies.", "tree": {"sha": "05bdffecb111abc4dbc2b3d888f87b225277159b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05bdffecb111abc4dbc2b3d888f87b225277159b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94d1970bba87f2d2893f6e934e4c3f02ed50604d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94d1970bba87f2d2893f6e934e4c3f02ed50604d", "html_url": "https://github.com/rust-lang/rust/commit/94d1970bba87f2d2893f6e934e4c3f02ed50604d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94d1970bba87f2d2893f6e934e4c3f02ed50604d/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1169541e173965531de77c15316e83962a7ae39b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1169541e173965531de77c15316e83962a7ae39b", "html_url": "https://github.com/rust-lang/rust/commit/1169541e173965531de77c15316e83962a7ae39b"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "9296a1130718ee37ea8994c1004d58ea7a9883d5", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=94d1970bba87f2d2893f6e934e4c3f02ed50604d", "patch": "@@ -19,7 +19,7 @@ use core::intrinsics::{min_align_of_val, size_of_val};\n use core::mem::{self, ManuallyDrop};\n use core::usize;\n \n-pub use allocator::*;\n+pub use core::heap::*;\n #[doc(hidden)]\n pub mod __core {\n     pub use core::*;"}, {"sha": "5594caa65b97b05c8bf8e1a2325b253946004c14", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=94d1970bba87f2d2893f6e934e4c3f02ed50604d", "patch": "@@ -81,6 +81,7 @@\n #![cfg_attr(not(test), feature(exact_size_is_empty))]\n #![cfg_attr(not(test), feature(generator_trait))]\n #![cfg_attr(test, feature(rand, test))]\n+#![feature(allocator_api)]\n #![feature(allow_internal_unstable)]\n #![feature(ascii_ctype)]\n #![feature(box_into_raw_non_null)]\n@@ -145,9 +146,9 @@ extern crate std_unicode;\n #[macro_use]\n mod macros;\n \n-// Allocator trait and helper struct definitions\n-\n-pub mod allocator;\n+#[rustc_deprecated(since = \"1.27.0\", reason = \"use the heap module in core, alloc, or std instead\")]\n+#[unstable(feature = \"allocator_api\", issue = \"32838\")]\n+pub use core::heap as allocator;\n \n // Heaps provided for low-level allocation strategies\n "}, {"sha": "dae60b1647ff54f215510ec4fb369bada8d4712a", "filename": "src/libcore/heap.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibcore%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibcore%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fheap.rs?ref=94d1970bba87f2d2893f6e934e4c3f02ed50604d", "patch": "@@ -15,11 +15,11 @@\n                       tracing garbage collector\",\n             issue = \"32838\")]\n \n-use core::cmp;\n-use core::fmt;\n-use core::mem;\n-use core::usize;\n-use core::ptr::{self, NonNull};\n+use cmp;\n+use fmt;\n+use mem;\n+use usize;\n+use ptr::{self, NonNull};\n \n /// Represents the combination of a starting address and\n /// a total capacity of the returned block.\n@@ -568,7 +568,7 @@ pub unsafe trait Alloc {\n     /// invoked method, and let the client decide whether to invoke\n     /// this `oom` method in response.\n     fn oom(&mut self, _: AllocErr) -> ! {\n-        unsafe { ::core::intrinsics::abort() }\n+        unsafe { ::intrinsics::abort() }\n     }\n \n     // == ALLOCATOR-SPECIFIC QUANTITIES AND LIMITS ==", "previous_filename": "src/liballoc/allocator.rs"}, {"sha": "c77402ed4429a150233c3e0284d9ab889b410979", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=94d1970bba87f2d2893f6e934e4c3f02ed50604d", "patch": "@@ -185,6 +185,10 @@ pub mod hash;\n pub mod fmt;\n pub mod time;\n \n+/* Heap memory allocator trait */\n+#[allow(missing_docs)]\n+pub mod heap;\n+\n // note: does not need to be public\n mod char_private;\n mod iter_private;"}, {"sha": "4a391372c3a1168bb3c2bc82014ba3b74d082fc6", "filename": "src/libstd/heap.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibstd%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94d1970bba87f2d2893f6e934e4c3f02ed50604d/src%2Flibstd%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fheap.rs?ref=94d1970bba87f2d2893f6e934e4c3f02ed50604d", "patch": "@@ -12,8 +12,9 @@\n \n #![unstable(issue = \"32838\", feature = \"allocator_api\")]\n \n-pub use alloc::heap::{Heap, Alloc, Layout, Excess, CannotReallocInPlace, AllocErr};\n+pub use alloc::heap::Heap;\n pub use alloc_system::System;\n+pub use core::heap::*;\n \n #[cfg(not(test))]\n #[doc(hidden)]"}]}