{"sha": "88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "node_id": "C_kwDOAAsO6NoAKDg4Y2ZkNzAxMDAzNjZmY2Q4ZWViY2IzM2NjMjBhNWM5MjljY2MwOGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-10T10:31:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-10T10:31:59Z"}, "message": "Auto merge of #8252 - dswij:8229, r=xFrednet\n\ncover trait for `trait_duplication_in_bounds`\n\ncloses #8229\n\nchangelog: [`trait_duplication_in_bounds`] covers trait functions with `Self` bounds", "tree": {"sha": "c6238ad95eec2391af9a3c9516c478c5ceaed4e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6238ad95eec2391af9a3c9516c478c5ceaed4e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "html_url": "https://github.com/rust-lang/rust/commit/88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59916952c9b7b820574b86aeca130d612fa15c1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/59916952c9b7b820574b86aeca130d612fa15c1c", "html_url": "https://github.com/rust-lang/rust/commit/59916952c9b7b820574b86aeca130d612fa15c1c"}, {"sha": "f4dc348ad580cb5958f724a1a5ac7b538ef35515", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4dc348ad580cb5958f724a1a5ac7b538ef35515", "html_url": "https://github.com/rust-lang/rust/commit/f4dc348ad580cb5958f724a1a5ac7b538ef35515"}], "stats": {"total": 142, "additions": 139, "deletions": 3}, "files": [{"sha": "6369aafe3f9734ec605be603f4eb30d700cace9d", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 53, "deletions": 2, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "patch": "@@ -3,10 +3,14 @@ use clippy_utils::source::{snippet, snippet_with_applicability};\n use clippy_utils::{SpanlessEq, SpanlessHash};\n use core::hash::{Hash, Hasher};\n use if_chain::if_chain;\n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::unhash::UnhashMap;\n use rustc_errors::Applicability;\n-use rustc_hir::{def::Res, GenericBound, Generics, ParamName, Path, QPath, Ty, TyKind, WherePredicate};\n+use rustc_hir::def::Res;\n+use rustc_hir::{\n+    GenericBound, Generics, Item, ItemKind, Node, ParamName, Path, PathSegment, QPath, TraitItem, Ty, TyKind,\n+    WherePredicate,\n+};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n@@ -84,6 +88,53 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n         self.check_type_repetition(cx, gen);\n         check_trait_bound_duplication(cx, gen);\n     }\n+\n+    fn check_trait_item(&mut self, cx: &LateContext<'tcx>, item: &'tcx TraitItem<'tcx>) {\n+        let Generics { where_clause, .. } = &item.generics;\n+        let mut self_bounds_set = FxHashSet::default();\n+\n+        for predicate in where_clause.predicates {\n+            if_chain! {\n+                if let WherePredicate::BoundPredicate(ref bound_predicate) = predicate;\n+                if !bound_predicate.span.from_expansion();\n+                if let TyKind::Path(QPath::Resolved(_, Path { segments, .. })) = bound_predicate.bounded_ty.kind;\n+                if let Some(PathSegment { res: Some(Res::SelfTy(Some(def_id), _)), .. }) = segments.first();\n+\n+                if let Some(\n+                    Node::Item(\n+                        Item {\n+                            kind: ItemKind::Trait(_, _, _, self_bounds, _),\n+                            .. }\n+                        )\n+                    ) = cx.tcx.hir().get_if_local(*def_id);\n+                then {\n+                    if self_bounds_set.is_empty() {\n+                        for bound in self_bounds.iter() {\n+                            let Some((self_res, _)) = get_trait_res_span_from_bound(bound) else { continue };\n+                            self_bounds_set.insert(self_res);\n+                        }\n+                    }\n+\n+                    bound_predicate\n+                        .bounds\n+                        .iter()\n+                        .filter_map(get_trait_res_span_from_bound)\n+                        .for_each(|(trait_item_res, span)| {\n+                            if self_bounds_set.get(&trait_item_res).is_some() {\n+                                span_lint_and_help(\n+                                    cx,\n+                                    TRAIT_DUPLICATION_IN_BOUNDS,\n+                                    span,\n+                                    \"this trait bound is already specified in trait declaration\",\n+                                    None,\n+                                    \"consider removing this trait bound\",\n+                                );\n+                            }\n+                        });\n+                }\n+            }\n+        }\n+    }\n }\n \n fn get_trait_res_span_from_bound(bound: &GenericBound<'_>) -> Option<(Res, Span)> {"}, {"sha": "2edb202892afcaf4c1b65a7b3e91337a8779f3b8", "filename": "tests/ui/trait_duplication_in_bounds.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/tests%2Fui%2Ftrait_duplication_in_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/tests%2Fui%2Ftrait_duplication_in_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrait_duplication_in_bounds.rs?ref=88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "patch": "@@ -28,4 +28,49 @@ where\n     unimplemented!();\n }\n \n+trait T: Default {\n+    fn f()\n+    where\n+        Self: Default;\n+}\n+\n+trait U: Default {\n+    fn f()\n+    where\n+        Self: Clone;\n+}\n+\n+trait ZZ: Default {\n+    fn g();\n+    fn h();\n+    fn f()\n+    where\n+        Self: Default + Clone;\n+}\n+\n+trait BadTrait: Default + Clone {\n+    fn f()\n+    where\n+        Self: Default + Clone;\n+    fn g()\n+    where\n+        Self: Default;\n+    fn h()\n+    where\n+        Self: Copy;\n+}\n+\n+#[derive(Default, Clone)]\n+struct Life {}\n+\n+impl T for Life {\n+    // this should not warn\n+    fn f() {}\n+}\n+\n+impl U for Life {\n+    // this should not warn\n+    fn f() {}\n+}\n+\n fn main() {}"}, {"sha": "e0c7a7ec618ed932223b8fb8a17f3e5ca61b0eab", "filename": "tests/ui/trait_duplication_in_bounds.stderr", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/tests%2Fui%2Ftrait_duplication_in_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88cfd70100366fcd8eebcb33cc20a5c929ccc08a/tests%2Fui%2Ftrait_duplication_in_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftrait_duplication_in_bounds.stderr?ref=88cfd70100366fcd8eebcb33cc20a5c929ccc08a", "patch": "@@ -19,5 +19,45 @@ LL | fn bad_foo<T: Clone + Default, Z: Copy>(arg0: T, arg1: Z)\n    |\n    = help: consider removing this trait bound\n \n-error: aborting due to 2 previous errors\n+error: this trait bound is already specified in trait declaration\n+  --> $DIR/trait_duplication_in_bounds.rs:34:15\n+   |\n+LL |         Self: Default;\n+   |               ^^^^^^^\n+   |\n+   = help: consider removing this trait bound\n+\n+error: this trait bound is already specified in trait declaration\n+  --> $DIR/trait_duplication_in_bounds.rs:48:15\n+   |\n+LL |         Self: Default + Clone;\n+   |               ^^^^^^^\n+   |\n+   = help: consider removing this trait bound\n+\n+error: this trait bound is already specified in trait declaration\n+  --> $DIR/trait_duplication_in_bounds.rs:54:15\n+   |\n+LL |         Self: Default + Clone;\n+   |               ^^^^^^^\n+   |\n+   = help: consider removing this trait bound\n+\n+error: this trait bound is already specified in trait declaration\n+  --> $DIR/trait_duplication_in_bounds.rs:54:25\n+   |\n+LL |         Self: Default + Clone;\n+   |                         ^^^^^\n+   |\n+   = help: consider removing this trait bound\n+\n+error: this trait bound is already specified in trait declaration\n+  --> $DIR/trait_duplication_in_bounds.rs:57:15\n+   |\n+LL |         Self: Default;\n+   |               ^^^^^^^\n+   |\n+   = help: consider removing this trait bound\n+\n+error: aborting due to 7 previous errors\n "}]}