{"sha": "360f8f8b7d0675ad74973071fea29568f79ef742", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2MGY4ZjhiN2QwNjc1YWQ3NDk3MzA3MWZlYTI5NTY4Zjc5ZWY3NDI=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2021-02-02T20:18:46Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2021-02-02T21:03:28Z"}, "message": "Make rustdoc respect `--error-format short`\n\nThe other two (`human` and `json`) are already handled.", "tree": {"sha": "4854d1ab50e1936cc1b7d92f80792a17d7631d30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4854d1ab50e1936cc1b7d92f80792a17d7631d30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/360f8f8b7d0675ad74973071fea29568f79ef742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/360f8f8b7d0675ad74973071fea29568f79ef742", "html_url": "https://github.com/rust-lang/rust/commit/360f8f8b7d0675ad74973071fea29568f79ef742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/360f8f8b7d0675ad74973071fea29568f79ef742/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b81f5811f96fe750ab28c15219d1b0dba6b1dc90", "url": "https://api.github.com/repos/rust-lang/rust/commits/b81f5811f96fe750ab28c15219d1b0dba6b1dc90", "html_url": "https://github.com/rust-lang/rust/commit/b81f5811f96fe750ab28c15219d1b0dba6b1dc90"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "eecfd337cdf845027b08c59c5e51e2063527fc6e", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/360f8f8b7d0675ad74973071fea29568f79ef742/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/360f8f8b7d0675ad74973071fea29568f79ef742/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=360f8f8b7d0675ad74973071fea29568f79ef742", "patch": "@@ -296,7 +296,12 @@ fn run_test(\n         }\n     });\n     if let ErrorOutputType::HumanReadable(kind) = options.error_format {\n-        let (_, color_config) = kind.unzip();\n+        let (short, color_config) = kind.unzip();\n+\n+        if short {\n+            compiler.arg(\"--error-format\").arg(\"short\");\n+        }\n+\n         match color_config {\n             ColorConfig::Never => {\n                 compiler.arg(\"--color\").arg(\"never\");"}]}