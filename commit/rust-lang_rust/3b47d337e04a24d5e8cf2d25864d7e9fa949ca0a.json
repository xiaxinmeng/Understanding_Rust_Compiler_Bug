{"sha": "3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNDdkMzM3ZTA0YTI0ZDVlOGNmMmQyNTg2NGQ3ZTlmYTk0OWNhMGE=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-06-11T16:15:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-11T16:15:56Z"}, "message": "Rollup merge of #85800 - BoxyUwU:const-param-default-diagnostics, r=oli-obk\n\nFix some diagnostic issues with const_generics_defaults feature gate\n\nThis PR makes a few changes:\n- print out const param defaults in \"lifetime ordering\" errors rather than discarding them\n- update `is_simple_text` to account for const params when checking if a type has no generics, this was causing a note to be failed to add to an error message\n- fixes some diagnostic wording that incorrectly said there was ordering restrictions between type/const params despite the `const_generics_defaults` feature gate is active", "tree": {"sha": "0323364d4d49b120d954bc2545b83df1716ab9a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0323364d4d49b120d954bc2545b83df1716ab9a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgw4w8CRBK7hj4Ov3rIwAA32oIADLxlwZ1v8AwzFMM7gHJ8toN\nK+3NfgQRS/chVmhXCDRtSPNTa8HHXz6kfSeleUsb9AjE2a5Uzddxf1V+O4LwbpCP\n1mC4w0atGg/tKdMhm96FWZA3eZYGSO4b+TtXfDDiHGdwt1vYTqV9Wp5WalBahU10\nnlhIdvMK07k0TnACinBa+rOSkRLly+nvM8FmCkBmtoYlwLiC5I323SroRbqewdNa\nNIpNcDjMRx3EktLSkHJmfHhfau9axt9yv8LHbjFGHtCM5nWm1PFasAq6wiUImMtB\nKjHSLeiDKm5HcENw5ZtuIvm6AKkHmPo6xImYxGwgrFECyOLML5qF1aNk89GWjRU=\n=I6tR\n-----END PGP SIGNATURE-----\n", "payload": "tree 0323364d4d49b120d954bc2545b83df1716ab9a6\nparent dddebf94bccddaa7b8836380c1d90b34553d79d0\nparent 47fe696d8f247d91c67068c25bb91767713aeb60\nauthor Yuki Okushi <jtitor@2k36.org> 1623428156 +0900\ncommitter GitHub <noreply@github.com> 1623428156 +0900\n\nRollup merge of #85800 - BoxyUwU:const-param-default-diagnostics, r=oli-obk\n\nFix some diagnostic issues with const_generics_defaults feature gate\n\nThis PR makes a few changes:\n- print out const param defaults in \"lifetime ordering\" errors rather than discarding them\n- update `is_simple_text` to account for const params when checking if a type has no generics, this was causing a note to be failed to add to an error message\n- fixes some diagnostic wording that incorrectly said there was ordering restrictions between type/const params despite the `const_generics_defaults` feature gate is active\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "html_url": "https://github.com/rust-lang/rust/commit/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dddebf94bccddaa7b8836380c1d90b34553d79d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/dddebf94bccddaa7b8836380c1d90b34553d79d0", "html_url": "https://github.com/rust-lang/rust/commit/dddebf94bccddaa7b8836380c1d90b34553d79d0"}, {"sha": "47fe696d8f247d91c67068c25bb91767713aeb60", "url": "https://api.github.com/repos/rust-lang/rust/commits/47fe696d8f247d91c67068c25bb91767713aeb60", "html_url": "https://github.com/rust-lang/rust/commit/47fe696d8f247d91c67068c25bb91767713aeb60"}], "stats": {"total": 63, "additions": 47, "deletions": 16}, "files": [{"sha": "30aa51a121a80edfb2e45d05f680dfb98b750a3f", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -938,8 +938,11 @@ fn validate_generic_param_order(\n                 }\n                 GenericParamKind::Type { default: None } => (),\n                 GenericParamKind::Lifetime => (),\n-                // FIXME(const_generics_defaults)\n-                GenericParamKind::Const { ty: _, kw_span: _, default: _ } => (),\n+                GenericParamKind::Const { ty: _, kw_span: _, default: Some(default) } => {\n+                    ordered_params += \" = \";\n+                    ordered_params += &pprust::expr_to_string(&*default.value);\n+                }\n+                GenericParamKind::Const { ty: _, kw_span: _, default: None } => (),\n             }\n             first = false;\n         }\n@@ -959,7 +962,7 @@ fn validate_generic_param_order(\n             span,\n             &format!(\n                 \"reorder the parameters: lifetimes, {}\",\n-                if sess.features_untracked().const_generics {\n+                if sess.features_untracked().unordered_const_ty_params() {\n                     \"then consts and types\"\n                 } else {\n                     \"then types, then consts\""}, {"sha": "bfb4c0cb538dec29ad8ec51ae8a3c125a0836d8b", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -54,7 +54,7 @@ impl<'tcx> TyS<'tcx> {\n     /// ADTs with no type arguments.\n     pub fn is_simple_text(&self) -> bool {\n         match self.kind() {\n-            Adt(_, substs) => substs.types().next().is_none(),\n+            Adt(_, substs) => substs.non_erasable_generics().next().is_none(),\n             Ref(_, ty, _) => ty.is_simple_text(),\n             _ => self.is_simple_ty(),\n         }"}, {"sha": "29d835e36c6eb74d9830d0cb2bcc25494235b0a3", "filename": "src/test/ui/const-generics/defaults/intermixed-lifetime.min.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fintermixed-lifetime.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fintermixed-lifetime.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fintermixed-lifetime.min.stderr?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -2,13 +2,13 @@ error: lifetime parameters must be declared prior to const parameters\n   --> $DIR/intermixed-lifetime.rs:7:28\n    |\n LL | struct Foo<const N: usize, 'a, T = u32>(&'a (), T);\n-   |           -----------------^^---------- help: reorder the parameters: lifetimes, then types, then consts: `<'a, const N: usize, T = u32>`\n+   |           -----------------^^---------- help: reorder the parameters: lifetimes, then consts and types: `<'a, const N: usize, T = u32>`\n \n error: lifetime parameters must be declared prior to type parameters\n   --> $DIR/intermixed-lifetime.rs:10:37\n    |\n LL | struct Bar<const N: usize, T = u32, 'a>(&'a (), T);\n-   |           --------------------------^^- help: reorder the parameters: lifetimes, then types, then consts: `<'a, const N: usize, T = u32>`\n+   |           --------------------------^^- help: reorder the parameters: lifetimes, then consts and types: `<'a, const N: usize, T = u32>`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4aa8401ab22169b608d5829da6c0715842ba1838", "filename": "src/test/ui/const-generics/defaults/mismatch.full.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -5,9 +5,12 @@ LL |     let e: Example::<13> = ();\n    |            -------------   ^^ expected struct `Example`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example`\n+           found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:14:34\n+  --> $DIR/mismatch.rs:15:34\n    |\n LL |     let e: Example2::<u32, 13> = ();\n    |            -------------------   ^^ expected struct `Example2`, found `()`\n@@ -18,7 +21,7 @@ LL |     let e: Example2::<u32, 13> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:16:34\n+  --> $DIR/mismatch.rs:18:34\n    |\n LL |     let e: Example3::<13, u32> = ();\n    |            -------------------   ^^ expected struct `Example3`, found `()`\n@@ -29,7 +32,7 @@ LL |     let e: Example3::<13, u32> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:18:28\n+  --> $DIR/mismatch.rs:21:28\n    |\n LL |     let e: Example3::<7> = ();\n    |            -------------   ^^ expected struct `Example3`, found `()`\n@@ -40,12 +43,15 @@ LL |     let e: Example3::<7> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:22:28\n+  --> $DIR/mismatch.rs:24:28\n    |\n LL |     let e: Example4::<7> = ();\n    |            -------------   ^^ expected struct `Example4`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example4<7_usize>`\n+           found unit type `()`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "4aa8401ab22169b608d5829da6c0715842ba1838", "filename": "src/test/ui/const-generics/defaults/mismatch.min.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -5,9 +5,12 @@ LL |     let e: Example::<13> = ();\n    |            -------------   ^^ expected struct `Example`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example`\n+           found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:14:34\n+  --> $DIR/mismatch.rs:15:34\n    |\n LL |     let e: Example2::<u32, 13> = ();\n    |            -------------------   ^^ expected struct `Example2`, found `()`\n@@ -18,7 +21,7 @@ LL |     let e: Example2::<u32, 13> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:16:34\n+  --> $DIR/mismatch.rs:18:34\n    |\n LL |     let e: Example3::<13, u32> = ();\n    |            -------------------   ^^ expected struct `Example3`, found `()`\n@@ -29,7 +32,7 @@ LL |     let e: Example3::<13, u32> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:18:28\n+  --> $DIR/mismatch.rs:21:28\n    |\n LL |     let e: Example3::<7> = ();\n    |            -------------   ^^ expected struct `Example3`, found `()`\n@@ -40,12 +43,15 @@ LL |     let e: Example3::<7> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:22:28\n+  --> $DIR/mismatch.rs:24:28\n    |\n LL |     let e: Example4::<7> = ();\n    |            -------------   ^^ expected struct `Example4`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example4<7_usize>`\n+           found unit type `()`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "9d9a8793aaac0e675ff94b2e1909733ea0fb2e7a", "filename": "src/test/ui/const-generics/defaults/mismatch.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -11,14 +11,17 @@ pub struct Example4<const N: usize=13, const M: usize=4>;\n fn main() {\n     let e: Example::<13> = ();\n     //~^ Error: mismatched types\n+    //~| expected struct `Example`\n     let e: Example2::<u32, 13> = ();\n     //~^ Error: mismatched types\n+    //~| expected struct `Example2`\n     let e: Example3::<13, u32> = ();\n     //~^ Error: mismatched types\n+    //~| expected struct `Example3`\n     let e: Example3::<7> = ();\n     //~^ Error: mismatched types\n-    // FIXME(const_generics_defaults): There should be a note for the error below, but it is\n-    // missing.\n+    //~| expected struct `Example3<7_usize>`\n     let e: Example4::<7> = ();\n     //~^ Error: mismatched types\n+    //~| expected struct `Example4<7_usize>`\n }"}, {"sha": "933eacb312dbf9a4c204b790bc8790fcba4e66d6", "filename": "src/test/ui/const-generics/defaults/param-order-err-pretty-prints-default.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.rs?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -0,0 +1,5 @@\n+#![feature(const_generics_defaults)]\n+struct Foo<const M: usize = 10, 'a>(&'a u32);\n+//~^ Error lifetime parameters must be declared prior to const parameters\n+\n+fn main() {}"}, {"sha": "f50653fe9a19f6f322e614f198365ce6e1054e9c", "filename": "src/test/ui/const-generics/defaults/param-order-err-pretty-prints-default.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fparam-order-err-pretty-prints-default.stderr?ref=3b47d337e04a24d5e8cf2d25864d7e9fa949ca0a", "patch": "@@ -0,0 +1,8 @@\n+error: lifetime parameters must be declared prior to const parameters\n+  --> $DIR/param-order-err-pretty-prints-default.rs:2:33\n+   |\n+LL | struct Foo<const M: usize = 10, 'a>(&'a u32);\n+   |           ----------------------^^- help: reorder the parameters: lifetimes, then consts and types: `<'a, const M: usize = 10>`\n+\n+error: aborting due to previous error\n+"}]}