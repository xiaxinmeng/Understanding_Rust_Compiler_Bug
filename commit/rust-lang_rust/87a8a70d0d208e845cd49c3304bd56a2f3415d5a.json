{"sha": "87a8a70d0d208e845cd49c3304bd56a2f3415d5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YThhNzBkMGQyMDhlODQ1Y2Q0OWMzMzA0YmQ1NmEyZjM0MTVkNWE=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-03T13:15:29Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-05T22:34:01Z"}, "message": "MIR borrowck: avoid formatting state when it is not needed\n\nThis improves performance on large functions.", "tree": {"sha": "7beee13333d92f1e035f3b08519a59d3123a7bdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7beee13333d92f1e035f3b08519a59d3123a7bdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87a8a70d0d208e845cd49c3304bd56a2f3415d5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87a8a70d0d208e845cd49c3304bd56a2f3415d5a", "html_url": "https://github.com/rust-lang/rust/commit/87a8a70d0d208e845cd49c3304bd56a2f3415d5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87a8a70d0d208e845cd49c3304bd56a2f3415d5a/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc4b5051190940ea180fdf4ff8bd93aac473d9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc4b5051190940ea180fdf4ff8bd93aac473d9b", "html_url": "https://github.com/rust-lang/rust/commit/6bc4b5051190940ea180fdf4ff8bd93aac473d9b"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "fdcee3a6cade05ad064c18e30f31dbb6bf3da2c3", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/87a8a70d0d208e845cd49c3304bd56a2f3415d5a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a8a70d0d208e845cd49c3304bd56a2f3415d5a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=87a8a70d0d208e845cd49c3304bd56a2f3415d5a", "patch": "@@ -36,6 +36,7 @@ use dataflow::move_paths::{IllegalMoveOriginKind, MoveError};\n use dataflow::move_paths::{HasMoveData, LookupResult, MoveData, MoveOutIndex, MovePathIndex};\n use util::borrowck_errors::{BorrowckErrors, Origin};\n \n+use std::fmt;\n use std::iter;\n \n use self::MutateMode::{JustWrite, WriteAndRead};\n@@ -308,8 +309,7 @@ impl<'cx, 'gcx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx\n     }\n \n     fn visit_block_entry(&mut self, bb: BasicBlock, flow_state: &Self::FlowState) {\n-        let summary = flow_state.summary();\n-        debug!(\"MirBorrowckCtxt::process_block({:?}): {}\", bb, summary);\n+        debug!(\"MirBorrowckCtxt::process_block({:?}): {}\", bb, flow_state);\n     }\n \n     fn visit_statement_entry(\n@@ -318,12 +318,11 @@ impl<'cx, 'gcx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx\n         stmt: &Statement<'tcx>,\n         flow_state: &Self::FlowState,\n     ) {\n-        let summary = flow_state.summary();\n         debug!(\n             \"MirBorrowckCtxt::process_statement({:?}, {:?}): {}\",\n             location,\n             stmt,\n-            summary\n+            flow_state\n         );\n         let span = stmt.source_info.span;\n         match stmt.kind {\n@@ -425,12 +424,11 @@ impl<'cx, 'gcx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx\n         flow_state: &Self::FlowState,\n     ) {\n         let loc = location;\n-        let summary = flow_state.summary();\n         debug!(\n             \"MirBorrowckCtxt::process_terminator({:?}, {:?}): {}\",\n             location,\n             term,\n-            summary\n+            flow_state\n         );\n         let span = term.source_info.span;\n         match term.kind {\n@@ -2679,8 +2677,10 @@ impl<'b, 'gcx, 'tcx> InProgress<'b, 'gcx, 'tcx> {\n         xform_move_outs(&mut self.move_outs);\n         xform_ever_inits(&mut self.ever_inits);\n     }\n+}\n \n-    fn summary(&self) -> String {\n+impl<'b, 'gcx, 'tcx> fmt::Display for InProgress<'b, 'gcx, 'tcx> {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         let mut s = String::new();\n \n         s.push_str(\"borrows in effect: [\");\n@@ -2757,7 +2757,7 @@ impl<'b, 'gcx, 'tcx> InProgress<'b, 'gcx, 'tcx> {\n         });\n         s.push_str(\"]\");\n \n-        return s;\n+        fmt::Display::fmt(&s, fmt)\n     }\n }\n "}]}