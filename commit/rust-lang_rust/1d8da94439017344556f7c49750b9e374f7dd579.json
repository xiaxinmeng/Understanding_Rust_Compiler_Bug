{"sha": "1d8da94439017344556f7c49750b9e374f7dd579", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOGRhOTQ0MzkwMTczNDQ1NTZmN2M0OTc1MGI5ZTM3NGY3ZGQ1Nzk=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-11T21:16:38Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-06-11T21:16:38Z"}, "message": "Add comment about LocalDefId -> DefId\n\nNow there are instructions on how to convert back and forth on both\nstructs, not just one.", "tree": {"sha": "e3c36d2f70f1b50e2f9fcf8cff154042b2b5db65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3c36d2f70f1b50e2f9fcf8cff154042b2b5db65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d8da94439017344556f7c49750b9e374f7dd579", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d8da94439017344556f7c49750b9e374f7dd579", "html_url": "https://github.com/rust-lang/rust/commit/1d8da94439017344556f7c49750b9e374f7dd579", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d8da94439017344556f7c49750b9e374f7dd579/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb8674837a9cc5225020e07fc3f164762bb4c11c", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8674837a9cc5225020e07fc3f164762bb4c11c", "html_url": "https://github.com/rust-lang/rust/commit/bb8674837a9cc5225020e07fc3f164762bb4c11c"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0a70be1f152e9120bebb83a92f310b26e5261634", "filename": "src/librustc_span/def_id.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d8da94439017344556f7c49750b9e374f7dd579/src%2Flibrustc_span%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d8da94439017344556f7c49750b9e374f7dd579/src%2Flibrustc_span%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fdef_id.rs?ref=1d8da94439017344556f7c49750b9e374f7dd579", "patch": "@@ -133,6 +133,8 @@ impl rustc_serialize::UseSpecializedDecodable for DefIndex {}\n \n /// A `DefId` identifies a particular *definition*, by combining a crate\n /// index and a def index.\n+///\n+/// You can create a `DefId` from a `LocalDefId` using `local_def_id.to_def_id()`.\n #[derive(Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Copy)]\n pub struct DefId {\n     pub krate: CrateNum,"}]}