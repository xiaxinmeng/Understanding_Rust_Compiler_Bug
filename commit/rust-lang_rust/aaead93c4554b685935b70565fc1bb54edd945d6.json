{"sha": "aaead93c4554b685935b70565fc1bb54edd945d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZWFkOTNjNDU1NGI2ODU5MzViNzA1NjVmYzFiYjU0ZWRkOTQ1ZDY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-10T22:41:57Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-14T04:29:47Z"}, "message": "Don't allocate in LocalHeap::new()\n\nOne of these is allocated for every task, trying to cut down on allocations\n\ncc #11389", "tree": {"sha": "eb291588f17087567300d324bac4e7a686ccc0b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb291588f17087567300d324bac4e7a686ccc0b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aaead93c4554b685935b70565fc1bb54edd945d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aaead93c4554b685935b70565fc1bb54edd945d6", "html_url": "https://github.com/rust-lang/rust/commit/aaead93c4554b685935b70565fc1bb54edd945d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aaead93c4554b685935b70565fc1bb54edd945d6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5e0622f95252e442b909011129336c11ddb0151", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e0622f95252e442b909011129336c11ddb0151", "html_url": "https://github.com/rust-lang/rust/commit/d5e0622f95252e442b909011129336c11ddb0151"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "7acce2ecb5ba95baaf3a5c4c2287dc723a00dec8", "filename": "src/libstd/rt/local_heap.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aaead93c4554b685935b70565fc1bb54edd945d6/src%2Flibstd%2Frt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aaead93c4554b685935b70565fc1bb54edd945d6/src%2Flibstd%2Frt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_heap.rs?ref=aaead93c4554b685935b70565fc1bb54edd945d6", "patch": "@@ -23,6 +23,7 @@ use rt::local::Local;\n use rt::task::Task;\n use unstable::raw;\n use vec::ImmutableVector;\n+use vec_ng::Vec;\n \n // This has no meaning with out rtdebug also turned on.\n #[cfg(rtdebug)]\n@@ -33,7 +34,7 @@ static MAGIC: u32 = 0xbadc0ffe;\n pub type Box = raw::Box<()>;\n \n pub struct MemoryRegion {\n-    priv allocations: ~[*AllocHeader],\n+    priv allocations: Vec<*AllocHeader>,\n     priv live_allocations: uint,\n }\n \n@@ -48,7 +49,7 @@ impl LocalHeap {\n     #[inline]\n     pub fn new() -> LocalHeap {\n         let region = MemoryRegion {\n-            allocations: ~[],\n+            allocations: Vec::new(),\n             live_allocations: 0,\n         };\n         LocalHeap {\n@@ -248,8 +249,8 @@ impl MemoryRegion {\n     fn release(&mut self, alloc: &AllocHeader) {\n         alloc.assert_sane();\n         if TRACK_ALLOCATIONS > 1 {\n-            rtassert!(self.allocations[alloc.index] == alloc as *AllocHeader);\n-            self.allocations[alloc.index] = ptr::null();\n+            rtassert!(self.allocations.as_slice()[alloc.index] == alloc as *AllocHeader);\n+            self.allocations.as_mut_slice()[alloc.index] = ptr::null();\n         }\n     }\n     #[cfg(not(rtdebug))]\n@@ -260,8 +261,8 @@ impl MemoryRegion {\n     fn update(&mut self, alloc: &mut AllocHeader, orig: *AllocHeader) {\n         alloc.assert_sane();\n         if TRACK_ALLOCATIONS > 1 {\n-            rtassert!(self.allocations[alloc.index] == orig);\n-            self.allocations[alloc.index] = &*alloc as *AllocHeader;\n+            rtassert!(self.allocations.as_slice()[alloc.index] == orig);\n+            self.allocations.as_mut_slice()[alloc.index] = &*alloc as *AllocHeader;\n         }\n     }\n     #[cfg(not(rtdebug))]\n@@ -274,7 +275,7 @@ impl Drop for MemoryRegion {\n         if self.live_allocations != 0 {\n             rtabort!(\"leaked managed memory ({} objects)\", self.live_allocations);\n         }\n-        rtassert!(self.allocations.iter().all(|s| s.is_null()));\n+        rtassert!(self.allocations.as_slice().iter().all(|s| s.is_null()));\n     }\n }\n "}]}