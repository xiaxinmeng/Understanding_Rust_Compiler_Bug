{"sha": "f5baa03af0da7aa565190ae563291cd268998c83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YmFhMDNhZjBkYTdhYTU2NTE5MGFlNTYzMjkxY2QyNjg5OThjODM=", "commit": {"author": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2020-01-08T06:18:42Z"}, "committer": {"name": "oxalica", "email": "oxalicc@pm.me", "date": "2020-01-08T06:21:27Z"}, "message": "Try statx for all linux-gnu targets", "tree": {"sha": "c10b13d846d78df5becb8f5d78cfedd7b3cbb7bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c10b13d846d78df5becb8f5d78cfedd7b3cbb7bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5baa03af0da7aa565190ae563291cd268998c83", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXLDp5dXVcfV/VA/qztOS3gxIPQAFAl4VdPMACgkQztOS3gxI\nPQBk+A/+P6Qjf0BGsGBE2qcaDtRmdn6H5W5bcU/UDgaJzk94gK85Ml1SBHONG0oL\n859WxK1TK1ATvkM5peAKjekskQOqs4LN1i9+8SW70fAfocdFbyCdn+H0bS3aOtIX\nrSMYzKESBRlN3M9Poq1GWWfn4y4Ra9JF4ybz6/KnSJ64rlBUdOH0cCbInW+7CafC\nSqrM/7R2SZvRNSinS9uT/gnAZdsUHZr3nZM5Fel6xkRdkNsqmzlVntDpvoi/kFCj\nV/QFCuA+vyu9rZuxMHZcXfacJHKRONJigWnkdTjUBwfF5SZy0DJYe9U9UihgxLt0\nc4mlzaRaXmkg19TPNF9izGdbG2BVDKYP+TwSRKXpHxns5yWyNqFnx5wnnyKExNg7\nAdMGfcICy6c90WzHHe3WfKhOdkBPooxWqQmYLglbdhjvwIevfPyExyhSPC3gpiU3\nVQxYW+Ul01QuhEmknFYYPgy0YOoaQW0IXn3in2WiEU7Jj1SRBW9eAOdUnJuFhgSf\nmZmgH8oOSueBJckn0QTKLX970QGo2VUXxdEOxRayVC3TL4PcoHPYJpoUcei5wVZP\nhe9Qyq+p+pfF74xuOQz5hHMjKHx2C5z168sUEmiWzO+OOmDaYDWEKwpojnURlLZF\nh7psHbzduSttv7rnyq/o5OvgXCFFmTyfIflXjMAR4FLw5Xa7yDo=\n=g+44\n-----END PGP SIGNATURE-----", "payload": "tree c10b13d846d78df5becb8f5d78cfedd7b3cbb7bd\nparent 637793a1999f46d10c9567f302ca211385702224\nauthor oxalica <oxalicc@pm.me> 1578464322 +0800\ncommitter oxalica <oxalicc@pm.me> 1578464487 +0800\n\nTry statx for all linux-gnu targets\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5baa03af0da7aa565190ae563291cd268998c83", "html_url": "https://github.com/rust-lang/rust/commit/f5baa03af0da7aa565190ae563291cd268998c83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5baa03af0da7aa565190ae563291cd268998c83/comments", "author": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oxalica", "id": 14816024, "node_id": "MDQ6VXNlcjE0ODE2MDI0", "avatar_url": "https://avatars.githubusercontent.com/u/14816024?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oxalica", "html_url": "https://github.com/oxalica", "followers_url": "https://api.github.com/users/oxalica/followers", "following_url": "https://api.github.com/users/oxalica/following{/other_user}", "gists_url": "https://api.github.com/users/oxalica/gists{/gist_id}", "starred_url": "https://api.github.com/users/oxalica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oxalica/subscriptions", "organizations_url": "https://api.github.com/users/oxalica/orgs", "repos_url": "https://api.github.com/users/oxalica/repos", "events_url": "https://api.github.com/users/oxalica/events{/privacy}", "received_events_url": "https://api.github.com/users/oxalica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "637793a1999f46d10c9567f302ca211385702224", "url": "https://api.github.com/repos/rust-lang/rust/commits/637793a1999f46d10c9567f302ca211385702224", "html_url": "https://github.com/rust-lang/rust/commit/637793a1999f46d10c9567f302ca211385702224"}], "stats": {"total": 34, "additions": 6, "deletions": 28}, "files": [{"sha": "ab2a871b92df45f846d73d74432ddada4729a582", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 6, "deletions": 28, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f5baa03af0da7aa565190ae563291cd268998c83/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5baa03af0da7aa565190ae563291cd268998c83/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=f5baa03af0da7aa565190ae563291cd268998c83", "patch": "@@ -51,44 +51,22 @@ pub use crate::sys_common::fs::remove_dir_all;\n \n pub struct File(FileDesc);\n \n-// FIXME: This should be available on Linux with all `target_arch` and `target_env`.\n-// https://github.com/rust-lang/libc/issues/1545\n+// FIXME: This should be available on Linux with all `target_env`.\n+// But currently only glibc exposes `statx` fn and structs.\n+// We don't want to import unverified raw C structs here directly.\n+// https://github.com/rust-lang/rust/pull/67774\n macro_rules! cfg_has_statx {\n     ({ $($then_tt:tt)* } else { $($else_tt:tt)* }) => {\n         cfg_if::cfg_if! {\n-            if #[cfg(all(target_os = \"linux\", target_env = \"gnu\", any(\n-                target_arch = \"x86\",\n-                target_arch = \"arm\",\n-                // target_arch = \"mips\",\n-                target_arch = \"powerpc\",\n-                target_arch = \"x86_64\",\n-                // target_arch = \"aarch64\",\n-                target_arch = \"powerpc64\",\n-                // target_arch = \"mips64\",\n-                // target_arch = \"s390x\",\n-                target_arch = \"sparc64\",\n-                target_arch = \"riscv64\",\n-            )))] {\n+            if #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))] {\n                 $($then_tt)*\n             } else {\n                 $($else_tt)*\n             }\n         }\n     };\n     ($($block_inner:tt)*) => {\n-        #[cfg(all(target_os = \"linux\", target_env = \"gnu\", any(\n-            target_arch = \"x86\",\n-            target_arch = \"arm\",\n-            // target_arch = \"mips\",\n-            target_arch = \"powerpc\",\n-            target_arch = \"x86_64\",\n-            // target_arch = \"aarch64\",\n-            target_arch = \"powerpc64\",\n-            // target_arch = \"mips64\",\n-            // target_arch = \"s390x\",\n-            target_arch = \"sparc64\",\n-            target_arch = \"riscv64\",\n-        )))]\n+        #[cfg(all(target_os = \"linux\", target_env = \"gnu\"))]\n         {\n             $($block_inner)*\n         }"}]}