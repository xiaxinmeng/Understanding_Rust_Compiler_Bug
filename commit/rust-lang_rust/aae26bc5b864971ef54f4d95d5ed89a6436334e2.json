{"sha": "aae26bc5b864971ef54f4d95d5ed89a6436334e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZTI2YmM1Yjg2NDk3MWVmNTRmNGQ5NWQ1ZWQ4OWE2NDM2MzM0ZTI=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-16T00:17:26Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-17T12:29:13Z"}, "message": "Add highlighting support for doc comments", "tree": {"sha": "69d972ce3b4cf3f184ebb97a9c2846b858770400", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69d972ce3b4cf3f184ebb97a9c2846b858770400"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aae26bc5b864971ef54f4d95d5ed89a6436334e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aae26bc5b864971ef54f4d95d5ed89a6436334e2", "html_url": "https://github.com/rust-lang/rust/commit/aae26bc5b864971ef54f4d95d5ed89a6436334e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aae26bc5b864971ef54f4d95d5ed89a6436334e2/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "931f3173992df6ac6b728fa9fa9a94d15781027e", "url": "https://api.github.com/repos/rust-lang/rust/commits/931f3173992df6ac6b728fa9fa9a94d15781027e", "html_url": "https://github.com/rust-lang/rust/commit/931f3173992df6ac6b728fa9fa9a94d15781027e"}], "stats": {"total": 97, "additions": 56, "deletions": 41}, "files": [{"sha": "f1e007b09b2fba3aa08c9776d427420504b61747", "filename": "crates/ra_ide/src/snapshots/highlight_doctest.html", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_doctest.html?ref=aae26bc5b864971ef54f4d95d5ed89a6436334e2", "patch": "@@ -38,48 +38,48 @@\n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> {\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"constant declaration\">bar</span>: <span class=\"builtin_type\">bool</span> = <span class=\"bool_literal\">true</span>;\n \n-    <span class=\"comment\">/// Constructs a new `Foo`.</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// # Examples</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">/// #</span> <span class=\"attribute\">#![</span><span class=\"function attribute\">allow</span><span class=\"attribute\">(unused_mut)]</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span>: <span class=\"struct\">Foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n-    <span class=\"comment\">/// ```</span>\n+    <span class=\"comment documentation\">/// Constructs a new `Foo`.</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// # Examples</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">/// #</span> <span class=\"attribute\">#![</span><span class=\"function attribute\">allow</span><span class=\"attribute\">(unused_mut)]</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span>: <span class=\"struct\">Foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">new</span>() -&gt; <span class=\"struct\">Foo</span> {\n         <span class=\"struct\">Foo</span> { <span class=\"field\">bar</span>: <span class=\"bool_literal\">true</span> }\n     }\n \n-    <span class=\"comment\">/// `bar` method on `Foo`.</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// # Examples</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">use</span> <span class=\"module\">x</span>::<span class=\"module\">y</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"comment\">// calls bar on foo</span>\n-    <span class=\"comment\">/// </span><span class=\"macro\">assert!</span>(foo.bar());\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> = <span class=\"variable\">foo</span>.<span class=\"field\">bar</span> || <span class=\"struct\">Foo</span>::<span class=\"constant\">bar</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"comment\">/* multi-line\n-    </span><span class=\"comment\">/// </span><span class=\"comment\">       comment */</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">multi_line_string</span> = <span class=\"string_literal\">\"Foo\n-    </span><span class=\"comment\">/// </span><span class=\"string_literal\">  bar\n-    </span><span class=\"comment\">/// </span><span class=\"string_literal\">         \"</span>;\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```rust,no_run</span>\n-    <span class=\"comment\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foobar</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>().<span class=\"function\">bar</span>();\n-    <span class=\"comment\">/// ```</span>\n-    <span class=\"comment\">///</span>\n-    <span class=\"comment\">/// ```sh</span>\n-    <span class=\"comment\">/// echo 1</span>\n-    <span class=\"comment\">/// ```</span>\n+    <span class=\"comment documentation\">/// `bar` method on `Foo`.</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// # Examples</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">use</span> <span class=\"module\">x</span>::<span class=\"module\">y</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foo</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>();\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"comment\">// calls bar on foo</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"macro\">assert!</span>(foo.bar());\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> = <span class=\"variable\">foo</span>.<span class=\"field\">bar</span> || <span class=\"struct\">Foo</span>::<span class=\"constant\">bar</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"comment\">/* multi-line\n+    </span><span class=\"comment documentation\">/// </span><span class=\"comment\">       comment */</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">multi_line_string</span> = <span class=\"string_literal\">\"Foo\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">  bar\n+    </span><span class=\"comment documentation\">/// </span><span class=\"string_literal\">         \"</span>;\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```rust,no_run</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword\">let</span> <span class=\"variable declaration\">foobar</span> = <span class=\"struct\">Foo</span>::<span class=\"function\">new</span>().<span class=\"function\">bar</span>();\n+    <span class=\"comment documentation\">/// ```</span>\n+    <span class=\"comment documentation\">///</span>\n+    <span class=\"comment documentation\">/// ```sh</span>\n+    <span class=\"comment documentation\">/// echo 1</span>\n+    <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span>(&<span class=\"self_keyword\">self</span>) -&gt; <span class=\"builtin_type\">bool</span> {\n         <span class=\"bool_literal\">true</span>\n     }"}, {"sha": "68dff45b7f52539bf9c53d2559e7c025f7c2551e", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=aae26bc5b864971ef54f4d95d5ed89a6436334e2", "patch": "@@ -475,7 +475,14 @@ fn highlight_element(\n         }\n \n         // Simple token-based highlighting\n-        COMMENT => HighlightTag::Comment.into(),\n+        COMMENT => {\n+            let comment = element.into_token().and_then(ast::Comment::cast)?;\n+            if comment.kind().doc.is_some() {\n+                Highlight::from(HighlightTag::Comment) | HighlightModifier::Documentation\n+            } else {\n+                HighlightTag::Comment.into()\n+            }\n+        }\n         STRING | RAW_STRING | RAW_BYTE_STRING | BYTE_STRING => HighlightTag::StringLiteral.into(),\n         ATTR => HighlightTag::Attribute.into(),\n         INT_NUMBER | FLOAT_NUMBER => HighlightTag::NumericLiteral.into(),"}, {"sha": "40436c5a225f22e43ce3e901ffcc0eae7c79d8d5", "filename": "crates/ra_ide/src/syntax_highlighting/injection.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Finjection.rs?ref=aae26bc5b864971ef54f4d95d5ed89a6436334e2", "patch": "@@ -7,7 +7,10 @@ use hir::Semantics;\n use ra_syntax::{ast, AstToken, SyntaxNode, SyntaxToken, TextRange, TextSize};\n use stdx::SepBy;\n \n-use crate::{call_info::ActiveParameter, Analysis, HighlightTag, HighlightedRange, RootDatabase};\n+use crate::{\n+    call_info::ActiveParameter, Analysis, Highlight, HighlightModifier, HighlightTag,\n+    HighlightedRange, RootDatabase,\n+};\n \n use super::HighlightedRangeStack;\n \n@@ -118,7 +121,8 @@ pub(super) fn extract_doc_comments(\n                     range.start(),\n                     range.start() + TextSize::try_from(pos).unwrap(),\n                 ),\n-                highlight: HighlightTag::Comment.into(),\n+                highlight: Highlight::from(HighlightTag::Comment)\n+                    | HighlightModifier::Documentation,\n                 binding_hash: None,\n             });\n             line_start += range.len() - TextSize::try_from(pos).unwrap();"}, {"sha": "f593ecad8158d8ea376b4b8b400cff35ed54b7e6", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=aae26bc5b864971ef54f4d95d5ed89a6436334e2", "patch": "@@ -55,6 +55,7 @@ pub enum HighlightModifier {\n     /// `foo` in `fn foo(x: i32)` is a definition, `foo` in `foo(90 + 2)` is\n     /// not.\n     Definition,\n+    Documentation,\n     Mutable,\n     Unsafe,\n }\n@@ -106,6 +107,7 @@ impl HighlightModifier {\n         HighlightModifier::Attribute,\n         HighlightModifier::ControlFlow,\n         HighlightModifier::Definition,\n+        HighlightModifier::Documentation,\n         HighlightModifier::Mutable,\n         HighlightModifier::Unsafe,\n     ];\n@@ -115,6 +117,7 @@ impl HighlightModifier {\n             HighlightModifier::Attribute => \"attribute\",\n             HighlightModifier::ControlFlow => \"control\",\n             HighlightModifier::Definition => \"declaration\",\n+            HighlightModifier::Documentation => \"documentation\",\n             HighlightModifier::Mutable => \"mutable\",\n             HighlightModifier::Unsafe => \"unsafe\",\n         }"}, {"sha": "84d6f5155e7a1bc0600fe1e910615bd96a6fe650", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aae26bc5b864971ef54f4d95d5ed89a6436334e2/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=aae26bc5b864971ef54f4d95d5ed89a6436334e2", "patch": "@@ -330,6 +330,7 @@ fn semantic_token_type_and_modifiers(\n         let modifier = match modifier {\n             HighlightModifier::Attribute => semantic_tokens::ATTRIBUTE_MODIFIER,\n             HighlightModifier::Definition => lsp_types::SemanticTokenModifier::DECLARATION,\n+            HighlightModifier::Documentation => lsp_types::SemanticTokenModifier::DOCUMENTATION,\n             HighlightModifier::ControlFlow => semantic_tokens::CONTROL_FLOW,\n             HighlightModifier::Mutable => semantic_tokens::MUTABLE,\n             HighlightModifier::Unsafe => semantic_tokens::UNSAFE,"}]}