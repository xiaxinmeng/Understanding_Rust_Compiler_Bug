{"sha": "9e84b00d447b5cb878a6b4e4001a94d4ea3531ca", "node_id": "C_kwDOAAsO6NoAKDllODRiMDBkNDQ3YjVjYjg3OGE2YjRlNDAwMWE5NGQ0ZWEzNTMxY2E", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-02-13T09:45:43Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-02-13T09:47:12Z"}, "message": "layout: deal with placeholders, ICE on bound types\n\na placeholder type is the same as a param as they\nrepresent \"this could be any type\". A bound type\nrepresents a type inside of a `for<T>` or `exists<T>`.\nWhen entering a forall or exists `T` should be\ninstantiated as a existential (inference var) or universal\n(placeholder). You should never observe a bound variable\nwithout its binder.", "tree": {"sha": "9fca327ee7bff7029960f408f58e958200d58bb8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fca327ee7bff7029960f408f58e958200d58bb8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca", "html_url": "https://github.com/rust-lang/rust/commit/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96834f0231277e8feb8dcf185b2af082ad2e39f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/96834f0231277e8feb8dcf185b2af082ad2e39f6", "html_url": "https://github.com/rust-lang/rust/commit/96834f0231277e8feb8dcf185b2af082ad2e39f6"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "137289198786ecec502666436f221e8d7631e46a", "filename": "compiler/rustc_ty_utils/src/layout.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e84b00d447b5cb878a6b4e4001a94d4ea3531ca/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs?ref=9e84b00d447b5cb878a6b4e4001a94d4ea3531ca", "patch": "@@ -470,14 +470,11 @@ fn layout_of_uncached<'tcx>(\n             return Err(LayoutError::Unknown(ty));\n         }\n \n-        ty::Placeholder(..)\n-        | ty::GeneratorWitness(..)\n-        | ty::GeneratorWitnessMIR(..)\n-        | ty::Infer(_) => {\n+        ty::Bound(..) | ty::GeneratorWitness(..) | ty::GeneratorWitnessMIR(..) | ty::Infer(_) => {\n             bug!(\"Layout::compute: unexpected type `{}`\", ty)\n         }\n \n-        ty::Bound(..) | ty::Param(_) | ty::Error(_) => {\n+        ty::Placeholder(..) | ty::Param(_) | ty::Error(_) => {\n             return Err(LayoutError::Unknown(ty));\n         }\n     })"}]}