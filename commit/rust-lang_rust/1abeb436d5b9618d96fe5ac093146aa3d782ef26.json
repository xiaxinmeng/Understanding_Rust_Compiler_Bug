{"sha": "1abeb436d5b9618d96fe5ac093146aa3d782ef26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYmViNDM2ZDViOTYxOGQ5NmZlNWFjMDkzMTQ2YWEzZDc4MmVmMjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-27T19:52:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-27T19:52:26Z"}, "message": "Auto merge of #47014 - topecongiro:fixed-ices, r=estebank\n\nAdd tests to fixed ICEs\n\nCloses #27078. Closes #27985. Closes #39848. Closes #42164.\nCloses #42479. Closes #45662. Closes #45965. Closes #46152.", "tree": {"sha": "08fa0389fbddf0be7f92863d3090e3f69afb6b7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08fa0389fbddf0be7f92863d3090e3f69afb6b7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1abeb436d5b9618d96fe5ac093146aa3d782ef26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1abeb436d5b9618d96fe5ac093146aa3d782ef26", "html_url": "https://github.com/rust-lang/rust/commit/1abeb436d5b9618d96fe5ac093146aa3d782ef26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1abeb436d5b9618d96fe5ac093146aa3d782ef26/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfbb1f5ce1e6a85a03219767cfc5c9bab3f7bf9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfbb1f5ce1e6a85a03219767cfc5c9bab3f7bf9e", "html_url": "https://github.com/rust-lang/rust/commit/bfbb1f5ce1e6a85a03219767cfc5c9bab3f7bf9e"}, {"sha": "f6f9cbe56011debeb4d6df9ad71139bc8a87d653", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6f9cbe56011debeb4d6df9ad71139bc8a87d653", "html_url": "https://github.com/rust-lang/rust/commit/f6f9cbe56011debeb4d6df9ad71139bc8a87d653"}], "stats": {"total": 192, "additions": 192, "deletions": 0}, "files": [{"sha": "5dc3b5f94f386422f59a0b9bfadd6a2371633d47", "filename": "src/test/compile-fail/E0532.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2FE0532.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2FE0532.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0532.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let value = 1;\n+\n+    match SomeStruct(value) {\n+        StructConst1(_) => { },\n+        //~^ ERROR expected tuple struct/variant, found constant `StructConst1`\n+        _ => { },\n+    }\n+\n+    struct SomeStruct(u8);\n+\n+    const StructConst1 : SomeStruct = SomeStruct(1);\n+    const StructConst2 : SomeStruct = SomeStruct(2);\n+}"}, {"sha": "f34bef6224900620123f4fba8659e892f0efb9e6", "filename": "src/test/compile-fail/issue-27078.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-27078.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-27078.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-27078.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+trait Foo {\n+    const BAR: i32;\n+    fn foo(self) -> &'static i32 {\n+        //~^ ERROR the trait bound `Self: std::marker::Sized` is not satisfied\n+        &<Self>::BAR\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "d5ca009d310f70ff2499239f41d6379870833829", "filename": "src/test/compile-fail/issue-39848.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-39848.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-39848.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-39848.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! get_opt {\n+    ($tgt:expr, $field:ident) => {\n+        if $tgt.has_$field() {}\n+    }\n+}\n+\n+fn main() {\n+    get_opt!(bar, foo);\n+    //~^ ERROR expected `{`, found `foo`\n+}"}, {"sha": "0b82f2b32ffb936eb8b283a096f665bda72fb4e0", "filename": "src/test/compile-fail/issue-45965.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-45965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Fcompile-fail%2Fissue-45965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-45965.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let a = |r: f64| if r != 0.0(r != 0.0) { 1.0 } else { 0.0 };\n+    //~^ ERROR expected function, found `{float}`\n+}"}, {"sha": "db25960df4c87b0962ad848956d4a7eb9dfbb8dc", "filename": "src/test/run-pass/align-with-extern-c-fn.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// #45662\n+\n+#![feature(repr_align)]\n+#![feature(attr_literals)]\n+\n+#[repr(align(16))]\n+pub struct A {\n+    y: i64,\n+}\n+\n+pub extern \"C\" fn foo(x: A) {}\n+\n+fn main() {}"}, {"sha": "629948a5dc4a8659e7ca0374c73ca2291addadc9", "filename": "src/test/run-pass/impl-trait/issue-42479.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fissue-42479.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fissue-42479.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fissue-42479.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(conservative_impl_trait)]\n+\n+use std::iter::once;\n+\n+struct Foo {\n+    x: i32,\n+}\n+\n+impl Foo {\n+    fn inside(&self) -> impl Iterator<Item = &i32> {\n+        once(&self.x)\n+    }\n+}\n+\n+fn main() {\n+    println!(\"hi\");\n+}"}, {"sha": "a5c349adb8d20fd2261bd76cd2137bcf5f38803b", "filename": "src/test/run-pass/issue-45152.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fissue-45152.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fissue-45152.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-45152.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unsize, coerce_unsized)]\n+\n+#[repr(packed)]\n+struct UnalignedPtr<'a, T: ?Sized>\n+    where T: 'a,\n+{\n+    data: &'a T,\n+}\n+\n+fn main() {\n+\n+    impl<'a, T, U> std::ops::CoerceUnsized<UnalignedPtr<'a, U>> for UnalignedPtr<'a, T>\n+        where\n+        T: std::marker::Unsize<U> + ?Sized,\n+        U: ?Sized,\n+    { }\n+\n+    let arr = [1, 2, 3];\n+    let arr_unaligned: UnalignedPtr<[i32; 3]> = UnalignedPtr { data: &arr };\n+    let arr_unaligned: UnalignedPtr<[i32]> = arr_unaligned;\n+}"}, {"sha": "993ded60c367848d8a827567ac4427026f4f53df", "filename": "src/test/run-pass/macro-nested_expr.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fmacro-nested_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abeb436d5b9618d96fe5ac093146aa3d782ef26/src%2Ftest%2Frun-pass%2Fmacro-nested_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-nested_expr.rs?ref=1abeb436d5b9618d96fe5ac093146aa3d782ef26", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// #42164\n+\n+#![feature(decl_macro)]\n+#![allow(dead_code)]\n+\n+pub macro m($inner_str:expr) {\n+    #[doc = $inner_str]\n+    struct S;\n+}\n+\n+macro_rules! define_f {\n+    ($name:expr) => {\n+        #[export_name = $name]\n+        fn f() {}\n+    }\n+}\n+\n+fn main() {\n+    define_f!(concat!(\"exported_\", \"f\"));\n+    m!(stringify!(foo));\n+}\n+"}]}