{"sha": "c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMmNjMWQ2N2FmZTFjMmYwYzYwYTNjYzRlNmQ4YmE3MGMzNGJmOTk=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-08-06T17:49:45Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-08-06T17:49:45Z"}, "message": "Remove unnecessary features from compiler error code list", "tree": {"sha": "bff9d93429249710ade1a52d9a0a033adf898f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bff9d93429249710ade1a52d9a0a033adf898f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "html_url": "https://github.com/rust-lang/rust/commit/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99/comments", "author": null, "committer": null, "parents": [{"sha": "188ab5c976a5696ac710b7ba78849ef5dcf0235a", "url": "https://api.github.com/repos/rust-lang/rust/commits/188ab5c976a5696ac710b7ba78849ef5dcf0235a", "html_url": "https://github.com/rust-lang/rust/commit/188ab5c976a5696ac710b7ba78849ef5dcf0235a"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "86c263a447bb6ecf9bd940e6239829cf9fe6ea80", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=c22cc1d67afe1c2f0c60a3cc4e6d8ba70c34bf99", "patch": "@@ -2027,15 +2027,13 @@ Local variables, function parameters and temporaries are all dropped before the\n end of the function body. So a reference to them cannot be returned.\n \n ```compile_fail,E0515\n-#![feature(nll)]\n fn get_dangling_reference() -> &'static i32 {\n     let x = 0;\n     &x\n }\n ```\n \n ```compile_fail,E0515\n-#![feature(nll)]\n use std::slice::Iter;\n fn get_dangling_iterator<'a>() -> Iter<'a, i32> {\n     let v = vec![1, 2, 3];\n@@ -2233,7 +2231,6 @@ function which outlived the lifetime of the function.\n Example of erroneous code:\n \n ```compile_fail,E0712\n-#![feature(nll)]\n #![feature(thread_local)]\n \n #[thread_local]\n@@ -2286,8 +2283,6 @@ not run while the string-data is borrowed; for example by taking `S`\n by reference:\n \n ```\n-#![feature(nll)]\n-\n pub struct S<'a> { data: &'a mut String }\n \n impl<'a> Drop for S<'a> {\n@@ -2312,7 +2307,6 @@ while a borrow is still in active use.\n Erroneous code example:\n \n ```compile_fail,E0716\n-# #![feature(nll)]\n fn foo() -> i32 { 22 }\n fn bar(x: &i32) -> &i32 { x }\n let p = bar(&foo());"}]}