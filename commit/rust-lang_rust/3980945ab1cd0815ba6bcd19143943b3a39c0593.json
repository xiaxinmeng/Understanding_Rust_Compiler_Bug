{"sha": "3980945ab1cd0815ba6bcd19143943b3a39c0593", "node_id": "C_kwDOAAsO6NoAKDM5ODA5NDVhYjFjZDA4MTViYTZiY2QxOTE0Mzk0M2IzYTM5YzA1OTM", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-29T04:38:39Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-29T04:38:39Z"}, "message": "fix #104884, Avoid Invalid code suggested when encountering unsatisfied trait bounds in derive macro code", "tree": {"sha": "b091294e651f0d55ab7a133faa74c298547defb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b091294e651f0d55ab7a133faa74c298547defb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3980945ab1cd0815ba6bcd19143943b3a39c0593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3980945ab1cd0815ba6bcd19143943b3a39c0593", "html_url": "https://github.com/rust-lang/rust/commit/3980945ab1cd0815ba6bcd19143943b3a39c0593", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3980945ab1cd0815ba6bcd19143943b3a39c0593/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41e0363055ade59584cff667c79f64937e6ef3f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/41e0363055ade59584cff667c79f64937e6ef3f9", "html_url": "https://github.com/rust-lang/rust/commit/41e0363055ade59584cff667c79f64937e6ef3f9"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "160ee73ec65eee14a092cfedf0e5901b2ff3b78a", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3980945ab1cd0815ba6bcd19143943b3a39c0593/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3980945ab1cd0815ba6bcd19143943b3a39c0593/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=3980945ab1cd0815ba6bcd19143943b3a39c0593", "patch": "@@ -355,6 +355,12 @@ pub fn suggest_constraining_type_params<'a>(\n         ));\n     }\n \n+    // FIXME: remove the suggestions that are from derive, as the span is not correct\n+    suggestions = suggestions\n+        .into_iter()\n+        .filter(|(span, _, _)| !span.in_derive_expansion())\n+        .collect::<Vec<_>>();\n+\n     if suggestions.len() == 1 {\n         let (span, suggestion, msg) = suggestions.pop().unwrap();\n "}, {"sha": "0de59d005731d91b4fb86f920abe0eb29c4b1a7b", "filename": "src/test/ui/proc-macro/auxiliary/issue-104884.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fissue-104884.rs?ref=3980945ab1cd0815ba6bcd19143943b3a39c0593", "patch": "@@ -0,0 +1,23 @@\n+// force-host\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::TokenStream;\n+\n+#[proc_macro_derive(AddImpl)]\n+\n+pub fn derive(input: TokenStream) -> TokenStream {\n+    \"use std::cmp::Ordering;\n+\n+    impl<T> Ord for PriorityQueue<T> {\n+        fn cmp(&self, other: &Self) -> Ordering {\n+            self.0.cmp(&self.height)\n+        }\n+    }\n+    \"\n+    .parse()\n+    .unwrap()\n+}"}, {"sha": "a0d619c456644b6c1af6cb8a5f3adcbd68e2864e", "filename": "src/test/ui/proc-macro/issue-104884-trait-impl-sugg-err.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.rs?ref=3980945ab1cd0815ba6bcd19143943b3a39c0593", "patch": "@@ -0,0 +1,20 @@\n+// aux-build:issue-104884.rs\n+\n+use std::collections::BinaryHeap;\n+\n+#[macro_use]\n+extern crate issue_104884;\n+\n+#[derive(PartialEq, Eq, PartialOrd, Ord)]\n+struct PriorityQueueEntry<T> {\n+    value: T,\n+}\n+\n+#[derive(PartialOrd, AddImpl)]\n+//~^ ERROR can't compare `PriorityQueue<T>` with `PriorityQueue<T>`\n+//~| ERROR the trait bound `PriorityQueue<T>: Eq` is not satisfied\n+//~| ERROR can't compare `T` with `T`\n+\n+struct PriorityQueue<T>(BinaryHeap<PriorityQueueEntry<T>>);\n+\n+fn main() {}"}, {"sha": "ac49e04e3c0a9ed21ddafd652569e9b9c48454be", "filename": "src/test/ui/proc-macro/issue-104884-trait-impl-sugg-err.stderr", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3980945ab1cd0815ba6bcd19143943b3a39c0593/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-104884-trait-impl-sugg-err.stderr?ref=3980945ab1cd0815ba6bcd19143943b3a39c0593", "patch": "@@ -0,0 +1,48 @@\n+error[E0277]: can't compare `PriorityQueue<T>` with `PriorityQueue<T>`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:10\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |          ^^^^^^^^^^ no implementation for `PriorityQueue<T> == PriorityQueue<T>`\n+   |\n+   = help: the trait `PartialEq` is not implemented for `PriorityQueue<T>`\n+note: required by a bound in `PartialOrd`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait PartialOrd<Rhs: ?Sized = Self>: PartialEq<Rhs> {\n+   |                                           ^^^^^^^^^^^^^^ required by this bound in `PartialOrd`\n+   = note: this error originates in the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: the trait bound `PriorityQueue<T>: Eq` is not satisfied\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:22\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |                      ^^^^^^^ the trait `Eq` is not implemented for `PriorityQueue<T>`\n+   |\n+note: required by a bound in `Ord`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait Ord: Eq + PartialOrd<Self> {\n+   |                ^^ required by this bound in `Ord`\n+   = note: this error originates in the derive macro `AddImpl` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: can't compare `T` with `T`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:22\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |                      ^^^^^^^ no implementation for `T < T` and `T > T`\n+   |\n+note: required for `PriorityQueue<T>` to implement `PartialOrd`\n+  --> $DIR/issue-104884-trait-impl-sugg-err.rs:13:10\n+   |\n+LL | #[derive(PartialOrd, AddImpl)]\n+   |          ^^^^^^^^^^\n+note: required by a bound in `Ord`\n+  --> $SRC_DIR/core/src/cmp.rs:LL:COL\n+   |\n+LL | pub trait Ord: Eq + PartialOrd<Self> {\n+   |                     ^^^^^^^^^^^^^^^^ required by this bound in `Ord`\n+   = note: this error originates in the derive macro `AddImpl` which comes from the expansion of the derive macro `PartialOrd` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}