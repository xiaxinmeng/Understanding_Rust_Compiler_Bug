{"sha": "be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMmZkNjFkNzhiODE1ZjJkMWNiMDliMGRmNWYwNmQ3M2EwODlhYzg=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-05-24T13:26:20Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2020-05-24T13:26:20Z"}, "message": "Fix InlineAsmOperand expresions being visited twice during liveness checking", "tree": {"sha": "14daa572f2851b395c048d3fef8ed814179da0ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14daa572f2851b395c048d3fef8ed814179da0ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "html_url": "https://github.com/rust-lang/rust/commit/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "215f2d3294b08dbdcf8f7d40de21ef1e7eae0a2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/215f2d3294b08dbdcf8f7d40de21ef1e7eae0a2d", "html_url": "https://github.com/rust-lang/rust/commit/215f2d3294b08dbdcf8f7d40de21ef1e7eae0a2d"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "2d7562ac1c34d5a7605e9ae7f34a6e3c75b84fa8", "filename": "src/librustc_passes/liveness.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8/src%2Flibrustc_passes%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be2fd61d78b815f2d1cb09b0df5f06d73a089ac8/src%2Flibrustc_passes%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fliveness.rs?ref=be2fd61d78b815f2d1cb09b0df5f06d73a089ac8", "patch": "@@ -1460,26 +1460,20 @@ fn check_expr<'tcx>(this: &mut Liveness<'_, 'tcx>, expr: &'tcx Expr<'tcx>) {\n         hir::ExprKind::InlineAsm(ref asm) => {\n             for op in asm.operands {\n                 match op {\n-                    hir::InlineAsmOperand::In { expr, .. }\n-                    | hir::InlineAsmOperand::Const { expr, .. }\n-                    | hir::InlineAsmOperand::Sym { expr, .. } => this.visit_expr(expr),\n                     hir::InlineAsmOperand::Out { expr, .. } => {\n                         if let Some(expr) = expr {\n                             this.check_place(expr);\n-                            this.visit_expr(expr);\n                         }\n                     }\n                     hir::InlineAsmOperand::InOut { expr, .. } => {\n                         this.check_place(expr);\n-                        this.visit_expr(expr);\n                     }\n-                    hir::InlineAsmOperand::SplitInOut { in_expr, out_expr, .. } => {\n-                        this.visit_expr(in_expr);\n+                    hir::InlineAsmOperand::SplitInOut { out_expr, .. } => {\n                         if let Some(out_expr) = out_expr {\n                             this.check_place(out_expr);\n-                            this.visit_expr(out_expr);\n                         }\n                     }\n+                    _ => {}\n                 }\n             }\n         }"}]}