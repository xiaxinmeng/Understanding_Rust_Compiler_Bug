{"sha": "eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNzdmN2VjNmU5NDYwYzFjYTcwZmJiN2JiNjU1ZjFhMGExYmFjZmM=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2019-12-17T20:52:13Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2019-12-17T20:52:13Z"}, "message": "Add internal safety docs to (A)Rc::into_raw", "tree": {"sha": "d940b9c2137b733082ce4c1561f8a15e4a9c59ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d940b9c2137b733082ce4c1561f8a15e4a9c59ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "html_url": "https://github.com/rust-lang/rust/commit/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c842f02dee81e52f3b63a8b46021a8e18f143a7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c842f02dee81e52f3b63a8b46021a8e18f143a7e", "html_url": "https://github.com/rust-lang/rust/commit/c842f02dee81e52f3b63a8b46021a8e18f143a7e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "8c70b0a913a98f78767c92d8d47f1cad73beee4e", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "patch": "@@ -575,6 +575,11 @@ impl<T: ?Sized> Rc<T> {\n         let fake_ptr = ptr as *mut T;\n         mem::forget(this);\n \n+        // SAFETY: This cannot go through Deref::deref.\n+        // Instead, we manually offset the pointer rather than manifesting a reference.\n+        // This is so that the returned pointer retains the same provenance as our pointer.\n+        // This is required so that e.g. `get_mut` can write through the pointer\n+        // after the Rc is recovered through `from_raw`.\n         unsafe {\n             let offset = data_offset(&(*ptr).value);\n             set_data_ptr(fake_ptr, (ptr as *mut u8).offset(offset))"}, {"sha": "5c1fa17a626d1632a57667e81b8f7e8d4926c605", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=eb77f7ec6e9460c1ca70fbb7bb655f1a0a1bacfc", "patch": "@@ -555,6 +555,11 @@ impl<T: ?Sized> Arc<T> {\n         let fake_ptr = ptr as *mut T;\n         mem::forget(this);\n \n+        // SAFETY: This cannot go through Deref::deref.\n+        // Instead, we manually offset the pointer rather than manifesting a reference.\n+        // This is so that the returned pointer retains the same provenance as our pointer.\n+        // This is required so that e.g. `get_mut` can write through the pointer\n+        // after the Arc is recovered through `from_raw`.\n         unsafe {\n             let offset = data_offset(&(*ptr).data);\n             set_data_ptr(fake_ptr, (ptr as *mut u8).offset(offset))"}]}