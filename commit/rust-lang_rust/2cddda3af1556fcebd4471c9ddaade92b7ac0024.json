{"sha": "2cddda3af1556fcebd4471c9ddaade92b7ac0024", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZGRkYTNhZjE1NTZmY2ViZDQ0NzFjOWRkYWFkZTkyYjdhYzAwMjQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-21T21:06:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-21T21:06:20Z"}, "message": "Rollup merge of #84380 - Smittyvb:rdoc-title-order, r=jsha\n\nWrite Rustdoc titles like \"x in crate::mod - Rust\"\n\nThis makes Rustdoc titles for items be like \"Widget in cratename::blah::foo - Rust\". Titles for modules and other non-items are unchanged, and still read like \"cratename::blah::foo - Rust\". This makes managing several open Rustdoc tabs easier.\n\n![A screenshot of several open Rustdoc tabs](https://user-images.githubusercontent.com/10530973/115457675-d608f180-a1f2-11eb-87a8-838a32b4e3f7.png)\n\nThis also adds some tests for the new title behavior.\n\nCloses #84371.", "tree": {"sha": "0fbced9c623d0f1d891c48e06eab3256dfaff7f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fbced9c623d0f1d891c48e06eab3256dfaff7f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cddda3af1556fcebd4471c9ddaade92b7ac0024", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggJPMCRBK7hj4Ov3rIwAANoMIADWmWdK2oQc9nKDXWQNDce48\n89wPFQWcahXlBakIfOsOxGAPITy4zpueh7GKHa7u9AYpCmYyf7nj8WkYgOEZkGkd\nmCmtsGHZCY1Vm4BfEvXkDqhgovWFcr52Qvg1mbK05JaTv2WNw7q7bf+IIiFgTTG9\nSqvFuu+jiGU+SUFfh5VNuNq0P9zS6123hqWimtKEmIqoUN/xjaFAtXnhpFnsvRKc\njp20ifdr/eqnTgjArs6tt+A7TKTOt+WR3rSf7pX/6ghage7Iw0hlnPzfNsufwMxF\nqKbaJ7yLqkN71Au3B8yhZweh5TdQuW9OVuPosyX90nxkbiuEdg8PzQt3HZ238/A=\n=A6aY\n-----END PGP SIGNATURE-----\n", "payload": "tree 0fbced9c623d0f1d891c48e06eab3256dfaff7f9\nparent e7f20335a66cb175a3754391b60c0a202410e5cf\nparent df147c718c5819631eefc774e6e40d4515f30c90\nauthor Mara Bos <m-ou.se@m-ou.se> 1619039180 +0200\ncommitter GitHub <noreply@github.com> 1619039180 +0200\n\nRollup merge of #84380 - Smittyvb:rdoc-title-order, r=jsha\n\nWrite Rustdoc titles like \"x in crate::mod - Rust\"\n\nThis makes Rustdoc titles for items be like \"Widget in cratename::blah::foo - Rust\". Titles for modules and other non-items are unchanged, and still read like \"cratename::blah::foo - Rust\". This makes managing several open Rustdoc tabs easier.\n\n![A screenshot of several open Rustdoc tabs](https://user-images.githubusercontent.com/10530973/115457675-d608f180-a1f2-11eb-87a8-838a32b4e3f7.png)\n\nThis also adds some tests for the new title behavior.\n\nCloses #84371.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cddda3af1556fcebd4471c9ddaade92b7ac0024", "html_url": "https://github.com/rust-lang/rust/commit/2cddda3af1556fcebd4471c9ddaade92b7ac0024", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cddda3af1556fcebd4471c9ddaade92b7ac0024/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7f20335a66cb175a3754391b60c0a202410e5cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7f20335a66cb175a3754391b60c0a202410e5cf", "html_url": "https://github.com/rust-lang/rust/commit/e7f20335a66cb175a3754391b60c0a202410e5cf"}, {"sha": "df147c718c5819631eefc774e6e40d4515f30c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/df147c718c5819631eefc774e6e40d4515f30c90", "html_url": "https://github.com/rust-lang/rust/commit/df147c718c5819631eefc774e6e40d4515f30c90"}], "stats": {"total": 76, "additions": 56, "deletions": 20}, "files": [{"sha": "0aa7aa763c2afa7139497d67c04a704ff66e3e69", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2cddda3af1556fcebd4471c9ddaade92b7ac0024/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cddda3af1556fcebd4471c9ddaade92b7ac0024/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=2cddda3af1556fcebd4471c9ddaade92b7ac0024", "patch": "@@ -167,19 +167,18 @@ impl<'tcx> Context<'tcx> {\n         \"../\".repeat(self.current.len())\n     }\n \n-    fn render_item(&self, it: &clean::Item, pushname: bool) -> String {\n-        let mut title = if it.is_primitive() || it.is_keyword() {\n-            // No need to include the namespace for primitive types and keywords\n-            String::new()\n-        } else {\n-            self.current.join(\"::\")\n-        };\n-        if pushname {\n-            if !title.is_empty() {\n-                title.push_str(\"::\");\n-            }\n+    fn render_item(&self, it: &clean::Item, is_module: bool) -> String {\n+        let mut title = String::new();\n+        if !is_module {\n             title.push_str(&it.name.unwrap().as_str());\n         }\n+        if !it.is_primitive() && !it.is_keyword() {\n+            if !is_module {\n+                title.push_str(\" in \");\n+            }\n+            // No need to include the namespace for primitive types and keywords\n+            title.push_str(&self.current.join(\"::\"));\n+        };\n         title.push_str(\" - Rust\");\n         let tyname = it.type_();\n         let desc = it.doc_value().as_ref().map(|doc| plain_text_summary(&doc));\n@@ -598,7 +597,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n \n         info!(\"Recursing into {}\", self.dst.display());\n \n-        let buf = self.render_item(item, false);\n+        let buf = self.render_item(item, true);\n         // buf will be empty if the module is stripped and there is no redirect for it\n         if !buf.is_empty() {\n             self.shared.ensure_dir(&self.dst)?;\n@@ -641,7 +640,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             self.render_redirect_pages = item.is_stripped();\n         }\n \n-        let buf = self.render_item(&item, true);\n+        let buf = self.render_item(&item, false);\n         // buf will be empty if the item is stripped and there is no redirect for it\n         if !buf.is_empty() {\n             let name = item.name.as_ref().unwrap();"}, {"sha": "fa3fd512fada6d9568bb1c02522dcfb50c7e0595", "filename": "src/test/rustdoc/prim-title.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e7f20335a66cb175a3754391b60c0a202410e5cf/src%2Ftest%2Frustdoc%2Fprim-title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7f20335a66cb175a3754391b60c0a202410e5cf/src%2Ftest%2Frustdoc%2Fprim-title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprim-title.rs?ref=e7f20335a66cb175a3754391b60c0a202410e5cf", "patch": "@@ -1,7 +0,0 @@\n-#![crate_name = \"foo\"]\n-\n-// @has foo/primitive.u8.html '//head/title' 'u8 - Rust'\n-// @!has - '//head/title' 'foo'\n-#[doc(primitive = \"u8\")]\n-/// `u8` docs\n-mod u8 {}"}, {"sha": "7dce6092deaed95fddbbbee00262ff2a90925254", "filename": "src/test/rustdoc/tab_title.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2cddda3af1556fcebd4471c9ddaade92b7ac0024/src%2Ftest%2Frustdoc%2Ftab_title.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cddda3af1556fcebd4471c9ddaade92b7ac0024/src%2Ftest%2Frustdoc%2Ftab_title.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftab_title.rs?ref=2cddda3af1556fcebd4471c9ddaade92b7ac0024", "patch": "@@ -0,0 +1,44 @@\n+#![crate_name = \"foo\"]\n+#![feature(doc_keyword)]\n+\n+// tests for the html <title> element\n+\n+// @has foo/index.html '//head/title' 'foo - Rust'\n+\n+// @has foo/fn.widget_count.html '//head/title' 'widget_count in foo - Rust'\n+/// blah\n+pub fn widget_count() {}\n+\n+// @has foo/struct.Widget.html '//head/title' 'Widget in foo - Rust'\n+pub struct Widget;\n+\n+// @has foo/constant.ANSWER.html '//head/title' 'ANSWER in foo - Rust'\n+pub const ANSWER: u8 = 42;\n+\n+// @has foo/blah/index.html '//head/title' 'foo::blah - Rust'\n+pub mod blah {\n+    // @has foo/blah/struct.Widget.html '//head/title' 'Widget in foo::blah - Rust'\n+    pub struct Widget;\n+\n+    // @has foo/blah/trait.Awesome.html '//head/title' 'Awesome in foo::blah - Rust'\n+    pub trait Awesome {}\n+\n+    // @has foo/blah/fn.make_widget.html '//head/title' 'make_widget in foo::blah - Rust'\n+    pub fn make_widget() {}\n+\n+    // @has foo/macro.cool_macro.html '//head/title' 'cool_macro in foo - Rust'\n+    #[macro_export]\n+    macro_rules! cool_macro {\n+        ($t:tt) => { $t }\n+    }\n+}\n+\n+// @has foo/keyword.continue.html '//head/title' 'continue - Rust'\n+#[doc(keyword = \"continue\")]\n+mod continue_keyword {}\n+\n+// @has foo/primitive.u8.html '//head/title' 'u8 - Rust'\n+// @!has - '//head/title' 'foo'\n+#[doc(primitive = \"u8\")]\n+/// `u8` docs\n+mod u8 {}"}]}