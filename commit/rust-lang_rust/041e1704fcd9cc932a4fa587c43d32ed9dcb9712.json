{"sha": "041e1704fcd9cc932a4fa587c43d32ed9dcb9712", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MWUxNzA0ZmNkOWNjOTMyYTRmYTU4N2M0M2QzMmVkOWRjYjk3MTI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-12-29T15:47:13Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-04-02T02:41:38Z"}, "message": "use of wmemchr for faster searching in [u16]", "tree": {"sha": "5acad32e86a582f2e9a8d9f5259d30530a446910", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5acad32e86a582f2e9a8d9f5259d30530a446910"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041e1704fcd9cc932a4fa587c43d32ed9dcb9712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041e1704fcd9cc932a4fa587c43d32ed9dcb9712", "html_url": "https://github.com/rust-lang/rust/commit/041e1704fcd9cc932a4fa587c43d32ed9dcb9712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041e1704fcd9cc932a4fa587c43d32ed9dcb9712/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76b11980ad416c3ad6143504c2277757ecacf9b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/76b11980ad416c3ad6143504c2277757ecacf9b5", "html_url": "https://github.com/rust-lang/rust/commit/76b11980ad416c3ad6143504c2277757ecacf9b5"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "cb75e8122fdd5a3595b271c9cef9af399f6f9276", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/041e1704fcd9cc932a4fa587c43d32ed9dcb9712/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041e1704fcd9cc932a4fa587c43d32ed9dcb9712/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=041e1704fcd9cc932a4fa587c43d32ed9dcb9712", "patch": "@@ -81,10 +81,20 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n     }\n }\n \n+pub fn wmemchr(needle: u16, haystack: &[u16]) -> Option<usize> {\n+    extern \"C\" {\n+        fn wmemchr(s: *const u16, c: u16, n: usize) -> *mut u16;\n+    }\n+    let len = haystack.len();\n+    let ptr = haystack.as_ptr();\n+    let p = unsafe { wmemchr(ptr, needle, len) };\n+    if p.is_null() { None } else { Some((p as usize - ptr as usize) / 2) }\n+}\n+\n pub fn to_u16s<S: AsRef<OsStr>>(s: S) -> crate::io::Result<Vec<u16>> {\n     fn inner(s: &OsStr) -> crate::io::Result<Vec<u16>> {\n         let mut maybe_result: Vec<u16> = s.encode_wide().collect();\n-        if maybe_result.iter().any(|&u| u == 0) {\n+        if wmemchr(0, &maybe_result).is_some() {\n             return Err(crate::io::Error::new(\n                 ErrorKind::InvalidInput,\n                 \"strings passed to WinAPI cannot contain NULs\",\n@@ -214,7 +224,7 @@ fn wide_char_to_multi_byte(\n }\n \n pub fn truncate_utf16_at_nul(v: &[u16]) -> &[u16] {\n-    match v.iter().position(|c| *c == 0) {\n+    match wmemchr(0, v) {\n         // don't include the 0\n         Some(i) => &v[..i],\n         None => v,"}]}