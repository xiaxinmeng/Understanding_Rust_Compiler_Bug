{"sha": "e3de409aaa592a36548a9f453688c3e877b5caa1", "node_id": "C_kwDOAAsO6NoAKGUzZGU0MDlhYWE1OTJhMzY1NDhhOWY0NTM2ODhjM2U4NzdiNWNhYTE", "commit": {"author": {"name": "Alona Enraght-Moony", "email": "code@alona.page", "date": "2023-04-14T17:53:57Z"}, "committer": {"name": "Alona Enraght-Moony", "email": "code@alona.page", "date": "2023-04-14T18:19:49Z"}, "message": "Move test from rustdoc-ui to rustdoc-json", "tree": {"sha": "4c6760e6ce269a02d0af284376957a7190019b27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c6760e6ce269a02d0af284376957a7190019b27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3de409aaa592a36548a9f453688c3e877b5caa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3de409aaa592a36548a9f453688c3e877b5caa1", "html_url": "https://github.com/rust-lang/rust/commit/e3de409aaa592a36548a9f453688c3e877b5caa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3de409aaa592a36548a9f453688c3e877b5caa1/comments", "author": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aDotInTheVoid", "id": 28781354, "node_id": "MDQ6VXNlcjI4NzgxMzU0", "avatar_url": "https://avatars.githubusercontent.com/u/28781354?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aDotInTheVoid", "html_url": "https://github.com/aDotInTheVoid", "followers_url": "https://api.github.com/users/aDotInTheVoid/followers", "following_url": "https://api.github.com/users/aDotInTheVoid/following{/other_user}", "gists_url": "https://api.github.com/users/aDotInTheVoid/gists{/gist_id}", "starred_url": "https://api.github.com/users/aDotInTheVoid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aDotInTheVoid/subscriptions", "organizations_url": "https://api.github.com/users/aDotInTheVoid/orgs", "repos_url": "https://api.github.com/users/aDotInTheVoid/repos", "events_url": "https://api.github.com/users/aDotInTheVoid/events{/privacy}", "received_events_url": "https://api.github.com/users/aDotInTheVoid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e565f1a27a19f7da48c7109500b4351c0819e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e565f1a27a19f7da48c7109500b4351c0819e68", "html_url": "https://github.com/rust-lang/rust/commit/3e565f1a27a19f7da48c7109500b4351c0819e68"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "4fa26204be917d7d9505b2a5240e4ee254d02cbb", "filename": "tests/rustdoc-json/reexport/auxiliary/enum_with_discriminant.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fauxiliary%2Fenum_with_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fauxiliary%2Fenum_with_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Freexport%2Fauxiliary%2Fenum_with_discriminant.rs?ref=e3de409aaa592a36548a9f453688c3e877b5caa1", "patch": "@@ -0,0 +1,6 @@\n+//! Should not be inlined\n+\n+/// Should not be inlined\n+pub enum O {\n+    L = -1,\n+}"}, {"sha": "40b681d7dbbef8d4333becc97ed643df94b5d953", "filename": "tests/rustdoc-json/reexport/doc_inline_external_crate.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fdoc_inline_external_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fdoc_inline_external_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Freexport%2Fdoc_inline_external_crate.rs?ref=e3de409aaa592a36548a9f453688c3e877b5caa1", "patch": "@@ -0,0 +1,10 @@\n+// Regression Test for https://github.com/rust-lang/rust/issues/110138\n+// aux-build: enum_with_discriminant.rs\n+\n+#[doc(inline)]\n+pub extern crate enum_with_discriminant;\n+\n+// @!has '$.index[*][?(@.docs == \"Should not be inlined\")]'\n+// @is '$.index[*][?(@.name == \"enum_with_discriminant\")].kind' '\"extern_crate\"'\n+// @set enum_with_discriminant = '$.index[*][?(@.name == \"enum_with_discriminant\")].id'\n+// @is '$.index[*][?(@.name == \"doc_inline_external_crate\")].inner.items[*]' $enum_with_discriminant"}, {"sha": "8efb94fd3f17a57e2184d0cf290a52486a89f552", "filename": "tests/rustdoc-json/reexport/extern_crate_glob.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fextern_crate_glob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3de409aaa592a36548a9f453688c3e877b5caa1/tests%2Frustdoc-json%2Freexport%2Fextern_crate_glob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-json%2Freexport%2Fextern_crate_glob.rs?ref=e3de409aaa592a36548a9f453688c3e877b5caa1", "patch": "@@ -0,0 +1,10 @@\n+// aux-build: enum_with_discriminant.rs\n+\n+extern crate enum_with_discriminant;\n+\n+#[doc(inline)]\n+pub use enum_with_discriminant::*;\n+\n+// @!has '$.index[*][?(@.docs == \"Should not be inlined\")]'\n+// @set use = '$.index[*][?(@.inner.name == \"enum_with_discriminant\")].id'\n+// @is '$.index[*][?(@.name == \"extern_crate_glob\")].inner.items[*]' $use"}, {"sha": "6c48f5aa01f9860817968a996a199dd2ba10c208", "filename": "tests/rustdoc-ui/intra-doc/auxiliary/inner-crate-enum.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e565f1a27a19f7da48c7109500b4351c0819e68/tests%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Finner-crate-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e565f1a27a19f7da48c7109500b4351c0819e68/tests%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Finner-crate-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Fauxiliary%2Finner-crate-enum.rs?ref=3e565f1a27a19f7da48c7109500b4351c0819e68", "patch": "@@ -1,3 +0,0 @@\n-pub enum O {\n-    L = -1,\n-}"}, {"sha": "363dd7f64c22564c3e47e4d8535cba45b2adfb19", "filename": "tests/rustdoc-ui/intra-doc/inline-external-enum.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e565f1a27a19f7da48c7109500b4351c0819e68/tests%2Frustdoc-ui%2Fintra-doc%2Finline-external-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e565f1a27a19f7da48c7109500b4351c0819e68/tests%2Frustdoc-ui%2Fintra-doc%2Finline-external-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fintra-doc%2Finline-external-enum.rs?ref=3e565f1a27a19f7da48c7109500b4351c0819e68", "patch": "@@ -1,8 +0,0 @@\n-// check-pass\n-// aux-build: inner-crate-enum.rs\n-// compile-flags:-Z unstable-options --output-format json\n-\n-#[doc(inline)]\n-pub extern crate inner_crate_enum;\n-\n-fn main() {}"}]}