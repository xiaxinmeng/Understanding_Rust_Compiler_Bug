{"sha": "a1aa8212effd87cc04a912a23c46340c74070da9", "node_id": "C_kwDOAAsO6NoAKGExYWE4MjEyZWZmZDg3Y2MwNGE5MTJhMjNjNDYzNDBjNzQwNzBkYTk", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-11-27T15:18:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-11-27T15:18:00Z"}, "message": "minor: if-let-else to shorter match", "tree": {"sha": "7a4bc3227007fada2503ea48c0dea834270aef13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a4bc3227007fada2503ea48c0dea834270aef13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1aa8212effd87cc04a912a23c46340c74070da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1aa8212effd87cc04a912a23c46340c74070da9", "html_url": "https://github.com/rust-lang/rust/commit/a1aa8212effd87cc04a912a23c46340c74070da9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1aa8212effd87cc04a912a23c46340c74070da9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90c435519d7194008cdf2352fb923e1d0dc6f104", "url": "https://api.github.com/repos/rust-lang/rust/commits/90c435519d7194008cdf2352fb923e1d0dc6f104", "html_url": "https://github.com/rust-lang/rust/commit/90c435519d7194008cdf2352fb923e1d0dc6f104"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "db2398fbdee50856db5d72acb4ad2e28be8af6da", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a1aa8212effd87cc04a912a23c46340c74070da9/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1aa8212effd87cc04a912a23c46340c74070da9/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=a1aa8212effd87cc04a912a23c46340c74070da9", "patch": "@@ -105,15 +105,14 @@ pub struct ItemTree {\n impl ItemTree {\n     pub(crate) fn file_item_tree_query(db: &dyn DefDatabase, file_id: HirFileId) -> Arc<ItemTree> {\n         let _p = profile::span(\"item_tree_query\").detail(|| format!(\"{:?}\", file_id));\n-        let syntax = if let Some(node) = db.parse_or_expand(file_id) {\n-            if node.kind() == SyntaxKind::ERROR {\n-                // FIXME: not 100% sure why these crop up, but return an empty tree to avoid a panic\n-                return Default::default();\n-            }\n-            node\n-        } else {\n-            return Default::default();\n+        let syntax = match db.parse_or_expand(file_id) {\n+            Some(node) => node,\n+            None => return Default::default(),\n         };\n+        if syntax.kind() == SyntaxKind::ERROR {\n+            // FIXME: not 100% sure why these crop up, but return an empty tree to avoid a panic\n+            return Default::default();\n+        }\n \n         let hygiene = Hygiene::new(db.upcast(), file_id);\n         let ctx = lower::Ctx::new(db, hygiene.clone(), file_id);"}]}