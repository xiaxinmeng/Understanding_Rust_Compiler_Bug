{"sha": "ee8db50e13a73a26bc8c781518bd905dbfd83405", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlOGRiNTBlMTNhNzNhMjZiYzhjNzgxNTE4YmQ5MDVkYmZkODM0MDU=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-08-10T12:56:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-10T12:56:29Z"}, "message": "Rollup merge of #5871 - wiomoc:feature/methodcall-minmax, r=flip1995\n\nLint .min(x).max(y) with x < y\n\nFixes  #5854\n\nchangelog: Also lint `ord.min(a).max(b)`, where `a < b` in [`min_max`] lint", "tree": {"sha": "6a64d4babc06c52a1b83a7a787feafcd9850362f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a64d4babc06c52a1b83a7a787feafcd9850362f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee8db50e13a73a26bc8c781518bd905dbfd83405", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMUP9CRBK7hj4Ov3rIwAAdHIIAG7OtSR2NMxo1Ca8O4YZoY4X\n6UJGkS+iAr+X+W3jThPQmL2q7N3jkmQRRqVJgePF7uSMAIffdZSkZRbFLUvgqHGf\n/jpvpLZGkdk9hOOVyy76ctk3OTJGpQDEVraQ1ypzUVq5Q5m5ZBit8w4iQS39uLNV\nLotUtGJdp+xhWfhhtN0+ukRT7LnPB5cO4zgo9hQdnuK4NDIY9hK2y85GEyT/jud/\neMSztHLFkcqtTAtlCp2Hn9BnPuNrya1QaJwf223YcUMfkbw+sBmIv577e10hVT6Q\nvllU86HiVoqJnHu8B9nRnJbiLzdqHgMBKc3RVMFc2IPEwkbxPmnj6Peq4nN54Nc=\n=bRUJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a64d4babc06c52a1b83a7a787feafcd9850362f\nparent 08ab29bed13c2728b8f9d306af23ad5f10517843\nparent 87e740921abd4132152f090545fa4c9ed9fa0d6d\nauthor Philipp Krones <hello@philkrones.com> 1597064189 +0200\ncommitter GitHub <noreply@github.com> 1597064189 +0200\n\nRollup merge of #5871 - wiomoc:feature/methodcall-minmax, r=flip1995\n\nLint .min(x).max(y) with x < y\n\nFixes  #5854\n\nchangelog: Also lint `ord.min(a).max(b)`, where `a < b` in [`min_max`] lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee8db50e13a73a26bc8c781518bd905dbfd83405", "html_url": "https://github.com/rust-lang/rust/commit/ee8db50e13a73a26bc8c781518bd905dbfd83405", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee8db50e13a73a26bc8c781518bd905dbfd83405/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08ab29bed13c2728b8f9d306af23ad5f10517843", "url": "https://api.github.com/repos/rust-lang/rust/commits/08ab29bed13c2728b8f9d306af23ad5f10517843", "html_url": "https://github.com/rust-lang/rust/commit/08ab29bed13c2728b8f9d306af23ad5f10517843"}, {"sha": "87e740921abd4132152f090545fa4c9ed9fa0d6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/87e740921abd4132152f090545fa4c9ed9fa0d6d", "html_url": "https://github.com/rust-lang/rust/commit/87e740921abd4132152f090545fa4c9ed9fa0d6d"}], "stats": {"total": 139, "additions": 115, "deletions": 24}, "files": [{"sha": "004dd50a31be8716b7af5bc1727051261b2f2b84", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 39, "deletions": 16, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/ee8db50e13a73a26bc8c781518bd905dbfd83405/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8db50e13a73a26bc8c781518bd905dbfd83405/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=ee8db50e13a73a26bc8c781518bd905dbfd83405", "patch": "@@ -1,5 +1,6 @@\n use crate::consts::{constant_simple, Constant};\n-use crate::utils::{match_def_path, paths, span_lint};\n+use crate::utils::{match_def_path, match_trait_method, paths, span_lint};\n+use if_chain::if_chain;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -18,6 +19,10 @@ declare_clippy_lint! {\n     /// ```ignore\n     /// min(0, max(100, x))\n     /// ```\n+    /// or\n+    /// ```ignore\n+    /// x.max(100).min(0)\n+    /// ```\n     /// It will always be equal to `0`. Probably the author meant to clamp the value\n     /// between 0 and 100, but has erroneously swapped `min` and `max`.\n     pub MIN_MAX,\n@@ -60,25 +65,43 @@ enum MinMax {\n }\n \n fn min_max<'a>(cx: &LateContext<'_>, expr: &'a Expr<'a>) -> Option<(MinMax, Constant, &'a Expr<'a>)> {\n-    if let ExprKind::Call(ref path, ref args) = expr.kind {\n-        if let ExprKind::Path(ref qpath) = path.kind {\n-            cx.typeck_results()\n-                .qpath_res(qpath, path.hir_id)\n-                .opt_def_id()\n-                .and_then(|def_id| {\n-                    if match_def_path(cx, def_id, &paths::CMP_MIN) {\n-                        fetch_const(cx, args, MinMax::Min)\n-                    } else if match_def_path(cx, def_id, &paths::CMP_MAX) {\n+    match expr.kind {\n+        ExprKind::Call(ref path, ref args) => {\n+            if let ExprKind::Path(ref qpath) = path.kind {\n+                cx.typeck_results()\n+                    .qpath_res(qpath, path.hir_id)\n+                    .opt_def_id()\n+                    .and_then(|def_id| {\n+                        if match_def_path(cx, def_id, &paths::CMP_MIN) {\n+                            fetch_const(cx, args, MinMax::Min)\n+                        } else if match_def_path(cx, def_id, &paths::CMP_MAX) {\n+                            fetch_const(cx, args, MinMax::Max)\n+                        } else {\n+                            None\n+                        }\n+                    })\n+            } else {\n+                None\n+            }\n+        },\n+        ExprKind::MethodCall(ref path, _, ref args, _) => {\n+            if_chain! {\n+                if let [obj, _] = args;\n+                if cx.typeck_results().expr_ty(obj).is_floating_point() || match_trait_method(cx, expr, &paths::ORD);\n+                then {\n+                    if path.ident.as_str() == sym!(max).as_str() {\n                         fetch_const(cx, args, MinMax::Max)\n+                    } else if path.ident.as_str() == sym!(min).as_str() {\n+                        fetch_const(cx, args, MinMax::Min)\n                     } else {\n                         None\n                     }\n-                })\n-        } else {\n-            None\n-        }\n-    } else {\n-        None\n+                } else {\n+                    None\n+                }\n+            }\n+        },\n+        _ => None,\n     }\n }\n "}, {"sha": "f7ed72a11cf684b64f8d584cbaa990ae4aa0fa39", "filename": "tests/ui/min_max.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ee8db50e13a73a26bc8c781518bd905dbfd83405/tests%2Fui%2Fmin_max.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee8db50e13a73a26bc8c781518bd905dbfd83405/tests%2Fui%2Fmin_max.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.rs?ref=ee8db50e13a73a26bc8c781518bd905dbfd83405", "patch": "@@ -6,6 +6,18 @@ use std::cmp::{max, min};\n \n const LARGE: usize = 3;\n \n+struct NotOrd(u64);\n+\n+impl NotOrd {\n+    fn min(self, x: u64) -> NotOrd {\n+        NotOrd(x)\n+    }\n+\n+    fn max(self, x: u64) -> NotOrd {\n+        NotOrd(x)\n+    }\n+}\n+\n fn main() {\n     let x;\n     x = 2usize;\n@@ -30,4 +42,24 @@ fn main() {\n     max(min(s, \"Apple\"), \"Zoo\");\n \n     max(\"Apple\", min(s, \"Zoo\")); // ok\n+\n+    let f = 3f32;\n+    x.min(1).max(3);\n+    x.max(3).min(1);\n+    f.max(3f32).min(1f32);\n+\n+    x.max(1).min(3); // ok\n+    x.min(3).max(1); // ok\n+    f.min(3f32).max(1f32); // ok\n+\n+    max(x.min(1), 3);\n+    min(x.max(1), 3); // ok\n+\n+    s.max(\"Zoo\").min(\"Apple\");\n+    s.min(\"Apple\").max(\"Zoo\");\n+\n+    s.min(\"Zoo\").max(\"Apple\"); // ok\n+\n+    let not_ord = NotOrd(1);\n+    not_ord.min(1).max(3); // ok\n }"}, {"sha": "9f8e26fa406f0e59c7458ec5b54ca234386abf6d", "filename": "tests/ui/min_max.stderr", "status": "modified", "additions": 44, "deletions": 8, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/ee8db50e13a73a26bc8c781518bd905dbfd83405/tests%2Fui%2Fmin_max.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee8db50e13a73a26bc8c781518bd905dbfd83405/tests%2Fui%2Fmin_max.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_max.stderr?ref=ee8db50e13a73a26bc8c781518bd905dbfd83405", "patch": "@@ -1,46 +1,82 @@\n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:12:5\n+  --> $DIR/min_max.rs:24:5\n    |\n LL |     min(1, max(3, x));\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::min-max` implied by `-D warnings`\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:13:5\n+  --> $DIR/min_max.rs:25:5\n    |\n LL |     min(max(3, x), 1);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:14:5\n+  --> $DIR/min_max.rs:26:5\n    |\n LL |     max(min(x, 1), 3);\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:15:5\n+  --> $DIR/min_max.rs:27:5\n    |\n LL |     max(3, min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:17:5\n+  --> $DIR/min_max.rs:29:5\n    |\n LL |     my_max(3, my_min(x, 1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:29:5\n+  --> $DIR/min_max.rs:41:5\n    |\n LL |     min(\"Apple\", max(\"Zoo\", s));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this `min`/`max` combination leads to constant result\n-  --> $DIR/min_max.rs:30:5\n+  --> $DIR/min_max.rs:42:5\n    |\n LL |     max(min(s, \"Apple\"), \"Zoo\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 7 previous errors\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:47:5\n+   |\n+LL |     x.min(1).max(3);\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:48:5\n+   |\n+LL |     x.max(3).min(1);\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:49:5\n+   |\n+LL |     f.max(3f32).min(1f32);\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:55:5\n+   |\n+LL |     max(x.min(1), 3);\n+   |     ^^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:58:5\n+   |\n+LL |     s.max(\"Zoo\").min(\"Apple\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: this `min`/`max` combination leads to constant result\n+  --> $DIR/min_max.rs:59:5\n+   |\n+LL |     s.min(\"Apple\").max(\"Zoo\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 13 previous errors\n "}]}