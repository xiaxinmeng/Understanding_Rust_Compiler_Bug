{"sha": "40570eb49eb1cb688637cb58d14cdb9664ea1039", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTcwZWI0OWViMWNiNjg4NjM3Y2I1OGQxNGNkYjk2NjRlYTEwMzk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-11T19:24:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-12T21:50:36Z"}, "message": "rustc_llvm: Expose setting more DLL storage classes\n\nCurrently only `dllexport` is used, but more integration will require using\n`dllimport` as well.", "tree": {"sha": "e6755cd317253b12111fc986af70ed6cbebb0a15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6755cd317253b12111fc986af70ed6cbebb0a15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40570eb49eb1cb688637cb58d14cdb9664ea1039", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40570eb49eb1cb688637cb58d14cdb9664ea1039", "html_url": "https://github.com/rust-lang/rust/commit/40570eb49eb1cb688637cb58d14cdb9664ea1039", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40570eb49eb1cb688637cb58d14cdb9664ea1039/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d5e5777fd94fcad0bf259e31982477e42bd5bf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d5e5777fd94fcad0bf259e31982477e42bd5bf8", "html_url": "https://github.com/rust-lang/rust/commit/2d5e5777fd94fcad0bf259e31982477e42bd5bf8"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "54031e4b04d25f350854e1e83aa378cfa1d5cfd7", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/40570eb49eb1cb688637cb58d14cdb9664ea1039/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40570eb49eb1cb688637cb58d14cdb9664ea1039/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=40570eb49eb1cb688637cb58d14cdb9664ea1039", "patch": "@@ -55,6 +55,7 @@ pub use self::CallConv::*;\n pub use self::Visibility::*;\n pub use self::DiagnosticSeverity::*;\n pub use self::Linkage::*;\n+pub use self::DLLStorageClassTypes::*;\n \n use std::ffi::CString;\n use std::cell::RefCell;\n@@ -123,6 +124,15 @@ pub enum DiagnosticSeverity {\n     Note,\n }\n \n+\n+#[repr(C)]\n+#[derive(Copy, Clone)]\n+pub enum DLLStorageClassTypes {\n+    DefaultStorageClass = 0,\n+    DLLImportStorageClass = 1,\n+    DLLExportStorageClass = 2,\n+}\n+\n bitflags! {\n     flags Attribute : u32 {\n         const ZExt            = 1 << 0,\n@@ -2075,7 +2085,8 @@ extern {\n     pub fn LLVMRustArchiveIteratorFree(AIR: ArchiveIteratorRef);\n     pub fn LLVMRustDestroyArchive(AR: ArchiveRef);\n \n-    pub fn LLVMRustSetDLLExportStorageClass(V: ValueRef);\n+    pub fn LLVMRustSetDLLStorageClass(V: ValueRef,\n+                                      C: DLLStorageClassTypes);\n \n     pub fn LLVMRustGetSectionName(SI: SectionIteratorRef,\n                                   data: *mut *const c_char) -> c_int;\n@@ -2125,6 +2136,12 @@ pub fn SetLinkage(global: ValueRef, link: Linkage) {\n     }\n }\n \n+pub fn SetDLLStorageClass(global: ValueRef, class: DLLStorageClassTypes) {\n+    unsafe {\n+        LLVMRustSetDLLStorageClass(global, class);\n+    }\n+}\n+\n pub fn SetUnnamedAddr(global: ValueRef, unnamed: bool) {\n     unsafe {\n         LLVMSetUnnamedAddr(global, unnamed as Bool);"}, {"sha": "5a2d1ec42071fd0f9812fe10abbe14011434430d", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/40570eb49eb1cb688637cb58d14cdb9664ea1039/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/40570eb49eb1cb688637cb58d14cdb9664ea1039/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=40570eb49eb1cb688637cb58d14cdb9664ea1039", "patch": "@@ -837,9 +837,10 @@ LLVMRustArchiveChildData(Archive::Child *child, size_t *size) {\n }\n \n extern \"C\" void\n-LLVMRustSetDLLExportStorageClass(LLVMValueRef Value) {\n+LLVMRustSetDLLStorageClass(LLVMValueRef Value,\n+                           GlobalValue::DLLStorageClassTypes Class) {\n     GlobalValue *V = unwrap<GlobalValue>(Value);\n-    V->setDLLStorageClass(GlobalValue::DLLExportStorageClass);\n+    V->setDLLStorageClass(Class);\n }\n \n // Note that the two following functions look quite similar to the"}]}