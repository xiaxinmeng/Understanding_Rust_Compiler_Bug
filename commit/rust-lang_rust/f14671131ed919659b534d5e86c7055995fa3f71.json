{"sha": "f14671131ed919659b534d5e86c7055995fa3f71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNDY3MTEzMWVkOTE5NjU5YjUzNGQ1ZTg2YzcwNTU5OTVmYTNmNzE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-09T04:47:55Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2018-04-09T04:47:55Z"}, "message": "Make `error_on_line_overflow` false by default\n\nAnd improve docs, the error message, etc.\n\nI think false is the better default since such errors should only occur due to a bug in Rustfmt and therefore most users should not be notified of it happening (although to be clear, it might be a 'bug' which only occurs with pathological input and therefore we won't fix it). The error has proven to be confusing and annoying in the past.\n\nCloses #1080", "tree": {"sha": "5cedb09f36383d79841fee840e49f6e001a9788e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5cedb09f36383d79841fee840e49f6e001a9788e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14671131ed919659b534d5e86c7055995fa3f71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14671131ed919659b534d5e86c7055995fa3f71", "html_url": "https://github.com/rust-lang/rust/commit/f14671131ed919659b534d5e86c7055995fa3f71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14671131ed919659b534d5e86c7055995fa3f71/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48e5bc198829e23ef85a87f4ef2cb5c7fdf353f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/48e5bc198829e23ef85a87f4ef2cb5c7fdf353f9", "html_url": "https://github.com/rust-lang/rust/commit/48e5bc198829e23ef85a87f4ef2cb5c7fdf353f9"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "ca804b2f7f2581b53966488df1b1edb0989a4753", "filename": "Configurations.md", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f14671131ed919659b534d5e86c7055995fa3f71/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/f14671131ed919659b534d5e86c7055995fa3f71/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=f14671131ed919659b534d5e86c7055995fa3f71", "patch": "@@ -579,9 +579,12 @@ Don't reformat anything\n \n ## `error_on_line_overflow`\n \n-Error if unable to get all lines within `max_width`, except for comments and string literals.\n+Error if Rustfmt is unable to get all lines within `max_width`, except for comments and string\n+literals. If this happens, then it is a bug in Rustfmt. You might be able to work around the bug by\n+refactoring your code to avoid long/complex expressions, usually by extracting a local variable or\n+using a shorter name.\n \n-- **Default value**: `true`\n+- **Default value**: `false`\n - **Possible values**: `true`, `false`\n - **Stable**: No\n "}, {"sha": "7b96c2f671e1cfd9b36e65ed52a0ced64a9e96a9", "filename": "src/config/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f14671131ed919659b534d5e86c7055995fa3f71/src%2Fconfig%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14671131ed919659b534d5e86c7055995fa3f71/src%2Fconfig%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Fmod.rs?ref=f14671131ed919659b534d5e86c7055995fa3f71", "patch": "@@ -134,7 +134,7 @@ create_config! {\n     disable_all_formatting: bool, false, false, \"Don't reformat anything\";\n     skip_children: bool, false, false, \"Don't reformat out of line modules\";\n     hide_parse_errors: bool, false, false, \"Hide errors from the parser\";\n-    error_on_line_overflow: bool, true, false, \"Error if unable to get all lines within max_width\";\n+    error_on_line_overflow: bool, false, false, \"Error if unable to get all lines within max_width\";\n     error_on_unformatted: bool, false, false,\n         \"Error if unable to get comments or string literals within max_width, \\\n          or they are left with trailing whitespaces\";"}, {"sha": "9a7d0d2f8817bf174d9cd6ef92be540d8bd6c81e", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f14671131ed919659b534d5e86c7055995fa3f71/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14671131ed919659b534d5e86c7055995fa3f71/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=f14671131ed919659b534d5e86c7055995fa3f71", "patch": "@@ -101,7 +101,7 @@ pub enum ErrorKind {\n     LineOverflow(usize, usize),\n     // Line ends in whitespace\n     TrailingWhitespace,\n-    // TO-DO or FIX-ME item without an issue number\n+    // TODO or FIXME item without an issue number\n     BadIssue(Issue),\n     // License check has failed\n     LicenseCheck,\n@@ -112,8 +112,8 @@ impl fmt::Display for ErrorKind {\n         match *self {\n             ErrorKind::LineOverflow(found, maximum) => write!(\n                 fmt,\n-                \"line exceeded maximum width (maximum: {}, found: {})\",\n-                maximum, found\n+                \"line formatted, but exceeded maximum width (maximum: {} (see `max_width` option), found: {})\",\n+                maximum, found,\n             ),\n             ErrorKind::TrailingWhitespace => write!(fmt, \"left behind trailing whitespace\"),\n             ErrorKind::BadIssue(issue) => write!(fmt, \"found {}\", issue),\n@@ -134,10 +134,9 @@ pub struct FormattingError {\n impl FormattingError {\n     fn msg_prefix(&self) -> &str {\n         match self.kind {\n-            ErrorKind::LineOverflow(..)\n-            | ErrorKind::TrailingWhitespace\n-            | ErrorKind::LicenseCheck => \"error:\",\n-            ErrorKind::BadIssue(_) => \"WARNING:\",\n+            ErrorKind::LineOverflow(..) | ErrorKind::TrailingWhitespace => \"internal error:\",\n+            ErrorKind::LicenseCheck => \"error:\",\n+            ErrorKind::BadIssue(_) => \"warning:\",\n         }\n     }\n "}, {"sha": "3e388af0022425f14d36656dc07dac6269fe0ea8", "filename": "tests/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f14671131ed919659b534d5e86c7055995fa3f71/tests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14671131ed919659b534d5e86c7055995fa3f71/tests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Flib.rs?ref=f14671131ed919659b534d5e86c7055995fa3f71", "patch": "@@ -283,7 +283,8 @@ fn stdin_formatting_smoke_test() {\n fn format_lines_errors_are_reported() {\n     let long_identifier = String::from_utf8(vec![b'a'; 239]).unwrap();\n     let input = Input::Text(format!(\"fn {}() {{}}\", long_identifier));\n-    let config = Config::default();\n+    let mut config = Config::default();\n+    config.set().error_on_line_overflow(true);\n     let (error_summary, _file_map, _report) =\n         format_input::<io::Stdout>(input, &config, None).unwrap();\n     assert!(error_summary.has_formatting_errors());\n@@ -293,7 +294,9 @@ fn format_lines_errors_are_reported() {\n fn format_lines_errors_are_reported_with_tabs() {\n     let long_identifier = String::from_utf8(vec![b'a'; 97]).unwrap();\n     let input = Input::Text(format!(\"fn a() {{\\n\\t{}\\n}}\", long_identifier));\n-    let config = Config::from_toml(\"hard_tabs = true\", Path::new(\"\")).unwrap();\n+    let mut config = Config::default();\n+    config.set().error_on_line_overflow(true);\n+    config.set().hard_tabs(true);\n     let (error_summary, _file_map, _report) =\n         format_input::<io::Stdout>(input, &config, None).unwrap();\n     assert!(error_summary.has_formatting_errors());"}]}