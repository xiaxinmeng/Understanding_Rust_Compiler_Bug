{"sha": "7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYWI4MTNhZDkxZWM3YjIwMTZhZTNjMGU2ZmM4MDRiZWNiMmQ2MjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T15:19:58Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T15:19:58Z"}, "message": "Only methods are fn-like, not other associated items", "tree": {"sha": "30e98da6f01059ce72e555df6d557ccc0fed7634", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30e98da6f01059ce72e555df6d557ccc0fed7634"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "html_url": "https://github.com/rust-lang/rust/commit/7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cab813ad91ec7b2016ae3c0e6fc804becb2d623/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bea4d1fc66b0ab1406c4c0e184af761485a3c6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bea4d1fc66b0ab1406c4c0e184af761485a3c6a", "html_url": "https://github.com/rust-lang/rust/commit/3bea4d1fc66b0ab1406c4c0e184af761485a3c6a"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "f2f7f95426ab827e977cab992111d409df00bfa5", "filename": "src/librustc/hir/map/blocks.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7cab813ad91ec7b2016ae3c0e6fc804becb2d623/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cab813ad91ec7b2016ae3c0e6fc804becb2d623/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "patch": "@@ -51,6 +51,12 @@ impl MaybeFnLike for ast::Item {\n     }\n }\n \n+impl MaybeFnLike for ast::ImplItem {\n+    fn is_fn_like(&self) -> bool {\n+        match self.node { ast::ImplItemKind::Method(..) => true, _ => false, }\n+    }\n+}\n+\n impl MaybeFnLike for ast::TraitItem {\n     fn is_fn_like(&self) -> bool {\n         match self.node {\n@@ -141,7 +147,7 @@ impl<'a> FnLikeNode<'a> {\n         let fn_like = match node {\n             map::NodeItem(item) => item.is_fn_like(),\n             map::NodeTraitItem(tm) => tm.is_fn_like(),\n-            map::NodeImplItem(_) => true,\n+            map::NodeImplItem(it) => it.is_fn_like(),\n             map::NodeExpr(e) => e.is_fn_like(),\n             _ => false\n         };"}]}