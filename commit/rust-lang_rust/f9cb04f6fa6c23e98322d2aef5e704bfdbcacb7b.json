{"sha": "f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5Y2IwNGY2ZmE2YzIzZTk4MzIyZDJhZWY1ZTcwNGJmZGJjYWNiN2I=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-07T02:15:15Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-07T02:30:50Z"}, "message": "vim: hilight option, either, libc types+constants", "tree": {"sha": "598073e8bb1a58c2aa2e68e40e42b44d1286f20b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/598073e8bb1a58c2aa2e68e40e42b44d1286f20b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b", "html_url": "https://github.com/rust-lang/rust/commit/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5b8f5efccc3f39be807dd2e060e913ff263b73d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5b8f5efccc3f39be807dd2e060e913ff263b73d", "html_url": "https://github.com/rust-lang/rust/commit/b5b8f5efccc3f39be807dd2e060e913ff263b73d"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "02cdae07c04c7b61290b17667b5e194f416158c7", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=f9cb04f6fa6c23e98322d2aef5e704bfdbcacb7b", "patch": "@@ -1,7 +1,8 @@\n \" Vim syntax file\n \" Language:     Rust\n \" Maintainer:   Patrick Walton <pcwalton@mozilla.com>\n-\" Last Change:  2010 Oct 13\n+\" Maintainer:   Ben Blum <bblum@mozilla.com>\n+\" Last Change:  2012 Jul 06\n \n if version < 600\n   syntax clear\n@@ -12,8 +13,8 @@ endif\n syn keyword   rustAssert      assert\n syn match     rustAssert      \"assert\\(\\w\\)*\"\n syn keyword   rustKeyword     alt as break\n-syn keyword   rustKeyword     check claim cont const copy else export extern fail\n-syn keyword   rustKeyword     do drop for if impl import in let log\n+syn keyword   rustKeyword     check claim cont const copy do drop else export extern fail\n+syn keyword   rustKeyword     for if impl import in let log\n syn keyword   rustKeyword     loop mod mut new of pure\n syn keyword   rustKeyword     ret self to unchecked\n syn match     rustKeyword     \"unsafe\" \" Allows also matching unsafe::foo()\n@@ -30,16 +31,36 @@ syn keyword   rustKeyword     m32 m64 m128 f80 f16 f128\n \n syn keyword   rustType        any int uint float char bool u8 u16 u32 u64 f32\n syn keyword   rustType        f64 i8 i16 i32 i64 str\n+syn keyword   rustType        option either\n+\n+\" Types from libc\n+syn keyword   rustType        c_float c_double c_void FILE fpos_t\n+syn keyword   rustType        DIR dirent\n+syn keyword   rustType        c_char c_schar c_uchar\n+syn keyword   rustType        c_short c_ushort c_int c_uint c_long c_ulong\n+syn keyword   rustType        size_t ptrdiff_t clock_t time_t\n+syn keyword   rustType        c_longlong c_ulonglong intptr_t uintptr_t\n+syn keyword   rustType        off_t dev_t ino_t pid_t mode_t ssize_t\n \n syn keyword   rustBoolean     true false\n \n syn keyword   rustConstant    some none       \" option\n syn keyword   rustConstant    left right      \" either\n syn keyword   rustConstant    ok err          \" result\n syn keyword   rustConstant    success failure \" task\n-\" syn keyword   rustConstant    cons nil        \" list\n+syn keyword   rustConstant    cons nil        \" list\n \" syn keyword   rustConstant    empty node      \" tree\n \n+\" Constants from libc\n+syn keyword   rustConstant    EXIT_FAILURE EXIT_SUCCESS RAND_MAX\n+syn keyword   rustConstant    EOF SEEK_SET SEEK_CUR SEEK_END _IOFBF _IONBF\n+syn keyword   rustConstant    _IOLBF BUFSIZ FOPEN_MAX FILENAME_MAX L_tmpnam\n+syn keyword   rustConstant    TMP_MAX O_RDONLY O_WRONLY O_RDWR O_APPEND O_CREAT\n+syn keyword   rustConstant    O_EXCL O_TRUNC S_IFIFO S_IFCHR S_IFBLK S_IFDIR\n+syn keyword   rustConstant    S_IFREG S_IFMT S_IEXEC S_IWRITE S_IREAD S_IRWXU\n+syn keyword   rustConstant    S_IXUSR S_IWUSR S_IRUSR F_OK R_OK W_OK X_OK\n+syn keyword   rustConstant    STDIN_FILENO STDOUT_FILENO STDERR_FILENO\n+\n \" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n \" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n syn match     rustModPath     \"\\w\\(\\w\\)*::[^<]\"he=e-3,me=e-3"}]}