{"sha": "261d325e15ed04a052fdf71df717774817aee597", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2MWQzMjVlMTVlZDA0YTA1MmZkZjcxZGY3MTc3NzQ4MTdhZWU1OTc=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T11:54:55Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-27T11:54:55Z"}, "message": "Remove width of a trailing comma on variant", "tree": {"sha": "13df97ba66ca66e8f41180528201ca29c9f55816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13df97ba66ca66e8f41180528201ca29c9f55816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/261d325e15ed04a052fdf71df717774817aee597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/261d325e15ed04a052fdf71df717774817aee597", "html_url": "https://github.com/rust-lang/rust/commit/261d325e15ed04a052fdf71df717774817aee597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/261d325e15ed04a052fdf71df717774817aee597/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d7d978fe86eb2b9a1528879613b41ca6b431884", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d7d978fe86eb2b9a1528879613b41ca6b431884", "html_url": "https://github.com/rust-lang/rust/commit/3d7d978fe86eb2b9a1528879613b41ca6b431884"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "24c7625df506ba28c0c32828039db00ed9ab8a65", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/261d325e15ed04a052fdf71df717774817aee597/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/261d325e15ed04a052fdf71df717774817aee597/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=261d325e15ed04a052fdf71df717774817aee597", "patch": "@@ -534,7 +534,8 @@ impl<'a> FmtVisitor<'a> {\n \n         let context = self.get_context();\n         let indent = self.block_indent;\n-        let shape = self.shape();\n+        // 1 = ','\n+        let shape = self.shape().sub_width(1)?;\n         let attrs_str = field.node.attrs.rewrite(&context, shape)?;\n         let lo = field\n             .node\n@@ -555,8 +556,7 @@ impl<'a> FmtVisitor<'a> {\n             }\n             ast::VariantData::Unit(..) => if let Some(ref expr) = field.node.disr_expr {\n                 let lhs = format!(\"{} =\", field.node.name);\n-                // 1 = ','\n-                rewrite_assign_rhs(&context, lhs, &**expr, shape.sub_width(1)?)?\n+                rewrite_assign_rhs(&context, lhs, &**expr, shape)?\n             } else {\n                 field.node.name.to_string()\n             },\n@@ -1312,7 +1312,7 @@ fn format_tuple_struct(\n         }\n         result.push(')');\n     } else {\n-        let shape = Shape::indented(offset, context.config);\n+        let shape = Shape::indented(offset, context.config).sub_width(1)?;\n         let fields = &fields.iter().map(|field| field).collect::<Vec<_>>()[..];\n         let one_line_width = context.config.width_heuristics().fn_call_width;\n         result = rewrite_call_inner(context, &result, fields, span, shape, one_line_width, false)?;"}]}