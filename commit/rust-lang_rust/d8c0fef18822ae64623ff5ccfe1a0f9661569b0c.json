{"sha": "d8c0fef18822ae64623ff5ccfe1a0f9661569b0c", "node_id": "C_kwDOAAsO6NoAKGQ4YzBmZWYxODgyMmFlNjQ2MjNmZjVjY2ZlMWEwZjk2NjE1NjliMGM", "commit": {"author": {"name": "Elarcis", "email": "Elarcis@users.noreply.github.com", "date": "2022-11-12T18:22:28Z"}, "committer": {"name": "Elarcis", "email": "Elarcis@users.noreply.github.com", "date": "2022-11-12T18:22:28Z"}, "message": "Fixed some `_i32` notation in `maybe_uninit`\u2019s doc", "tree": {"sha": "8c7aea886ff69ad04628c8265deca37b608d446b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7aea886ff69ad04628c8265deca37b608d446b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c", "html_url": "https://github.com/rust-lang/rust/commit/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c/comments", "author": {"login": "Elarcis", "id": 990841, "node_id": "MDQ6VXNlcjk5MDg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/990841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elarcis", "html_url": "https://github.com/Elarcis", "followers_url": "https://api.github.com/users/Elarcis/followers", "following_url": "https://api.github.com/users/Elarcis/following{/other_user}", "gists_url": "https://api.github.com/users/Elarcis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elarcis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elarcis/subscriptions", "organizations_url": "https://api.github.com/users/Elarcis/orgs", "repos_url": "https://api.github.com/users/Elarcis/repos", "events_url": "https://api.github.com/users/Elarcis/events{/privacy}", "received_events_url": "https://api.github.com/users/Elarcis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Elarcis", "id": 990841, "node_id": "MDQ6VXNlcjk5MDg0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/990841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Elarcis", "html_url": "https://github.com/Elarcis", "followers_url": "https://api.github.com/users/Elarcis/followers", "following_url": "https://api.github.com/users/Elarcis/following{/other_user}", "gists_url": "https://api.github.com/users/Elarcis/gists{/gist_id}", "starred_url": "https://api.github.com/users/Elarcis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Elarcis/subscriptions", "organizations_url": "https://api.github.com/users/Elarcis/orgs", "repos_url": "https://api.github.com/users/Elarcis/repos", "events_url": "https://api.github.com/users/Elarcis/events{/privacy}", "received_events_url": "https://api.github.com/users/Elarcis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ef2485bd59cad3674b9c7de29316c20d7ddc6e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ef2485bd59cad3674b9c7de29316c20d7ddc6e7", "html_url": "https://github.com/rust-lang/rust/commit/8ef2485bd59cad3674b9c7de29316c20d7ddc6e7"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3f491836551dc25e07cc4cd15a15402001b69506", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8c0fef18822ae64623ff5ccfe1a0f9661569b0c/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=d8c0fef18822ae64623ff5ccfe1a0f9661569b0c", "patch": "@@ -1172,7 +1172,7 @@ impl<T> MaybeUninit<T> {\n     /// #![feature(maybe_uninit_as_bytes, maybe_uninit_slice)]\n     /// use std::mem::MaybeUninit;\n     ///\n-    /// let val = 0x12345678i32;\n+    /// let val = 0x12345678_i32;\n     /// let uninit = MaybeUninit::new(val);\n     /// let uninit_bytes = uninit.as_bytes();\n     /// let bytes = unsafe { MaybeUninit::slice_assume_init_ref(uninit_bytes) };\n@@ -1198,7 +1198,7 @@ impl<T> MaybeUninit<T> {\n     /// #![feature(maybe_uninit_as_bytes)]\n     /// use std::mem::MaybeUninit;\n     ///\n-    /// let val = 0x12345678i32;\n+    /// let val = 0x12345678_i32;\n     /// let mut uninit = MaybeUninit::new(val);\n     /// let uninit_bytes = uninit.as_bytes_mut();\n     /// if cfg!(target_endian = \"little\") {"}]}