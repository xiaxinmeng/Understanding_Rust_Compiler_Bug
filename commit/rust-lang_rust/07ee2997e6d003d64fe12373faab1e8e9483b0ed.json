{"sha": "07ee2997e6d003d64fe12373faab1e8e9483b0ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZWUyOTk3ZTZkMDAzZDY0ZmUxMjM3M2ZhYWIxZThlOTQ4M2IwZWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-03T19:33:51Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-03T19:33:51Z"}, "message": "libstd: Make net_url::encode no longer require a unique string", "tree": {"sha": "a7884dd032bcb2165343ad8a13822675be901c6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7884dd032bcb2165343ad8a13822675be901c6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07ee2997e6d003d64fe12373faab1e8e9483b0ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07ee2997e6d003d64fe12373faab1e8e9483b0ed", "html_url": "https://github.com/rust-lang/rust/commit/07ee2997e6d003d64fe12373faab1e8e9483b0ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07ee2997e6d003d64fe12373faab1e8e9483b0ed/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f8cf9dc18f30456178ae529afca1c962257dc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f8cf9dc18f30456178ae529afca1c962257dc0", "html_url": "https://github.com/rust-lang/rust/commit/c2f8cf9dc18f30456178ae529afca1c962257dc0"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "b3ec184229bd7ebbad36955970c79818596db35e", "filename": "src/libstd/net_url.rs", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/07ee2997e6d003d64fe12373faab1e8e9483b0ed/src%2Flibstd%2Fnet_url.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee2997e6d003d64fe12373faab1e8e9483b0ed/src%2Flibstd%2Fnet_url.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_url.rs?ref=07ee2997e6d003d64fe12373faab1e8e9483b0ed", "patch": "@@ -42,7 +42,7 @@ fn userinfo(-user: ~str, -pass: Option<~str>) -> UserInfo {\n     {user: user, pass: pass}\n }\n \n-fn encode_inner(s: ~str, full_url: bool) -> ~str {\n+fn encode_inner(s: &str, full_url: bool) -> ~str {\n     do io::with_str_reader(s) |rdr| {\n         let mut out = ~\"\";\n \n@@ -87,7 +87,7 @@ fn encode_inner(s: ~str, full_url: bool) -> ~str {\n  *\n  * This function is compliant with RFC 3986.\n  */\n-fn encode(s: ~str) -> ~str {\n+fn encode(s: &str) -> ~str {\n     encode_inner(s, true)\n }\n \n@@ -97,7 +97,7 @@ fn encode(s: ~str) -> ~str {\n  *\n  * This function is compliant with RFC 3986.\n  */\n-fn encode_component(s: ~str) -> ~str {\n+fn encode_component(s: &str) -> ~str {\n     encode_inner(s, false)\n }\n \n@@ -917,30 +917,30 @@ mod tests {\n \n     #[test]\n     fn test_encode() {\n-        assert encode(~\"\") == ~\"\";\n-        assert encode(~\"http://example.com\") == ~\"http://example.com\";\n-        assert encode(~\"foo bar% baz\") == ~\"foo%20bar%25%20baz\";\n-        assert encode(~\" \") == ~\"%20\";\n-        assert encode(~\"!\") == ~\"!\";\n-        assert encode(~\"\\\"\") == ~\"\\\"\";\n-        assert encode(~\"#\") == ~\"#\";\n-        assert encode(~\"$\") == ~\"$\";\n-        assert encode(~\"%\") == ~\"%25\";\n-        assert encode(~\"&\") == ~\"&\";\n-        assert encode(~\"'\") == ~\"%27\";\n-        assert encode(~\"(\") == ~\"(\";\n-        assert encode(~\")\") == ~\")\";\n-        assert encode(~\"*\") == ~\"*\";\n-        assert encode(~\"+\") == ~\"+\";\n-        assert encode(~\",\") == ~\",\";\n-        assert encode(~\"/\") == ~\"/\";\n-        assert encode(~\":\") == ~\":\";\n-        assert encode(~\";\") == ~\";\";\n-        assert encode(~\"=\") == ~\"=\";\n-        assert encode(~\"?\") == ~\"?\";\n-        assert encode(~\"@\") == ~\"@\";\n-        assert encode(~\"[\") == ~\"[\";\n-        assert encode(~\"]\") == ~\"]\";\n+        assert encode(\"\") == ~\"\";\n+        assert encode(\"http://example.com\") == ~\"http://example.com\";\n+        assert encode(\"foo bar% baz\") == ~\"foo%20bar%25%20baz\";\n+        assert encode(\" \") == ~\"%20\";\n+        assert encode(\"!\") == ~\"!\";\n+        assert encode(\"\\\"\") == ~\"\\\"\";\n+        assert encode(\"#\") == ~\"#\";\n+        assert encode(\"$\") == ~\"$\";\n+        assert encode(\"%\") == ~\"%25\";\n+        assert encode(\"&\") == ~\"&\";\n+        assert encode(\"'\") == ~\"%27\";\n+        assert encode(\"(\") == ~\"(\";\n+        assert encode(\")\") == ~\")\";\n+        assert encode(\"*\") == ~\"*\";\n+        assert encode(\"+\") == ~\"+\";\n+        assert encode(\",\") == ~\",\";\n+        assert encode(\"/\") == ~\"/\";\n+        assert encode(\":\") == ~\":\";\n+        assert encode(\";\") == ~\";\";\n+        assert encode(\"=\") == ~\"=\";\n+        assert encode(\"?\") == ~\"?\";\n+        assert encode(\"@\") == ~\"@\";\n+        assert encode(\"[\") == ~\"[\";\n+        assert encode(\"]\") == ~\"]\";\n     }\n \n     #[test]"}]}