{"sha": "6ad9f5631623060a9f34f40f2c614cfd8b967c08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZDlmNTYzMTYyMzA2MGE5ZjM0ZjQwZjJjNjE0Y2ZkOGI5NjdjMDg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-11-05T13:37:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-05T13:37:01Z"}, "message": "Rollup merge of #66025 - petrochenkov:lohi, r=eddyb\n\n`Span` cannot represent `span.hi < span.lo`\n\nSo we can remove the corresponding checks from various code", "tree": {"sha": "c37977c330c216614755b7eda95d5607ff2a641d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37977c330c216614755b7eda95d5607ff2a641d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad9f5631623060a9f34f40f2c614cfd8b967c08", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwXr9CRBK7hj4Ov3rIwAAdHIIAAu4SU0RRtwX20ui/zEVGY6c\ntZUgT6eQFg7oEgfPKsOY+0+4+JYNCC6Jpo6w5GR9FFkVDdBc4gaSk4eGNlJqMKhD\nklmLswmnMoyor87rtRG4s+S8sYBfeYvxcGT5l63SWxRY0Zw3n3eQQg7PJwSINBY2\nkrrLNvOTNJa3xbYc2ko/uuCCJWv90ieLiXcG1Q6W0F79ULMiJHtCARkegGs3DWm4\nsqpUdp+W1tjdLtoMlVBeO4PPlmI6+P2DO+S6cUZ9szLF43+Y6bxgFkD1OmDtUho7\ngod+jGkBkGVqE2QnEtN4ZZgd7qzu7Rxe2+lbUo3HS0MEG4o2hbF+vzDYY2bYUkw=\n=nLT2\n-----END PGP SIGNATURE-----\n", "payload": "tree c37977c330c216614755b7eda95d5607ff2a641d\nparent b5bcb28b72097c5633922b437f9eca57d6791c95\nparent ecaa96418bfff378a229ebf79d14f9e3c312cf78\nauthor Pietro Albini <pietro@pietroalbini.org> 1572961021 +0100\ncommitter GitHub <noreply@github.com> 1572961021 +0100\n\nRollup merge of #66025 - petrochenkov:lohi, r=eddyb\n\n`Span` cannot represent `span.hi < span.lo`\n\nSo we can remove the corresponding checks from various code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad9f5631623060a9f34f40f2c614cfd8b967c08", "html_url": "https://github.com/rust-lang/rust/commit/6ad9f5631623060a9f34f40f2c614cfd8b967c08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad9f5631623060a9f34f40f2c614cfd8b967c08/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5bcb28b72097c5633922b437f9eca57d6791c95", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5bcb28b72097c5633922b437f9eca57d6791c95", "html_url": "https://github.com/rust-lang/rust/commit/b5bcb28b72097c5633922b437f9eca57d6791c95"}, {"sha": "ecaa96418bfff378a229ebf79d14f9e3c312cf78", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecaa96418bfff378a229ebf79d14f9e3c312cf78", "html_url": "https://github.com/rust-lang/rust/commit/ecaa96418bfff378a229ebf79d14f9e3c312cf78"}], "stats": {"total": 31, "additions": 6, "deletions": 25}, "files": [{"sha": "a5b131520c243a7d5250b7eff65cdc95cbc742d2", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=6ad9f5631623060a9f34f40f2c614cfd8b967c08", "patch": "@@ -309,11 +309,6 @@ impl<'a> HashStable<StableHashingContext<'a>> for Span {\n         // position that belongs to it, as opposed to hashing the first\n         // position past it.\n         let span = self.data();\n-\n-        if span.hi < span.lo {\n-            return std_hash::Hash::hash(&TAG_INVALID_SPAN, hasher);\n-        }\n-\n         let (file_lo, line_lo, col_lo) = match hcx.source_map()\n                                                   .byte_pos_to_line_and_col(span.lo) {\n             Some(pos) => pos,"}, {"sha": "4dabea01c9e46f96591eb2c68d0235d5e7dc5fe5", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=6ad9f5631623060a9f34f40f2c614cfd8b967c08", "patch": "@@ -796,11 +796,6 @@ where\n         }\n \n         let span_data = span.data();\n-\n-        if span_data.hi < span_data.lo {\n-            return TAG_INVALID_SPAN.encode(self);\n-        }\n-\n         let (file_lo, line_lo, col_lo) = match self.source_map\n                                                    .byte_pos_to_line_and_col(span_data.lo) {\n             Some(pos) => pos,"}, {"sha": "e2a7ea28b9b59c69aec64b8b97b775310c0a462d", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=6ad9f5631623060a9f34f40f2c614cfd8b967c08", "patch": "@@ -68,7 +68,7 @@ impl<'a> StringReader<'a> {\n         let end = sess.source_map().lookup_byte_offset(span.hi());\n \n         // Make the range zero-length if the span is invalid.\n-        if span.lo() > span.hi() || begin.sf.start_pos != end.sf.start_pos {\n+        if begin.sf.start_pos != end.sf.start_pos {\n             span = span.shrink_to_lo();\n         }\n "}, {"sha": "d9f618602a40b4bc8f5c56ec0fa1b4b0a862f7b2", "filename": "src/libsyntax/source_map.rs", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsource_map.rs?ref=6ad9f5631623060a9f34f40f2c614cfd8b967c08", "patch": "@@ -498,10 +498,6 @@ impl SourceMap {\n     pub fn span_to_lines(&self, sp: Span) -> FileLinesResult {\n         debug!(\"span_to_lines(sp={:?})\", sp);\n \n-        if sp.lo() > sp.hi() {\n-            return Err(SpanLinesError::IllFormedSpan(sp));\n-        }\n-\n         let lo = self.lookup_char_pos(sp.lo());\n         debug!(\"span_to_lines: lo={:?}\", lo);\n         let hi = self.lookup_char_pos(sp.hi());\n@@ -549,10 +545,6 @@ impl SourceMap {\n     fn span_to_source<F>(&self, sp: Span, extract_source: F) -> Result<String, SpanSnippetError>\n         where F: Fn(&str, usize, usize) -> Result<String, SpanSnippetError>\n     {\n-        if sp.lo() > sp.hi() {\n-            return Err(SpanSnippetError::IllFormedSpan(sp));\n-        }\n-\n         let local_begin = self.lookup_byte_offset(sp.lo());\n         let local_end = self.lookup_byte_offset(sp.hi());\n \n@@ -762,14 +754,14 @@ impl SourceMap {\n \n     /// Finds the width of a character, either before or after the provided span.\n     fn find_width_of_character_at_span(&self, sp: Span, forwards: bool) -> u32 {\n-        // Disregard malformed spans and assume a one-byte wide character.\n-        if sp.lo() >= sp.hi() {\n-            debug!(\"find_width_of_character_at_span: early return malformed span\");\n+        let sp = sp.data();\n+        if sp.lo == sp.hi {\n+            debug!(\"find_width_of_character_at_span: early return empty span\");\n             return 1;\n         }\n \n-        let local_begin = self.lookup_byte_offset(sp.lo());\n-        let local_end = self.lookup_byte_offset(sp.hi());\n+        let local_begin = self.lookup_byte_offset(sp.lo);\n+        let local_end = self.lookup_byte_offset(sp.hi);\n         debug!(\"find_width_of_character_at_span: local_begin=`{:?}`, local_end=`{:?}`\",\n                local_begin, local_end);\n "}, {"sha": "dc29b189639ce409625a39fa380161d1493616de", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad9f5631623060a9f34f40f2c614cfd8b967c08/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=6ad9f5631623060a9f34f40f2c614cfd8b967c08", "patch": "@@ -1512,7 +1512,6 @@ pub type FileLinesResult = Result<FileLines, SpanLinesError>;\n \n #[derive(Clone, PartialEq, Eq, Debug)]\n pub enum SpanLinesError {\n-    IllFormedSpan(Span),\n     DistinctSources(DistinctSources),\n }\n "}]}