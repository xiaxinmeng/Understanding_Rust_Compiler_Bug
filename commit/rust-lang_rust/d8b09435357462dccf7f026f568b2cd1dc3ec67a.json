{"sha": "d8b09435357462dccf7f026f568b2cd1dc3ec67a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YjA5NDM1MzU3NDYyZGNjZjdmMDI2ZjU2OGIyY2QxZGMzZWM2N2E=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-22T00:19:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-22T00:19:28Z"}, "message": "Merge #3244\n\n3244: Rename module references r=matklad a=adamrk\n\nRename references to a module when the module is renamed. This fixes some missing renames in the existing implementation. For example, renaming the module `foo` to `foo2` in this case:\r\n```rust\r\nmod foo {\r\n    pub fn bar() {}\r\n}\r\n\r\nfn main() {\r\n    foo::bar()\r\n}\r\n```\r\npreviously would not change the call `foo::bar()` to `foo2::bar()`, but now it will. \n\nCo-authored-by: adamrk <ark.email@gmail.com>\nCo-authored-by: Adam Bratschi-Kaye <ark.email@gmail.com>", "tree": {"sha": "72909c3e5d3051357c0bc0f6e121f65eec4ba0f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72909c3e5d3051357c0bc0f6e121f65eec4ba0f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8b09435357462dccf7f026f568b2cd1dc3ec67a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeUHOQCRBK7hj4Ov3rIwAAdHIIAA9y0IAL7CdmiCugdwMlWmcF\nBmD0jh843snsOdEFzPHljM9OdA4WdOxMMri7RYashLB6Ojsx9wK3pIWnxawAJlFT\nrHYiJm4L2I/kxwIKIsEih7FsbRXlpUWluJmlYSD77ZdcOE/Drodqchq1NcJQAaDV\naMz1l27RP8nD3u9Tf5g091MvdI4wIxZJJ68ptX1mkCH/p9D6n3e/lYa/nHwjHWzd\nylebLq5X5VHFbzdPBfUvq9D5acuJvBSdND1kEquEIsOIEAbjzEH8m8OBTwIvECza\nkinSBuMotMu2KRBMeJTCmGijhxd1fmFC4U7ehrIaV0plhklFLzBg9OGLsoVr8Pw=\n=GySK\n-----END PGP SIGNATURE-----\n", "payload": "tree 72909c3e5d3051357c0bc0f6e121f65eec4ba0f1\nparent f3ab290bd4d20b2c1531980eb87a32981efb7826\nparent fe8ce4c41d5f82ab164e76aef6c504c99fdff410\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582330768 +0000\ncommitter GitHub <noreply@github.com> 1582330768 +0000\n\nMerge #3244\n\n3244: Rename module references r=matklad a=adamrk\n\nRename references to a module when the module is renamed. This fixes some missing renames in the existing implementation. For example, renaming the module `foo` to `foo2` in this case:\r\n```rust\r\nmod foo {\r\n    pub fn bar() {}\r\n}\r\n\r\nfn main() {\r\n    foo::bar()\r\n}\r\n```\r\npreviously would not change the call `foo::bar()` to `foo2::bar()`, but now it will. \n\nCo-authored-by: adamrk <ark.email@gmail.com>\nCo-authored-by: Adam Bratschi-Kaye <ark.email@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b09435357462dccf7f026f568b2cd1dc3ec67a", "html_url": "https://github.com/rust-lang/rust/commit/d8b09435357462dccf7f026f568b2cd1dc3ec67a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8b09435357462dccf7f026f568b2cd1dc3ec67a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ab290bd4d20b2c1531980eb87a32981efb7826", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ab290bd4d20b2c1531980eb87a32981efb7826", "html_url": "https://github.com/rust-lang/rust/commit/f3ab290bd4d20b2c1531980eb87a32981efb7826"}, {"sha": "fe8ce4c41d5f82ab164e76aef6c504c99fdff410", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe8ce4c41d5f82ab164e76aef6c504c99fdff410", "html_url": "https://github.com/rust-lang/rust/commit/fe8ce4c41d5f82ab164e76aef6c504c99fdff410"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "bdb90020bbe4329cd41f676ba693ed55f381f869", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/d8b09435357462dccf7f026f568b2cd1dc3ec67a/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b09435357462dccf7f026f568b2cd1dc3ec67a/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=d8b09435357462dccf7f026f568b2cd1dc3ec67a", "patch": "@@ -98,6 +98,17 @@ fn rename_mod(\n     };\n     source_file_edits.push(edit);\n \n+    if let Some(RangeInfo { range: _, info: refs }) = find_all_refs(db, position, None) {\n+        let ref_edits = refs.references.into_iter().map(|reference| {\n+            source_edit_from_file_id_range(\n+                reference.file_range.file_id,\n+                reference.file_range.range,\n+                new_name,\n+            )\n+        });\n+        source_file_edits.extend(ref_edits);\n+    }\n+\n     Some(SourceChange::from_edits(\"rename\", source_file_edits, file_system_edits))\n }\n \n@@ -383,6 +394,101 @@ mod tests {\n                );\n     }\n \n+    #[test]\n+    fn test_module_rename_in_path() {\n+        test_rename(\n+            r#\"\n+    mod <|>foo {\n+        pub fn bar() {}\n+    }\n+\n+    fn main() {\n+        foo::bar();\n+    }\"#,\n+            \"baz\",\n+            r#\"\n+    mod baz {\n+        pub fn bar() {}\n+    }\n+\n+    fn main() {\n+        baz::bar();\n+    }\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_rename_mod_filename_and_path() {\n+        let (analysis, position) = analysis_and_position(\n+            \"\n+            //- /lib.rs\n+            mod bar;\n+            fn f() {\n+                bar::foo::fun()\n+            }\n+\n+            //- /bar.rs\n+            pub mod foo<|>;\n+\n+            //- /bar/foo.rs\n+            // pub fn fun() {}\n+            \",\n+        );\n+        let new_name = \"foo2\";\n+        let source_change = analysis.rename(position, new_name).unwrap();\n+        assert_debug_snapshot!(&source_change,\n+@r###\"\n+        Some(\n+            RangeInfo {\n+                range: [8; 11),\n+                info: SourceChange {\n+                    label: \"rename\",\n+                    source_file_edits: [\n+                        SourceFileEdit {\n+                            file_id: FileId(\n+                                2,\n+                            ),\n+                            edit: TextEdit {\n+                                atoms: [\n+                                    AtomTextEdit {\n+                                        delete: [8; 11),\n+                                        insert: \"foo2\",\n+                                    },\n+                                ],\n+                            },\n+                        },\n+                        SourceFileEdit {\n+                            file_id: FileId(\n+                                1,\n+                            ),\n+                            edit: TextEdit {\n+                                atoms: [\n+                                    AtomTextEdit {\n+                                        delete: [27; 30),\n+                                        insert: \"foo2\",\n+                                    },\n+                                ],\n+                            },\n+                        },\n+                    ],\n+                    file_system_edits: [\n+                        MoveFile {\n+                            src: FileId(\n+                                3,\n+                            ),\n+                            dst_source_root: SourceRootId(\n+                                0,\n+                            ),\n+                            dst_path: \"bar/foo2.rs\",\n+                        },\n+                    ],\n+                    cursor_position: None,\n+                },\n+            },\n+        )\n+        \"###);\n+    }\n+\n     fn test_rename(text: &str, new_name: &str, expected: &str) {\n         let (analysis, position) = single_file_with_position(text);\n         let source_change = analysis.rename(position, new_name).unwrap();"}]}