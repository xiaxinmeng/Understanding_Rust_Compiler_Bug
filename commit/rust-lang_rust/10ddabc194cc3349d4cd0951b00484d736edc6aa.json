{"sha": "10ddabc194cc3349d4cd0951b00484d736edc6aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZGRhYmMxOTRjYzMzNDlkNGNkMDk1MWIwMDQ4NGQ3MzZlZGM2YWE=", "commit": {"author": {"name": "Lamb", "email": "contact@lambtowolf.me", "date": "2021-07-02T21:34:52Z"}, "committer": {"name": "Lamb", "email": "contact@ltow.me", "date": "2021-08-29T11:19:17Z"}, "message": "const fn for option copied, take & replace + tests\n\nfix: move test that require mut to another\n\nAdding TODOs for Option::take and Option::copied\n\nTODO to FIXME + moving const stability under normal\n\nMoving const stability attr under normal stab attr\n\nmove more rustc stability attributes", "tree": {"sha": "c4e5c1dac70dd24981ed5af9dbeb478467834993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e5c1dac70dd24981ed5af9dbeb478467834993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10ddabc194cc3349d4cd0951b00484d736edc6aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEnW335+2t/h8MgpG1/kFO13FcVSsFAmErbTYACgkQ/kFO13Fc\nVSuoEA/8DxcS/vXYOGa0ISsUsXtweVf2scnuTGM0S5xk9nDV6iFcrZm9hyHQ9+Kd\njzjrN6BxEbtATIRaCDKBf3G3uGH/WZzw54esQvCbr4ra79A4d4bNrLJzpQkkKZiK\nqnlT2soRAzlx8OJkIbaZR5Aprw2IyC52r17wB3fvluJ740d3u8qUGWjqYNF1PLGe\nKzrIszb6m4v4eITv+8Ezsv4T3Jq2yH6M3LuNutGRVpB+RwVODRtjOupscmTv37x6\nKZWlFD/T6+Yy74pFGlBLhEayVIn9CMLTLVsH58DH46I3K1+97osu3Kp4Vp7H22rX\nJmXDVSNrz4arJDoMCCVFigC8ZTj/a8SlE5cI3zBDGZ9+qUXY2PvrqmmBr+XMdLp3\nQmvW+b/ESlC1A3MSRe7JjSav9yszqpWHujnWX6WqLEaAHO1/K4Blg7xE+GEmpCdP\n1EyEG7teDxfEwfRKJqDDFvsV94prFckjR9QIgom47sV0+eoQbjwD49jk4KEwTBuY\nZTVpL3ZQxM4emb9BZB4qwT3CvF9KuZ9y53bRE6/o1A/tB9duzJkSqkbVv+bSFjQm\nArb/UIf5Wwx0kf8OYt67Lvj6HwHrRzyGbaGaZOu7rS1M27VcxpignnbRyJl8TMHZ\nD4DO1pWZu4bsLsyY3GCW2xQGuFSJiEB7/OZNnC18zAJkTWn5tbU=\n=PqbX\n-----END PGP SIGNATURE-----", "payload": "tree c4e5c1dac70dd24981ed5af9dbeb478467834993\nparent 757a65bfdf504f6c9177514abb385618e784f0a5\nauthor Lamb <contact@lambtowolf.me> 1625261692 +0200\ncommitter Lamb <contact@ltow.me> 1630235957 +0200\n\nconst fn for option copied, take & replace + tests\n\nfix: move test that require mut to another\n\nAdding TODOs for Option::take and Option::copied\n\nTODO to FIXME + moving const stability under normal\n\nMoving const stability attr under normal stab attr\n\nmove more rustc stability attributes\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10ddabc194cc3349d4cd0951b00484d736edc6aa", "html_url": "https://github.com/rust-lang/rust/commit/10ddabc194cc3349d4cd0951b00484d736edc6aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10ddabc194cc3349d4cd0951b00484d736edc6aa/comments", "author": {"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lambinoo", "id": 57440804, "node_id": "MDQ6VXNlcjU3NDQwODA0", "avatar_url": "https://avatars.githubusercontent.com/u/57440804?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambinoo", "html_url": "https://github.com/lambinoo", "followers_url": "https://api.github.com/users/lambinoo/followers", "following_url": "https://api.github.com/users/lambinoo/following{/other_user}", "gists_url": "https://api.github.com/users/lambinoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambinoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambinoo/subscriptions", "organizations_url": "https://api.github.com/users/lambinoo/orgs", "repos_url": "https://api.github.com/users/lambinoo/repos", "events_url": "https://api.github.com/users/lambinoo/events{/privacy}", "received_events_url": "https://api.github.com/users/lambinoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "757a65bfdf504f6c9177514abb385618e784f0a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/757a65bfdf504f6c9177514abb385618e784f0a5", "html_url": "https://github.com/rust-lang/rust/commit/757a65bfdf504f6c9177514abb385618e784f0a5"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "28433f734c656e6be7b4b06fc8c50ece4847acd2", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=10ddabc194cc3349d4cd0951b00484d736edc6aa", "patch": "@@ -91,6 +91,7 @@\n #![feature(const_maybe_uninit_assume_init)]\n #![feature(const_option)]\n #![feature(const_pin)]\n+#![feature(const_replace)]\n #![feature(const_ptr_offset)]\n #![feature(const_ptr_offset_from)]\n #![feature(const_ptr_read)]"}, {"sha": "59ebc902224029dfc59695ee843227489a093d4a", "filename": "library/core/src/option.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=10ddabc194cc3349d4cd0951b00484d736edc6aa", "patch": "@@ -540,8 +540,8 @@ impl<T> Option<T> {\n     /// ```\n     #[must_use = \"if you intended to assert that this has a value, consider `.unwrap()` instead\"]\n     #[inline]\n-    #[rustc_const_stable(feature = \"const_option\", since = \"1.48.0\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_stable(feature = \"const_option\", since = \"1.48.0\")]\n     pub const fn is_some(&self) -> bool {\n         matches!(*self, Some(_))\n     }\n@@ -560,8 +560,8 @@ impl<T> Option<T> {\n     #[must_use = \"if you intended to assert that this doesn't have a value, consider \\\n                   `.and_then(|_| panic!(\\\"`Option` had a value when expected `None`\\\"))` instead\"]\n     #[inline]\n-    #[rustc_const_stable(feature = \"const_option\", since = \"1.48.0\")]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_stable(feature = \"const_option\", since = \"1.48.0\")]\n     pub const fn is_none(&self) -> bool {\n         !self.is_some()\n     }\n@@ -1312,8 +1312,10 @@ impl<T> Option<T> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn take(&mut self) -> Option<T> {\n-        mem::take(self)\n+    #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n+    pub const fn take(&mut self) -> Option<T> {\n+        // FIXME replace `mem::replace` by `mem::take` when the latter is const ready\n+        mem::replace(self, None)\n     }\n \n     /// Replaces the actual value in the option by the value given in parameter,\n@@ -1334,8 +1336,9 @@ impl<T> Option<T> {\n     /// assert_eq!(old, None);\n     /// ```\n     #[inline]\n+    #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n     #[stable(feature = \"option_replace\", since = \"1.31.0\")]\n-    pub fn replace(&mut self, value: T) -> Option<T> {\n+    pub const fn replace(&mut self, value: T) -> Option<T> {\n         mem::replace(self, Some(value))\n     }\n \n@@ -1440,8 +1443,14 @@ impl<T: Copy> Option<&T> {\n     /// assert_eq!(copied, Some(12));\n     /// ```\n     #[stable(feature = \"copied\", since = \"1.35.0\")]\n-    pub fn copied(self) -> Option<T> {\n-        self.map(|&t| t)\n+    #[rustc_const_unstable(feature = \"const_option\", issue = \"67441\")]\n+    pub const fn copied(self) -> Option<T> {\n+        // FIXME: this implementation, which sidesteps using `Option::map` since it's not const\n+        // ready yet, should be reverted when possible to avoid code repetition\n+        match self {\n+            Some(&v) => Some(v),\n+            None => None,\n+        }\n     }\n }\n "}, {"sha": "8995f96b1238a654badb66cece7ed962f109dd3c", "filename": "library/core/tests/option.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Ftests%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10ddabc194cc3349d4cd0951b00484d736edc6aa/library%2Fcore%2Ftests%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Foption.rs?ref=10ddabc194cc3349d4cd0951b00484d736edc6aa", "patch": "@@ -367,6 +367,19 @@ fn option_const() {\n \n     const IS_NONE: bool = OPTION.is_none();\n     assert!(!IS_NONE);\n+\n+    const COPIED: Option<usize> = OPTION.as_ref().copied();\n+    assert_eq!(COPIED, OPTION);\n+}\n+\n+#[test]\n+const fn option_const_mut() {\n+    // test that the methods of `Option` that take mutable references are usable in a const context\n+\n+    let mut option: Option<usize> = Some(32);\n+\n+    let _take = option.take();\n+    let _replace = option.replace(42);\n }\n \n #[test]"}]}