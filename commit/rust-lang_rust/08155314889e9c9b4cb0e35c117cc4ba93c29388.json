{"sha": "08155314889e9c9b4cb0e35c117cc4ba93c29388", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MTU1MzE0ODg5ZTljOWI0Y2IwZTM1YzExN2NjNGJhOTNjMjkzODg=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-12-16T00:33:23Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-12-16T00:33:23Z"}, "message": "Add a note about why the unsafe is sound", "tree": {"sha": "55f383c18e53e9826090a28c839238c67977174e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55f383c18e53e9826090a28c839238c67977174e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08155314889e9c9b4cb0e35c117cc4ba93c29388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08155314889e9c9b4cb0e35c117cc4ba93c29388", "html_url": "https://github.com/rust-lang/rust/commit/08155314889e9c9b4cb0e35c117cc4ba93c29388", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08155314889e9c9b4cb0e35c117cc4ba93c29388/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f9883d79e517741dd3531688d026b1fa4a2a0ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f9883d79e517741dd3531688d026b1fa4a2a0ad", "html_url": "https://github.com/rust-lang/rust/commit/7f9883d79e517741dd3531688d026b1fa4a2a0ad"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "5171ca254e48628d27137b60fb1c9384cde6cc2d", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/08155314889e9c9b4cb0e35c117cc4ba93c29388/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08155314889e9c9b4cb0e35c117cc4ba93c29388/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=08155314889e9c9b4cb0e35c117cc4ba93c29388", "patch": "@@ -2018,13 +2018,23 @@ impl<T> VecDeque<T> {\n         }\n     }\n \n+    // Safety: the following two methods require that the rotation amount\n+    // be less than half the length of the deque.\n+    //\n+    // `wrap_copy` requres that `min(x, cap() - x) + copy_len <= cap()`,\n+    // but than `min` is never more than half the capacity, regardless of x,\n+    // so it's sound to call here because we're calling with something\n+    // less than half the length, which is never above half the capacity.\n+\n     unsafe fn rotate_left_inner(&mut self, mid: usize) {\n+        debug_assert!(mid * 2 <= self.len());\n         self.wrap_copy(self.head, self.tail, mid);\n         self.head = self.wrap_add(self.head, mid);\n         self.tail = self.wrap_add(self.tail, mid);\n     }\n \n     unsafe fn rotate_right_inner(&mut self, k: usize) {\n+        debug_assert!(k * 2 <= self.len());\n         self.head = self.wrap_sub(self.head, k);\n         self.tail = self.wrap_sub(self.tail, k);\n         self.wrap_copy(self.tail, self.head, k);"}]}