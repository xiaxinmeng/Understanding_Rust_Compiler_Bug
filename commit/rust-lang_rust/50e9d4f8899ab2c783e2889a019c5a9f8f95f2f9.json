{"sha": "50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZTlkNGY4ODk5YWIyYzc4M2UyODg5YTAxOWM1YTlmOGY5NWYyZjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-04T02:31:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-04T02:31:36Z"}, "message": "auto merge of #10752 : dhodder/rust/master, r=pcwalton", "tree": {"sha": "9935c5a60c208aed9fe4306c076e08fb0e6eb03e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9935c5a60c208aed9fe4306c076e08fb0e6eb03e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "html_url": "https://github.com/rust-lang/rust/commit/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "693ec73b9b6308833587dbb872297b267391f6f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/693ec73b9b6308833587dbb872297b267391f6f6", "html_url": "https://github.com/rust-lang/rust/commit/693ec73b9b6308833587dbb872297b267391f6f6"}, {"sha": "2c1acd7998d9a99bd16ee59fe1fd68d1eece4c3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c1acd7998d9a99bd16ee59fe1fd68d1eece4c3e", "html_url": "https://github.com/rust-lang/rust/commit/2c1acd7998d9a99bd16ee59fe1fd68d1eece4c3e"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "4190bd9036b432ba9b44280b38489b7f9e59b331", "filename": "src/libextra/url.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9/src%2Flibextra%2Furl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9/src%2Flibextra%2Furl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Furl.rs?ref=50e9d4f8899ab2c783e2889a019c5a9f8f95f2f9", "patch": "@@ -19,23 +19,51 @@ use std::hashmap::HashMap;\n use std::to_bytes;\n use std::uint;\n \n+/// A Uniform Resource Locator (URL).  A URL is a form of URI (Uniform Resource\n+/// Identifier) that includes network location information, such as hostname or\n+/// port number.\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// let url = Url { scheme: ~\"https\",\n+///                 user: Some(UserInfo { user: ~\"username\", pass: None }),\n+///                 host: ~\"example.com\",\n+///                 port: Some(~\"8080\"),\n+///                 path: ~\"/foo/bar\",\n+///                 query: ~[(~\"baz\", ~\"qux\")],\n+///                 fragment: Some(~\"quz\") };\n+/// // https://username@example.com:8080/foo/bar?baz=qux#quz\n+/// ```\n #[deriving(Clone, Eq)]\n pub struct Url {\n+    /// The scheme part of a URL, such as `https` in the above example.\n     scheme: ~str,\n+    /// A URL subcomponent for user authentication.  `username` in the above example.\n     user: Option<UserInfo>,\n+    /// A domain name or IP address.  For example, `example.com`.\n     host: ~str,\n+    /// A TCP port number, for example `8080`.\n     port: Option<~str>,\n+    /// The path component of a URL, for example `/foo/bar`.\n     path: ~str,\n+    /// The query component of a URL.  `~[(~\"baz\", ~\"qux\")]` represents the\n+    /// fragment `baz=qux` in the above example.\n     query: Query,\n+    /// The fragment component, such as `quz`.  Doesn't include the leading `#` character.\n     fragment: Option<~str>\n }\n \n+/// An optional subcomponent of a URI authority component.\n #[deriving(Clone, Eq)]\n pub struct UserInfo {\n+    /// The user name.\n     user: ~str,\n+    /// Password or other scheme-specific authentication information.\n     pass: Option<~str>\n }\n \n+/// Represents the query component of a URI.\n pub type Query = ~[(~str, ~str)];\n \n impl Url {"}]}