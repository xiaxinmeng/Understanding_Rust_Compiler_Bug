{"sha": "268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2OGZhZWY2M2FkYzVkNTJjOWJkZmJiNmU4YjQ0YTMwN2Y0NTI4ZDg=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-13T00:21:12Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-03-13T00:21:12Z"}, "message": "mk: target triple rename arm-unknown-android->arm-linux-androideabi", "tree": {"sha": "0a8d428ef72a2fdfd5c6a4f471d164ad0953b3df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a8d428ef72a2fdfd5c6a4f471d164ad0953b3df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "comment_count": 18, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "html_url": "https://github.com/rust-lang/rust/commit/268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b60c3bfa4a95fecae2f28929f22f38865d7e5f79", "url": "https://api.github.com/repos/rust-lang/rust/commits/b60c3bfa4a95fecae2f28929f22f38865d7e5f79", "html_url": "https://github.com/rust-lang/rust/commit/b60c3bfa4a95fecae2f28929f22f38865d7e5f79"}], "stats": {"total": 76, "additions": 38, "deletions": 38}, "files": [{"sha": "33dfac4007ae17e1b67e0156fc2055ebe4f55621", "filename": "mk/platform.mk", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "patch": "@@ -215,31 +215,31 @@ CFG_LDPATH_i686-apple-darwin :=\n CFG_RUN_i686-apple-darwin=$(2)\n CFG_RUN_TARG_i686-apple-darwin=$(call CFG_RUN_i686-apple-darwin,,$(2))\n \n-# arm-unknown-android configuration\n-CC_arm-unknown-android=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc\n-CXX_arm-unknown-android=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-g++\n-CPP_arm-unknown-android=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc -E\n-AR_arm-unknown-android=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-ar\n-CFG_LIB_NAME_arm-unknown-android=lib$(1).so\n-CFG_LIB_GLOB_arm-unknown-android=lib$(1)-*.so\n-CFG_LIB_DSYM_GLOB_arm-unknown-android=lib$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_arm-unknown-android := -Wall -g -fPIC -D__arm__ -DANDROID -D__ANDROID__\n-CFG_GCCISH_CXXFLAGS_arm-unknown-android := -fno-rtti\n-CFG_GCCISH_LINK_FLAGS_arm-unknown-android := -shared -fPIC -ldl -g -lm -lsupc++ -lgnustl_shared\n-CFG_GCCISH_DEF_FLAG_arm-unknown-android := -Wl,--export-dynamic,--dynamic-list=\n-CFG_GCCISH_PRE_LIB_FLAGS_arm-unknown-android := -Wl,-whole-archive\n-CFG_GCCISH_POST_LIB_FLAGS_arm-unknown-android := -Wl,-no-whole-archive -Wl,-znoexecstack\n-CFG_DEF_SUFFIX_arm-unknown-android := .android.def\n-CFG_INSTALL_NAME_arm-unknown-android =\n-CFG_LIBUV_LINK_FLAGS_arm-unknown-android =\n-CFG_EXE_SUFFIX_arm-unknown-android :=\n-CFG_WINDOWSY_arm-unknown-android :=\n-CFG_UNIXY_arm-unknown-android := 1\n-CFG_PATH_MUNGE_arm-unknown-android := true\n-CFG_LDPATH_arm-unknown-android :=\n-CFG_RUN_arm-unknown-android=\n-CFG_RUN_TARG_arm-unknown-android=\n-RUSTC_FLAGS_arm-unknown-android :=--android-cross-path=$(CFG_ANDROID_CROSS_PATH)\n+# arm-linux-androideabi configuration\n+CC_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc\n+CXX_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-g++\n+CPP_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-gcc\n+AR_arm-linux-androideabi=$(CFG_ANDROID_CROSS_PATH)/bin/arm-linux-androideabi-ar\n+CFG_LIB_NAME_arm-linux-androideabi=lib$(1).so\n+CFG_LIB_GLOB_arm-linux-androideabi=lib$(1)-*.so\n+CFG_LIB_DSYM_GLOB_arm-linux-androideabi=lib$(1)-*.dylib.dSYM\n+CFG_GCCISH_CFLAGS_arm-linux-androideabi := -Wall -g -fPIC -D__arm__ -DANDROID -D__ANDROID__\n+CFG_GCCISH_CXXFLAGS_arm-linux-androideabi := -fno-rtti\n+CFG_GCCISH_LINK_FLAGS_arm-linux-androideabi := -shared -fPIC -ldl -g -lm -lsupc++ -lgnustl_shared\n+CFG_GCCISH_DEF_FLAG_arm-linux-androideabi := -Wl,--export-dynamic,--dynamic-list=\n+CFG_GCCISH_PRE_LIB_FLAGS_arm-linux-androideabi := -Wl,-whole-archive\n+CFG_GCCISH_POST_LIB_FLAGS_arm-linux-androideabi := -Wl,-no-whole-archive -Wl,-znoexecstack\n+CFG_DEF_SUFFIX_arm-linux-androideabi := .android.def\n+CFG_INSTALL_NAME_arm-linux-androideabi =\n+CFG_LIBUV_LINK_FLAGS_arm-linux-androideabi =\n+CFG_EXE_SUFFIX_arm-linux-androideabi :=\n+CFG_WINDOWSY_arm-linux-androideabi :=\n+CFG_UNIXY_arm-linux-androideabi := 1\n+CFG_PATH_MUNGE_arm-linux-androideabi := true\n+CFG_LDPATH_arm-linux-androideabi :=\n+CFG_RUN_arm-linux-androideabi=\n+CFG_RUN_TARG_arm-linux-androideabi=\n+RUSTC_FLAGS_arm-linux-androideabi :=--android-cross-path=$(CFG_ANDROID_CROSS_PATH)\n \n # i686-pc-mingw32 configuration\n CC_i686-pc-mingw32=$(CC)\n@@ -267,22 +267,22 @@ CFG_RUN_i686-pc-mingw32=PATH=\"$(CFG_LDPATH_i686-pc-mingw32):$(1)\" $(2)\n CFG_RUN_TARG_i686-pc-mingw32=$(call CFG_RUN_i686-pc-mingw32,$(HLIB$(1)_H_$(CFG_BUILD_TRIPLE)),$(2))\n \n # i586-mingw32msvc configuration\n-CC_i586-mingw32msvc=$(CC)\n-CXX_i586-mingw32msvc=$(CXX)\n-CPP_i586-mingw32msvc=$(CPP)\n-AR_i586-mingw32msvc=$(AR)\n+CC_i586-mingw32msvc=$(CFG_MINGW32_CROSS_PATH)/bin/i586-mingw32msvc-gcc\n+CXX_i586-mingw32msvc=$(CFG_MINGW32_CROSS_PATH)/bin/i586-mingw32msvc-g++\n+CPP_i586-mingw32msvc=$(CFG_MINGW32_CROSS_PATH)/bin/i586-mingw32msvc-cpp\n+AR_i586-mingw32msvc=$(CFG_MINGW32_CROSS_PATH)/bin/i586-mingw32msvc-ar\n CFG_LIB_NAME_i586-mingw32msvc=$(1).dll\n CFG_LIB_GLOB_i586-mingw32msvc=$(1)-*.dll\n CFG_LIB_DSYM_GLOB_i586-mingw32msvc=$(1)-*.dylib.dSYM\n-CFG_GCCISH_CFLAGS_i586-mingw32msvc := -Wall -Werror -g -march=586 -m32\n+CFG_GCCISH_CFLAGS_i586-mingw32msvc := -Wall -Werror -g -march=i586 -m32\n CFG_GCCISH_CXXFLAGS_i586-mingw32msvc := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_i586-mingw32msvc := -shared -g -m32\n CFG_GCCISH_DEF_FLAG_i586-mingw32msvc :=\n CFG_GCCISH_PRE_LIB_FLAGS_i586-mingw32msvc :=\n CFG_GCCISH_POST_LIB_FLAGS_i586-mingw32msvc :=\n CFG_DEF_SUFFIX_i586-mingw32msvc := .mingw32.def\n CFG_INSTALL_NAME_i586-mingw32msvc =\n-CFG_LIBUV_LINK_FLAGS_i586-mingw32msvc := -lWs2_32 -lpsapi -liphlpapi\n+CFG_LIBUV_LINK_FLAGS_i586-mingw32msvc := -L$(CFG_MINGW32_CROSS_PATH)/i586-mingw32msvc/lib -lws2_32 -lpsapi -liphlpapi\n CFG_EXE_SUFFIX_i586-mingw32msvc := .exe\n CFG_WINDOWSY_i586-mingw32msvc := 1\n CFG_UNIXY_i586-mingw32msvc :=\n@@ -342,7 +342,7 @@ define CFG_MAKE_TOOLCHAIN\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2)        \\\n         $$(call CFG_INSTALL_NAME_$(1),$$(4))\n \n-  ifneq ($(1),arm-unknown-android)\n+  ifneq ($(1),arm-linux-androideabi)\n \n   # We're using llvm-mc as our assembler because it supports\n   # .cfi pseudo-ops on mac\n@@ -356,7 +356,7 @@ define CFG_MAKE_TOOLCHAIN\n \n   # For the Android cross, use the Android assembler\n   # XXX: We should be able to use the LLVM assembler\n-  CFG_ASSEMBLE_$(1)=$$(CXX_$(1)) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n+  CFG_ASSEMBLE_$(1)=$$(CPP_$(1)) $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n \n   endif\n "}, {"sha": "52c8b5637b14aef63cb7d362c2d016fa11615aca", "filename": "mk/rt.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "patch": "@@ -92,7 +92,7 @@ else ifeq ($(OSTYPE_$(1)), apple-darwin)\n else ifeq ($(OSTYPE_$(1)), unknown-freebsd)\n   LIBUV_OSTYPE_$(1) := unix/freebsd\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n-else ifeq ($(OSTYPE_$(1)), unknown-android)\n+else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n   LIBUV_OSTYPE_$(1) := unix/android\n   LIBUV_LIB_$(1) := rt/$(1)/libuv/libuv.a\n else\n@@ -164,7 +164,7 @@ $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t\tbuilddir_name=\"$$(CFG_BUILD_DIR)/rt/$(1)/libuv\" \\\n \t\tOS=mingw \\\n \t\tV=$$(VERBOSE)\n-else ifeq ($(OSTYPE_$(1)), unknown-android)\n+else ifeq ($(OSTYPE_$(1)), linux-androideabi)\n $$(LIBUV_LIB_$(1)): $$(LIBUV_DEPS)\n \t$$(Q)$$(MAKE) -C $$(S)src/libuv/ \\\n \t\tCFLAGS=\"$$(LIBUV_FLAGS_$$(HOST_$(1))) $$(SNAP_DEFINES)\" \\"}, {"sha": "97c3a588a7fc8d2a5d470a382faf4563229c089f", "filename": "src/librustc/back/arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/src%2Flibrustc%2Fback%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/src%2Flibrustc%2Fback%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farm.rs?ref=268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "patch": "@@ -65,7 +65,7 @@ pub fn get_target_strs(target_os: session::os) -> target_strs::t {\n           session::os_macos => ~\"arm-apple-darwin\",\n           session::os_win32 => ~\"arm-pc-mingw32\",\n           session::os_linux => ~\"arm-unknown-linux\",\n-          session::os_android => ~\"arm-unknown-android\",\n+          session::os_android => ~\"arm-linux-androideabi\",\n           session::os_freebsd => ~\"arm-unknown-freebsd\"\n         },\n "}, {"sha": "ce587e042c38d918866f6031ddd37bf796ae1f17", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/268faef63adc5d52c9bdfbb6e8b44a307f4528d8/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=268faef63adc5d52c9bdfbb6e8b44a307f4528d8", "patch": "@@ -446,10 +446,10 @@ pub fn get_os(triple: ~str) -> Option<session::os> {\n             Some(session::os_win32)\n         } else if str::contains(triple, ~\"darwin\") {\n             Some(session::os_macos)\n-        } else if str::contains(triple, ~\"linux\") {\n-            Some(session::os_linux)\n         } else if str::contains(triple, ~\"android\") {\n             Some(session::os_android)\n+        } else if str::contains(triple, ~\"linux\") {\n+            Some(session::os_linux)\n         } else if str::contains(triple, ~\"freebsd\") {\n             Some(session::os_freebsd)\n         } else { None }"}]}