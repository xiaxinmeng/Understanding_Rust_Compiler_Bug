{"sha": "5431ef65303bb1ec71a42910fc55ecfa62b6d781", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MzFlZjY1MzAzYmIxZWM3MWE0MjkxMGZjNTVlY2ZhNjJiNmQ3ODE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-20T14:39:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-20T14:39:45Z"}, "message": "Rollup merge of #72600 - Aaron1011:fix/anon-const-encoding, r=varkor\n\nProperly encode AnonConst into crate metadata\n\nFixes #68104\n\nPrevious, we were encoding AnonConst as a regular Const, causing us to\ntreat them differently after being deserialized in another compilation\nsession.", "tree": {"sha": "d4d5cdde6ccefb5cf15dbe654f918bac32b127e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4d5cdde6ccefb5cf15dbe654f918bac32b127e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5431ef65303bb1ec71a42910fc55ecfa62b6d781", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe7h+yCRBK7hj4Ov3rIwAAdHIIADr6ZjxTW5CsepsHqZcPrRi0\nmIRCzaNeIzIVEZ4dM3tcTAL4UMEngnqcAHH0J6XMxAVr1GA7kmSHq78UfS4xJ1Iw\nQyX7mxQQlZ78LuGp1227220C21uZ1iO4ZbLhVn1cb3vJ6zjD201VuLndFaYJlkgY\nnFKLFXQEqHFY+J6rznaU2T73SfBWpMzJxlJr+f38CYaJQADZ5YRc5yBCYHYV1Xs5\nTSRqxg/ddUkk0+tJ41kIebb1s+uBpFrIM7zXSfwa3t61QrxRLfJIxSoxGMfR/1E2\nxK0AA3HKhBWp1rVPtK/FKx2UF5NLK8nzV9lUNuBTES+R23U85oxfyNcWLj9d55Q=\n=01F2\n-----END PGP SIGNATURE-----\n", "payload": "tree d4d5cdde6ccefb5cf15dbe654f918bac32b127e6\nparent 033013cab3a861224fd55f494c8be1cb0349eb49\nparent ebe5a916b08d5d58b03fe551a95038d9cf964781\nauthor Ralf Jung <post@ralfj.de> 1592663985 +0200\ncommitter GitHub <noreply@github.com> 1592663985 +0200\n\nRollup merge of #72600 - Aaron1011:fix/anon-const-encoding, r=varkor\n\nProperly encode AnonConst into crate metadata\n\nFixes #68104\n\nPrevious, we were encoding AnonConst as a regular Const, causing us to\ntreat them differently after being deserialized in another compilation\nsession.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5431ef65303bb1ec71a42910fc55ecfa62b6d781", "html_url": "https://github.com/rust-lang/rust/commit/5431ef65303bb1ec71a42910fc55ecfa62b6d781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5431ef65303bb1ec71a42910fc55ecfa62b6d781/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "033013cab3a861224fd55f494c8be1cb0349eb49", "url": "https://api.github.com/repos/rust-lang/rust/commits/033013cab3a861224fd55f494c8be1cb0349eb49", "html_url": "https://github.com/rust-lang/rust/commit/033013cab3a861224fd55f494c8be1cb0349eb49"}, {"sha": "ebe5a916b08d5d58b03fe551a95038d9cf964781", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe5a916b08d5d58b03fe551a95038d9cf964781", "html_url": "https://github.com/rust-lang/rust/commit/ebe5a916b08d5d58b03fe551a95038d9cf964781"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "800f794121ab3806e6ca0f24d07b0851d2ccbc2c", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=5431ef65303bb1ec71a42910fc55ecfa62b6d781", "patch": "@@ -565,6 +565,7 @@ impl MetadataBlob {\n impl EntryKind {\n     fn def_kind(&self) -> DefKind {\n         match *self {\n+            EntryKind::AnonConst(..) => DefKind::AnonConst,\n             EntryKind::Const(..) => DefKind::Const,\n             EntryKind::AssocConst(..) => DefKind::AssocConst,\n             EntryKind::ImmStatic\n@@ -1121,7 +1122,8 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n \n     fn mir_const_qualif(&self, id: DefIndex) -> mir::ConstQualifs {\n         match self.kind(id) {\n-            EntryKind::Const(qualif, _)\n+            EntryKind::AnonConst(qualif, _)\n+            | EntryKind::Const(qualif, _)\n             | EntryKind::AssocConst(\n                 AssocContainer::ImplDefault\n                 | AssocContainer::ImplFinal\n@@ -1340,7 +1342,9 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n \n     fn get_rendered_const(&self, id: DefIndex) -> String {\n         match self.kind(id) {\n-            EntryKind::Const(_, data) | EntryKind::AssocConst(_, _, data) => data.decode(self).0,\n+            EntryKind::AnonConst(_, data)\n+            | EntryKind::Const(_, data)\n+            | EntryKind::AssocConst(_, _, data) => data.decode(self).0,\n             _ => bug!(),\n         }\n     }"}, {"sha": "31821ea459f1b055119734db42ea921b81d3957f", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=5431ef65303bb1ec71a42910fc55ecfa62b6d781", "patch": "@@ -1358,7 +1358,7 @@ impl EncodeContext<'tcx> {\n         let const_data = self.encode_rendered_const_for_body(body_id);\n         let qualifs = self.tcx.mir_const_qualif(def_id);\n \n-        record!(self.tables.kind[def_id.to_def_id()] <- EntryKind::Const(qualifs, const_data));\n+        record!(self.tables.kind[def_id.to_def_id()] <- EntryKind::AnonConst(qualifs, const_data));\n         record!(self.tables.visibility[def_id.to_def_id()] <- ty::Visibility::Public);\n         record!(self.tables.span[def_id.to_def_id()] <- self.tcx.def_span(def_id));\n         self.encode_item_type(def_id.to_def_id());"}, {"sha": "381e7ee115e173ceac4a535c6b8bf621513b663f", "filename": "src/librustc_metadata/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fmod.rs?ref=5431ef65303bb1ec71a42910fc55ecfa62b6d781", "patch": "@@ -281,6 +281,7 @@ define_tables! {\n \n #[derive(Copy, Clone, RustcEncodable, RustcDecodable)]\n enum EntryKind {\n+    AnonConst(mir::ConstQualifs, Lazy<RenderedConst>),\n     Const(mir::ConstQualifs, Lazy<RenderedConst>),\n     ImmStatic,\n     MutStatic,"}, {"sha": "fc993d63927c3d65774c770a63630755670984d0", "filename": "src/test/ui/const-generics/auxiliary/impl-const.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fauxiliary%2Fimpl-const.rs?ref=5431ef65303bb1ec71a42910fc55ecfa62b6d781", "patch": "@@ -0,0 +1,9 @@\n+#![feature(const_generics)]\n+\n+pub struct Num<const N: usize>;\n+\n+// Braces around const expression causes crash\n+impl Num<{5}> {\n+    pub fn five(&self) {\n+    }\n+}"}, {"sha": "bda9ce8767d085dc69b7f7d859475deacd0da0d9", "filename": "src/test/ui/const-generics/issue-68104-print-stack-overflow.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5431ef65303bb1ec71a42910fc55ecfa62b6d781/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-68104-print-stack-overflow.rs?ref=5431ef65303bb1ec71a42910fc55ecfa62b6d781", "patch": "@@ -0,0 +1,14 @@\n+// aux-build:impl-const.rs\n+// run-pass\n+\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+extern crate impl_const;\n+\n+use impl_const::*;\n+\n+pub fn main() {\n+    let n = Num::<5>;\n+    n.five();\n+}"}]}