{"sha": "35c745da03078c9bc58e6f6f2cf57c84e354f09d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Yzc0NWRhMDMwNzhjOWJjNThlNmY2ZjJjZjU3Yzg0ZTM1NGYwOWQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-04T15:17:43Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-01-04T16:23:56Z"}, "message": "Rename use_or_import to view_item.", "tree": {"sha": "6e87f26361af1fb70fbc3abad23a6c1849aab1b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e87f26361af1fb70fbc3abad23a6c1849aab1b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35c745da03078c9bc58e6f6f2cf57c84e354f09d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35c745da03078c9bc58e6f6f2cf57c84e354f09d", "html_url": "https://github.com/rust-lang/rust/commit/35c745da03078c9bc58e6f6f2cf57c84e354f09d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35c745da03078c9bc58e6f6f2cf57c84e354f09d/comments", "author": null, "committer": null, "parents": [{"sha": "cfb97b3393b5a6a43d81c5edbb8d7867ac1d7bf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfb97b3393b5a6a43d81c5edbb8d7867ac1d7bf0", "html_url": "https://github.com/rust-lang/rust/commit/cfb97b3393b5a6a43d81c5edbb8d7867ac1d7bf0"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "1e229b349e61ed285dd15dfdb4d732ef795f26af", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/35c745da03078c9bc58e6f6f2cf57c84e354f09d/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c745da03078c9bc58e6f6f2cf57c84e354f09d/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=35c745da03078c9bc58e6f6f2cf57c84e354f09d", "patch": "@@ -46,9 +46,9 @@ type use_node_ = rec(ident name, vec[@meta_item] metadata);\n type import_node = spanned[import_node_];\n type import_node_ = rec(vec[ident] identifiers);\n \n-tag use_or_import {\n-    use_or_import_use(@use_node);\n-    use_or_import_import(@import_node);\n+tag view_item {\n+    view_item_use(@use_node);\n+    view_item_import(@import_node);\n }\n \n type meta_item = spanned[meta_item_];"}, {"sha": "b167bae460a3c86d7d6933109f9191f0c8bb697f", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/35c745da03078c9bc58e6f6f2cf57c84e354f09d/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35c745da03078c9bc58e6f6f2cf57c84e354f09d/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=35c745da03078c9bc58e6f6f2cf57c84e354f09d", "patch": "@@ -1405,7 +1405,7 @@ impure fn parse_item_obj(parser p, ast.layer lyr) -> @ast.item {\n }\n \n impure fn parse_mod_items(parser p, token.token term) -> ast._mod {\n-    parse_use_and_imports(p);\n+    parse_view(p);\n \n     let vec[@ast.item] items = vec();\n     auto index = new_str_hash[ast.mod_index_entry]();\n@@ -1721,15 +1721,15 @@ impure fn parse_import(parser p) -> @ast.import_node {\n     fail;\n }\n \n-impure fn parse_use_and_imports(parser p) -> vec[ast.use_or_import] {\n-    let vec[ast.use_or_import] items = vec();\n+impure fn parse_view(parser p) -> vec[ast.view_item] {\n+    let vec[ast.view_item] items = vec();\n     while (true) {\n         alt (p.peek()) {\n             case (token.USE) {\n-                items += vec(ast.use_or_import_use(parse_use(p)));\n+                items += vec(ast.view_item_use(parse_use(p)));\n             }\n             case (token.IMPORT) {\n-                items += vec(ast.use_or_import_import(parse_import(p)));\n+                items += vec(ast.view_item_import(parse_import(p)));\n             }\n             case (_) {\n                 ret items;"}]}