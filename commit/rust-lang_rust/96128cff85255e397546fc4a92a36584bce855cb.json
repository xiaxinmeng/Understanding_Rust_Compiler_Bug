{"sha": "96128cff85255e397546fc4a92a36584bce855cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MTI4Y2ZmODUyNTVlMzk3NTQ2ZmM0YTkyYTM2NTg0YmNlODU1Y2I=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-12T06:43:29Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-12T06:43:29Z"}, "message": "Update for changes in rustc.", "tree": {"sha": "7e24bd899c706762c2eaaef73a537a69ad4b660b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e24bd899c706762c2eaaef73a537a69ad4b660b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96128cff85255e397546fc4a92a36584bce855cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96128cff85255e397546fc4a92a36584bce855cb", "html_url": "https://github.com/rust-lang/rust/commit/96128cff85255e397546fc4a92a36584bce855cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96128cff85255e397546fc4a92a36584bce855cb/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caaec388b5dea182daacf99826ad5aad576d8cc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/caaec388b5dea182daacf99826ad5aad576d8cc9", "html_url": "https://github.com/rust-lang/rust/commit/caaec388b5dea182daacf99826ad5aad576d8cc9"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4c608eb20cbb272ca04d93fcc7e310972b6a653a", "filename": "src/interpreter.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/96128cff85255e397546fc4a92a36584bce855cb/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96128cff85255e397546fc4a92a36584bce855cb/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=96128cff85255e397546fc4a92a36584bce855cb", "patch": "@@ -161,7 +161,7 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n                 mir::Terminator::Return => break,\n                 mir::Terminator::Goto { target } => block = target,\n \n-                mir::Terminator::Call { ref data, targets } => {\n+                mir::Terminator::Call { ref data, targets: (success_target, _panic_target) } => {\n                     let mir::CallData { ref destination, ref func, ref args } = *data;\n \n                     let ptr = self.eval_lvalue(destination);\n@@ -174,16 +174,16 @@ impl<'a, 'tcx> Interpreter<'a, 'tcx> {\n                             args.iter().map(|arg| self.eval_operand(arg)).collect();\n \n                         self.call(mir, &arg_vals, ptr);\n-                        block = targets[0];\n+                        block = success_target\n                     } else {\n                         panic!(\"tried to call a non-function value: {:?}\", func_val);\n                     }\n                 }\n \n-                mir::Terminator::If { ref cond, targets } => {\n+                mir::Terminator::If { ref cond, targets: (then_target, else_target) } => {\n                     match self.eval_operand(cond) {\n-                        Value::Bool(true) => block = targets[0],\n-                        Value::Bool(false) => block = targets[1],\n+                        Value::Bool(true) => block = then_target,\n+                        Value::Bool(false) => block = else_target,\n                         cond_val => panic!(\"Non-boolean `if` condition value: {:?}\", cond_val),\n                     }\n                 }"}]}