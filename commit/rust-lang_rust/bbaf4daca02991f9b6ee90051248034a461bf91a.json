{"sha": "bbaf4daca02991f9b6ee90051248034a461bf91a", "node_id": "C_kwDOAAsO6NoAKGJiYWY0ZGFjYTAyOTkxZjliNmVlOTAwNTEyNDgwMzRhNDYxYmY5MWE", "commit": {"author": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T11:37:41Z"}, "committer": {"name": "Amos Wenger", "email": "amoswenger@gmail.com", "date": "2022-07-21T11:37:41Z"}, "message": "Pass tidy checks", "tree": {"sha": "b7c56359152cd67684d1160cede516935c9bbdb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7c56359152cd67684d1160cede516935c9bbdb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbaf4daca02991f9b6ee90051248034a461bf91a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbaf4daca02991f9b6ee90051248034a461bf91a", "html_url": "https://github.com/rust-lang/rust/commit/bbaf4daca02991f9b6ee90051248034a461bf91a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbaf4daca02991f9b6ee90051248034a461bf91a/comments", "author": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fasterthanlime", "id": 7998310, "node_id": "MDQ6VXNlcjc5OTgzMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7998310?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fasterthanlime", "html_url": "https://github.com/fasterthanlime", "followers_url": "https://api.github.com/users/fasterthanlime/followers", "following_url": "https://api.github.com/users/fasterthanlime/following{/other_user}", "gists_url": "https://api.github.com/users/fasterthanlime/gists{/gist_id}", "starred_url": "https://api.github.com/users/fasterthanlime/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fasterthanlime/subscriptions", "organizations_url": "https://api.github.com/users/fasterthanlime/orgs", "repos_url": "https://api.github.com/users/fasterthanlime/repos", "events_url": "https://api.github.com/users/fasterthanlime/events{/privacy}", "received_events_url": "https://api.github.com/users/fasterthanlime/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdddd832240efc0f1966c90aab75ad24a5d12fac", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdddd832240efc0f1966c90aab75ad24a5d12fac", "html_url": "https://github.com/rust-lang/rust/commit/fdddd832240efc0f1966c90aab75ad24a5d12fac"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "a8c732f31541daa12827a51f67d12b61cd248b66", "filename": "crates/proc-macro-srv/build.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fbuild.rs?ref=bbaf4daca02991f9b6ee90051248034a461bf91a", "patch": "@@ -1,9 +1,9 @@\n+//! Determine rustc version `proc-macro-srv` (and thus the sysroot ABI) is\n+//! build with and make it accessible at runtime for ABI selection.\n+\n use std::{env, fs::File, io::Write, path::PathBuf, process::Command};\n \n fn main() {\n-    // Determine rustc version `proc-macro-srv` (and thus the sysroot ABI) is\n-    // build with and make it accessible at runtime for ABI selection.\n-\n     let mut path = PathBuf::from(env::var_os(\"OUT_DIR\").unwrap());\n     path.push(\"rustc_version.rs\");\n     let mut f = File::create(&path).unwrap();"}, {"sha": "69f1e13fb06d2e75aa95069af118d138e8ada786", "filename": "crates/proc-macro-srv/src/abis/abi_sysroot/ra_server.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server.rs?ref=bbaf4daca02991f9b6ee90051248034a461bf91a", "patch": "@@ -82,7 +82,7 @@ impl server::FreeFunctions for RustAnalyzer {\n         &mut self,\n         s: &str,\n     ) -> Result<bridge::Literal<Self::Span, Self::Symbol>, ()> {\n-        // TODO: keep track of LitKind and Suffix\n+        // FIXME: keep track of LitKind and Suffix\n         let symbol = SYMBOL_INTERNER.lock().unwrap().intern(s);\n         Ok(bridge::Literal {\n             kind: bridge::LitKind::Err,\n@@ -391,8 +391,9 @@ impl server::MultiSpan for RustAnalyzer {\n }\n \n impl server::Symbol for RustAnalyzer {\n-    fn normalize_and_validate_ident(&mut self, _string: &str) -> Result<Self::Symbol, ()> {\n-        todo!()\n+    fn normalize_and_validate_ident(&mut self, string: &str) -> Result<Self::Symbol, ()> {\n+        // FIXME: nfc-normalize and validate idents\n+        Ok(<Self as server::Server>::intern_symbol(string))\n     }\n }\n "}, {"sha": "d16c2d2244052b45da7841b544cd5c55719684ff", "filename": "crates/proc-macro-srv/src/abis/abi_sysroot/ra_server/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Fsymbol.rs?ref=bbaf4daca02991f9b6ee90051248034a461bf91a", "patch": "@@ -1,3 +1,5 @@\n+//! Symbol interner for proc-macro-srv\n+\n use once_cell::sync::Lazy;\n use std::{collections::HashMap, sync::Mutex};\n use tt::SmolStr;"}, {"sha": "113bb52c1af5324fc5573ec2f8c074a1d14437e6", "filename": "crates/proc-macro-srv/src/abis/abi_sysroot/ra_server/token_stream.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Ftoken_stream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbaf4daca02991f9b6ee90051248034a461bf91a/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Fabis%2Fabi_sysroot%2Fra_server%2Ftoken_stream.rs?ref=bbaf4daca02991f9b6ee90051248034a461bf91a", "patch": "@@ -1,3 +1,5 @@\n+//! TokenStream implementation used by sysroot ABI\n+\n use tt::TokenTree;\n \n #[derive(Debug, Default, Clone)]"}]}