{"sha": "9e7131a0d37f6342322cecf7d4dbec6fef92d925", "node_id": "C_kwDOAAsO6NoAKDllNzEzMWEwZDM3ZjYzNDIzMjJjZWNmN2Q0ZGJlYzZmZWY5MmQ5MjU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-02-24T20:42:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-24T20:42:17Z"}, "message": "Rollup merge of #94315 - lcnr:auto-trait-lint-update, r=oli-obk\n\nupdate auto trait lint for `PhantomData`\n\ncc https://github.com/rust-lang/rust/issues/93367#issuecomment-1047898410", "tree": {"sha": "137fd71ccb4976adcf0542e7aa6b0b49dad93c95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/137fd71ccb4976adcf0542e7aa6b0b49dad93c95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e7131a0d37f6342322cecf7d4dbec6fef92d925", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiF+2pCRBK7hj4Ov3rIwAAASYIAFjrgvXxxwTNWnwkLXgMd/B0\nUhjSlxWAOfwTgCEQPwLKcD69o3O2z5YNC07GQ/jfFxVrfrxFzml4w0v2zfe93yT4\nqvbR+4nf9lIwpR/p6c90c5XkpSrbkhC2WXjpF7Mn8emeNXOT9HHdl5MzqnOV0mE1\nDdZGJO8m3vrPts3JutC7afcSq/J+ql1Dts1mz01ew+jdHaY/4ULSWr8AbhZrHdyX\njZ0XPKiVi+d+4I+Dl1KnNvRCWnm5hYtUPW+XYJOQp1IACOGHVNKvs58NDq3DGAjy\n/exs6ZiL1T/z5qVYYOCYckq4gYmhcieW3M/nSnBwLEHRnuUcuun0Jw2oN+LufvI=\n=xZ//\n-----END PGP SIGNATURE-----\n", "payload": "tree 137fd71ccb4976adcf0542e7aa6b0b49dad93c95\nparent 787c6f3365f9327e3d6c59d7ec157b390606a402\nparent 70018c19cb34679e6de8b18f84c264abe280f28a\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1645735337 +0100\ncommitter GitHub <noreply@github.com> 1645735337 +0100\n\nRollup merge of #94315 - lcnr:auto-trait-lint-update, r=oli-obk\n\nupdate auto trait lint for `PhantomData`\n\ncc https://github.com/rust-lang/rust/issues/93367#issuecomment-1047898410\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e7131a0d37f6342322cecf7d4dbec6fef92d925", "html_url": "https://github.com/rust-lang/rust/commit/9e7131a0d37f6342322cecf7d4dbec6fef92d925", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e7131a0d37f6342322cecf7d4dbec6fef92d925/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "787c6f3365f9327e3d6c59d7ec157b390606a402", "url": "https://api.github.com/repos/rust-lang/rust/commits/787c6f3365f9327e3d6c59d7ec157b390606a402", "html_url": "https://github.com/rust-lang/rust/commit/787c6f3365f9327e3d6c59d7ec157b390606a402"}, {"sha": "70018c19cb34679e6de8b18f84c264abe280f28a", "url": "https://api.github.com/repos/rust-lang/rust/commits/70018c19cb34679e6de8b18f84c264abe280f28a", "html_url": "https://github.com/rust-lang/rust/commit/70018c19cb34679e6de8b18f84c264abe280f28a"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "811136a7eb4ee573aeb6237f2592fef392e387de", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e7131a0d37f6342322cecf7d4dbec6fef92d925/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e7131a0d37f6342322cecf7d4dbec6fef92d925/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=9e7131a0d37f6342322cecf7d4dbec6fef92d925", "patch": "@@ -439,6 +439,7 @@ fn fast_reject_auto_impl<'tcx>(tcx: TyCtxt<'tcx>, trait_def_id: DefId, self_ty:\n             }\n \n             match t.kind() {\n+                ty::Adt(def, substs) if def.is_phantom_data() => substs.super_visit_with(self),\n                 ty::Adt(def, substs) => {\n                     // @lcnr: This is the only place where cycles can happen. We avoid this\n                     // by only visiting each `DefId` once."}, {"sha": "1574a7e02e97fd7b5548217d8491ab86543e53eb", "filename": "src/test/ui/auto-traits/suspicious-impls-lint.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9e7131a0d37f6342322cecf7d4dbec6fef92d925/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e7131a0d37f6342322cecf7d4dbec6fef92d925/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.rs?ref=9e7131a0d37f6342322cecf7d4dbec6fef92d925", "patch": "@@ -1,5 +1,7 @@\n #![deny(suspicious_auto_trait_impls)]\n \n+use std::marker::PhantomData;\n+\n struct MayImplementSendOk<T>(T);\n unsafe impl<T: Send> Send for MayImplementSendOk<T> {} // ok\n \n@@ -31,4 +33,12 @@ unsafe impl<T: Send> Send for TwoParamsSame<T, T> {}\n //~^ ERROR\n //~| WARNING this will change its meaning\n \n+pub struct WithPhantomDataNonSend<T, U>(PhantomData<*const T>, U);\n+unsafe impl<T> Send for WithPhantomDataNonSend<T, i8> {} // ok\n+\n+pub struct WithPhantomDataSend<T, U>(PhantomData<T>, U);\n+unsafe impl<T> Send for WithPhantomDataSend<*const T, i8> {}\n+//~^ ERROR\n+//~| WARNING this will change its meaning\n+\n fn main() {}"}, {"sha": "084bfef49c029f5727cc3cdad9605df8de37491e", "filename": "src/test/ui/auto-traits/suspicious-impls-lint.stderr", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9e7131a0d37f6342322cecf7d4dbec6fef92d925/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9e7131a0d37f6342322cecf7d4dbec6fef92d925/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-traits%2Fsuspicious-impls-lint.stderr?ref=9e7131a0d37f6342322cecf7d4dbec6fef92d925", "patch": "@@ -1,5 +1,5 @@\n error: cross-crate traits with a default impl, like `Send`, should not be specialized\n-  --> $DIR/suspicious-impls-lint.rs:7:1\n+  --> $DIR/suspicious-impls-lint.rs:9:1\n    |\n LL | unsafe impl<T: Send> Send for MayImplementSendErr<&T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -12,41 +12,56 @@ LL | #![deny(suspicious_auto_trait_impls)]\n    = warning: this will change its meaning in a future release!\n    = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n note: try using the same sequence of generic parameters as the struct definition\n-  --> $DIR/suspicious-impls-lint.rs:6:1\n+  --> $DIR/suspicious-impls-lint.rs:8:1\n    |\n LL | struct MayImplementSendErr<T>(T);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `&T` is not a generic parameter\n \n error: cross-crate traits with a default impl, like `Send`, should not be specialized\n-  --> $DIR/suspicious-impls-lint.rs:19:1\n+  --> $DIR/suspicious-impls-lint.rs:21:1\n    |\n LL | unsafe impl Send for ContainsVec<i32> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this will change its meaning in a future release!\n    = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n note: try using the same sequence of generic parameters as the struct definition\n-  --> $DIR/suspicious-impls-lint.rs:18:1\n+  --> $DIR/suspicious-impls-lint.rs:20:1\n    |\n LL | struct ContainsVec<T>(Vec<T>);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `i32` is not a generic parameter\n \n error: cross-crate traits with a default impl, like `Send`, should not be specialized\n-  --> $DIR/suspicious-impls-lint.rs:30:1\n+  --> $DIR/suspicious-impls-lint.rs:32:1\n    |\n LL | unsafe impl<T: Send> Send for TwoParamsSame<T, T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this will change its meaning in a future release!\n    = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n note: try using the same sequence of generic parameters as the struct definition\n-  --> $DIR/suspicious-impls-lint.rs:29:1\n+  --> $DIR/suspicious-impls-lint.rs:31:1\n    |\n LL | struct TwoParamsSame<T, U>(T, U);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: `T` is mentioned multiple times\n \n-error: aborting due to 3 previous errors\n+error: cross-crate traits with a default impl, like `Send`, should not be specialized\n+  --> $DIR/suspicious-impls-lint.rs:40:1\n+   |\n+LL | unsafe impl<T> Send for WithPhantomDataSend<*const T, i8> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = warning: this will change its meaning in a future release!\n+   = note: for more information, see issue #93367 <https://github.com/rust-lang/rust/issues/93367>\n+note: try using the same sequence of generic parameters as the struct definition\n+  --> $DIR/suspicious-impls-lint.rs:39:1\n+   |\n+LL | pub struct WithPhantomDataSend<T, U>(PhantomData<T>, U);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: `*const T` is not a generic parameter\n+\n+error: aborting due to 4 previous errors\n "}]}