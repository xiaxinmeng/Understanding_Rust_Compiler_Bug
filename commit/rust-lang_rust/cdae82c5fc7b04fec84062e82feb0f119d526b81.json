{"sha": "cdae82c5fc7b04fec84062e82feb0f119d526b81", "node_id": "C_kwDOAAsO6NoAKGNkYWU4MmM1ZmM3YjA0ZmVjODQwNjJlODJmZWIwZjExOWQ1MjZiODE", "commit": {"author": {"name": "John Millikin", "email": "john@john-millikin.com", "date": "2022-09-28T22:32:15Z"}, "committer": {"name": "John Millikin", "email": "john@john-millikin.com", "date": "2022-09-28T22:32:15Z"}, "message": "nonzero_negation_ops: Set `issue = \"102443\"`.", "tree": {"sha": "6cb69e6ae400045068f38d7150613bcfd91123dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cb69e6ae400045068f38d7150613bcfd91123dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdae82c5fc7b04fec84062e82feb0f119d526b81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdae82c5fc7b04fec84062e82feb0f119d526b81", "html_url": "https://github.com/rust-lang/rust/commit/cdae82c5fc7b04fec84062e82feb0f119d526b81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdae82c5fc7b04fec84062e82feb0f119d526b81/comments", "author": {"login": "jmillikin", "id": 646128, "node_id": "MDQ6VXNlcjY0NjEyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/646128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmillikin", "html_url": "https://github.com/jmillikin", "followers_url": "https://api.github.com/users/jmillikin/followers", "following_url": "https://api.github.com/users/jmillikin/following{/other_user}", "gists_url": "https://api.github.com/users/jmillikin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmillikin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmillikin/subscriptions", "organizations_url": "https://api.github.com/users/jmillikin/orgs", "repos_url": "https://api.github.com/users/jmillikin/repos", "events_url": "https://api.github.com/users/jmillikin/events{/privacy}", "received_events_url": "https://api.github.com/users/jmillikin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jmillikin", "id": 646128, "node_id": "MDQ6VXNlcjY0NjEyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/646128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jmillikin", "html_url": "https://github.com/jmillikin", "followers_url": "https://api.github.com/users/jmillikin/followers", "following_url": "https://api.github.com/users/jmillikin/following{/other_user}", "gists_url": "https://api.github.com/users/jmillikin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jmillikin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jmillikin/subscriptions", "organizations_url": "https://api.github.com/users/jmillikin/orgs", "repos_url": "https://api.github.com/users/jmillikin/repos", "events_url": "https://api.github.com/users/jmillikin/events{/privacy}", "received_events_url": "https://api.github.com/users/jmillikin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "259bbfbc3dd5854f8ee3b89f921ac0812e43bb79", "url": "https://api.github.com/repos/rust-lang/rust/commits/259bbfbc3dd5854f8ee3b89f921ac0812e43bb79", "html_url": "https://github.com/rust-lang/rust/commit/259bbfbc3dd5854f8ee3b89f921ac0812e43bb79"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1e6e1a155ef5dff117a50601e1887134a8459b25", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cdae82c5fc7b04fec84062e82feb0f119d526b81/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdae82c5fc7b04fec84062e82feb0f119d526b81/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=cdae82c5fc7b04fec84062e82feb0f119d526b81", "patch": "@@ -743,7 +743,7 @@ macro_rules! nonzero_signed_operations {\n                 /// ```\n                 #[must_use]\n                 #[inline(always)]\n-                #[unstable(feature = \"nonzero_negation_ops\", issue = \"none\")]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n                 pub const fn is_negative(self) -> bool {\n                     self.get().is_negative()\n                 }\n@@ -769,7 +769,7 @@ macro_rules! nonzero_signed_operations {\n                 /// # }\n                 /// ```\n                 #[inline]\n-                #[unstable(feature = \"nonzero_negation_ops\", issue = \"none\")]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n                 pub const fn checked_neg(self) -> Option<$Ty> {\n                     if let Some(result) = self.get().checked_neg() {\n                         // SAFETY: negation of nonzero cannot yield zero values.\n@@ -802,7 +802,7 @@ macro_rules! nonzero_signed_operations {\n                 /// # }\n                 /// ```\n                 #[inline]\n-                #[unstable(feature = \"nonzero_negation_ops\", issue = \"none\")]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n                 pub const fn overflowing_neg(self) -> ($Ty, bool) {\n                     let (result, overflow) = self.get().overflowing_neg();\n                     // SAFETY: negation of nonzero cannot yield zero values.\n@@ -836,7 +836,7 @@ macro_rules! nonzero_signed_operations {\n                 /// # }\n                 /// ```\n                 #[inline]\n-                #[unstable(feature = \"nonzero_negation_ops\", issue = \"none\")]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n                 pub const fn saturating_neg(self) -> $Ty {\n                     if let Some(result) = self.checked_neg() {\n                         return result;\n@@ -869,7 +869,7 @@ macro_rules! nonzero_signed_operations {\n                 /// # }\n                 /// ```\n                 #[inline]\n-                #[unstable(feature = \"nonzero_negation_ops\", issue = \"none\")]\n+                #[unstable(feature = \"nonzero_negation_ops\", issue = \"102443\")]\n                 pub const fn wrapping_neg(self) -> $Ty {\n                     let result = self.get().wrapping_neg();\n                     // SAFETY: negation of nonzero cannot yield zero values."}]}