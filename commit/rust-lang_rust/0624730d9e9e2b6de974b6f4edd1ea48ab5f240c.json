{"sha": "0624730d9e9e2b6de974b6f4edd1ea48ab5f240c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MjQ3MzBkOWU5ZTJiNmRlOTc0YjZmNGVkZDFlYTQ4YWI1ZjI0MGM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-06T20:50:35Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-11-13T18:45:38Z"}, "message": "add forwarding specializations for &mut variants\n\n`impl Write for &mut T where T: Write`, thus the same should\napply to the specialization traits", "tree": {"sha": "e0135b64e2cede2beec0eb5fd69e2c572c45e41a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0135b64e2cede2beec0eb5fd69e2c572c45e41a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c", "html_url": "https://github.com/rust-lang/rust/commit/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd3bddc044728e040d6a22c684f1b9f711566772", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd3bddc044728e040d6a22c684f1b9f711566772", "html_url": "https://github.com/rust-lang/rust/commit/cd3bddc044728e040d6a22c684f1b9f711566772"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "e8cbe6a7e715a084201b26bdc9b6e5637e3f5a86", "filename": "library/std/src/io/copy.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0624730d9e9e2b6de974b6f4edd1ea48ab5f240c/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fcopy.rs?ref=0624730d9e9e2b6de974b6f4edd1ea48ab5f240c", "patch": "@@ -235,6 +235,27 @@ mod kernel_copy {\n         fn properties(&self) -> CopyParams;\n     }\n \n+    impl<T> CopyRead for &mut T where T: CopyRead {\n+        fn drain_to<W: Write>(&mut self, writer: &mut W, limit: u64) -> Result<u64> {\n+            (**self).drain_to(writer, limit)\n+        }\n+\n+        fn min_limit(&self) -> u64 {\n+            (**self).min_limit()\n+        }\n+\n+        fn properties(&self) -> CopyParams {\n+            (**self).properties()\n+        }\n+    }\n+\n+    impl<T> CopyWrite for &mut T where T: CopyWrite {\n+        fn properties(&self) -> CopyParams {\n+            (**self).properties()\n+        }\n+    }\n+\n+\n     impl CopyRead for File {\n         fn properties(&self) -> CopyParams {\n             CopyParams(fd_to_meta(self), Some(self.as_raw_fd()))"}]}