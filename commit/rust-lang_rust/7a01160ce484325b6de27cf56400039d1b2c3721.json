{"sha": "7a01160ce484325b6de27cf56400039d1b2c3721", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMDExNjBjZTQ4NDMyNWI2ZGUyN2NmNTY0MDAwMzlkMWIyYzM3MjE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-09T14:07:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-09T14:07:00Z"}, "message": "more erroneous-const tests", "tree": {"sha": "e50c28a6f8e74fd7eeb9d70f62f263bf00302637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e50c28a6f8e74fd7eeb9d70f62f263bf00302637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a01160ce484325b6de27cf56400039d1b2c3721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a01160ce484325b6de27cf56400039d1b2c3721", "html_url": "https://github.com/rust-lang/rust/commit/7a01160ce484325b6de27cf56400039d1b2c3721", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a01160ce484325b6de27cf56400039d1b2c3721/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a878f07e974232863c8c8c143970dd8a370f751", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a878f07e974232863c8c8c143970dd8a370f751", "html_url": "https://github.com/rust-lang/rust/commit/8a878f07e974232863c8c8c143970dd8a370f751"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "bee5a7cb3ba7255fce8b1c48f497be30b7f0a277", "filename": "src/test/ui/consts/const-eval/erroneous-const.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.rs?ref=7a01160ce484325b6de27cf56400039d1b2c3721", "patch": "@@ -10,6 +10,8 @@ impl<T> PrintName<T> {\n \n const fn no_codegen<T>() {\n     if false {\n+        // This bad constant is only used in dead code in a no-codegen function... and yet we still\n+        // must make sure that the build fails.\n         let _ = PrintName::<T>::VOID; //~ERROR could not evaluate static initializer\n     }\n }"}, {"sha": "7e2a60929c73d36a278389859fe79ade6c460f3e", "filename": "src/test/ui/consts/const-eval/erroneous-const.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const.stderr?ref=7a01160ce484325b6de27cf56400039d1b2c3721", "patch": "@@ -27,16 +27,16 @@ LL | #![warn(const_err, unconditional_panic)]\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n \n error[E0080]: could not evaluate static initializer\n-  --> $DIR/erroneous-const.rs:13:17\n+  --> $DIR/erroneous-const.rs:15:17\n    |\n LL |         let _ = PrintName::<T>::VOID;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n    |                 |\n    |                 referenced constant has errors\n-   |                 inside `no_codegen::<i32>` at $DIR/erroneous-const.rs:13:17\n+   |                 inside `no_codegen::<i32>` at $DIR/erroneous-const.rs:15:17\n ...\n LL | pub static FOO: () = no_codegen::<i32>();\n-   |                      ------------------- inside `FOO` at $DIR/erroneous-const.rs:17:22\n+   |                      ------------------- inside `FOO` at $DIR/erroneous-const.rs:19:22\n \n error: aborting due to previous error; 2 warnings emitted\n "}, {"sha": "aa0f093bf6293c73f420d9d5412efec36492d49e", "filename": "src/test/ui/consts/const-eval/erroneous-const2.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.rs?ref=7a01160ce484325b6de27cf56400039d1b2c3721", "patch": "@@ -0,0 +1,21 @@\n+//! Make sure we error on erroneous consts even if they are unused.\n+#![warn(const_err, unconditional_panic)]\n+\n+struct PrintName<T>(T);\n+impl<T> PrintName<T> {\n+    const VOID: () = [()][2]; //~WARN any use of this value will cause an error\n+    //~^ WARN this operation will panic at runtime\n+    //~| WARN this was previously accepted by the compiler but is being phased out\n+}\n+\n+pub static FOO: () = {\n+    if false {\n+        // This bad constant is only used in dead code in a static initializer... and yet we still\n+        // must make sure that the build fails.\n+        let _ = PrintName::<i32>::VOID; //~ERROR could not evaluate static initializer\n+    }\n+};\n+\n+fn main() {\n+    FOO\n+}"}, {"sha": "813d3ee249fb2be97deaafed153c9deb4ef0430f", "filename": "src/test/ui/consts/const-eval/erroneous-const2.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7a01160ce484325b6de27cf56400039d1b2c3721/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ferroneous-const2.stderr?ref=7a01160ce484325b6de27cf56400039d1b2c3721", "patch": "@@ -0,0 +1,37 @@\n+warning: this operation will panic at runtime\n+  --> $DIR/erroneous-const2.rs:6:22\n+   |\n+LL |     const VOID: () = [()][2];\n+   |                      ^^^^^^^ index out of bounds: the length is 1 but the index is 2\n+   |\n+note: the lint level is defined here\n+  --> $DIR/erroneous-const2.rs:2:20\n+   |\n+LL | #![warn(const_err, unconditional_panic)]\n+   |                    ^^^^^^^^^^^^^^^^^^^\n+\n+warning: any use of this value will cause an error\n+  --> $DIR/erroneous-const2.rs:6:22\n+   |\n+LL |     const VOID: () = [()][2];\n+   |     -----------------^^^^^^^-\n+   |                      |\n+   |                      index out of bounds: the length is 1 but the index is 2\n+   |\n+note: the lint level is defined here\n+  --> $DIR/erroneous-const2.rs:2:9\n+   |\n+LL | #![warn(const_err, unconditional_panic)]\n+   |         ^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>\n+\n+error[E0080]: could not evaluate static initializer\n+  --> $DIR/erroneous-const2.rs:15:17\n+   |\n+LL |         let _ = PrintName::<i32>::VOID;\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n+\n+error: aborting due to previous error; 2 warnings emitted\n+\n+For more information about this error, try `rustc --explain E0080`."}]}