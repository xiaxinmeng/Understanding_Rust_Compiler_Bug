{"sha": "57bc1a982e20524bbaac892c04e537c8f714dce6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YmMxYTk4MmUyMDUyNGJiYWFjODkyYzA0ZTUzN2M4ZjcxNGRjZTY=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-20T18:17:09Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-12-20T18:17:09Z"}, "message": "Add arm syscalls", "tree": {"sha": "c9c7caff6dd08527900752354344a48f6cc43852", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9c7caff6dd08527900752354344a48f6cc43852"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57bc1a982e20524bbaac892c04e537c8f714dce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57bc1a982e20524bbaac892c04e537c8f714dce6", "html_url": "https://github.com/rust-lang/rust/commit/57bc1a982e20524bbaac892c04e537c8f714dce6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57bc1a982e20524bbaac892c04e537c8f714dce6/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d7c2ecf2e7b73f067c093ce9770ec187f9b3ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7c2ecf2e7b73f067c093ce9770ec187f9b3ea1", "html_url": "https://github.com/rust-lang/rust/commit/6d7c2ecf2e7b73f067c093ce9770ec187f9b3ea1"}], "stats": {"total": 80, "additions": 78, "deletions": 2}, "files": [{"sha": "6e8bc2c0e6365df2548a3ddc89ddd722cbf6c8e0", "filename": "src/libstd/sys/redox/syscall/arch/arm.rs", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Farm.rs?ref=57bc1a982e20524bbaac892c04e537c8f714dce6", "patch": "@@ -0,0 +1,72 @@\n+use super::error::{Error, Result};\n+\n+pub unsafe fn syscall0(mut a: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+pub unsafe fn syscall1(mut a: usize, b: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+// Clobbers all registers - special for clone\n+pub unsafe fn syscall1_clobber(mut a: usize, b: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b)\n+        : \"memory\", \"r0\", \"r1\", \"r2\", \"r3\", \"r4\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+pub unsafe fn syscall2(mut a: usize, b: usize, c: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b), \"{r1}\"(c)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+pub unsafe fn syscall3(mut a: usize, b: usize, c: usize, d: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b), \"{r1}\"(c), \"{r2}\"(d)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+pub unsafe fn syscall4(mut a: usize, b: usize, c: usize, d: usize, e: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b), \"{r1}\"(c), \"{r2}\"(d), \"{r3}\"(e)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}\n+\n+pub unsafe fn syscall5(mut a: usize, b: usize, c: usize, d: usize, e: usize, f: usize) -> Result<usize> {\n+    asm!(\"swi $$0\"\n+        : \"={r0}\"(a)\n+        : \"{r7}\"(a), \"{r0}\"(b), \"{r1}\"(c), \"{r2}\"(d), \"{r3}\"(e), \"{r4}\"(f)\n+        : \"memory\"\n+        : \"volatile\");\n+\n+    Error::demux(a)\n+}"}, {"sha": "4bb6060c43e067e9aacb4a1ade45f8ca81ea8e8e", "filename": "src/libstd/sys/redox/syscall/arch/x86.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86.rs?ref=57bc1a982e20524bbaac892c04e537c8f714dce6", "previous_filename": "src/libstd/sys/redox/syscall/x86.rs"}, {"sha": "6c1f96adef925f80328f0a7f4ec2ab102d015466", "filename": "src/libstd/sys/redox/syscall/arch/x86_64.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Farch%2Fx86_64.rs?ref=57bc1a982e20524bbaac892c04e537c8f714dce6", "previous_filename": "src/libstd/sys/redox/syscall/x86_64.rs"}, {"sha": "34a35b967b1bb6733d66f31baf7a5b576cab2158", "filename": "src/libstd/sys/redox/syscall/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57bc1a982e20524bbaac892c04e537c8f714dce6/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fsyscall%2Fmod.rs?ref=57bc1a982e20524bbaac892c04e537c8f714dce6", "patch": "@@ -6,12 +6,16 @@ pub use self::flag::*;\n pub use self::number::*;\n pub use self::scheme::*;\n \n+#[cfg(target_arch = \"arm\")]\n+#[path=\"arch/arm.rs\"]\n+mod arch;\n+\n #[cfg(target_arch = \"x86\")]\n-#[path=\"x86.rs\"]\n+#[path=\"arch/x86.rs\"]\n mod arch;\n \n #[cfg(target_arch = \"x86_64\")]\n-#[path=\"x86_64.rs\"]\n+#[path=\"arch/x86_64.rs\"]\n mod arch;\n \n /// Function definitions"}]}