{"sha": "acfe959701ce221af37516401726be6d2814cc3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZmU5NTk3MDFjZTIyMWFmMzc1MTY0MDE3MjZiZTZkMjgxNGNjM2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-02T12:37:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-02T12:37:33Z"}, "message": "Auto merge of #37054 - rednum:master, r=alexcrichton\n\nAdd or and or_else for ordering.\n\nFixes https://github.com/rust-lang/rust/issues/37053 (see discussion in rust-lang/rfcs#1677).", "tree": {"sha": "a7840216c0303ffa2a545bafc51a85c6c051033a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7840216c0303ffa2a545bafc51a85c6c051033a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acfe959701ce221af37516401726be6d2814cc3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acfe959701ce221af37516401726be6d2814cc3f", "html_url": "https://github.com/rust-lang/rust/commit/acfe959701ce221af37516401726be6d2814cc3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acfe959701ce221af37516401726be6d2814cc3f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a1fefa88849412f493ab941fb33f66c8868e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a1fefa88849412f493ab941fb33f66c8868e95", "html_url": "https://github.com/rust-lang/rust/commit/35a1fefa88849412f493ab941fb33f66c8868e95"}, {"sha": "655effedf25e2039d283b839429bf2f42b7012a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/655effedf25e2039d283b839429bf2f42b7012a4", "html_url": "https://github.com/rust-lang/rust/commit/655effedf25e2039d283b839429bf2f42b7012a4"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "0daf658a0f42da4e5736fb0cf29e1a7d8f1329a1", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=acfe959701ce221af37516401726be6d2814cc3f", "patch": "@@ -248,6 +248,80 @@ impl Ordering {\n             Greater => Less,\n         }\n     }\n+\n+    /// Chains two orderings.\n+    ///\n+    /// Returns `self` when it's not `Equal`. Otherwise returns `other`.\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ordering_chaining)]\n+    ///\n+    /// use std::cmp::Ordering;\n+    ///\n+    /// let result = Ordering::Equal.then(Ordering::Less);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.then(Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.then(Ordering::Greater);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Equal.then(Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Equal);\n+    ///\n+    /// let x: (i64, i64, i64) = (1, 2, 7);\n+    /// let y: (i64, i64, i64) = (1, 5, 3);\n+    /// let result = x.0.cmp(&y.0).then(x.1.cmp(&y.1)).then(x.2.cmp(&y.2));\n+    ///\n+    /// assert_eq!(result, Ordering::Less);\n+    /// ```\n+    #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n+    pub fn then(self, other: Ordering) -> Ordering {\n+        match self {\n+            Equal => other,\n+            _ => self,\n+        }\n+    }\n+\n+    /// Chains the ordering with the given function.\n+    ///\n+    /// Returns `self` when it's not `Equal`. Otherwise calls `f` and returns\n+    /// the result.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(ordering_chaining)]\n+    ///\n+    /// use std::cmp::Ordering;\n+    ///\n+    /// let result = Ordering::Equal.then_with(|| Ordering::Less);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.then_with(|| Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Less.then_with(|| Ordering::Greater);\n+    /// assert_eq!(result, Ordering::Less);\n+    ///\n+    /// let result = Ordering::Equal.then_with(|| Ordering::Equal);\n+    /// assert_eq!(result, Ordering::Equal);\n+    ///\n+    /// let x: (i64, i64, i64) = (1, 2, 7);\n+    /// let y: (i64, i64, i64)  = (1, 5, 3);\n+    /// let result = x.0.cmp(&y.0).then_with(|| x.1.cmp(&y.1)).then_with(|| x.2.cmp(&y.2));\n+    ///\n+    /// assert_eq!(result, Ordering::Less);\n+    /// ```\n+    #[unstable(feature = \"ordering_chaining\", issue = \"37053\")]\n+    pub fn then_with<F: FnOnce() -> Ordering>(self, f: F) -> Ordering {\n+        match self {\n+            Equal => f(),\n+            _ => self,\n+        }\n+    }\n }\n \n /// Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order)."}, {"sha": "e3c65ad8b33c019378ad6e53cbcbdb3295f0ec71", "filename": "src/libcoretest/cmp.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcoretest%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcoretest%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fcmp.rs?ref=acfe959701ce221af37516401726be6d2814cc3f", "patch": "@@ -41,6 +41,32 @@ fn test_ordering_order() {\n     assert_eq!(Greater.cmp(&Less), Greater);\n }\n \n+#[test]\n+fn test_ordering_then() {\n+    assert_eq!(Equal.then(Less), Less);\n+    assert_eq!(Equal.then(Equal), Equal);\n+    assert_eq!(Equal.then(Greater), Greater);\n+    assert_eq!(Less.then(Less), Less);\n+    assert_eq!(Less.then(Equal), Less);\n+    assert_eq!(Less.then(Greater), Less);\n+    assert_eq!(Greater.then(Less), Greater);\n+    assert_eq!(Greater.then(Equal), Greater);\n+    assert_eq!(Greater.then(Greater), Greater);\n+}\n+\n+#[test]\n+fn test_ordering_then_with() {\n+    assert_eq!(Equal.then_with(|| Less), Less);\n+    assert_eq!(Equal.then_with(|| Equal), Equal);\n+    assert_eq!(Equal.then_with(|| Greater), Greater);\n+    assert_eq!(Less.then_with(|| Less), Less);\n+    assert_eq!(Less.then_with(|| Equal), Less);\n+    assert_eq!(Less.then_with(|| Greater), Less);\n+    assert_eq!(Greater.then_with(|| Less), Greater);\n+    assert_eq!(Greater.then_with(|| Equal), Greater);\n+    assert_eq!(Greater.then_with(|| Greater), Greater);\n+}\n+\n #[test]\n fn test_user_defined_eq() {\n     // Our type."}, {"sha": "b8c01e570f5091d26fc24a6da770e019524c2465", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acfe959701ce221af37516401726be6d2814cc3f/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=acfe959701ce221af37516401726be6d2814cc3f", "patch": "@@ -34,6 +34,7 @@\n #![feature(unique)]\n #![feature(iter_max_by)]\n #![feature(iter_min_by)]\n+#![feature(ordering_chaining)]\n #![feature(result_unwrap_or_default)]\n \n extern crate core;"}]}