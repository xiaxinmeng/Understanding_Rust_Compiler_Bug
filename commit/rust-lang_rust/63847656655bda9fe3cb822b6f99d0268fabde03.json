{"sha": "63847656655bda9fe3cb822b6f99d0268fabde03", "node_id": "C_kwDOAAsO6NoAKDYzODQ3NjU2NjU1YmRhOWZlM2NiODIyYjZmOTlkMDI2OGZhYmRlMDM", "commit": {"author": {"name": "Marcel Hellwig", "email": "github@cookiesoft.de", "date": "2022-06-27T09:11:52Z"}, "committer": {"name": "Marcel Hellwig", "email": "github@cookiesoft.de", "date": "2022-06-28T06:03:48Z"}, "message": "parse `Cargo.toml` file in ui-cargo tests\n\ncompiletest_rs is not meant to test full cargo projects, but instead\nonly files.\nSo we need to parse the `Cargo.toml` file ourself and set the\ncorresponding environment variable. In this case we just set\n`CARGO_PKG_RUST_VERSION`, nothing more. But, of course, this can be\nextended.", "tree": {"sha": "f2597fa824b8226273f24b29d44b6ca9c18ddf0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2597fa824b8226273f24b29d44b6ca9c18ddf0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63847656655bda9fe3cb822b6f99d0268fabde03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63847656655bda9fe3cb822b6f99d0268fabde03", "html_url": "https://github.com/rust-lang/rust/commit/63847656655bda9fe3cb822b6f99d0268fabde03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63847656655bda9fe3cb822b6f99d0268fabde03/comments", "author": {"login": "hellow554", "id": 921462, "node_id": "MDQ6VXNlcjkyMTQ2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/921462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellow554", "html_url": "https://github.com/hellow554", "followers_url": "https://api.github.com/users/hellow554/followers", "following_url": "https://api.github.com/users/hellow554/following{/other_user}", "gists_url": "https://api.github.com/users/hellow554/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellow554/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellow554/subscriptions", "organizations_url": "https://api.github.com/users/hellow554/orgs", "repos_url": "https://api.github.com/users/hellow554/repos", "events_url": "https://api.github.com/users/hellow554/events{/privacy}", "received_events_url": "https://api.github.com/users/hellow554/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hellow554", "id": 921462, "node_id": "MDQ6VXNlcjkyMTQ2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/921462?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hellow554", "html_url": "https://github.com/hellow554", "followers_url": "https://api.github.com/users/hellow554/followers", "following_url": "https://api.github.com/users/hellow554/following{/other_user}", "gists_url": "https://api.github.com/users/hellow554/gists{/gist_id}", "starred_url": "https://api.github.com/users/hellow554/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hellow554/subscriptions", "organizations_url": "https://api.github.com/users/hellow554/orgs", "repos_url": "https://api.github.com/users/hellow554/repos", "events_url": "https://api.github.com/users/hellow554/events{/privacy}", "received_events_url": "https://api.github.com/users/hellow554/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83511d1d9a98b9506df710fb5bba3c20f57e8c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/83511d1d9a98b9506df710fb5bba3c20f57e8c85", "html_url": "https://github.com/rust-lang/rust/commit/83511d1d9a98b9506df710fb5bba3c20f57e8c85"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "fa4dd123ee9a51478e1ec80cdfb19f2c1aba7d1a", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63847656655bda9fe3cb822b6f99d0268fabde03/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/63847656655bda9fe3cb822b6f99d0268fabde03/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=63847656655bda9fe3cb822b6f99d0268fabde03", "patch": "@@ -31,6 +31,7 @@ termize = \"0.1\"\n compiletest_rs = { version = \"0.8\", features = [\"tmp\"] }\n tester = \"0.9\"\n regex = \"1.5\"\n+toml = \"0.5\"\n # This is used by the `collect-metadata` alias.\n filetime = \"0.2\"\n "}, {"sha": "319256814c3a6c2560d63e83d88e39222823b816", "filename": "tests/compile-test.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/63847656655bda9fe3cb822b6f99d0268fabde03/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63847656655bda9fe3cb822b6f99d0268fabde03/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=63847656655bda9fe3cb822b6f99d0268fabde03", "patch": "@@ -130,7 +130,7 @@ fn base_config(test_dir: &str) -> compiletest::Config {\n     let mut config = compiletest::Config {\n         edition: Some(\"2021\".into()),\n         mode: TestMode::Ui,\n-        ..compiletest::Config::default()\n+        ..Default::default()\n     };\n \n     if let Ok(filters) = env::var(\"TESTNAME\") {\n@@ -286,6 +286,24 @@ fn run_ui_cargo() {\n                 }\n \n                 env::set_current_dir(&src_path)?;\n+\n+                let cargo_toml_path = case.path().join(\"Cargo.toml\");\n+                let cargo_content = fs::read(&cargo_toml_path)?;\n+                let cargo_parsed: toml::Value = toml::from_str(\n+                    std::str::from_utf8(&cargo_content).expect(\"`Cargo.toml` is not a valid utf-8 file!\"),\n+                )\n+                .expect(\"Can't parse `Cargo.toml`\");\n+\n+                let _g = VarGuard::set(\"CARGO_MANIFEST_DIR\", case.path());\n+                let _h = VarGuard::set(\n+                    \"CARGO_PKG_RUST_VERSION\",\n+                    cargo_parsed\n+                        .get(\"package\")\n+                        .and_then(|p| p.get(\"rust-version\"))\n+                        .and_then(toml::Value::as_str)\n+                        .unwrap_or(\"\"),\n+                );\n+\n                 for file in fs::read_dir(&src_path)? {\n                     let file = file?;\n                     if file.file_type()?.is_dir() {"}, {"sha": "98697e001f99a69a0dd5ab6e467793127e8fc7ab", "filename": "tests/ui-cargo/multiple_config_files/warn/src/main.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63847656655bda9fe3cb822b6f99d0268fabde03/tests%2Fui-cargo%2Fmultiple_config_files%2Fwarn%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/63847656655bda9fe3cb822b6f99d0268fabde03/tests%2Fui-cargo%2Fmultiple_config_files%2Fwarn%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmultiple_config_files%2Fwarn%2Fsrc%2Fmain.stderr?ref=63847656655bda9fe3cb822b6f99d0268fabde03", "patch": "@@ -1,2 +1,2 @@\n-Using config file `$SRC_DIR/tests/ui-cargo/multiple_config_files/warn/.clippy.toml`\n-Warning: `$SRC_DIR/tests/ui-cargo/multiple_config_files/warn/clippy.toml` will be ignored.\n+Using config file `$SRC_DIR/.clippy.toml`\n+Warning: `$SRC_DIR/clippy.toml` will be ignored."}]}