{"sha": "0585c347401dce1e50cd742465b5cce9532d7e76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ODVjMzQ3NDAxZGNlMWU1MGNkNzQyNDY1YjVjY2U5NTMyZDdlNzY=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-02-06T18:38:27Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2021-02-06T18:38:27Z"}, "message": "Stabilize workspace wrapper.", "tree": {"sha": "0407c53296b1065ac6f76adeb9b18da677aa7ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0407c53296b1065ac6f76adeb9b18da677aa7ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0585c347401dce1e50cd742465b5cce9532d7e76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0585c347401dce1e50cd742465b5cce9532d7e76", "html_url": "https://github.com/rust-lang/rust/commit/0585c347401dce1e50cd742465b5cce9532d7e76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0585c347401dce1e50cd742465b5cce9532d7e76/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfb34c085ff5421ececed8e42b8a8a6fea18c0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb34c085ff5421ececed8e42b8a8a6fea18c0b7", "html_url": "https://github.com/rust-lang/rust/commit/dfb34c085ff5421ececed8e42b8a8a6fea18c0b7"}], "stats": {"total": 24, "additions": 1, "deletions": 23}, "files": [{"sha": "12bb909e15afb9a52aa1c6f3c9eeb63aa9b08780", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0585c347401dce1e50cd742465b5cce9532d7e76/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0585c347401dce1e50cd742465b5cce9532d7e76/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=0585c347401dce1e50cd742465b5cce9532d7e76", "patch": "@@ -59,7 +59,6 @@ pub fn main() {\n }\n \n struct ClippyCmd {\n-    unstable_options: bool,\n     cargo_subcommand: &'static str,\n     args: Vec<String>,\n     clippy_args: Vec<String>,\n@@ -105,21 +104,12 @@ impl ClippyCmd {\n         }\n \n         ClippyCmd {\n-            unstable_options,\n             cargo_subcommand,\n             args,\n             clippy_args,\n         }\n     }\n \n-    fn path_env(&self) -> &'static str {\n-        if self.unstable_options {\n-            \"RUSTC_WORKSPACE_WRAPPER\"\n-        } else {\n-            \"RUSTC_WRAPPER\"\n-        }\n-    }\n-\n     fn path() -> PathBuf {\n         let mut path = env::current_exe()\n             .expect(\"current executable path invalid\")\n@@ -156,7 +146,7 @@ impl ClippyCmd {\n             .map(|arg| format!(\"{}__CLIPPY_HACKERY__\", arg))\n             .collect();\n \n-        cmd.env(self.path_env(), Self::path())\n+        cmd.env(\"RUSTC_WORKSPACE_WRAPPER\", Self::path())\n             .envs(ClippyCmd::target_dir())\n             .env(\"CLIPPY_ARGS\", clippy_args)\n             .arg(self.cargo_subcommand)\n@@ -205,7 +195,6 @@ mod tests {\n             .map(ToString::to_string);\n         let cmd = ClippyCmd::new(args);\n         assert_eq!(\"fix\", cmd.cargo_subcommand);\n-        assert_eq!(\"RUSTC_WORKSPACE_WRAPPER\", cmd.path_env());\n         assert!(cmd.args.iter().any(|arg| arg.ends_with(\"unstable-options\")));\n     }\n \n@@ -232,16 +221,5 @@ mod tests {\n         let args = \"cargo clippy\".split_whitespace().map(ToString::to_string);\n         let cmd = ClippyCmd::new(args);\n         assert_eq!(\"check\", cmd.cargo_subcommand);\n-        assert_eq!(\"RUSTC_WRAPPER\", cmd.path_env());\n-    }\n-\n-    #[test]\n-    fn check_unstable() {\n-        let args = \"cargo clippy -Zunstable-options\"\n-            .split_whitespace()\n-            .map(ToString::to_string);\n-        let cmd = ClippyCmd::new(args);\n-        assert_eq!(\"check\", cmd.cargo_subcommand);\n-        assert_eq!(\"RUSTC_WORKSPACE_WRAPPER\", cmd.path_env());\n     }\n }"}]}