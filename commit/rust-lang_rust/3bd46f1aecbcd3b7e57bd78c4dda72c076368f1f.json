{"sha": "3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZDQ2ZjFhZWNiY2QzYjdlNTdiZDc4YzRkZGE3MmMwNzYzNjhmMWY=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2019-12-10T21:03:13Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2019-12-12T19:56:14Z"}, "message": "Update UI test expectations", "tree": {"sha": "c1702caad953381d6d7887f2787b274f62b743bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1702caad953381d6d7887f2787b274f62b743bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "html_url": "https://github.com/rust-lang/rust/commit/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf8c0d7a04eed6a1a5c245331dbcbf8e8a26ac8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf8c0d7a04eed6a1a5c245331dbcbf8e8a26ac8b", "html_url": "https://github.com/rust-lang/rust/commit/cf8c0d7a04eed6a1a5c245331dbcbf8e8a26ac8b"}], "stats": {"total": 92, "additions": 46, "deletions": 46}, "files": [{"sha": "e2870ef8062d36be12d5b5febaa76697afe0d203", "filename": "src/test/ui/autoderef-full-lval.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fautoderef-full-lval.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fautoderef-full-lval.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fautoderef-full-lval.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `std::boxed::Box<isize>`\n+error[E0369]: cannot add `std::boxed::Box<isize>` to `std::boxed::Box<isize>`\n   --> $DIR/autoderef-full-lval.rs:15:24\n    |\n LL |     let z: isize = a.x + b.y;\n@@ -8,7 +8,7 @@ LL |     let z: isize = a.x + b.y;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `std::boxed::Box<isize>`\n \n-error[E0369]: binary operation `+` cannot be applied to type `std::boxed::Box<isize>`\n+error[E0369]: cannot add `std::boxed::Box<isize>` to `std::boxed::Box<isize>`\n   --> $DIR/autoderef-full-lval.rs:21:33\n    |\n LL |     let answer: isize = forty.a + two.a;"}, {"sha": "6c405333ec681e06f95ca1f7ce65e7bc75cf988b", "filename": "src/test/ui/binary-op-on-double-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinary-op-on-double-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinary-op-on-double-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinary-op-on-double-ref.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `%` cannot be applied to type `&&{integer}`\n+error[E0369]: cannot mod `&&{integer}` by `{integer}`\n   --> $DIR/binary-op-on-double-ref.rs:4:11\n    |\n LL |         x % 2 == 0"}, {"sha": "9a0d301d86356e0911a30975e0a5c1c408bc96e9", "filename": "src/test/ui/binop/binop-bitxor-str.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-bitxor-str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-bitxor-str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fbinop-bitxor-str.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `^` cannot be applied to type `std::string::String`\n+error[E0369]: no implementation for `std::string::String ^ std::string::String`\n   --> $DIR/binop-bitxor-str.rs:3:37\n    |\n LL | fn main() { let x = \"a\".to_string() ^ \"b\".to_string(); }"}, {"sha": "ade220255893402315547b415f721f48b398e138", "filename": "src/test/ui/binop/binop-mul-bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-mul-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-mul-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fbinop-mul-bool.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `*` cannot be applied to type `bool`\n+error[E0369]: cannot multiply `bool` to `bool`\n   --> $DIR/binop-mul-bool.rs:3:26\n    |\n LL | fn main() { let x = true * false; }"}, {"sha": "ebf82079ef2e8b044c731d8f6318f9464a6ee3ad", "filename": "src/test/ui/binop/binop-typeck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-typeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fbinop%2Fbinop-typeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fbinop-typeck.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `bool`\n+error[E0369]: cannot add `{integer}` to `bool`\n   --> $DIR/binop-typeck.rs:6:15\n    |\n LL |     let z = x + y;"}, {"sha": "0ed26384f40643f84f44506f9c9eddb7e10a20db", "filename": "src/test/ui/for/for-loop-type-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ffor%2Ffor-loop-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ffor%2Ffor-loop-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffor%2Ffor-loop-type-error.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `()`\n+error[E0369]: cannot add `()` to `()`\n   --> $DIR/for-loop-type-error.rs:2:16\n    |\n LL |     let x = () + ();"}, {"sha": "00b9909af59791c09ebbd198f01d0b8d2bad05a7", "filename": "src/test/ui/issues/issue-14915.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-14915.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-14915.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14915.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `std::boxed::Box<isize>`\n+error[E0369]: cannot add `{integer}` to `std::boxed::Box<isize>`\n   --> $DIR/issue-14915.rs:6:22\n    |\n LL |     println!(\"{}\", x + 1);"}, {"sha": "a60fb24ec1209febc5da490b33aa475ac43db2f5", "filename": "src/test/ui/issues/issue-24363.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-24363.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-24363.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-24363.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -4,7 +4,7 @@ error[E0610]: `{integer}` is a primitive type and therefore doesn't have fields\n LL |     1.create_a_type_error[\n    |       ^^^^^^^^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `()`\n+error[E0369]: cannot add `()` to `()`\n   --> $DIR/issue-24363.rs:3:11\n    |\n LL |         ()+()"}, {"sha": "92470f89805f39071b4dc825ae20c09c3fb90045", "filename": "src/test/ui/issues/issue-28837.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-28837.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-28837.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28837.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `A`\n+error[E0369]: cannot add `A` to `A`\n   --> $DIR/issue-28837.rs:6:7\n    |\n LL |     a + a;\n@@ -8,7 +8,7 @@ LL |     a + a;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `A`\n \n-error[E0369]: binary operation `-` cannot be applied to type `A`\n+error[E0369]: cannot substract `A` from `A`\n   --> $DIR/issue-28837.rs:8:7\n    |\n LL |     a - a;\n@@ -18,7 +18,7 @@ LL |     a - a;\n    |\n    = note: an implementation of `std::ops::Sub` might be missing for `A`\n \n-error[E0369]: binary operation `*` cannot be applied to type `A`\n+error[E0369]: cannot multiply `A` to `A`\n   --> $DIR/issue-28837.rs:10:7\n    |\n LL |     a * a;\n@@ -28,7 +28,7 @@ LL |     a * a;\n    |\n    = note: an implementation of `std::ops::Mul` might be missing for `A`\n \n-error[E0369]: binary operation `/` cannot be applied to type `A`\n+error[E0369]: cannot divide `A` by `A`\n   --> $DIR/issue-28837.rs:12:7\n    |\n LL |     a / a;\n@@ -38,7 +38,7 @@ LL |     a / a;\n    |\n    = note: an implementation of `std::ops::Div` might be missing for `A`\n \n-error[E0369]: binary operation `%` cannot be applied to type `A`\n+error[E0369]: cannot mod `A` by `A`\n   --> $DIR/issue-28837.rs:14:7\n    |\n LL |     a % a;\n@@ -48,7 +48,7 @@ LL |     a % a;\n    |\n    = note: an implementation of `std::ops::Rem` might be missing for `A`\n \n-error[E0369]: binary operation `&` cannot be applied to type `A`\n+error[E0369]: no implementation for `A & A`\n   --> $DIR/issue-28837.rs:16:7\n    |\n LL |     a & a;\n@@ -58,7 +58,7 @@ LL |     a & a;\n    |\n    = note: an implementation of `std::ops::BitAnd` might be missing for `A`\n \n-error[E0369]: binary operation `|` cannot be applied to type `A`\n+error[E0369]: no implementation for `A | A`\n   --> $DIR/issue-28837.rs:18:7\n    |\n LL |     a | a;\n@@ -68,7 +68,7 @@ LL |     a | a;\n    |\n    = note: an implementation of `std::ops::BitOr` might be missing for `A`\n \n-error[E0369]: binary operation `<<` cannot be applied to type `A`\n+error[E0369]: no implementation for `A << A\n   --> $DIR/issue-28837.rs:20:7\n    |\n LL |     a << a;\n@@ -78,7 +78,7 @@ LL |     a << a;\n    |\n    = note: an implementation of `std::ops::Shl` might be missing for `A`\n \n-error[E0369]: binary operation `>>` cannot be applied to type `A`\n+error[E0369]: no implementation for `A >> A\n   --> $DIR/issue-28837.rs:22:7\n    |\n LL |     a >> a;"}, {"sha": "5d65734cd230a784b5e565d04c2c1acae4a6bb4c", "filename": "src/test/ui/issues/issue-31076.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31076.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `{integer}`\n+error[E0369]: cannot add `{integer}` to `{integer}`\n   --> $DIR/issue-31076.rs:13:15\n    |\n LL |     let x = 5 + 6;\n@@ -8,7 +8,7 @@ LL |     let x = 5 + 6;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `{integer}`\n \n-error[E0369]: binary operation `+` cannot be applied to type `i32`\n+error[E0369]: cannot add `i32` to `i32`\n   --> $DIR/issue-31076.rs:15:18\n    |\n LL |     let y = 5i32 + 6i32;"}, {"sha": "9d5796a5eefed079a5790a80e96aca76f5cb8102", "filename": "src/test/ui/issues/issue-35668.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-35668.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-35668.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-35668.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `*` cannot be applied to type `&T`\n+error[E0369]: cannot multiply `&T` to `&T`\n   --> $DIR/issue-35668.rs:2:23\n    |\n LL |     a.iter().map(|a| a*a)"}, {"sha": "8cc768237a9486d0542cac2d90588b4ff8ce2487", "filename": "src/test/ui/issues/issue-3820.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-3820.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-3820.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3820.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `*` cannot be applied to type `Thing`\n+error[E0369]: cannot multiply `{integer}` to `Thing`\n   --> $DIR/issue-3820.rs:14:15\n    |\n LL |     let w = u * 3;"}, {"sha": "95f45c168e1222d3cdb825a24b00513368b41d04", "filename": "src/test/ui/issues/issue-40610.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-40610.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-40610.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40610.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `()`\n+error[E0369]: cannot add `()` to `()`\n   --> $DIR/issue-40610.rs:4:8\n    |\n LL |     () + f(&[1.0]);"}, {"sha": "3f60ea4bbf73a1cc38107520779b81ec2c442616", "filename": "src/test/ui/issues/issue-41394.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41394.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `{integer}` to `&str`\n   --> $DIR/issue-41394.rs:2:12\n    |\n LL |     A = \"\" + 1"}, {"sha": "5f785679c5587791799534f2a6dc19e76a72dc70", "filename": "src/test/ui/issues/issue-47377.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47377.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&str` to `&str`\n   --> $DIR/issue-47377.rs:4:14\n    |\n LL |      let _a = b + \", World!\";"}, {"sha": "216e32ddae4115e4bbc7bd65e919a1b2a98a9ba1", "filename": "src/test/ui/issues/issue-47380.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47380.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&str` to `&str`\n   --> $DIR/issue-47380.rs:3:35\n    |\n LL |     println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\";"}, {"sha": "e77d92e8b07d9d1138fb9b2529be5a1b801564bb", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-fail.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -104,7 +104,7 @@ LL | #![feature(or_patterns)]\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n \n-error[E0369]: binary operation `|` cannot be applied to type `E`\n+error[E0369]: no implementation for `E | ()`\n   --> $DIR/or-patterns-syntactic-fail.rs:24:22\n    |\n LL |     let _ = |A | B: E| ();"}, {"sha": "bb3e61017d4876d05eb83ca414e510c3002bdc94", "filename": "src/test/ui/pattern/pattern-tyvar-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpattern-tyvar-2.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `*` cannot be applied to type `std::vec::Vec<isize>`\n+error[E0369]: cannot multiply `{integer}` to `std::vec::Vec<isize>`\n   --> $DIR/pattern-tyvar-2.rs:3:71\n    |\n LL | fn foo(t: Bar) -> isize { match t { Bar::T1(_, Some(x)) => { return x * 3; } _ => { panic!(); } } }"}, {"sha": "8a32561bd01db44beed7fb96549b79b9be66bdef", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&str` to `&str`\n   --> $DIR/issue-39018.rs:2:22\n    |\n LL |     let x = \"Hello \" + \"World!\";\n@@ -12,7 +12,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let x = \"Hello \".to_owned() + \"World!\";\n    |             ^^^^^^^^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `World`\n+error[E0369]: cannot add `World` to `World`\n   --> $DIR/issue-39018.rs:8:26\n    |\n LL |     let y = World::Hello + World::Goodbye;\n@@ -22,7 +22,7 @@ LL |     let y = World::Hello + World::Goodbye;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `World`\n \n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `std::string::String` to `&str`\n   --> $DIR/issue-39018.rs:11:22\n    |\n LL |     let x = \"Hello \" + \"World!\".to_owned();\n@@ -36,7 +36,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let x = \"Hello \".to_owned() + &\"World!\".to_owned();\n    |             ^^^^^^^^^^^^^^^^^^^   ^^^^^^^^^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `&std::string::String` to `&std::string::String`\n   --> $DIR/issue-39018.rs:26:16\n    |\n LL |     let _ = &a + &b;\n@@ -50,7 +50,7 @@ help: String concatenation appends the string on the right to the string on the\n LL |     let _ = a + &b;\n    |             ^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `std::string::String` to `&std::string::String`\n   --> $DIR/issue-39018.rs:27:16\n    |\n LL |     let _ = &a + b;\n@@ -73,7 +73,7 @@ LL |     let _ = a + b;\n    |                 expected `&str`, found struct `std::string::String`\n    |                 help: consider borrowing here: `&b`\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `std::string::String` to `&std::string::String`\n   --> $DIR/issue-39018.rs:30:15\n    |\n LL |     let _ = e + b;\n@@ -87,7 +87,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let _ = e.to_owned() + &b;\n    |             ^^^^^^^^^^^^   ^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `&std::string::String` to `&std::string::String`\n   --> $DIR/issue-39018.rs:31:15\n    |\n LL |     let _ = e + &b;\n@@ -101,7 +101,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let _ = e.to_owned() + &b;\n    |             ^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `&str` to `&std::string::String`\n   --> $DIR/issue-39018.rs:32:15\n    |\n LL |     let _ = e + d;\n@@ -115,7 +115,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let _ = e.to_owned() + d;\n    |             ^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `&&str` to `&std::string::String`\n   --> $DIR/issue-39018.rs:33:15\n    |\n LL |     let _ = e + &d;\n@@ -129,7 +129,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let _ = e.to_owned() + &d;\n    |             ^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&&str`\n+error[E0369]: cannot add `&&str` to `&&str`\n   --> $DIR/issue-39018.rs:34:16\n    |\n LL |     let _ = &c + &d;\n@@ -139,7 +139,7 @@ LL |     let _ = &c + &d;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `&&str`\n \n-error[E0369]: binary operation `+` cannot be applied to type `&&str`\n+error[E0369]: cannot add `&str` to `&&str`\n   --> $DIR/issue-39018.rs:35:16\n    |\n LL |     let _ = &c + d;\n@@ -149,7 +149,7 @@ LL |     let _ = &c + d;\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `&&str`\n \n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&&str` to `&str`\n   --> $DIR/issue-39018.rs:36:15\n    |\n LL |     let _ = c + &d;\n@@ -163,7 +163,7 @@ help: `to_owned()` can be used to create an owned `String` from a string referen\n LL |     let _ = c.to_owned() + &d;\n    |             ^^^^^^^^^^^^\n \n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&str` to `&str`\n   --> $DIR/issue-39018.rs:37:15\n    |\n LL |     let _ = c + d;"}, {"sha": "d77e0d8f242d7fec00d6217c5a56c68cabf4920d", "filename": "src/test/ui/str/str-concat-on-double-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr%2Fstr-concat-on-double-ref.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&std::string::String`\n+error[E0369]: cannot add `&str` to `&std::string::String`\n   --> $DIR/str-concat-on-double-ref.rs:4:15\n    |\n LL |     let c = a + b;"}, {"sha": "69daa93412a3a40829586072f48a70ad13ad4cdf", "filename": "src/test/ui/terminal-width/non-1-width-unicode-multiline-label.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fterminal-width%2Fnon-1-width-unicode-multiline-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fterminal-width%2Fnon-1-width-unicode-multiline-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Fnon-1-width-unicode-multiline-label.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `&str`\n+error[E0369]: cannot add `&str` to `&str`\n   --> $DIR/non-1-width-unicode-multiline-label.rs:5:260\n    |\n LL | ...\u0f7d\u0f7e\u0f7f\u0f80\u0f81\u0f82\u0f83\u0f84\u0f85\u0f86\u0f87\u0f88\u0f89\u0f8a\u0f8b\u0f8c\u0f8d\u0f8e\u0f8f\u0f90\u0f91\u0f92\u0f93\u0f94\u0f95\u0f96\u0f97\u0f98\u0f99\u0f9a\u0f9b\u0f9c\u0f9d\u0f9e\u0f9f\u0fa0\u0fa1\u0fa2\u0fa3\u0fa4\u0fa5\u0fa6\u0fa7\u0fa8\u0fa9\u0faa\u0fab\u0fac\u0fad\u0fae\u0faf\u0fb0\u0fb1\u0fb2\u0fb3\u0fb4\u0fb5\u0fb6\u0fb7\u0fb8\u0fb9\u0fba\u0fbb\u0fbc\u0fbd\u0fbe\u0fbf\u0fc0\u0fc1\u0fc2\u0fc3\u0fc4\u0fc5\u0fc6\u0fc7...\u0fcb\u0fcc\u0fcd\u0fce\u0fcf\u0fd0\u0fd1\u0fd2\u0fd3\u0fd4\u0fd5\u0fd6\u0fd7\u0fd8\u0fd9\u0fda\"; let _a = unicode_is_fun + \" really fun!\";"}, {"sha": "8d7ba36c665b31d19d4cd9ef3af43ba7bdf17f28", "filename": "src/test/ui/traits/trait-resolution-in-overloaded-op.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ftraits%2Ftrait-resolution-in-overloaded-op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ftraits%2Ftrait-resolution-in-overloaded-op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-resolution-in-overloaded-op.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `*` cannot be applied to type `&T`\n+error[E0369]: cannot multiply `f64` to `&T`\n   --> $DIR/trait-resolution-in-overloaded-op.rs:8:7\n    |\n LL |     a * b"}, {"sha": "7186d6a542dc9db031b8228708f03e52747dff02", "filename": "src/test/ui/type/type-check/missing_trait_impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fmissing_trait_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fmissing_trait_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-check%2Fmissing_trait_impl.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `T`\n+error[E0369]: cannot add `T` to `T`\n   --> $DIR/missing_trait_impl.rs:5:15\n    |\n LL |     let z = x + y;"}, {"sha": "1cc12a222e50bae2d131809b60e4f0e062979149", "filename": "src/test/ui/vec/vec-res-add.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fvec%2Fvec-res-add.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f/src%2Ftest%2Fui%2Fvec%2Fvec-res-add.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvec%2Fvec-res-add.stderr?ref=3bd46f1aecbcd3b7e57bd78c4dda72c076368f1f", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: binary operation `+` cannot be applied to type `std::vec::Vec<R>`\n+error[E0369]: cannot add `std::vec::Vec<R>` to `std::vec::Vec<R>`\n   --> $DIR/vec-res-add.rs:16:15\n    |\n LL |     let k = i + j;"}]}