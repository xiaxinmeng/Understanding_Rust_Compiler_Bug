{"sha": "48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4ZjdjOGUyZTZhNDJiNDQxYWEyMTA2OGFlNTI2ZWM1YWZmZDBjNDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-02-27T19:03:51Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-02-27T19:10:50Z"}, "message": "fix reborrowing of tagged ZST references", "tree": {"sha": "101d9ac952c335b65c621207375b88d1804fa788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/101d9ac952c335b65c621207375b88d1804fa788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "html_url": "https://github.com/rust-lang/rust/commit/48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48f7c8e2e6a42b441aa21068ae526ec5affd0c40/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74b771423a7d78e3ca000c14c1e153fbcea488e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/74b771423a7d78e3ca000c14c1e153fbcea488e1", "html_url": "https://github.com/rust-lang/rust/commit/74b771423a7d78e3ca000c14c1e153fbcea488e1"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "cfaf8a9005ca50295c30ca1805132585339d5db7", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48f7c8e2e6a42b441aa21068ae526ec5affd0c40/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f7c8e2e6a42b441aa21068ae526ec5affd0c40/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "patch": "@@ -586,15 +586,23 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let place = this.ref_to_mplace(val)?;\n         let size = this\n             .size_and_align_of_mplace(&place)?\n-            .map(|(size, _)| size)\n-            .unwrap_or_else(|| place.layout.size);\n+            .map(|(size, _)| size);\n+        // FIXME: If we cannot determine the size (because the unsized tail is an `extern type`),\n+        // bail out -- we cannot reasonably figure out which memory range to reborrow.\n+        // See https://github.com/rust-lang/unsafe-code-guidelines/issues/276.\n+        let size = match size {\n+            Some(size) => size,\n+            None => return Ok(*val),\n+        };\n         // `reborrow` relies on getting a `Pointer` and everything being in-bounds,\n         // so let's ensure that. However, we do not care about alignment.\n         // We can see dangling ptrs in here e.g. after a Box's `Unique` was\n         // updated using \"self.0 = ...\" (can happen in Box::from_raw) so we cannot ICE; see miri#1050.\n         let place = this.mplace_access_checked(place, Some(Align::from_bytes(1).unwrap()))?;\n-        // Nothing to do for ZSTs.\n-        if size == Size::ZERO {\n+        // Nothing to do for ZSTs. We use `is_bits` here because we *do* need to retag even ZSTs\n+        // when there actually is a tag (to avoid inheriting a tag that would let us access more\n+        // than 0 bytes).\n+        if size == Size::ZERO && place.ptr.is_bits() {\n             return Ok(*val);\n         }\n "}, {"sha": "0804f7303082d26f07184da457cbb72dff15591c", "filename": "tests/compile-fail/stacked_borrows/zst_slice.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/48f7c8e2e6a42b441aa21068ae526ec5affd0c40/tests%2Fcompile-fail%2Fstacked_borrows%2Fzst_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48f7c8e2e6a42b441aa21068ae526ec5affd0c40/tests%2Fcompile-fail%2Fstacked_borrows%2Fzst_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fzst_slice.rs?ref=48f7c8e2e6a42b441aa21068ae526ec5affd0c40", "patch": "@@ -0,0 +1,11 @@\n+// compile-flags: -Zmiri-track-raw-pointers\n+// error-pattern: does not have an appropriate item in the borrow stack\n+\n+fn main() {\n+    unsafe {\n+        let a = [1, 2, 3];\n+        let s = &a[0..0];\n+        assert_eq!(s.len(), 0);\n+        assert_eq!(*s.get_unchecked(1), 2);\n+    }\n+}"}]}