{"sha": "1c2143193fb4394bb5dd20eefd192c2908775271", "node_id": "C_kwDOAAsO6NoAKDFjMjE0MzE5M2ZiNDM5NGJiNWRkMjBlZWZkMTkyYzI5MDg3NzUyNzE", "commit": {"author": {"name": "Milan Landaverde", "email": "milanlandaverde@gmail.com", "date": "2021-05-16T21:49:54Z"}, "committer": {"name": "Milan", "email": "milanlandaverde@gmail.com", "date": "2021-10-10T18:01:07Z"}, "message": "rustfmt", "tree": {"sha": "c5632ec221bbd6c12319b7c341efb63ab1b0e3a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5632ec221bbd6c12319b7c341efb63ab1b0e3a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c2143193fb4394bb5dd20eefd192c2908775271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2143193fb4394bb5dd20eefd192c2908775271", "html_url": "https://github.com/rust-lang/rust/commit/1c2143193fb4394bb5dd20eefd192c2908775271", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c2143193fb4394bb5dd20eefd192c2908775271/comments", "author": {"login": "mdaverde", "id": 1067001, "node_id": "MDQ6VXNlcjEwNjcwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdaverde", "html_url": "https://github.com/mdaverde", "followers_url": "https://api.github.com/users/mdaverde/followers", "following_url": "https://api.github.com/users/mdaverde/following{/other_user}", "gists_url": "https://api.github.com/users/mdaverde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdaverde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdaverde/subscriptions", "organizations_url": "https://api.github.com/users/mdaverde/orgs", "repos_url": "https://api.github.com/users/mdaverde/repos", "events_url": "https://api.github.com/users/mdaverde/events{/privacy}", "received_events_url": "https://api.github.com/users/mdaverde/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdaverde", "id": 1067001, "node_id": "MDQ6VXNlcjEwNjcwMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1067001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdaverde", "html_url": "https://github.com/mdaverde", "followers_url": "https://api.github.com/users/mdaverde/followers", "following_url": "https://api.github.com/users/mdaverde/following{/other_user}", "gists_url": "https://api.github.com/users/mdaverde/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdaverde/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdaverde/subscriptions", "organizations_url": "https://api.github.com/users/mdaverde/orgs", "repos_url": "https://api.github.com/users/mdaverde/repos", "events_url": "https://api.github.com/users/mdaverde/events{/privacy}", "received_events_url": "https://api.github.com/users/mdaverde/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ebfc2c55af8b7581bea067f29276f73c7fa503", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ebfc2c55af8b7581bea067f29276f73c7fa503", "html_url": "https://github.com/rust-lang/rust/commit/63ebfc2c55af8b7581bea067f29276f73c7fa503"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "1cef5a3256c61686f8e7a5466481b845105c1138", "filename": "library/std/src/os/unix/net/addr.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Faddr.rs?ref=1c2143193fb4394bb5dd20eefd192c2908775271", "patch": "@@ -285,7 +285,11 @@ impl SocketAddr {\n                 ));\n             }\n \n-            ptr::copy_nonoverlapping(namespace.as_ptr(), addr.sun_path.as_mut_ptr().offset(1) as *mut u8, namespace.len());\n+            ptr::copy_nonoverlapping(\n+                namespace.as_ptr(),\n+                addr.sun_path.as_mut_ptr().offset(1) as *mut u8,\n+                namespace.len(),\n+            );\n             let len = (sun_path_offset(&addr) + 1 + namespace.len()) as libc::socklen_t;\n             SocketAddr::from_parts(addr, len)\n         }"}, {"sha": "d0eb7f68ec6c2a30ef264e1fe060ed0747227290", "filename": "library/std/src/os/unix/net/datagram.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fdatagram.rs?ref=1c2143193fb4394bb5dd20eefd192c2908775271", "patch": "@@ -136,7 +136,11 @@ impl UnixDatagram {\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixDatagram> {\n         unsafe {\n             let socket = UnixDatagram::unbound()?;\n-            cvt(libc::bind(*socket.0.as_inner(), &socket_addr.addr as *const _ as *const _, socket_addr.len as _))?;\n+            cvt(libc::bind(\n+                *socket.0.as_inner(),\n+                &socket_addr.addr as *const _ as *const _,\n+                socket_addr.len as _,\n+            ))?;\n             Ok(socket)\n         }\n     }\n@@ -245,7 +249,11 @@ impl UnixDatagram {\n     #[unstable(feature = \"unix_socket_abstract\", issue = \"42048\")]\n     pub fn connect_addr(&self, socket_addr: &SocketAddr) -> io::Result<()> {\n         unsafe {\n-            cvt(libc::connect(*self.0.as_inner(), &socket_addr.addr as *const _ as *const _, socket_addr.len))?;\n+            cvt(libc::connect(\n+                *self.0.as_inner(),\n+                &socket_addr.addr as *const _ as *const _,\n+                socket_addr.len,\n+            ))?;\n         }\n         Ok(())\n     }"}, {"sha": "d55ea054539b55e5c319bbee0ca6123a7e37e7de", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=1c2143193fb4394bb5dd20eefd192c2908775271", "patch": "@@ -107,14 +107,17 @@ impl UnixListener {\n     pub fn bind_addr(socket_addr: &SocketAddr) -> io::Result<UnixListener> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n-            cvt(libc::bind(*inner.as_inner(), &socket_addr.addr as *const _ as *const _, socket_addr.len as _))?;\n+            cvt(libc::bind(\n+                *inner.as_inner(),\n+                &socket_addr.addr as *const _ as *const _,\n+                socket_addr.len as _,\n+            ))?;\n             cvt(libc::listen(*inner.as_inner(), 128))?;\n \n             Ok(UnixListener(inner))\n         }\n     }\n \n-\n     /// Accepts a new incoming connection to this listener.\n     ///\n     /// This function will block the calling thread until a new Unix connection"}, {"sha": "5b482e13823c5ac2b0a32ab00c0215b5fe61da16", "filename": "library/std/src/os/unix/net/stream.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2143193fb4394bb5dd20eefd192c2908775271/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Fstream.rs?ref=1c2143193fb4394bb5dd20eefd192c2908775271", "patch": "@@ -132,7 +132,11 @@ impl UnixStream {\n     pub fn connect_addr(socket_addr: &SocketAddr) -> io::Result<UnixStream> {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n-            cvt(libc::connect(*inner.as_inner(), &socket_addr.addr as *const _ as *const _, socket_addr.len))?;\n+            cvt(libc::connect(\n+                *inner.as_inner(),\n+                &socket_addr.addr as *const _ as *const _,\n+                socket_addr.len,\n+            ))?;\n             Ok(UnixStream(inner))\n         }\n     }"}]}