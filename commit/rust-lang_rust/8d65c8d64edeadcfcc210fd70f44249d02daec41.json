{"sha": "8d65c8d64edeadcfcc210fd70f44249d02daec41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNjVjOGQ2NGVkZWFkY2ZjYzIxMGZkNzBmNDQyNDlkMDJkYWVjNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-24T00:22:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-24T00:22:00Z"}, "message": "Auto merge of #38268 - withoutboats:parse_where_higher_rank_hack, r=eddyb\n\nPrevent where < ident > from parsing.\n\nIn order to be forward compatible with `where<'a>` syntax for higher\nrank parameters, prevent potential conflicts with UFCS from parsing\ncorrectly for the near term.", "tree": {"sha": "53c2d86e1273b6912ed5c9c586abcd4f8010c8c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c2d86e1273b6912ed5c9c586abcd4f8010c8c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d65c8d64edeadcfcc210fd70f44249d02daec41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d65c8d64edeadcfcc210fd70f44249d02daec41", "html_url": "https://github.com/rust-lang/rust/commit/8d65c8d64edeadcfcc210fd70f44249d02daec41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d65c8d64edeadcfcc210fd70f44249d02daec41/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d07320d015ff762431a98cd058ea1fb70fd6c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d07320d015ff762431a98cd058ea1fb70fd6c62", "html_url": "https://github.com/rust-lang/rust/commit/4d07320d015ff762431a98cd058ea1fb70fd6c62"}, {"sha": "14e4b00933c13a4c419f2192df11b135d5bb0c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e4b00933c13a4c419f2192df11b135d5bb0c85", "html_url": "https://github.com/rust-lang/rust/commit/14e4b00933c13a4c419f2192df11b135d5bb0c85"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "a0ed50b33a46c8709e18c9dc9ec5c55c8e850233", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8d65c8d64edeadcfcc210fd70f44249d02daec41/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65c8d64edeadcfcc210fd70f44249d02daec41/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8d65c8d64edeadcfcc210fd70f44249d02daec41", "patch": "@@ -4368,6 +4368,23 @@ impl<'a> Parser<'a> {\n             return Ok(where_clause);\n         }\n \n+        // This is a temporary hack.\n+        //\n+        // We are considering adding generics to the `where` keyword as an alternative higher-rank\n+        // parameter syntax (as in `where<'a>` or `where<T>`. To avoid that being a breaking\n+        // change, for now we refuse to parse `where < (ident | lifetime) (> | , | :)`.\n+        if token::Lt == self.token {\n+            let ident_or_lifetime = self.look_ahead(1, |t| t.is_ident() || t.is_lifetime());\n+            if ident_or_lifetime {\n+                let gt_comma_or_colon = self.look_ahead(2, |t| {\n+                    *t == token::Gt || *t == token::Comma || *t == token::Colon\n+                });\n+                if gt_comma_or_colon {\n+                    self.span_err(self.span, \"syntax `where<T>` is reserved for future use\");\n+                }\n+            }\n+        }\n+\n         let mut parsed_something = false;\n         loop {\n             let lo = self.span.lo;"}, {"sha": "cb57500df797eae06475148616c6e092409471cc", "filename": "src/test/parse-fail/where_with_bound.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d65c8d64edeadcfcc210fd70f44249d02daec41/src%2Ftest%2Fparse-fail%2Fwhere_with_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d65c8d64edeadcfcc210fd70f44249d02daec41/src%2Ftest%2Fparse-fail%2Fwhere_with_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fwhere_with_bound.rs?ref=8d65c8d64edeadcfcc210fd70f44249d02daec41", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only\n+\n+fn foo<T>() where <T>::Item: ToString, T: Iterator { }\n+               //~^ syntax `where<T>` is reserved for future use\n+\n+fn main() {}"}]}