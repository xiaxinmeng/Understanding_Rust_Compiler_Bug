{"sha": "c23add778c2aca1fc8b764464fe2a8aa7446f413", "node_id": "C_kwDOAAsO6NoAKGMyM2FkZDc3OGMyYWNhMWZjOGI3NjQ0NjRmZTJhOGFhNzQ0NmY0MTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-29T04:58:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-29T04:58:20Z"}, "message": "Rollup merge of #97786 - ferrocene:pa-fix-simulate-remap-prefix, r=Mark-Simulacrum\n\nAccount for `-Z simulate-remapped-rust-src-base` when resolving remapped paths\n\nDiscovered in #97682, `-Z simulate-remapped-rust-src-base` only partially simulated the behavior of `remap-debuginfo = true`. While the flag successfully simulates the remapping when stdlib's `rmeta` file is loaded, the simulated prefix was not accounted for when the remapped path's local path was being discovered. This caused the flag to not fully simulate the behavior of `remap-debuginfo = true`, leading to inconsistent behaviors.\n\nThis PR fixes https://github.com/rust-lang/rust/issues/97682 by also accounting for the simulated path.", "tree": {"sha": "4218ac98281a87fd70a0a96c401f4a0db9113ef3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4218ac98281a87fd70a0a96c401f4a0db9113ef3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c23add778c2aca1fc8b764464fe2a8aa7446f413", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiu9vsCRBK7hj4Ov3rIwAApswIAGPVuEqDMchGY0uOP795KXz2\npXSuLugVubMse3C+fuOQpcXmz2FA4+P49TzSj+Jfan5ur5I8QlfEVpkO+LChqXCd\nutqdgoF2VCKtIygVn3tiK2hBFfnWU+B2LyQUdkZawDn8flGkFj8N8Xv7L/GVI4ml\nu5vm+EhYVQg40a4ivqbTKw5741Ul6vZGNCNlw9Bv1O6xL4ZsCNV20NzkAPpViWvr\nKYLK2JnXLU37glk0y7799VKhDlgtuDdu+XbKblzj28AoWBaYgDzJU/BaJCCtXECY\nZYNHcdxKFQexBVfkipM9R6xJ0h1FfSnRPF7wn0HMh9ZNoRIrF+v7IjnfSMISxn0=\n=9LUa\n-----END PGP SIGNATURE-----\n", "payload": "tree 4218ac98281a87fd70a0a96c401f4a0db9113ef3\nparent dee9aed07d3e4d54d1d4c56474a9630e4cd3496f\nparent 1a5e2d8c92ce1341fcf1632be981f78a3a8d635b\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656478700 +0530\ncommitter GitHub <noreply@github.com> 1656478700 +0530\n\nRollup merge of #97786 - ferrocene:pa-fix-simulate-remap-prefix, r=Mark-Simulacrum\n\nAccount for `-Z simulate-remapped-rust-src-base` when resolving remapped paths\n\nDiscovered in #97682, `-Z simulate-remapped-rust-src-base` only partially simulated the behavior of `remap-debuginfo = true`. While the flag successfully simulates the remapping when stdlib's `rmeta` file is loaded, the simulated prefix was not accounted for when the remapped path's local path was being discovered. This caused the flag to not fully simulate the behavior of `remap-debuginfo = true`, leading to inconsistent behaviors.\n\nThis PR fixes https://github.com/rust-lang/rust/issues/97682 by also accounting for the simulated path.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c23add778c2aca1fc8b764464fe2a8aa7446f413", "html_url": "https://github.com/rust-lang/rust/commit/c23add778c2aca1fc8b764464fe2a8aa7446f413", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c23add778c2aca1fc8b764464fe2a8aa7446f413/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dee9aed07d3e4d54d1d4c56474a9630e4cd3496f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dee9aed07d3e4d54d1d4c56474a9630e4cd3496f", "html_url": "https://github.com/rust-lang/rust/commit/dee9aed07d3e4d54d1d4c56474a9630e4cd3496f"}, {"sha": "1a5e2d8c92ce1341fcf1632be981f78a3a8d635b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a5e2d8c92ce1341fcf1632be981f78a3a8d635b", "html_url": "https://github.com/rust-lang/rust/commit/1a5e2d8c92ce1341fcf1632be981f78a3a8d635b"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "3280fd5c3108b462495d8449453d1525e54dd797", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c23add778c2aca1fc8b764464fe2a8aa7446f413/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c23add778c2aca1fc8b764464fe2a8aa7446f413/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=c23add778c2aca1fc8b764464fe2a8aa7446f413", "patch": "@@ -42,7 +42,7 @@ use std::io;\n use std::iter::TrustedLen;\n use std::mem;\n use std::num::NonZeroUsize;\n-use std::path::Path;\n+use std::path::PathBuf;\n use tracing::debug;\n \n pub(super) use cstore_impl::provide;\n@@ -1473,28 +1473,34 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n         //\n         // NOTE: if you update this, you might need to also update bootstrap's code for generating\n         // the `rust-src` component in `Src::run` in `src/bootstrap/dist.rs`.\n-        let virtual_rust_source_base_dir = option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\")\n-            .map(Path::new)\n-            .filter(|_| {\n-                // Only spend time on further checks if we have what to translate *to*.\n-                sess.opts.real_rust_source_base_dir.is_some()\n-                    // Some tests need the translation to be always skipped.\n-                    && sess.opts.debugging_opts.translate_remapped_path_to_local_path\n-            })\n-            .filter(|virtual_dir| {\n-                // Don't translate away `/rustc/$hash` if we're still remapping to it,\n-                // since that means we're still building `std`/`rustc` that need it,\n-                // and we don't want the real path to leak into codegen/debuginfo.\n-                !sess.opts.remap_path_prefix.iter().any(|(_from, to)| to == virtual_dir)\n-            });\n+        let virtual_rust_source_base_dir = [\n+            option_env!(\"CFG_VIRTUAL_RUST_SOURCE_BASE_DIR\").map(PathBuf::from),\n+            sess.opts.debugging_opts.simulate_remapped_rust_src_base.clone(),\n+        ]\n+        .into_iter()\n+        .filter(|_| {\n+            // Only spend time on further checks if we have what to translate *to*.\n+            sess.opts.real_rust_source_base_dir.is_some()\n+                // Some tests need the translation to be always skipped.\n+                && sess.opts.debugging_opts.translate_remapped_path_to_local_path\n+        })\n+        .flatten()\n+        .filter(|virtual_dir| {\n+            // Don't translate away `/rustc/$hash` if we're still remapping to it,\n+            // since that means we're still building `std`/`rustc` that need it,\n+            // and we don't want the real path to leak into codegen/debuginfo.\n+            !sess.opts.remap_path_prefix.iter().any(|(_from, to)| to == virtual_dir)\n+        })\n+        .collect::<Vec<_>>();\n+\n         let try_to_translate_virtual_to_real = |name: &mut rustc_span::FileName| {\n             debug!(\n                 \"try_to_translate_virtual_to_real(name={:?}): \\\n                  virtual_rust_source_base_dir={:?}, real_rust_source_base_dir={:?}\",\n                 name, virtual_rust_source_base_dir, sess.opts.real_rust_source_base_dir,\n             );\n \n-            if let Some(virtual_dir) = virtual_rust_source_base_dir {\n+            for virtual_dir in &virtual_rust_source_base_dir {\n                 if let Some(real_dir) = &sess.opts.real_rust_source_base_dir {\n                     if let rustc_span::FileName::Real(old_name) = name {\n                         if let rustc_span::RealFileName::Remapped { local_path: _, virtual_name } ="}]}