{"sha": "8a7b636649db7601bbef90c525eea2a457ba3a8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhN2I2MzY2NDlkYjc2MDFiYmVmOTBjNTI1ZWVhMmE0NTdiYTNhOGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-10T08:10:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-10T08:10:29Z"}, "message": "auto merge of #7637 : pnkfelix/rust/fsk-guard-against-stale-libraries-issue3225-safeguarded, r=graydon\n\nWhen building Rust libraries (e.g. librustc, libstd, etc), checks for\r\nand verbosely removes previous build products before invoking rustc.\r\n(Also, when Make variable VERBOSE is defined, it will list all of the\r\nlibraries matching the object library's glob after the rustc\r\ninvocation has completed.)\r\n\r\nWhen installing Rust libraries, checks for previous libraries in\r\ntarget install directory, but does not remove them.\r\n\r\nThe thinking behind these two different modes of operation is that the\r\ninstallation target, unlike the build tree, is not under the control\r\nof this infrastructure and it is not up to this Makefile to decide if\r\nthe previous libraries should be removed.\r\n\r\nFixes #3225 (at least in terms of mitigating the multiple library\r\nproblem by proactively warning the user about it.)", "tree": {"sha": "db2ed719f8e59cb89c89839f5054365665696a59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db2ed719f8e59cb89c89839f5054365665696a59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a7b636649db7601bbef90c525eea2a457ba3a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a7b636649db7601bbef90c525eea2a457ba3a8c", "html_url": "https://github.com/rust-lang/rust/commit/8a7b636649db7601bbef90c525eea2a457ba3a8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a7b636649db7601bbef90c525eea2a457ba3a8c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e9194836cab666163cf97cfbea6a323edad882", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5e9194836cab666163cf97cfbea6a323edad882", "html_url": "https://github.com/rust-lang/rust/commit/b5e9194836cab666163cf97cfbea6a323edad882"}, {"sha": "ace49442a6aef323d42700da169ac3de32d64c2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ace49442a6aef323d42700da169ac3de32d64c2d", "html_url": "https://github.com/rust-lang/rust/commit/ace49442a6aef323d42700da169ac3de32d64c2d"}], "stats": {"total": 290, "additions": 220, "deletions": 70}, "files": [{"sha": "fb36b4e1ac666aaa260ae3f3bbf708f5fdce5cbf", "filename": "Makefile.in", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -235,6 +235,39 @@ LIBRUST_DSYM_GLOB_$(1) :=$(call CFG_LIB_DSYM_GLOB_$(1),rust)\n \n endef\n \n+# $(1) is the path for directory to match against\n+# $(2) is the glob to use in the match\n+# $(3) is filename (usually the target being created) to filter out from match\n+#      (i.e. filename is not out-of-date artifact from prior Rust version/build)\n+#\n+# Note that a common bug is to accidentally construct the glob denoted\n+# by $(2) with a space character prefix, which invalidates the\n+# construction $(1)$(2).\n+define CHECK_FOR_OLD_GLOB_MATCHES_EXCEPT\n+  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"Warning: there are previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; fi\n+endef\n+\n+# Same interface as above, but deletes rather than just listing the files.\n+define REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT\n+  $(Q)MATCHES=\"$(filter-out %$(3),$(wildcard $(1)/$(2)))\"; if [ -n \"$$MATCHES\" ] ; then echo \"Warning: removing previous\" \\'$(2)\\' \"libraries:\" $$MATCHES; rm -v $$MATCHES ; fi\n+endef\n+\n+# We use a different strategy for LIST_ALL_OLD_GLOB_MATCHES_EXCEPT\n+# than in the macros above because it needs the result of running the\n+# `ls` command after other rules in the command list have run; the\n+# macro-expander for $(wildcard ...) would deliver its results too\n+# soon. (This is in contrast to the macros above, which are meant to\n+# be run at the outset of a command list in a rule.)\n+ifdef VERBOSE\n+define LIST_ALL_OLD_GLOB_MATCHES_EXCEPT\n+  @echo \"Info: now are following matches for\" '$(2)' \"libraries:\"\n+  @( cd $(1) && ( ls $(2) 2>/dev/null || true ) | grep -v $(3) || true )\n+endef\n+else\n+define LIST_ALL_OLD_GLOB_MATCHES_EXCEPT\n+endef\n+endif\n+\n $(foreach target,$(CFG_TARGET_TRIPLES),\\\n   $(eval $(call DEF_LIBS,$(target))))\n "}, {"sha": "ecf84967e5edfc7637994476e1bd9f21ef96d7bc", "filename": "mk/host.mk", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Fhost.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Fhost.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fhost.mk?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -45,10 +45,12 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4)): \\\n \t| $$(HLIB$(2)_H_$(4))/\n \n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_GLOB_$(4)) \\\n \t\t$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTC_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)): \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBSYNTAX_$(4)) \\\n@@ -58,10 +60,12 @@ $$(HLIB$(2)_H_$(4))/$(CFG_LIBSYNTAX_$(4)): \\\n \t$$(HEXTRALIB_DEFAULT$(2)_H_$(4)) \\\n \t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBSYNTAX_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)): \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_RUNTIME_$(4)) \\\n@@ -74,6 +78,7 @@ $$(HLIB$(2)_H_$(4))/$(CFG_STDLIB_$(4)): \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n \t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n # Subtle: We do not let the shell expand $(STDLIB_DSYM_GLOB) directly rather\n # we use Make's $$(wildcard) facility. The reason is that, on mac, when using\n@@ -85,17 +90,20 @@ $$(HLIB$(2)_H_$(4))/$(CFG_STDLIB_$(4)): \\\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(STDLIB_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB$(2)_H_$(4))/$(CFG_EXTRALIB_$(4)): \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_STDLIB_$(4)) \\\n \t$$(HLIB$(2)_H_$(4))/$(CFG_RUNTIME_$(4)) \\\n \t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(EXTRALIB_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(EXTRALIB_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB$(2)_H_$(4))/libstd.rlib: \\\n \t$$(TLIB$(1)_T_$(4)_H_$(3))/libstd.rlib \\"}, {"sha": "6745535fbca5ba2a39f79467b85bc30ed7ea4e06", "filename": "mk/install.mk", "status": "modified", "additions": 64, "deletions": 37, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -12,17 +12,48 @@\n # For consistency it might be desirable for stageN to be an exact\n # mirror of the installation directory structure.\n \n-# Installation macro. Call with source directory as arg 1,\n-# destination directory as arg 2, and filename/libname-glob as arg 3\n+# Installation macros.\n+# For INSTALL,\n+# $(1) is the source dirctory\n+# $(2) is the destination directory\n+# $(3) is the filename/libname-glob\n ifdef VERBOSE\n  INSTALL = install -m755 $(1)/$(3) $(2)/$(3)\n- INSTALL_LIB = install -m644 `ls -drt1 $(1)/$(3) | tail -1` $(2)/\n else\n  INSTALL = $(Q)$(call E, install: $(2)/$(3)) && install -m755 $(1)/$(3) $(2)/$(3)\n- INSTALL_LIB = $(Q)$(call E, install_lib: $(2)/$(3)) &&                    \\\n-\t       install -m644 `ls -drt1 $(1)/$(3) | tail -1` $(2)/\n endif\n \n+# For INSTALL_LIB,\n+# Target-specific $(LIB_SOURCE_DIR) is the source directory\n+# Target-specific $(LIB_DESTIN_DIR) is the destination directory\n+# $(1) is the filename/libname-glob\n+ifdef VERBOSE\n+ DO_INSTALL_LIB = install -m644 `ls -drt1 $(LIB_SOURCE_DIR)/$(1) | tail -1` $(LIB_DESTIN_DIR)/\n+else\n+ DO_INSTALL_LIB = $(Q)$(call E, install_lib: $(LIB_DESTIN_DIR)/$(1)) &&                    \\\n+\t       install -m644 `ls -drt1 $(LIB_SOURCE_DIR)/$(1) | tail -1` $(LIB_DESTIN_DIR)/\n+endif\n+\n+# Target-specific $(LIB_SOURCE_DIR) is the source directory\n+# Target-specific $(LIB_DESTIN_DIR) is the destination directory\n+# $(1) is the filename/libname-glob\n+define INSTALL_LIB\n+  $(if $(filter-out 1,$(words $(wildcard $(LIB_SOURCE_DIR)/$(1)))),        \\\n+       $(error Aborting install because more than one library matching     \\\n+               $(1) is present in build tree $(LIB_SOURCE_DIR):            \\\n+               $(wildcard $(LIB_SOURCE_DIR)/$(1))))\n+  $(Q)LIB_NAME=\"$(notdir $(lastword $(wildcard $(LIB_SOURCE_DIR)/$(1))))\"; \\\n+  MATCHES=\"$(filter-out %$(notdir $(lastword $(wildcard $(LIB_SOURCE_DIR)/$(1)))),\\\n+                        $(wildcard $(LIB_DESTIN_DIR)/$(1)))\";              \\\n+  if [ -n \"$$MATCHES\" ]; then                                              \\\n+    echo \"Warning, one or libraries matching Rust library '$(1)'\" &&       \\\n+    echo \"  (other than '$$LIB_NAME' itself) already present\"     &&       \\\n+    echo \"  at destination $(LIB_DESTIN_DIR):\"                    &&       \\\n+    echo $$MATCHES ;                                                       \\\n+  fi\n+  $(call DO_INSTALL_LIB,$(1))\n+endef\n+\n # The stage we install from\n ISTAGE = 2\n \n@@ -49,38 +80,32 @@ $(foreach target,$(CFG_TARGET_TRIPLES), \\\n  $(eval $(call INSTALL_PREPARE_N,$(target),$(CFG_BUILD_TRIPLE))))\n \n define INSTALL_TARGET_N\n+install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n+install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n install-target-$(1)-host-$(2): $$(TSREQ$$(ISTAGE)_T_$(1)_H_$(2)) $$(SREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)mkdir -p $$(PTL$(1)$(2))\n-\t$$(Q)$$(call INSTALL_LIB,$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(CFG_RUNTIME_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(STDLIB_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(EXTRALIB_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB,$$(TL$(1)$(2)),$$(PTL$(1)$(2)),libmorestack.a)\n+\t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUNTIME_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(EXTRALIB_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,libmorestack.a)\n \n endef\n \n define INSTALL_HOST_N\n+install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n+install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n install-target-$(1)-host-$(2): $$(CSREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)mkdir -p $$(PTL$(1)$(2))\n-\t$$(Q)$$(call INSTALL_LIB,$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(CFG_RUNTIME_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(STDLIB_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(EXTRALIB_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBRUSTC_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBSYNTAX_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBRUSTPKG_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBRUSTDOC_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBRUSTI_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB, \\\n-\t\t$$(TL$(1)$(2)),$$(PTL$(1)$(2)),$$(LIBRUST_GLOB_$(1)))\n-\t$$(Q)$$(call INSTALL_LIB,$$(TL$(1)$(2)),$$(PTL$(1)$(2)),libmorestack.a)\n+\t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUNTIME_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(EXTRALIB_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBRUSTC_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBSYNTAX_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBRUSTPKG_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBRUSTDOC_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBRUSTI_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,$$(LIBRUST_GLOB_$(1)))\n+\t$$(Q)$$(call INSTALL_LIB,libmorestack.a)\n \n endef\n \n@@ -104,6 +129,8 @@ PHB = $(PREFIX_BIN)\n # Shorthand for the prefix bin directory\n PHL = $(PREFIX_LIB)\n \n+install-host: LIB_SOURCE_DIR=$(HL)\n+install-host: LIB_DESTIN_DIR=$(PHL)\n install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_TRIPLE)_H_$(CFG_BUILD_TRIPLE))\n \t$(Q)mkdir -p $(PREFIX_BIN)\n \t$(Q)mkdir -p $(PREFIX_LIB)\n@@ -113,14 +140,14 @@ install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_TRIPLE)_H_$(CFG_BUILD_TRIPLE))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rustdoc$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rusti$(X_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HB2),$(PHB),rust$(X_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(STDLIB_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(EXTRALIB_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBRUSTC_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBSYNTAX_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBRUSTI_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBRUST_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBRUSTPKG_GLOB_$(CFG_BUILD_TRIPLE)))\n-\t$(Q)$(call INSTALL_LIB,$(HL),$(PHL),$(LIBRUSTDOC_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(STDLIB_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(EXTRALIB_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBRUSTC_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBSYNTAX_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBRUSTI_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBRUST_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBRUSTPKG_GLOB_$(CFG_BUILD_TRIPLE)))\n+\t$(Q)$(call INSTALL_LIB,$(LIBRUSTDOC_GLOB_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_RUNTIME_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_RUSTLLVM_$(CFG_BUILD_TRIPLE)))\n \t$(Q)$(call INSTALL,$(S)/man, \\"}, {"sha": "7d0255db4ac4caa12b18170940de241a1fa0504d", "filename": "mk/stage0.mk", "status": "modified", "additions": 42, "deletions": 13, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Fstage0.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Fstage0.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage0.mk?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -1,10 +1,16 @@\n # Extract the snapshot host compiler\n \n+$(HBIN0_H_$(CFG_BUILD_TRIPLE))/:\n+\tmkdir -p $@\n \n+$(HLIB0_H_$(CFG_BUILD_TRIPLE))/:\n+\tmkdir -p $@\n \n $(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)):\t\t\\\n \t\t$(S)src/snapshots.txt\t\t\t\t\t\\\n-\t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\n+\t\t$(S)src/etc/get-snapshot.py $(MKFILE_DEPS)\t\t\\\n+\t\t| $(HBIN0_H_$(CFG_BUILD_TRIPLE))/\n+\n \t@$(call E, fetch: $@)\n #   Note: the variable \"SNAPSHOT_FILE\" is generally not set, and so\n #   we generally only pass one argument to this script.\n@@ -22,23 +28,28 @@ endif\n # Host libs will be extracted by the above rule\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_RUNTIME_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)) \\\n+\t\t| $(HLIB0_H_$(CFG_BUILD_TRIPLE))/\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_STDLIB_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)) \\\n+\t\t| $(HLIB0_H_$(CFG_BUILD_TRIPLE))/\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_EXTRALIB_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)) \\\n+\t\t| $(HLIB0_H_$(CFG_BUILD_TRIPLE))/\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_LIBRUSTC_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)) \\\n+\t\t| $(HLIB0_H_$(CFG_BUILD_TRIPLE))/\n \t$(Q)touch $@\n \n $(HLIB0_H_$(CFG_BUILD_TRIPLE))/$(CFG_RUSTLLVM_$(CFG_BUILD_TRIPLE)): \\\n-\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE))\n+\t\t$(HBIN0_H_$(CFG_BUILD_TRIPLE))/rustc$(X_$(CFG_BUILD_TRIPLE)) \\\n+\t\t| $(HLIB0_H_$(CFG_BUILD_TRIPLE))/\n \t$(Q)touch $@\n \n # For other targets, let the host build the target:\n@@ -48,33 +59,51 @@ define BOOTSTRAP_STAGE0\n   # $(2) stage to bootstrap from\n   # $(3) target to bootstrap from\n \n-$$(HBIN0_H_$(1))/rustc$$(X_$(1)):\t\t\t\t\t\t\t\t\\\n-\t\t$$(TBIN$(2)_T_$(1)_H_$(3))/rustc$$(X_$(1))\n+$(HBIN0_H_$(1))/:\n+\tmkdir -p $@\n+\n+$(HLIB0_H_$(1))/:\n+\tmkdir -p $@\n+\n+$$(HBIN0_H_$(1))/rustc$$(X_$(1)): \\\n+\t\t$$(TBIN$(2)_T_$(1)_H_$(3))/rustc$$(X_$(1)) \\\n+\t\t| $(HBIN0_H_$(1))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB0_H_$(1))/$(CFG_RUNTIME_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUNTIME_$(1))\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUNTIME_$(1)) \\\n+\t\t| $(HLIB0_H_$(1))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB0_H_$(1))/$(CFG_STDLIB_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_STDLIB_$(1))\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_STDLIB_$(1)) \\\n+\t\t| $(HLIB0_H_$(1))/\n \t@$$(call E, cp: $$@)\n+\t$$(call CHECK_FOR_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(STDLIB_GLOB_$(1)) $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB0_H_$(1))/$(CFG_EXTRALIB_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_EXTRALIB_$(1))\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_EXTRALIB_$(1)) \\\n+\t\t| $(HLIB0_H_$(1))/\n \t@$$(call E, cp: $$@)\n+\t$$(call CHECK_FOR_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(EXTRALIB_GLOB_$(1)) $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB0_H_$(1))/$(CFG_LIBRUSTC_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_LIBRUSTC_$(1))\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_LIBRUSTC_$(1)) \\\n+\t\t| $(HLIB0_H_$(1))/\n \t@$$(call E, cp: $$@)\n+\t$$(call CHECK_FOR_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$(TLIB$(2)_T_$(1)_H_$(3))/$(LIBRUSTC_GLOB_$(1)) $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(4)),$$(notdir $$@))\n \n $$(HLIB0_H_$(1))/$(CFG_RUSTLLVM_$(1)): \\\n-\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUSTLLVM_$(1))\n+\t\t$$(TLIB$(2)_T_$(1)_H_$(3))/$(CFG_RUSTLLVM_$(1)) \\\n+\t\t| $(HLIB0_H_$(1))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n "}, {"sha": "e3d4b985449ab8e701cf7528754ae0e1b7a41b4f", "filename": "mk/target.mk", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -48,15 +48,19 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2)): \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(2)),$$(notdir $$@))\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_EXTRALIB_$(2)): \\\n \t\t$$(EXTRALIB_CRATE) $$(EXTRALIB_INPUTS) \\\n \t        $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2)) \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(2)),$$(notdir $$@))\n \n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n                 $$(LIBSYNTAX_CRATE) $$(LIBSYNTAX_INPUTS) \\\n@@ -65,7 +69,9 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n \t\t$$(TEXTRALIB_DEFAULT$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $(BORROWCK) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n \n # Only build the compiler for host triples\n ifneq ($$(findstring $(2),$$(CFG_HOST_TRIPLES)),)\n@@ -83,7 +89,9 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \n $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\\n \t\t$$(DRIVER_CRATE)\t\t\t\t\\"}, {"sha": "5afabbcb336357998d9c6ab73fd442614bd27c1b", "filename": "mk/tools.mk", "status": "modified", "additions": 53, "deletions": 19, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Ftools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/mk%2Ftools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftools.mk?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -39,7 +39,8 @@ $$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X_$(4)):\t\t\t\\\n \t\t$$(COMPILETEST_CRATE) $$(COMPILETEST_INPUTS)\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))      \\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4))    \\\n+\t\t| $$(TBIN$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$<\n \n@@ -48,13 +49,17 @@ $$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4)):\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4)) \\\n+\t\t| $$(TLIB$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTPKG_GLOB_$(4)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) $$(WFLAGS_ST$(1)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTPKG_GLOB_$(4)),$$(notdir $$@))\n \n $$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X_$(4)):\t\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4)) \\\n+\t\t| $$(TBIN$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rustpkg -o $$@ $$<\n \n@@ -63,13 +68,17 @@ $$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4)):\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4)) \\\n+\t\t| $$(TLIB$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTDOC_GLOB_$(4)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTDOC_GLOB_$(4)),$$(notdir $$@))\n \n $$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\t\t\t\\\n+\t\t| $$(TBIN$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rustdoc -o $$@ $$<\n \n@@ -78,13 +87,17 @@ $$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4)):\t\t\\\n \t\t$$(TSREQ$(1)_T_$(4)_H_$(3))\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_STDLIB_$(4))\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_EXTRALIB_$(4))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\t\\\n+\t\t| $$(TLIB$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTI_GLOB_$(4)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTI_GLOB_$(4)),$$(notdir $$@))\n \n $$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(4))/$(CFG_LIBRUSTI_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(4))/$(CFG_LIBRUSTI_$(4)) \\\n+\t\t| $$(TBIN$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rusti -o $$@ $$<\n \n@@ -96,13 +109,17 @@ $$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4)):\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4))\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4))\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTC_$(4))\t\t\\\n+\t\t| $$(TLIB$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUST_GLOB_$(4)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) -o $$@ $$< && touch $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUST_GLOB_$(4)),$$(notdir $$@))\n \n $$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X_$(4)):\t\t\t\\\n \t\t$$(DRIVER_CRATE) \t\t\t\t\t\t\t\\\n-\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4))\n+\t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4)) \\\n+\t\t| $$(TBIN$(1)_T_$(4)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n \t$$(STAGE$(1)_T_$(4)_H_$(3)) --cfg rust -o $$@ $$<\n \n@@ -112,76 +129,93 @@ define TOOLS_STAGE_N_HOST\n \n $$(HBIN$(2)_H_$(4))/compiletest$$(X_$(4)):\t\t\t\t\\\n \t\t$$(TBIN$(1)_T_$(4)_H_$(3))/compiletest$$(X_$(4))\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(4)):\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTPKG_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\t\\\n+\t\t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTPKG_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTPKG_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTPKG_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n $$(HBIN$(2)_H_$(4))/rustpkg$$(X_$(4)):\t\t\t\t\\\n \t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustpkg$$(X_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTPKG_$(4))\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(4)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTDOC_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4)) \\\n+\t\t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTDOC_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTDOC_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTDOC_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n $$(HBIN$(2)_H_$(4))/rustdoc$$(X_$(4)):\t\t\t\t\\\n \t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rustdoc$$(X_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTDOC_$(4))\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(4)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUSTI_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4)) \\\n+\t\t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTI_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTI_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUSTI_DSYM_GLOB_$(4))) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n $$(HBIN$(2)_H_$(4))/rusti$$(X_$(4)):\t\t\t\t\\\n \t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rusti$$(X_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTI_$(4))\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n $$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(4)):\t\t\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(4)_H_$(3))/$(CFG_LIBRUST_$(4))\t\\\n-\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\t\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUSTC_$(4))\t\\\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HLIB$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n+\t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUST_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp $$< $$@\n+\t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUST_GLOB_$(4)),$$(notdir $$@))\n \t$$(Q)cp -R $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_GLOB_$(4)) \\\n \t\t$$(wildcard $$(TLIB$(1)_T_$(4)_H_$(3))/$(LIBRUST_DSYM_GLOB)_$(4)) \\\n \t        $$(HLIB$(2)_H_$(4))\n \n $$(HBIN$(2)_H_$(4))/rust$$(X_$(4)):\t\t\t\t\\\n \t\t$$(TBIN$(1)_T_$(4)_H_$(3))/rust$$(X_$(4))\t\\\n \t\t$$(HLIB$(2)_H_$(4))/$(CFG_LIBRUST_$(4))\t\\\n-\t\t$$(HSREQ$(2)_H_$(4))\n+\t\t$$(HSREQ$(2)_H_$(4))\t\t\t\t\\\n+\t\t| $$(HBIN$(2)_H_$(4))/\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n "}, {"sha": "af1a6d6da7bcd85613f97173332094c188836727", "filename": "src/etc/get-snapshot.py", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8a7b636649db7601bbef90c525eea2a457ba3a8c/src%2Fetc%2Fget-snapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/8a7b636649db7601bbef90c525eea2a457ba3a8c/src%2Fetc%2Fget-snapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fget-snapshot.py?ref=8a7b636649db7601bbef90c525eea2a457ba3a8c", "patch": "@@ -8,9 +8,20 @@ def unpack_snapshot(triple, dl_path):\n   print(\"opening snapshot \" + dl_path)\n   tar = tarfile.open(dl_path)\n   kernel = get_kernel(triple)\n+\n+  stagep = os.path.join(triple, \"stage0\")\n+\n+  # Remove files from prior unpackings, since snapshot rustc may not\n+  # be able to disambiguate between multiple candidate libraries.\n+  # (Leave dirs in place since extracting step still needs them.)\n+  for root, _, files in os.walk(stagep):\n+    for f in files:\n+      print(\"removing \" + os.path.join(root, f))\n+      os.unlink(os.path.join(root, f))\n+\n   for p in tar.getnames():\n     name = p.replace(\"rust-stage0/\", \"\", 1);\n-    stagep = os.path.join(triple, \"stage0\")\n+\n     fp = os.path.join(stagep, name)\n     print(\"extracting \" + p)\n     tar.extract(p, download_unpack_base)"}]}