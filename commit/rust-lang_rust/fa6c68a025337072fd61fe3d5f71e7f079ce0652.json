{"sha": "fa6c68a025337072fd61fe3d5f71e7f079ce0652", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNmM2OGEwMjUzMzcwNzJmZDYxZmUzZDVmNzFlN2YwNzljZTA2NTI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-25T22:38:56Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-04-26T00:19:36Z"}, "message": "Set no-unwind attribute on all upcalls other than fail.", "tree": {"sha": "bfba15d6501a7cd827daffaa1a0ea1f3de9b34e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfba15d6501a7cd827daffaa1a0ea1f3de9b34e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa6c68a025337072fd61fe3d5f71e7f079ce0652", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6c68a025337072fd61fe3d5f71e7f079ce0652", "html_url": "https://github.com/rust-lang/rust/commit/fa6c68a025337072fd61fe3d5f71e7f079ce0652", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa6c68a025337072fd61fe3d5f71e7f079ce0652/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2f04efd593a6da5b9368ec85e02ed46631cb594", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f04efd593a6da5b9368ec85e02ed46631cb594", "html_url": "https://github.com/rust-lang/rust/commit/a2f04efd593a6da5b9368ec85e02ed46631cb594"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d3946a5de14e2f5aa424a37a0a52fd4e4f8ff6ef", "filename": "src/rustc/back/upcall.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fa6c68a025337072fd61fe3d5f71e7f079ce0652/src%2Frustc%2Fback%2Fupcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6c68a025337072fd61fe3d5f71e7f079ce0652/src%2Frustc%2Fback%2Fupcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fback%2Fupcall.rs?ref=fa6c68a025337072fd61fe3d5f71e7f079ce0652", "patch": "@@ -38,7 +38,11 @@ fn declare_upcalls(targ_cfg: @session::config,\n         let mut arg_tys: [TypeRef] = [];\n         for tys.each {|t| arg_tys += [t]; }\n         let fn_ty = T_fn(arg_tys, rv);\n-        ret base::decl_cdecl_fn(llmod, prefix + name, fn_ty);\n+        let f = base::decl_cdecl_fn(llmod, prefix + name, fn_ty);\n+        if name != \"fail\" {\n+            base::set_no_unwind(f);\n+        }\n+        ret f;\n     }\n     let d = bind decl(llmod, \"upcall_\", _, _, _);\n     let dv = bind decl(llmod, \"upcall_\", _, _, T_void());"}, {"sha": "88df4687d61ee22e28db5ecaca805666c9606858", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fa6c68a025337072fd61fe3d5f71e7f079ce0652/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6c68a025337072fd61fe3d5f71e7f079ce0652/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=fa6c68a025337072fd61fe3d5f71e7f079ce0652", "patch": "@@ -393,6 +393,11 @@ fn set_no_inline(f: ValueRef) {\n                               0u as c_uint);\n }\n \n+fn set_no_unwind(f: ValueRef) {\n+    llvm::LLVMAddFunctionAttr(f, lib::llvm::NoUnwindAttribute as c_uint,\n+                              0u as c_uint);\n+}\n+\n // Tell LLVM to emit the information necessary to unwind the stack for the\n // function f.\n fn set_uwtable(f: ValueRef) {"}]}