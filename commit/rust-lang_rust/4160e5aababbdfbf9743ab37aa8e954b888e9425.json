{"sha": "4160e5aababbdfbf9743ab37aa8e954b888e9425", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNjBlNWFhYmFiYmRmYmY5NzQzYWIzN2FhOGU5NTRiODg4ZTk0MjU=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-01T18:20:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-01T18:20:17Z"}, "message": "Rollup merge of #65946 - ecstatic-morse:refactor-promotion2, r=eddyb\n\nMake `promote_consts` emit the errors when required promotion fails\n\nA very minimal version of #65942.\n\nThis will cause a generic \"argument X is required to be a constant\" message for `simd_shuffle` LLVM intrinsics instead of the [custom one](https://github.com/rust-lang/rust/blob/caa1f8d7b3b021c86a70ff62d23a07d97acff4c4/src/librustc_mir/transform/qualify_consts.rs#L1616). It may be possible to remove this special-casing altogether after rust-lang/stdarch#825.\n\nr? @eddyb", "tree": {"sha": "17dad49fa9ce2ed35a5bd18a5d88787cb866c36a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17dad49fa9ce2ed35a5bd18a5d88787cb866c36a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4160e5aababbdfbf9743ab37aa8e954b888e9425", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdvHdhCRBK7hj4Ov3rIwAAdHIIAFuE5H4sWj6+ekTVZrJDppwH\nn/+tmoQl31rundjkAaLM+ASDUtPdYAZwHiziqsQc9i/vLOzekenmLlQyhaFN9Wee\n1lxcbTXbaEGkTBeQ3bYw0jkbascGSqX94+Q8GE0Vbrl2mrK3lwG/AUAiI4OGLEmP\nfioddL6gUoMhwvW82qMw9l/C540JuOmXAmkNneX6zT0Ynszeo7VIJ3t8TRu056Y2\nU0QtnXOwyDkqcAOVDP0d3bKdMm1Essj606HguYxbexzo3rXp455TJWbojcXlyKfK\n2+VFNoNkFmpEZo1LeoWCELcL3Amw9NjDUPGQCvEtLVWoSxFnEu/OaU4w4ZiTRdk=\n=ILLc\n-----END PGP SIGNATURE-----\n", "payload": "tree 17dad49fa9ce2ed35a5bd18a5d88787cb866c36a\nparent b7416348c8155e9cc36dfdce349328ad8bdc402d\nparent 627e3ef739dbead85aa04f32dc2d2a2ab7dd4637\nauthor Tyler Mandry <tmandry@gmail.com> 1572632417 -0700\ncommitter GitHub <noreply@github.com> 1572632417 -0700\n\nRollup merge of #65946 - ecstatic-morse:refactor-promotion2, r=eddyb\n\nMake `promote_consts` emit the errors when required promotion fails\n\nA very minimal version of #65942.\n\nThis will cause a generic \"argument X is required to be a constant\" message for `simd_shuffle` LLVM intrinsics instead of the [custom one](https://github.com/rust-lang/rust/blob/caa1f8d7b3b021c86a70ff62d23a07d97acff4c4/src/librustc_mir/transform/qualify_consts.rs#L1616). It may be possible to remove this special-casing altogether after rust-lang/stdarch#825.\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4160e5aababbdfbf9743ab37aa8e954b888e9425", "html_url": "https://github.com/rust-lang/rust/commit/4160e5aababbdfbf9743ab37aa8e954b888e9425", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4160e5aababbdfbf9743ab37aa8e954b888e9425/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7416348c8155e9cc36dfdce349328ad8bdc402d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7416348c8155e9cc36dfdce349328ad8bdc402d", "html_url": "https://github.com/rust-lang/rust/commit/b7416348c8155e9cc36dfdce349328ad8bdc402d"}, {"sha": "627e3ef739dbead85aa04f32dc2d2a2ab7dd4637", "url": "https://api.github.com/repos/rust-lang/rust/commits/627e3ef739dbead85aa04f32dc2d2a2ab7dd4637", "html_url": "https://github.com/rust-lang/rust/commit/627e3ef739dbead85aa04f32dc2d2a2ab7dd4637"}], "stats": {"total": 46, "additions": 27, "deletions": 19}, "files": [{"sha": "c119ca536fb524fee9de6768b63fa7d83e3c8786", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=4160e5aababbdfbf9743ab37aa8e954b888e9425", "patch": "@@ -2545,7 +2545,7 @@ There are some known bugs that trigger this message.\n //  E0471, // constant evaluation error (in pattern)\n //  E0385, // {} in an aliasable location\n     E0521, // borrowed data escapes outside of closure\n-    E0526, // shuffle indices are not constant\n+//  E0526, // shuffle indices are not constant\n     E0594, // cannot assign to {}\n //  E0598, // lifetime of {} is too short to guarantee its contents can be...\n     E0625, // thread-local statics cannot be accessed at compile-time"}, {"sha": "83f3aafc55cb10cc8547a0f5a1430db7c47c79bc", "filename": "src/librustc_mir/transform/promote_consts.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fpromote_consts.rs?ref=4160e5aababbdfbf9743ab37aa8e954b888e9425", "patch": "@@ -80,6 +80,17 @@ pub enum Candidate {\n     Argument { bb: BasicBlock, index: usize },\n }\n \n+impl Candidate {\n+    /// Returns `true` if we should use the \"explicit\" rules for promotability for this `Candidate`.\n+    fn forces_explicit_promotion(&self) -> bool {\n+        match self {\n+            Candidate::Ref(_) |\n+            Candidate::Repeat(_) => false,\n+            Candidate::Argument { .. } => true,\n+        }\n+    }\n+}\n+\n fn args_required_const(tcx: TyCtxt<'_>, def_id: DefId) -> Option<Vec<usize>> {\n     let attrs = tcx.get_attrs(def_id);\n     let attr = attrs.iter().find(|a| a.check_name(sym::rustc_args_required_const))?;\n@@ -727,16 +738,22 @@ pub fn validate_candidates(\n     };\n \n     candidates.iter().copied().filter(|&candidate| {\n-        validator.explicit = match candidate {\n-            Candidate::Ref(_) |\n-            Candidate::Repeat(_) => false,\n-            Candidate::Argument { .. } => true,\n-        };\n+        validator.explicit = candidate.forces_explicit_promotion();\n \n         // FIXME(eddyb) also emit the errors for shuffle indices\n         // and `#[rustc_args_required_const]` arguments here.\n \n-        validator.validate_candidate(candidate).is_ok()\n+        let is_promotable = validator.validate_candidate(candidate).is_ok();\n+        match candidate {\n+            Candidate::Argument { bb, index } if !is_promotable => {\n+                let span = body[bb].terminator().source_info.span;\n+                let msg = format!(\"argument {} is required to be a constant\", index + 1);\n+                tcx.sess.span_err(span, &msg);\n+            }\n+            _ => ()\n+        }\n+\n+        is_promotable\n     }).collect()\n }\n "}, {"sha": "f488b457334e5bc43ec3f5c8522dcfbb54c75edd", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=4160e5aababbdfbf9743ab37aa8e954b888e9425", "patch": "@@ -1606,20 +1606,12 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n                     // This is not a problem, because the argument explicitly\n                     // requests constness, in contrast to regular promotion\n                     // which happens even without the user requesting it.\n-                    // We can error out with a hard error if the argument is not\n-                    // constant here.\n+                    //\n+                    // `promote_consts` is responsible for emitting the error if\n+                    // the argument is not promotable.\n                     if !IsNotPromotable::in_operand(self, arg) {\n                         debug!(\"visit_terminator_kind: candidate={:?}\", candidate);\n                         self.promotion_candidates.push(candidate);\n-                    } else {\n-                        if is_shuffle {\n-                            span_err!(self.tcx.sess, self.span, E0526,\n-                                      \"shuffle indices are not constant\");\n-                        } else {\n-                            self.tcx.sess.span_err(self.span,\n-                                &format!(\"argument {} is required to be a constant\",\n-                                         i + 1));\n-                        }\n                     }\n                 }\n             }"}, {"sha": "bd58de81c778a0287402c77bda52a7248c2f9c8c", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4160e5aababbdfbf9743ab37aa8e954b888e9425/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=4160e5aababbdfbf9743ab37aa8e954b888e9425", "patch": "@@ -40,7 +40,6 @@ const WHITELIST: &[&str] = &[\n     \"E0514\",\n     \"E0519\",\n     \"E0523\",\n-    \"E0526\",\n     \"E0554\",\n     \"E0570\",\n     \"E0629\","}]}