{"sha": "f7f59522b6354d66cf1f08ff0b665d3699acd98c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZjU5NTIyYjYzNTRkNjZjZjFmMDhmZjBiNjY1ZDM2OTlhY2Q5OGM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-27T00:00:05Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-01-07T14:41:48Z"}, "message": "Add warning label to `try_as_mplace`", "tree": {"sha": "065749f463e3ff50bdf38a947b3dd0705a66a7e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/065749f463e3ff50bdf38a947b3dd0705a66a7e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7f59522b6354d66cf1f08ff0b665d3699acd98c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f59522b6354d66cf1f08ff0b665d3699acd98c", "html_url": "https://github.com/rust-lang/rust/commit/f7f59522b6354d66cf1f08ff0b665d3699acd98c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7f59522b6354d66cf1f08ff0b665d3699acd98c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1990db7c68ead195d1ddf4b245e3c0e6f721fbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1990db7c68ead195d1ddf4b245e3c0e6f721fbc", "html_url": "https://github.com/rust-lang/rust/commit/a1990db7c68ead195d1ddf4b245e3c0e6f721fbc"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "1f7db45ccff56f74be8dbc55ca50a9fe4d40ba72", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f7f59522b6354d66cf1f08ff0b665d3699acd98c/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f59522b6354d66cf1f08ff0b665d3699acd98c/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=f7f59522b6354d66cf1f08ff0b665d3699acd98c", "patch": "@@ -241,6 +241,8 @@ impl<'tcx, Tag> MPlaceTy<'tcx, Tag> {\n // These are defined here because they produce a place.\n impl<'tcx, Tag: ::std::fmt::Debug + Copy> OpTy<'tcx, Tag> {\n     #[inline(always)]\n+    /// Note: do not call `as_ref` on the resulting place. This function should only be used to\n+    /// read from the resulting mplace, not to get its address back.\n     pub fn try_as_mplace(\n         self,\n         cx: &impl HasDataLayout,\n@@ -255,6 +257,8 @@ impl<'tcx, Tag: ::std::fmt::Debug + Copy> OpTy<'tcx, Tag> {\n     }\n \n     #[inline(always)]\n+    /// Note: do not call `as_ref` on the resulting place. This function should only be used to\n+    /// read from the resulting mplace, not to get its address back.\n     pub fn assert_mem_place(self, cx: &impl HasDataLayout) -> MPlaceTy<'tcx, Tag> {\n         self.try_as_mplace(cx).unwrap()\n     }"}]}