{"sha": "f1a40410ecce3c1b115e244c7e189e019e226c13", "node_id": "C_kwDOAAsO6NoAKGYxYTQwNDEwZWNjZTNjMWIxMTVlMjQ0YzdlMTg5ZTAxOWUyMjZjMTM", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-06T14:30:49Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-07T09:34:35Z"}, "message": "Return status from futex_wake().", "tree": {"sha": "0fd440c7667313056291329a277fcdf28330b282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0fd440c7667313056291329a277fcdf28330b282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1a40410ecce3c1b115e244c7e189e019e226c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1a40410ecce3c1b115e244c7e189e019e226c13", "html_url": "https://github.com/rust-lang/rust/commit/f1a40410ecce3c1b115e244c7e189e019e226c13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1a40410ecce3c1b115e244c7e189e019e226c13/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cd6080f6c778f6664ea3d12ca7848231707a627", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd6080f6c778f6664ea3d12ca7848231707a627", "html_url": "https://github.com/rust-lang/rust/commit/8cd6080f6c778f6664ea3d12ca7848231707a627"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "4231241a142246f08c5b7bf9a4ca7c7b2e43036f", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f1a40410ecce3c1b115e244c7e189e019e226c13/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1a40410ecce3c1b115e244c7e189e019e226c13/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=f1a40410ecce3c1b115e244c7e189e019e226c13", "patch": "@@ -69,14 +69,14 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) {\n }\n \n #[cfg(any(target_os = \"linux\", target_os = \"android\"))]\n-pub fn futex_wake(futex: &AtomicI32) {\n+pub fn futex_wake(futex: &AtomicI32) -> bool {\n     unsafe {\n         libc::syscall(\n             libc::SYS_futex,\n             futex as *const AtomicI32,\n             libc::FUTEX_WAKE | libc::FUTEX_PRIVATE_FLAG,\n             1,\n-        );\n+        ) > 0\n     }\n }\n \n@@ -93,12 +93,10 @@ pub fn futex_wake_all(futex: &AtomicI32) {\n }\n \n #[cfg(target_os = \"emscripten\")]\n-pub fn futex_wake(futex: &AtomicI32) {\n+pub fn futex_wake(futex: &AtomicI32) -> bool {\n     extern \"C\" {\n         fn emscripten_futex_wake(addr: *const AtomicI32, count: libc::c_int) -> libc::c_int;\n     }\n \n-    unsafe {\n-        emscripten_futex_wake(futex as *const AtomicI32, 1);\n-    }\n+    unsafe { emscripten_futex_wake(futex as *const AtomicI32, 1) > 0 }\n }"}]}