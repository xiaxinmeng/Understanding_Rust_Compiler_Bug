{"sha": "8a1f928b8e1969b88de614602bd5d73f6a2b358e", "node_id": "C_kwDOAAsO6NoAKDhhMWY5MjhiOGUxOTY5Yjg4ZGU2MTQ2MDJiZDVkNzNmNmEyYjM1OGU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-22T22:58:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-22T23:03:12Z"}, "message": "interpret/validity: improve clarity", "tree": {"sha": "94cf8462cdfddb64f733b2b1cf758ea7703d402a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94cf8462cdfddb64f733b2b1cf758ea7703d402a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a1f928b8e1969b88de614602bd5d73f6a2b358e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a1f928b8e1969b88de614602bd5d73f6a2b358e", "html_url": "https://github.com/rust-lang/rust/commit/8a1f928b8e1969b88de614602bd5d73f6a2b358e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a1f928b8e1969b88de614602bd5d73f6a2b358e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f37001055c29982f4c27ee9edd90449c8e07774", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f37001055c29982f4c27ee9edd90449c8e07774", "html_url": "https://github.com/rust-lang/rust/commit/5f37001055c29982f4c27ee9edd90449c8e07774"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "8bdafa876238601cb511ebd34bbb7ae81a1fec65", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8a1f928b8e1969b88de614602bd5d73f6a2b358e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a1f928b8e1969b88de614602bd5d73f6a2b358e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=8a1f928b8e1969b88de614602bd5d73f6a2b358e", "patch": "@@ -432,9 +432,8 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n         if let Some(ref mut ref_tracking) = self.ref_tracking {\n             // Proceed recursively even for ZST, no reason to skip them!\n             // `!` is a ZST and we want to validate it.\n-            // Skip validation entirely for some external statics\n             if let Ok((alloc_id, _offset, _ptr)) = self.ecx.memory.ptr_try_get_alloc(place.ptr) {\n-                // not a ZST\n+                // Special handling for pointers to statics (irrespective of their type).\n                 let alloc_kind = self.ecx.tcx.get_global_alloc(alloc_id);\n                 if let Some(GlobalAlloc::Static(did)) = alloc_kind {\n                     assert!(!self.ecx.tcx.is_thread_local_static(did));\n@@ -469,7 +468,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 // We need to clone the path anyway, make sure it gets created\n                 // with enough space for the additional `Deref`.\n                 let mut new_path = Vec::with_capacity(path.len() + 1);\n-                new_path.clone_from(path);\n+                new_path.extend(path);\n                 new_path.push(PathElem::Deref);\n                 new_path\n             });"}]}