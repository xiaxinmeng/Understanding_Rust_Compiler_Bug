{"sha": "bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmOWNlYmZjMDYzN2I4Yzk5MzdiYmY3N2ZjZGMxMjI2NWIxOGNlOWM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-28T23:45:13Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-01-28T23:45:13Z"}, "message": "Fix a bug in linearize and get the captured tydescs type right.", "tree": {"sha": "baa2cfc182a50ce75dcae7934e7371dc317004ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baa2cfc182a50ce75dcae7934e7371dc317004ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c", "html_url": "https://github.com/rust-lang/rust/commit/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa5b92985e6df582a0d33d10cf41e2835ef11b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa5b92985e6df582a0d33d10cf41e2835ef11b1", "html_url": "https://github.com/rust-lang/rust/commit/caa5b92985e6df582a0d33d10cf41e2835ef11b1"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "ee695b881fd1d08aa0a909f6fb48602b7b2b6d5c", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bf9cebfc0637b8c9937bbf77fcdc12265b18ce9c", "patch": "@@ -240,12 +240,12 @@ fn T_tydesc() -> TypeRef {\n \n     auto th = mk_type_handle();\n     auto abs_tydesc = llvm.LLVMResolveTypeHandle(th.llth);\n-\n+    auto tydescpp = T_ptr(T_ptr(abs_tydesc));\n     auto pvoid = T_ptr(T_i8());\n     auto glue_fn_ty = T_ptr(T_fn(vec(T_taskptr(),\n-                                     T_ptr(abs_tydesc),\n+                                     tydescpp,\n                                      pvoid), T_void()));\n-    auto tydesc = T_struct(vec(T_ptr(abs_tydesc), // first_param\n+    auto tydesc = T_struct(vec(tydescpp,          // first_param\n                                T_int(),           // size\n                                T_int(),           // align\n                                glue_fn_ty,        // take_glue_off\n@@ -907,8 +907,8 @@ fn linearize_ty_params(@block_ctxt cx, @ty.t t)\n     let vec[ValueRef] param_vals = vec();\n     let vec[ast.def_id] param_defs = vec();\n     type rr = rec(@block_ctxt cx,\n-                 mutable vec[ValueRef] vals,\n-                 mutable vec[ast.def_id] defs);\n+                  mutable vec[ValueRef] vals,\n+                  mutable vec[ast.def_id] defs);\n \n     state obj folder(@rr r) {\n         fn fold_simple_ty(@ty.t t) -> @ty.t {\n@@ -921,7 +921,7 @@ fn linearize_ty_params(@block_ctxt cx, @ty.t t)\n                         }\n                     }\n                     if (!seen) {\n-                        r.vals += cx.fcx.lltydescs.get(pid);\n+                        r.vals += r.cx.fcx.lltydescs.get(pid);\n                         r.defs += pid;\n                     }\n                 }\n@@ -957,6 +957,8 @@ fn get_tydesc(&@block_ctxt cx, @ty.t t) -> ValueRef {\n             make_tydesc(cx.fcx.ccx, t, tys._0);\n         }\n \n+        auto root = cx.fcx.ccx.tydescs.get(t);\n+\n         cx.fcx.ccx.sess.unimpl(\"derived type descriptors\");\n     }\n \n@@ -977,9 +979,9 @@ fn make_tydesc(@crate_ctxt cx, @ty.t t, vec[ast.def_id] typaram_defs) {\n     auto llty = type_of(cx, t);\n     auto pvoid = T_ptr(T_i8());\n     auto glue_fn_ty = T_ptr(T_fn(vec(T_taskptr(),\n-                                     T_ptr(T_tydesc()),\n+                                     T_ptr(T_ptr(T_tydesc())),\n                                      pvoid), T_void()));\n-    auto tydesc = C_struct(vec(C_null(T_ptr(T_tydesc())),\n+    auto tydesc = C_struct(vec(C_null(T_ptr(T_ptr(T_tydesc()))),\n                                llsize_of(llty),\n                                llalign_of(llty),\n                                take_glue,             // take_glue_off\n@@ -1003,7 +1005,7 @@ fn make_generic_glue(@crate_ctxt cx, @ty.t t, str name,\n                      val_and_ty_fn helper,\n                      vec[ast.def_id] typaram_defs) -> ValueRef {\n     auto llfnty = T_fn(vec(T_taskptr(),\n-                           T_ptr(T_tydesc()),\n+                           T_ptr(T_ptr(T_tydesc())),\n                            T_ptr(T_i8())), T_void());\n \n     auto fn_name = cx.names.next(\"_rust_\" + name) + \".\" + ty.ty_to_str(t);"}]}