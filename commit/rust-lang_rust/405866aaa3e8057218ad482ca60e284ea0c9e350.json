{"sha": "405866aaa3e8057218ad482ca60e284ea0c9e350", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwNTg2NmFhYTNlODA1NzIxOGFkNDgyY2E2MGUyODRlYTBjOWUzNTA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-16T10:44:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-16T10:44:32Z"}, "message": "re-add miri intrinsic ABI check", "tree": {"sha": "259f54665ba57f4c7155fb276151dcf37d1c6fc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/259f54665ba57f4c7155fb276151dcf37d1c6fc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/405866aaa3e8057218ad482ca60e284ea0c9e350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/405866aaa3e8057218ad482ca60e284ea0c9e350", "html_url": "https://github.com/rust-lang/rust/commit/405866aaa3e8057218ad482ca60e284ea0c9e350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/405866aaa3e8057218ad482ca60e284ea0c9e350/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d8b6ce89e0874b5e93c9e41bfdd565c56372bb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d8b6ce89e0874b5e93c9e41bfdd565c56372bb0", "html_url": "https://github.com/rust-lang/rust/commit/1d8b6ce89e0874b5e93c9e41bfdd565c56372bb0"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "0134c77808b826b87f09d19fa28b3aedf79fbb5b", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/405866aaa3e8057218ad482ca60e284ea0c9e350/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/405866aaa3e8057218ad482ca60e284ea0c9e350/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=405866aaa3e8057218ad482ca60e284ea0c9e350", "patch": "@@ -264,6 +264,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n         match instance.def {\n             ty::InstanceDef::Intrinsic(..) => {\n+                if caller_abi != Abi::RustIntrinsic && caller_abi != Abi::PlatformIntrinsic {\n+                    throw_ub_format!(\"Rust intrinsic called with an ABI other than \\\n+                        `RustIntrinsic` and `PlatformIntrinsic`.\");\n+                }\n+\n                 let old_stack = self.cur_frame();\n                 let old_bb = self.frame().block;\n                 M::call_intrinsic(self, span, instance, args, dest, ret, unwind)?;"}]}