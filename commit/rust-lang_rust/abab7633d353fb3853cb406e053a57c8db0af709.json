{"sha": "abab7633d353fb3853cb406e053a57c8db0af709", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiYWI3NjMzZDM1M2ZiMzg1M2NiNDA2ZTA1M2E1N2M4ZGIwYWY3MDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-15T22:22:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-15T22:22:13Z"}, "message": "Auto merge of #46540 - euclio:import-parents, r=nrc\n\nsave-analysis: add parents to imports\n\nThis PR populates the `parent` field added to `Import` in `rls-data` 0.14.\n\nI'm not quite sure if I handled nested imports' parents correctly: this is a new feature to me.\n\nr? @nrc\n\ncc https://github.com/nrc/rls-analysis/issues/123", "tree": {"sha": "0ce407169a68eb6891caed9bd9400a0b2cf9bf6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ce407169a68eb6891caed9bd9400a0b2cf9bf6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abab7633d353fb3853cb406e053a57c8db0af709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abab7633d353fb3853cb406e053a57c8db0af709", "html_url": "https://github.com/rust-lang/rust/commit/abab7633d353fb3853cb406e053a57c8db0af709", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abab7633d353fb3853cb406e053a57c8db0af709/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77efd6800c57ba83923dddbbabf03c7afa6a34a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/77efd6800c57ba83923dddbbabf03c7afa6a34a4", "html_url": "https://github.com/rust-lang/rust/commit/77efd6800c57ba83923dddbbabf03c7afa6a34a4"}, {"sha": "b82d2809fda9c75c5144d6ada0bc25a9f50a1bb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/b82d2809fda9c75c5144d6ada0bc25a9f50a1bb4", "html_url": "https://github.com/rust-lang/rust/commit/b82d2809fda9c75c5144d6ada0bc25a9f50a1bb4"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "8cf9c3f2381070fe44096bdabccc51e2807bd082", "filename": "src/Cargo.lock", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/abab7633d353fb3853cb406e053a57c8db0af709/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/abab7633d353fb3853cb406e053a57c8db0af709/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=abab7633d353fb3853cb406e053a57c8db0af709", "patch": "@@ -1595,6 +1595,15 @@ dependencies = [\n  \"serde_derive 1.0.23 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rls-data\"\n+version = \"0.14.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rls-rustc\"\n version = \"0.1.1\"\n@@ -1964,7 +1973,7 @@ name = \"rustc_save_analysis\"\n version = \"0.0.0\"\n dependencies = [\n  \"log 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rls-data 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rls-data 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2839,6 +2848,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum regex-syntax 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ad890a5eef7953f55427c50575c680c42841653abd2b028b68cd223d157f62db\"\n \"checksum rls-analysis 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"171fcab0206870b8bec0d2c60dea66f820ce648a85abffc66f7e2df95c283e06\"\n \"checksum rls-data 0.13.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff85bb3a0daf9f64207a5530d90ae1c10f5515cef064c88b6821090678382b44\"\n+\"checksum rls-data 0.14.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8024f1feaca72d0aa4ae1e2a8d454a31b9a33ed02f8d0e9c8559bf53c267ec3c\"\n \"checksum rls-rustc 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b21ea952e9bf1569929abf1bb920262cde04b7b1b26d8e0260286302807299d2\"\n \"checksum rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d7c7046dc6a92f2ae02ed302746db4382e75131b9ce20ce967259f6b5867a6a\"\n \"checksum rls-vfs 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ffd34691a510938bb67fe0444fb363103c73ffb31c121d1e16bc92d8945ea8ff\""}, {"sha": "d8581f52d0d1b3616e8f7eec217b08951fc18d98", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abab7633d353fb3853cb406e053a57c8db0af709/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/abab7633d353fb3853cb406e053a57c8db0af709/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=abab7633d353fb3853cb406e053a57c8db0af709", "patch": "@@ -15,7 +15,7 @@ rustc_data_structures = { path = \"../librustc_data_structures\" }\n rustc_typeck = { path = \"../librustc_typeck\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rls-data = \"0.13\"\n+rls-data = \"0.14\"\n rls-span = \"0.4\"\n # FIXME(#40527) should move rustc serialize out of tree\n rustc-serialize = \"0.3\""}, {"sha": "11e2135d2de367cffb85a4217e4a788c38c70d83", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/abab7633d353fb3853cb406e053a57c8db0af709/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abab7633d353fb3853cb406e053a57c8db0af709/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=abab7633d353fb3853cb406e053a57c8db0af709", "patch": "@@ -1231,13 +1231,26 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n         }\n     }\n \n+    /// Dumps imports in a use tree recursively.\n+    ///\n+    /// A use tree is an import that may contain nested braces (RFC 2128). The `use_tree` parameter\n+    /// is the current use tree under scrutiny, while `id` and `prefix` are its corresponding node\n+    /// id and path. `root_item` is the topmost use tree in the hierarchy.\n+    ///\n+    /// If `use_tree` is a simple or glob import, it is dumped into the analysis data. Otherwise,\n+    /// each child use tree is dumped recursively.\n     fn process_use_tree(&mut self,\n                          use_tree: &'l ast::UseTree,\n                          id: NodeId,\n-                         parent_item: &'l ast::Item,\n+                         root_item: &'l ast::Item,\n                          prefix: &ast::Path) {\n         let path = &use_tree.prefix;\n-        let access = access_from!(self.save_ctxt, parent_item);\n+        let access = access_from!(self.save_ctxt, root_item);\n+\n+        // The parent def id of a given use tree is always the enclosing item.\n+        let parent = self.save_ctxt.tcx.hir.opt_local_def_id(id)\n+            .and_then(|id| self.save_ctxt.tcx.parent_def_id(id))\n+            .map(::id_from_def_id);\n \n         match use_tree.kind {\n             ast::UseTreeKind::Simple(ident) => {\n@@ -1276,6 +1289,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                         span,\n                         name: ident.to_string(),\n                         value: String::new(),\n+                        parent,\n                     });\n                 }\n                 self.write_sub_paths_truncated(&path);\n@@ -1311,6 +1325,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                         span,\n                         name: \"*\".to_owned(),\n                         value: names.join(\", \"),\n+                        parent,\n                     });\n                 }\n                 self.write_sub_paths(&path);\n@@ -1325,7 +1340,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                     span: path.span,\n                 };\n                 for &(ref tree, id) in nested_items {\n-                    self.process_use_tree(tree, id, parent_item, &prefix);\n+                    self.process_use_tree(tree, id, root_item, &prefix);\n                 }\n             }\n         }\n@@ -1389,6 +1404,9 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                 if !self.span.filter_generated(alias_span, item.span) {\n                     let span =\n                         self.span_from_span(alias_span.expect(\"No span found for extern crate\"));\n+                    let parent = self.save_ctxt.tcx.hir.opt_local_def_id(item.id)\n+                        .and_then(|id| self.save_ctxt.tcx.parent_def_id(id))\n+                        .map(::id_from_def_id);\n                     self.dumper.import(\n                         &Access {\n                             public: false,\n@@ -1400,6 +1418,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                             span,\n                             name: item.ident.to_string(),\n                             value: String::new(),\n+                            parent,\n                         },\n                     );\n                 }"}]}