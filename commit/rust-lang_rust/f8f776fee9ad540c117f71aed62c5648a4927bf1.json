{"sha": "f8f776fee9ad540c117f71aed62c5648a4927bf1", "node_id": "C_kwDOAAsO6NoAKGY4Zjc3NmZlZTlhZDU0MGMxMTdmNzFhZWQ2MmM1NjQ4YTQ5MjdiZjE", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-25T20:34:40Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-25T21:12:57Z"}, "message": "Update export_symbols", "tree": {"sha": "2efb8e4b92916a19587762c7e6f83af88d381c57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2efb8e4b92916a19587762c7e6f83af88d381c57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8f776fee9ad540c117f71aed62c5648a4927bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8f776fee9ad540c117f71aed62c5648a4927bf1", "html_url": "https://github.com/rust-lang/rust/commit/f8f776fee9ad540c117f71aed62c5648a4927bf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8f776fee9ad540c117f71aed62c5648a4927bf1/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ac7ca4c197ccbeb8cf666e298afe76f736dd97e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac7ca4c197ccbeb8cf666e298afe76f736dd97e", "html_url": "https://github.com/rust-lang/rust/commit/3ac7ca4c197ccbeb8cf666e298afe76f736dd97e"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "685628ac99d53cd5c679d742c7fcdb7adca33900", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8f776fee9ad540c117f71aed62c5648a4927bf1/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/f8f776fee9ad540c117f71aed62c5648a4927bf1/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=f8f776fee9ad540c117f71aed62c5648a4927bf1", "patch": "@@ -1 +1 @@\n-51ea9bb29b07d76c5a7167d054b54f4eb7f5b44e\n+18b53cefdf7456bf68937b08e377b7e622a115c2"}, {"sha": "8a89d7f6410a760b146e999f94e4591a2456a77d", "filename": "src/bin/miri.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f8f776fee9ad540c117f71aed62c5648a4927bf1/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f776fee9ad540c117f71aed62c5648a4927bf1/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=f8f776fee9ad540c117f71aed62c5648a4927bf1", "patch": "@@ -22,7 +22,9 @@ use rustc_errors::emitter::{ColorConfig, HumanReadableErrorType};\n use rustc_hir::{self as hir, def_id::LOCAL_CRATE, Node};\n use rustc_interface::interface::Config;\n use rustc_middle::{\n-    middle::exported_symbols::{ExportedSymbol, SymbolExportLevel},\n+    middle::exported_symbols::{\n+        ExportedSymbol, SymbolExportInfo, SymbolExportKind, SymbolExportLevel,\n+    },\n     ty::{query::ExternProviders, TyCtxt},\n };\n use rustc_session::{config::ErrorOutputType, search_paths::PathKind, CtfeBacktrace};\n@@ -130,7 +132,14 @@ impl rustc_driver::Callbacks for MiriBeRustCompilerCalls {\n                                 && tcx.codegen_fn_attrs(local_def_id).contains_extern_indicator())\n                             .then_some((\n                                 ExportedSymbol::NonGeneric(local_def_id.to_def_id()),\n-                                SymbolExportLevel::C,\n+                                // Some dummy `SymbolExportInfo` here. We only use\n+                                // `exported_symbols` in shims/foreign_items.rs and the export info\n+                                // is ignored.\n+                                SymbolExportInfo {\n+                                    level: SymbolExportLevel::C,\n+                                    kind: SymbolExportKind::Text,\n+                                    used: false,\n+                                },\n                             ))\n                         }),\n                     )"}, {"sha": "ef88c550ecb2ed90d30215f2bfae6bc448e6391e", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f8f776fee9ad540c117f71aed62c5648a4927bf1/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8f776fee9ad540c117f71aed62c5648a4927bf1/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=f8f776fee9ad540c117f71aed62c5648a4927bf1", "patch": "@@ -157,9 +157,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                         (linkage != Linkage::NotLinked).then_some(CrateNum::new(num + 1))\n                     }),\n                 ) {\n-                    // We can ignore `_export_level` here: we are a Rust crate, and everything is exported\n+                    // We can ignore `_export_info` here: we are a Rust crate, and everything is exported\n                     // from a Rust crate.\n-                    for &(symbol, _export_level) in tcx.exported_symbols(cnum) {\n+                    for &(symbol, _export_info) in tcx.exported_symbols(cnum) {\n                         if let ExportedSymbol::NonGeneric(def_id) = symbol {\n                             let attrs = tcx.codegen_fn_attrs(def_id);\n                             let symbol_name = if let Some(export_name) = attrs.export_name {"}]}