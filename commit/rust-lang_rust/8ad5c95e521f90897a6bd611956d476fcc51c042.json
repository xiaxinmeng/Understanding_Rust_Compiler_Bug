{"sha": "8ad5c95e521f90897a6bd611956d476fcc51c042", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhZDVjOTVlNTIxZjkwODk3YTZiZDYxMTk1NmQ0NzZmY2M1MWMwNDI=", "commit": {"author": {"name": "Nathan Stocks", "email": "nathan.stocks@gmail.com", "date": "2017-03-31T02:58:07Z"}, "committer": {"name": "Nathan Stocks", "email": "nathan.stocks@gmail.com", "date": "2017-03-31T02:58:07Z"}, "message": "When dealing with the list of all possible subcommands, deal with them in the same order to ease comparing the sections of code in order.  I chose the order that appears in the help text, because that is most likely to have been ordered with specific reasoning.", "tree": {"sha": "814a5632400118ab78b55d2e27691fd5a52f0128", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/814a5632400118ab78b55d2e27691fd5a52f0128"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ad5c95e521f90897a6bd611956d476fcc51c042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad5c95e521f90897a6bd611956d476fcc51c042", "html_url": "https://github.com/rust-lang/rust/commit/8ad5c95e521f90897a6bd611956d476fcc51c042", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ad5c95e521f90897a6bd611956d476fcc51c042/comments", "author": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "e1b0027b51d8c8b7558513565c2baa45f1b1b984", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b0027b51d8c8b7558513565c2baa45f1b1b984", "html_url": "https://github.com/rust-lang/rust/commit/e1b0027b51d8c8b7558513565c2baa45f1b1b984"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "556a362a8749a7b789481501c8612186fcfb2b74", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8ad5c95e521f90897a6bd611956d476fcc51c042/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad5c95e521f90897a6bd611956d476fcc51c042/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=8ad5c95e521f90897a6bd611956d476fcc51c042", "patch": "@@ -157,11 +157,11 @@ Arguments:\n \n             if let Some(subcommand) = subcommand {\n                 if subcommand == \"build\" ||\n-                   subcommand == \"dist\" ||\n-                   subcommand == \"doc\" ||\n                    subcommand == \"test\" ||\n                    subcommand == \"bench\" ||\n-                   subcommand == \"clean\"  {\n+                   subcommand == \"doc\" ||\n+                   subcommand == \"clean\" ||\n+                   subcommand == \"dist\"  {\n                     println!(\"Available invocations:\");\n                     if args.iter().any(|a| a == \"-v\") {\n                         let flags = Flags::parse(&[\"build\".to_string()]);\n@@ -219,10 +219,6 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\n                 m = parse(&opts);\n                 Subcommand::Build { paths: remaining_as_path(&m) }\n             }\n-            \"doc\" => {\n-                m = parse(&opts);\n-                Subcommand::Doc { paths: remaining_as_path(&m) }\n-            }\n             \"test\" => {\n                 opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\");\n                 m = parse(&opts);\n@@ -239,6 +235,10 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\n                     test_args: m.opt_strs(\"test-args\"),\n                 }\n             }\n+            \"doc\" => {\n+                m = parse(&opts);\n+                Subcommand::Doc { paths: remaining_as_path(&m) }\n+            }\n             \"clean\" => {\n                 m = parse(&opts);\n                 if m.free.len() > 0 {"}]}