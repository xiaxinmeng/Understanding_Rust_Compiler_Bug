{"sha": "db44069482b3e14582809989859a5cc791e3110c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNDQwNjk0ODJiM2UxNDU4MjgwOTk4OTg1OWE1Y2M3OTFlMzExMGM=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-31T08:41:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-31T08:41:28Z"}, "message": "Rollup merge of #88497 - m-ou-se:prelude-collision-glob, r=nikomatsakis\n\nFix prelude collision suggestions for glob imported traits.\n\nFixes https://github.com/rust-lang/rust/issues/88471\n\ncc `@nikomatsakis`", "tree": {"sha": "54810acd121c90fbc4bab9bec5c1c1447f486136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54810acd121c90fbc4bab9bec5c1c1447f486136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db44069482b3e14582809989859a5cc791e3110c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhLes4CRBK7hj4Ov3rIwAACUMIADnJZsxFeNFob0EH0cnu6kUt\n2yfr28nnH5EPjpzSAxZbfbpzWnTev611OABSniU3c6RQqM6CBbbqge2KAa77afw/\nL0k3AHsxn3inU3oastY4oYT2MRC6f69vB6ELsnvJlwe+XHyeVvI/uSZGVmMFiAC7\nYw9pENFQhvZFni7iMOFF22MTjedSnWdOoDQGeG5c4TzU/gVuNRGiTB16gmXmkBjM\nDjZtm6KX6IHauNWwDxp9paVJqe7j3J4gBY2UIn5+h1pmR00K2mmb/pF1wLPEIzdE\nlOB7DvorEr0UVYTI1JVjUe3MoLIxlkRejnfqwschUBh49ny+bg8FwDmT7dzNH1U=\n=HyPm\n-----END PGP SIGNATURE-----\n", "payload": "tree 54810acd121c90fbc4bab9bec5c1c1447f486136\nparent fdf9c09c5085801b197b86e2d90b11150a952b9c\nparent 89a98675aafaebbc62fa9b76383902553124085c\nauthor Mara Bos <m-ou.se@m-ou.se> 1630399288 +0200\ncommitter GitHub <noreply@github.com> 1630399288 +0200\n\nRollup merge of #88497 - m-ou-se:prelude-collision-glob, r=nikomatsakis\n\nFix prelude collision suggestions for glob imported traits.\n\nFixes https://github.com/rust-lang/rust/issues/88471\n\ncc `@nikomatsakis`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db44069482b3e14582809989859a5cc791e3110c", "html_url": "https://github.com/rust-lang/rust/commit/db44069482b3e14582809989859a5cc791e3110c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db44069482b3e14582809989859a5cc791e3110c/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdf9c09c5085801b197b86e2d90b11150a952b9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdf9c09c5085801b197b86e2d90b11150a952b9c", "html_url": "https://github.com/rust-lang/rust/commit/fdf9c09c5085801b197b86e2d90b11150a952b9c"}, {"sha": "89a98675aafaebbc62fa9b76383902553124085c", "url": "https://api.github.com/repos/rust-lang/rust/commits/89a98675aafaebbc62fa9b76383902553124085c", "html_url": "https://github.com/rust-lang/rust/commit/89a98675aafaebbc62fa9b76383902553124085c"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "1f089a6389133f53fa136790b30df46e96600021", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db44069482b3e14582809989859a5cc791e3110c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db44069482b3e14582809989859a5cc791e3110c/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=db44069482b3e14582809989859a5cc791e3110c", "patch": "@@ -7,7 +7,7 @@ use rustc_hir as hir;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::{Adt, Ref, Ty};\n use rustc_session::lint::builtin::RUST_2021_PRELUDE_COLLISIONS;\n-use rustc_span::symbol::kw::Underscore;\n+use rustc_span::symbol::kw::{Empty, Underscore};\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;\n use rustc_trait_selection::infer::InferCtxtExt;\n@@ -333,7 +333,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             .filter_map(|item| if item.ident.name != Underscore { Some(item.ident) } else { None })\n             .next();\n         if let Some(any_id) = any_id {\n-            return Some(format!(\"{}\", any_id));\n+            if any_id.name == Empty {\n+                // Glob import, so just use its name.\n+                return None;\n+            } else {\n+                return Some(format!(\"{}\", any_id));\n+            }\n         }\n \n         // All that is left is `_`! We need to use the full path. It doesn't matter which one we pick,"}, {"sha": "15ccff7496e096a4d2ee1d1c1f945d3bdc53313e", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed?ref=db44069482b3e14582809989859a5cc791e3110c", "patch": "@@ -56,4 +56,15 @@ mod c {\n     }\n }\n \n+mod d {\n+    use super::m::*;\n+\n+    fn main() {\n+        // See https://github.com/rust-lang/rust/issues/88471\n+        let _: u32 = TryIntoU32::try_into(3u8).unwrap();\n+        //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+        //~^^ WARNING this is accepted in the current edition\n+    }\n+}\n+\n fn main() {}"}, {"sha": "cdffcaf754541a33b99188e2ce12e6d6f24bd26e", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs?ref=db44069482b3e14582809989859a5cc791e3110c", "patch": "@@ -56,4 +56,15 @@ mod c {\n     }\n }\n \n+mod d {\n+    use super::m::*;\n+\n+    fn main() {\n+        // See https://github.com/rust-lang/rust/issues/88471\n+        let _: u32 = 3u8.try_into().unwrap();\n+        //~^ WARNING trait method `try_into` will become ambiguous in Rust 2021\n+        //~^^ WARNING this is accepted in the current edition\n+    }\n+}\n+\n fn main() {}"}, {"sha": "56abb8abd4d15b9aa92d21b8a1c6b8fecc543503", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db44069482b3e14582809989859a5cc791e3110c/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr?ref=db44069482b3e14582809989859a5cc791e3110c", "patch": "@@ -30,5 +30,14 @@ LL |         let _: u32 = 3u8.try_into().unwrap();\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n \n-warning: 3 warnings emitted\n+warning: trait method `try_into` will become ambiguous in Rust 2021\n+  --> $DIR/future-prelude-collision-imported.rs:64:22\n+   |\n+LL |         let _: u32 = 3u8.try_into().unwrap();\n+   |                      ^^^^^^^^^^^^^^ help: disambiguate the associated function: `TryIntoU32::try_into(3u8)`\n+   |\n+   = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/prelude.html>\n+\n+warning: 4 warnings emitted\n "}]}