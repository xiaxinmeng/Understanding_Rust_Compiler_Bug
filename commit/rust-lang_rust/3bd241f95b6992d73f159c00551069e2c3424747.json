{"sha": "3bd241f95b6992d73f159c00551069e2c3424747", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZDI0MWY5NWI2OTkyZDczZjE1OWMwMDU1MTA2OWUyYzM0MjQ3NDc=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-04-02T21:06:05Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-04-03T23:37:05Z"}, "message": "cleanup leak after test to make miri happy", "tree": {"sha": "58ce6ab6ae75a892e8063e71837eb4afaa85e25b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58ce6ab6ae75a892e8063e71837eb4afaa85e25b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bd241f95b6992d73f159c00551069e2c3424747", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd241f95b6992d73f159c00551069e2c3424747", "html_url": "https://github.com/rust-lang/rust/commit/3bd241f95b6992d73f159c00551069e2c3424747", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bd241f95b6992d73f159c00551069e2c3424747/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97717a561844eccbb6d6cc114adb94a8fa4e0172", "url": "https://api.github.com/repos/rust-lang/rust/commits/97717a561844eccbb6d6cc114adb94a8fa4e0172", "html_url": "https://github.com/rust-lang/rust/commit/97717a561844eccbb6d6cc114adb94a8fa4e0172"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "026d3f63bb77ae404a2745c58858519cd607de1d", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3bd241f95b6992d73f159c00551069e2c3424747/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd241f95b6992d73f159c00551069e2c3424747/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=3bd241f95b6992d73f159c00551069e2c3424747", "patch": "@@ -1078,12 +1078,21 @@ fn test_from_iter_specialization_panic_during_drop_leaks() {\n         }\n     }\n \n+    let mut to_free: *mut Droppable = core::ptr::null_mut();\n+    let mut cap = 0;\n+\n     let _ = std::panic::catch_unwind(AssertUnwindSafe(|| {\n-        let v = vec![Droppable::DroppedTwice(Box::new(123)), Droppable::PanicOnDrop];\n+        let mut v = vec![Droppable::DroppedTwice(Box::new(123)), Droppable::PanicOnDrop];\n+        to_free = v.as_mut_ptr();\n+        cap = v.capacity();\n         let _ = v.into_iter().take(0).collect::<Vec<_>>();\n     }));\n \n     assert_eq!(unsafe { DROP_COUNTER }, 1);\n+    // clean up the leak to keep miri happy\n+    unsafe {\n+        Vec::from_raw_parts(to_free, 0, cap);\n+    }\n }\n \n #[test]"}]}