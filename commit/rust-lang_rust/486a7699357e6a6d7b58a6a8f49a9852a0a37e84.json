{"sha": "486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "node_id": "C_kwDOAAsO6NoAKDQ4NmE3Njk5MzU3ZTZhNmQ3YjU4YTZhOGY0OWE5ODUyYTBhMzdlODQ", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-05-21T16:14:17Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2022-05-22T15:28:40Z"}, "message": "Handle diagnotics emitted in runtime initialization", "tree": {"sha": "4abf71d72a856a62e7e538057a92c193984a0c4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4abf71d72a856a62e7e538057a92c193984a0c4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "html_url": "https://github.com/rust-lang/rust/commit/486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b96610b3de5bc9fd346d90700ba881aca8d503f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b96610b3de5bc9fd346d90700ba881aca8d503f0", "html_url": "https://github.com/rust-lang/rust/commit/b96610b3de5bc9fd346d90700ba881aca8d503f0"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "0255368b20f27867fb2fcd7737fa8c6949a04e29", "filename": "src/eval.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "patch": "@@ -168,6 +168,12 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         param_env,\n         Evaluator::new(config, layout_cx),\n     );\n+\n+    // Capture the current interpreter stack state (which should be empty) so that we can emit\n+    // allocation-tracking and tag-tracking diagnostics for allocations which are part of the\n+    // runtime.\n+    let info = ecx.preprocess_diagnostics();\n+\n     // Some parts of initialization require a full `InterpCx`.\n     Evaluator::late_init(&mut ecx, config)?;\n \n@@ -287,6 +293,10 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         }\n     }\n \n+    // Emit any diagnostics related to the setup process for the runtime, so that when the\n+    // interpreter loop starts there are no unprocessed diagnostics.\n+    ecx.process_diagnostics(info);\n+\n     Ok((ecx, ret_place))\n }\n "}, {"sha": "7bb217309f944ee3d9dfe6299255d4ef09de270a", "filename": "tests/run-pass/track-alloc-1.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/tests%2Frun-pass%2Ftrack-alloc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/tests%2Frun-pass%2Ftrack-alloc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftrack-alloc-1.rs?ref=486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "patch": "@@ -0,0 +1,5 @@\n+// Ensure that tracking early allocations doesn't ICE Miri.\n+// Early allocations are probably part of the runtime and therefore uninteresting, but they\n+// shouldn't cause a crash.\n+// compile-flags: -Zmiri-track-alloc-id=1\n+fn main() {}"}, {"sha": "3c5a55d986e3eb4d5a21c147aa28ce55bb8b6f2d", "filename": "tests/run-pass/track-alloc-1.stderr", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/tests%2Frun-pass%2Ftrack-alloc-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/486a7699357e6a6d7b58a6a8f49a9852a0a37e84/tests%2Frun-pass%2Ftrack-alloc-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ftrack-alloc-1.stderr?ref=486a7699357e6a6d7b58a6a8f49a9852a0a37e84", "patch": "@@ -0,0 +1,5 @@\n+note: tracking was triggered\n+  |\n+  = note: created allocation with id 1\n+  = note: (no span available)\n+"}]}