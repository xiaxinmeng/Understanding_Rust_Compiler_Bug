{"sha": "4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmZGFlODUzZjcwZDliYmRmNGRiYzM2NTc0M2Y2NTQ1Y2ZkNGE5YWM=", "commit": {"author": {"name": "Hugo van der Wijst", "email": "hugo@wij.st", "date": "2018-11-12T00:25:00Z"}, "committer": {"name": "Hugo van der Wijst", "email": "hugo@wij.st", "date": "2018-11-12T01:55:39Z"}, "message": "Reference count `crate_inherent_impls`s return value.\n\nThe repeated cloning of the result in `inherent_impls` queries has quite\nan impact on crates with many inherent trait implementations.", "tree": {"sha": "9616ec818c04b5e53069367d20f41b009f309a08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9616ec818c04b5e53069367d20f41b009f309a08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "html_url": "https://github.com/rust-lang/rust/commit/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac/comments", "author": {"login": "hugwijst", "id": 600107, "node_id": "MDQ6VXNlcjYwMDEwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/600107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugwijst", "html_url": "https://github.com/hugwijst", "followers_url": "https://api.github.com/users/hugwijst/followers", "following_url": "https://api.github.com/users/hugwijst/following{/other_user}", "gists_url": "https://api.github.com/users/hugwijst/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugwijst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugwijst/subscriptions", "organizations_url": "https://api.github.com/users/hugwijst/orgs", "repos_url": "https://api.github.com/users/hugwijst/repos", "events_url": "https://api.github.com/users/hugwijst/events{/privacy}", "received_events_url": "https://api.github.com/users/hugwijst/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hugwijst", "id": 600107, "node_id": "MDQ6VXNlcjYwMDEwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/600107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hugwijst", "html_url": "https://github.com/hugwijst", "followers_url": "https://api.github.com/users/hugwijst/followers", "following_url": "https://api.github.com/users/hugwijst/following{/other_user}", "gists_url": "https://api.github.com/users/hugwijst/gists{/gist_id}", "starred_url": "https://api.github.com/users/hugwijst/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hugwijst/subscriptions", "organizations_url": "https://api.github.com/users/hugwijst/orgs", "repos_url": "https://api.github.com/users/hugwijst/repos", "events_url": "https://api.github.com/users/hugwijst/events{/privacy}", "received_events_url": "https://api.github.com/users/hugwijst/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca79ecd6940e30d4b2466bf378632efcdf5745c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca79ecd6940e30d4b2466bf378632efcdf5745c7", "html_url": "https://github.com/rust-lang/rust/commit/ca79ecd6940e30d4b2466bf378632efcdf5745c7"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "27eafa7ab580f2b1c87c1d6f1df7ff044db88e6c", "filename": "src/librustc/ty/query/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fmod.rs?ref=4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "patch": "@@ -291,7 +291,8 @@ define_queries! { <'tcx>\n         /// Gets a complete map from all types to their inherent impls.\n         /// Not meant to be used directly outside of coherence.\n         /// (Defined only for LOCAL_CRATE)\n-        [] fn crate_inherent_impls: crate_inherent_impls_dep_node(CrateNum) -> CrateInherentImpls,\n+        [] fn crate_inherent_impls: crate_inherent_impls_dep_node(CrateNum)\n+            -> Lrc<CrateInherentImpls>,\n \n         /// Checks all types in the krate for overlap in their inherent impls. Reports errors.\n         /// Not meant to be used directly outside of coherence."}, {"sha": "370f8857f1400926a45775992fbf01dee13826e2", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=4fdae853f70d9bbdf4dbc365743f6545cfd4a9ac", "patch": "@@ -31,7 +31,7 @@ use syntax_pos::Span;\n /// On-demand query: yields a map containing all types mapped to their inherent impls.\n pub fn crate_inherent_impls<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                       crate_num: CrateNum)\n-                                      -> CrateInherentImpls {\n+                                      -> Lrc<CrateInherentImpls> {\n     assert_eq!(crate_num, LOCAL_CRATE);\n \n     let krate = tcx.hir.krate();\n@@ -42,7 +42,7 @@ pub fn crate_inherent_impls<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n     };\n     krate.visit_all_item_likes(&mut collect);\n-    collect.impls_map\n+    Lrc::new(collect.impls_map)\n }\n \n /// On-demand query: yields a vector of the inherent impls for a specific type."}]}