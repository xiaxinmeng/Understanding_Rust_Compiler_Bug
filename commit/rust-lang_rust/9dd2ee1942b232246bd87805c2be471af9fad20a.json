{"sha": "9dd2ee1942b232246bd87805c2be471af9fad20a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZDJlZTE5NDJiMjMyMjQ2YmQ4NzgwNWMyYmU0NzFhZjlmYWQyMGE=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-09-13T08:27:41Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-09-13T11:27:40Z"}, "message": "Fix example in transmute; add safety requirement to Vec::from_raw_parts", "tree": {"sha": "c3b833abe56ac37280d733b28632d0600f850b20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3b833abe56ac37280d733b28632d0600f850b20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dd2ee1942b232246bd87805c2be471af9fad20a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd2ee1942b232246bd87805c2be471af9fad20a", "html_url": "https://github.com/rust-lang/rust/commit/9dd2ee1942b232246bd87805c2be471af9fad20a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dd2ee1942b232246bd87805c2be471af9fad20a/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eefed392f926958233529f6c1307aa007802046", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eefed392f926958233529f6c1307aa007802046", "html_url": "https://github.com/rust-lang/rust/commit/7eefed392f926958233529f6c1307aa007802046"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "87b2b3f7a40357cf5c5d8889195bf35ebf3c989c", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9dd2ee1942b232246bd87805c2be471af9fad20a/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd2ee1942b232246bd87805c2be471af9fad20a/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=9dd2ee1942b232246bd87805c2be471af9fad20a", "patch": "@@ -370,6 +370,7 @@ impl<T> Vec<T> {\n     ///\n     /// * `ptr` needs to have been previously allocated via [`String`]/`Vec<T>`\n     ///   (at least, it's highly likely to be incorrect if it wasn't).\n+    /// * `ptr`'s `T` needs to have the same size and alignment as it was allocated with.\n     /// * `length` needs to be less than or equal to `capacity`.\n     /// * `capacity` needs to be the capacity that the pointer was allocated with.\n     ///"}, {"sha": "f7f1dd12d28b150be07d9bd7b58a45ef5bc6e078", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9dd2ee1942b232246bd87805c2be471af9fad20a/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dd2ee1942b232246bd87805c2be471af9fad20a/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=9dd2ee1942b232246bd87805c2be471af9fad20a", "patch": "@@ -848,12 +848,12 @@ extern \"rust-intrinsic\" {\n     /// // The no-copy, unsafe way, still using transmute, but not UB.\n     /// // This is equivalent to the original, but safer, and reuses the\n     /// // same Vec internals. Therefore the new inner type must have the\n-    /// // exact same size, and the same or lesser alignment, as the old\n-    /// // type. The same caveats exist for this method as transmute, for\n+    /// // exact same size, and the same alignment, as the old type.\n+    /// // The same caveats exist for this method as transmute, for\n     /// // the original inner type (`&i32`) to the converted inner type\n     /// // (`Option<&i32>`), so read the nomicon pages linked above.\n     /// let v_from_raw = unsafe {\n-    ///     Vec::from_raw_parts(v_orig.as_mut_ptr(),\n+    ///     Vec::from_raw_parts(v_orig.as_mut_ptr() as *mut Option<&i32>,\n     ///                         v_orig.len(),\n     ///                         v_orig.capacity())\n     /// };"}]}