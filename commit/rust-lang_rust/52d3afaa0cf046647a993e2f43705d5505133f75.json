{"sha": "52d3afaa0cf046647a993e2f43705d5505133f75", "node_id": "C_kwDOAAsO6NoAKDUyZDNhZmFhMGNmMDQ2NjQ3YTk5M2UyZjQzNzA1ZDU1MDUxMzNmNzU", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-05T06:56:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T06:56:17Z"}, "message": "Rollup merge of #88816 - dns2utf8:rustdoc_test_gui_2k_constants, r=GuillaumeGomez\n\nRustdoc migrate to table so the gui can handle >2k constants\n\nCloses #88545.\n\nThis PR adds a test for overlapping entries in the `item-table` https://github.com/rust-lang/rust/issues/88545\nIt currently includes the commit with the workaround from https://github.com/rust-lang/rust/pull/88776", "tree": {"sha": "efb051736d78c4772f07692727007e2227076670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efb051736d78c4772f07692727007e2227076670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d3afaa0cf046647a993e2f43705d5505133f75", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW/cSCRBK7hj4Ov3rIwAAnh8IAE3z6h01Z/UGHh9DneWScIdP\nt68AWwXPV8EnKCGPzZdt6P28B8zWgq8RvQZkdfPy8RGg00PXcpDApradB3pWnv9x\nUQKXcRDvX0ApkLGEFZjxt2jCgVS0Z4MoR2yfBGj8n+ogsevDvWt1HXG5CBs3nG/Q\n2wo/m0GEWn5q0svbr77jaYpppdrwQuI4uzx5ODDoKRuCQPsNKhLJo52r0jc5iz3V\n0xObH0ITQYcefZ9fjK4Kr0WDcd/lsXHacFJQNNfddPTd6cF1cObRtOyYFmmq895P\nZDQ3Xnqqz+h+/ht4mhwVpgHLln4nbPzosUrWI5DnOnEnUAsnYm5vkuB0Mt8MztM=\n=a4p9\n-----END PGP SIGNATURE-----\n", "payload": "tree efb051736d78c4772f07692727007e2227076670\nparent dd223d5c6da0cfa822151dd706bb14dc1476e4dd\nparent e599e2df49adae96d482a3a3a0364e7668abd14e\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633416977 -0700\ncommitter GitHub <noreply@github.com> 1633416977 -0700\n\nRollup merge of #88816 - dns2utf8:rustdoc_test_gui_2k_constants, r=GuillaumeGomez\n\nRustdoc migrate to table so the gui can handle >2k constants\n\nCloses #88545.\n\nThis PR adds a test for overlapping entries in the `item-table` https://github.com/rust-lang/rust/issues/88545\nIt currently includes the commit with the workaround from https://github.com/rust-lang/rust/pull/88776\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d3afaa0cf046647a993e2f43705d5505133f75", "html_url": "https://github.com/rust-lang/rust/commit/52d3afaa0cf046647a993e2f43705d5505133f75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d3afaa0cf046647a993e2f43705d5505133f75/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd223d5c6da0cfa822151dd706bb14dc1476e4dd", "html_url": "https://github.com/rust-lang/rust/commit/dd223d5c6da0cfa822151dd706bb14dc1476e4dd"}, {"sha": "e599e2df49adae96d482a3a3a0364e7668abd14e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e599e2df49adae96d482a3a3a0364e7668abd14e", "html_url": "https://github.com/rust-lang/rust/commit/e599e2df49adae96d482a3a3a0364e7668abd14e"}], "stats": {"total": 66, "additions": 44, "deletions": 22}, "files": [{"sha": "28b2eded7cc3e1c09444abf7eb29b28a1da0269f", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -34,6 +34,8 @@ use crate::html::markdown::MarkdownSummaryLine;\n \n const ITEM_TABLE_OPEN: &'static str = \"<div class=\\\"item-table\\\">\";\n const ITEM_TABLE_CLOSE: &'static str = \"</div>\";\n+const ITEM_TABLE_ROW_OPEN: &'static str = \"<div class=\\\"item-row\\\">\";\n+const ITEM_TABLE_ROW_CLOSE: &'static str = \"</div>\";\n \n pub(super) fn print_item(cx: &Context<'_>, item: &clean::Item, buf: &mut Buffer, page: &Page<'_>) {\n     debug_assert!(!item.is_stripped());\n@@ -256,9 +258,6 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n     debug!(\"{:?}\", indices);\n     let mut curty = None;\n-    // See: https://github.com/rust-lang/rust/issues/88545\n-    let item_table_block_size = 900usize;\n-    let mut item_table_nth_element = 0usize;\n \n     for &idx in &indices {\n         let myitem = &items[idx];\n@@ -285,13 +284,13 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 id = cx.derive_id(short.to_owned()),\n                 name = name\n             );\n-            item_table_nth_element = 0;\n         }\n \n         match *myitem.kind {\n             clean::ExternCrateItem { ref src } => {\n                 use crate::html::format::anchor;\n \n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 match *src {\n                     Some(ref src) => write!(\n                         w,\n@@ -312,6 +311,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     ),\n                 }\n                 w.write_str(\"</code></div>\");\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n \n             clean::ImportItem(ref import) => {\n@@ -336,6 +336,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n \n                 let add = if stab.is_some() { \" \" } else { \"\" };\n \n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 write!(\n                     w,\n                     \"<div class=\\\"item-left {stab}{add}import-item\\\">\\\n@@ -348,6 +349,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                     imp = import.print(cx),\n                     stab_tags = stab_tags.unwrap_or_default(),\n                 );\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n \n             _ => {\n@@ -368,6 +370,7 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                 let add = if stab.is_some() { \" \" } else { \"\" };\n \n                 let doc_value = myitem.doc_value().unwrap_or_default();\n+                w.write_str(ITEM_TABLE_ROW_OPEN);\n                 write!(\n                     w,\n                     \"<div class=\\\"item-left {stab}{add}module-item\\\">\\\n@@ -390,15 +393,9 @@ fn item_module(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item, items: &[cl\n                         .collect::<Vec<_>>()\n                         .join(\" \"),\n                 );\n+                w.write_str(ITEM_TABLE_ROW_CLOSE);\n             }\n         }\n-\n-        item_table_nth_element += 1;\n-        if item_table_nth_element > item_table_block_size {\n-            w.write_str(ITEM_TABLE_CLOSE);\n-            w.write_str(ITEM_TABLE_OPEN);\n-            item_table_nth_element = 0;\n-        }\n     }\n \n     if curty.is_some() {"}, {"sha": "341d9b80fd82d8091ba5d81ef30439c5843cfe66", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -773,22 +773,18 @@ h2.small-section-header > .anchor {\n .block a.current.crate { font-weight: 500; }\n \n .item-table {\n-\tdisplay: grid;\n-\tcolumn-gap: 1.2rem;\n-\trow-gap: 0.0rem;\n-\tgrid-template-columns: auto 1fr;\n+\tdisplay: table-row;\n \t/* align content left */\n \tjustify-items: start;\n }\n-\n+.item-row {\n+\tdisplay: table-row;\n+}\n .item-left, .item-right {\n-\tdisplay: block;\n+\tdisplay: table-cell;\n }\n .item-left {\n-\tgrid-column: 1;\n-}\n-.item-right {\n-\tgrid-column: 2;\n+\tpadding-right: 1.2rem;\n }\n \n .search-container {\n@@ -1891,6 +1887,9 @@ details.undocumented[open] > summary::before {\n \n \t/* Display an alternating layout on tablets and phones */\n \t.item-table {\n+\t\tdisplay: block;\n+\t}\n+\t.item-row {\n \t\tdisplay: flex;\n \t\tflex-flow: column wrap;\n \t}"}, {"sha": "924fab1ea91068817d431d481f26c94218867fdb", "filename": "src/test/rustdoc-gui/huge-collection-of-constants.goml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fhuge-collection-of-constants.goml", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fhuge-collection-of-constants.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fhuge-collection-of-constants.goml?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -0,0 +1,5 @@\n+goto: file://|DOC_PATH|/test_docs/huge_amount_of_consts/index.html\n+\n+// Make sure that the last two entries are more than 12 pixels apart and not stacked on each other.\n+\n+compare-elements-position-near-false: (\"//*[@class='item-table']//div[last()-1]\", \"//*[@class='item-table']//div[last()-3]\", {\"y\": 12})"}, {"sha": "5f527078e79a84185bed4544a54d238818682b0b", "filename": "src/test/rustdoc-gui/src/test_docs/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2FCargo.toml?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -3,5 +3,7 @@ name = \"test_docs\"\n version = \"0.1.0\"\n edition = \"2018\"\n \n+build = \"build.rs\"\n+\n [lib]\n path = \"lib.rs\""}, {"sha": "16c96ded9120ce08c478503a97b2ebe7967d6547", "filename": "src/test/rustdoc-gui/src/test_docs/build.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Fbuild.rs?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -0,0 +1,15 @@\n+//! generate 2000 constants for testing\n+\n+use std::{fs::write, path::PathBuf};\n+\n+fn main() -> std::io::Result<()> {\n+    let out_dir = std::env::var(\"OUT_DIR\").expect(\"OUT_DIR is not defined\");\n+\n+    let mut output = String::new();\n+    for i in 0..2000 {\n+        let line = format!(\"/// Some const A{0}\\npub const A{0}: isize = 0;\\n\", i);\n+        output.push_str(&*line);\n+    };\n+\n+    write(&[&*out_dir, \"huge_amount_of_consts.rs\"].iter().collect::<PathBuf>(), output)\n+}"}, {"sha": "0aa1426a36abf38b349b98044699601e7295b2e3", "filename": "src/test/rustdoc-gui/src/test_docs/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Ftest_docs%2Flib.rs?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -116,3 +116,7 @@ pub mod keyword {}\n \n /// Just some type alias.\n pub type SomeType = u32;\n+\n+pub mod huge_amount_of_consts {\n+    include!(concat!(env!(\"OUT_DIR\"), \"/huge_amount_of_consts.rs\"));\n+}"}, {"sha": "b598c63f52ac8108f46cd1534936719b0a2c14c5", "filename": "src/tools/rustdoc-gui/tester.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftools%2Frustdoc-gui%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/52d3afaa0cf046647a993e2f43705d5505133f75/src%2Ftools%2Frustdoc-gui%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-gui%2Ftester.js?ref=52d3afaa0cf046647a993e2f43705d5505133f75", "patch": "@@ -172,7 +172,7 @@ async function main(argv) {\n     }\n     files.sort();\n \n-    console.log(`Running ${files.length} rustdoc-gui tests...`);\n+    console.log(`Running ${files.length} rustdoc-gui (${opts[\"jobs\"]} concurrently) ...`);\n \n     if (opts[\"jobs\"] < 1) {\n         process.setMaxListeners(files.length + 1);"}]}