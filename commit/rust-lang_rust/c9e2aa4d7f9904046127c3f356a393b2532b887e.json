{"sha": "c9e2aa4d7f9904046127c3f356a393b2532b887e", "node_id": "C_kwDOAAsO6NoAKGM5ZTJhYTRkN2Y5OTA0MDQ2MTI3YzNmMzU2YTM5M2IyNTMyYjg4N2U", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-05T09:28:36Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-05T09:28:36Z"}, "message": "refactor: remove a redundant mutable variable", "tree": {"sha": "f2bc47a6c8b836390cbe1914785a157689e3fba7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bc47a6c8b836390cbe1914785a157689e3fba7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9e2aa4d7f9904046127c3f356a393b2532b887e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e2aa4d7f9904046127c3f356a393b2532b887e", "html_url": "https://github.com/rust-lang/rust/commit/c9e2aa4d7f9904046127c3f356a393b2532b887e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9e2aa4d7f9904046127c3f356a393b2532b887e/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2557603f320593be9d1c29a453c648e61e74d343", "url": "https://api.github.com/repos/rust-lang/rust/commits/2557603f320593be9d1c29a453c648e61e74d343", "html_url": "https://github.com/rust-lang/rust/commit/2557603f320593be9d1c29a453c648e61e74d343"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "6663ff6bbe9156faba58dcd565d59f4a473bb1a4", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c9e2aa4d7f9904046127c3f356a393b2532b887e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9e2aa4d7f9904046127c3f356a393b2532b887e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=c9e2aa4d7f9904046127c3f356a393b2532b887e", "patch": "@@ -131,8 +131,6 @@ impl<'a, 'tcx> FulfillmentContext<'tcx> {\n         let span = debug_span!(\"select\", obligation_forest_size = ?self.predicates.len());\n         let _enter = span.enter();\n \n-        let mut errors = Vec::new();\n-\n         // Process pending obligations.\n         let outcome: Outcome<_, _> = self.predicates.process_obligations(&mut FulfillProcessor {\n             selcx,\n@@ -142,7 +140,8 @@ impl<'a, 'tcx> FulfillmentContext<'tcx> {\n         // FIXME: if we kept the original cache key, we could mark projection\n         // obligations as complete for the projection cache here.\n \n-        errors.extend(outcome.errors.into_iter().map(to_fulfillment_error));\n+        let errors: Vec<FulfillmentError<'tcx>> =\n+            outcome.errors.into_iter().map(to_fulfillment_error).collect();\n \n         debug!(\n             \"select({} predicates remaining, {} errors) done\",\n@@ -728,7 +727,7 @@ impl<'a, 'b, 'tcx> FulfillProcessor<'a, 'b, 'tcx> {\n                 }\n                 return ProcessResult::Changed(vec![]);\n             } else {\n-                tracing::debug!(\"Does NOT hold: {:?}\", obligation);\n+                debug!(\"Does NOT hold: {:?}\", obligation);\n             }\n         }\n "}]}