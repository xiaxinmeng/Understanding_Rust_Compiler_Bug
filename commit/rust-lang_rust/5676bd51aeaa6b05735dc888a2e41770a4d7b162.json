{"sha": "5676bd51aeaa6b05735dc888a2e41770a4d7b162", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2NzZiZDUxYWVhYTZiMDU3MzVkYzg4OGEyZTQxNzcwYTRkN2IxNjI=", "commit": {"author": {"name": "Midas Lambrichts", "email": "midaslamb@gmail.com", "date": "2021-03-26T22:16:22Z"}, "committer": {"name": "Midas Lambrichts", "email": "midaslamb@gmail.com", "date": "2021-03-26T22:16:22Z"}, "message": "Break when there is a mismatch in the type count\n\nWhen other errors are generated, there can be a mismatch between the\namount of input types in MIR, and the amount in the function itself.\nBreak from the comparative loop if this is the case to prevent\nout-of-bounds.", "tree": {"sha": "76dbc409edec4d7a69bd745470f3456b9f5687b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76dbc409edec4d7a69bd745470f3456b9f5687b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5676bd51aeaa6b05735dc888a2e41770a4d7b162", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5676bd51aeaa6b05735dc888a2e41770a4d7b162", "html_url": "https://github.com/rust-lang/rust/commit/5676bd51aeaa6b05735dc888a2e41770a4d7b162", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5676bd51aeaa6b05735dc888a2e41770a4d7b162/comments", "author": {"login": "MidasLamb", "id": 14802865, "node_id": "MDQ6VXNlcjE0ODAyODY1", "avatar_url": "https://avatars.githubusercontent.com/u/14802865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MidasLamb", "html_url": "https://github.com/MidasLamb", "followers_url": "https://api.github.com/users/MidasLamb/followers", "following_url": "https://api.github.com/users/MidasLamb/following{/other_user}", "gists_url": "https://api.github.com/users/MidasLamb/gists{/gist_id}", "starred_url": "https://api.github.com/users/MidasLamb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MidasLamb/subscriptions", "organizations_url": "https://api.github.com/users/MidasLamb/orgs", "repos_url": "https://api.github.com/users/MidasLamb/repos", "events_url": "https://api.github.com/users/MidasLamb/events{/privacy}", "received_events_url": "https://api.github.com/users/MidasLamb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MidasLamb", "id": 14802865, "node_id": "MDQ6VXNlcjE0ODAyODY1", "avatar_url": "https://avatars.githubusercontent.com/u/14802865?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MidasLamb", "html_url": "https://github.com/MidasLamb", "followers_url": "https://api.github.com/users/MidasLamb/followers", "following_url": "https://api.github.com/users/MidasLamb/following{/other_user}", "gists_url": "https://api.github.com/users/MidasLamb/gists{/gist_id}", "starred_url": "https://api.github.com/users/MidasLamb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MidasLamb/subscriptions", "organizations_url": "https://api.github.com/users/MidasLamb/orgs", "repos_url": "https://api.github.com/users/MidasLamb/repos", "events_url": "https://api.github.com/users/MidasLamb/events{/privacy}", "received_events_url": "https://api.github.com/users/MidasLamb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8719c51e0e44483cff9b6975a830f6e51812a48", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8719c51e0e44483cff9b6975a830f6e51812a48", "html_url": "https://github.com/rust-lang/rust/commit/b8719c51e0e44483cff9b6975a830f6e51812a48"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1bb447d1057815e7764d9342d2f56311813e506e", "filename": "compiler/rustc_mir/src/borrow_check/type_check/input_output.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5676bd51aeaa6b05735dc888a2e41770a4d7b162/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5676bd51aeaa6b05735dc888a2e41770a4d7b162/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Ftype_check%2Finput_output.rs?ref=5676bd51aeaa6b05735dc888a2e41770a4d7b162", "patch": "@@ -70,6 +70,12 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n \n         // Equate expected input tys with those in the MIR.\n         for (argument_index, &normalized_input_ty) in normalized_input_tys.iter().enumerate() {\n+            if argument_index + 1 >= body.local_decls.len() {\n+                self.tcx()\n+                    .sess\n+                    .delay_span_bug(body.span, \"found more normalized_input_ty than local_decls\");\n+                break;\n+            }\n             // In MIR, argument N is stored in local N+1.\n             let local = Local::new(argument_index + 1);\n "}]}