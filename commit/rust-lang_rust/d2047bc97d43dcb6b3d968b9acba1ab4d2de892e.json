{"sha": "d2047bc97d43dcb6b3d968b9acba1ab4d2de892e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMDQ3YmM5N2Q0M2RjYjZiM2Q5NjhiOWFjYmExYWI0ZDJkZTg5MmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-03T04:16:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-03T04:16:52Z"}, "message": "Auto merge of #28813 - arielb1:well-formed-variables, r=nikomatsakis\n\nit doesn't seem to be necessary and is potentially harmful.\r\n\r\nr? @nikomatsakis", "tree": {"sha": "c68adc9487b31c868079e25b5e811b2b5fc63e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c68adc9487b31c868079e25b5e811b2b5fc63e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e", "html_url": "https://github.com/rust-lang/rust/commit/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16331f1a42842ecdbf3dbcd6805df47564660266", "url": "https://api.github.com/repos/rust-lang/rust/commits/16331f1a42842ecdbf3dbcd6805df47564660266", "html_url": "https://github.com/rust-lang/rust/commit/16331f1a42842ecdbf3dbcd6805df47564660266"}, {"sha": "c379f604f12520f92783501417d8bd392dd40339", "url": "https://api.github.com/repos/rust-lang/rust/commits/c379f604f12520f92783501417d8bd392dd40339", "html_url": "https://github.com/rust-lang/rust/commit/c379f604f12520f92783501417d8bd392dd40339"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "278aa9450eeeb82290bf1aa72283319ec7691707", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2047bc97d43dcb6b3d968b9acba1ab4d2de892e/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=d2047bc97d43dcb6b3d968b9acba1ab4d2de892e", "patch": "@@ -1557,21 +1557,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n \n     pub fn to_ty(&self, ast_t: &hir::Ty) -> Ty<'tcx> {\n         let t = ast_ty_to_ty(self, self, ast_t);\n-\n-        // Generally speaking, we must check that types entered by the\n-        // user are well-formed. This is not true for `_`, since those\n-        // types are generated by inference. Now, you might think that\n-        // we could as well generate a WF obligation -- but\n-        // unfortunately that breaks code like `foo as *const _`,\n-        // because those type variables wind up being unconstrained\n-        // until very late. Nasty. Probably it'd be best to refactor\n-        // that code path, but that's tricky because of\n-        // defaults. Argh!\n-        match ast_t.node {\n-            hir::TyInfer => { }\n-            _ => { self.register_wf_obligation(t, ast_t.span, traits::MiscObligation); }\n-        }\n-\n+        self.register_wf_obligation(t, ast_t.span, traits::MiscObligation);\n         t\n     }\n "}]}