{"sha": "96932cf3d0fa247c30a117e78fe23020b865f2ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2OTMyY2YzZDBmYTI0N2MzMGExMTdlNzhmZTIzMDIwYjg2NWYyZWU=", "commit": {"author": {"name": "abhi", "email": "abhijeet.bhagat@gmx.com", "date": "2016-07-25T09:30:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-25T09:30:32Z"}, "message": "Remove no_stack_check tests (#34915)\n\nPart of fixes for #34915", "tree": {"sha": "5203d16e5dbaf1c30cdfefaeb2faca4a2c1a9096", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5203d16e5dbaf1c30cdfefaeb2faca4a2c1a9096"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96932cf3d0fa247c30a117e78fe23020b865f2ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96932cf3d0fa247c30a117e78fe23020b865f2ee", "html_url": "https://github.com/rust-lang/rust/commit/96932cf3d0fa247c30a117e78fe23020b865f2ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96932cf3d0fa247c30a117e78fe23020b865f2ee/comments", "author": {"login": "abhijeetbhagat", "id": 9682848, "node_id": "MDQ6VXNlcjk2ODI4NDg=", "avatar_url": "https://avatars.githubusercontent.com/u/9682848?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abhijeetbhagat", "html_url": "https://github.com/abhijeetbhagat", "followers_url": "https://api.github.com/users/abhijeetbhagat/followers", "following_url": "https://api.github.com/users/abhijeetbhagat/following{/other_user}", "gists_url": "https://api.github.com/users/abhijeetbhagat/gists{/gist_id}", "starred_url": "https://api.github.com/users/abhijeetbhagat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abhijeetbhagat/subscriptions", "organizations_url": "https://api.github.com/users/abhijeetbhagat/orgs", "repos_url": "https://api.github.com/users/abhijeetbhagat/repos", "events_url": "https://api.github.com/users/abhijeetbhagat/events{/privacy}", "received_events_url": "https://api.github.com/users/abhijeetbhagat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9316ae515e2f8f3f497fb4f1559910c1eef2433d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9316ae515e2f8f3f497fb4f1559910c1eef2433d", "html_url": "https://github.com/rust-lang/rust/commit/9316ae515e2f8f3f497fb4f1559910c1eef2433d"}], "stats": {"total": 369, "additions": 0, "deletions": 369}, "files": [{"sha": "b5b6ca7572703cc65fab869385623d0d4b924be5", "filename": "src/test/debuginfo/function-prologue-stepping-no-stack-check.rs", "status": "removed", "additions": 0, "deletions": 369, "changes": 369, "blob_url": "https://github.com/rust-lang/rust/blob/9316ae515e2f8f3f497fb4f1559910c1eef2433d/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-stack-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9316ae515e2f8f3f497fb4f1559910c1eef2433d/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-stack-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-prologue-stepping-no-stack-check.rs?ref=9316ae515e2f8f3f497fb4f1559910c1eef2433d", "patch": "@@ -1,369 +0,0 @@\n-// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// ignore-android: FIXME(#10381)\n-// min-lldb-version: 310\n-\n-// This test case checks if function arguments already have the correct value\n-// when breaking at the beginning of a function. Functions with the\n-// #[no_stack_check] attribute have the same prologue as regular C functions\n-// compiled with GCC or Clang and therefore are better handled by GDB. As a\n-// consequence, and as opposed to regular Rust functions, we can set the\n-// breakpoints via the function name (and don't have to fall back on using line\n-// numbers). For LLDB this shouldn't make a difference because it can handle\n-// both cases.\n-\n-// compile-flags:-g\n-\n-// === GDB TESTS ===================================================================================\n-\n-// gdb-command:rbreak immediate_args\n-// gdb-command:rbreak binding\n-// gdb-command:rbreak assignment\n-// gdb-command:rbreak function_call\n-// gdb-command:rbreak identifier\n-// gdb-command:rbreak return_expr\n-// gdb-command:rbreak arithmetic_expr\n-// gdb-command:rbreak if_expr\n-// gdb-command:rbreak while_expr\n-// gdb-command:rbreak loop_expr\n-// gdb-command:run\n-\n-// IMMEDIATE ARGS\n-// gdb-command:print a\n-// gdb-check:$1 = 1\n-// gdb-command:print b\n-// gdb-check:$2 = true\n-// gdb-command:print c\n-// gdb-check:$3 = 2.5\n-// gdb-command:continue\n-\n-// NON IMMEDIATE ARGS\n-// gdb-command:print a\n-// gdb-check:$4 = {a = 3, b = 4, c = 5, d = 6, e = 7, f = 8, g = 9, h = 10}\n-// gdb-command:print b\n-// gdb-check:$5 = {a = 11, b = 12, c = 13, d = 14, e = 15, f = 16, g = 17, h = 18}\n-// gdb-command:continue\n-\n-// BINDING\n-// gdb-command:print a\n-// gdb-check:$6 = 19\n-// gdb-command:print b\n-// gdb-check:$7 = 20\n-// gdb-command:print c\n-// gdb-check:$8 = 21.5\n-// gdb-command:continue\n-\n-// ASSIGNMENT\n-// gdb-command:print a\n-// gdb-check:$9 = 22\n-// gdb-command:print b\n-// gdb-check:$10 = 23\n-// gdb-command:print c\n-// gdb-check:$11 = 24.5\n-// gdb-command:continue\n-\n-// FUNCTION CALL\n-// gdb-command:print x\n-// gdb-check:$12 = 25\n-// gdb-command:print y\n-// gdb-check:$13 = 26\n-// gdb-command:print z\n-// gdb-check:$14 = 27.5\n-// gdb-command:continue\n-\n-// EXPR\n-// gdb-command:print x\n-// gdb-check:$15 = 28\n-// gdb-command:print y\n-// gdb-check:$16 = 29\n-// gdb-command:print z\n-// gdb-check:$17 = 30.5\n-// gdb-command:continue\n-\n-// RETURN EXPR\n-// gdb-command:print x\n-// gdb-check:$18 = 31\n-// gdb-command:print y\n-// gdb-check:$19 = 32\n-// gdb-command:print z\n-// gdb-check:$20 = 33.5\n-// gdb-command:continue\n-\n-// ARITHMETIC EXPR\n-// gdb-command:print x\n-// gdb-check:$21 = 34\n-// gdb-command:print y\n-// gdb-check:$22 = 35\n-// gdb-command:print z\n-// gdb-check:$23 = 36.5\n-// gdb-command:continue\n-\n-// IF EXPR\n-// gdb-command:print x\n-// gdb-check:$24 = 37\n-// gdb-command:print y\n-// gdb-check:$25 = 38\n-// gdb-command:print z\n-// gdb-check:$26 = 39.5\n-// gdb-command:continue\n-\n-// WHILE EXPR\n-// gdb-command:print x\n-// gdb-check:$27 = 40\n-// gdb-command:print y\n-// gdb-check:$28 = 41\n-// gdb-command:print z\n-// gdb-check:$29 = 42\n-// gdb-command:continue\n-\n-// LOOP EXPR\n-// gdb-command:print x\n-// gdb-check:$30 = 43\n-// gdb-command:print y\n-// gdb-check:$31 = 44\n-// gdb-command:print z\n-// gdb-check:$32 = 45\n-// gdb-command:continue\n-\n-\n-// === LLDB TESTS ==================================================================================\n-\n-// lldb-command:breakpoint set --name immediate_args\n-// lldb-command:breakpoint set --name non_immediate_args\n-// lldb-command:breakpoint set --name binding\n-// lldb-command:breakpoint set --name assignment\n-// lldb-command:breakpoint set --name function_call\n-// lldb-command:breakpoint set --name identifier\n-// lldb-command:breakpoint set --name return_expr\n-// lldb-command:breakpoint set --name arithmetic_expr\n-// lldb-command:breakpoint set --name if_expr\n-// lldb-command:breakpoint set --name while_expr\n-// lldb-command:breakpoint set --name loop_expr\n-// lldb-command:run\n-\n-// IMMEDIATE ARGS\n-// lldb-command:print a\n-// lldb-check:[...]$0 = 1\n-// lldb-command:print b\n-// lldb-check:[...]$1 = true\n-// lldb-command:print c\n-// lldb-check:[...]$2 = 2.5\n-// lldb-command:continue\n-\n-// NON IMMEDIATE ARGS\n-// lldb-command:print a\n-// lldb-check:[...]$3 = BigStruct { a: 3, b: 4, c: 5, d: 6, e: 7, f: 8, g: 9, h: 10 }\n-// lldb-command:print b\n-// lldb-check:[...]$4 = BigStruct { a: 11, b: 12, c: 13, d: 14, e: 15, f: 16, g: 17, h: 18 }\n-// lldb-command:continue\n-\n-// BINDING\n-// lldb-command:print a\n-// lldb-check:[...]$5 = 19\n-// lldb-command:print b\n-// lldb-check:[...]$6 = 20\n-// lldb-command:print c\n-// lldb-check:[...]$7 = 21.5\n-// lldb-command:continue\n-\n-// ASSIGNMENT\n-// lldb-command:print a\n-// lldb-check:[...]$8 = 22\n-// lldb-command:print b\n-// lldb-check:[...]$9 = 23\n-// lldb-command:print c\n-// lldb-check:[...]$10 = 24.5\n-// lldb-command:continue\n-\n-// FUNCTION CALL\n-// lldb-command:print x\n-// lldb-check:[...]$11 = 25\n-// lldb-command:print y\n-// lldb-check:[...]$12 = 26\n-// lldb-command:print z\n-// lldb-check:[...]$13 = 27.5\n-// lldb-command:continue\n-\n-// EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$14 = 28\n-// lldb-command:print y\n-// lldb-check:[...]$15 = 29\n-// lldb-command:print z\n-// lldb-check:[...]$16 = 30.5\n-// lldb-command:continue\n-\n-// RETURN EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$17 = 31\n-// lldb-command:print y\n-// lldb-check:[...]$18 = 32\n-// lldb-command:print z\n-// lldb-check:[...]$19 = 33.5\n-// lldb-command:continue\n-\n-// ARITHMETIC EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$20 = 34\n-// lldb-command:print y\n-// lldb-check:[...]$21 = 35\n-// lldb-command:print z\n-// lldb-check:[...]$22 = 36.5\n-// lldb-command:continue\n-\n-// IF EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$23 = 37\n-// lldb-command:print y\n-// lldb-check:[...]$24 = 38\n-// lldb-command:print z\n-// lldb-check:[...]$25 = 39.5\n-// lldb-command:continue\n-\n-// WHILE EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$26 = 40\n-// lldb-command:print y\n-// lldb-check:[...]$27 = 41\n-// lldb-command:print z\n-// lldb-check:[...]$28 = 42\n-// lldb-command:continue\n-\n-// LOOP EXPR\n-// lldb-command:print x\n-// lldb-check:[...]$29 = 43\n-// lldb-command:print y\n-// lldb-check:[...]$30 = 44\n-// lldb-command:print z\n-// lldb-check:[...]$31 = 45\n-// lldb-command:continue\n-\n-#![allow(dead_code, unused_assignments, unused_variables)]\n-#![feature(omit_gdb_pretty_printer_section)]\n-#![omit_gdb_pretty_printer_section]\n-\n-#[no_stack_check]\n-fn immediate_args(a: isize, b: bool, c: f64) {\n-    println!(\"\");\n-}\n-\n-struct BigStruct {\n-    a: u64,\n-    b: u64,\n-    c: u64,\n-    d: u64,\n-    e: u64,\n-    f: u64,\n-    g: u64,\n-    h: u64\n-}\n-\n-#[no_stack_check]\n-fn non_immediate_args(a: BigStruct, b: BigStruct) {\n-    println!(\"\");\n-}\n-\n-#[no_stack_check]\n-fn binding(a: i64, b: u64, c: f64) {\n-    let x = 0;\n-    println!(\"\");\n-}\n-\n-#[no_stack_check]\n-fn assignment(mut a: u64, b: u64, c: f64) {\n-    a = b;\n-    println!(\"\");\n-}\n-\n-#[no_stack_check]\n-fn function_call(x: u64, y: u64, z: f64) {\n-    println!(\"Hi!\")\n-}\n-\n-#[no_stack_check]\n-fn identifier(x: u64, y: u64, z: f64) -> u64 {\n-    x\n-}\n-\n-#[no_stack_check]\n-fn return_expr(x: u64, y: u64, z: f64) -> u64 {\n-    return x;\n-}\n-\n-#[no_stack_check]\n-fn arithmetic_expr(x: u64, y: u64, z: f64) -> u64 {\n-    x + y\n-}\n-\n-#[no_stack_check]\n-fn if_expr(x: u64, y: u64, z: f64) -> u64 {\n-    if x + y < 1000 {\n-        x\n-    } else {\n-        y\n-    }\n-}\n-\n-#[no_stack_check]\n-fn while_expr(mut x: u64, y: u64, z: u64) -> u64 {\n-    while x + y < 1000 {\n-        x += z\n-    }\n-    return x;\n-}\n-\n-#[no_stack_check]\n-fn loop_expr(mut x: u64, y: u64, z: u64) -> u64 {\n-    loop {\n-        x += z;\n-\n-        if x + y > 1000 {\n-            return x;\n-        }\n-    }\n-}\n-\n-fn main() {\n-    immediate_args(1, true, 2.5);\n-\n-    non_immediate_args(\n-        BigStruct {\n-            a: 3,\n-            b: 4,\n-            c: 5,\n-            d: 6,\n-            e: 7,\n-            f: 8,\n-            g: 9,\n-            h: 10\n-        },\n-        BigStruct {\n-            a: 11,\n-            b: 12,\n-            c: 13,\n-            d: 14,\n-            e: 15,\n-            f: 16,\n-            g: 17,\n-            h: 18\n-        }\n-    );\n-\n-    binding(19, 20, 21.5);\n-    assignment(22, 23, 24.5);\n-    function_call(25, 26, 27.5);\n-    identifier(28, 29, 30.5);\n-    return_expr(31, 32, 33.5);\n-    arithmetic_expr(34, 35, 36.5);\n-    if_expr(37, 38, 39.5);\n-    while_expr(40, 41, 42);\n-    loop_expr(43, 44, 45);\n-}"}]}