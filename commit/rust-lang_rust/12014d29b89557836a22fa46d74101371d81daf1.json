{"sha": "12014d29b89557836a22fa46d74101371d81daf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMDE0ZDI5Yjg5NTU3ODM2YTIyZmE0NmQ3NDEwMTM3MWQ4MWRhZjE=", "commit": {"author": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2021-01-12T14:03:29Z"}, "committer": {"name": "Sebastian Dr\u00f6ge", "email": "sebastian@centricular.com", "date": "2021-01-12T14:37:20Z"}, "message": "Add Box::downcast() for dyn Any + Send + Sync", "tree": {"sha": "f0fdd16f8b96feb90df21d34d197334ad0c4e1d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0fdd16f8b96feb90df21d34d197334ad0c4e1d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12014d29b89557836a22fa46d74101371d81daf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12014d29b89557836a22fa46d74101371d81daf1", "html_url": "https://github.com/rust-lang/rust/commit/12014d29b89557836a22fa46d74101371d81daf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12014d29b89557836a22fa46d74101371d81daf1/comments", "author": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sdroege", "id": 301846, "node_id": "MDQ6VXNlcjMwMTg0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/301846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sdroege", "html_url": "https://github.com/sdroege", "followers_url": "https://api.github.com/users/sdroege/followers", "following_url": "https://api.github.com/users/sdroege/following{/other_user}", "gists_url": "https://api.github.com/users/sdroege/gists{/gist_id}", "starred_url": "https://api.github.com/users/sdroege/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sdroege/subscriptions", "organizations_url": "https://api.github.com/users/sdroege/orgs", "repos_url": "https://api.github.com/users/sdroege/repos", "events_url": "https://api.github.com/users/sdroege/events{/privacy}", "received_events_url": "https://api.github.com/users/sdroege/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6b461652a9bebfb4ddabcae896ee7237cf0962a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6b461652a9bebfb4ddabcae896ee7237cf0962a", "html_url": "https://github.com/rust-lang/rust/commit/b6b461652a9bebfb4ddabcae896ee7237cf0962a"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "b4dd5d92c6a134611ca0adf2c9de2012880ab360", "filename": "library/alloc/src/boxed.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/12014d29b89557836a22fa46d74101371d81daf1/library%2Falloc%2Fsrc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12014d29b89557836a22fa46d74101371d81daf1/library%2Falloc%2Fsrc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed.rs?ref=12014d29b89557836a22fa46d74101371d81daf1", "patch": "@@ -1364,6 +1364,39 @@ impl<A: Allocator> Box<dyn Any + Send, A> {\n     }\n }\n \n+impl<A: Allocator> Box<dyn Any + Send + Sync, A> {\n+    #[inline]\n+    #[stable(feature = \"box_send_sync_any_downcast\", since = \"1.51.0\")]\n+    /// Attempt to downcast the box to a concrete type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::any::Any;\n+    ///\n+    /// fn print_if_string(value: Box<dyn Any + Send + Sync>) {\n+    ///     if let Ok(string) = value.downcast::<String>() {\n+    ///         println!(\"String ({}): {}\", string.len(), string);\n+    ///     }\n+    /// }\n+    ///\n+    /// let my_string = \"Hello World\".to_string();\n+    /// print_if_string(Box::new(my_string));\n+    /// print_if_string(Box::new(0i8));\n+    /// ```\n+    pub fn downcast<T: Any>(self) -> Result<Box<T, A>, Self> {\n+        if self.is::<T>() {\n+            unsafe {\n+                let (raw, alloc): (*mut (dyn Any + Send + Sync), _) =\n+                    Box::into_raw_with_allocator(self);\n+                Ok(Box::from_raw_in(raw as *mut T, alloc))\n+            }\n+        } else {\n+            Err(self)\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: fmt::Display + ?Sized, A: Allocator> fmt::Display for Box<T, A> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {"}]}