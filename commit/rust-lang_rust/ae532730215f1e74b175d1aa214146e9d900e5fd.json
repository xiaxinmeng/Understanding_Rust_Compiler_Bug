{"sha": "ae532730215f1e74b175d1aa214146e9d900e5fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNTMyNzMwMjE1ZjFlNzRiMTc1ZDFhYTIxNDE0NmU5ZDkwMGU1ZmQ=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-03T15:22:27Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-03T15:22:27Z"}, "message": "slice: tweak concat & join", "tree": {"sha": "1091f1afbc8aa711c658685e6e4cfcb9ea508acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1091f1afbc8aa711c658685e6e4cfcb9ea508acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae532730215f1e74b175d1aa214146e9d900e5fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae532730215f1e74b175d1aa214146e9d900e5fd", "html_url": "https://github.com/rust-lang/rust/commit/ae532730215f1e74b175d1aa214146e9d900e5fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae532730215f1e74b175d1aa214146e9d900e5fd/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a563ceb3b9471acbb827e27686c5cacadc49a032", "url": "https://api.github.com/repos/rust-lang/rust/commits/a563ceb3b9471acbb827e27686c5cacadc49a032", "html_url": "https://github.com/rust-lang/rust/commit/a563ceb3b9471acbb827e27686c5cacadc49a032"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e012d56f48b48aee1129e352f49b4510bae3b8b6", "filename": "src/liballoc/slice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae532730215f1e74b175d1aa214146e9d900e5fd/src%2Fliballoc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae532730215f1e74b175d1aa214146e9d900e5fd/src%2Fliballoc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fslice.rs?ref=ae532730215f1e74b175d1aa214146e9d900e5fd", "patch": "@@ -589,7 +589,7 @@ impl<T: Clone, V: Borrow<[T]>> SliceConcatExt<T> for [V] {\n     type Output = Vec<T>;\n \n     fn concat(&self) -> Vec<T> {\n-        let size = self.iter().fold(0, |acc, v| acc + v.borrow().len());\n+        let size = self.iter().map(|slice| slice.borrow().len()).sum();\n         let mut result = Vec::with_capacity(size);\n         for v in self {\n             result.extend_from_slice(v.borrow())\n@@ -603,8 +603,8 @@ impl<T: Clone, V: Borrow<[T]>> SliceConcatExt<T> for [V] {\n             Some(first) => first,\n             None => return vec![],\n         };\n-        let size = self.iter().fold(0, |acc, v| acc + v.borrow().len());\n-        let mut result = Vec::with_capacity(size + self.len());\n+        let size = self.iter().map(|slice| slice.borrow().len()).sum::<usize>() + self.len() - 1;\n+        let mut result = Vec::with_capacity(size);\n         result.extend_from_slice(first.borrow());\n \n         for v in iter {"}]}