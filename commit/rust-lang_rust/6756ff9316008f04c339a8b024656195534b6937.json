{"sha": "6756ff9316008f04c339a8b024656195534b6937", "node_id": "C_kwDOAAsO6NoAKDY3NTZmZjkzMTYwMDhmMDRjMzM5YThiMDI0NjU2MTk1NTM0YjY5Mzc", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-04T18:44:24Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-04T18:44:24Z"}, "message": "Update CPU idle tracking for apple hosts\n\nThe previous setup did not properly consider hyperthreads (at least in local\ntesting), which likely skews CI results as well. The new code is both simpler\nand hopefully will produce more accurate results.", "tree": {"sha": "b3dd216704751cb07bbfd7e8a40dec6ab011f7b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3dd216704751cb07bbfd7e8a40dec6ab011f7b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6756ff9316008f04c339a8b024656195534b6937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6756ff9316008f04c339a8b024656195534b6937", "html_url": "https://github.com/rust-lang/rust/commit/6756ff9316008f04c339a8b024656195534b6937", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6756ff9316008f04c339a8b024656195534b6937/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "html_url": "https://github.com/rust-lang/rust/commit/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "adfd895ead04e8b0e14f4d97be6382675036710d", "filename": "src/ci/cpu-usage-over-time.py", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/6756ff9316008f04c339a8b024656195534b6937/src%2Fci%2Fcpu-usage-over-time.py", "raw_url": "https://github.com/rust-lang/rust/raw/6756ff9316008f04c339a8b024656195534b6937/src%2Fci%2Fcpu-usage-over-time.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fcpu-usage-over-time.py?ref=6756ff9316008f04c339a8b024656195534b6937", "patch": "@@ -108,37 +108,37 @@ def idle_since(self, prev):\n     from ctypes import *\n     libc = cdll.LoadLibrary('/usr/lib/libc.dylib')\n \n-    PROESSOR_CPU_LOAD_INFO = c_int(2)\n+    class host_cpu_load_info_data_t(Structure):\n+        _fields_ = [(\"cpu_ticks\", c_uint * 4)]\n+\n+    host_statistics = libc.host_statistics\n+    host_statistics.argtypes = [\n+        c_uint,\n+        c_int,\n+        POINTER(host_cpu_load_info_data_t),\n+        POINTER(c_int)\n+    ]\n+    host_statistics.restype = c_int\n+\n     CPU_STATE_USER = 0\n     CPU_STATE_SYSTEM = 1\n     CPU_STATE_IDLE = 2\n     CPU_STATE_NICE = 3\n-    c_int_p = POINTER(c_int)\n-\n     class State:\n         def __init__(self):\n-            num_cpus_u = c_uint(0)\n-            cpu_info = c_int_p()\n-            cpu_info_cnt = c_int(0)\n-            err = libc.host_processor_info(\n+            stats = host_cpu_load_info_data_t()\n+            count = c_int(4) # HOST_CPU_LOAD_INFO_COUNT\n+            err = libc.host_statistics(\n                 libc.mach_host_self(),\n-                PROESSOR_CPU_LOAD_INFO,\n-                byref(num_cpus_u),\n-                byref(cpu_info),\n-                byref(cpu_info_cnt),\n+                c_int(3), # HOST_CPU_LOAD_INFO\n+                byref(stats),\n+                byref(count),\n             )\n             assert err == 0\n-            self.user = 0\n-            self.system = 0\n-            self.idle = 0\n-            self.nice = 0\n-            cur = 0\n-            while cur < cpu_info_cnt.value:\n-                self.user += cpu_info[cur + CPU_STATE_USER]\n-                self.system += cpu_info[cur + CPU_STATE_SYSTEM]\n-                self.idle += cpu_info[cur + CPU_STATE_IDLE]\n-                self.nice += cpu_info[cur + CPU_STATE_NICE]\n-                cur += num_cpus_u.value\n+            self.system = stats.cpu_ticks[CPU_STATE_SYSTEM]\n+            self.user = stats.cpu_ticks[CPU_STATE_USER]\n+            self.idle = stats.cpu_ticks[CPU_STATE_IDLE]\n+            self.nice = stats.cpu_ticks[CPU_STATE_NICE]\n \n         def idle_since(self, prev):\n             user = self.user - prev.user"}]}