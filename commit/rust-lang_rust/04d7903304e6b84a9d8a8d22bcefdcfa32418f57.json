{"sha": "04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZDc5MDMzMDRlNmI4NGE5ZDhhOGQyMmJjZWZkY2ZhMzI0MThmNTc=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-07-25T23:27:44Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-08-31T01:18:41Z"}, "message": "Fix clippy for let-else", "tree": {"sha": "e8dd7c6d38f5b1df01b5c442146e8ee0ffa9520c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8dd7c6d38f5b1df01b5c442146e8ee0ffa9520c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "html_url": "https://github.com/rust-lang/rust/commit/04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04d7903304e6b84a9d8a8d22bcefdcfa32418f57/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960ea093ab3b3b34afd4bf6b755d93184452d6af", "url": "https://api.github.com/repos/rust-lang/rust/commits/960ea093ab3b3b34afd4bf6b755d93184452d6af", "html_url": "https://github.com/rust-lang/rust/commit/960ea093ab3b3b34afd4bf6b755d93184452d6af"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "2ffc00b449d08b7e9c25282579618b98ee233912", "filename": "src/tools/clippy/clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/04d7903304e6b84a9d8a8d22bcefdcfa32418f57/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04d7903304e6b84a9d8a8d22bcefdcfa32418f57/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "patch": "@@ -316,8 +316,11 @@ impl<'a, 'b> SimilarNamesLocalVisitor<'a, 'b> {\n \n impl<'a, 'tcx> Visitor<'tcx> for SimilarNamesLocalVisitor<'a, 'tcx> {\n     fn visit_local(&mut self, local: &'tcx Local) {\n-        if let Some(ref init) = local.init {\n-            self.apply(|this| walk_expr(this, &**init));\n+        if let Some((init, els)) = &local.kind.init_else_opt() {\n+            self.apply(|this| walk_expr(this, init));\n+            if let Some(els) = els {\n+                self.apply(|this| walk_block(this, els));\n+            }\n         }\n         // add the pattern after the expression because the bindings aren't available\n         // yet in the init"}, {"sha": "133f6c29f7d2162d6300eca8c3d96d9f61af97d4", "filename": "src/tools/clippy/clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/04d7903304e6b84a9d8a8d22bcefdcfa32418f57/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04d7903304e6b84a9d8a8d22bcefdcfa32418f57/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs?ref=04d7903304e6b84a9d8a8d22bcefdcfa32418f57", "patch": "@@ -221,7 +221,7 @@ pub fn eq_stmt(l: &Stmt, r: &Stmt) -> bool {\n         (Local(l), Local(r)) => {\n             eq_pat(&l.pat, &r.pat)\n                 && both(&l.ty, &r.ty, |l, r| eq_ty(l, r))\n-                && eq_expr_opt(&l.init, &r.init)\n+                && eq_local_kind(&l.kind, &r.kind)\n                 && over(&l.attrs, &r.attrs, |l, r| eq_attr(l, r))\n         },\n         (Item(l), Item(r)) => eq_item(l, r, eq_item_kind),\n@@ -234,6 +234,16 @@ pub fn eq_stmt(l: &Stmt, r: &Stmt) -> bool {\n     }\n }\n \n+pub fn eq_local_kind(l: &LocalKind, r: &LocalKind) -> bool {\n+    use LocalKind::*;\n+    match (l, r) {\n+        (Decl, Decl) => true,\n+        (Init(l), Init(r)) => eq_expr(l, r),\n+        (InitElse(li, le), InitElse(ri, re)) => eq_expr(li, ri) && eq_block(le, re),\n+        _ => false,\n+    }\n+}\n+\n pub fn eq_item<K>(l: &Item<K>, r: &Item<K>, mut eq_kind: impl FnMut(&K, &K) -> bool) -> bool {\n     eq_id(l.ident, r.ident)\n         && over(&l.attrs, &r.attrs, |l, r| eq_attr(l, r))"}]}