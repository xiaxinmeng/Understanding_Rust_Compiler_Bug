{"sha": "c42492e6aa481a65e4919b5ab26f4b0936556fc0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MjQ5MmU2YWE0ODFhNjVlNDkxOWI1YWIyNmY0YjA5MzY1NTZmYzA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T19:31:17Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-10T20:58:35Z"}, "message": "rt: Rename config_valgrind_stack to register_valgrind_stack, etc", "tree": {"sha": "7959ee17acd6f12434373601db265665cc8c7873", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7959ee17acd6f12434373601db265665cc8c7873"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c42492e6aa481a65e4919b5ab26f4b0936556fc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c42492e6aa481a65e4919b5ab26f4b0936556fc0", "html_url": "https://github.com/rust-lang/rust/commit/c42492e6aa481a65e4919b5ab26f4b0936556fc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c42492e6aa481a65e4919b5ab26f4b0936556fc0/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd0ae80e63beed52164eac76bc94b36b73b6c590", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd0ae80e63beed52164eac76bc94b36b73b6c590", "html_url": "https://github.com/rust-lang/rust/commit/dd0ae80e63beed52164eac76bc94b36b73b6c590"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "940f6acf19688b0fc16a578e78d3ff2c078313ef", "filename": "src/rt/rust_stack.cpp", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_stack.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_stack.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.cpp?ref=c42492e6aa481a65e4919b5ab26f4b0936556fc0", "patch": "@@ -3,14 +3,8 @@\n #include \"vg/valgrind.h\"\n #include \"vg/memcheck.h\"\n \n-// A value that goes at the end of the stack and must not be touched\n-const uint8_t stack_canary[] = {0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD,\n-                                0xAB, 0xCD, 0xAB, 0xCD};\n-\n void\n-config_valgrind_stack(stk_seg *stk) {\n+register_valgrind_stack(stk_seg *stk) {\n     stk->valgrind_id =\n         VALGRIND_STACK_REGISTER(&stk->data[0],\n                                 stk->end);\n@@ -25,7 +19,7 @@ config_valgrind_stack(stk_seg *stk) {\n }\n \n void\n-unconfig_valgrind_stack(stk_seg *stk) {\n+deregister_valgrind_stack(stk_seg *stk) {\n     VALGRIND_STACK_DEREGISTER(stk->valgrind_id);\n }\n "}, {"sha": "8d102cb14aa33025ae5f1e5a785fc7cb44417e8a", "filename": "src/rt/rust_stack.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_stack.h", "raw_url": "https://github.com/rust-lang/rust/raw/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_stack.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_stack.h?ref=c42492e6aa481a65e4919b5ab26f4b0936556fc0", "patch": "@@ -40,10 +40,10 @@ destroy_stack(T allocer, stk_seg *stk) {\n }\n \n void\n-config_valgrind_stack(stk_seg *stk);\n+register_valgrind_stack(stk_seg *stk);\n \n void\n-unconfig_valgrind_stack(stk_seg *stk);\n+deregister_valgrind_stack(stk_seg *stk);\n \n void\n check_stack_canary(stk_seg *stk);"}, {"sha": "c290e2ade13e38a630c815bacf75ea76738b7ef5", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=c42492e6aa481a65e4919b5ab26f4b0936556fc0", "patch": "@@ -567,7 +567,7 @@ rust_task::new_stack(size_t requested_sz) {\n             LOG(this, mem, \"reusing existing stack\");\n             stk = stk->prev;\n             A(thread, stk->prev == NULL, \"Bogus stack ptr\");\n-            config_valgrind_stack(stk);\n+            register_valgrind_stack(stk);\n             return;\n         } else {\n             LOG(this, mem, \"existing stack is not big enough\");\n@@ -598,7 +598,7 @@ rust_task::new_stack(size_t requested_sz) {\n     LOGPTR(thread, \"stk end\", new_stk->end);\n \n     stk = new_stk;\n-    config_valgrind_stack(stk);\n+    register_valgrind_stack(stk);\n     total_stack_sz += user_stack_size(new_stk);\n }\n \n@@ -626,7 +626,7 @@ rust_task::del_stack() {\n         old_stk->prev = NULL;\n     }\n \n-    unconfig_valgrind_stack(old_stk);\n+    deregister_valgrind_stack(old_stk);\n     if (delete_stack) {\n         free_stack(old_stk);\n         A(thread, total_stack_sz == 0, \"Stack size should be 0\");"}, {"sha": "73e62dee6e53d10dc294c09a505daf7eaa17f4d8", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/c42492e6aa481a65e4919b5ab26f4b0936556fc0/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=c42492e6aa481a65e4919b5ab26f4b0936556fc0", "patch": "@@ -290,7 +290,7 @@ rust_task_thread::start_main_loop() {\n \n     I(this, !extra_c_stack);\n     if (cached_c_stack) {\n-        unconfig_valgrind_stack(cached_c_stack);\n+        deregister_valgrind_stack(cached_c_stack);\n         destroy_stack(kernel, cached_c_stack);\n         cached_c_stack = NULL;\n     }\n@@ -372,14 +372,14 @@ rust_task_thread::prepare_c_stack() {\n     I(this, !extra_c_stack);\n     if (!cached_c_stack) {\n         cached_c_stack = create_stack(kernel, C_STACK_SIZE);\n-        config_valgrind_stack(cached_c_stack);\n+        register_valgrind_stack(cached_c_stack);\n     }\n }\n \n void\n rust_task_thread::unprepare_c_stack() {\n     if (extra_c_stack) {\n-        unconfig_valgrind_stack(extra_c_stack);\n+        deregister_valgrind_stack(extra_c_stack);\n         destroy_stack(kernel, extra_c_stack);\n         extra_c_stack = NULL;\n     }"}]}