{"sha": "ca2ff9c50dc0af698d50fce3304909d60448bd8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMmZmOWM1MGRjMGFmNjk4ZDUwZmNlMzMwNDkwOWQ2MDQ0OGJkOGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T23:41:09Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T23:41:09Z"}, "message": "stdlib: Add ivec::grow_set()", "tree": {"sha": "ae1543a72515a3634ee7e4887b4e6ea64febb40e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae1543a72515a3634ee7e4887b4e6ea64febb40e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca2ff9c50dc0af698d50fce3304909d60448bd8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2ff9c50dc0af698d50fce3304909d60448bd8c", "html_url": "https://github.com/rust-lang/rust/commit/ca2ff9c50dc0af698d50fce3304909d60448bd8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca2ff9c50dc0af698d50fce3304909d60448bd8c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d90b1df4b9933adc20736a39a2b9a747760e0ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d90b1df4b9933adc20736a39a2b9a747760e0ab", "html_url": "https://github.com/rust-lang/rust/commit/5d90b1df4b9933adc20736a39a2b9a747760e0ab"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "2bc23c54b9ce2abe3a2470c759f913c701799231", "filename": "src/lib/ivec.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ca2ff9c50dc0af698d50fce3304909d60448bd8c/src%2Flib%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2ff9c50dc0af698d50fce3304909d60448bd8c/src%2Flib%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fivec.rs?ref=ca2ff9c50dc0af698d50fce3304909d60448bd8c", "patch": "@@ -29,7 +29,7 @@ fn to_ptr[T](&T[] v) -> *T {\n     ret rustrt::ivec_to_ptr(v);\n }\n \n-fn len[T](&T[] v) -> uint {\n+fn len[T](&T[mutable?] v) -> uint {\n     ret rusti::ivec_len(v);\n }\n \n@@ -110,23 +110,42 @@ fn slice_mut[T](&T[mutable?] v, uint start, uint end) -> T[mutable] {\n \n /// Expands the given vector in-place by appending `n` copies of `initval`.\n fn grow[T](&mutable T[] v, uint n, &T initval) {\n+    reserve(v, len(v) + n);\n     let uint i = 0u;\n     while (i < n) {\n         v += ~[initval];\n         i += 1u;\n     }\n }\n \n+// TODO: Remove me once we have slots.\n+fn grow_mut[T](&mutable T[mutable] v, uint n, &T initval) {\n+    reserve(v, len(v) + n);\n+    let uint i = 0u;\n+    while (i < n) {\n+        v += ~[mutable initval];\n+        i += 1u;\n+    }\n+}\n+\n /// Calls `f` `n` times and appends the results of these calls to the given\n /// vector.\n fn grow_fn[T](&mutable T[] v, uint n, fn(uint)->T init_fn) {\n+    reserve(v, len(v) + n);\n     let uint i = 0u;\n     while (i < n) {\n         v += ~[init_fn(i)];\n         i += 1u;\n     }\n }\n \n+/// Sets the element at position `index` to `val`. If `index` is past the end\n+/// of the vector, expands the vector by replicating `initval` to fill the\n+/// intervening space.\n+fn grow_set[T](&mutable T[mutable] v, uint index, &T initval, &T val) {\n+    if (index >= len(v)) { grow_mut(v, index - len(v) + 1u, initval); }\n+    v.(index) = val;\n+}\n \n mod unsafe {\n     fn copy_from_buf[T](&mutable T[] v, *T ptr, uint count) {"}, {"sha": "2d0955269fef09c9c10ff160a6aec08fc89a5dc2", "filename": "src/test/run-pass/lib-ivec.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca2ff9c50dc0af698d50fce3304909d60448bd8c/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2ff9c50dc0af698d50fce3304909d60448bd8c/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-ivec.rs?ref=ca2ff9c50dc0af698d50fce3304909d60448bd8c", "patch": "@@ -133,6 +133,17 @@ fn test_grow_fn() {\n     assert (v.(2) == 4u);\n }\n \n+fn test_grow_set() {\n+    auto v = ~[ mutable 1, 2, 3 ];\n+    ivec::grow_set(v, 4u, 4, 5);\n+    assert (ivec::len(v) == 5u);\n+    assert (v.(0) == 1);\n+    assert (v.(1) == 2);\n+    assert (v.(2) == 3);\n+    assert (v.(3) == 4);\n+    assert (v.(4) == 5);\n+}\n+\n fn main() {\n     test_reserve_and_on_heap();\n     test_unsafe_ptrs();\n@@ -146,5 +157,6 @@ fn main() {\n     // Appending\n     test_grow();\n     test_grow_fn();\n+    test_grow_set();\n }\n "}]}