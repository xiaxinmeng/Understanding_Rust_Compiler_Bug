{"sha": "15fcca80a40e2e9bfc658b6a98bfb9856d122d14", "node_id": "C_kwDOAAsO6NoAKDE1ZmNjYTgwYTQwZTJlOWJmYzY1OGI2YTk4YmZiOTg1NmQxMjJkMTQ", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-11-24T17:52:11Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-11-24T18:21:04Z"}, "message": "Escape { and } in inline asm", "tree": {"sha": "4e5c90384329539006adb4b65ab02eb1041cff12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e5c90384329539006adb4b65ab02eb1041cff12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15fcca80a40e2e9bfc658b6a98bfb9856d122d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15fcca80a40e2e9bfc658b6a98bfb9856d122d14", "html_url": "https://github.com/rust-lang/rust/commit/15fcca80a40e2e9bfc658b6a98bfb9856d122d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15fcca80a40e2e9bfc658b6a98bfb9856d122d14/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfc184cd2c6baaba01f72bc11be2f0af3c21b236", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfc184cd2c6baaba01f72bc11be2f0af3c21b236", "html_url": "https://github.com/rust-lang/rust/commit/bfc184cd2c6baaba01f72bc11be2f0af3c21b236"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "0d5c343ffe363caba9795f7e3677f2ba2339c82d", "filename": "src/asm.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/15fcca80a40e2e9bfc658b6a98bfb9856d122d14/src%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15fcca80a40e2e9bfc658b6a98bfb9856d122d14/src%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fasm.rs?ref=15fcca80a40e2e9bfc658b6a98bfb9856d122d14", "patch": "@@ -381,15 +381,19 @@ impl<'a, 'gcc, 'tcx> AsmBuilderMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n         for piece in template {\n             match *piece {\n                 InlineAsmTemplatePiece::String(ref string) => {\n-                    // TODO(@Commeownist): switch to `Iterator::intersperse` once it's stable\n-                    let mut iter = string.split('%');\n-                    if let Some(s) = iter.next() {\n-                        template_str.push_str(s);\n-                    }\n-\n-                    for s in iter {\n-                        template_str.push_str(\"%%\");\n-                        template_str.push_str(s);\n+                    for char in string.chars() {\n+                        // TODO(antoyo): might also need to escape | if rustc doesn't do it.\n+                        let escaped_char =\n+                            match char {\n+                                '%' => \"%%\",\n+                                '{' => \"%{\",\n+                                '}' => \"%}\",\n+                                _ => {\n+                                    template_str.push(char);\n+                                    continue;\n+                                },\n+                            };\n+                        template_str.push_str(escaped_char);\n                     }\n                 }\n                 InlineAsmTemplatePiece::Placeholder { operand_idx, modifier, span: _ } => {"}]}