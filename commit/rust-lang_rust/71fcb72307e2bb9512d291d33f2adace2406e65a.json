{"sha": "71fcb72307e2bb9512d291d33f2adace2406e65a", "node_id": "C_kwDOAAsO6NoAKDcxZmNiNzIzMDdlMmJiOTUxMmQyOTFkMzNmMmFkYWNlMjQwNmU2NWE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-10-19T19:35:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-19T19:35:12Z"}, "message": "Rollup merge of #87769 - m-ou-se:alloc-features-cleanup, r=yaahc,dtolnay\n\nAlloc features cleanup\n\nThis sorts and categorizes the `#![features]` in `alloc` and removes unused ones.\n\nThis is part of #87766\n\nThe following feature attributes were unnecessary and are removed:\n\n```diff\n// Library features:\n-#![feature(cow_is_borrowed)]\n-#![feature(maybe_uninit_uninit_array)]\n-#![feature(slice_partition_dedup)]\n\n// Language features:\n-#![feature(arbitrary_self_types)]\n-#![feature(auto_traits)]\n-#![feature(box_patterns)]\n-#![feature(decl_macro)]\n-#![feature(nll)]\n```", "tree": {"sha": "816fea07aae95bd9e61007104f703c6ba9825eec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/816fea07aae95bd9e61007104f703c6ba9825eec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71fcb72307e2bb9512d291d33f2adace2406e65a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhbx3wCRBK7hj4Ov3rIwAAnJMIACIdtpNgLZr8IBpE2VxPtkJm\nw5XH1egd7y3f7patzUTUcPzzit/zR8sCImBGfnKHboKBuf9NHluc4NR4SpUY893o\n5aEsvOg7UYtZmK/GMg2HgtXC6hAAWbRS6Q6c1JSUd1AtQVgyIvAZYDRnZfRcE+JX\nbtGeWD7T0+sxJMPwEYWt5zEwdcWybMjVOwUnHir31NL8ii0VJN9zRIhgHzcXGWhb\nVXCP3h3fxan84JZdwiJ4ge0QgZ1Xcgy7/TKLlKgOivWjBwCbt9s+2rOjymp4MtjF\nVf5a5iYDfSUC1MHHbK3p3Y8rwuhGyAFj9rlhCSOIqmGVurnOqQm/vCvBlGTQXhE=\n=1ovp\n-----END PGP SIGNATURE-----\n", "payload": "tree 816fea07aae95bd9e61007104f703c6ba9825eec\nparent 3d9533023004bc05d6bf65e1339e29aceac76f62\nparent 6fdcedc9c8eff1f56c1568bb936638f1249cd2aa\nauthor Yuki Okushi <jtitor@2k36.org> 1634672112 +0900\ncommitter GitHub <noreply@github.com> 1634672112 +0900\n\nRollup merge of #87769 - m-ou-se:alloc-features-cleanup, r=yaahc,dtolnay\n\nAlloc features cleanup\n\nThis sorts and categorizes the `#![features]` in `alloc` and removes unused ones.\n\nThis is part of #87766\n\nThe following feature attributes were unnecessary and are removed:\n\n```diff\n// Library features:\n-#![feature(cow_is_borrowed)]\n-#![feature(maybe_uninit_uninit_array)]\n-#![feature(slice_partition_dedup)]\n\n// Language features:\n-#![feature(arbitrary_self_types)]\n-#![feature(auto_traits)]\n-#![feature(box_patterns)]\n-#![feature(decl_macro)]\n-#![feature(nll)]\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71fcb72307e2bb9512d291d33f2adace2406e65a", "html_url": "https://github.com/rust-lang/rust/commit/71fcb72307e2bb9512d291d33f2adace2406e65a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71fcb72307e2bb9512d291d33f2adace2406e65a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9533023004bc05d6bf65e1339e29aceac76f62", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d9533023004bc05d6bf65e1339e29aceac76f62", "html_url": "https://github.com/rust-lang/rust/commit/3d9533023004bc05d6bf65e1339e29aceac76f62"}, {"sha": "6fdcedc9c8eff1f56c1568bb936638f1249cd2aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdcedc9c8eff1f56c1568bb936638f1249cd2aa", "html_url": "https://github.com/rust-lang/rust/commit/6fdcedc9c8eff1f56c1568bb936638f1249cd2aa"}], "stats": {"total": 89, "additions": 46, "deletions": 43}, "files": [{"sha": "285d7755c0689c69d817439a65a0a3795650caee", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 46, "deletions": 43, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/71fcb72307e2bb9512d291d33f2adace2406e65a/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71fcb72307e2bb9512d291d33f2adace2406e65a/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=71fcb72307e2bb9512d291d33f2adace2406e65a", "patch": "@@ -80,87 +80,90 @@\n )]\n #![no_std]\n #![needs_allocator]\n+//\n+// Lints:\n+#![deny(unsafe_op_in_unsafe_fn)]\n #![warn(deprecated_in_future)]\n-#![warn(missing_docs)]\n #![warn(missing_debug_implementations)]\n+#![warn(missing_docs)]\n #![allow(explicit_outlives_requirements)]\n-#![deny(unsafe_op_in_unsafe_fn)]\n-#![feature(rustc_allow_const_fn_unstable)]\n-#![cfg_attr(not(test), feature(generator_trait))]\n-#![cfg_attr(test, feature(test))]\n-#![cfg_attr(test, feature(new_uninit))]\n+//\n+// Library features:\n+#![feature(alloc_layout_extra)]\n #![feature(allocator_api)]\n #![feature(array_chunks)]\n #![feature(array_methods)]\n #![feature(array_windows)]\n-#![feature(allow_internal_unstable)]\n-#![feature(arbitrary_self_types)]\n #![feature(async_stream)]\n-#![feature(box_patterns)]\n-#![feature(box_syntax)]\n-#![feature(cfg_sanitize)]\n-#![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n #![cfg_attr(not(no_global_oom_handling), feature(const_btree_new))]\n-#![feature(const_fn_trait_bound)]\n-#![feature(cow_is_borrowed)]\n #![feature(const_cow_is_borrowed)]\n-#![feature(const_trait_impl)]\n-#![feature(destructuring_assignment)]\n-#![feature(dispatch_from_dyn)]\n #![feature(core_intrinsics)]\n-#![feature(dropck_eyepatch)]\n+#![feature(dispatch_from_dyn)]\n #![feature(exact_size_is_empty)]\n-#![feature(exclusive_range_pattern)]\n #![feature(extend_one)]\n #![feature(fmt_internals)]\n #![feature(fn_traits)]\n-#![feature(fundamental)]\n #![feature(inplace_iteration)]\n-// Technically, this is a bug in rustdoc: rustdoc sees the documentation on `#[lang = slice_alloc]`\n-// blocks is for `&[T]`, which also has documentation using this feature in `core`, and gets mad\n-// that the feature-gate isn't enabled. Ideally, it wouldn't check for the feature gate for docs\n-// from other crates, but since this can only appear for lang items, it doesn't seem worth fixing.\n-#![feature(intra_doc_pointers)]\n #![feature(iter_advance_by)]\n #![feature(iter_zip)]\n-#![feature(lang_items)]\n #![feature(layout_for_ptr)]\n-#![feature(negative_impls)]\n-#![feature(never_type)]\n-#![feature(nll)]\n+#![feature(maybe_uninit_extra)]\n+#![feature(maybe_uninit_slice)]\n+#![cfg_attr(test, feature(new_uninit))]\n #![feature(nonnull_slice_from_raw_parts)]\n-#![feature(auto_traits)]\n #![feature(option_result_unwrap_unchecked)]\n #![feature(pattern)]\n #![feature(ptr_internals)]\n-#![feature(rustc_attrs)]\n #![feature(receiver_trait)]\n-#![feature(min_specialization)]\n #![feature(set_ptr_value)]\n+#![feature(slice_group_by)]\n #![feature(slice_ptr_get)]\n #![feature(slice_ptr_len)]\n #![feature(slice_range)]\n-#![feature(staged_api)]\n #![feature(str_internals)]\n #![feature(trusted_len)]\n-#![feature(unboxed_closures)]\n+#![feature(trusted_random_access)]\n+#![feature(try_trait_v2)]\n #![feature(unicode_internals)]\n #![feature(unsize)]\n-#![feature(unsized_fn_params)]\n+//\n+// Language features:\n #![feature(allocator_internals)]\n-#![feature(slice_partition_dedup)]\n-#![feature(maybe_uninit_extra, maybe_uninit_slice, maybe_uninit_uninit_array)]\n-#![feature(alloc_layout_extra)]\n-#![feature(trusted_random_access)]\n-#![feature(try_trait_v2)]\n+#![feature(allow_internal_unstable)]\n #![feature(associated_type_bounds)]\n-#![feature(slice_group_by)]\n-#![feature(decl_macro)]\n+#![feature(box_syntax)]\n+#![feature(cfg_sanitize)]\n+#![feature(cfg_target_has_atomic)]\n+#![feature(const_fn_trait_bound)]\n+#![feature(const_trait_impl)]\n+#![feature(destructuring_assignment)]\n+#![feature(dropck_eyepatch)]\n+#![feature(exclusive_range_pattern)]\n+#![feature(fundamental)]\n+#![cfg_attr(not(test), feature(generator_trait))]\n+#![feature(lang_items)]\n+#![feature(min_specialization)]\n+#![feature(negative_impls)]\n+#![feature(never_type)]\n+#![feature(nll)] // Not necessary, but here to test the `nll` feature.\n+#![feature(rustc_allow_const_fn_unstable)]\n+#![feature(rustc_attrs)]\n+#![feature(staged_api)]\n+#![cfg_attr(test, feature(test))]\n+#![feature(unboxed_closures)]\n+#![feature(unsized_fn_params)]\n+//\n+// Rustdoc features:\n #![feature(doc_cfg)]\n #![cfg_attr(not(bootstrap), feature(doc_cfg_hide))]\n-// Allow testing this library\n+// Technically, this is a bug in rustdoc: rustdoc sees the documentation on `#[lang = slice_alloc]`\n+// blocks is for `&[T]`, which also has documentation using this feature in `core`, and gets mad\n+// that the feature-gate isn't enabled. Ideally, it wouldn't check for the feature gate for docs\n+// from other crates, but since this can only appear for lang items, it doesn't seem worth fixing.\n+#![feature(intra_doc_pointers)]\n \n+// Allow testing this library\n #[cfg(test)]\n #[macro_use]\n extern crate std;"}]}