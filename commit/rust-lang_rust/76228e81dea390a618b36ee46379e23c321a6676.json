{"sha": "76228e81dea390a618b36ee46379e23c321a6676", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MjI4ZTgxZGVhMzkwYTYxOGIzNmVlNDYzNzllMjNjMzIxYTY2NzY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-10T07:52:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-10T07:52:50Z"}, "message": "Format source codes", "tree": {"sha": "e4808d1b45ced7aee02d40ac87f98f60c35361e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4808d1b45ced7aee02d40ac87f98f60c35361e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76228e81dea390a618b36ee46379e23c321a6676", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76228e81dea390a618b36ee46379e23c321a6676", "html_url": "https://github.com/rust-lang/rust/commit/76228e81dea390a618b36ee46379e23c321a6676", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76228e81dea390a618b36ee46379e23c321a6676/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1e124b03a93a6fa0a72ab79d73f83d96e9e0c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e124b03a93a6fa0a72ab79d73f83d96e9e0c1e", "html_url": "https://github.com/rust-lang/rust/commit/d1e124b03a93a6fa0a72ab79d73f83d96e9e0c1e"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "cb0f83732e953640dc74135dd908cd8752b085bb", "filename": "src/expr.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/76228e81dea390a618b36ee46379e23c321a6676/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76228e81dea390a618b36ee46379e23c321a6676/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=76228e81dea390a618b36ee46379e23c321a6676", "patch": "@@ -1714,7 +1714,7 @@ impl Rewrite for ast::Arm {\n         let (mut extend, body) = match body.node {\n             ast::ExprKind::Block(ref block)\n                 if !is_unsafe_block(block) && is_simple_block(block, context.codemap) &&\n-                       context.config.wrap_match_arms() => {\n+                    context.config.wrap_match_arms() => {\n                 if let ast::StmtKind::Expr(ref expr) = block.stmts[0].node {\n                     (false, &**expr)\n                 } else {\n@@ -1756,9 +1756,10 @@ impl Rewrite for ast::Arm {\n             match rewrite {\n                 Some(ref body_str)\n                     if (!body_str.contains('\\n') && body_str.len() <= arm_shape.width) ||\n-                           !context.config.wrap_match_arms() ||\n-                           (extend && first_line_width(body_str) <= arm_shape.width) ||\n-                           is_block => {\n+                        !context.config.wrap_match_arms() ||\n+                        (extend && first_line_width(body_str) <= arm_shape.width) ||\n+                        is_block =>\n+                {\n                     let block_sep = match context.config.control_brace_style() {\n                         ControlBraceStyle::AlwaysNextLine if is_block => alt_block_sep.as_str(),\n                         _ if guard.is_some() && pats_str.contains('\\n') && is_block &&"}, {"sha": "6fd070291af461f38d14d30ff4d11eb959324e28", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76228e81dea390a618b36ee46379e23c321a6676/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76228e81dea390a618b36ee46379e23c321a6676/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=76228e81dea390a618b36ee46379e23c321a6676", "patch": "@@ -210,7 +210,8 @@ fn rewrite_segment(\n         match **params {\n             ast::PathParameters::AngleBracketed(ref data)\n                 if !data.lifetimes.is_empty() || !data.types.is_empty() ||\n-                       !data.bindings.is_empty() => {\n+                    !data.bindings.is_empty() =>\n+            {\n                 let param_list = data.lifetimes\n                     .iter()\n                     .map(SegmentParam::LifeTime)"}]}