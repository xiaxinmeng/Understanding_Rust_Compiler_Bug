{"sha": "c59b01f24189de0e988c4ead5ec3260ff05d484d", "node_id": "C_kwDOAAsO6NoAKGM1OWIwMWYyNDE4OWRlMGU5ODhjNGVhZDVlYzMyNjBmZjA1ZDQ4NGQ", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-01T19:02:14Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T13:47:20Z"}, "message": "simplify a self-profiling activity call in the cg_gcc backend", "tree": {"sha": "b4d157bed5d2d6b9ca4dfa5bc37dcfca0393a559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4d157bed5d2d6b9ca4dfa5bc37dcfca0393a559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c59b01f24189de0e988c4ead5ec3260ff05d484d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c59b01f24189de0e988c4ead5ec3260ff05d484d", "html_url": "https://github.com/rust-lang/rust/commit/c59b01f24189de0e988c4ead5ec3260ff05d484d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c59b01f24189de0e988c4ead5ec3260ff05d484d/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "249d3e9dd943e68d80f5a0d779aa7ab75dd536ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/249d3e9dd943e68d80f5a0d779aa7ab75dd536ef", "html_url": "https://github.com/rust-lang/rust/commit/249d3e9dd943e68d80f5a0d779aa7ab75dd536ef"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "efcf18d31eb09a69d345f94f5081b16b3612a20c", "filename": "src/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c59b01f24189de0e988c4ead5ec3260ff05d484d/src%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c59b01f24189de0e988c4ead5ec3260ff05d484d/src%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fback%2Fwrite.rs?ref=c59b01f24189de0e988c4ead5ec3260ff05d484d", "patch": "@@ -11,7 +11,7 @@ use rustc_target::spec::SplitDebuginfo;\n use crate::{GccCodegenBackend, GccContext};\n \n pub(crate) unsafe fn codegen(cgcx: &CodegenContext<GccCodegenBackend>, _diag_handler: &Handler, module: ModuleCodegen<GccContext>, config: &ModuleConfig) -> Result<CompiledModule, FatalError> {\n-    let _timer = cgcx.prof.generic_activity_with_arg(\"LLVM_module_codegen\", &module.name[..]);\n+    let _timer = cgcx.prof.generic_activity_with_arg(\"LLVM_module_codegen\", &*module.name);\n     {\n         let context = &module.module_llvm.context;\n "}]}