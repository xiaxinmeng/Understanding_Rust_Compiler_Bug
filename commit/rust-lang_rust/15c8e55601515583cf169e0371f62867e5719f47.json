{"sha": "15c8e55601515583cf169e0371f62867e5719f47", "node_id": "C_kwDOAAsO6NoAKDE1YzhlNTU2MDE1MTU1ODNjZjE2OWUwMzcxZjYyODY3ZTU3MTlmNDc", "commit": {"author": {"name": "David CARLIER", "email": "devnexen@gmail.com", "date": "2022-08-21T05:58:51Z"}, "committer": {"name": "David Carlier", "email": "devnexen@gmail.com", "date": "2022-08-22T15:27:37Z"}, "message": "net listen backlog update, follow-up from #97963.\n\nFreeBSD and using system limit instead for others.", "tree": {"sha": "023a1e6d63733c56e56bc6b5c9e826e04bf32029", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/023a1e6d63733c56e56bc6b5c9e826e04bf32029"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15c8e55601515583cf169e0371f62867e5719f47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15c8e55601515583cf169e0371f62867e5719f47", "html_url": "https://github.com/rust-lang/rust/commit/15c8e55601515583cf169e0371f62867e5719f47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15c8e55601515583cf169e0371f62867e5719f47/comments", "author": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devnexen", "id": 4922778, "node_id": "MDQ6VXNlcjQ5MjI3Nzg=", "avatar_url": "https://avatars.githubusercontent.com/u/4922778?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devnexen", "html_url": "https://github.com/devnexen", "followers_url": "https://api.github.com/users/devnexen/followers", "following_url": "https://api.github.com/users/devnexen/following{/other_user}", "gists_url": "https://api.github.com/users/devnexen/gists{/gist_id}", "starred_url": "https://api.github.com/users/devnexen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devnexen/subscriptions", "organizations_url": "https://api.github.com/users/devnexen/orgs", "repos_url": "https://api.github.com/users/devnexen/repos", "events_url": "https://api.github.com/users/devnexen/events{/privacy}", "received_events_url": "https://api.github.com/users/devnexen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2858b5cd32f3689ad83de77cacfa1ea2f533793", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2858b5cd32f3689ad83de77cacfa1ea2f533793", "html_url": "https://github.com/rust-lang/rust/commit/f2858b5cd32f3689ad83de77cacfa1ea2f533793"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "02090afc82f7e7e0e9139533bde155af4629f9bb", "filename": "library/std/src/os/unix/net/listener.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15c8e55601515583cf169e0371f62867e5719f47/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c8e55601515583cf169e0371f62867e5719f47/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Funix%2Fnet%2Flistener.rs?ref=15c8e55601515583cf169e0371f62867e5719f47", "patch": "@@ -73,10 +73,8 @@ impl UnixListener {\n         unsafe {\n             let inner = Socket::new_raw(libc::AF_UNIX, libc::SOCK_STREAM)?;\n             let (addr, len) = sockaddr_un(path.as_ref())?;\n-            #[cfg(target_os = \"linux\")]\n-            const backlog: libc::c_int = -1;\n-            #[cfg(not(target_os = \"linux\"))]\n-            const backlog: libc::c_int = 128;\n+            const backlog: libc::c_int =\n+                if cfg!(any(target_os = \"linux\", target_os = \"freebsd\")) { -1 } else { 128 };\n \n             cvt(libc::bind(inner.as_inner().as_raw_fd(), &addr as *const _ as *const _, len as _))?;\n             cvt(libc::listen(inner.as_inner().as_raw_fd(), backlog))?;"}]}