{"sha": "821dd6c02cf7d2430903f74f9e445975fcaccc55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMWRkNmMwMmNmN2QyNDMwOTAzZjc0ZjllNDQ1OTc1ZmNhY2NjNTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-30T23:55:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-01T00:19:24Z"}, "message": "Change the directory for target libs\n\nThis pushes them down from stageN/lib/rustc/$(target) to\nstageN/lib/rustc/$(target)/lib in order to make room for a target bin dir", "tree": {"sha": "963d64474fd9af82329be89442beb7e382d25420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/963d64474fd9af82329be89442beb7e382d25420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/821dd6c02cf7d2430903f74f9e445975fcaccc55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/821dd6c02cf7d2430903f74f9e445975fcaccc55", "html_url": "https://github.com/rust-lang/rust/commit/821dd6c02cf7d2430903f74f9e445975fcaccc55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/821dd6c02cf7d2430903f74f9e445975fcaccc55/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e71d17ffa67627042d665771f7fa9dd2f3a7a662", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71d17ffa67627042d665771f7fa9dd2f3a7a662", "html_url": "https://github.com/rust-lang/rust/commit/e71d17ffa67627042d665771f7fa9dd2f3a7a662"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "fb6ca8b07dc620022a673a35cf486d3515274601", "filename": "Makefile.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/821dd6c02cf7d2430903f74f9e445975fcaccc55/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/821dd6c02cf7d2430903f74f9e445975fcaccc55/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=821dd6c02cf7d2430903f74f9e445975fcaccc55", "patch": "@@ -166,7 +166,12 @@ define SREQ\n # Destinations of artifacts for target architectures\n TARGET_ROOT$(1)$(2) = stage$(1)/lib/rustc/$(2)\n TARGET_BIN$(1)$(2) = $$(TARGET_ROOT$(1)$(2))/bin\n+# FIXME: Transitional\n+ifeq ($(1),0)\n TARGET_LIB$(1)$(2) = $$(TARGET_ROOT$(1)$(2))\n+else\n+TARGET_LIB$(1)$(2) = $$(TARGET_ROOT$(1)$(2))/lib\n+endif\n \n # Destinations of artifacts for the host compiler\n HOST_ROOT$(1) = stage$(1)"}, {"sha": "dcbe33e00ff49e4c510a3c36f89cfd3a0701d275", "filename": "configure", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/821dd6c02cf7d2430903f74f9e445975fcaccc55/configure", "raw_url": "https://github.com/rust-lang/rust/raw/821dd6c02cf7d2430903f74f9e445975fcaccc55/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=821dd6c02cf7d2430903f74f9e445975fcaccc55", "patch": "@@ -390,17 +390,17 @@ for t in $CFG_TARGET_TRIPLES\n do\n     for i in 0 1 2 3\n     do\n-        # old-style \"bin\" dir\n-        make_dir stage$i\n-\n-        # new-style bin dir, not yet used\n+        # host bin dir\n         make_dir stage$i/bin\n \n-        # old-style non-arch libs\n+        # host lib dir\n         make_dir stage$i/lib\n \n-        # new-style arch-prefixed libs, not yet used\n-        make_dir stage$i/lib/rustc/$t\n+        # target bin dir\n+        make_dir stage$i/lib/rustc/$t/bin\n+\n+        # target lib dir\n+        make_dir stage$i/lib/rustc/$t/lib\n     done\n done\n "}, {"sha": "7dae7e6d552f15f70f22c72681981151597185e8", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/821dd6c02cf7d2430903f74f9e445975fcaccc55/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/821dd6c02cf7d2430903f74f9e445975fcaccc55/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=821dd6c02cf7d2430903f74f9e445975fcaccc55", "patch": "@@ -151,7 +151,7 @@ test/rustctest.stage$(2)$$(X): $$(COMPILER_CRATE) $$(COMPILER_INPUTS) \\\n                            $$(HOST_LIB$(2))/$$(CFG_RUSTLLVM) \\\n                            $$(SREQ$(1)$$(CFG_HOST_TRIPLE))\n \t@$$(call E, compile_and_link: $$@)\n-\t$$(STAGE$(1)) -o $$@ $$< --test\n+\t$$(STAGE$(1)) -L $$(HOST_LIB$(2)) -o $$@ $$< --test\n \n test/rustctest.stage$(2).out.tmp: test/rustctest.stage$(2)$$(X)\n \t@$$(call E, run: $$<)"}, {"sha": "a0c6aac09fd5776cfa85a60f9ee18cecdd2d0dd9", "filename": "src/comp/back/link.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/821dd6c02cf7d2430903f74f9e445975fcaccc55/src%2Fcomp%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821dd6c02cf7d2430903f74f9e445975fcaccc55/src%2Fcomp%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fback%2Flink.rs?ref=821dd6c02cf7d2430903f74f9e445975fcaccc55", "patch": "@@ -39,16 +39,23 @@ fn llvm_err(sess: session::session, msg: str) {\n     } else { sess.fatal(msg + \": \" + str::str_from_cstr(buf)); }\n }\n \n-fn get_target_lib_path(sess: session::session) -> fs::path {\n+fn make_target_lib_path(sysroot: fs::path, target_triple: str) -> fs::path {\n     let path = [\n-        sess.get_opts().sysroot,\n+        sysroot,\n         \"lib/rustc\",\n-        sess.get_opts().target_triple];\n+        target_triple,\n+        \"lib\"\n+    ];\n     check vec::is_not_empty(path);\n     let path = fs::connect_many(path);\n     ret path;\n }\n \n+fn get_target_lib_path(sess: session::session) -> fs::path {\n+    make_target_lib_path(sess.get_opts().sysroot,\n+                         sess.get_opts().target_triple)\n+}\n+\n fn get_target_lib_file_path(sess: session::session,\n                             file: fs::path) -> fs::path {\n     fs::connect(get_target_lib_path(sess), file)"}, {"sha": "20dfe674fd1ef6293ab492733629a0dbb4dd6260", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/821dd6c02cf7d2430903f74f9e445975fcaccc55/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/821dd6c02cf7d2430903f74f9e445975fcaccc55/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=821dd6c02cf7d2430903f74f9e445975fcaccc55", "patch": "@@ -378,8 +378,7 @@ fn build_session_options(binary: str, match: getopts::match)\n             some(s) { s }\n         };\n \n-    let library_search_paths = [\n-        fs::connect(sysroot, \"lib/rustc/\" + target )];\n+    let library_search_paths = [link::make_target_lib_path(sysroot, target)];\n     let lsp_vec = getopts::opt_strs(match, \"L\");\n     // FIXME: These should probably go in front of the defaults\n     for lsp: str in lsp_vec { library_search_paths += [lsp]; }"}]}