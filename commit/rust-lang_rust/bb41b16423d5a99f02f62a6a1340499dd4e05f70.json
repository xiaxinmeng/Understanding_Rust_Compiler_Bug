{"sha": "bb41b16423d5a99f02f62a6a1340499dd4e05f70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNDFiMTY0MjNkNWE5OWYwMmY2MmE2YTEzNDA0OTlkZDRlMDVmNzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-14T17:29:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-14T17:29:19Z"}, "message": "Auto merge of #3879 - phansch:rustfix_string_lit_as_bytes, r=flip1995\n\nRun rustfix for string_lit_as_bytes tests\n\nThis moves the `string_lit_as_bytes` tests into a new file and enables\nrustfix tests for them.\n\ncc #3603, #2038", "tree": {"sha": "427dc49ee5df565cbbb5a7dbeff5517fb1bdba75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/427dc49ee5df565cbbb5a7dbeff5517fb1bdba75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb41b16423d5a99f02f62a6a1340499dd4e05f70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb41b16423d5a99f02f62a6a1340499dd4e05f70", "html_url": "https://github.com/rust-lang/rust/commit/bb41b16423d5a99f02f62a6a1340499dd4e05f70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb41b16423d5a99f02f62a6a1340499dd4e05f70/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9df38117d9fee4b2593ebeeccf98bc415485234a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9df38117d9fee4b2593ebeeccf98bc415485234a", "html_url": "https://github.com/rust-lang/rust/commit/9df38117d9fee4b2593ebeeccf98bc415485234a"}, {"sha": "67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/67aad6c18042bbf843b3b1b5536b7750fbedc5c2", "html_url": "https://github.com/rust-lang/rust/commit/67aad6c18042bbf843b3b1b5536b7750fbedc5c2"}], "stats": {"total": 97, "additions": 61, "deletions": 36}, "files": [{"sha": "a70504656d9e2feab0292b1a3beedb65633528db", "filename": "tests/ui/string_lit_as_bytes.fixed", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.fixed?ref=bb41b16423d5a99f02f62a6a1340499dd4e05f70", "patch": "@@ -0,0 +1,19 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+#![warn(clippy::string_lit_as_bytes)]\n+\n+fn str_lit_as_bytes() {\n+    let bs = b\"hello there\";\n+\n+    let bs = br###\"raw string with three ### in it and some \" \"\"###;\n+\n+    // no warning, because this cannot be written as a byte string literal:\n+    let ubs = \"\u2603\".as_bytes();\n+\n+    let strify = stringify!(foobar).as_bytes();\n+\n+    let includestr = include_bytes!(\"entry.rs\");\n+}\n+\n+fn main() {}"}, {"sha": "ea8c712854bc139da024c3039166bf64a83479a1", "filename": "tests/ui/string_lit_as_bytes.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.rs?ref=bb41b16423d5a99f02f62a6a1340499dd4e05f70", "patch": "@@ -0,0 +1,19 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+#![warn(clippy::string_lit_as_bytes)]\n+\n+fn str_lit_as_bytes() {\n+    let bs = \"hello there\".as_bytes();\n+\n+    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+\n+    // no warning, because this cannot be written as a byte string literal:\n+    let ubs = \"\u2603\".as_bytes();\n+\n+    let strify = stringify!(foobar).as_bytes();\n+\n+    let includestr = include_str!(\"entry.rs\").as_bytes();\n+}\n+\n+fn main() {}"}, {"sha": "f51cd71a6dc26186f75d95ba28ab59ff23bc2d89", "filename": "tests/ui/string_lit_as_bytes.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstring_lit_as_bytes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstring_lit_as_bytes.stderr?ref=bb41b16423d5a99f02f62a6a1340499dd4e05f70", "patch": "@@ -0,0 +1,22 @@\n+error: calling `as_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:7:14\n+   |\n+LL |     let bs = \"hello there\".as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n+   |\n+   = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n+\n+error: calling `as_bytes()` on a string literal\n+  --> $DIR/string_lit_as_bytes.rs:9:14\n+   |\n+LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n+\n+error: calling `as_bytes()` on `include_str!(..)`\n+  --> $DIR/string_lit_as_bytes.rs:16:22\n+   |\n+LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "766e23c744a577a4cb0ff88d64b9ef4e287bab0b", "filename": "tests/ui/strings.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.rs?ref=bb41b16423d5a99f02f62a6a1340499dd4e05f70", "patch": "@@ -42,21 +42,6 @@ fn both() {\n     assert_eq!(&x, &z);\n }\n \n-#[allow(dead_code, unused_variables)]\n-#[warn(clippy::string_lit_as_bytes)]\n-fn str_lit_as_bytes() {\n-    let bs = \"hello there\".as_bytes();\n-\n-    let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-\n-    // no warning, because this cannot be written as a byte string literal:\n-    let ubs = \"\u2603\".as_bytes();\n-\n-    let strify = stringify!(foobar).as_bytes();\n-\n-    let includestr = include_str!(\"entry.rs\").as_bytes();\n-}\n-\n #[allow(clippy::assign_op_pattern)]\n fn main() {\n     add_only();"}, {"sha": "7f684fe63555e00fef23c57ce34de684fbf089df", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb41b16423d5a99f02f62a6a1340499dd4e05f70/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=bb41b16423d5a99f02f62a6a1340499dd4e05f70", "patch": "@@ -52,25 +52,5 @@ error: you added something to a string. Consider using `String::push_str()` inst\n LL |     let z = y + \"...\";\n    |             ^^^^^^^^^\n \n-error: calling `as_bytes()` on a string literal\n-  --> $DIR/strings.rs:48:14\n-   |\n-LL |     let bs = \"hello there\".as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `b\"hello there\"`\n-   |\n-   = note: `-D clippy::string-lit-as-bytes` implied by `-D warnings`\n-\n-error: calling `as_bytes()` on a string literal\n-  --> $DIR/strings.rs:50:14\n-   |\n-LL |     let bs = r###\"raw string with three ### in it and some \" \"\"###.as_bytes();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using a byte string literal instead: `br###\"raw string with three ### in it and some \" \"\"###`\n-\n-error: calling `as_bytes()` on `include_str!(..)`\n-  --> $DIR/strings.rs:57:22\n-   |\n-LL |     let includestr = include_str!(\"entry.rs\").as_bytes();\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `include_bytes!(..)` instead: `include_bytes!(\"entry.rs\")`\n-\n-error: aborting due to 11 previous errors\n+error: aborting due to 8 previous errors\n "}]}