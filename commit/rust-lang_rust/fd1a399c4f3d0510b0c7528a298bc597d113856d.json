{"sha": "fd1a399c4f3d0510b0c7528a298bc597d113856d", "node_id": "C_kwDOAAsO6NoAKGZkMWEzOTljNGYzZDA1MTBiMGM3NTI4YTI5OGJjNTk3ZDExMzg1NmQ", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2022-09-12T18:08:58Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2022-09-12T18:08:58Z"}, "message": "Allow tool-lints to specify a feature-gate too", "tree": {"sha": "b0821950b350c4035bad97ba32d3ee05b445df25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0821950b350c4035bad97ba32d3ee05b445df25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd1a399c4f3d0510b0c7528a298bc597d113856d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIYEABYIAC4WIQSil6aeYAADwGp0ncHG9XSMbdFgewUCYx91uhAcZ2l0QG5lbW8x\nNTcuY29tAAoJEMb1dIxt0WB7uoIA/22X3OS8rggY+3hk3CLm27UzX/cXFkXfo8JC\nAlT3/HtbAQDRDmWZFDAGM0pNppesOH8IUN8K2gYjj/B6DagRVyPOAA==\n=MhRy\n-----END PGP SIGNATURE-----", "payload": "tree b0821950b350c4035bad97ba32d3ee05b445df25\nparent 7f115e3cd239af753aeb398a114fa321a3ce584b\nauthor Wim Looman <git@nemo157.com> 1663006138 +0200\ncommitter Wim Looman <git@nemo157.com> 1663006138 +0200\n\nAllow tool-lints to specify a feature-gate too\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd1a399c4f3d0510b0c7528a298bc597d113856d", "html_url": "https://github.com/rust-lang/rust/commit/fd1a399c4f3d0510b0c7528a298bc597d113856d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd1a399c4f3d0510b0c7528a298bc597d113856d/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f115e3cd239af753aeb398a114fa321a3ce584b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f115e3cd239af753aeb398a114fa321a3ce584b", "html_url": "https://github.com/rust-lang/rust/commit/7f115e3cd239af753aeb398a114fa321a3ce584b"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "1e16ac51e9e5de807f6178de339e694c8f2b006d", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fd1a399c4f3d0510b0c7528a298bc597d113856d/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1a399c4f3d0510b0c7528a298bc597d113856d/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=fd1a399c4f3d0510b0c7528a298bc597d113856d", "patch": "@@ -440,8 +440,10 @@ impl<'s> LintLevelsBuilder<'s> {\n                                     sp,\n                                     reason,\n                                 );\n-                                for id in ids {\n-                                    self.insert_spec(*id, (level, src));\n+                                for &id in ids {\n+                                    if self.check_gated_lint(id, attr.span) {\n+                                        self.insert_spec(id, (level, src));\n+                                    }\n                                 }\n                                 if let Level::Expect(expect_id) = level {\n                                     self.lint_expectations.push(("}, {"sha": "11b2d057a07692fd1fbdee07b1b6bc01ac2e03dd", "filename": "compiler/rustc_lint_defs/src/lib.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fd1a399c4f3d0510b0c7528a298bc597d113856d/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd1a399c4f3d0510b0c7528a298bc597d113856d/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Flib.rs?ref=fd1a399c4f3d0510b0c7528a298bc597d113856d", "patch": "@@ -658,18 +658,21 @@ macro_rules! declare_lint {\n macro_rules! declare_tool_lint {\n     (\n         $(#[$attr:meta])* $vis:vis $tool:ident ::$NAME:ident, $Level: ident, $desc: expr\n+        $(, @feature_gate = $gate:expr;)?\n     ) => (\n-        $crate::declare_tool_lint!{$(#[$attr])* $vis $tool::$NAME, $Level, $desc, false}\n+        $crate::declare_tool_lint!{$(#[$attr])* $vis $tool::$NAME, $Level, $desc, false $(, @feature_gate = $gate;)?}\n     );\n     (\n         $(#[$attr:meta])* $vis:vis $tool:ident ::$NAME:ident, $Level:ident, $desc:expr,\n         report_in_external_macro: $rep:expr\n+        $(, @feature_gate = $gate:expr;)?\n     ) => (\n-         $crate::declare_tool_lint!{$(#[$attr])* $vis $tool::$NAME, $Level, $desc, $rep}\n+         $crate::declare_tool_lint!{$(#[$attr])* $vis $tool::$NAME, $Level, $desc, $rep $(, @feature_gate = $gate;)?}\n     );\n     (\n         $(#[$attr:meta])* $vis:vis $tool:ident ::$NAME:ident, $Level:ident, $desc:expr,\n         $external:expr\n+        $(, @feature_gate = $gate:expr;)?\n     ) => (\n         $(#[$attr])*\n         $vis static $NAME: &$crate::Lint = &$crate::Lint {\n@@ -680,8 +683,9 @@ macro_rules! declare_tool_lint {\n             report_in_external_macro: $external,\n             future_incompatible: None,\n             is_plugin: true,\n-            feature_gate: None,\n+            $(feature_gate: Some($gate),)?\n             crate_level_only: false,\n+            ..$crate::Lint::default_fields_for_macro()\n         };\n     );\n }"}]}