{"sha": "4618aada4d95d0c23c14eb8b843902858e7f2be4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MThhYWRhNGQ5NWQwYzIzYzE0ZWI4Yjg0MzkwMjg1OGU3ZjJiZTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-10-09T13:59:10Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-10-13T15:42:17Z"}, "message": "Add E0511 error explanation", "tree": {"sha": "7155abb97c9ea042c09b26acfd4e328f31571a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7155abb97c9ea042c09b26acfd4e328f31571a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4618aada4d95d0c23c14eb8b843902858e7f2be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4618aada4d95d0c23c14eb8b843902858e7f2be4", "html_url": "https://github.com/rust-lang/rust/commit/4618aada4d95d0c23c14eb8b843902858e7f2be4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4618aada4d95d0c23c14eb8b843902858e7f2be4/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0836a6f851fdcf250cdef9b38d87b53874d8f8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0836a6f851fdcf250cdef9b38d87b53874d8f8f1", "html_url": "https://github.com/rust-lang/rust/commit/0836a6f851fdcf250cdef9b38d87b53874d8f8f1"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "2ad2e7528e442be491b35512d349bd8cb9354cb3", "filename": "src/librustc_trans/diagnostics.rs", "status": "modified", "additions": 37, "deletions": 11, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/4618aada4d95d0c23c14eb8b843902858e7f2be4/src%2Flibrustc_trans%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4618aada4d95d0c23c14eb8b843902858e7f2be4/src%2Flibrustc_trans%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdiagnostics.rs?ref=4618aada4d95d0c23c14eb8b843902858e7f2be4", "patch": "@@ -28,10 +28,11 @@ pub unsafe fn by_value() -> i32 {\n }\n ```\n \n-Returned values are stored in registers. In the case where the returned\n-type doesn't fit in a register, the function returns `()` and has an\n-additional input argument, this is a pointer where the result should\n-be written. Example:\n+Return values may be stored in a return register(s) or written into a so-called\n+out pointer. In case the returned value is too big (this is\n+target-ABI-dependent and generally not portable or future proof) to fit into\n+the return register(s), the compiler will return the value by writing it into\n+space allocated in the caller's stack frame. Example:\n \n ```\n extern \"rust-intrinsic\" {\n@@ -45,8 +46,37 @@ pub unsafe fn by_pointer() -> String {\n ```\n \"##,\n \n+E0511: r##\"\n+Invalid monomorphization of an intrinsic function was used. Erroneous code\n+example:\n+\n+```\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(a: T, b: T) -> T;\n+}\n+\n+unsafe { simd_add(0, 1); }\n+// error: invalid monomorphization of `simd_add` intrinsic\n+```\n+\n+The generic type has to be a SIMD type. Example:\n+\n+```\n+#[repr(simd)]\n+#[derive(Copy, Clone)]\n+struct i32x1(i32);\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_add<T>(a: T, b: T) -> T;\n+}\n+\n+unsafe { simd_add(i32x1(0), i32x1(1)); } // ok!\n+```\n+\"##,\n+\n E0512: r##\"\n-A transmute was called on types with different sizes. Erroneous code example:\n+Transmute with two differently sized types was attempted. Erroneous code\n+example:\n \n ```\n extern \"rust-intrinsic\" {\n@@ -55,11 +85,11 @@ extern \"rust-intrinsic\" {\n \n fn main() {\n     unsafe { ctpop8(::std::mem::transmute(0u16)); }\n-    // error: transmute called on types with different sizes\n+    // error: transmute called with differently sized types\n }\n ```\n \n-Please use types with same size or use the awaited type directly. Example:\n+Please use types with same size or use the expected type directly. Example:\n \n ```\n extern \"rust-intrinsic\" {\n@@ -90,7 +120,3 @@ let x = &[0, 1, 2][2]; // ok\n \"##,\n \n }\n-\n-register_diagnostics! {\n-    E0511, // invalid monomorphization of `{}` intrinsic\n-}"}]}