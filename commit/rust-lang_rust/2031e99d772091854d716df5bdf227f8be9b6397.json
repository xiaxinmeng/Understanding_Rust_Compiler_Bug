{"sha": "2031e99d772091854d716df5bdf227f8be9b6397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMzFlOTlkNzcyMDkxODU0ZDcxNmRmNWJkZjIyN2Y4YmU5YjYzOTc=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-05-29T01:05:03Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-05-29T01:05:03Z"}, "message": "Added implementations for TryFrom<{int}> for NonZero{int}", "tree": {"sha": "c1f8833ab67098bfeb16ab8d6965967bd0f263ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1f8833ab67098bfeb16ab8d6965967bd0f263ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2031e99d772091854d716df5bdf227f8be9b6397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2031e99d772091854d716df5bdf227f8be9b6397", "html_url": "https://github.com/rust-lang/rust/commit/2031e99d772091854d716df5bdf227f8be9b6397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2031e99d772091854d716df5bdf227f8be9b6397/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45127211566c53bac386b66909a830649182ab7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/45127211566c53bac386b66909a830649182ab7a", "html_url": "https://github.com/rust-lang/rust/commit/45127211566c53bac386b66909a830649182ab7a"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "22a2804678a4cdc999ed73926a89408e0d23b6e8", "filename": "src/libcore/convert/num.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2031e99d772091854d716df5bdf227f8be9b6397/src%2Flibcore%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2031e99d772091854d716df5bdf227f8be9b6397/src%2Flibcore%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert%2Fnum.rs?ref=2031e99d772091854d716df5bdf227f8be9b6397", "patch": "@@ -445,3 +445,40 @@ nzint_impl_from! { NonZeroU16, NonZeroI128, #[stable(feature = \"nz_int_conv\", si\n nzint_impl_from! { NonZeroU32, NonZeroI64, #[stable(feature = \"nz_int_conv\", since = \"1.41.0\")] }\n nzint_impl_from! { NonZeroU32, NonZeroI128, #[stable(feature = \"nz_int_conv\", since = \"1.41.0\")] }\n nzint_impl_from! { NonZeroU64, NonZeroI128, #[stable(feature = \"nz_int_conv\", since = \"1.41.0\")] }\n+\n+macro_rules! nzint_impl_try_from_int {\n+    ($Int: ty, $NonZeroInt: ty, #[$attr:meta], $doc: expr) => {\n+        #[$attr]\n+        #[doc = $doc]\n+        impl TryFrom<$Int> for $NonZeroInt {\n+            type Error = TryFromIntError;\n+\n+            #[inline]\n+            fn try_from(value: $Int) -> Result<Self, Self::Error> {\n+                Self::new(value).ok_or(TryFromIntError(()))\n+            }\n+        }\n+    };\n+    ($Int: ty, $NonZeroInt: ty, #[$attr:meta]) => {\n+        nzint_impl_try_from_int!($Int,\n+                                 $NonZeroInt,\n+                                 #[$attr],\n+                                 concat!(\"Attempts to convert `\",\n+                                         stringify!($Int),\n+                                         \"` to `\",\n+                                         stringify!($NonZeroInt),\n+                                         \"`.\"));\n+    }\n+}\n+\n+// Int -> Non-zero Int\n+nzint_impl_try_from_int! { u8, NonZeroU8, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { u16, NonZeroU16, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { u32, NonZeroU32, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { u64, NonZeroU64, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { u128, NonZeroU128, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { i8, NonZeroI8, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { i16, NonZeroI16, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { i32, NonZeroI32, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { i64, NonZeroI64, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }\n+nzint_impl_try_from_int! { i128, NonZeroI128, #[stable(feature = \"nzint_try_from_int_conv\", since = \"1.46.0\")] }"}]}