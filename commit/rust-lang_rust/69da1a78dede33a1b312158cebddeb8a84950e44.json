{"sha": "69da1a78dede33a1b312158cebddeb8a84950e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5ZGExYTc4ZGVkZTMzYTFiMzEyMTU4Y2ViZGRlYjhhODQ5NTBlNDQ=", "commit": {"author": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-09-24T05:51:37Z"}, "committer": {"name": "Eli Friedman", "email": "eli.friedman@gmail.com", "date": "2015-09-24T06:12:04Z"}, "message": "Add support for formatting \"return\" expressions.\n\nFixes #303.", "tree": {"sha": "25696868986f7751276279289c2f1150c648c8a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25696868986f7751276279289c2f1150c648c8a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69da1a78dede33a1b312158cebddeb8a84950e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69da1a78dede33a1b312158cebddeb8a84950e44", "html_url": "https://github.com/rust-lang/rust/commit/69da1a78dede33a1b312158cebddeb8a84950e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69da1a78dede33a1b312158cebddeb8a84950e44/comments", "author": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eefriedman", "id": 12769964, "node_id": "MDQ6VXNlcjEyNzY5OTY0", "avatar_url": "https://avatars.githubusercontent.com/u/12769964?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eefriedman", "html_url": "https://github.com/eefriedman", "followers_url": "https://api.github.com/users/eefriedman/followers", "following_url": "https://api.github.com/users/eefriedman/following{/other_user}", "gists_url": "https://api.github.com/users/eefriedman/gists{/gist_id}", "starred_url": "https://api.github.com/users/eefriedman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eefriedman/subscriptions", "organizations_url": "https://api.github.com/users/eefriedman/orgs", "repos_url": "https://api.github.com/users/eefriedman/repos", "events_url": "https://api.github.com/users/eefriedman/events{/privacy}", "received_events_url": "https://api.github.com/users/eefriedman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed597a8059f4e04d2ab7caa9afd1b0ee8f66095c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed597a8059f4e04d2ab7caa9afd1b0ee8f66095c", "html_url": "https://github.com/rust-lang/rust/commit/ed597a8059f4e04d2ab7caa9afd1b0ee8f66095c"}], "stats": {"total": 44, "additions": 35, "deletions": 9}, "files": [{"sha": "2f59f67ac8338f9190b44c9f053ae05d4b5ea539", "filename": "src/expr.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/69da1a78dede33a1b312158cebddeb8a84950e44/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69da1a78dede33a1b312158cebddeb8a84950e44/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=69da1a78dede33a1b312158cebddeb8a84950e44", "patch": "@@ -153,13 +153,18 @@ impl Rewrite for ast::Expr {\n             ast::Expr_::ExprMac(ref mac) => {\n                 rewrite_macro(mac, context, width, offset)\n             }\n+            ast::Expr_::ExprRet(None) => {\n+                wrap_str(\"return\".to_owned(), context.config.max_width, width, offset)\n+            }\n+            ast::Expr_::ExprRet(Some(ref expr)) => {\n+                rewrite_unary_prefix(context, \"return \", &expr, width, offset)\n+            }\n             // We do not format these expressions yet, but they should still\n             // satisfy our width restrictions.\n             ast::Expr_::ExprBox(..) |\n             ast::Expr_::ExprCast(..) |\n             ast::Expr_::ExprIndex(..) |\n             ast::Expr_::ExprAddrOf(..) |\n-            ast::Expr_::ExprRet(..) |\n             ast::Expr_::ExprInlineAsm(..) |\n             ast::Expr_::ExprRepeat(..) => {\n                 wrap_str(context.snippet(self.span), context.config.max_width, width, offset)\n@@ -1294,6 +1299,16 @@ fn rewrite_binary_op(context: &RewriteContext,\n                  rhs_result))\n }\n \n+fn rewrite_unary_prefix(context: &RewriteContext,\n+                        prefix: &str,\n+                        expr: &ast::Expr,\n+                        width: usize,\n+                        offset: Indent)\n+                        -> Option<String> {\n+    expr.rewrite(context, try_opt!(width.checked_sub(prefix.len())), offset + prefix.len())\n+        .map(|r| format!(\"{}{}\", prefix, r))\n+}\n+\n fn rewrite_unary_op(context: &RewriteContext,\n                     op: &ast::UnOp,\n                     expr: &ast::Expr,\n@@ -1307,10 +1322,7 @@ fn rewrite_unary_op(context: &RewriteContext,\n         ast::UnOp::UnNot => \"!\",\n         ast::UnOp::UnNeg => \"-\",\n     };\n-    let operator_len = operator_str.len();\n-\n-    expr.rewrite(context, try_opt!(width.checked_sub(operator_len)), offset + operator_len)\n-        .map(|r| format!(\"{}{}\", operator_str, r))\n+    rewrite_unary_prefix(context, operator_str, expr, width, offset)\n }\n \n fn rewrite_assignment(context: &RewriteContext,"}, {"sha": "1c4cf562f051645c0ef290286701e9cdb50dc7df", "filename": "src/issues.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69da1a78dede33a1b312158cebddeb8a84950e44/src%2Fissues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69da1a78dede33a1b312158cebddeb8a84950e44/src%2Fissues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fissues.rs?ref=69da1a78dede33a1b312158cebddeb8a84950e44", "patch": "@@ -144,9 +144,9 @@ impl BadIssueSeeker {\n                             true\n                         } else {\n                             false\n-                        }\n+                        },\n                     },\n-                    part: NumberPart::OpenParen\n+                    part: NumberPart::OpenParen,\n                 };\n             }\n             fixme_idx = 0;\n@@ -162,9 +162,9 @@ impl BadIssueSeeker {\n                             true\n                         } else {\n                             false\n-                        }\n+                        },\n                     },\n-                    part: NumberPart::OpenParen\n+                    part: NumberPart::OpenParen,\n                 };\n             }\n             todo_idx = 0;"}, {"sha": "0aa64d3abb87b640f88286c3cee47a701cddbde9", "filename": "tests/source/expr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/69da1a78dede33a1b312158cebddeb8a84950e44/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69da1a78dede33a1b312158cebddeb8a84950e44/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=69da1a78dede33a1b312158cebddeb8a84950e44", "patch": "@@ -183,3 +183,9 @@ fn arrays() {\n \n     [ 1 +   3, 4 ,  5, 6, 7, 7, fncall::<Vec<_>>(3-1)]\n }\n+\n+fn returns() {\n+    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa && return;\n+\n+    return aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa + aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n+}"}, {"sha": "3e4c1b9a5360cbbb61003ce8a2a01276e3e1b5cb", "filename": "tests/target/expr.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/69da1a78dede33a1b312158cebddeb8a84950e44/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69da1a78dede33a1b312158cebddeb8a84950e44/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=69da1a78dede33a1b312158cebddeb8a84950e44", "patch": "@@ -195,3 +195,11 @@ fn arrays() {\n \n     [1 + 3, 4, 5, 6, 7, 7, fncall::<Vec<_>>(3 - 1)]\n }\n+\n+fn returns() {\n+    aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa &&\n+    return;\n+\n+    return aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa +\n+           aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa;\n+}"}]}