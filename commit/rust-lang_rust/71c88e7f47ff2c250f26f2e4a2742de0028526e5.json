{"sha": "71c88e7f47ff2c250f26f2e4a2742de0028526e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYzg4ZTdmNDdmZjJjMjUwZjI2ZjJlNGEyNzQyZGUwMDI4NTI2ZTU=", "commit": {"author": {"name": "Q.P.Liu", "email": "qpliu@yahoo.com", "date": "2014-02-09T01:53:27Z"}, "committer": {"name": "Q.P.Liu", "email": "qpliu@yahoo.com", "date": "2014-02-09T01:53:27Z"}, "message": "Fix infinite loop in BufReader::read_until.", "tree": {"sha": "be00e51619cfd4943e349123bc51d8c014ed7de4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be00e51619cfd4943e349123bc51d8c014ed7de4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71c88e7f47ff2c250f26f2e4a2742de0028526e5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71c88e7f47ff2c250f26f2e4a2742de0028526e5", "html_url": "https://github.com/rust-lang/rust/commit/71c88e7f47ff2c250f26f2e4a2742de0028526e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71c88e7f47ff2c250f26f2e4a2742de0028526e5/comments", "author": {"login": "qpliu", "id": 251248, "node_id": "MDQ6VXNlcjI1MTI0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/251248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qpliu", "html_url": "https://github.com/qpliu", "followers_url": "https://api.github.com/users/qpliu/followers", "following_url": "https://api.github.com/users/qpliu/following{/other_user}", "gists_url": "https://api.github.com/users/qpliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/qpliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qpliu/subscriptions", "organizations_url": "https://api.github.com/users/qpliu/orgs", "repos_url": "https://api.github.com/users/qpliu/repos", "events_url": "https://api.github.com/users/qpliu/events{/privacy}", "received_events_url": "https://api.github.com/users/qpliu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qpliu", "id": 251248, "node_id": "MDQ6VXNlcjI1MTI0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/251248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qpliu", "html_url": "https://github.com/qpliu", "followers_url": "https://api.github.com/users/qpliu/followers", "following_url": "https://api.github.com/users/qpliu/following{/other_user}", "gists_url": "https://api.github.com/users/qpliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/qpliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qpliu/subscriptions", "organizations_url": "https://api.github.com/users/qpliu/orgs", "repos_url": "https://api.github.com/users/qpliu/repos", "events_url": "https://api.github.com/users/qpliu/events{/privacy}", "received_events_url": "https://api.github.com/users/qpliu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c539a488a5b59293b24701b8f121fb7fae1636", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c539a488a5b59293b24701b8f121fb7fae1636", "html_url": "https://github.com/rust-lang/rust/commit/e9c539a488a5b59293b24701b8f121fb7fae1636"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "363dbd88fb75f79fd5cf0aac4616c4635a578e46", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/71c88e7f47ff2c250f26f2e4a2742de0028526e5/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c88e7f47ff2c250f26f2e4a2742de0028526e5/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=71c88e7f47ff2c250f26f2e4a2742de0028526e5", "patch": "@@ -312,7 +312,11 @@ impl<'a> Seek for BufReader<'a> {\n \n impl<'a> Buffer for BufReader<'a> {\n     fn fill<'a>(&'a mut self) -> IoResult<&'a [u8]> {\n-        Ok(self.buf.slice_from(self.pos))\n+        if self.pos < self.buf.len() {\n+            Ok(self.buf.slice_from(self.pos))\n+        } else {\n+            Err(io::standard_error(io::EndOfFile))\n+        }\n     }\n     fn consume(&mut self, amt: uint) { self.pos += amt; }\n }\n@@ -449,6 +453,10 @@ mod test {\n         assert_eq!(reader.read(buf), Ok(3));\n         assert_eq!(buf.slice(0, 3), [5, 6, 7]);\n         assert!(reader.read(buf).is_err());\n+        let mut reader = BufReader::new(in_buf);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[0, 1, 2, 3]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[4, 5, 6, 7]);\n+        assert!(reader.read(buf).is_err());\n     }\n \n     #[test]"}]}