{"sha": "0399d1349e9c2e2a54efc553c915b06537b7be03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOTlkMTM0OWU5YzJlMmE1NGVmYzU1M2M5MTViMDY1MzdiN2JlMDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-04T07:21:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-04T07:21:24Z"}, "message": "Rollup merge of #60486 - spastorino:place-related-refactors, r=oli-obk\n\nPlace related refactors\n\nMeanwhile I was working on Place 2 I'm finding some little things that I had on my branch but preferred to land a separate PR for things that are simpler to merge.\n\nr? @oli-obk", "tree": {"sha": "73407fbe4607359c1437dbed1144154b39b7b5f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73407fbe4607359c1437dbed1144154b39b7b5f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0399d1349e9c2e2a54efc553c915b06537b7be03", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJczT10CRBK7hj4Ov3rIwAAdHIIAKikTYeh+U14zx1OkN+bqHUT\nOsOChGllIgDihqriIf9mDsXugK8ZXIVN79wkYvnBDpLSsNtB5+7LpQwYY/fn2kuD\nePQRqzHOqfLK2URVy8v2nVE5ettLleyBA1iIlMZ9eGK1RvfJuYDZ03nrceKF0KiG\nfeYF1RSaW89gQ0Rfd8d8mMh/8psWO0PULq0yEd5nmxbNPlLCxE6Nfv6Xuu+Aq4zh\nkNgq5W8lXyqnJirAz/H+gbXCNQBtPhONb9qwYKe19z844ywEJ6ghKqPA6Y2q13ac\nizyc+JarR1ktNNMq1aJUc/TdrWpjrj6Al7UXQX/art7IwEt25ZYTFtMjffTzmVk=\n=TH9W\n-----END PGP SIGNATURE-----\n", "payload": "tree 73407fbe4607359c1437dbed1144154b39b7b5f6\nparent b4c620dc05f4c5d99e2495abe40fb381f5aa8d7f\nparent 49f01413748f536f49b3d14845dbe5dd717b6b84\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556954484 +0200\ncommitter GitHub <noreply@github.com> 1556954484 +0200\n\nRollup merge of #60486 - spastorino:place-related-refactors, r=oli-obk\n\nPlace related refactors\n\nMeanwhile I was working on Place 2 I'm finding some little things that I had on my branch but preferred to land a separate PR for things that are simpler to merge.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0399d1349e9c2e2a54efc553c915b06537b7be03", "html_url": "https://github.com/rust-lang/rust/commit/0399d1349e9c2e2a54efc553c915b06537b7be03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0399d1349e9c2e2a54efc553c915b06537b7be03/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4c620dc05f4c5d99e2495abe40fb381f5aa8d7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4c620dc05f4c5d99e2495abe40fb381f5aa8d7f", "html_url": "https://github.com/rust-lang/rust/commit/b4c620dc05f4c5d99e2495abe40fb381f5aa8d7f"}, {"sha": "49f01413748f536f49b3d14845dbe5dd717b6b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/49f01413748f536f49b3d14845dbe5dd717b6b84", "html_url": "https://github.com/rust-lang/rust/commit/49f01413748f536f49b3d14845dbe5dd717b6b84"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "09e2b523fae838e4e146e4538d54cbb2c15216ca", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=0399d1349e9c2e2a54efc553c915b06537b7be03", "patch": "@@ -2059,10 +2059,13 @@ impl<'tcx> Place<'tcx> {\n \n     /// Finds the innermost `Local` from this `Place`.\n     pub fn base_local(&self) -> Option<Local> {\n-        match self {\n-            Place::Base(PlaceBase::Local(local)) => Some(*local),\n-            Place::Projection(box Projection { base, elem: _ }) => base.base_local(),\n-            Place::Base(PlaceBase::Static(..)) => None,\n+        let mut place = self;\n+        loop {\n+            match place {\n+                Place::Projection(proj) => place = &proj.base,\n+                Place::Base(PlaceBase::Static(_)) => return None,\n+                Place::Base(PlaceBase::Local(local)) => return Some(*local),\n+            }\n         }\n     }\n "}, {"sha": "5ced497baa1fdf9f3938e620a4d5eea93988dbd8", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=0399d1349e9c2e2a54efc553c915b06537b7be03", "patch": "@@ -210,7 +210,7 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for GatherBorrows<'a, 'gcx, 'tcx> {\n \n             self.insert_as_pending_if_two_phase(location, &assigned_place, kind, idx);\n \n-            if let Some(local) = borrowed_place.root_local() {\n+            if let Some(local) = borrowed_place.base_local() {\n                 self.local_map.entry(local).or_default().insert(idx);\n             }\n         }"}, {"sha": "fc1f5eb5d5a7a45a85db4fbf4d5a55a3a3216ae8", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=0399d1349e9c2e2a54efc553c915b06537b7be03", "patch": "@@ -1831,7 +1831,6 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     }\n \n                     place = base;\n-                    continue;\n                 }\n             }\n         }"}, {"sha": "cf9a6165d71a249159c6e28d500523f0cd5eb7ad", "filename": "src/librustc_mir/borrow_check/place_ext.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0399d1349e9c2e2a54efc553c915b06537b7be03/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplace_ext.rs?ref=0399d1349e9c2e2a54efc553c915b06537b7be03", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir;\n use rustc::mir::ProjectionElem;\n-use rustc::mir::{Local, Mir, Place, PlaceBase, Mutability, Static, StaticKind};\n+use rustc::mir::{Mir, Place, PlaceBase, Mutability, Static, StaticKind};\n use rustc::ty::{self, TyCtxt};\n use crate::borrow_check::borrow_set::LocalsStateAtExit;\n \n@@ -16,10 +16,6 @@ crate trait PlaceExt<'tcx> {\n         mir: &Mir<'tcx>,\n         locals_state_at_exit: &LocalsStateAtExit,\n         ) -> bool;\n-\n-    /// If this is a place like `x.f.g`, returns the local\n-    /// `x`. Returns `None` if this is based in a static.\n-    fn root_local(&self) -> Option<Local>;\n }\n \n impl<'tcx> PlaceExt<'tcx> for Place<'tcx> {\n@@ -82,15 +78,4 @@ impl<'tcx> PlaceExt<'tcx> for Place<'tcx> {\n             },\n         }\n     }\n-\n-    fn root_local(&self) -> Option<Local> {\n-        let mut p = self;\n-        loop {\n-            match p {\n-                Place::Projection(pi) => p = &pi.base,\n-                Place::Base(PlaceBase::Static(_)) => return None,\n-                Place::Base(PlaceBase::Local(l)) => return Some(*l),\n-            }\n-        }\n-    }\n }"}]}