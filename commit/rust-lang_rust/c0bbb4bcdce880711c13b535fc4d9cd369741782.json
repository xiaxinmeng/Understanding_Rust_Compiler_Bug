{"sha": "c0bbb4bcdce880711c13b535fc4d9cd369741782", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYmJiNGJjZGNlODgwNzExYzEzYjUzNWZjNGQ5Y2QzNjk3NDE3ODI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-25T11:12:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-25T11:12:55Z"}, "message": "Rollup merge of #65790 - Centril:move-report-invalid, r=davidtwco\n\nmove report_invalid_macro_expansion_item to item.rs\n\nFrom https://github.com/rust-lang/rust/pull/65324.\n\nr? @Mark-Simulacrum", "tree": {"sha": "8d77ecdc401e9ae082a217c707d933ecd197708b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d77ecdc401e9ae082a217c707d933ecd197708b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0bbb4bcdce880711c13b535fc4d9cd369741782", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsti4CRBK7hj4Ov3rIwAAdHIIAHpS2xp7az/afRuMJNIOMdu7\ny8+gNX1hdTXicKF+TqeNMyPH6uO6IP87XpJDA9QORdwEREf9v1gx41CtGwwcyrpj\nnTteeCdufRdgN4/ZHONOSPyDHFKq9ubvaHDd9pQpZxj+53qfNRHfS1KmYunt6mOY\nPpWPzZlQ88Dio+waJqLIs+JkmPM6oUf77Qp76hSbZgNhXeGJaaOFVh0+cGRlpgpJ\nINiQib7J8TrO4w880GSTdBixUD4IiWsy/2j1COzqz5V4PpjO1ul12igWeLqqgzat\nNVBrqn076qAiLcF57iZ/LCuwAnGe6sWpcrrG5EbF6tKM5ugN5eeUF6m9ivH3aVM=\n=MIqV\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d77ecdc401e9ae082a217c707d933ecd197708b\nparent cbcbba24ac3e435e870499e833606880e039f33c\nparent 5ff7349ef79f10df6063e43f03e5bb8cac5a65b7\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1572001975 +0200\ncommitter GitHub <noreply@github.com> 1572001975 +0200\n\nRollup merge of #65790 - Centril:move-report-invalid, r=davidtwco\n\nmove report_invalid_macro_expansion_item to item.rs\n\nFrom https://github.com/rust-lang/rust/pull/65324.\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0bbb4bcdce880711c13b535fc4d9cd369741782", "html_url": "https://github.com/rust-lang/rust/commit/c0bbb4bcdce880711c13b535fc4d9cd369741782", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0bbb4bcdce880711c13b535fc4d9cd369741782/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbcbba24ac3e435e870499e833606880e039f33c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbcbba24ac3e435e870499e833606880e039f33c", "html_url": "https://github.com/rust-lang/rust/commit/cbcbba24ac3e435e870499e833606880e039f33c"}, {"sha": "5ff7349ef79f10df6063e43f03e5bb8cac5a65b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff7349ef79f10df6063e43f03e5bb8cac5a65b7", "html_url": "https://github.com/rust-lang/rust/commit/5ff7349ef79f10df6063e43f03e5bb8cac5a65b7"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "6ead1ce811d4956a512a3fda0042fca0cfbedb59", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c0bbb4bcdce880711c13b535fc4d9cd369741782/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0bbb4bcdce880711c13b535fc4d9cd369741782/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c0bbb4bcdce880711c13b535fc4d9cd369741782", "patch": "@@ -1368,25 +1368,6 @@ impl<'a> Parser<'a> {\n             }\n         }\n     }\n-\n-    fn report_invalid_macro_expansion_item(&self) {\n-        self.struct_span_err(\n-            self.prev_span,\n-            \"macros that expand to items must be delimited with braces or followed by a semicolon\",\n-        ).multipart_suggestion(\n-            \"change the delimiters to curly braces\",\n-            vec![\n-                (self.prev_span.with_hi(self.prev_span.lo() + BytePos(1)), String::from(\" {\")),\n-                (self.prev_span.with_lo(self.prev_span.hi() - BytePos(1)), '}'.to_string()),\n-            ],\n-            Applicability::MaybeIncorrect,\n-        ).span_suggestion(\n-            self.sess.source_map().next_point(self.prev_span),\n-            \"add a semicolon\",\n-            ';'.to_string(),\n-            Applicability::MaybeIncorrect,\n-        ).emit();\n-    }\n }\n \n pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, handler: &errors::Handler) {"}, {"sha": "506a1a2a27a34f5af1e057cb91ae5a16b0a84d0f", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c0bbb4bcdce880711c13b535fc4d9cd369741782/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0bbb4bcdce880711c13b535fc4d9cd369741782/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=c0bbb4bcdce880711c13b535fc4d9cd369741782", "patch": "@@ -19,6 +19,7 @@ use log::debug;\n use std::mem;\n use rustc_target::spec::abi::Abi;\n use errors::{Applicability, DiagnosticBuilder, DiagnosticId, StashKey};\n+use syntax_pos::BytePos;\n \n /// Whether the type alias or associated type is a concrete type or an opaque type.\n #[derive(Debug)]\n@@ -1739,6 +1740,25 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    fn report_invalid_macro_expansion_item(&self) {\n+        self.struct_span_err(\n+            self.prev_span,\n+            \"macros that expand to items must be delimited with braces or followed by a semicolon\",\n+        ).multipart_suggestion(\n+            \"change the delimiters to curly braces\",\n+            vec![\n+                (self.prev_span.with_hi(self.prev_span.lo() + BytePos(1)), String::from(\" {\")),\n+                (self.prev_span.with_lo(self.prev_span.hi() - BytePos(1)), '}'.to_string()),\n+            ],\n+            Applicability::MaybeIncorrect,\n+        ).span_suggestion(\n+            self.sess.source_map().next_point(self.prev_span),\n+            \"add a semicolon\",\n+            ';'.to_string(),\n+            Applicability::MaybeIncorrect,\n+        ).emit();\n+    }\n+\n     fn mk_item(&self, span: Span, ident: Ident, kind: ItemKind, vis: Visibility,\n                attrs: Vec<Attribute>) -> P<Item> {\n         P(Item {"}]}