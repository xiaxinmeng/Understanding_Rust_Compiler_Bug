{"sha": "54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "node_id": "C_kwDOAAsO6NoAKDU0YzMyOTliM2FlZDQ2NGI1YzY1OGMyZGJmYzFhMjcwZmI0YzA1MWY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-06T11:48:00Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-10-07T21:12:28Z"}, "message": "Remove eval_always for HIR queries.\n\nThey depend on `hir_crate` and `index_hir`.", "tree": {"sha": "91c2bc33fe38a1be9b100479bd062753093aafad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91c2bc33fe38a1be9b100479bd062753093aafad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "html_url": "https://github.com/rust-lang/rust/commit/54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54c3299b3aed464b5c658c2dbfc1a270fb4c051f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0157cc977fd71297ce73e2f249321f5ba2555d42", "url": "https://api.github.com/repos/rust-lang/rust/commits/0157cc977fd71297ce73e2f249321f5ba2555d42", "html_url": "https://github.com/rust-lang/rust/commit/0157cc977fd71297ce73e2f249321f5ba2555d42"}], "stats": {"total": 12, "additions": 1, "deletions": 11}, "files": [{"sha": "ded724c9badf77f4bd959938346c2f1c30c1375c", "filename": "compiler/rustc_middle/src/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54c3299b3aed464b5c658c2dbfc1a270fb4c051f/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c3299b3aed464b5c658c2dbfc1a270fb4c051f/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmod.rs?ref=54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "patch": "@@ -163,7 +163,7 @@ pub fn provide(providers: &mut Providers) {\n         let index = tcx.index_hir(());\n         index.parenting.get(&id).copied().unwrap_or(CRATE_HIR_ID)\n     };\n-    providers.hir_attrs = |tcx, id| AttributeMap { map: &tcx.untracked_crate.attrs, prefix: id };\n+    providers.hir_attrs = |tcx, id| AttributeMap { map: &tcx.hir_crate(()).attrs, prefix: id };\n     providers.source_span = |tcx, def_id| tcx.resolutions(()).definitions.def_span(def_id);\n     providers.def_span = |tcx, def_id| tcx.hir().span_if_local(def_id).unwrap_or(DUMMY_SP);\n     providers.fn_arg_names = |tcx, id| {"}, {"sha": "7e9391b98f7ed2a350744bb054a1f9a1b0766763", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/54c3299b3aed464b5c658c2dbfc1a270fb4c051f/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54c3299b3aed464b5c658c2dbfc1a270fb4c051f/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=54c3299b3aed464b5c658c2dbfc1a270fb4c051f", "patch": "@@ -62,7 +62,6 @@ rustc_queries! {\n     /// This can be conveniently accessed by methods on `tcx.hir()`.\n     /// Avoid calling this query directly.\n     query hir_owner(key: LocalDefId) -> Option<crate::hir::Owner<'tcx>> {\n-        eval_always\n         desc { |tcx| \"HIR owner of `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n \n@@ -71,7 +70,6 @@ rustc_queries! {\n     /// This can be conveniently accessed by methods on `tcx.hir()`.\n     /// Avoid calling this query directly.\n     query hir_owner_parent(key: LocalDefId) -> hir::HirId {\n-        eval_always\n         desc { |tcx| \"HIR parent of `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n \n@@ -80,7 +78,6 @@ rustc_queries! {\n     /// This can be conveniently accessed by methods on `tcx.hir()`.\n     /// Avoid calling this query directly.\n     query hir_owner_nodes(key: LocalDefId) -> Option<&'tcx crate::hir::OwnerNodes<'tcx>> {\n-        eval_always\n         desc { |tcx| \"HIR owner items in `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n \n@@ -89,7 +86,6 @@ rustc_queries! {\n     /// This can be conveniently accessed by methods on `tcx.hir()`.\n     /// Avoid calling this query directly.\n     query hir_attrs(key: LocalDefId) -> rustc_middle::hir::AttributeMap<'tcx> {\n-        eval_always\n         desc { |tcx| \"HIR owner attributes in `{}`\", tcx.def_path_str(key.to_def_id()) }\n     }\n \n@@ -933,12 +929,6 @@ rustc_queries! {\n \n     query def_span(def_id: DefId) -> Span {\n         desc { |tcx| \"looking up span for `{}`\", tcx.def_path_str(def_id) }\n-        // FIXME(mw): DefSpans are not really inputs since they are derived from\n-        // HIR. But at the moment HIR hashing still contains some hacks that allow\n-        // to make type debuginfo to be source location independent. Declaring\n-        // DefSpan an input makes sure that changes to these are always detected\n-        // regardless of HIR hashing.\n-        eval_always\n     }\n \n     query def_ident_span(def_id: DefId) -> Option<Span> {"}]}