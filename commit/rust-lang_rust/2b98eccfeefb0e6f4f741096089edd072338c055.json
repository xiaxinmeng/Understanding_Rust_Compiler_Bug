{"sha": "2b98eccfeefb0e6f4f741096089edd072338c055", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiOThlY2NmZWVmYjBlNmY0Zjc0MTA5NjA4OWVkZDA3MjMzOGMwNTU=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-09-17T17:17:40Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-09-17T17:18:11Z"}, "message": "Add a type_is_tup_like predicate that takes a block ctxt, and make some fns pure", "tree": {"sha": "250bb66ea99ef81dd4f2319ab7edfc4f7e2e72ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/250bb66ea99ef81dd4f2319ab7edfc4f7e2e72ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b98eccfeefb0e6f4f741096089edd072338c055", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b98eccfeefb0e6f4f741096089edd072338c055", "html_url": "https://github.com/rust-lang/rust/commit/2b98eccfeefb0e6f4f741096089edd072338c055", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b98eccfeefb0e6f4f741096089edd072338c055/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8613f28a1673d5d2ef972a9d839d0cdd75ce00f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8613f28a1673d5d2ef972a9d839d0cdd75ce00f3", "html_url": "https://github.com/rust-lang/rust/commit/8613f28a1673d5d2ef972a9d839d0cdd75ce00f3"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "633dcf2704e10049aded2a5ea9f0e7af0e1ce181", "filename": "src/comp/middle/trans_common.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/2b98eccfeefb0e6f4f741096089edd072338c055/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b98eccfeefb0e6f4f741096089edd072338c055/src%2Fcomp%2Fmiddle%2Ftrans_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_common.rs?ref=2b98eccfeefb0e6f4f741096089edd072338c055", "patch": "@@ -449,14 +449,14 @@ fn find_scope_cx(cx: @block_ctxt) -> @block_ctxt {\n // Accessors\n // TODO: When we have overloading, simplify these names!\n \n-fn bcx_tcx(bcx: @block_ctxt) -> ty::ctxt { ret bcx.fcx.lcx.ccx.tcx; }\n-fn bcx_ccx(bcx: @block_ctxt) -> @crate_ctxt { ret bcx.fcx.lcx.ccx; }\n-fn bcx_lcx(bcx: @block_ctxt) -> @local_ctxt { ret bcx.fcx.lcx; }\n-fn bcx_fcx(bcx: @block_ctxt) -> @fn_ctxt { ret bcx.fcx; }\n-fn fcx_ccx(fcx: @fn_ctxt) -> @crate_ctxt { ret fcx.lcx.ccx; }\n-fn fcx_tcx(fcx: @fn_ctxt) -> ty::ctxt { ret fcx.lcx.ccx.tcx; }\n-fn lcx_ccx(lcx: @local_ctxt) -> @crate_ctxt { ret lcx.ccx; }\n-fn ccx_tcx(ccx: @crate_ctxt) -> ty::ctxt { ret ccx.tcx; }\n+pure fn bcx_tcx(bcx: @block_ctxt) -> ty::ctxt { bcx.fcx.lcx.ccx.tcx }\n+pure fn bcx_ccx(bcx: @block_ctxt) -> @crate_ctxt { bcx.fcx.lcx.ccx }\n+pure fn bcx_lcx(bcx: @block_ctxt) -> @local_ctxt { bcx.fcx.lcx }\n+pure fn bcx_fcx(bcx: @block_ctxt) -> @fn_ctxt { bcx.fcx }\n+pure fn fcx_ccx(fcx: @fn_ctxt) -> @crate_ctxt { fcx.lcx.ccx }\n+pure fn fcx_tcx(fcx: @fn_ctxt) -> ty::ctxt { fcx.lcx.ccx.tcx }\n+pure fn lcx_ccx(lcx: @local_ctxt) -> @crate_ctxt { lcx.ccx }\n+pure fn ccx_tcx(ccx: @crate_ctxt) -> ty::ctxt { ccx.tcx }\n \n // LLVM type constructors.\n fn T_void() -> TypeRef {\n@@ -861,6 +861,11 @@ pure fn returns_non_ty_var(cx: @crate_ctxt, t: ty::t) -> bool {\n     non_ty_var(cx, ty::ty_fn_ret(cx.tcx, t))\n }\n \n+pure fn type_is_tup_like(cx: @block_ctxt, t: ty::t) -> bool {\n+    let tcx = bcx_tcx(cx);\n+    ty::type_is_tup_like(tcx, t)\n+}\n+\n //\n // Local Variables:\n // mode: rust"}, {"sha": "d0c8dca039c9acaca33902191798667aa3eaf7a0", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b98eccfeefb0e6f4f741096089edd072338c055/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b98eccfeefb0e6f4f741096089edd072338c055/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=2b98eccfeefb0e6f4f741096089edd072338c055", "patch": "@@ -832,13 +832,11 @@ fn sequence_element_type(cx: ctxt, ty: t) -> t {\n     }\n }\n \n-fn type_is_tup_like(cx: ctxt, ty: t) -> bool {\n-    alt struct(cx, ty) {\n-      ty_box(_) { ret true; }\n-      ty_rec(_) { ret true; }\n-      ty_tup(_) { ret true; }\n-      ty_tag(_, _) { ret true; }\n-      _ { ret false; }\n+pure fn type_is_tup_like(cx: ctxt, ty: t) -> bool {\n+    let sty = unchecked { struct(cx, ty) };\n+    alt sty {\n+      ty_box(_) | ty_rec(_) | ty_tup(_) | ty_tag(_,_) { true }\n+      _ { false }\n     }\n }\n "}]}