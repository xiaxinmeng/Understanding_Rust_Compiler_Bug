{"sha": "d5c031640f3835ae96f6dcf52a6845cddbc80eac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YzAzMTY0MGYzODM1YWU5NmY2ZGNmNTJhNjg0NWNkZGJjODBlYWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-23T03:20:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-23T03:20:26Z"}, "message": "use PrimVal::to_bool rather than bytes_to_bool", "tree": {"sha": "2956560f0a9178ee1564a5bbd5bd101ee1396609", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2956560f0a9178ee1564a5bbd5bd101ee1396609"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5c031640f3835ae96f6dcf52a6845cddbc80eac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5c031640f3835ae96f6dcf52a6845cddbc80eac", "html_url": "https://github.com/rust-lang/rust/commit/d5c031640f3835ae96f6dcf52a6845cddbc80eac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5c031640f3835ae96f6dcf52a6845cddbc80eac/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12935b6514c5e09fe67083da3e50dba18b2ae43d", "url": "https://api.github.com/repos/rust-lang/rust/commits/12935b6514c5e09fe67083da3e50dba18b2ae43d", "html_url": "https://github.com/rust-lang/rust/commit/12935b6514c5e09fe67083da3e50dba18b2ae43d"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "ed69c8043939b0a728a31a0ce93e0a91c477e5e2", "filename": "src/operator.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5c031640f3835ae96f6dcf52a6845cddbc80eac/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5c031640f3835ae96f6dcf52a6845cddbc80eac/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=d5c031640f3835ae96f6dcf52a6845cddbc80eac", "patch": "@@ -13,7 +13,6 @@ use value::{\n     bytes_to_f64,\n     f32_to_bytes,\n     f64_to_bytes,\n-    bytes_to_bool,\n };\n \n impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n@@ -334,7 +333,7 @@ pub fn unary_op<'tcx>(\n     let bytes = val.to_bytes()?;\n \n     let result_bytes = match (un_op, val_kind) {\n-        (Not, Bool) => !bytes_to_bool(bytes) as u128,\n+        (Not, Bool) => !val.to_bool()? as u128,\n \n         (Not, U8)  => !(bytes as u8) as u128,\n         (Not, U16) => !(bytes as u16) as u128,"}, {"sha": "9f7d3eafe1fb7133325be5dff96f6f7044dfcd9b", "filename": "src/value.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d5c031640f3835ae96f6dcf52a6845cddbc80eac/src%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5c031640f3835ae96f6dcf52a6845cddbc80eac/src%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue.rs?ref=d5c031640f3835ae96f6dcf52a6845cddbc80eac", "patch": "@@ -23,12 +23,6 @@ pub(super) fn f64_to_bytes(f: f64) -> u128 {\n     unsafe { transmute::<f64, u64>(f) as u128 }\n }\n \n-pub(super) fn bytes_to_bool(n: u128) -> bool {\n-    // FIXME(solson): Can we reach here due to user error?\n-    assert!(n == 0 || n == 1, \"bytes interpreted as bool were {}\", n);\n-    n & 1 == 1\n-}\n-\n /// A `Value` represents a single self-contained Rust value.\n ///\n /// A `Value` can either refer to a block of memory inside an allocation (`ByRef`) or to a primitve"}]}