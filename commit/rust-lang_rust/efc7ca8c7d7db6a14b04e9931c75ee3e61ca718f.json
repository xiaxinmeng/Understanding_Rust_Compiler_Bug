{"sha": "efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f", "node_id": "C_kwDOAAsO6NoAKGVmYzdjYThjN2Q3ZGI2YTE0YjA0ZTk5MzFjNzVlZTNlNjFjYTcxOGY", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-23T13:31:46Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:25Z"}, "message": "Use ParamEnv consistently", "tree": {"sha": "12fdd4bf8dbf50434a673ef5d0b60b0da451906d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fdd4bf8dbf50434a673ef5d0b60b0da451906d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f", "html_url": "https://github.com/rust-lang/rust/commit/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de69d088a46e8f9a70e2ac4b3477211fbaa01580", "url": "https://api.github.com/repos/rust-lang/rust/commits/de69d088a46e8f9a70e2ac4b3477211fbaa01580", "html_url": "https://github.com/rust-lang/rust/commit/de69d088a46e8f9a70e2ac4b3477211fbaa01580"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "aae7fefd1121c4afb3883e7d269292ed44d2efe1", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=efc7ca8c7d7db6a14b04e9931c75ee3e61ca718f", "patch": "@@ -217,11 +217,12 @@ impl<'tcx> std::fmt::Debug for ScalarTy<'tcx> {\n \n impl<'tcx> ConstAnalysis<'tcx> {\n     pub fn new(tcx: TyCtxt<'tcx>, body: &Body<'tcx>, map: Map) -> Self {\n+        let param_env = tcx.param_env(body.source.def_id());\n         Self {\n             map,\n             tcx,\n-            ecx: InterpCx::new(tcx, DUMMY_SP, ty::ParamEnv::empty(), DummyMachine),\n-            param_env: tcx.param_env(body.source.def_id()),\n+            ecx: InterpCx::new(tcx, DUMMY_SP, param_env, DummyMachine),\n+            param_env: param_env,\n         }\n     }\n \n@@ -260,13 +261,11 @@ impl<'tcx> ConstAnalysis<'tcx> {\n         };\n         match value {\n             FlatSet::Top => FlatSet::Top,\n-            FlatSet::Elem(ScalarTy(scalar, ty)) => {\n-                let layout = self\n-                    .tcx\n-                    .layout_of(ty::ParamEnv::empty().and(ty))\n-                    .expect(\"this should not happen\"); // FIXME\n-                FlatSet::Elem(ImmTy::from_scalar(scalar, layout))\n-            }\n+            FlatSet::Elem(ScalarTy(scalar, ty)) => self\n+                .tcx\n+                .layout_of(self.param_env.and(ty))\n+                .map(|layout| FlatSet::Elem(ImmTy::from_scalar(scalar, layout)))\n+                .unwrap_or(FlatSet::Top),\n             FlatSet::Bottom => FlatSet::Bottom,\n         }\n     }"}]}