{"sha": "6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZWFlYTllOTUwNWNmYTA3YzBhNzZiNTkwYjYyZmE5NjE1MDYxY2Q=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-07T17:54:57Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-07T17:54:57Z"}, "message": "Merge #1255\n\n1255: switch to once_cell from lazy_static r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d7dee875aad8182a83195dba6d767d26dcff53d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7dee875aad8182a83195dba6d767d26dcff53d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "html_url": "https://github.com/rust-lang/rust/commit/6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "70cd5ffbf5f2283fc4986c581d225987620b5335", "url": "https://api.github.com/repos/rust-lang/rust/commits/70cd5ffbf5f2283fc4986c581d225987620b5335", "html_url": "https://github.com/rust-lang/rust/commit/70cd5ffbf5f2283fc4986c581d225987620b5335"}, {"sha": "1667b5cf52a8f2854c7299242820c951eab50f7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1667b5cf52a8f2854c7299242820c951eab50f7a", "html_url": "https://github.com/rust-lang/rust/commit/1667b5cf52a8f2854c7299242820c951eab50f7a"}], "stats": {"total": 50, "additions": 28, "deletions": 22}, "files": [{"sha": "92a37749776f5872dbcc11567e08270a2191e150", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "patch": "@@ -873,6 +873,14 @@ name = \"numtoa\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"once_cell\"\n+version = \"0.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"parking_lot 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"opaque-debug\"\n version = \"0.2.2\"\n@@ -1039,7 +1047,7 @@ dependencies = [\n  \"arrayvec 0.4.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"join_to_string 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"once_cell 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_db 0.1.0\",\n  \"ra_fmt 0.1.0\",\n  \"ra_hir 0.1.0\",\n@@ -1209,7 +1217,7 @@ dependencies = [\n name = \"ra_prof\"\n version = \"0.1.0\"\n dependencies = [\n- \"lazy_static 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"once_cell 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -2121,6 +2129,7 @@ dependencies = [\n \"checksum num_cpus 1.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"1a23f0ed30a54abaa0c7e83b1d2d87ada7c3c23078d1d87815af3e3b6385fbba\"\n \"checksum number_prefix 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"dbf9993e59c894e3c08aa1c2712914e9e6bf1fcbfc6bef283e2183df345a4fee\"\n \"checksum numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8f8bdf33df195859076e54ab11ee78a1b208382d3a26ec40d142ffc1ecc49ef\"\n+\"checksum once_cell 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e7a15c6c8c034b56d2f01b23b98cdbbb622f8de99efad0d93d8ea0e608b36a7e\"\n \"checksum opaque-debug 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"93f5bb2e8e8dec81642920ccff6b61f1eb94fa3020c5a325c9851ff604152409\"\n \"checksum ordermap 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a86ed3f5f244b372d6b1a00b72ef7f8876d0bc6a78a4c9985c53614041512063\"\n \"checksum owning_ref 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"49a4b8ea2179e6a2e27411d3bca09ca6dd630821cf6894c6c7c8467a8ee7ef13\""}, {"sha": "5ddac1e48326648c9e4aef3267d349cc076cd094", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "patch": "@@ -5,7 +5,7 @@ version = \"0.1.0\"\n authors = [\"rust-analyzer developers\"]\n \n [dependencies]\n-lazy_static = \"1.3.0\"\n+once_cell = \"0.2.0\"\n join_to_string = \"0.1.3\"\n itertools = \"0.8.0\"\n arrayvec = \"0.4.10\""}, {"sha": "aa7aeaabbaab0fe61ae29adf6ffe6bc29bc3dacf", "filename": "crates/ra_assists/src/ast_editor.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_assists%2Fsrc%2Fast_editor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_editor.rs?ref=6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "patch": "@@ -289,12 +289,10 @@ fn ast_node_from_file_text<N: AstNode>(text: &str) -> TreeArc<N> {\n }\n \n mod tokens {\n-    use lazy_static::lazy_static;\n+    use once_cell::sync::Lazy;\n     use ra_syntax::{AstNode, SourceFile, TreeArc, SyntaxToken, SyntaxKind::*};\n \n-    lazy_static! {\n-        static ref SOURCE_FILE: TreeArc<SourceFile> = SourceFile::parse(\",\\n; ;\");\n-    }\n+    static SOURCE_FILE: Lazy<TreeArc<SourceFile>> = Lazy::new(|| SourceFile::parse(\",\\n; ;\"));\n \n     pub(crate) fn comma() -> SyntaxToken<'static> {\n         SOURCE_FILE"}, {"sha": "5f23e865c3da1c589e5772af5e6317f33c9b2de0", "filename": "crates/ra_prof/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_prof%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_prof%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2FCargo.toml?ref=6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "patch": "@@ -6,4 +6,4 @@ authors = [\"rust-analyzer developers\"]\n publish = false\n \n [dependencies]\n-lazy_static = \"1.3.0\"\n\\ No newline at end of file\n+once_cell = \"0.2.0\""}, {"sha": "e56446c9fa448836040864dbde6b40a1ae73b69b", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ceaea9e9505cfa07c0a76b590b62fa9615061cd/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=6ceaea9e9505cfa07c0a76b590b62fa9615061cd", "patch": "@@ -1,13 +1,14 @@\n-use std::cell::RefCell;\n-use std::time::{Duration, Instant};\n-use std::mem;\n-use std::io::{stderr, Write};\n-use std::iter::repeat;\n-use std::collections::{HashSet};\n-use std::default::Default;\n-use std::iter::FromIterator;\n-use std::sync::{RwLock, atomic::{AtomicBool, Ordering}};\n-use lazy_static::lazy_static;\n+use std::{\n+    cell::RefCell,\n+    time::{Duration, Instant},\n+    mem,\n+    io::{stderr, Write},\n+    iter::repeat,\n+    collections::HashSet,\n+    sync::{RwLock, atomic::{AtomicBool, Ordering}},\n+};\n+\n+use once_cell::sync::Lazy;\n \n /// Set profiling filter. It specifies descriptions allowed to profile.\n /// This is helpful when call stack has too many nested profiling scopes.\n@@ -21,7 +22,7 @@ use lazy_static::lazy_static;\n /// ```\n pub fn set_filter(f: Filter) {\n     PROFILING_ENABLED.store(f.depth > 0, Ordering::SeqCst);\n-    let set = HashSet::from_iter(f.allowed.iter().cloned());\n+    let set: HashSet<_> = f.allowed.iter().cloned().collect();\n     let mut old = FILTER.write().unwrap();\n     let filter_data = FilterData {\n         depth: f.depth,\n@@ -161,9 +162,7 @@ struct FilterData {\n \n static PROFILING_ENABLED: AtomicBool = AtomicBool::new(false);\n \n-lazy_static! {\n-    static ref FILTER: RwLock<FilterData> = RwLock::new(Default::default());\n-}\n+static FILTER: Lazy<RwLock<FilterData>> = Lazy::new(Default::default);\n \n thread_local!(static PROFILE_STACK: RefCell<ProfileStack> = RefCell::new(ProfileStack::new()));\n "}]}