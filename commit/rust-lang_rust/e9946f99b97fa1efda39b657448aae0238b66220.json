{"sha": "e9946f99b97fa1efda39b657448aae0238b66220", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTQ2Zjk5Yjk3ZmExZWZkYTM5YjY1NzQ0OGFhZTAyMzhiNjYyMjA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-09-23T12:49:50Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2015-09-23T14:32:58Z"}, "message": "Override `clone_from` for `{BinaryHeap, String}`\n\nCC #28481", "tree": {"sha": "1f4b6ae9fba7fd14976bf2de9b9234c647e71434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f4b6ae9fba7fd14976bf2de9b9234c647e71434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9946f99b97fa1efda39b657448aae0238b66220", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9946f99b97fa1efda39b657448aae0238b66220", "html_url": "https://github.com/rust-lang/rust/commit/e9946f99b97fa1efda39b657448aae0238b66220", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9946f99b97fa1efda39b657448aae0238b66220/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a6f6f26f4d4a1e22ea5e2b4498d3245d80e8aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a6f6f26f4d4a1e22ea5e2b4498d3245d80e8aff", "html_url": "https://github.com/rust-lang/rust/commit/2a6f6f26f4d4a1e22ea5e2b4498d3245d80e8aff"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "b7afe9685778e0d0ac168731b6a0b394284d5061", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9946f99b97fa1efda39b657448aae0238b66220/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9946f99b97fa1efda39b657448aae0238b66220/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=e9946f99b97fa1efda39b657448aae0238b66220", "patch": "@@ -167,12 +167,22 @@ use vec::{self, Vec};\n /// item's ordering relative to any other item, as determined by the `Ord`\n /// trait, changes while it is in the heap. This is normally only possible\n /// through `Cell`, `RefCell`, global state, I/O, or unsafe code.\n-#[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct BinaryHeap<T> {\n     data: Vec<T>,\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T: Clone> Clone for BinaryHeap<T> {\n+    fn clone(&self) -> Self {\n+        BinaryHeap { data: self.data.clone() }\n+    }\n+\n+    fn clone_from(&mut self, source: &Self) {\n+        self.data.clone_from(&source.data);\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: Ord> Default for BinaryHeap<T> {\n     #[inline]"}, {"sha": "ba921fed68b1dc4e922c3cc7aa64f5153302c482", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e9946f99b97fa1efda39b657448aae0238b66220/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9946f99b97fa1efda39b657448aae0238b66220/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=e9946f99b97fa1efda39b657448aae0238b66220", "patch": "@@ -30,7 +30,7 @@ use vec::Vec;\n use boxed::Box;\n \n /// A growable string stored as a UTF-8 encoded buffer.\n-#[derive(Clone, PartialOrd, Eq, Ord)]\n+#[derive(PartialOrd, Eq, Ord)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct String {\n     vec: Vec<u8>,\n@@ -765,6 +765,17 @@ impl fmt::Display for FromUtf16Error {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl Clone for String {\n+    fn clone(&self) -> Self {\n+        String { vec: self.vec.clone() }\n+    }\n+\n+    fn clone_from(&mut self, source: &Self) {\n+        self.vec.clone_from(&source.vec);\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl FromIterator<char> for String {\n     fn from_iter<I: IntoIterator<Item=char>>(iterable: I) -> String {"}]}