{"sha": "8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "node_id": "C_kwDOAAsO6NoAKDg3MDljMzk1YTYwY2JhYzQ5YTlkZmJmNmMyYzE1ZTJkNjQ1NGMyODY", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-01-23T10:30:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-23T10:30:00Z"}, "message": "Rollup merge of #107109 - est31:thin_box_link, r=Mark-Simulacrum\n\nThinBox: Add intra-doc-links for Metadata", "tree": {"sha": "8fe565a06f8217dc373d37583ad0ecef1f30de19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fe565a06f8217dc373d37583ad0ecef1f30de19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjzmGoCRBK7hj4Ov3rIwAAvgoIAE45nqRwpd9npIhf61BpLuz6\nd7IBo24L7f25IEuJk4ptuh3KQqEDEn5k7apFgO6JV9ZsZAy7R7Zzi47nz8AfSJMc\nCUeBTorNAceNOzyYd8Qj2MIp4r8rTHD41biSH3Bwv6Qz5f26EoXNxU1XDcl4adU2\nRI1NhfYz4R+2Z3Lmnu1/YckolYSYlrvjCWGCqRzYSBlPd7LmX88Ko/DLVM5RO/HL\ncT8vdvqQt3N8/SuuvtnMxTpXaizWuS76LV9ptvxUxVPAXyrLwiPAE7qgBv+mH9Qk\nsI1ZyezX6LH0RJte+xuG0CMgxJBVibhOG20dU6XYZFkss7Vd4h1hJiI5Vt8pC7w=\n=3gQG\n-----END PGP SIGNATURE-----\n", "payload": "tree 8fe565a06f8217dc373d37583ad0ecef1f30de19\nparent 17023496a227967cb407ad2e911014744af262e2\nparent 412798831792b4a67bea30bf53edd8a01f0c6bbe\nauthor Yuki Okushi <jtitor@2k36.org> 1674469800 +0900\ncommitter GitHub <noreply@github.com> 1674469800 +0900\n\nRollup merge of #107109 - est31:thin_box_link, r=Mark-Simulacrum\n\nThinBox: Add intra-doc-links for Metadata\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "html_url": "https://github.com/rust-lang/rust/commit/8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8709c395a60cbac49a9dfbf6c2c15e2d6454c286/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17023496a227967cb407ad2e911014744af262e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/17023496a227967cb407ad2e911014744af262e2", "html_url": "https://github.com/rust-lang/rust/commit/17023496a227967cb407ad2e911014744af262e2"}, {"sha": "412798831792b4a67bea30bf53edd8a01f0c6bbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/412798831792b4a67bea30bf53edd8a01f0c6bbe", "html_url": "https://github.com/rust-lang/rust/commit/412798831792b4a67bea30bf53edd8a01f0c6bbe"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ad48315fd70cc070bb116f9f964d4b0b55ad212a", "filename": "library/alloc/src/boxed/thin.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8709c395a60cbac49a9dfbf6c2c15e2d6454c286/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8709c395a60cbac49a9dfbf6c2c15e2d6454c286/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fboxed%2Fthin.rs?ref=8709c395a60cbac49a9dfbf6c2c15e2d6454c286", "patch": "@@ -48,7 +48,7 @@ unsafe impl<T: ?Sized + Sync> Sync for ThinBox<T> {}\n \n #[unstable(feature = \"thin_box\", issue = \"92791\")]\n impl<T> ThinBox<T> {\n-    /// Moves a type to the heap with its `Metadata` stored in the heap allocation instead of on\n+    /// Moves a type to the heap with its [`Metadata`] stored in the heap allocation instead of on\n     /// the stack.\n     ///\n     /// # Examples\n@@ -59,6 +59,8 @@ impl<T> ThinBox<T> {\n     ///\n     /// let five = ThinBox::new(5);\n     /// ```\n+    ///\n+    /// [`Metadata`]: core::ptr::Pointee::Metadata\n     #[cfg(not(no_global_oom_handling))]\n     pub fn new(value: T) -> Self {\n         let meta = ptr::metadata(&value);\n@@ -69,7 +71,7 @@ impl<T> ThinBox<T> {\n \n #[unstable(feature = \"thin_box\", issue = \"92791\")]\n impl<Dyn: ?Sized> ThinBox<Dyn> {\n-    /// Moves a type to the heap with its `Metadata` stored in the heap allocation instead of on\n+    /// Moves a type to the heap with its [`Metadata`] stored in the heap allocation instead of on\n     /// the stack.\n     ///\n     /// # Examples\n@@ -80,6 +82,8 @@ impl<Dyn: ?Sized> ThinBox<Dyn> {\n     ///\n     /// let thin_slice = ThinBox::<[i32]>::new_unsize([1, 2, 3, 4]);\n     /// ```\n+    ///\n+    /// [`Metadata`]: core::ptr::Pointee::Metadata\n     #[cfg(not(no_global_oom_handling))]\n     pub fn new_unsize<T>(value: T) -> Self\n     where"}]}