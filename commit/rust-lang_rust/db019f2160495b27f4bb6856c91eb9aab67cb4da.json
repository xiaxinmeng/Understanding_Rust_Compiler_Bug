{"sha": "db019f2160495b27f4bb6856c91eb9aab67cb4da", "node_id": "C_kwDOAAsO6NoAKGRiMDE5ZjIxNjA0OTViMjdmNGJiNjg1NmM5MWViOWFhYjY3Y2I0ZGE", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-02-14T15:48:05Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-02-15T21:24:53Z"}, "message": "try to bless 32bit mir tests manually", "tree": {"sha": "de97e32ddfa1e8d73c9aa42992c077b0e7ef4f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de97e32ddfa1e8d73c9aa42992c077b0e7ef4f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db019f2160495b27f4bb6856c91eb9aab67cb4da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db019f2160495b27f4bb6856c91eb9aab67cb4da", "html_url": "https://github.com/rust-lang/rust/commit/db019f2160495b27f4bb6856c91eb9aab67cb4da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db019f2160495b27f4bb6856c91eb9aab67cb4da/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fff06e5edcb3c296164149b358566e63ed90b9d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/fff06e5edcb3c296164149b358566e63ed90b9d4", "html_url": "https://github.com/rust-lang/rust/commit/fff06e5edcb3c296164149b358566e63ed90b9d4"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "b330155d1448316bac65ed51643760676aa34a52", "filename": "Cargo.lock", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -369,7 +369,7 @@ dependencies = [\n  \"tar\",\n  \"tempfile\",\n  \"termcolor\",\n- \"toml\",\n+ \"toml_edit\",\n  \"unicode-width\",\n  \"unicode-xid\",\n  \"url 2.2.2\",\n@@ -455,7 +455,7 @@ dependencies = [\n  \"serde_json\",\n  \"tar\",\n  \"termcolor\",\n- \"toml\",\n+ \"toml_edit\",\n  \"url 2.2.2\",\n ]\n \n@@ -710,6 +710,16 @@ dependencies = [\n  \"winapi\",\n ]\n \n+[[package]]\n+name = \"combine\"\n+version = \"4.6.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"50b727aacc797f9fc28e355d21f34709ac4fc9adecfe470ad07b8f4464f53062\"\n+dependencies = [\n+ \"bytes\",\n+ \"memchr\",\n+]\n+\n [[package]]\n name = \"commoncrypto\"\n version = \"0.2.0\"\n@@ -1939,6 +1949,15 @@ dependencies = [\n  \"unicase\",\n ]\n \n+[[package]]\n+name = \"kstring\"\n+version = \"1.0.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"8b310ccceade8121d7d77fee406160e457c2f4e7c7982d589da3499bc7ea4526\"\n+dependencies = [\n+ \"serde\",\n+]\n+\n [[package]]\n name = \"lazy_static\"\n version = \"1.4.0\"\n@@ -3146,13 +3165,14 @@ dependencies = [\n  \"tokio-stream\",\n  \"tokio-util\",\n  \"toml\",\n+ \"toml_edit\",\n  \"url 2.2.2\",\n  \"walkdir\",\n ]\n \n [[package]]\n name = \"rls-analysis\"\n-version = \"0.18.2\"\n+version = \"0.18.3\"\n dependencies = [\n  \"derive-new\",\n  \"env_logger 0.9.0\",\n@@ -5151,6 +5171,19 @@ dependencies = [\n  \"serde\",\n ]\n \n+[[package]]\n+name = \"toml_edit\"\n+version = \"0.13.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"744e9ed5b352340aa47ce033716991b5589e23781acb97cad37d4ea70560f55b\"\n+dependencies = [\n+ \"combine\",\n+ \"indexmap\",\n+ \"itertools 0.10.1\",\n+ \"kstring\",\n+ \"serde\",\n+]\n+\n [[package]]\n name = \"topological-sort\"\n version = \"0.1.0\""}, {"sha": "784babffeff42e0bb598c84bc90acb97ef1cd285", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -686,15 +686,15 @@ pub fn write_allocations<'tcx>(\n     struct CollectAllocIds(BTreeSet<AllocId>);\n \n     impl<'tcx> Visitor<'tcx> for CollectAllocIds {\n-        fn visit_const(&mut self, c: &&'tcx ty::Const<'tcx>, _loc: Location) {\n-            if let ty::ConstKind::Value(val) = c.val {\n+        fn visit_const(&mut self, c: ty::Const<'tcx>, _loc: Location) {\n+            if let ty::ConstKind::Value(val) = c.val() {\n                 self.0.extend(alloc_ids_from_const(val));\n             }\n         }\n \n         fn visit_constant(&mut self, c: &Constant<'tcx>, loc: Location) {\n             match c.literal {\n-                ConstantKind::Ty(c) => self.visit_const(&c, loc),\n+                ConstantKind::Ty(c) => self.visit_const(c, loc),\n                 ConstantKind::Val(val, _) => {\n                     self.0.extend(alloc_ids_from_const(val));\n                 }"}, {"sha": "04bc0c8b52114dccded115a8b98fa0c9a1ac94f1", "filename": "compiler/rustc_middle/src/thir.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fthir.rs?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -717,11 +717,7 @@ impl<'tcx> fmt::Display for Pat<'tcx> {\n                         Some(&adt_def.variants[variant_index])\n                     }\n                     _ => self.ty.ty_adt_def().and_then(|adt| {\n-                        if !adt.is_enum() {\n-                            Some(adt.non_enum_variant())\n-                        } else {\n-                            None\n-                        }\n+                        if !adt.is_enum() { Some(adt.non_enum_variant()) } else { None }\n                     }),\n                 };\n "}, {"sha": "f8a8afa92e0e65f3a3e33b2f02e408d5a2a163d6", "filename": "src/test/mir-opt/const_allocation.main.ConstProp.after.32bit.mir", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation.main.ConstProp.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation.main.ConstProp.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation.main.ConstProp.after.32bit.mir?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -9,12 +9,9 @@ fn main() -> () {\n         StorageLive(_1);                 // scope 0 at $DIR/const_allocation.rs:8:5: 8:8\n         StorageLive(_2);                 // scope 0 at $DIR/const_allocation.rs:8:5: 8:8\n         _2 = const {alloc1: &&[(Option<i32>, &[&str])]}; // scope 0 at $DIR/const_allocation.rs:8:5: 8:8\n-                                         // ty::Const\n-                                         // + ty: &&[(std::option::Option<i32>, &[&str])]\n-                                         // + val: Value(Scalar(alloc1))\n                                          // mir::Constant\n                                          // + span: $DIR/const_allocation.rs:8:5: 8:8\n-                                         // + literal: Const { ty: &&[(std::option::Option<i32>, &[&str])], val: Value(Scalar(alloc1)) }\n+                                         // + literal: Const { ty: &&[(Option<i32>, &[&str])], val: Value(Scalar(alloc1)) }\n         _1 = (*_2);                      // scope 0 at $DIR/const_allocation.rs:8:5: 8:8\n         StorageDead(_2);                 // scope 0 at $DIR/const_allocation.rs:8:8: 8:9\n         StorageDead(_1);                 // scope 0 at $DIR/const_allocation.rs:8:8: 8:9"}, {"sha": "8b5ad40c9f92c9c475a201c57d873b526af96574", "filename": "src/test/mir-opt/const_allocation2.main.ConstProp.after.32bit.mir", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation2.main.ConstProp.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation2.main.ConstProp.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation2.main.ConstProp.after.32bit.mir?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -9,12 +9,9 @@ fn main() -> () {\n         StorageLive(_1);                 // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8\n         StorageLive(_2);                 // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8\n         _2 = const {alloc1: &&[(Option<i32>, &[&u8])]}; // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8\n-                                         // ty::Const\n-                                         // + ty: &&[(std::option::Option<i32>, &[&u8])]\n-                                         // + val: Value(Scalar(alloc1))\n                                          // mir::Constant\n                                          // + span: $DIR/const_allocation2.rs:5:5: 5:8\n-                                         // + literal: Const { ty: &&[(std::option::Option<i32>, &[&u8])], val: Value(Scalar(alloc1)) }\n+                                         // + literal: Const { ty: &&[(Option<i32>, &[&u8])], val: Value(Scalar(alloc1)) }\n         _1 = (*_2);                      // scope 0 at $DIR/const_allocation2.rs:5:5: 5:8\n         StorageDead(_2);                 // scope 0 at $DIR/const_allocation2.rs:5:8: 5:9\n         StorageDead(_1);                 // scope 0 at $DIR/const_allocation2.rs:5:8: 5:9"}, {"sha": "991cf40d1b7ce6884a02dce09cb8ca16c7640a6c", "filename": "src/test/mir-opt/const_allocation3.main.ConstProp.after.32bit.mir", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation3.main.ConstProp.after.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/db019f2160495b27f4bb6856c91eb9aab67cb4da/src%2Ftest%2Fmir-opt%2Fconst_allocation3.main.ConstProp.after.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_allocation3.main.ConstProp.after.32bit.mir?ref=db019f2160495b27f4bb6856c91eb9aab67cb4da", "patch": "@@ -9,9 +9,6 @@ fn main() -> () {\n         StorageLive(_1);                 // scope 0 at $DIR/const_allocation3.rs:5:5: 5:8\n         StorageLive(_2);                 // scope 0 at $DIR/const_allocation3.rs:5:5: 5:8\n         _2 = const {alloc1: &&Packed};   // scope 0 at $DIR/const_allocation3.rs:5:5: 5:8\n-                                         // ty::Const\n-                                         // + ty: &&Packed\n-                                         // + val: Value(Scalar(alloc1))\n                                          // mir::Constant\n                                          // + span: $DIR/const_allocation3.rs:5:5: 5:8\n                                          // + literal: Const { ty: &&Packed, val: Value(Scalar(alloc1)) }"}]}