{"sha": "a5d931050e69df1bc07117a2891154a71a06a73e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZDkzMTA1MGU2OWRmMWJjMDcxMTdhMjg5MTE1NGE3MWEwNmE3M2U=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-09-24T09:49:25Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-02T01:06:37Z"}, "message": "remove 'as_str' when it's already a str type.\n\nfix #62642", "tree": {"sha": "f54341723d19f59abaeef2346958b7022e4985a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f54341723d19f59abaeef2346958b7022e4985a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5d931050e69df1bc07117a2891154a71a06a73e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d931050e69df1bc07117a2891154a71a06a73e", "html_url": "https://github.com/rust-lang/rust/commit/a5d931050e69df1bc07117a2891154a71a06a73e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5d931050e69df1bc07117a2891154a71a06a73e/comments", "author": null, "committer": null, "parents": [{"sha": "42ec6831b019114a4b6f6b58bfb5bc2927d70388", "url": "https://api.github.com/repos/rust-lang/rust/commits/42ec6831b019114a4b6f6b58bfb5bc2927d70388", "html_url": "https://github.com/rust-lang/rust/commit/42ec6831b019114a4b6f6b58bfb5bc2927d70388"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "e68e3211cade1021c07f350fddbed485d173772d", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a5d931050e69df1bc07117a2891154a71a06a73e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5d931050e69df1bc07117a2891154a71a06a73e/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=a5d931050e69df1bc07117a2891154a71a06a73e", "patch": "@@ -518,7 +518,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n \n-                if let Some(lev_candidate) = lev_candidate {\n+                fn is_str_ref<'tcx>(ty: Ty<'tcx>) -> bool {\n+                    match ty.sty {\n+                        ty::Str => true,\n+                        ty::Ref(_, ty, _) => is_str_ref(&ty),\n+                        _ => false,\n+                    }\n+                }\n+                if item_name.as_str() == \"as_str\" && is_str_ref(&actual) {\n+                    err.span_suggestion(\n+                        span,\n+                        \"try to remove `as_str`\",\n+                        String::new(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                } else if let Some(lev_candidate) = lev_candidate {\n                     let def_kind = lev_candidate.def_kind();\n                     err.span_suggestion(\n                         span,"}]}