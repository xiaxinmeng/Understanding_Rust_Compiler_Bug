{"sha": "27918f32ad82b4feb72b33e47a7b9207a9d7a49b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTE4ZjMyYWQ4MmI0ZmViNzJiMzNlNDdhN2I5MjA3YTlkN2E0OWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-04T12:33:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-04T12:33:35Z"}, "message": "Auto merge of #40245 - cuviper:maybe-not-pie, r=alexcrichton\n\nLet `-Crelocation-model` better control `-pie` linking\n\nPrior to this, if relocation model in the target options was \"pic\", as\nmost targets have it, then the user's `-Crelocation-model` had no effect\non whether `-pie` would be used.  Only `-Clink-arg=-static` would have a\nfurther override here.\n\nNow we use `context::get_reloc_model`, which gives precedence to the\nuser's option, and if it's `RelocMode::PIC` we enable `-pie`.  This is\nthe same test as `context::is_pie_binary`, except that folds across all\n`sess.crate_types`, not just the current one.\n\nFixes #35061.", "tree": {"sha": "fe1de9f17039c21cea2a9364a4d13d7344c3b5be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe1de9f17039c21cea2a9364a4d13d7344c3b5be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27918f32ad82b4feb72b33e47a7b9207a9d7a49b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27918f32ad82b4feb72b33e47a7b9207a9d7a49b", "html_url": "https://github.com/rust-lang/rust/commit/27918f32ad82b4feb72b33e47a7b9207a9d7a49b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27918f32ad82b4feb72b33e47a7b9207a9d7a49b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d31e3f7ba50d04d42ec78f2cc8641b3a50321e", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d31e3f7ba50d04d42ec78f2cc8641b3a50321e", "html_url": "https://github.com/rust-lang/rust/commit/73d31e3f7ba50d04d42ec78f2cc8641b3a50321e"}, {"sha": "111fbe7921a7de649a9b76b3f247fc8762217819", "url": "https://api.github.com/repos/rust-lang/rust/commits/111fbe7921a7de649a9b76b3f247fc8762217819", "html_url": "https://github.com/rust-lang/rust/commit/111fbe7921a7de649a9b76b3f247fc8762217819"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b58f96033bf5b5dc2404c31657ac89dda25ea00e", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/27918f32ad82b4feb72b33e47a7b9207a9d7a49b/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27918f32ad82b4feb72b33e47a7b9207a9d7a49b/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=27918f32ad82b4feb72b33e47a7b9207a9d7a49b", "patch": "@@ -31,6 +31,8 @@ use rustc::hir::svh::Svh;\n use rustc_back::tempdir::TempDir;\n use rustc_back::PanicStrategy;\n use rustc_incremental::IncrementalHashesMap;\n+use context::get_reloc_model;\n+use llvm;\n \n use std::ascii;\n use std::char;\n@@ -859,13 +861,11 @@ fn link_args(cmd: &mut Linker,\n     if crate_type == config::CrateTypeExecutable &&\n        t.options.position_independent_executables {\n         let empty_vec = Vec::new();\n-        let empty_str = String::new();\n         let args = sess.opts.cg.link_args.as_ref().unwrap_or(&empty_vec);\n         let more_args = &sess.opts.cg.link_arg;\n         let mut args = args.iter().chain(more_args.iter()).chain(used_link_args.iter());\n-        let relocation_model = sess.opts.cg.relocation_model.as_ref()\n-                                   .unwrap_or(&empty_str);\n-        if (t.options.relocation_model == \"pic\" || *relocation_model == \"pic\")\n+\n+        if get_reloc_model(sess) == llvm::RelocMode::PIC\n             && !args.any(|x| *x == \"-static\") {\n             cmd.position_independent_executable();\n         }"}]}