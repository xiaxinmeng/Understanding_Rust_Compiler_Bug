{"sha": "2a430a8947ceebd6a181084969f169490db05dd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhNDMwYTg5NDdjZWViZDZhMTgxMDg0OTY5ZjE2OTQ5MGRiMDVkZDE=", "commit": {"author": {"name": "Bryce Van Dyk", "email": "bryce@vandyk.net.nz", "date": "2015-11-30T08:51:20Z"}, "committer": {"name": "Bryce Van Dyk", "email": "bryce@vandyk.net.nz", "date": "2015-11-30T08:51:20Z"}, "message": "Trailing commas for match block arms\n\nAttempt to implement an option for trailing commas for block based match arms (issue\n173). Put in place test files to verify this behaviour.", "tree": {"sha": "8f320d312ca209591208ec0d49695a7cac70fdbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f320d312ca209591208ec0d49695a7cac70fdbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a430a8947ceebd6a181084969f169490db05dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a430a8947ceebd6a181084969f169490db05dd1", "html_url": "https://github.com/rust-lang/rust/commit/2a430a8947ceebd6a181084969f169490db05dd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a430a8947ceebd6a181084969f169490db05dd1/comments", "author": {"login": "SingingTree", "id": 3637370, "node_id": "MDQ6VXNlcjM2MzczNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3637370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SingingTree", "html_url": "https://github.com/SingingTree", "followers_url": "https://api.github.com/users/SingingTree/followers", "following_url": "https://api.github.com/users/SingingTree/following{/other_user}", "gists_url": "https://api.github.com/users/SingingTree/gists{/gist_id}", "starred_url": "https://api.github.com/users/SingingTree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SingingTree/subscriptions", "organizations_url": "https://api.github.com/users/SingingTree/orgs", "repos_url": "https://api.github.com/users/SingingTree/repos", "events_url": "https://api.github.com/users/SingingTree/events{/privacy}", "received_events_url": "https://api.github.com/users/SingingTree/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SingingTree", "id": 3637370, "node_id": "MDQ6VXNlcjM2MzczNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/3637370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SingingTree", "html_url": "https://github.com/SingingTree", "followers_url": "https://api.github.com/users/SingingTree/followers", "following_url": "https://api.github.com/users/SingingTree/following{/other_user}", "gists_url": "https://api.github.com/users/SingingTree/gists{/gist_id}", "starred_url": "https://api.github.com/users/SingingTree/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SingingTree/subscriptions", "organizations_url": "https://api.github.com/users/SingingTree/orgs", "repos_url": "https://api.github.com/users/SingingTree/repos", "events_url": "https://api.github.com/users/SingingTree/events{/privacy}", "received_events_url": "https://api.github.com/users/SingingTree/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36d65e45380372f77c89fdca1f87daac902e04c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/36d65e45380372f77c89fdca1f87daac902e04c9", "html_url": "https://github.com/rust-lang/rust/commit/36d65e45380372f77c89fdca1f87daac902e04c9"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "2ea175c385f308fd6bbc6487492285a30af20f32", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a430a8947ceebd6a181084969f169490db05dd1/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a430a8947ceebd6a181084969f169490db05dd1/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=2a430a8947ceebd6a181084969f169490db05dd1", "patch": "@@ -308,4 +308,6 @@ create_config! {\n     hard_tabs: bool, false, \"Use tab characters for indentation, spaces for alignment\";\n     wrap_comments: bool, false, \"Break comments to fit on the line\";\n     wrap_match_arms: bool, true, \"Wrap multiline match arms in blocks\";\n+    match_block_trailing_comma: bool, false,\n+        \"Put a trailing comma after a block based match arm (non-block arms are not affected)\";\n }"}, {"sha": "9338160d98fdc3f283bf81dec9fd9722de7d4e9a", "filename": "src/expr.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2a430a8947ceebd6a181084969f169490db05dd1/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a430a8947ceebd6a181084969f169490db05dd1/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=2a430a8947ceebd6a181084969f169490db05dd1", "patch": "@@ -823,7 +823,7 @@ fn rewrite_match(context: &RewriteContext,\n             // We couldn't format the arm, just reproduce the source.\n             let snippet = context.snippet(mk_sp(arm_start_pos(arm), arm_end_pos(arm)));\n             result.push_str(&snippet);\n-            result.push_str(arm_comma(&arm.body));\n+            result.push_str(arm_comma(context, &arm.body));\n         }\n     }\n     // BytePos(1) = closing match brace.\n@@ -854,8 +854,10 @@ fn arm_end_pos(arm: &ast::Arm) -> BytePos {\n     arm.body.span.hi\n }\n \n-fn arm_comma(body: &ast::Expr) -> &'static str {\n-    if let ast::ExprBlock(ref block) = body.node {\n+fn arm_comma(context: &RewriteContext, body: &ast::Expr) -> &'static str {\n+    if context.config.match_block_trailing_comma {\n+        \",\"\n+    } else if let ast::ExprBlock(ref block) = body.node {\n         if let ast::DefaultBlock = block.rules {\n             \"\"\n         } else {\n@@ -950,7 +952,7 @@ impl Rewrite for ast::Arm {\n             ref x => x,\n         };\n \n-        let comma = arm_comma(body);\n+        let comma = arm_comma(context, body);\n \n         // Let's try and get the arm body on the same line as the condition.\n         // 4 = ` => `.len()\n@@ -961,7 +963,8 @@ impl Rewrite for ast::Arm {\n \n             match rewrite {\n                 Some(ref body_str) if !body_str.contains('\\n') || !context.config.wrap_match_arms ||\n-                                      comma.is_empty() => {\n+                                      comma.is_empty() ||\n+                                      context.config.match_block_trailing_comma => {\n                     return Some(format!(\"{}{} => {}{}\",\n                                         attr_str.trim_left(),\n                                         pats_str,"}, {"sha": "7f7ddd0a6b4f157d5cb8aaf61a53771690a6cda3", "filename": "tests/source/match-block-trailing-comma.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2a430a8947ceebd6a181084969f169490db05dd1/tests%2Fsource%2Fmatch-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a430a8947ceebd6a181084969f169490db05dd1/tests%2Fsource%2Fmatch-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch-block-trailing-comma.rs?ref=2a430a8947ceebd6a181084969f169490db05dd1", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-match_block_trailing_comma: true\n+// Match expressions, no unwrapping of block arms or wrapping of multiline\n+// expressions.\n+\n+fn foo() {\n+    match x {\n+        a => {\n+            \"line1\";\n+            \"line2\"\n+        }\n+        b => \"bar\",\n+    }\n+}"}, {"sha": "c845baed376c7a33cef7f174e5aa04bce9e602eb", "filename": "tests/target/match-block-trailing-comma.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2a430a8947ceebd6a181084969f169490db05dd1/tests%2Ftarget%2Fmatch-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a430a8947ceebd6a181084969f169490db05dd1/tests%2Ftarget%2Fmatch-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch-block-trailing-comma.rs?ref=2a430a8947ceebd6a181084969f169490db05dd1", "patch": "@@ -0,0 +1,13 @@\n+// rustfmt-match_block_trailing_comma: true\n+// Match expressions, no unwrapping of block arms or wrapping of multiline\n+// expressions.\n+\n+fn foo() {\n+    match x {\n+        a => {\n+            \"line1\";\n+            \"line2\"\n+        },\n+        b => \"bar\",\n+    }\n+}"}]}