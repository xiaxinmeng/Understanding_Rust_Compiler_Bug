{"sha": "4550ea79f004215af1490e2c269a16d46b890b9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NTBlYTc5ZjAwNDIxNWFmMTQ5MGUyYzI2OWExNmQ0NmI4OTBiOWY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-13T19:11:48Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-12-13T19:11:48Z"}, "message": "Remove the unused ascii_only field in CharEqSearcher", "tree": {"sha": "2e5a39a14d9b083f23f82b782e22cbc27995ad2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e5a39a14d9b083f23f82b782e22cbc27995ad2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4550ea79f004215af1490e2c269a16d46b890b9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4550ea79f004215af1490e2c269a16d46b890b9f", "html_url": "https://github.com/rust-lang/rust/commit/4550ea79f004215af1490e2c269a16d46b890b9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4550ea79f004215af1490e2c269a16d46b890b9f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d818a4d8c3fa5b15ad2e2ab30531316565d556c", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d818a4d8c3fa5b15ad2e2ab30531316565d556c", "html_url": "https://github.com/rust-lang/rust/commit/1d818a4d8c3fa5b15ad2e2ab30531316565d556c"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "3200cfc498236e120a1ff1d206ead816e78040fc", "filename": "src/libcore/str/pattern.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4550ea79f004215af1490e2c269a16d46b890b9f/src%2Flibcore%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4550ea79f004215af1490e2c269a16d46b890b9f/src%2Flibcore%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fpattern.rs?ref=4550ea79f004215af1490e2c269a16d46b890b9f", "patch": "@@ -241,35 +241,23 @@ pub trait DoubleEndedSearcher<'a>: ReverseSearcher<'a> {}\n #[doc(hidden)]\n trait CharEq {\n     fn matches(&mut self, c: char) -> bool;\n-    fn only_ascii(&self) -> bool;\n }\n \n impl CharEq for char {\n     #[inline]\n     fn matches(&mut self, c: char) -> bool { *self == c }\n-\n-    #[inline]\n-    fn only_ascii(&self) -> bool { (*self as u32) < 128 }\n }\n \n impl<F> CharEq for F where F: FnMut(char) -> bool {\n     #[inline]\n     fn matches(&mut self, c: char) -> bool { (*self)(c) }\n-\n-    #[inline]\n-    fn only_ascii(&self) -> bool { false }\n }\n \n impl<'a> CharEq for &'a [char] {\n     #[inline]\n     fn matches(&mut self, c: char) -> bool {\n         self.iter().any(|&m| { let mut m = m; m.matches(c) })\n     }\n-\n-    #[inline]\n-    fn only_ascii(&self) -> bool {\n-        self.iter().all(|m| m.only_ascii())\n-    }\n }\n \n struct CharEqPattern<C: CharEq>(C);\n@@ -279,8 +267,6 @@ struct CharEqSearcher<'a, C: CharEq> {\n     char_eq: C,\n     haystack: &'a str,\n     char_indices: super::CharIndices<'a>,\n-    #[allow(dead_code)]\n-    ascii_only: bool,\n }\n \n impl<'a, C: CharEq> Pattern<'a> for CharEqPattern<C> {\n@@ -289,7 +275,6 @@ impl<'a, C: CharEq> Pattern<'a> for CharEqPattern<C> {\n     #[inline]\n     fn into_searcher(self, haystack: &'a str) -> CharEqSearcher<'a, C> {\n         CharEqSearcher {\n-            ascii_only: self.0.only_ascii(),\n             haystack,\n             char_eq: self.0,\n             char_indices: haystack.char_indices(),\n@@ -499,7 +484,6 @@ impl<'a, F> fmt::Debug for CharPredicateSearcher<'a, F>\n         f.debug_struct(\"CharPredicateSearcher\")\n             .field(\"haystack\", &self.0.haystack)\n             .field(\"char_indices\", &self.0.char_indices)\n-            .field(\"ascii_only\", &self.0.ascii_only)\n             .finish()\n     }\n }"}]}