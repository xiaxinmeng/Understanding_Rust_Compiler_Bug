{"sha": "86309ed3ea896473641c9cdeadf16b02931b8ac8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MzA5ZWQzZWE4OTY0NzM2NDFjOWNkZWFkZjE2YjAyOTMxYjhhYzg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-01T00:08:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-01T00:09:22Z"}, "message": "rustc: Write tag variant discriminants into the crate as integer constants", "tree": {"sha": "4f2d84f294692ff1c3bf9207fc01d2b4082ed91e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f2d84f294692ff1c3bf9207fc01d2b4082ed91e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86309ed3ea896473641c9cdeadf16b02931b8ac8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86309ed3ea896473641c9cdeadf16b02931b8ac8", "html_url": "https://github.com/rust-lang/rust/commit/86309ed3ea896473641c9cdeadf16b02931b8ac8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86309ed3ea896473641c9cdeadf16b02931b8ac8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a172f5aef5f7d26fba9dbf94a1ade60d6d62ba74", "url": "https://api.github.com/repos/rust-lang/rust/commits/a172f5aef5f7d26fba9dbf94a1ade60d6d62ba74", "html_url": "https://github.com/rust-lang/rust/commit/a172f5aef5f7d26fba9dbf94a1ade60d6d62ba74"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "b2ef0f165b09a1a7b0cd7da628619fd3f6f522fa", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/86309ed3ea896473641c9cdeadf16b02931b8ac8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86309ed3ea896473641c9cdeadf16b02931b8ac8/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=86309ed3ea896473641c9cdeadf16b02931b8ac8", "patch": "@@ -4609,12 +4609,26 @@ fn trans_constant(&@crate_ctxt cx, @ast.item it) -> @crate_ctxt {\n             auto n_variants = _vec.len[ast.variant](variants);\n             while (i < n_variants) {\n                 auto variant = variants.(i);\n+\n+                auto discrim_val = C_int(i as int);\n+\n+                // FIXME: better name.\n+                auto discrim_gvar = llvm.LLVMAddGlobal(cx.llmod, T_int(),\n+                    _str.buf(\"tag_discrim\"));\n+\n+                // FIXME: Eventually we do want to export these, but we need\n+                // to figure out what name they get first!\n+                llvm.LLVMSetInitializer(discrim_gvar, discrim_val);\n+                llvm.LLVMSetGlobalConstant(discrim_gvar, True);\n+                llvm.LLVMSetLinkage(discrim_gvar, lib.llvm.LLVMPrivateLinkage\n+                                    as llvm.Linkage);\n+\n                 if (_vec.len[ast.variant_arg](variant.args) == 0u) {\n                     // Nullary tags become constants. (N-ary tags are treated\n                     // as functions and generated later.)\n \n                     auto union_val = C_zero_byte_arr(info.size as uint);\n-                    auto val = C_struct(vec(C_int(i as int), union_val));\n+                    auto val = C_struct(vec(discrim_val, union_val));\n \n                     // FIXME: better name\n                     auto gvar = llvm.LLVMAddGlobal(cx.llmod, val_ty(val),"}]}