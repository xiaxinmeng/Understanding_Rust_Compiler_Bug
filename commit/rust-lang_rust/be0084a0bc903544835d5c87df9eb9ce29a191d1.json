{"sha": "be0084a0bc903544835d5c87df9eb9ce29a191d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMDA4NGEwYmM5MDM1NDQ4MzVkNWM4N2RmOWViOWNlMjlhMTkxZDE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:48:58Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-07T18:48:58Z"}, "message": "InEnvironment::new takes a reference", "tree": {"sha": "104415f4dba0bbb2f47c566e53a218848451184c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/104415f4dba0bbb2f47c566e53a218848451184c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be0084a0bc903544835d5c87df9eb9ce29a191d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be0084a0bc903544835d5c87df9eb9ce29a191d1", "html_url": "https://github.com/rust-lang/rust/commit/be0084a0bc903544835d5c87df9eb9ce29a191d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be0084a0bc903544835d5c87df9eb9ce29a191d1/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1b645d2360fb6e74aaa774ff713af02f685a110", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b645d2360fb6e74aaa774ff713af02f685a110", "html_url": "https://github.com/rust-lang/rust/commit/d1b645d2360fb6e74aaa774ff713af02f685a110"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "0afc069061b3e4422698818fb35e3407ecd83ed4", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=be0084a0bc903544835d5c87df9eb9ce29a191d1", "patch": "@@ -1791,7 +1791,7 @@ impl Type {\n             .build();\n \n         let goal = Canonical {\n-            value: hir_ty::InEnvironment::new(self.env.env.clone(), trait_ref.cast(&Interner)),\n+            value: hir_ty::InEnvironment::new(&self.env.env, trait_ref.cast(&Interner)),\n             binders: CanonicalVarKinds::empty(&Interner),\n         };\n \n@@ -1810,7 +1810,7 @@ impl Type {\n             .build();\n         let goal = hir_ty::make_canonical(\n             InEnvironment::new(\n-                self.env.env.clone(),\n+                &self.env.env,\n                 AliasEq {\n                     alias: AliasTy::Projection(projection),\n                     ty: TyKind::BoundVar(BoundVar::new(DebruijnIndex::INNERMOST, 0))"}, {"sha": "531159e54273948b5513e4dbe22311ddff3f35a4", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=be0084a0bc903544835d5c87df9eb9ce29a191d1", "patch": "@@ -336,7 +336,7 @@ impl<'a> InferenceContext<'a> {\n         self.last_obligations_check = Some(self.table.revision);\n         let obligations = mem::replace(&mut self.obligations, Vec::new());\n         for obligation in obligations {\n-            let in_env = InEnvironment::new(self.trait_env.env.clone(), obligation.clone());\n+            let in_env = InEnvironment::new(&self.trait_env.env, obligation.clone());\n             let canonicalized = self.canonicalizer().canonicalize_obligation(in_env);\n             let solution =\n                 self.db.trait_solve(self.resolver.krate().unwrap(), canonicalized.value.clone());"}, {"sha": "fd679f444642af04be7b9de3e7efa3b27c0eaabe", "filename": "crates/hir_ty/src/infer/coerce.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fcoerce.rs?ref=be0084a0bc903544835d5c87df9eb9ce29a191d1", "patch": "@@ -139,7 +139,7 @@ impl<'a> InferenceContext<'a> {\n             b.push(from_ty.clone()).push(to_ty.clone()).build()\n         };\n \n-        let goal = InEnvironment::new(self.trait_env.env.clone(), trait_ref.cast(&Interner));\n+        let goal = InEnvironment::new(&self.trait_env.env, trait_ref.cast(&Interner));\n \n         let canonicalizer = self.canonicalizer();\n         let canonicalized = canonicalizer.canonicalize_obligation(goal);"}, {"sha": "7e09a1539d41f2b81d9d0a1d47d0e07f5eeafb9e", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=be0084a0bc903544835d5c87df9eb9ce29a191d1", "patch": "@@ -845,7 +845,7 @@ fn generic_implements_goal(\n     let obligation = trait_ref.cast(&Interner);\n     Canonical {\n         binders: CanonicalVarKinds::from_iter(&Interner, kinds),\n-        value: InEnvironment::new(env.env.clone(), obligation),\n+        value: InEnvironment::new(&env.env, obligation),\n     }\n }\n "}, {"sha": "e1a28f5f7e0a34bad75f3f820cd1a5399de417b3", "filename": "crates/hir_ty/src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be0084a0bc903544835d5c87df9eb9ce29a191d1/crates%2Fhir_ty%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftypes.rs?ref=be0084a0bc903544835d5c87df9eb9ce29a191d1", "patch": "@@ -470,8 +470,8 @@ pub struct InEnvironment<T> {\n }\n \n impl<T> InEnvironment<T> {\n-    pub fn new(environment: chalk_ir::Environment<Interner>, value: T) -> InEnvironment<T> {\n-        InEnvironment { environment, goal: value }\n+    pub fn new(environment: &chalk_ir::Environment<Interner>, value: T) -> InEnvironment<T> {\n+        InEnvironment { environment: environment.clone(), goal: value }\n     }\n }\n "}]}