{"sha": "32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64", "node_id": "C_kwDOAAsO6NoAKDMyYjZhYzViNDRlNGYwZmZhNWU1NmI5YzgxNDA3NjMzZGM0ZWRiNjQ", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-09-30T16:57:34Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-09-30T16:57:34Z"}, "message": "Check `allow_unstable` before checking environment variables", "tree": {"sha": "a7b5bf44a889f5ad4ca3c395d6d15118de7a8e2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7b5bf44a889f5ad4ca3c395d6d15118de7a8e2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64", "html_url": "https://github.com/rust-lang/rust/commit/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6738c7231dadb0a84d338ae6f41cc34651518eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6738c7231dadb0a84d338ae6f41cc34651518eb", "html_url": "https://github.com/rust-lang/rust/commit/a6738c7231dadb0a84d338ae6f41cc34651518eb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cb40b4e965b2a56d81184ec3d65d7c14b859208b", "filename": "library/test/src/cli.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64/library%2Ftest%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64/library%2Ftest%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Ftest%2Fsrc%2Fcli.rs?ref=32b6ac5b44e4f0ffa5e56b9c81407633dc4edb64", "patch": "@@ -339,7 +339,7 @@ fn get_time_options(\n \n fn get_shuffle(matches: &getopts::Matches, allow_unstable: bool) -> OptPartRes<bool> {\n     let mut shuffle = unstable_optflag!(matches, allow_unstable, \"shuffle\");\n-    if !shuffle {\n+    if !shuffle && allow_unstable {\n         shuffle = match env::var(\"RUST_TEST_SHUFFLE\") {\n             Ok(val) => &val != \"0\",\n             Err(_) => false,\n@@ -364,7 +364,7 @@ fn get_shuffle_seed(matches: &getopts::Matches, allow_unstable: bool) -> OptPart\n         None => None,\n     };\n \n-    if shuffle_seed.is_none() {\n+    if shuffle_seed.is_none() && allow_unstable {\n         shuffle_seed = match env::var(\"RUST_TEST_SHUFFLE_SEED\") {\n             Ok(val) => match val.parse::<u64>() {\n                 Ok(n) => Some(n),"}]}