{"sha": "1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "node_id": "C_kwDOAAsO6NoAKDEwODBmNmM3MGMxMzJlZjIwYmYwMzEwYzE4NDVjOTJmNTVhM2Q1YjU", "commit": {"author": {"name": "1nF0rmed", "email": "prkinformed@gmail.com", "date": "2021-10-10T09:16:28Z"}, "committer": {"name": "1nF0rmed", "email": "prkinformed@gmail.com", "date": "2021-10-10T09:16:28Z"}, "message": "Adds additional tests for lint", "tree": {"sha": "58a271247f2f3fba5388222efc4eb14746f765b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a271247f2f3fba5388222efc4eb14746f765b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "html_url": "https://github.com/rust-lang/rust/commit/1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1080f6c70c132ef20bf0310c1845c92f55a3d5b5/comments", "author": {"login": "1nF0rmed", "id": 21278205, "node_id": "MDQ6VXNlcjIxMjc4MjA1", "avatar_url": "https://avatars.githubusercontent.com/u/21278205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1nF0rmed", "html_url": "https://github.com/1nF0rmed", "followers_url": "https://api.github.com/users/1nF0rmed/followers", "following_url": "https://api.github.com/users/1nF0rmed/following{/other_user}", "gists_url": "https://api.github.com/users/1nF0rmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/1nF0rmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1nF0rmed/subscriptions", "organizations_url": "https://api.github.com/users/1nF0rmed/orgs", "repos_url": "https://api.github.com/users/1nF0rmed/repos", "events_url": "https://api.github.com/users/1nF0rmed/events{/privacy}", "received_events_url": "https://api.github.com/users/1nF0rmed/received_events", "type": "User", "site_admin": false}, "committer": {"login": "1nF0rmed", "id": 21278205, "node_id": "MDQ6VXNlcjIxMjc4MjA1", "avatar_url": "https://avatars.githubusercontent.com/u/21278205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/1nF0rmed", "html_url": "https://github.com/1nF0rmed", "followers_url": "https://api.github.com/users/1nF0rmed/followers", "following_url": "https://api.github.com/users/1nF0rmed/following{/other_user}", "gists_url": "https://api.github.com/users/1nF0rmed/gists{/gist_id}", "starred_url": "https://api.github.com/users/1nF0rmed/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/1nF0rmed/subscriptions", "organizations_url": "https://api.github.com/users/1nF0rmed/orgs", "repos_url": "https://api.github.com/users/1nF0rmed/repos", "events_url": "https://api.github.com/users/1nF0rmed/events{/privacy}", "received_events_url": "https://api.github.com/users/1nF0rmed/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc324255215066afd4f4dfff6f39e76e2c80fc4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc324255215066afd4f4dfff6f39e76e2c80fc4b", "html_url": "https://github.com/rust-lang/rust/commit/fc324255215066afd4f4dfff6f39e76e2c80fc4b"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "50246486bb6fc9371206f17adfe284b5e722a566", "filename": "tests/ui/match_ref_pats.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1080f6c70c132ef20bf0310c1845c92f55a3d5b5/tests%2Fui%2Fmatch_ref_pats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1080f6c70c132ef20bf0310c1845c92f55a3d5b5/tests%2Fui%2Fmatch_ref_pats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.rs?ref=1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "patch": "@@ -72,4 +72,46 @@ mod ice_3719 {\n     }\n }\n \n+mod issue_7740 {\n+    macro_rules! foobar_variant(\n+        ($idx:expr) => (FooBar::get($idx).unwrap())\n+    );\n+\n+    enum FooBar {\n+        Foo,\n+        Bar,\n+        FooBar,\n+        BarFoo,\n+    }\n+\n+    impl FooBar {\n+        fn get(idx: u8) -> Option<&'static Self> {\n+            match idx {\n+                0 => Some(&FooBar::Foo),\n+                1 => Some(&FooBar::Bar),\n+                2 => Some(&FooBar::FooBar),\n+                3 => Some(&FooBar::BarFoo),\n+                _ => None,\n+            }\n+        }\n+    }\n+\n+    fn issue_7740() {\n+        // Issue #7740\n+        match foobar_variant!(0) {\n+            &FooBar::Foo => println!(\"Foo\"),\n+            &FooBar::Bar => println!(\"Bar\"),\n+            &FooBar::FooBar => println!(\"FooBar\"),\n+            _ => println!(\"Wild\"),\n+        }\n+\n+        // This shouldn't trigger\n+        if let &FooBar::BarFoo = foobar_variant!(3) {\n+            println!(\"BarFoo\");\n+        } else {\n+            println!(\"Wild\");\n+        }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "901820077e20e974b651c9a68ef26df9b364cf59", "filename": "tests/ui/match_ref_pats.stderr", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1080f6c70c132ef20bf0310c1845c92f55a3d5b5/tests%2Fui%2Fmatch_ref_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1080f6c70c132ef20bf0310c1845c92f55a3d5b5/tests%2Fui%2Fmatch_ref_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.stderr?ref=1080f6c70c132ef20bf0310c1845c92f55a3d5b5", "patch": "@@ -45,5 +45,24 @@ error: redundant pattern matching, consider using `is_none()`\n LL |     if let &None = &b {\n    |     -------^^^^^----- help: try this: `if b.is_none()`\n \n-error: aborting due to 4 previous errors\n+error: you don't need to add `&` to all patterns\n+  --> $DIR/match_ref_pats.rs:101:9\n+   |\n+LL | /         match foobar_variant!(0) {\n+LL | |             &FooBar::Foo => println!(\"Foo\"),\n+LL | |             &FooBar::Bar => println!(\"Bar\"),\n+LL | |             &FooBar::FooBar => println!(\"FooBar\"),\n+LL | |             _ => println!(\"Wild\"),\n+LL | |         }\n+   | |_________^\n+   |\n+help: instead of prefixing all patterns with `&`, you can dereference the expression\n+   |\n+LL ~         match *foobar_variant!(0) {\n+LL ~             FooBar::Foo => println!(\"Foo\"),\n+LL ~             FooBar::Bar => println!(\"Bar\"),\n+LL ~             FooBar::FooBar => println!(\"FooBar\"),\n+   |\n+\n+error: aborting due to 5 previous errors\n "}]}