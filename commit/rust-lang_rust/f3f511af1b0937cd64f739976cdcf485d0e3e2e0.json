{"sha": "f3f511af1b0937cd64f739976cdcf485d0e3e2e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZjUxMWFmMWIwOTM3Y2Q2NGY3Mzk5NzZjZGNmNDg1ZDBlM2UyZTA=", "commit": {"author": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-23T21:12:28Z"}, "committer": {"name": "Shohei Wada", "email": "pc@wada314.jp", "date": "2018-12-23T21:12:28Z"}, "message": "Fix #2973 in Windows CRLF env.", "tree": {"sha": "9c75355067d7ac3d6f42a3488d6fdc94417d4801", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c75355067d7ac3d6f42a3488d6fdc94417d4801"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3f511af1b0937cd64f739976cdcf485d0e3e2e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3f511af1b0937cd64f739976cdcf485d0e3e2e0", "html_url": "https://github.com/rust-lang/rust/commit/f3f511af1b0937cd64f739976cdcf485d0e3e2e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3f511af1b0937cd64f739976cdcf485d0e3e2e0/comments", "author": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wada314", "id": 1488411, "node_id": "MDQ6VXNlcjE0ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1488411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wada314", "html_url": "https://github.com/wada314", "followers_url": "https://api.github.com/users/wada314/followers", "following_url": "https://api.github.com/users/wada314/following{/other_user}", "gists_url": "https://api.github.com/users/wada314/gists{/gist_id}", "starred_url": "https://api.github.com/users/wada314/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wada314/subscriptions", "organizations_url": "https://api.github.com/users/wada314/orgs", "repos_url": "https://api.github.com/users/wada314/repos", "events_url": "https://api.github.com/users/wada314/events{/privacy}", "received_events_url": "https://api.github.com/users/wada314/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1ee7e956565c05b48586bf3379cdb0b2767c3c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ee7e956565c05b48586bf3379cdb0b2767c3c0", "html_url": "https://github.com/rust-lang/rust/commit/a1ee7e956565c05b48586bf3379cdb0b2767c3c0"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "89f9258fd7a81ab031c02e27e0338db94bfda154", "filename": "src/comment.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f3f511af1b0937cd64f739976cdcf485d0e3e2e0/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3f511af1b0937cd64f739976cdcf485d0e3e2e0/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=f3f511af1b0937cd64f739976cdcf485d0e3e2e0", "patch": "@@ -1304,7 +1304,13 @@ impl<'a> Iterator for LineClasses<'a> {\n             None => FullCodeCharKind::Normal,\n         };\n \n-        while let Some((kind, c)) = self.base.next() {\n+        while let Some((kind, mut c)) = self.base.next() {\n+            // If \\r\\n newline appears, consume one more character.\n+            // Then do the same process with the single \\n case.\n+            if c == '\\r' && self.base.peek().map_or(false, |(_, c2)| *c2 == '\\n') {\n+                self.base.next();\n+                c = '\\n';\n+            }\n             if c == '\\n' {\n                 self.kind = match (start_class, kind) {\n                     (FullCodeCharKind::Normal, FullCodeCharKind::InString) => {"}]}