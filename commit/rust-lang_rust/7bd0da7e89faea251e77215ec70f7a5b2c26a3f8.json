{"sha": "7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZDBkYTdlODlmYWVhMjUxZTc3MjE1ZWM3MGY3YTViMmMyNmEzZjg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-02-09T17:14:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-02-09T17:14:22Z"}, "message": "Rollup merge of #39678 - vadimcn:top-level-expn, r=michaelwoerister\n\nExclude top-level macro expansions from source location override.\n\nIt occurred to me that a simple heuristic can address the issue #36382: any macros that expand into items (including `include!()`) don't need to be stepped over because there's not code to step through above a function scope level.\n\nr? @michaelwoerister", "tree": {"sha": "146b55f34ea8d1aaf56f662ddd4c4c98d3e2f999", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/146b55f34ea8d1aaf56f662ddd4c4c98d3e2f999"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "html_url": "https://github.com/rust-lang/rust/commit/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "711b95f6b129e13dbbc6a8f9dbf649275bcad25e", "url": "https://api.github.com/repos/rust-lang/rust/commits/711b95f6b129e13dbbc6a8f9dbf649275bcad25e", "html_url": "https://github.com/rust-lang/rust/commit/711b95f6b129e13dbbc6a8f9dbf649275bcad25e"}, {"sha": "d113b39fbf089621c3985af9d50a888cd02dd432", "url": "https://api.github.com/repos/rust-lang/rust/commits/d113b39fbf089621c3985af9d50a888cd02dd432", "html_url": "https://github.com/rust-lang/rust/commit/d113b39fbf089621c3985af9d50a888cd02dd432"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "0cfc2c8d16352b16b48f31228778c4604165eb05", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "patch": "@@ -138,13 +138,20 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n             while span.expn_id != NO_EXPANSION && span.expn_id != COMMAND_LINE_EXPN {\n                 if let Some(callsite_span) = cm.with_expn_info(span.expn_id,\n                                                     |ei| ei.map(|ei| ei.call_site.clone())) {\n+                    // When the current function itself is a result of macro expansion,\n+                    // we stop at the function body level because no line stepping can occurr\n+                    // at the level above that.\n+                    if self.mir.span.expn_id != NO_EXPANSION &&\n+                       span.expn_id == self.mir.span.expn_id {\n+                        break;\n+                    }\n                     span = callsite_span;\n                 } else {\n                     break;\n                 }\n             }\n             let scope = self.scope_metadata_for_loc(source_info.scope, span.lo);\n-            // Use span of the outermost call site, while keeping the original lexical scope\n+            // Use span of the outermost expansion site, while keeping the original lexical scope.\n             (scope, span)\n         }\n     }"}, {"sha": "6aaf7ed421e7f0f55400f0f1486c81833322be7d", "filename": "src/test/debuginfo/macro-stepping.inc", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.inc", "raw_url": "https://github.com/rust-lang/rust/raw/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.inc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.inc?ref=7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013-2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn included() {\n+    foo!(); // #inc-loc1\n+\n+    foo2!(); // #inc-loc2\n+\n+    zzz(); // #inc-loc3\n+}"}, {"sha": "ca2c1e0c8f0298982c42397e077254d3988c9b0b", "filename": "src/test/debuginfo/macro-stepping.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bd0da7e89faea251e77215ec70f7a5b2c26a3f8/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmacro-stepping.rs?ref=7bd0da7e89faea251e77215ec70f7a5b2c26a3f8", "patch": "@@ -44,6 +44,17 @@ extern crate macro_stepping; // exports new_scope!()\n // gdb-command:frame\n // gdb-check:[...]#loc6[...]\n \n+// gdb-command:continue\n+// gdb-command:step\n+// gdb-command:frame\n+// gdb-check:[...]#inc-loc1[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#inc-loc2[...]\n+// gdb-command:next\n+// gdb-command:frame\n+// gdb-check:[...]#inc-loc3[...]\n+\n // === LLDB TESTS ==================================================================================\n \n // lldb-command:set set stop-line-count-before 0\n@@ -68,6 +79,17 @@ extern crate macro_stepping; // exports new_scope!()\n // lldb-command:frame select\n // lldb-check:[...]#loc5[...]\n \n+// lldb-command:continue\n+// lldb-command:step\n+// lldb-command:frame select\n+// lldb-check:[...]#inc-loc1[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#inc-loc2[...]\n+// lldb-command:next\n+// lldb-command:frame select\n+// lldb-check:[...]#inc-loc3[...]\n+\n macro_rules! foo {\n     () => {\n         let a = 1;\n@@ -99,6 +121,10 @@ fn main() {\n              \"world\");\n \n     zzz(); // #loc6\n+\n+    included(); // #break\n }\n \n fn zzz() {()}\n+\n+include!(\"macro-stepping.inc\");"}]}