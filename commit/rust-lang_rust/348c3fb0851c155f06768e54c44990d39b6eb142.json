{"sha": "348c3fb0851c155f06768e54c44990d39b6eb142", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0OGMzZmIwODUxYzE1NWYwNjc2OGU1NGM0NDk5MGQzOWI2ZWIxNDI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-10-13T11:05:59Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-10-13T11:05:59Z"}, "message": "Add assert checking that allocation and deallocation sizes are equal", "tree": {"sha": "890f27aea1612950824c956501fd96ac26c9e010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/890f27aea1612950824c956501fd96ac26c9e010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/348c3fb0851c155f06768e54c44990d39b6eb142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/348c3fb0851c155f06768e54c44990d39b6eb142", "html_url": "https://github.com/rust-lang/rust/commit/348c3fb0851c155f06768e54c44990d39b6eb142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/348c3fb0851c155f06768e54c44990d39b6eb142/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d062809cb2cb19df1b2cf84ec0c73c1cd8f3c71", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d062809cb2cb19df1b2cf84ec0c73c1cd8f3c71", "html_url": "https://github.com/rust-lang/rust/commit/6d062809cb2cb19df1b2cf84ec0c73c1cd8f3c71"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "740d13c476222a44680a45b70717cd3e83cc1b0b", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/348c3fb0851c155f06768e54c44990d39b6eb142/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/348c3fb0851c155f06768e54c44990d39b6eb142/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=348c3fb0851c155f06768e54c44990d39b6eb142", "patch": "@@ -375,16 +375,17 @@ impl Rc<str> {\n     pub fn __from_str(value: &str) -> Rc<str> {\n         unsafe {\n             // Allocate enough space for `RcBox<str>`.\n-            let aligned_len = (value.len() + size_of::<usize>() - 1) / size_of::<usize>();\n-            let vec = RawVec::<usize>::with_capacity(2 + aligned_len);\n+            let aligned_len = 2 + (value.len() + size_of::<usize>() - 1) / size_of::<usize>();\n+            let vec = RawVec::<usize>::with_capacity(aligned_len);\n             let ptr = vec.ptr();\n             forget(vec);\n             // Initialize fields of `RcBox<str>`.\n             *ptr.offset(0) = 1; // strong: Cell::new(1)\n             *ptr.offset(1) = 1; // weak: Cell::new(1)\n             ptr::copy_nonoverlapping(value.as_ptr(), ptr.offset(2) as *mut u8, value.len());\n             // Combine the allocation address and the string length into a fat pointer to `RcBox`.\n-            let rcbox_ptr = mem::transmute([ptr as usize, value.len()]);\n+            let rcbox_ptr: *mut RcBox<str> = mem::transmute([ptr as usize, value.len()]);\n+            assert!(aligned_len * size_of::<usize>() == size_of_val(&*rcbox_ptr));\n             Rc { ptr: Shared::new(rcbox_ptr) }\n         }\n     }"}]}