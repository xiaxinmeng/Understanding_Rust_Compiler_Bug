{"sha": "43eba5fef287cfcd63b36321900d546be9496476", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZWJhNWZlZjI4N2NmY2Q2M2IzNjMyMTkwMGQ1NDZiZTk0OTY0NzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-30T19:57:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-30T19:57:30Z"}, "message": "Rollup merge of #62241 - Centril:fix-async-unsafe-order, r=petrochenkov\n\nAlways parse 'async unsafe fn' + properly ban in 2015\n\nParse `async unsafe fn` not `unsafe async fn` in implementations. We also take the opportunity to properly ban `async fn` in Rust 2015 when they are inside implementations.\n\nCloses https://github.com/rust-lang/rust/issues/62232.\n\ncc https://github.com/rust-lang/rust/pull/61319, https://github.com/rust-lang/rust/issues/62121, and https://github.com/rust-lang/rust/issues/62149.\n\nr? @petrochenkov", "tree": {"sha": "f7261e5e2bd80050f575d4bc9be69da46a69db85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7261e5e2bd80050f575d4bc9be69da46a69db85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43eba5fef287cfcd63b36321900d546be9496476", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdGRQrCRBK7hj4Ov3rIwAAdHIIAG12HWmWvjAQxUxBqqTEWxEw\nKvjDf1bAZDwdizjjrO+Tj+1u2n3uTKyUSsAoCedSesbM+zGu1lxtLL4ol1qnEHf9\nqHAbNu6sCHR3I9oh59lAQeKl8cmnL2x6h1nsC1M4MktqZji9Kh/C2EzVB4BtacRj\nAlUKAsUl5XTfLnBltfPwRBCDLZHWUKLDGgwIVw+HOusu3pB9Ch7HJW227uLPym+9\nzZWKPSmwMoR1S7gWAz3zDyuJ18b4u19kKYNRkdsbIS4fa+36EuqZ4WJi+04aLhyq\n9WzVZwJlfoNRK2sA7fL2uEFsEmM0vzxDppipVylTYLtOxrAz7pXR4KbxqOUjVAk=\n=Nrsi\n-----END PGP SIGNATURE-----\n", "payload": "tree f7261e5e2bd80050f575d4bc9be69da46a69db85\nparent 690f9e422ec6e7fdce8dfb7ee1b35cdddede409d\nparent ce1d95af4c1b179536c3c0daccd62946ef20b006\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561924650 +0200\ncommitter GitHub <noreply@github.com> 1561924650 +0200\n\nRollup merge of #62241 - Centril:fix-async-unsafe-order, r=petrochenkov\n\nAlways parse 'async unsafe fn' + properly ban in 2015\n\nParse `async unsafe fn` not `unsafe async fn` in implementations. We also take the opportunity to properly ban `async fn` in Rust 2015 when they are inside implementations.\n\nCloses https://github.com/rust-lang/rust/issues/62232.\n\ncc https://github.com/rust-lang/rust/pull/61319, https://github.com/rust-lang/rust/issues/62121, and https://github.com/rust-lang/rust/issues/62149.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43eba5fef287cfcd63b36321900d546be9496476", "html_url": "https://github.com/rust-lang/rust/commit/43eba5fef287cfcd63b36321900d546be9496476", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43eba5fef287cfcd63b36321900d546be9496476/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "690f9e422ec6e7fdce8dfb7ee1b35cdddede409d", "url": "https://api.github.com/repos/rust-lang/rust/commits/690f9e422ec6e7fdce8dfb7ee1b35cdddede409d", "html_url": "https://github.com/rust-lang/rust/commit/690f9e422ec6e7fdce8dfb7ee1b35cdddede409d"}, {"sha": "ce1d95af4c1b179536c3c0daccd62946ef20b006", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1d95af4c1b179536c3c0daccd62946ef20b006", "html_url": "https://github.com/rust-lang/rust/commit/ce1d95af4c1b179536c3c0daccd62946ef20b006"}], "stats": {"total": 105, "additions": 77, "deletions": 28}, "files": [{"sha": "560635962995cb268263db3023691c631fa12f6b", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -837,13 +837,6 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                                  the relevant `fold_*()` method in `PlaceholderExpander`?\");\n     }\n \n-    fn visit_fn_header(&mut self, header: &'a FnHeader) {\n-        if header.asyncness.node.is_async() && self.session.rust_2015() {\n-            struct_span_err!(self.session, header.asyncness.span, E0670,\n-                             \"`async fn` is not permitted in the 2015 edition\").emit();\n-        }\n-    }\n-\n     fn visit_impl_item(&mut self, ii: &'a ImplItem) {\n         match ii.node {\n             ImplItemKind::Method(ref sig, _) => {"}, {"sha": "696b5f48385e7a9631d65207884e7a55acf40f6b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -5734,9 +5734,12 @@ impl<'a> Parser<'a> {\n     {\n         let is_const_fn = self.eat_keyword(kw::Const);\n         let const_span = self.prev_span;\n-        let unsafety = self.parse_unsafety();\n         let asyncness = self.parse_asyncness();\n+        if let IsAsync::Async { .. } = asyncness {\n+            self.ban_async_in_2015(self.prev_span);\n+        }\n         let asyncness = respan(self.prev_span, asyncness);\n+        let unsafety = self.parse_unsafety();\n         let (constness, unsafety, abi) = if is_const_fn {\n             (respan(const_span, Constness::Const), unsafety, Abi::Rust)\n         } else {\n@@ -7254,13 +7257,7 @@ impl<'a> Parser<'a> {\n                                         item_,\n                                         visibility,\n                                         maybe_append(attrs, extra_attrs));\n-                if self.token.span.rust_2015() {\n-                    self.diagnostic().struct_span_err_with_code(\n-                        async_span,\n-                        \"`async fn` is not permitted in the 2015 edition\",\n-                        DiagnosticId::Error(\"E0670\".into())\n-                    ).emit();\n-                }\n+                self.ban_async_in_2015(async_span);\n                 return Ok(Some(item));\n             }\n         }\n@@ -7534,6 +7531,19 @@ impl<'a> Parser<'a> {\n         self.parse_macro_use_or_failure(attrs, macros_allowed, attributes_allowed, lo, visibility)\n     }\n \n+    /// We are parsing `async fn`. If we are on Rust 2015, emit an error.\n+    fn ban_async_in_2015(&self, async_span: Span) {\n+        if async_span.rust_2015() {\n+            self.diagnostic()\n+                .struct_span_err_with_code(\n+                    async_span,\n+                    \"`async fn` is not permitted in the 2015 edition\",\n+                    DiagnosticId::Error(\"E0670\".into())\n+                )\n+                .emit();\n+        }\n+    }\n+\n     /// Parses a foreign item.\n     crate fn parse_foreign_item(&mut self) -> PResult<'a, ForeignItem> {\n         maybe_whole!(self, NtForeignItem, |ni| ni);"}, {"sha": "0eae1467fbfa0e6e80bdb617297d584f6ffc532b", "filename": "src/test/ui/async-await/async-await.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-await.rs?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -134,11 +134,15 @@ trait Bar {\n }\n \n impl Foo {\n-    async fn async_method(x: u8) -> u8 {\n+    async fn async_assoc_item(x: u8) -> u8 {\n         unsafe {\n             unsafe_async_fn(x).await\n         }\n     }\n+\n+    async unsafe fn async_unsafe_assoc_item(x: u8) -> u8 {\n+        unsafe_async_fn(x).await\n+    }\n }\n \n fn test_future_yields_once_then_returns<F, Fut>(f: F)\n@@ -180,12 +184,17 @@ fn main() {\n         async_fn,\n         generic_async_fn,\n         async_fn_with_internal_borrow,\n-        Foo::async_method,\n+        Foo::async_assoc_item,\n         |x| {\n             async move {\n                 unsafe { unsafe_async_fn(x).await }\n             }\n         },\n+        |x| {\n+            async move {\n+                unsafe { Foo::async_unsafe_assoc_item(x).await }\n+            }\n+        },\n     }\n     test_with_borrow! {\n         async_block_with_borrow_named_lifetime,"}, {"sha": "a5bc1810154750cf53a4553cd24958c203d4d44c", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.rs?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -28,6 +28,12 @@ fn main() {\n         async fn foo() {} //~ ERROR `async fn` is not permitted in the 2015 edition\n     }\n \n+    accept_item! {\n+        impl Foo {\n+            async fn bar() {} //~ ERROR `async fn` is not permitted in the 2015 edition\n+        }\n+    }\n+\n     let inside_closure = || {\n         async fn bar() {} //~ ERROR `async fn` is not permitted in the 2015 edition\n     };"}, {"sha": "efb4462095d0d7e8b364ede027a5c7429575537f", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -23,7 +23,19 @@ LL | async fn async_baz() {\n    | ^^^^^\n \n error[E0670]: `async fn` is not permitted in the 2015 edition\n-  --> $DIR/edition-deny-async-fns-2015.rs:32:9\n+  --> $DIR/edition-deny-async-fns-2015.rs:16:5\n+   |\n+LL |     async fn foo() {}\n+   |     ^^^^^\n+\n+error[E0670]: `async fn` is not permitted in the 2015 edition\n+  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n+   |\n+LL |     async fn foo() {}\n+   |     ^^^^^\n+\n+error[E0670]: `async fn` is not permitted in the 2015 edition\n+  --> $DIR/edition-deny-async-fns-2015.rs:38:9\n    |\n LL |         async fn bar() {}\n    |         ^^^^^\n@@ -35,23 +47,17 @@ LL |         async fn foo() {}\n    |         ^^^^^\n \n error[E0670]: `async fn` is not permitted in the 2015 edition\n-  --> $DIR/edition-deny-async-fns-2015.rs:16:5\n+  --> $DIR/edition-deny-async-fns-2015.rs:33:13\n    |\n-LL |     async fn foo() {}\n-   |     ^^^^^\n+LL |             async fn bar() {}\n+   |             ^^^^^\n \n error[E0706]: trait fns cannot be declared `async`\n   --> $DIR/edition-deny-async-fns-2015.rs:20:5\n    |\n LL |     async fn foo() {}\n    |     ^^^^^^^^^^^^^^^^^\n \n-error[E0670]: `async fn` is not permitted in the 2015 edition\n-  --> $DIR/edition-deny-async-fns-2015.rs:20:5\n-   |\n-LL |     async fn foo() {}\n-   |     ^^^^^\n-\n-error: aborting due to 9 previous errors\n+error: aborting due to 10 previous errors\n \n For more information about this error, try `rustc --explain E0670`."}, {"sha": "81e0cd799ad7053d7fa0ee49670c03f8d91b8bf0", "filename": "src/test/ui/async-await/no-unsafe-async.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.rs?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -0,0 +1,11 @@\n+// edition:2018\n+\n+struct S;\n+\n+impl S {\n+    #[cfg(FALSE)]\n+    unsafe async fn g() {} //~ ERROR expected one of `extern` or `fn`, found `async`\n+}\n+\n+#[cfg(FALSE)]\n+unsafe async fn f() {} //~ ERROR expected one of `extern`, `fn`, or `{`, found `async`"}, {"sha": "c339c7c3bf5bf341500d1fd3a5275ab66f30ead2", "filename": "src/test/ui/async-await/no-unsafe-async.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43eba5fef287cfcd63b36321900d546be9496476/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fno-unsafe-async.stderr?ref=43eba5fef287cfcd63b36321900d546be9496476", "patch": "@@ -0,0 +1,14 @@\n+error: expected one of `extern` or `fn`, found `async`\n+  --> $DIR/no-unsafe-async.rs:7:12\n+   |\n+LL |     unsafe async fn g() {}\n+   |            ^^^^^ expected one of `extern` or `fn` here\n+\n+error: expected one of `extern`, `fn`, or `{`, found `async`\n+  --> $DIR/no-unsafe-async.rs:11:8\n+   |\n+LL | unsafe async fn f() {}\n+   |        ^^^^^ expected one of `extern`, `fn`, or `{` here\n+\n+error: aborting due to 2 previous errors\n+"}]}