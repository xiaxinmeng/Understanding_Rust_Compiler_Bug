{"sha": "7fbaf33a3cb2d9f86c1dc037b2087086de25c515", "node_id": "C_kwDOAAsO6NoAKDdmYmFmMzNhM2NiMmQ5Zjg2YzFkYzAzN2IyMDg3MDg2ZGUyNWM1MTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-11T16:35:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-11T16:35:25Z"}, "message": "Rollup merge of #90741 - mbartlett21:patch-4, r=dtolnay\n\nConst `Option::cloned`\n\nThis constifies the two `Option::cloned` functions, bounded on `~const Clone`.", "tree": {"sha": "3dcaf8a4dc1095268dcd9885bbf8f978499e01bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dcaf8a4dc1095268dcd9885bbf8f978499e01bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fbaf33a3cb2d9f86c1dc037b2087086de25c515", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhtNNOCRBK7hj4Ov3rIwAAN6IIADMMeeXgJ8y+/QTWi+VCx6wF\nPdqhGYbLdyAgHrD9ELqO0/gwFoBE6rTebujg9egn+tghpHcN9a5fM5eJDymwNNlI\nUbJcJexFpK2wpPC6HSSwI+d/TBcQl9woI6dDlJ6yTGSSEAtA16KZ4ZOpQjxa7gJ2\nm6sDF+I/HhGwVBZW2UE7v3yzASCL06fDclfspUed//FjphBRQj/LUVLQdQr5lJpn\nl5QViYhZJkv3b8qw6m1KfcRrDUNfpxvwwYp2B+fj5yU9f9/G3xy+wBR9SQDy0LlB\nf3oq5zYTr6eykEB+rmjMfmteh78P45sO0EZQ9i8ay9PwJEHCws1267m3aAc3zkA=\n=rcLO\n-----END PGP SIGNATURE-----\n", "payload": "tree 3dcaf8a4dc1095268dcd9885bbf8f978499e01bb\nparent 40482bb539362e1173bbe2b218ed4c06b11fa4b3\nparent 9eb7c34f9b4fe388abfb2370ffbdff4e11df3136\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639240525 +0100\ncommitter GitHub <noreply@github.com> 1639240525 +0100\n\nRollup merge of #90741 - mbartlett21:patch-4, r=dtolnay\n\nConst `Option::cloned`\n\nThis constifies the two `Option::cloned` functions, bounded on `~const Clone`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fbaf33a3cb2d9f86c1dc037b2087086de25c515", "html_url": "https://github.com/rust-lang/rust/commit/7fbaf33a3cb2d9f86c1dc037b2087086de25c515", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fbaf33a3cb2d9f86c1dc037b2087086de25c515/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40482bb539362e1173bbe2b218ed4c06b11fa4b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/40482bb539362e1173bbe2b218ed4c06b11fa4b3", "html_url": "https://github.com/rust-lang/rust/commit/40482bb539362e1173bbe2b218ed4c06b11fa4b3"}, {"sha": "9eb7c34f9b4fe388abfb2370ffbdff4e11df3136", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb7c34f9b4fe388abfb2370ffbdff4e11df3136", "html_url": "https://github.com/rust-lang/rust/commit/9eb7c34f9b4fe388abfb2370ffbdff4e11df3136"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "145c7ff5c323766d315e2ba5591a1eb26684888c", "filename": "library/core/src/option.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7fbaf33a3cb2d9f86c1dc037b2087086de25c515/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbaf33a3cb2d9f86c1dc037b2087086de25c515/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=7fbaf33a3cb2d9f86c1dc037b2087086de25c515", "patch": "@@ -1523,8 +1523,15 @@ impl<T: Clone> Option<&T> {\n     /// ```\n     #[must_use = \"`self` will be dropped if the result is not used\"]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn cloned(self) -> Option<T> {\n-        self.map(|t| t.clone())\n+    #[rustc_const_unstable(feature = \"const_option_cloned\", issue = \"91582\")]\n+    pub const fn cloned(self) -> Option<T>\n+    where\n+        T: ~const Clone,\n+    {\n+        match self {\n+            Some(t) => Some(t.clone()),\n+            None => None,\n+        }\n     }\n }\n \n@@ -1541,9 +1548,17 @@ impl<T: Clone> Option<&mut T> {\n     /// let cloned = opt_x.cloned();\n     /// assert_eq!(cloned, Some(12));\n     /// ```\n+    #[must_use = \"`self` will be dropped if the result is not used\"]\n     #[stable(since = \"1.26.0\", feature = \"option_ref_mut_cloned\")]\n-    pub fn cloned(self) -> Option<T> {\n-        self.map(|t| t.clone())\n+    #[rustc_const_unstable(feature = \"const_option_cloned\", issue = \"91582\")]\n+    pub const fn cloned(self) -> Option<T>\n+    where\n+        T: ~const Clone,\n+    {\n+        match self {\n+            Some(t) => Some(t.clone()),\n+            None => None,\n+        }\n     }\n }\n "}]}