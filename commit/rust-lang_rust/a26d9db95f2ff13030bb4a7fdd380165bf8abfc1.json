{"sha": "a26d9db95f2ff13030bb4a7fdd380165bf8abfc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyNmQ5ZGI5NWYyZmYxMzAzMGJiNGE3ZmRkMzgwMTY1YmY4YWJmYzE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "B.Steinbrink@gmx.de", "date": "2013-04-12T17:21:46Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "B.Steinbrink@gmx.de", "date": "2013-04-13T12:29:14Z"}, "message": "Avoid excessive allocations and copies in iter::to_vec\n\nThe foldl based implementation allocates lots of unneeded vectors.\niter::map_to_vec is already optimized to avoid these.", "tree": {"sha": "51ce7de0a5bcf279b9e6b0954d81eb6d9abe04a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51ce7de0a5bcf279b9e6b0954d81eb6d9abe04a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1", "html_url": "https://github.com/rust-lang/rust/commit/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d57aaae02525f6e3c7a051fed94966dbbad5e7cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d57aaae02525f6e3c7a051fed94966dbbad5e7cf", "html_url": "https://github.com/rust-lang/rust/commit/d57aaae02525f6e3c7a051fed94966dbbad5e7cf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a220cd520c32aba1ee322cf4ac3b3e23ce1264da", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a26d9db95f2ff13030bb4a7fdd380165bf8abfc1/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=a26d9db95f2ff13030bb4a7fdd380165bf8abfc1", "patch": "@@ -161,7 +161,7 @@ pub fn foldl<A,B,IA:BaseIter<A>>(self: &IA, b0: B, blk: &fn(&B, &A) -> B)\n \n #[inline(always)]\n pub fn to_vec<A:Copy,IA:BaseIter<A>>(self: &IA) -> ~[A] {\n-    foldl::<A,~[A],IA>(self, ~[], |r, a| vec::append(copy (*r), ~[*a]))\n+    map_to_vec(self, |&x| x)\n }\n \n #[inline(always)]"}]}