{"sha": "e4c31de61ec1e59c802c67cc62e9a4a164127e7c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YzMxZGU2MWVjMWU1OWM4MDJjNjdjYzYyZTlhNGExNjQxMjdlN2M=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-12T15:37:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-18T14:11:36Z"}, "message": "nit: cache crate-hash for next time", "tree": {"sha": "c2bf18ed8d0d5fcaaa46e82e8c6b90ca78a87f67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2bf18ed8d0d5fcaaa46e82e8c6b90ca78a87f67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4c31de61ec1e59c802c67cc62e9a4a164127e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c31de61ec1e59c802c67cc62e9a4a164127e7c", "html_url": "https://github.com/rust-lang/rust/commit/e4c31de61ec1e59c802c67cc62e9a4a164127e7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4c31de61ec1e59c802c67cc62e9a4a164127e7c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9810013895914d29b06ba2fa720296035998f35", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9810013895914d29b06ba2fa720296035998f35", "html_url": "https://github.com/rust-lang/rust/commit/c9810013895914d29b06ba2fa720296035998f35"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "b729f25b873d4f05ec8df2b45e7239c4cb02fa7f", "filename": "src/librustc_incremental/persist/hash.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e4c31de61ec1e59c802c67cc62e9a4a164127e7c/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4c31de61ec1e59c802c67cc62e9a4a164127e7c/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fhash.rs?ref=e4c31de61ec1e59c802c67cc62e9a4a164127e7c", "patch": "@@ -86,6 +86,11 @@ impl<'a, 'tcx> HashContext<'a, 'tcx> {\n             // krate; in that case, we just use the krate's overall hash\n             if let Some(&hash) = self.crate_hashes.get(&def_id.krate) {\n                 debug!(\"metadata_hash: def_id={:?} crate_hash={:?}\", def_id, hash);\n+\n+                // micro-\"optimization\": avoid a cache miss if we ask\n+                // for metadata from this particular def-id again.\n+                self.item_metadata_hashes.insert(def_id, hash.as_u64());\n+\n                 return hash.as_u64();\n             }\n "}]}