{"sha": "7cd075ff0beb97039cd1d1c6c021abf89339731b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZDA3NWZmMGJlYjk3MDM5Y2QxZDFjNmMwMjFhYmY4OTMzOTczMWI=", "commit": {"author": {"name": "Seivan Heidari", "email": "seivan.heidari@icloud.com", "date": "2019-11-10T22:37:09Z"}, "committer": {"name": "Seivan Heidari", "email": "seivan.heidari@icloud.com", "date": "2019-11-10T22:37:09Z"}, "message": "Merge branch 'master' of https://github.com/rust-analyzer/rust-analyzer into feature/themes", "tree": {"sha": "f814966917cabe3fa3fc56a60b1942442a8e57fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f814966917cabe3fa3fc56a60b1942442a8e57fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cd075ff0beb97039cd1d1c6c021abf89339731b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cd075ff0beb97039cd1d1c6c021abf89339731b", "html_url": "https://github.com/rust-lang/rust/commit/7cd075ff0beb97039cd1d1c6c021abf89339731b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cd075ff0beb97039cd1d1c6c021abf89339731b/comments", "author": {"login": "seivan", "id": 55424, "node_id": "MDQ6VXNlcjU1NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/55424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seivan", "html_url": "https://github.com/seivan", "followers_url": "https://api.github.com/users/seivan/followers", "following_url": "https://api.github.com/users/seivan/following{/other_user}", "gists_url": "https://api.github.com/users/seivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/seivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seivan/subscriptions", "organizations_url": "https://api.github.com/users/seivan/orgs", "repos_url": "https://api.github.com/users/seivan/repos", "events_url": "https://api.github.com/users/seivan/events{/privacy}", "received_events_url": "https://api.github.com/users/seivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seivan", "id": 55424, "node_id": "MDQ6VXNlcjU1NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/55424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seivan", "html_url": "https://github.com/seivan", "followers_url": "https://api.github.com/users/seivan/followers", "following_url": "https://api.github.com/users/seivan/following{/other_user}", "gists_url": "https://api.github.com/users/seivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/seivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seivan/subscriptions", "organizations_url": "https://api.github.com/users/seivan/orgs", "repos_url": "https://api.github.com/users/seivan/repos", "events_url": "https://api.github.com/users/seivan/events{/privacy}", "received_events_url": "https://api.github.com/users/seivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3886164bcce734825d20a1af08ce359fbe0710e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3886164bcce734825d20a1af08ce359fbe0710e3", "html_url": "https://github.com/rust-lang/rust/commit/3886164bcce734825d20a1af08ce359fbe0710e3"}, {"sha": "7973fd66e9a7f178b0963675c62233474dcec954", "url": "https://api.github.com/repos/rust-lang/rust/commits/7973fd66e9a7f178b0963675c62233474dcec954", "html_url": "https://github.com/rust-lang/rust/commit/7973fd66e9a7f178b0963675c62233474dcec954"}], "stats": {"total": 118, "additions": 112, "deletions": 6}, "files": [{"sha": "6db9937a43212880e162f9519c8ff9bba5a59361", "filename": "crates/ra_hir_def/src/nameres/collector.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=7cd075ff0beb97039cd1d1c6c021abf89339731b", "patch": "@@ -36,11 +36,12 @@ pub(super) fn collect_defs(db: &impl DefDatabase2, mut def_map: CrateDefMap) ->\n         );\n \n         // look for the prelude\n-        if def_map.prelude.is_none() {\n-            let map = db.crate_def_map(dep.crate_id);\n-            if map.prelude.is_some() {\n-                def_map.prelude = map.prelude;\n-            }\n+        // If the dependency defines a prelude, we overwrite an already defined\n+        // prelude. This is necessary to import the \"std\" prelude if a crate\n+        // depends on both \"core\" and \"std\".\n+        let dep_def_map = db.crate_def_map(dep.crate_id);\n+        if dep_def_map.prelude.is_some() {\n+            def_map.prelude = dep_def_map.prelude;\n         }\n     }\n "}, {"sha": "256f7d4be72eecb98dd9d32bab15f51586d3304a", "filename": "crates/ra_hir_def/src/nameres/tests.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=7cd075ff0beb97039cd1d1c6c021abf89339731b", "patch": "@@ -463,6 +463,37 @@ fn values_dont_shadow_extern_crates() {\n     \"###);\n }\n \n+#[test]\n+fn std_prelude_takes_precedence_above_core_prelude() {\n+    let map = def_map(\n+        r#\"\n+        //- /main.rs crate:main deps:core,std\n+        use {Foo, Bar};\n+\n+        //- /std.rs crate:std deps:core\n+        #[prelude_import]\n+        pub use self::prelude::*;\n+        mod prelude {\n+            pub struct Foo;\n+            pub use core::prelude::Bar;\n+        }\n+\n+        //- /core.rs crate:core\n+        #[prelude_import]\n+        pub use self::prelude::*;\n+        mod prelude {\n+            pub struct Bar;\n+        }\n+        \"#,\n+    );\n+\n+    assert_snapshot!(map, @r###\"\n+        \u22eecrate\n+        \u22eeBar: t v\n+        \u22eeFoo: t v\n+    \"###);\n+}\n+\n #[test]\n fn cfg_not_test() {\n     let map = def_map("}, {"sha": "3e205efd12ae29183d5a6978602208e6964c2dec", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=7cd075ff0beb97039cd1d1c6c021abf89339731b", "patch": "@@ -597,6 +597,68 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn completes_std_prelude_if_core_is_defined() {\n+        assert_debug_snapshot!(\n+            do_reference_completion(\n+                \"\n+                //- /main.rs\n+                fn foo() { let x: <|> }\n+\n+                //- /core/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n+\n+                mod prelude {\n+                    struct Option;\n+                }\n+\n+                //- /std/lib.rs\n+                #[prelude_import]\n+                use prelude::*;\n+\n+                mod prelude {\n+                    struct String;\n+                }\n+                \"\n+            ),\n+            @r###\"\n+        [\n+            CompletionItem {\n+                label: \"String\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"String\",\n+                kind: Struct,\n+            },\n+            CompletionItem {\n+                label: \"core\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"core\",\n+                kind: Module,\n+            },\n+            CompletionItem {\n+                label: \"foo()\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"foo()$0\",\n+                kind: Function,\n+                lookup: \"foo\",\n+                detail: \"fn foo()\",\n+            },\n+            CompletionItem {\n+                label: \"std\",\n+                source_range: [18; 18),\n+                delete: [18; 18),\n+                insert: \"std\",\n+                kind: Module,\n+            },\n+        ]\n+        \"###\n+        );\n+    }\n+\n     #[test]\n     fn completes_macros_as_value() {\n         assert_debug_snapshot!("}, {"sha": "0e14f1b70c9ffa0f516f4dcba4cb68f1da1b55b6", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=7cd075ff0beb97039cd1d1c6c021abf89339731b", "patch": "@@ -199,6 +199,7 @@ impl ProjectWorkspace {\n                     }\n                 }\n \n+                let libcore = sysroot.core().and_then(|it| sysroot_crates.get(&it).copied());\n                 let libstd = sysroot.std().and_then(|it| sysroot_crates.get(&it).copied());\n \n                 let mut pkg_to_lib_crate = FxHashMap::default();\n@@ -226,7 +227,7 @@ impl ProjectWorkspace {\n                         }\n                     }\n \n-                    // Set deps to the std and to the lib target of the current package\n+                    // Set deps to the core, std and to the lib target of the current package\n                     for &from in pkg_crates.get(&pkg).into_iter().flatten() {\n                         if let Some(to) = lib_tgt {\n                             if to != from {\n@@ -240,6 +241,13 @@ impl ProjectWorkspace {\n                                 }\n                             }\n                         }\n+                        // core is added as a dependency before std in order to\n+                        // mimic rustcs dependency order\n+                        if let Some(core) = libcore {\n+                            if let Err(_) = crate_graph.add_dep(from, \"core\".into(), core) {\n+                                log::error!(\"cyclic dependency on core for {}\", pkg.name(&cargo))\n+                            }\n+                        }\n                         if let Some(std) = libstd {\n                             if let Err(_) = crate_graph.add_dep(from, \"std\".into(), std) {\n                                 log::error!(\"cyclic dependency on std for {}\", pkg.name(&cargo))"}, {"sha": "3d827809ee808b0bc2bd20a4ddbc464555b86030", "filename": "crates/ra_project_model/src/sysroot.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cd075ff0beb97039cd1d1c6c021abf89339731b/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fsysroot.rs?ref=7cd075ff0beb97039cd1d1c6c021abf89339731b", "patch": "@@ -27,6 +27,10 @@ struct SysrootCrateData {\n }\n \n impl Sysroot {\n+    pub fn core(&self) -> Option<SysrootCrate> {\n+        self.by_name(\"core\")\n+    }\n+\n     pub fn std(&self) -> Option<SysrootCrate> {\n         self.by_name(\"std\")\n     }"}]}