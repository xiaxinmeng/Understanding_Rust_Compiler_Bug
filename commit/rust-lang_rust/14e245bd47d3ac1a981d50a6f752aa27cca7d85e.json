{"sha": "14e245bd47d3ac1a981d50a6f752aa27cca7d85e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0ZTI0NWJkNDdkM2FjMWE5ODFkNTBhNmY3NTJhYTI3Y2NhN2Q4NWU=", "commit": {"author": {"name": "LemmingAvalanche", "email": "haugsbakk@yahoo.no", "date": "2014-07-04T11:19:42Z"}, "committer": {"name": "LemmingAvalanche", "email": "haugsbakk@yahoo.no", "date": "2014-08-10T20:51:22Z"}, "message": "Note naming convention of lists (xs, ys, ...)\n\nPeople reading the tutorial may not be familiar with the convention of naming lists, vectors and the like as xs, ys, etc. Without some explanation of the reasoning behind it, it might come off as just throwaway non-descriptive names. Languages like Haskell gets flak from using short, non-descriptive names, while in reality, there are clear conventions and reasons for using certain terse variable names.\n\nI assumed that the convention came from a language like Haskell, so I\ntailored the explanation according to that.", "tree": {"sha": "481feb6a95bad684ca0fb53431d5a48048b8b5b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/481feb6a95bad684ca0fb53431d5a48048b8b5b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14e245bd47d3ac1a981d50a6f752aa27cca7d85e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14e245bd47d3ac1a981d50a6f752aa27cca7d85e", "html_url": "https://github.com/rust-lang/rust/commit/14e245bd47d3ac1a981d50a6f752aa27cca7d85e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14e245bd47d3ac1a981d50a6f752aa27cca7d85e/comments", "author": {"login": "LemmingAvalanche", "id": 2229597, "node_id": "MDQ6VXNlcjIyMjk1OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2229597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LemmingAvalanche", "html_url": "https://github.com/LemmingAvalanche", "followers_url": "https://api.github.com/users/LemmingAvalanche/followers", "following_url": "https://api.github.com/users/LemmingAvalanche/following{/other_user}", "gists_url": "https://api.github.com/users/LemmingAvalanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/LemmingAvalanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LemmingAvalanche/subscriptions", "organizations_url": "https://api.github.com/users/LemmingAvalanche/orgs", "repos_url": "https://api.github.com/users/LemmingAvalanche/repos", "events_url": "https://api.github.com/users/LemmingAvalanche/events{/privacy}", "received_events_url": "https://api.github.com/users/LemmingAvalanche/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LemmingAvalanche", "id": 2229597, "node_id": "MDQ6VXNlcjIyMjk1OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/2229597?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LemmingAvalanche", "html_url": "https://github.com/LemmingAvalanche", "followers_url": "https://api.github.com/users/LemmingAvalanche/followers", "following_url": "https://api.github.com/users/LemmingAvalanche/following{/other_user}", "gists_url": "https://api.github.com/users/LemmingAvalanche/gists{/gist_id}", "starred_url": "https://api.github.com/users/LemmingAvalanche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LemmingAvalanche/subscriptions", "organizations_url": "https://api.github.com/users/LemmingAvalanche/orgs", "repos_url": "https://api.github.com/users/LemmingAvalanche/repos", "events_url": "https://api.github.com/users/LemmingAvalanche/events{/privacy}", "received_events_url": "https://api.github.com/users/LemmingAvalanche/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5012b858ed939ced9e4ac6c7a31c0a038661dd92", "url": "https://api.github.com/repos/rust-lang/rust/commits/5012b858ed939ced9e4ac6c7a31c0a038661dd92", "html_url": "https://github.com/rust-lang/rust/commit/5012b858ed939ced9e4ac6c7a31c0a038661dd92"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "96b57f59cce61d730b7c7a986c0f4d38ff685843", "filename": "src/doc/tutorial.md", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/14e245bd47d3ac1a981d50a6f752aa27cca7d85e/src%2Fdoc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/14e245bd47d3ac1a981d50a6f752aa27cca7d85e/src%2Fdoc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftutorial.md?ref=14e245bd47d3ac1a981d50a6f752aa27cca7d85e", "patch": "@@ -1110,6 +1110,16 @@ let xs = Cons(1, box Cons(2, box Cons(3, box Nil)));\n let ys = xs; // copies `Cons(u32, pointer)` shallowly\n ~~~\n \n+> *Note:* Names like `xs` and `ys` are a naming\n+> convention for collection-like data structures\n+> (like our `List`). These collections are given \n+> names appended with 's' to signify plurality, \n+> i.e. that the data structure stores multiple \n+> elements.  For example, `xs` in this case can \n+> be read as \"a list of ex-es\", where \"x\" here \n+> are elements of type `u32`.\n+\n+\n Rust will consider a shallow copy of a type with a destructor like `List` to\n *move ownership* of the value. After a value has been moved, the source\n location cannot be used unless it is reinitialized."}]}