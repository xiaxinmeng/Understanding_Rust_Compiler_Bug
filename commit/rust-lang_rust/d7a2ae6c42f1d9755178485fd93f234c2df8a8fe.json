{"sha": "d7a2ae6c42f1d9755178485fd93f234c2df8a8fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YTJhZTZjNDJmMWQ5NzU1MTc4NDg1ZmQ5M2YyMzRjMmRmOGE4ZmU=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T13:18:22Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-19T13:18:22Z"}, "message": "re-organize the iterator module a bit", "tree": {"sha": "d79b2160bd3dd1bcc2e0f3af237d75e664a200a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79b2160bd3dd1bcc2e0f3af237d75e664a200a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe", "html_url": "https://github.com/rust-lang/rust/commit/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae1c9ebf3c3a0a7e176314f742f533a788ea0dd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1c9ebf3c3a0a7e176314f742f533a788ea0dd2", "html_url": "https://github.com/rust-lang/rust/commit/ae1c9ebf3c3a0a7e176314f742f533a788ea0dd2"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "50939ba7faf64ece606d9c3102e4df3f7b6687d5", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a2ae6c42f1d9755178485fd93f234c2df8a8fe/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=d7a2ae6c42f1d9755178485fd93f234c2df8a8fe", "patch": "@@ -22,11 +22,11 @@ pub trait IteratorUtil<A> {\n     // FIXME: #5898: should be called map\n     fn transform<'r, B>(self, f: &'r fn(A) -> B) -> MapIterator<'r, A, B, Self>;\n     fn filter<'r>(self, predicate: &'r fn(&A) -> bool) -> FilterIterator<'r, A, Self>;\n+    fn enumerate(self) -> EnumerateIterator<Self>;\n     fn skip_while<'r>(self, predicate: &'r fn(&A) -> bool) -> SkipWhileIterator<'r, A, Self>;\n     fn take_while<'r>(self, predicate: &'r fn(&A) -> bool) -> TakeWhileIterator<'r, A, Self>;\n     fn skip(self, n: uint) -> SkipIterator<Self>;\n     fn take(self, n: uint) -> TakeIterator<Self>;\n-    fn enumerate(self) -> EnumerateIterator<Self>;\n     fn advance(&mut self, f: &fn(A) -> bool);\n }\n \n@@ -101,6 +101,21 @@ impl<A, B, T: Iterator<A>, U: Iterator<B>> Iterator<(A, B)> for ZipIterator<T, U\n     }\n }\n \n+pub struct MapIterator<'self, A, B, T> {\n+    priv iter: T,\n+    priv f: &'self fn(A) -> B\n+}\n+\n+impl<'self, A, B, T: Iterator<A>> Iterator<B> for MapIterator<'self, A, B, T> {\n+    #[inline]\n+    fn next(&mut self) -> Option<B> {\n+        match self.iter.next() {\n+            Some(a) => Some((self.f)(a)),\n+            _ => None\n+        }\n+    }\n+}\n+\n pub struct FilterIterator<'self, A, T> {\n     priv iter: T,\n     priv predicate: &'self fn(&A) -> bool\n@@ -120,21 +135,6 @@ impl<'self, A, T: Iterator<A>> Iterator<A> for FilterIterator<'self, A, T> {\n     }\n }\n \n-pub struct MapIterator<'self, A, B, T> {\n-    priv iter: T,\n-    priv f: &'self fn(A) -> B\n-}\n-\n-impl<'self, A, B, T: Iterator<A>> Iterator<B> for MapIterator<'self, A, B, T> {\n-    #[inline]\n-    fn next(&mut self) -> Option<B> {\n-        match self.iter.next() {\n-            Some(a) => Some((self.f)(a)),\n-            _ => None\n-        }\n-    }\n-}\n-\n pub struct EnumerateIterator<T> {\n     priv iter: T,\n     priv count: uint"}]}