{"sha": "974092c5265ac6ed500bdf277412461f092fda96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NDA5MmM1MjY1YWM2ZWQ1MDBiZGYyNzc0MTI0NjFmMDkyZmRhOTY=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-03T23:25:56Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-09-03T23:25:56Z"}, "message": "Test multi-ref'ed vec growth more seriously than before.", "tree": {"sha": "270bc6d8fc07a7e447fa5e741c9bb425ccc05d94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/270bc6d8fc07a7e447fa5e741c9bb425ccc05d94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/974092c5265ac6ed500bdf277412461f092fda96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/974092c5265ac6ed500bdf277412461f092fda96", "html_url": "https://github.com/rust-lang/rust/commit/974092c5265ac6ed500bdf277412461f092fda96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/974092c5265ac6ed500bdf277412461f092fda96/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e355aebf7c0987c3d6f66ca0013e7023aa501dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e355aebf7c0987c3d6f66ca0013e7023aa501dd", "html_url": "https://github.com/rust-lang/rust/commit/4e355aebf7c0987c3d6f66ca0013e7023aa501dd"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "39dc8617261c0b501967446009e4cb4e49cbfa15", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/974092c5265ac6ed500bdf277412461f092fda96/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/974092c5265ac6ed500bdf277412461f092fda96/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=974092c5265ac6ed500bdf277412461f092fda96", "patch": "@@ -29,6 +29,11 @@ fn alloc[T](uint n_elts) -> vec[T] {\n   ret rustrt.vec_alloc[vec[T], T](n_elts);\n }\n \n+fn refcount[T](vec[T] v) -> uint {\n+  // -1 because calling this function incremented the refcount.\n+  ret rustrt.refcount[T](v) - 1u;\n+}\n+\n type init_op[T] = fn(uint i) -> T;\n \n fn init_fn[T](&init_op[T] op, uint n_elts) -> vec[T] {"}, {"sha": "5b0a92ae35846f138e32b8889a3138fcbeb2dd62", "filename": "src/test/run-pass/vec-append.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/974092c5265ac6ed500bdf277412461f092fda96/src%2Ftest%2Frun-pass%2Fvec-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/974092c5265ac6ed500bdf277412461f092fda96/src%2Ftest%2Frun-pass%2Fvec-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-append.rs?ref=974092c5265ac6ed500bdf277412461f092fda96", "patch": "@@ -1,5 +1,9 @@\n // -*- rust -*-\n \n+use std;\n+import std._str;\n+import std._vec;\n+\n fn fast_growth() {\n   let vec[int] v = vec(1,2,3,4,5);\n   v += vec(6,7,8,9,0);\n@@ -19,7 +23,66 @@ fn slow_growth() {\n   check (v.(0) == 17);\n }\n \n+fn slow_growth2_helper(str s) {   // ref up: s\n+\n+  obj acc(vec[str] v) {\n+    fn add(&str s) { v += vec(s); }\n+  }\n+\n+  let str ss = s;                 // ref up: s\n+  let str mumble = \"mrghrm\";      // ref up: mumble\n+\n+  {\n+    /**\n+     * Within this block, mumble goes into a vec that is referenced\n+     * both by the local slot v and the acc's v data field.  When we\n+     * add(s) on the acc, its v undergoes a slow append (allocate a\n+     * new vec, copy over existing elements).  Here we're testing to\n+     * see that this slow path goes over well.  In particular, the\n+     * copy of existing elements should increment the ref count of\n+     * mumble, the existing str in the originally- shared vec.\n+     */\n+    let vec[str] v = vec(mumble); // ref up: v, mumble\n+    let acc a = acc(v);           // ref up: a, v\n+\n+    log _vec.refcount[str](v);\n+    check (_vec.refcount[str](v) == 2u);\n+\n+    a.add(s);                     // ref up: mumble, s.  ref down: v\n+\n+    log _vec.refcount[str](v);\n+    log _str.refcount(s);\n+    log _str.refcount(mumble);\n+\n+    check (_vec.refcount[str](v) == 1u);\n+    check (_str.refcount(s) == 4u);\n+    check (_str.refcount(mumble) == 3u);\n+\n+    log v.(0);\n+    log _vec.len[str](v);\n+    check (_str.eq(v.(0), mumble));\n+    check (_vec.len[str](v) == 1u);\n+  }                               // ref down: a, mumble, s, v\n+\n+  log _str.refcount(s);\n+  log _str.refcount(mumble);\n+\n+  check (_str.refcount(s) == 3u);\n+  check (_str.refcount(mumble) == 1u);\n+\n+  log mumble;\n+  log ss;\n+}                                 // ref down\n+\n+fn slow_growth2() {\n+  let str s = \"hi\";               // ref up: s\n+  slow_growth2_helper(s);\n+  log _str.refcount(s);\n+  check (_str.refcount(s) == 1u);\n+}\n+\n fn main() {\n   fast_growth();\n   slow_growth();\n+  slow_growth2();\n }"}]}