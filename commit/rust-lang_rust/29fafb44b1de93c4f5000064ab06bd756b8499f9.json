{"sha": "29fafb44b1de93c4f5000064ab06bd756b8499f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZmFmYjQ0YjFkZTkzYzRmNTAwMDA2NGFiMDZiZDc1NmI4NDk5Zjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-14T15:11:23Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-14T15:11:23Z"}, "message": "Optimize .debug_line generation\n\nThis reduces the amount of time spent in .debug_line generation by about 50%\n\nFixes #807", "tree": {"sha": "b5824cdcdb5cbc99b8cc3019b28670e46ee4a8aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5824cdcdb5cbc99b8cc3019b28670e46ee4a8aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29fafb44b1de93c4f5000064ab06bd756b8499f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29fafb44b1de93c4f5000064ab06bd756b8499f9", "html_url": "https://github.com/rust-lang/rust/commit/29fafb44b1de93c4f5000064ab06bd756b8499f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29fafb44b1de93c4f5000064ab06bd756b8499f9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fbb45c3f3673091075a0a7fc91bbf8abe777f36", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbb45c3f3673091075a0a7fc91bbf8abe777f36", "html_url": "https://github.com/rust-lang/rust/commit/4fbb45c3f3673091075a0a7fc91bbf8abe777f36"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "107ab6b763d1030ba8c8de203c1dac8018fbfb7a", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/29fafb44b1de93c4f5000064ab06bd756b8499f9/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fafb44b1de93c4f5000064ab06bd756b8499f9/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=29fafb44b1de93c4f5000064ab06bd756b8499f9", "patch": "@@ -122,19 +122,25 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n         ebbs.sort_by_key(|ebb| func.offsets[*ebb]); // Ensure inst offsets always increase\n \n         let line_strings = &mut self.debug_context.dwarf.line_strings;\n+        let mut last_file = None;\n         let mut create_row_for_span = |line_program: &mut LineProgram, span: Span| {\n             let loc = tcx.sess.source_map().lookup_char_pos(span.lo());\n-            let file_id = line_program_add_file(line_program, line_strings, &loc.file.name);\n \n-            /*println!(\n-                \"srcloc {:>04X} {}:{}:{}\",\n-                line_program.row().address_offset,\n-                file.display(),\n-                loc.line,\n-                loc.col.to_u32()\n-            );*/\n+            // line_program_add_file is very slow.\n+            // Optimize for the common case of the current file not being changed.\n+            let current_file_changed = if let Some(last_file) = &mut last_file {\n+                // If the allocations are not equal, then the files may still be equal, but that\n+                // is not a problem, as this is just an optimization.\n+                !Lrc::ptr_eq(last_file, &loc.file)\n+            } else {\n+                true\n+            };\n+            if current_file_changed {\n+                let file_id = line_program_add_file(line_program, line_strings, &loc.file.name);\n+                line_program.row().file = file_id;\n+                last_file = Some(loc.file.clone());\n+            }\n \n-            line_program.row().file = file_id;\n             line_program.row().line = loc.line as u64;\n             line_program.row().column = loc.col.to_u32() as u64 + 1;\n             line_program.generate_row();"}]}