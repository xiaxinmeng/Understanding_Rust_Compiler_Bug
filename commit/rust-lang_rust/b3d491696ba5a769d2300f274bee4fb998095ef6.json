{"sha": "b3d491696ba5a769d2300f274bee4fb998095ef6", "node_id": "C_kwDOAAsO6NoAKGIzZDQ5MTY5NmJhNWE3NjlkMjMwMGYyNzRiZWU0ZmI5OTgwOTVlZjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-20T22:50:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-20T22:50:29Z"}, "message": "Rollup merge of #104634 - RalfJung:core-arch, r=Mark-Simulacrum\n\nmove core::arch into separate file\n\nThis works around https://github.com/rust-lang/rust/issues/104633 which otherwise leads to warnings in miri-test-libstd.", "tree": {"sha": "d31a8d1ecf57118eb46a82d066e5e2ab4810cebb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d31a8d1ecf57118eb46a82d066e5e2ab4810cebb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3d491696ba5a769d2300f274bee4fb998095ef6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjeq81CRBK7hj4Ov3rIwAAPmkIAA+6Sv+KWESdfqAD1MiEHPH0\noZWp6Ja+hdcELoub5yjWfR8FBzSWh/zgXXHdNGyFpD3wDLBOQdxDy8HDAsod/gBc\nU3+rSHa5u6s+JrQ0TWCHBB7UzXdV1CZJnJUNnpT+UPk15s2/Zjq6sii/XgCME6mg\njXJ9Ylofn0R6CqBs9Mi9YiRtLA1JVi4e1po9ZRoySVuzJZyazv9taSI9C1HY95ZD\nEFEJXZTjUGFzuqsLR7wIyxd3YULm3MnPvtJ+cDnbAUeqBg+ETyjJdshcy2hWoL4o\nIF05hh4AO0JmV2un/JmxQ8Ojs+hzG/YB3XP3AtPdbHJWeWN+DCYXFDStCMXkJfM=\n=GXyz\n-----END PGP SIGNATURE-----\n", "payload": "tree d31a8d1ecf57118eb46a82d066e5e2ab4810cebb\nparent ff72187b06ce65f4a3519985eea999844caf8ec0\nparent e19bc6eb8060395501c641c15f01d381a2818070\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668984629 +0100\ncommitter GitHub <noreply@github.com> 1668984629 +0100\n\nRollup merge of #104634 - RalfJung:core-arch, r=Mark-Simulacrum\n\nmove core::arch into separate file\n\nThis works around https://github.com/rust-lang/rust/issues/104633 which otherwise leads to warnings in miri-test-libstd.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3d491696ba5a769d2300f274bee4fb998095ef6", "html_url": "https://github.com/rust-lang/rust/commit/b3d491696ba5a769d2300f274bee4fb998095ef6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3d491696ba5a769d2300f274bee4fb998095ef6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff72187b06ce65f4a3519985eea999844caf8ec0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff72187b06ce65f4a3519985eea999844caf8ec0", "html_url": "https://github.com/rust-lang/rust/commit/ff72187b06ce65f4a3519985eea999844caf8ec0"}, {"sha": "e19bc6eb8060395501c641c15f01d381a2818070", "url": "https://api.github.com/repos/rust-lang/rust/commits/e19bc6eb8060395501c641c15f01d381a2818070", "html_url": "https://github.com/rust-lang/rust/commit/e19bc6eb8060395501c641c15f01d381a2818070"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "fc2a5b89c149814c22661e6c5537b221f16edfa9", "filename": "library/core/src/arch.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b3d491696ba5a769d2300f274bee4fb998095ef6/library%2Fcore%2Fsrc%2Farch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d491696ba5a769d2300f274bee4fb998095ef6/library%2Fcore%2Fsrc%2Farch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farch.rs?ref=b3d491696ba5a769d2300f274bee4fb998095ef6", "patch": "@@ -0,0 +1,30 @@\n+#![doc = include_str!(\"../../stdarch/crates/core_arch/src/core_arch_docs.md\")]\n+\n+#[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n+pub use crate::core_arch::arch::*;\n+\n+/// Inline assembly.\n+///\n+/// Refer to [rust by example] for a usage guide and the [reference] for\n+/// detailed information about the syntax and available options.\n+///\n+/// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n+/// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n+#[stable(feature = \"asm\", since = \"1.59.0\")]\n+#[rustc_builtin_macro]\n+pub macro asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+    /* compiler built-in */\n+}\n+\n+/// Module-level inline assembly.\n+///\n+/// Refer to [rust by example] for a usage guide and the [reference] for\n+/// detailed information about the syntax and available options.\n+///\n+/// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n+/// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n+#[stable(feature = \"global_asm\", since = \"1.59.0\")]\n+#[rustc_builtin_macro]\n+pub macro global_asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n+    /* compiler built-in */\n+}"}, {"sha": "e7ea558a9553447c6380e9715950c832b161fe43", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/b3d491696ba5a769d2300f274bee4fb998095ef6/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3d491696ba5a769d2300f274bee4fb998095ef6/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=b3d491696ba5a769d2300f274bee4fb998095ef6", "patch": "@@ -394,38 +394,8 @@ pub mod primitive;\n #[unstable(feature = \"stdsimd\", issue = \"48556\")]\n mod core_arch;\n \n-#[doc = include_str!(\"../../stdarch/crates/core_arch/src/core_arch_docs.md\")]\n #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-pub mod arch {\n-    #[stable(feature = \"simd_arch\", since = \"1.27.0\")]\n-    pub use crate::core_arch::arch::*;\n-\n-    /// Inline assembly.\n-    ///\n-    /// Refer to [rust by example] for a usage guide and the [reference] for\n-    /// detailed information about the syntax and available options.\n-    ///\n-    /// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n-    /// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n-    #[stable(feature = \"asm\", since = \"1.59.0\")]\n-    #[rustc_builtin_macro]\n-    pub macro asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n-        /* compiler built-in */\n-    }\n-\n-    /// Module-level inline assembly.\n-    ///\n-    /// Refer to [rust by example] for a usage guide and the [reference] for\n-    /// detailed information about the syntax and available options.\n-    ///\n-    /// [rust by example]: https://doc.rust-lang.org/nightly/rust-by-example/unsafe/asm.html\n-    /// [reference]: https://doc.rust-lang.org/nightly/reference/inline-assembly.html\n-    #[stable(feature = \"global_asm\", since = \"1.59.0\")]\n-    #[rustc_builtin_macro]\n-    pub macro global_asm(\"assembly template\", $(operands,)* $(options($(option),*))?) {\n-        /* compiler built-in */\n-    }\n-}\n+pub mod arch;\n \n // Pull in the `core_simd` crate directly into libcore. The contents of\n // `core_simd` are in a different repository: rust-lang/portable-simd."}]}