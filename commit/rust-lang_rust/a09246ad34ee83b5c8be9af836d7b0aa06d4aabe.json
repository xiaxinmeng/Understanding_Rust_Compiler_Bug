{"sha": "a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwOTI0NmFkMzRlZTgzYjVjOGJlOWFmODM2ZDdiMGFhMDZkNGFhYmU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-11-23T10:36:49Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-12-18T01:12:31Z"}, "message": "Approximate type aliases as public when determining impl publicity", "tree": {"sha": "7e4738ab281c48a21cf5f3ff8591290b8f434052", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e4738ab281c48a21cf5f3ff8591290b8f434052"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "html_url": "https://github.com/rust-lang/rust/commit/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ae31f60123584b3c40521177bb703022faa8c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ae31f60123584b3c40521177bb703022faa8c8", "html_url": "https://github.com/rust-lang/rust/commit/f8ae31f60123584b3c40521177bb703022faa8c8"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "a4c9874e74df7350b519cdad4a7c7a02d859f944", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "patch": "@@ -1128,11 +1128,21 @@ impl<'a, 'tcx: 'a, 'v> Visitor<'v> for SearchInterfaceForPrivateItemsVisitor<'a,\n                 def::DefPrimTy(..) | def::DefSelfTy(..) | def::DefTyParam(..) => {\n                     // Public\n                 }\n+                def::DefAssociatedTy(..) if self.is_quiet => {\n+                    // Conservatively approximate the whole type alias as public without\n+                    // recursing into its components when determining impl publicity.\n+                    return\n+                }\n                 def::DefStruct(def_id) | def::DefTy(def_id, _) |\n                 def::DefTrait(def_id) | def::DefAssociatedTy(def_id, _) => {\n                     // Non-local means public, local needs to be checked\n                     if let Some(node_id) = self.tcx.map.as_local_node_id(def_id) {\n                         if let Some(ast_map::NodeItem(ref item)) = self.tcx.map.find(node_id) {\n+                            if let (&hir::ItemTy(..), true) = (&item.node, self.is_quiet) {\n+                                // Conservatively approximate the whole type alias as public without\n+                                // recursing into its components when determining impl publicity.\n+                                return\n+                            }\n                             if item.vis != hir::Public {\n                                 if !self.is_quiet {\n                                     span_err!(self.tcx.sess, ty.span, E0446,"}, {"sha": "89be4d9789d4c7c007e91bcc708a8c1c49e235e7", "filename": "src/test/compile-fail/lint-visible-private-types.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe/src%2Ftest%2Fcompile-fail%2Flint-visible-private-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a09246ad34ee83b5c8be9af836d7b0aa06d4aabe/src%2Ftest%2Fcompile-fail%2Flint-visible-private-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-visible-private-types.rs?ref=a09246ad34ee83b5c8be9af836d7b0aa06d4aabe", "patch": "@@ -121,3 +121,22 @@ impl<T: ParamTrait<Private<isize>>>  //~ ERROR private type in public interface\n      ParamTrait<T> for Public<i8> {\n     fn foo() -> T { panic!() }\n }\n+\n+type PrivAlias = Public<i8>;\n+\n+trait PrivTrait2 {\n+    type Alias;\n+}\n+impl PrivTrait2 for Private<isize> {\n+    type Alias = Public<u8>;\n+}\n+\n+impl PubTrait for PrivAlias {\n+    fn bar(&self) -> Private<isize> { panic!() } //~ ERROR private type in public interface\n+    fn baz() -> Private<isize> { panic!() } //~ ERROR private type in public interface\n+}\n+\n+impl PubTrait for <Private<isize> as PrivTrait2>::Alias {\n+    fn bar(&self) -> Private<isize> { panic!() } //~ ERROR private type in public interface\n+    fn baz() -> Private<isize> { panic!() } //~ ERROR private type in public interface\n+}"}]}