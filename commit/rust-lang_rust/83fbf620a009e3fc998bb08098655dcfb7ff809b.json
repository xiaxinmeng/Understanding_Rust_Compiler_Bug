{"sha": "83fbf620a009e3fc998bb08098655dcfb7ff809b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZmJmNjIwYTAwOWUzZmM5OThiYjA4MDk4NjU1ZGNmYjdmZjgwOWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-08T05:35:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-08T05:35:39Z"}, "message": "Rollup merge of #63360 - brson:cz-help, r=Mark-Simulacrum\n\nUse consistent capitalization in -C/-Z help\n\nThis code could also use a pass to consistify the grammar, but not by me atm.", "tree": {"sha": "a1c309130cb147967e4d7af39efcf78bf457b967", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1c309130cb147967e4d7af39efcf78bf457b967"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83fbf620a009e3fc998bb08098655dcfb7ff809b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdS7SrCRBK7hj4Ov3rIwAAdHIIAHc6bFcEFGmVJ0l22XPZRhmA\nR7ErZ+XesFzVQ8ABK8JpnbhlH5Q7NU1GA3bBEdt0VSZZk0xhav1gGqhwuEsEXJra\nBiAHoE142bqyxvAg41s+0/Q+P7e6kDp3Y5JnNaoKofLbZFFU3mLSbI7RsWp3pSeC\nhr8LC9xi4lJjKgx9Qp/aH4XkGR26Tw0n0b4hCrqnOjh8bIGnKRbOZ0AWRafpXZZ8\nI01bPuGomt6h/tayvfkW5wUIoUt66XnAvESjWXW2RIzta73vM/UEr5Er8095pS/9\nzVw/TG4GtyjMTIuSt+IYy07Vb0fVaqhLHeD8NiEyFIo8gA0KzKN4qY5zuJx5vrI=\n=qlFf\n-----END PGP SIGNATURE-----\n", "payload": "tree a1c309130cb147967e4d7af39efcf78bf457b967\nparent d37393c9785e0c0a86782090d579a3c57c5e5862\nparent c03077b23accd0a5b074e298538bb0557b0be9da\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565242539 +0200\ncommitter GitHub <noreply@github.com> 1565242539 +0200\n\nRollup merge of #63360 - brson:cz-help, r=Mark-Simulacrum\n\nUse consistent capitalization in -C/-Z help\n\nThis code could also use a pass to consistify the grammar, but not by me atm.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83fbf620a009e3fc998bb08098655dcfb7ff809b", "html_url": "https://github.com/rust-lang/rust/commit/83fbf620a009e3fc998bb08098655dcfb7ff809b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83fbf620a009e3fc998bb08098655dcfb7ff809b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37393c9785e0c0a86782090d579a3c57c5e5862", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37393c9785e0c0a86782090d579a3c57c5e5862", "html_url": "https://github.com/rust-lang/rust/commit/d37393c9785e0c0a86782090d579a3c57c5e5862"}, {"sha": "c03077b23accd0a5b074e298538bb0557b0be9da", "url": "https://api.github.com/repos/rust-lang/rust/commits/c03077b23accd0a5b074e298538bb0557b0be9da", "html_url": "https://github.com/rust-lang/rust/commit/c03077b23accd0a5b074e298538bb0557b0be9da"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3536b2aa8fffe2831ea1dc038af7f6232bf9f8f5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83fbf620a009e3fc998bb08098655dcfb7ff809b/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83fbf620a009e3fc998bb08098655dcfb7ff809b/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=83fbf620a009e3fc998bb08098655dcfb7ff809b", "patch": "@@ -1155,7 +1155,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     passes: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n         \"a list of extra LLVM passes to run (space separated)\"),\n     llvm_args: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n-        \"a list of arguments to pass to llvm (space separated)\"),\n+        \"a list of arguments to pass to LLVM (space separated)\"),\n     save_temps: bool = (false, parse_bool, [UNTRACKED],\n         \"save all temporary output files during compilation\"),\n     rpath: bool = (false, parse_bool, [UNTRACKED],\n@@ -1208,7 +1208,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     default_linker_libraries: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n         \"allow the linker to link its default libraries\"),\n     linker_flavor: Option<LinkerFlavor> = (None, parse_linker_flavor, [UNTRACKED],\n-                                           \"Linker flavor\"),\n+                                           \"linker flavor\"),\n     linker_plugin_lto: LinkerPluginLto = (LinkerPluginLto::Disabled,\n         parse_linker_plugin_lto, [TRACKED],\n         \"generate build artifacts that are compatible with linker-based LTO.\"),\n@@ -1255,7 +1255,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     print_link_args: bool = (false, parse_bool, [UNTRACKED],\n         \"print the arguments passed to the linker\"),\n     print_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n-        \"prints the llvm optimization passes being run\"),\n+        \"prints the LLVM optimization passes being run\"),\n     ast_json: bool = (false, parse_bool, [UNTRACKED],\n         \"print the AST as JSON and halt\"),\n     threads: Option<usize> = (None, parse_opt_uint, [UNTRACKED],\n@@ -1375,11 +1375,11 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n         \"pass `-install_name @rpath/...` to the macOS linker\"),\n     sanitizer: Option<Sanitizer> = (None, parse_sanitizer, [TRACKED],\n-                                    \"Use a sanitizer\"),\n+                                    \"use a sanitizer\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n-        \"make Rustc print the total optimization fuel used by a crate\"),\n+        \"make rustc print the total optimization fuel used by a crate\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable\"),\n     pre_link_arg: Vec<String> = (vec![], parse_string_push, [UNTRACKED],\n@@ -1417,7 +1417,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"in dep-info output, omit targets for tracking dependencies of the dep-info files \\\n          themselves\"),\n     unpretty: Option<String> = (None, parse_unpretty, [UNTRACKED],\n-        \"Present the input source, unstable (and less-pretty) variants;\n+        \"present the input source, unstable (and less-pretty) variants;\n         valid types are any of the types for `--pretty`, as well as:\n         `expanded`, `expanded,identified`,\n         `expanded,hygiene` (with internal representations),"}]}