{"sha": "7608d06027a92ecd5255e760df3847e5418d5d31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MDhkMDYwMjdhOTJlY2Q1MjU1ZTc2MGRmMzg0N2U1NDE4ZDVkMzE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-11-13T16:25:15Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-11-26T14:58:17Z"}, "message": "debuginfo: Add script that allows to conveniently start LLDB in \"rust-mode\"", "tree": {"sha": "af5ab7461abbc6ac06722fe38c02b8e8b9bae63e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af5ab7461abbc6ac06722fe38c02b8e8b9bae63e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7608d06027a92ecd5255e760df3847e5418d5d31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7608d06027a92ecd5255e760df3847e5418d5d31", "html_url": "https://github.com/rust-lang/rust/commit/7608d06027a92ecd5255e760df3847e5418d5d31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7608d06027a92ecd5255e760df3847e5418d5d31/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f19e6d71cd53bf67c6c03dc5f96c17225276c3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f19e6d71cd53bf67c6c03dc5f96c17225276c3c6", "html_url": "https://github.com/rust-lang/rust/commit/f19e6d71cd53bf67c6c03dc5f96c17225276c3c6"}], "stats": {"total": 109, "additions": 104, "deletions": 5}, "files": [{"sha": "17ae845bf0773da92ce98f685375a92e3e709b2f", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -198,6 +198,8 @@ include $(CFG_SRC_DIR)mk/rustllvm.mk\n include $(CFG_SRC_DIR)mk/docs.mk\n # LLVM\n include $(CFG_SRC_DIR)mk/llvm.mk\n+# Rules for installing debugger scripts\n+include $(CFG_SRC_DIR)mk/debuggers.mk\n \n ######################################################################\n # Secondary makefiles, conditionalized for speed"}, {"sha": "aadc55ba6c4977dda86d5e5567c1ea6a8681b108", "filename": "mk/clean.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fclean.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fclean.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fclean.mk?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -63,6 +63,7 @@ clean-generic-$(2)-$(1):\n          -name '*.lib' -o \\\n          -name '*.dll' -o \\\n          -name '*.def' -o \\\n+         -name '*.py' -o \\\n          -name '*.bc' \\\n          \\) \\\n          | xargs rm -f\n@@ -78,7 +79,7 @@ define CLEAN_HOST_STAGE_N\n \n clean$(1)_H_$(2): \\\n \t    $$(foreach crate,$$(CRATES),clean$(1)_H_$(2)-lib-$$(crate)) \\\n-\t    $$(foreach tool,$$(TOOLS),clean$(1)_H_$(2)-tool-$$(tool))\n+\t    $$(foreach tool,$$(TOOLS) $$(DEBUGGER_BIN_SCRIPTS),clean$(1)_H_$(2)-tool-$$(tool))\n \t$$(Q)rm -fr $(2)/rt/libbacktrace\n \n clean$(1)_H_$(2)-tool-%:\n@@ -98,7 +99,7 @@ define CLEAN_TARGET_STAGE_N\n \n clean$(1)_T_$(2)_H_$(3): \\\n \t    $$(foreach crate,$$(CRATES),clean$(1)_T_$(2)_H_$(3)-lib-$$(crate)) \\\n-\t    $$(foreach tool,$$(TOOLS),clean$(1)_T_$(2)_H_$(3)-tool-$$(tool))\n+\t    $$(foreach tool,$$(TOOLS) $$(DEBUGGER_BIN_SCRIPTS),clean$(1)_T_$(2)_H_$(3)-tool-$$(tool))\n \t$$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/libmorestack.a\n \t$$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/libcompiler-rt.a\n \t$(Q)rm -f $$(TLIB$(1)_T_$(2)_H_$(3))/librun_pass_stage* # For unix"}, {"sha": "54955f06295fc168eb069bb170601d02ed96a54b", "filename": "mk/debuggers.mk", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fdebuggers.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fdebuggers.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdebuggers.mk?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -0,0 +1,59 @@\n+# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+######################################################################\n+# Copy debugger related scripts\n+######################################################################\n+\n+DEBUGGER_RUSTLIB_ETC_SCRIPTS=lldb_rust_formatters.py\n+DEBUGGER_BIN_SCRIPTS=rust-lldb\n+\n+DEBUGGER_RUSTLIB_ETC_SCRIPTS_ABS=$(foreach script,$(DEBUGGER_RUSTLIB_ETC_SCRIPTS), \\\n+                                     $(CFG_SRC_DIR)src/etc/$(script))\n+DEBUGGER_BIN_SCRIPTS_ABS=$(foreach script,$(DEBUGGER_BIN_SCRIPTS), \\\n+                             $(CFG_SRC_DIR)src/etc/$(script))\n+\n+DEBUGGER_SCRIPTS_ALL=$(DEBUGGER_RUSTLIB_ETC_SCRIPTS_ABS) $(DEBUGGER_BIN_SCRIPTS_ABS)\n+\n+# $(1) - the stage to copy to\n+# $(2) - the host triple\n+define DEF_INSTALL_DEBUGGER_SCRIPTS_HOST\n+\n+tmp/install-debugger-scripts$(1)_H_$(2).done: $$(DEBUGGER_SCRIPTS_ALL)\n+\t$(Q)mkdir -p $$(HBIN$(1)_H_$(2))\n+\t$(Q)mkdir -p $$(HLIB$(1)_H_$(2))/rustlib/etc\n+\t$(Q)install $(DEBUGGER_BIN_SCRIPTS_ABS) $$(HBIN$(1)_H_$(2))\n+\t$(Q)install $(DEBUGGER_RUSTLIB_ETC_SCRIPTS_ABS) $$(HLIB$(1)_H_$(2))/rustlib/etc\n+\t$(Q)touch $$@\n+endef\n+\n+# Expand host make-targets for all stages\n+$(foreach stage,$(STAGES), \\\n+  $(foreach host,$(CFG_HOST), \\\n+    $(eval $(call DEF_INSTALL_DEBUGGER_SCRIPTS_HOST,$(stage),$(host)))))\n+\n+# $(1) is the stage number\n+# $(2) is the target triple\n+# $(3) is the host triple\n+define DEF_INSTALL_DEBUGGER_SCRIPTS_TARGET\n+\n+tmp/install-debugger-scripts$(1)_T_$(2)_H_$(3).done: $$(DEBUGGER_SCRIPTS_ALL)\n+\t$(Q)mkdir -p $$(TBIN$(1)_T_$(2)_H_$(3))\n+\t$(Q)mkdir -p $$(TLIB$(1)_T_$(2)_H_$(3))/rustlib/etc\n+\t$(Q)install $(DEBUGGER_BIN_SCRIPTS_ABS) $$(TBIN$(1)_T_$(2)_H_$(3))\n+\t$(Q)install $(DEBUGGER_RUSTLIB_ETC_SCRIPTS_ABS) $$(TLIB$(1)_T_$(2)_H_$(3))/rustlib/etc\n+\t$(Q)touch $$@\n+endef\n+\n+# Expand target make-targets for all stages\n+$(foreach stage,$(STAGES), \\\n+  $(foreach target,$(CFG_TARGET), \\\n+    $(foreach host,$(CFG_HOST), \\\n+      $(eval $(call DEF_INSTALL_DEBUGGER_SCRIPTS_TARGET,$(stage),$(target),$(host))))))"}, {"sha": "4aed1cea9ca0987dd637ffbdd1a5fdac70e2307c", "filename": "mk/main.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -356,7 +356,8 @@ HSREQ$(1)_H_$(3) = $$(HBIN$(1)_H_$(3))/rustc$$(X_$(3))\n else\n HSREQ$(1)_H_$(3) = \\\n \t$$(HBIN$(1)_H_$(3))/rustc$$(X_$(3)) \\\n-\t$$(MKFILE_DEPS)\n+\t$$(MKFILE_DEPS) \\\n+\ttmp/install-debugger-scripts$(1)_H_$(3).done\n endif\n \n # Prerequisites for using the stageN compiler to build target artifacts\n@@ -370,7 +371,8 @@ TSREQ$(1)_T_$(2)_H_$(3) = \\\n SREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t$$(foreach dep,$$(TARGET_CRATES), \\\n-\t    $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(dep))\n+\t    $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(dep)) \\\n+\ttmp/install-debugger-scripts$(1)_T_$(2)_H_$(3).done\n \n # Prerequisites for a working stageN compiler and complete set of target\n # libraries"}, {"sha": "d404d3d2950e04a931740f3e926975ad4f97efd2", "filename": "mk/prepare.mk", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -155,7 +155,7 @@ prepare-base-$(1): PREPARE_DEST_LIB_DIR=$$(PREPARE_DEST_DIR)/$$(CFG_LIBDIR_RELAT\n prepare-base-$(1): PREPARE_DEST_MAN_DIR=$$(PREPARE_DEST_DIR)/share/man/man1\n prepare-base-$(1): prepare-everything-$(1)\n \n-prepare-everything-$(1): prepare-host-$(1) prepare-targets-$(1)\n+prepare-everything-$(1): prepare-host-$(1) prepare-targets-$(1) prepare-debugger-scripts-$(1)\n \n prepare-host-$(1): prepare-host-tools-$(1)\n \n@@ -167,8 +167,13 @@ prepare-host-tools-$(1): \\\n prepare-host-dirs-$(1): prepare-maybe-clean-$(1)\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_BIN_DIR))\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_LIB_DIR))\n+\t$$(call PREPARE_DIR,$$(PREPARE_DEST_LIB_DIR)/rustlib/etc)\n \t$$(call PREPARE_DIR,$$(PREPARE_DEST_MAN_DIR))\n \n+prepare-debugger-scripts-$(1): prepare-host-dirs-$(1) $(DEBUGGER_SCRIPTS_ALL)\n+\t$$(Q)$$(PREPARE_BIN_CMD) $(DEBUGGER_BIN_SCRIPTS_ABS) $$(PREPARE_DEST_BIN_DIR)\n+\t$$(Q)$$(PREPARE_LIB_CMD) $(DEBUGGER_RUSTLIB_ETC_SCRIPTS_ABS) $$(PREPARE_DEST_LIB_DIR)/rustlib/etc\n+\n $$(foreach tool,$$(PREPARE_TOOLS), \\\n   $$(foreach host,$$(CFG_HOST), \\\n       $$(eval $$(call DEF_PREPARE_HOST_TOOL,$$(tool),$$(PREPARE_STAGE),$$(host),$(1)))))"}, {"sha": "19f36df7dbab4f433b2cd3f90c13e63cd991a29e", "filename": "src/etc/rust-lldb", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7608d06027a92ecd5255e760df3847e5418d5d31/src%2Fetc%2Frust-lldb", "raw_url": "https://github.com/rust-lang/rust/raw/7608d06027a92ecd5255e760df3847e5418d5d31/src%2Fetc%2Frust-lldb", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Frust-lldb?ref=7608d06027a92ecd5255e760df3847e5418d5d31", "patch": "@@ -0,0 +1,30 @@\n+#!/bin/sh\n+# Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# Exit if anything fails\n+set -e\n+\n+# Create a tempfile containing the LLDB script we want to execute on startup\n+TMPFILE=`mktemp /tmp/rust-lldb-commands.XXXXXX`\n+\n+# Make sure to delete the tempfile no matter what\n+trap \"rm -f $TMPFILE; exit\" INT TERM EXIT\n+\n+# Find out where to look for the pretty printer Python module\n+RUSTC_SYSROOT=`rustc -Zprint-sysroot`\n+\n+# Write the LLDB script to the tempfile\n+echo \"command script import \\\"$RUSTC_SYSROOT/lib/rustlib/etc/lldb_rust_formatters.py\\\"\" >> $TMPFILE\n+echo \"type summary add --no-value --python-function lldb_rust_formatters.print_val -x \\\".*\\\" --category Rust\" >> $TMPFILE\n+echo \"type category enable Rust\" >> $TMPFILE\n+\n+# Call LLDB with the script added to the argument list\n+lldb --source-before-file=\"$TMPFILE\" \"$@\""}]}