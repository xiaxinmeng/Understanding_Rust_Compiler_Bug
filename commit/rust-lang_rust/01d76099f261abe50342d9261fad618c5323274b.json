{"sha": "01d76099f261abe50342d9261fad618c5323274b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDc2MDk5ZjI2MWFiZTUwMzQyZDkyNjFmYWQ2MThjNTMyMzI3NGI=", "commit": {"author": {"name": "Tang Chenglong", "email": "ideami@outlook.com", "date": "2016-03-16T15:45:28Z"}, "committer": {"name": "Tang Chenglong", "email": "ideami@outlook.com", "date": "2016-03-16T15:45:28Z"}, "message": "docs: One typo\n\nI think it's a mistake of spelling.", "tree": {"sha": "4223e472cd94c3f2c2c935ede9f4c85e159f0cfa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4223e472cd94c3f2c2c935ede9f4c85e159f0cfa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d76099f261abe50342d9261fad618c5323274b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d76099f261abe50342d9261fad618c5323274b", "html_url": "https://github.com/rust-lang/rust/commit/01d76099f261abe50342d9261fad618c5323274b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d76099f261abe50342d9261fad618c5323274b/comments", "author": {"login": "tclfs", "id": 14888862, "node_id": "MDQ6VXNlcjE0ODg4ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/14888862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tclfs", "html_url": "https://github.com/tclfs", "followers_url": "https://api.github.com/users/tclfs/followers", "following_url": "https://api.github.com/users/tclfs/following{/other_user}", "gists_url": "https://api.github.com/users/tclfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tclfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tclfs/subscriptions", "organizations_url": "https://api.github.com/users/tclfs/orgs", "repos_url": "https://api.github.com/users/tclfs/repos", "events_url": "https://api.github.com/users/tclfs/events{/privacy}", "received_events_url": "https://api.github.com/users/tclfs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tclfs", "id": 14888862, "node_id": "MDQ6VXNlcjE0ODg4ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/14888862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tclfs", "html_url": "https://github.com/tclfs", "followers_url": "https://api.github.com/users/tclfs/followers", "following_url": "https://api.github.com/users/tclfs/following{/other_user}", "gists_url": "https://api.github.com/users/tclfs/gists{/gist_id}", "starred_url": "https://api.github.com/users/tclfs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tclfs/subscriptions", "organizations_url": "https://api.github.com/users/tclfs/orgs", "repos_url": "https://api.github.com/users/tclfs/repos", "events_url": "https://api.github.com/users/tclfs/events{/privacy}", "received_events_url": "https://api.github.com/users/tclfs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e68d40edf49496e8d7a9ab03d75c9de2096446c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e68d40edf49496e8d7a9ab03d75c9de2096446c5", "html_url": "https://github.com/rust-lang/rust/commit/e68d40edf49496e8d7a9ab03d75c9de2096446c5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "590c7e848190a120632d5c1e8bfaabeae75ef35e", "filename": "src/doc/book/guessing-game.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/01d76099f261abe50342d9261fad618c5323274b/src%2Fdoc%2Fbook%2Fguessing-game.md", "raw_url": "https://github.com/rust-lang/rust/raw/01d76099f261abe50342d9261fad618c5323274b/src%2Fdoc%2Fbook%2Fguessing-game.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fguessing-game.md?ref=01d76099f261abe50342d9261fad618c5323274b", "patch": "@@ -912,7 +912,7 @@ returned by `parse()`, this is an `enum`  like `Ordering`, but in this case,\n each variant has some data associated with it: `Ok` is a success, and `Err` is a\n failure. Each contains more information: the successfully parsed integer, or an\n error type. In this case, we `match` on `Ok(num)`, which sets the name `num` to\n-the unwrapped `Ok` value (ythe integer), and then we  return it on the\n+the unwrapped `Ok` value (the integer), and then we  return it on the\n right-hand side. In the `Err` case, we don\u2019t care what kind of error it is, so\n we just use the catch all `_` instead of a name. This catches everything that\n isn't `Ok`, and `continue` lets us move to the next iteration of the loop; in"}]}