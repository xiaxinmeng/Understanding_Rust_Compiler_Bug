{"sha": "f38800724906ef7cf879a8b242f1df4f031a4217", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzODgwMDcyNDkwNmVmN2NmODc5YThiMjQyZjFkZjRmMDMxYTQyMTc=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-06-02T04:07:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-02T04:07:25Z"}, "message": "Rollup merge of #72891 - lzutao:wrapping_int-max, r=sfackler\n\nAdd associated consts MIN/MAX for Wrapping<Int>", "tree": {"sha": "c333f103e77f75352f09beaab681d146eec3cb14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c333f103e77f75352f09beaab681d146eec3cb14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f38800724906ef7cf879a8b242f1df4f031a4217", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe1dB9CRBK7hj4Ov3rIwAAdHIIAEsyhCKYTCO25WoXqMmZnzIU\nhtE4lkqhJrNVZnTcBs2Cs/e2ZGOY6ANogpJ6jOibgciSJnEHNK/tCXQYNBkMm9TB\n70BQBQRvGeLWjRoIr1ay4tL5xEEM+x3e8GyKgpie9auQK0K8zo/jSxuJ6c/m2q1O\nYJaYeS1ycZCWFMx4/iGKGnG02Ot7FtH0SMWAFALOQYn6PdAilfmp/mP94T6iPab2\n8PiFAFLV1CRWEsDfJSY5DVu+nT96aFDaO65/CPnwSYHreRElMO4wK1Mrwmho+HC1\nE+XrkTOnGYue+JuPqQ5Lo3mCLunppG9AgVG/ujsBDKbYX+oO6V4Dngy/ij6ajZ4=\n=eSns\n-----END PGP SIGNATURE-----\n", "payload": "tree c333f103e77f75352f09beaab681d146eec3cb14\nparent bec91cab569a5ec0d754b1d08cd18c1a8933d05d\nparent b2c44696ad792bc2a2b2ee76e74e7dfdbef80e98\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1591070845 +0900\ncommitter GitHub <noreply@github.com> 1591070845 +0900\n\nRollup merge of #72891 - lzutao:wrapping_int-max, r=sfackler\n\nAdd associated consts MIN/MAX for Wrapping<Int>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f38800724906ef7cf879a8b242f1df4f031a4217", "html_url": "https://github.com/rust-lang/rust/commit/f38800724906ef7cf879a8b242f1df4f031a4217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f38800724906ef7cf879a8b242f1df4f031a4217/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bec91cab569a5ec0d754b1d08cd18c1a8933d05d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bec91cab569a5ec0d754b1d08cd18c1a8933d05d", "html_url": "https://github.com/rust-lang/rust/commit/bec91cab569a5ec0d754b1d08cd18c1a8933d05d"}, {"sha": "b2c44696ad792bc2a2b2ee76e74e7dfdbef80e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2c44696ad792bc2a2b2ee76e74e7dfdbef80e98", "html_url": "https://github.com/rust-lang/rust/commit/b2c44696ad792bc2a2b2ee76e74e7dfdbef80e98"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "bb648ba8c25de69e6eee3b8f9e34a214b973f355", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f38800724906ef7cf879a8b242f1df4f031a4217/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f38800724906ef7cf879a8b242f1df4f031a4217/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=f38800724906ef7cf879a8b242f1df4f031a4217", "patch": "@@ -337,14 +337,10 @@ Basic usage:\n #![feature(wrapping_int_impl)]\n use std::num::Wrapping;\n \n-assert_eq!(<Wrapping<\", stringify!($t), \">>::min_value(), \",\n-\"Wrapping(\", stringify!($t), \"::min_value()));\n+assert_eq!(<Wrapping<\", stringify!($t), \">>::MIN, Wrapping(\", stringify!($t), \"::MIN));\n ```\"),\n                 #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n-                #[inline]\n-                pub const fn min_value() -> Self {\n-                    Wrapping(<$t>::min_value())\n-                }\n+                pub const MIN: Self = Self(<$t>::MIN);\n             }\n \n             doc_comment! {\n@@ -358,14 +354,10 @@ Basic usage:\n #![feature(wrapping_int_impl)]\n use std::num::Wrapping;\n \n-assert_eq!(<Wrapping<\", stringify!($t), \">>::max_value(), \",\n-\"Wrapping(\", stringify!($t), \"::max_value()));\n+assert_eq!(<Wrapping<\", stringify!($t), \">>::MAX, Wrapping(\", stringify!($t), \"::MAX));\n ```\"),\n                 #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n-                #[inline]\n-                pub const fn max_value() -> Self {\n-                    Wrapping(<$t>::max_value())\n-                }\n+                pub const MAX: Self = Self(<$t>::MAX);\n             }\n \n             doc_comment! {"}]}