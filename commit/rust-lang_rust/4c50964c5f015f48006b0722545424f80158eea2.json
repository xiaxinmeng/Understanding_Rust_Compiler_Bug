{"sha": "4c50964c5f015f48006b0722545424f80158eea2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNTA5NjRjNWYwMTVmNDgwMDZiMDcyMjU0NTQyNGY4MDE1OGVlYTI=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-10T23:21:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-10T23:21:22Z"}, "message": "Rollup merge of #55822 - davidtwco:issue-55394, r=pnkfelix\n\nICE with #![feature(nll)] and elided lifetimes\n\nFixes #55394.\n\nThis commit fixes an ICE and determines the correct return span in cases\nwith a method implemented on a struct with an an elided lifetime.\n\nr? @pnkfelix", "tree": {"sha": "c6e1589d46e1d08ee50827325cceab2e94405f20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e1589d46e1d08ee50827325cceab2e94405f20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c50964c5f015f48006b0722545424f80158eea2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb52fyCRBK7hj4Ov3rIwAAdHIIAK8ZyMIh87ihOIVgtc2RZq37\nMknLMfLyGiBGoNuran4gB0jb9K6H0P8OgvJGVqR2K0Dn5QxOZTzZvvgkckmtD5Vm\nuONc/y0FKwIkQhKiMWpIueItBgTKIj4mz6RkQY2c2BMDyOQd5sYN8IQY44e0FDEf\nFwZaCObayIs3jNzoZgSECN6SVpsf/fiROPY4zUp3LjImmix4YgOazvF1pLtRpZW5\nErUCH2/Mc2uo1aM+/GRDrdEBNcnj1lqjixMR68q9SyN0OwxdQ5s7O10UUnTypjm9\nfAcytUT+ZSkhRb7m54eT0WUET0bo7FbN0EuekB0c4dKs45rQHjKKg93lnA2JZjE=\n=wr2P\n-----END PGP SIGNATURE-----\n", "payload": "tree c6e1589d46e1d08ee50827325cceab2e94405f20\nparent c4ca49aebd3a25c080cdc8efa64586637b90c90b\nparent e6a466e60c4660d8a74050189286e258918311e6\nauthor Pietro Albini <pietro@pietroalbini.org> 1541892082 +0100\ncommitter GitHub <noreply@github.com> 1541892082 +0100\n\nRollup merge of #55822 - davidtwco:issue-55394, r=pnkfelix\n\nICE with #![feature(nll)] and elided lifetimes\n\nFixes #55394.\n\nThis commit fixes an ICE and determines the correct return span in cases\nwith a method implemented on a struct with an an elided lifetime.\n\nr? @pnkfelix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c50964c5f015f48006b0722545424f80158eea2", "html_url": "https://github.com/rust-lang/rust/commit/4c50964c5f015f48006b0722545424f80158eea2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c50964c5f015f48006b0722545424f80158eea2/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4ca49aebd3a25c080cdc8efa64586637b90c90b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ca49aebd3a25c080cdc8efa64586637b90c90b", "html_url": "https://github.com/rust-lang/rust/commit/c4ca49aebd3a25c080cdc8efa64586637b90c90b"}, {"sha": "e6a466e60c4660d8a74050189286e258918311e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a466e60c4660d8a74050189286e258918311e6", "html_url": "https://github.com/rust-lang/rust/commit/e6a466e60c4660d8a74050189286e258918311e6"}], "stats": {"total": 71, "additions": 55, "deletions": 16}, "files": [{"sha": "a32fb0503a814e6ba74f7e65f3134091de8eded8", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4c50964c5f015f48006b0722545424f80158eea2/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c50964c5f015f48006b0722545424f80158eea2/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=4c50964c5f015f48006b0722545424f80158eea2", "patch": "@@ -687,22 +687,24 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         let mir_node_id = tcx.hir.as_local_node_id(mir_def_id).expect(\"non-local mir\");\n \n-        let (return_span, mir_description) =\n-            if let hir::ExprKind::Closure(_, _, _, span, gen_move) =\n-                tcx.hir.expect_expr(mir_node_id).node\n-            {\n-                (\n-                    tcx.sess.source_map().end_point(span),\n-                    if gen_move.is_some() {\n-                        \" of generator\"\n-                    } else {\n-                        \" of closure\"\n-                    },\n-                )\n-            } else {\n-                // unreachable?\n-                (mir.span, \"\")\n-            };\n+        let (return_span, mir_description) = match tcx.hir.get(mir_node_id) {\n+            hir::Node::Expr(hir::Expr {\n+                node: hir::ExprKind::Closure(_, _, _, span, gen_move),\n+                ..\n+            }) => (\n+                tcx.sess.source_map().end_point(*span),\n+                if gen_move.is_some() {\n+                    \" of generator\"\n+                } else {\n+                    \" of closure\"\n+                },\n+            ),\n+            hir::Node::ImplItem(hir::ImplItem {\n+                node: hir::ImplItemKind::Method(method_sig, _),\n+                ..\n+            }) => (method_sig.decl.output.span(), \"\"),\n+            _ => (mir.span, \"\"),\n+        };\n \n         Some(RegionName {\n             // This counter value will already have been used, so this function will increment it"}, {"sha": "452fc88d1ecdd07083f7b2f63c5d187b1e02b681", "filename": "src/test/ui/nll/issue-55394.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4c50964c5f015f48006b0722545424f80158eea2/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c50964c5f015f48006b0722545424f80158eea2/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs?ref=4c50964c5f015f48006b0722545424f80158eea2", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+struct Bar;\n+\n+struct Foo<'s> {\n+    bar: &'s mut Bar,\n+}\n+\n+impl Foo<'_> {\n+    fn new(bar: &mut Bar) -> Self {\n+        Foo { bar }\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "284d7afa6fd23cc38056422be695d5ec9a35daea", "filename": "src/test/ui/nll/issue-55394.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c50964c5f015f48006b0722545424f80158eea2/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4c50964c5f015f48006b0722545424f80158eea2/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr?ref=4c50964c5f015f48006b0722545424f80158eea2", "patch": "@@ -0,0 +1,12 @@\n+error: unsatisfied lifetime constraints\n+  --> $DIR/issue-55394.rs:21:9\n+   |\n+LL |     fn new(bar: &mut Bar) -> Self {\n+   |                 -            ---- return type is Foo<'2>\n+   |                 |\n+   |                 let's call the lifetime of this reference `'1`\n+LL |         Foo { bar }\n+   |         ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`\n+\n+error: aborting due to previous error\n+"}]}