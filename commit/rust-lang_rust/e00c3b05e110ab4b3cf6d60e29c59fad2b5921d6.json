{"sha": "e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMGMzYjA1ZTExMGFiNGIzY2Y2ZDYwZTI5YzU5ZmFkMmI1OTIxZDY=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2012-12-11T15:57:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-17T03:27:06Z"}, "message": "priority_queue: fix to_sorted_vec off-by-one error", "tree": {"sha": "c51a4c436e93e38b340c8f8e84135a691412bb35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51a4c436e93e38b340c8f8e84135a691412bb35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6", "html_url": "https://github.com/rust-lang/rust/commit/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b13bf75306d7b5645531a0eb273b9ce9805e009", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b13bf75306d7b5645531a0eb273b9ce9805e009", "html_url": "https://github.com/rust-lang/rust/commit/8b13bf75306d7b5645531a0eb273b9ce9805e009"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "35d238b4d7cc1448708d0b066266edfaaa002f30", "filename": "src/libstd/priority_queue.rs", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6/src%2Flibstd%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6/src%2Flibstd%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpriority_queue.rs?ref=e00c3b05e110ab4b3cf6d60e29c59fad2b5921d6", "patch": "@@ -78,10 +78,10 @@ impl <T: Copy Ord> PriorityQueue<T> {\n     /// Consume the PriorityQueue and return a vector in sorted (ascending) order\n     pure fn to_sorted_vec(self) -> ~[T] {\n         let mut q = self;\n-        let mut end = q.len() - 1;\n-        while end > 0 {\n-            q.data[end] <-> q.data[0];\n+        let mut end = q.len();\n+        while end > 1 {\n             end -= 1;\n+            q.data[end] <-> q.data[0];\n             unsafe { q.siftup_range(0, end) } // purity-checking workaround\n         }\n         q.to_vec()\n@@ -206,10 +206,27 @@ mod tests {\n         assert heap.len() == 5;\n     }\n \n+    fn check_to_vec(data: ~[int]) {\n+        let heap = from_vec(data);\n+        assert merge_sort(heap.to_vec(), le) == merge_sort(data, le);\n+        assert heap.to_sorted_vec() == merge_sort(data, le);\n+    }\n+\n     #[test]\n-    fn test_to_sorted_vec() {\n-        let data = ~[2, 4, 6, 2, 1, 8, 10, 3, 5, 7, 0, 9, 1];\n-        assert from_vec(data).to_sorted_vec() == merge_sort(data, le);\n+    fn test_to_vec() {\n+        check_to_vec(~[]);\n+        check_to_vec(~[5]);\n+        check_to_vec(~[3, 2]);\n+        check_to_vec(~[2, 3]);\n+        check_to_vec(~[5, 1, 2]);\n+        check_to_vec(~[1, 100, 2, 3]);\n+        check_to_vec(~[1, 3, 5, 7, 9, 2, 4, 6, 8, 0]);\n+        check_to_vec(~[2, 4, 6, 2, 1, 8, 10, 3, 5, 7, 0, 9, 1]);\n+        check_to_vec(~[9, 11, 9, 9, 9, 9, 11, 2, 3, 4, 11, 9, 0, 0, 0, 0]);\n+        check_to_vec(~[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]);\n+        check_to_vec(~[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]);\n+        check_to_vec(~[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 1, 2]);\n+        check_to_vec(~[5, 4, 3, 2, 1, 5, 4, 3, 2, 1, 5, 4, 3, 2, 1]);\n     }\n \n     #[test]\n@@ -237,11 +254,4 @@ mod tests {\n         let mut heap = from_vec::<int>(~[]);\n         heap.replace(5);\n     }\n-\n-    #[test]\n-    fn test_to_vec() {\n-        let data = ~[1, 3, 5, 7, 9, 2, 4, 6, 8, 0];\n-        let heap = from_vec(copy data);\n-        assert merge_sort(heap.to_vec(), le) == merge_sort(data, le);\n-    }\n }"}]}