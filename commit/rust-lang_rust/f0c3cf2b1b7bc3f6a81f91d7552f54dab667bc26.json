{"sha": "f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYzNjZjJiMWI3YmMzZjZhODFmOTFkNzU1MmY1NGRhYjY2N2JjMjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-04T12:18:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-04T12:18:08Z"}, "message": "cover some more nearby cases", "tree": {"sha": "38f8bb3dee26bd3cd8d483540438af10aad29187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38f8bb3dee26bd3cd8d483540438af10aad29187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "html_url": "https://github.com/rust-lang/rust/commit/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6db7e34ab526abdadbff4e85701f55ce707687b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6db7e34ab526abdadbff4e85701f55ce707687b8", "html_url": "https://github.com/rust-lang/rust/commit/6db7e34ab526abdadbff4e85701f55ce707687b8"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "d5cde7034116c2053d41746adee0368a499e9fcb", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -524,7 +524,7 @@ impl DepGraph {\n             edge_list_indices.push((start, end));\n         }\n \n-        debug_assert!(edge_list_data.len() <= ::std::u32::MAX as usize);\n+        debug_assert!(edge_list_data.len() <= u32::MAX as usize);\n         debug_assert_eq!(edge_list_data.len(), total_edge_count);\n \n         SerializedDepGraph { nodes, fingerprints, edge_list_indices, edge_list_data }"}, {"sha": "7a5a417919d509f9a2def41e762452db1c6f1a8d", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -7,7 +7,6 @@ use rustc_span::DUMMY_SP;\n \n use std::cmp;\n use std::fmt;\n-use std::i128;\n use std::iter;\n use std::mem;\n use std::ops::Bound;\n@@ -1001,7 +1000,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                     }\n                 }\n \n-                let (mut min, mut max) = (i128::max_value(), i128::min_value());\n+                let (mut min, mut max) = (i128::MAX, i128::MIN);\n                 let discr_type = def.repr.discr_type();\n                 let bits = Integer::from_attr(self, discr_type).size().bits();\n                 for (i, discr) in def.discriminants(tcx) {\n@@ -1021,7 +1020,7 @@ impl<'tcx> LayoutCx<'tcx, TyCtxt<'tcx>> {\n                     }\n                 }\n                 // We might have no inhabited variants, so pretend there's at least one.\n-                if (min, max) == (i128::max_value(), i128::min_value()) {\n+                if (min, max) == (i128::MAX, i128::MIN) {\n                     min = 0;\n                     max = 0;\n                 }"}, {"sha": "4829955cb70c411ff4d3d183e48a2489ab92ec33", "filename": "src/librustc/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint%2Fpretty.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -920,7 +920,7 @@ pub trait PrettyPrinter<'tcx>:\n             }\n             (ConstValue::Scalar(Scalar::Raw { data, .. }), ty::Uint(ui)) => {\n                 let bit_size = Integer::from_attr(&self.tcx(), UnsignedInt(*ui)).size();\n-                let max = truncate(u128::max_value(), bit_size);\n+                let max = truncate(u128::MAX, bit_size);\n \n                 let ui_str = ui.name_str();\n                 if data == max {"}, {"sha": "5e36e4df698edf00228b9edef27c67c995ec5b5a", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -92,7 +92,7 @@ struct AbsoluteBytePos(u32);\n \n impl AbsoluteBytePos {\n     fn new(pos: usize) -> AbsoluteBytePos {\n-        debug_assert!(pos <= ::std::u32::MAX as usize);\n+        debug_assert!(pos <= u32::MAX as usize);\n         AbsoluteBytePos(pos as u32)\n     }\n "}, {"sha": "62d2b4ae2039768479b2e57ee793002121ecc77a", "filename": "src/librustc/ty/util.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -50,11 +50,11 @@ fn signed_min(size: Size) -> i128 {\n }\n \n fn signed_max(size: Size) -> i128 {\n-    i128::max_value() >> (128 - size.bits())\n+    i128::MAX >> (128 - size.bits())\n }\n \n fn unsigned_max(size: Size) -> u128 {\n-    u128::max_value() >> (128 - size.bits())\n+    u128::MAX >> (128 - size.bits())\n }\n \n fn int_size_and_signed<'tcx>(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>) -> (Size, bool) {\n@@ -77,7 +77,7 @@ impl<'tcx> Discr<'tcx> {\n             let min = signed_min(size);\n             let max = signed_max(size);\n             let val = sign_extend(self.val, size) as i128;\n-            assert!(n < (i128::max_value() as u128));\n+            assert!(n < (i128::MAX as u128));\n             let n = n as i128;\n             let oflo = val > max - n;\n             let val = if oflo { min + (n - (max - val) - 1) } else { val + n };"}, {"sha": "b4e33b9502e690d1964a7e68cd34e829cdeb68e4", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=f0c3cf2b1b7bc3f6a81f91d7552f54dab667bc26", "patch": "@@ -16,7 +16,6 @@ use std::borrow::Borrow;\n use std::fmt;\n use std::io;\n use std::path::PathBuf;\n-use std::usize;\n \n pub use self::at_location::{FlowAtLocation, FlowsAtLocation};\n pub(crate) use self::drop_flag_effects::*;"}]}