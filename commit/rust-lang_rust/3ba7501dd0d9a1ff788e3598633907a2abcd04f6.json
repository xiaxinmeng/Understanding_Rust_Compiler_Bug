{"sha": "3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "node_id": "C_kwDOAAsO6NoAKDNiYTc1MDFkZDBkOWExZmY3ODhlMzU5ODYzMzkwN2EyYWJjZDA0ZjY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-14T06:43:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-14T06:43:45Z"}, "message": "Auto merge of #14342 - davidbarsky:davidbarsky/add-workspace-source-to-status, r=lnicola\n\nAdd path of workspace root folders to status output\n\nHi folks! Just a quick addition to the status output. There are some colleagues of mine who use a mix of Buck and Cargo. A person spent a bit of time this past week trying to figure out there the `rust-project.json` was coming from and pointed out that `rust-analyzer: Status` could be a good place to put this information. rust-analyzer doesn't seem to record the full path of the `Cargo.toml` or the `rust-project.json`, just the root directory. While not perfect, this should be enough for people to unblock themselves on. Here's an example of `rust-analyzer: Status` on the rust-analyzer repo:\n\n```\nWorkspaces:\nLoaded 192 packages across 1 workspace.\nWorkspace roots: [AbsPath(\"/Users/dbarsky/Developer/rust-analyzer\")]\nAnalysis:\n57mb of files\n0b of index symbols (0)\n2514 trees, 128 preserved\n29535 trees, 128 preserved (Macros)\n0b in total\n\nFile info:\nCrate: rust_analyzer(CrateId(131))\nDependencies: proc_macro=CrateId(5), core=CrateId(2), alloc=CrateId(0), std=CrateId(7), test=CrateId(9), always_assert=CrateId(12), anyhow=CrateId(13), cfg=CrateId(25), crossbeam_channel=CrateId(35), dissimilar=CrateId(41), expect_test=CrateId(46), flycheck=CrateId(50), hir=CrateId(56), hir_def=CrateId(57), hir_ty=CrateId(59), ide=CrateId(63), ide_db=CrateId(66), ide_ssr=CrateId(68), itertools=CrateId(73), jod_thread=CrateId(75), lsp_server=CrateId(83), lsp_types=CrateId(85), mbe=CrateId(87), num_cpus=CrateId(96), oorandom=CrateId(99), parking_lot=CrateId(102), proc_macro_api=CrateId(110), proc_macro_srv=CrateId(111), profile=CrateId(118), project_model=CrateId(119), rayon=CrateId(125), rustc_hash=CrateId(136), scip=CrateId(141), serde=CrateId(145), serde_json=CrateId(147), sourcegen=CrateId(153), stdx=CrateId(155), syntax=CrateId(158), test_utils=CrateId(159), threadpool=CrateId(165), toolchain=CrateId(170), tracing=CrateId(171), tracing_log=CrateId(174), tracing_subscriber=CrateId(175), tracing_tree=CrateId(176), tt=CrateId(177), vfs=CrateId(188), vfs_notify=CrateId(189), xflags=CrateId(192), xshell=CrateId(194)\n```", "tree": {"sha": "d83141410c995f326e725460275c1cb9dda738b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d83141410c995f326e725460275c1cb9dda738b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "html_url": "https://github.com/rust-lang/rust/commit/3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ba7501dd0d9a1ff788e3598633907a2abcd04f6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce4f79f327b4bed56eca8cffa7c893a64256e111", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce4f79f327b4bed56eca8cffa7c893a64256e111", "html_url": "https://github.com/rust-lang/rust/commit/ce4f79f327b4bed56eca8cffa7c893a64256e111"}, {"sha": "677c0eeccbc1d8bb5e05d47476b3b77592b7e4bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/677c0eeccbc1d8bb5e05d47476b3b77592b7e4bb", "html_url": "https://github.com/rust-lang/rust/commit/677c0eeccbc1d8bb5e05d47476b3b77592b7e4bb"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "862d1a8b4aaf408d16b5cd61940414aef9ccec69", "filename": "crates/project-model/src/workspace.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ba7501dd0d9a1ff788e3598633907a2abcd04f6/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba7501dd0d9a1ff788e3598633907a2abcd04f6/crates%2Fproject-model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fworkspace.rs?ref=3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "patch": "@@ -450,6 +450,14 @@ impl ProjectWorkspace {\n         }\n     }\n \n+    pub fn workspace_definition_path(&self) -> Option<&AbsPath> {\n+        match self {\n+            ProjectWorkspace::Cargo { cargo, .. } => Some(cargo.workspace_root()),\n+            ProjectWorkspace::Json { project, .. } => Some(project.path()),\n+            ProjectWorkspace::DetachedFiles { .. } => None,\n+        }\n+    }\n+\n     pub fn find_sysroot_proc_macro_srv(&self) -> Option<AbsPathBuf> {\n         match self {\n             ProjectWorkspace::Cargo { sysroot: Some(sysroot), .. }"}, {"sha": "e95d68b70a355e32bcc8f7dad3f24cacb3d39071", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ba7501dd0d9a1ff788e3598633907a2abcd04f6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ba7501dd0d9a1ff788e3598633907a2abcd04f6/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=3ba7501dd0d9a1ff788e3598633907a2abcd04f6", "patch": "@@ -29,7 +29,7 @@ use project_model::{ManifestPath, ProjectWorkspace, TargetKind};\n use serde_json::json;\n use stdx::{format_to, never};\n use syntax::{algo, ast, AstNode, TextRange, TextSize};\n-use vfs::AbsPathBuf;\n+use vfs::{AbsPath, AbsPathBuf};\n \n use crate::{\n     cargo_target_spec::CargoTargetSpec,\n@@ -84,6 +84,15 @@ pub(crate) fn handle_analyzer_status(\n             snap.workspaces.len(),\n             if snap.workspaces.len() == 1 { \"\" } else { \"s\" }\n         );\n+\n+        format_to!(\n+            buf,\n+            \"Workspace root folders: {:?}\",\n+            snap.workspaces\n+                .iter()\n+                .flat_map(|ws| ws.workspace_definition_path())\n+                .collect::<Vec<&AbsPath>>()\n+        );\n     }\n     buf.push_str(\"\\nAnalysis:\\n\");\n     buf.push_str("}]}