{"sha": "bfdd1c4e351f1a30f445c33efdfb946c0eae81ba", "node_id": "C_kwDOAAsO6NoAKGJmZGQxYzRlMzUxZjFhMzBmNDQ1YzMzZWZkZmI5NDZjMGVhZTgxYmE", "commit": {"author": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-27T00:37:42Z"}, "committer": {"name": "whtahy", "email": "whtahy@users.noreply.github.com", "date": "2023-04-27T02:34:29Z"}, "message": "add known-bug test for unsound issue 40582", "tree": {"sha": "76441bf79d7d4cfa8e85404c19dea86a99538717", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76441bf79d7d4cfa8e85404c19dea86a99538717"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba", "html_url": "https://github.com/rust-lang/rust/commit/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba/comments", "author": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whtahy", "id": 19783477, "node_id": "MDQ6VXNlcjE5NzgzNDc3", "avatar_url": "https://avatars.githubusercontent.com/u/19783477?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whtahy", "html_url": "https://github.com/whtahy", "followers_url": "https://api.github.com/users/whtahy/followers", "following_url": "https://api.github.com/users/whtahy/following{/other_user}", "gists_url": "https://api.github.com/users/whtahy/gists{/gist_id}", "starred_url": "https://api.github.com/users/whtahy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whtahy/subscriptions", "organizations_url": "https://api.github.com/users/whtahy/orgs", "repos_url": "https://api.github.com/users/whtahy/repos", "events_url": "https://api.github.com/users/whtahy/events{/privacy}", "received_events_url": "https://api.github.com/users/whtahy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb9aa8c9c19236f09667dc0bddbe6daee638696c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb9aa8c9c19236f09667dc0bddbe6daee638696c", "html_url": "https://github.com/rust-lang/rust/commit/cb9aa8c9c19236f09667dc0bddbe6daee638696c"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "9805933553dd750374bb4e8f1d88a9b8823a621b", "filename": "tests/ui/specialization/issue-40582.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba/tests%2Fui%2Fspecialization%2Fissue-40582.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdd1c4e351f1a30f445c33efdfb946c0eae81ba/tests%2Fui%2Fspecialization%2Fissue-40582.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fspecialization%2Fissue-40582.rs?ref=bfdd1c4e351f1a30f445c33efdfb946c0eae81ba", "patch": "@@ -0,0 +1,35 @@\n+// check-pass\n+// known-bug: #40582\n+\n+// Should fail. Should not be possible to implement `make_static`.\n+\n+#![feature(specialization)]\n+#![allow(incomplete_features)]\n+\n+trait FromRef<'a, T: ?Sized> {\n+    fn from_ref(r: &'a T) -> Self;\n+}\n+\n+impl<'a, T: ?Sized> FromRef<'a, T> for &'a T {\n+    fn from_ref(r: &'a T) -> Self {\n+        r\n+    }\n+}\n+\n+impl<'a, T: ?Sized, R> FromRef<'a, T> for R {\n+    default fn from_ref(_: &'a T) -> Self {\n+        unimplemented!()\n+    }\n+}\n+\n+fn make_static<T: ?Sized>(data: &T) -> &'static T {\n+    fn helper<T: ?Sized, R>(data: &T) -> R {\n+        R::from_ref(data)\n+    }\n+    helper(data)\n+}\n+\n+fn main() {\n+    let s = \"specialization\".to_owned();\n+    println!(\"{:?}\", make_static(s.as_str()));\n+}"}]}