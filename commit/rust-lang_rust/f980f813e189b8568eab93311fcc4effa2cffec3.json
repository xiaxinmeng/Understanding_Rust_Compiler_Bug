{"sha": "f980f813e189b8568eab93311fcc4effa2cffec3", "node_id": "C_kwDOAAsO6NoAKGY5ODBmODEzZTE4OWI4NTY4ZWFiOTMzMTFmY2M0ZWZmYTJjZmZlYzM", "commit": {"author": {"name": "Lucas Kent", "email": "rubickent@gmail.com", "date": "2021-11-14T11:04:25Z"}, "committer": {"name": "Lucas Kent", "email": "rubickent@gmail.com", "date": "2021-11-14T13:04:34Z"}, "message": "Improve ManuallyDrop suggestion", "tree": {"sha": "ebecde56c5acc017031849f9af4f41026e6f784e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebecde56c5acc017031849f9af4f41026e6f784e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f980f813e189b8568eab93311fcc4effa2cffec3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f980f813e189b8568eab93311fcc4effa2cffec3", "html_url": "https://github.com/rust-lang/rust/commit/f980f813e189b8568eab93311fcc4effa2cffec3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f980f813e189b8568eab93311fcc4effa2cffec3/comments", "author": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rukai", "id": 5120858, "node_id": "MDQ6VXNlcjUxMjA4NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5120858?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rukai", "html_url": "https://github.com/rukai", "followers_url": "https://api.github.com/users/rukai/followers", "following_url": "https://api.github.com/users/rukai/following{/other_user}", "gists_url": "https://api.github.com/users/rukai/gists{/gist_id}", "starred_url": "https://api.github.com/users/rukai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rukai/subscriptions", "organizations_url": "https://api.github.com/users/rukai/orgs", "repos_url": "https://api.github.com/users/rukai/repos", "events_url": "https://api.github.com/users/rukai/events{/privacy}", "received_events_url": "https://api.github.com/users/rukai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f820d9d4e5af7d298ffdc3145b48e206b65e8e28", "url": "https://api.github.com/repos/rust-lang/rust/commits/f820d9d4e5af7d298ffdc3145b48e206b65e8e28", "html_url": "https://github.com/rust-lang/rust/commit/f820d9d4e5af7d298ffdc3145b48e206b65e8e28"}], "stats": {"total": 85, "additions": 42, "deletions": 43}, "files": [{"sha": "335814f8627b3f30582e80f016d3c0e7abb02368", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -371,16 +371,25 @@ fn check_union_fields(tcx: TyCtxt<'_>, span: Span, item_def_id: LocalDefId) -> b\n         let param_env = tcx.param_env(item_def_id);\n         for field in fields {\n             let field_ty = field.ty(tcx, substs);\n-            // We are currently checking the type this field came from, so it must be local.\n-            let field_span = tcx.hir().span_if_local(field.did).unwrap();\n+            let (field_span, ty_span) =\n+                // We are currently checking the type this field came from, so it must be local.\n+                if let Node::Field(field) = tcx.hir().get_if_local(field.did).unwrap() {\n+                    (field.span, field.ty.span)\n+                } else {\n+                    unreachable!(\"mir field has to correspond to hir field\");\n+                };\n             if field_ty.needs_drop(tcx, param_env) {\n                 struct_span_err!(\n                     tcx.sess,\n                     field_span,\n                     E0740,\n                     \"unions may not contain fields that need dropping\"\n                 )\n-                .span_note(field_span, \"`std::mem::ManuallyDrop` can be used to wrap the type\")\n+                .multipart_suggestion_verbose(\n+                    \"wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\",\n+                    vec![(ty_span, format!(\"std::mem::ManuallyDrop<{}>\", field_ty))],\n+                    Applicability::MaybeIncorrect,\n+                )\n                 .emit();\n                 return false;\n             }"}, {"sha": "a9ccb835587738da0d891875022644fc63b717f7", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.stderr", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -13,23 +13,21 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/feature-gate-untagged_unions.rs:16:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/feature-gate-untagged_unions.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/feature-gate-untagged_unions.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "04b4286cc4b6376ef90cac0d7601b1dadefc8945", "filename": "src/test/ui/union/issue-41073.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Fissue-41073.stderr?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -4,11 +4,10 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: A,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/issue-41073.rs:4:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: A,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<A>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "0c59048f7fedb847f913c4df3306e1e724da15b5", "filename": "src/test/ui/union/union-custom-drop.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-custom-drop.stderr?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -4,11 +4,10 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     bar: Bar,\n    |     ^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-custom-drop.rs:7:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     bar: Bar,\n-   |     ^^^^^^^^\n+LL |     bar: std::mem::ManuallyDrop<Bar>,\n+   |          ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "8f3d30cd7ee46e5432feb5633cbaeb334f773c5d", "filename": "src/test/ui/union/union-with-drop-fields.mirunsafeck.stderr", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.mirunsafeck.stderr?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -4,35 +4,32 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:11:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:19:5\n    |\n LL |     a: S,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:19:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: S,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<S>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}, {"sha": "8f3d30cd7ee46e5432feb5633cbaeb334f773c5d", "filename": "src/test/ui/union/union-with-drop-fields.thirunsafeck.stderr", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f980f813e189b8568eab93311fcc4effa2cffec3/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-with-drop-fields.thirunsafeck.stderr?ref=f980f813e189b8568eab93311fcc4effa2cffec3", "patch": "@@ -4,35 +4,32 @@ error[E0740]: unions may not contain fields that need dropping\n LL |     a: String,\n    |     ^^^^^^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:11:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: String,\n-   |     ^^^^^^^^^\n+LL |     a: std::mem::ManuallyDrop<String>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:19:5\n    |\n LL |     a: S,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:19:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: S,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<S>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0740]: unions may not contain fields that need dropping\n   --> $DIR/union-with-drop-fields.rs:24:5\n    |\n LL |     a: T,\n    |     ^^^^\n    |\n-note: `std::mem::ManuallyDrop` can be used to wrap the type\n-  --> $DIR/union-with-drop-fields.rs:24:5\n+help: wrap the type with `std::mem::ManuallyDrop` and ensure it is manually dropped\n    |\n-LL |     a: T,\n-   |     ^^^^\n+LL |     a: std::mem::ManuallyDrop<T>,\n+   |        ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 3 previous errors\n "}]}