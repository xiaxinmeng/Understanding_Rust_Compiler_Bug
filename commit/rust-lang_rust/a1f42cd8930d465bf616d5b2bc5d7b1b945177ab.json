{"sha": "a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZjQyY2Q4OTMwZDQ2NWJmNjE2ZDViMmJjNWQ3YjFiOTQ1MTc3YWI=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T08:27:45Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-02-04T08:27:45Z"}, "message": "Uninhabited while-let pattern fix", "tree": {"sha": "f09e38db0ac236a084017c0c44d848fd47f06f1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f09e38db0ac236a084017c0c44d848fd47f06f1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "html_url": "https://github.com/rust-lang/rust/commit/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c781fc4a6a8af287f7abe141f035a638bc0165c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c781fc4a6a8af287f7abe141f035a638bc0165c3", "html_url": "https://github.com/rust-lang/rust/commit/c781fc4a6a8af287f7abe141f035a638bc0165c3"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "ce478f1a4504e4a59504f2bb3ce7ac3e83158120", "filename": "src/librustc_const_eval/check_match.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Flibrustc_const_eval%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Flibrustc_const_eval%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fcheck_match.rs?ref=a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use std::ptr;\n use _match::{MatchCheckCtxt, Matrix, expand_pattern, is_useful};\n use _match::Usefulness::*;\n use _match::WitnessPreference::*;\n@@ -302,10 +303,20 @@ fn check_arms<'a, 'tcx>(cx: &mut MatchCheckCtxt<'a, 'tcx>,\n                             let &(ref first_arm_pats, _) = &arms[0];\n                             let first_pat = &first_arm_pats[0];\n                             let span = first_pat.0.span;\n-                            struct_span_err!(cx.tcx.sess, span, E0165,\n-                                             \"irrefutable while-let pattern\")\n-                                .span_label(span, &format!(\"irrefutable pattern\"))\n-                                .emit();\n+\n+                            // check which arm we're on.\n+                            if ptr::eq(first_arm_pats, pats) {\n+                                let mut diagnostic = Diagnostic::new(Level::Warning,\n+                                                                     \"unreachable pattern\");\n+                                diagnostic.set_span(pat.span);\n+                                cx.tcx.sess.add_lint_diagnostic(lint::builtin::UNREACHABLE_PATTERNS,\n+                                                                hir_pat.id, diagnostic);\n+                            } else {\n+                                struct_span_err!(cx.tcx.sess, span, E0165,\n+                                                 \"irrefutable while-let pattern\")\n+                                    .span_label(span, &format!(\"irrefutable pattern\"))\n+                                    .emit();\n+                            }\n                         },\n \n                         hir::MatchSource::ForLoopDesugar |"}, {"sha": "7c579f44e79f22bed38540d83e137d7a889f5319", "filename": "src/librustc_const_eval/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Flibrustc_const_eval%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Flibrustc_const_eval%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Flib.rs?ref=a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "patch": "@@ -30,6 +30,7 @@\n #![feature(box_syntax)]\n #![feature(const_fn)]\n #![feature(i128_type)]\n+#![feature(ptr_eq)]\n \n extern crate arena;\n #[macro_use] extern crate syntax;"}, {"sha": "4c894b0bdd3dd2b7724978159332ca00bc61ec28", "filename": "src/test/compile-fail/uninhabited-patterns.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Ftest%2Fcompile-fail%2Funinhabited-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1f42cd8930d465bf616d5b2bc5d7b1b945177ab/src%2Ftest%2Fcompile-fail%2Funinhabited-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funinhabited-patterns.rs?ref=a1f42cd8930d465bf616d5b2bc5d7b1b945177ab", "patch": "@@ -24,6 +24,10 @@ struct NotSoSecretlyEmpty {\n     _priv: !,\n }\n \n+fn foo() -> Option<NotSoSecretlyEmpty> {\n+    None\n+}\n+\n fn main() {\n     let x: &[!] = &[];\n \n@@ -45,5 +49,9 @@ fn main() {\n         Err(Err(_y)) => (),\n         Err(Ok(_y)) => (),  //~ ERROR unreachable pattern\n     }\n+\n+    while let Some(_y) = foo() {\n+        //~^ ERROR unreachable pattern\n+    }\n }\n "}]}