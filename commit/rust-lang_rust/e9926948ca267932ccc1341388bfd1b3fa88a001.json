{"sha": "e9926948ca267932ccc1341388bfd1b3fa88a001", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTI2OTQ4Y2EyNjc5MzJjY2MxMzQxMzg4YmZkMWIzZmE4OGEwMDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-13T14:31:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-13T14:31:49Z"}, "message": "Merge #5747\n\n5747: Rename crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "cc4b797cb39a40b59e9e3d37178e8a1907f12358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc4b797cb39a40b59e9e3d37178e8a1907f12358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9926948ca267932ccc1341388bfd1b3fa88a001", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNU7VCRBK7hj4Ov3rIwAAdHIIACAx/NZeqmw2ytxC2gbDmNE4\ntb0LbDbNfM08/AtYUbYUtto9eFgs5oiy/JQsS4GNZFemyLplURPrNAEKjsSR/sii\nzYxrjEk0Di1v5AeW9oxsbEHBqhsS19jBzzUtwrVhHvtgwKswABuhHlgdQUi2jKMp\nSs5FcQ8a5Qt5+XFpkFB+Vy0CgMY1cEbcwLmTz+XPDZ0UAngw7f2QdwnOLI8WX4B+\nGx8J7N9RAWII5I4Ai63WqsGrjIBekfGcVyYdelpBVl21YEnNbtRtUJ5ORFRDUr+M\nf8tTzHeJ7f66fvEukQrnlT4bLHvHtXla8HrVTu2UMvHi8wldyz70Qr/ltx56X2c=\n=30UK\n-----END PGP SIGNATURE-----\n", "payload": "tree cc4b797cb39a40b59e9e3d37178e8a1907f12358\nparent 902f74c2697cc2a50de9067845814a2a852fccfd\nparent 50f8c1ebf23f634b68529603a917e3feeda457fa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597329109 +0000\ncommitter GitHub <noreply@github.com> 1597329109 +0000\n\nMerge #5747\n\n5747: Rename crate r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9926948ca267932ccc1341388bfd1b3fa88a001", "html_url": "https://github.com/rust-lang/rust/commit/e9926948ca267932ccc1341388bfd1b3fa88a001", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9926948ca267932ccc1341388bfd1b3fa88a001/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "902f74c2697cc2a50de9067845814a2a852fccfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/902f74c2697cc2a50de9067845814a2a852fccfd", "html_url": "https://github.com/rust-lang/rust/commit/902f74c2697cc2a50de9067845814a2a852fccfd"}, {"sha": "50f8c1ebf23f634b68529603a917e3feeda457fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f8c1ebf23f634b68529603a917e3feeda457fa", "html_url": "https://github.com/rust-lang/rust/commit/50f8c1ebf23f634b68529603a917e3feeda457fa"}], "stats": {"total": 525, "additions": 262, "deletions": 263}, "files": [{"sha": "702bd5191d77c276f00707b8cf04f1423d7382cd", "filename": "Cargo.lock", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -83,6 +83,21 @@ version = \"0.12.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3441f0f7b02788e948e47f457ca01f1d7e6d92c693bc132c22b087d3141c03ff\"\n \n+[[package]]\n+name = \"base_db\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"cfg\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"salsa\",\n+ \"stdx\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"tt\",\n+ \"vfs\",\n+]\n+\n [[package]]\n name = \"bitflags\"\n version = \"1.2.1\"\n@@ -448,6 +463,50 @@ dependencies = [\n  \"libc\",\n ]\n \n+[[package]]\n+name = \"hir_def\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"anymap\",\n+ \"arena\",\n+ \"base_db\",\n+ \"cfg\",\n+ \"drop_bomb\",\n+ \"either\",\n+ \"expect\",\n+ \"fst\",\n+ \"hir_expand\",\n+ \"indexmap\",\n+ \"itertools\",\n+ \"log\",\n+ \"mbe\",\n+ \"once_cell\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"smallvec\",\n+ \"stdx\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"tt\",\n+]\n+\n+[[package]]\n+name = \"hir_expand\"\n+version = \"0.0.0\"\n+dependencies = [\n+ \"arena\",\n+ \"base_db\",\n+ \"either\",\n+ \"log\",\n+ \"mbe\",\n+ \"parser\",\n+ \"profile\",\n+ \"rustc-hash\",\n+ \"syntax\",\n+ \"test_utils\",\n+ \"tt\",\n+]\n+\n [[package]]\n name = \"home\"\n version = \"0.5.3\"\n@@ -956,12 +1015,12 @@ version = \"0.0.0\"\n dependencies = [\n  \"anyhow\",\n  \"arena\",\n+ \"base_db\",\n  \"cargo_metadata\",\n  \"cfg\",\n  \"log\",\n  \"paths\",\n  \"proc_macro_api\",\n- \"ra_db\",\n  \"rustc-hash\",\n  \"serde\",\n  \"serde_json\",\n@@ -982,10 +1041,10 @@ dependencies = [\n name = \"ra_assists\"\n version = \"0.1.0\"\n dependencies = [\n+ \"base_db\",\n  \"either\",\n  \"itertools\",\n  \"profile\",\n- \"ra_db\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"rustc-hash\",\n@@ -995,100 +1054,41 @@ dependencies = [\n  \"text_edit\",\n ]\n \n-[[package]]\n-name = \"ra_db\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"cfg\",\n- \"profile\",\n- \"rustc-hash\",\n- \"salsa\",\n- \"stdx\",\n- \"syntax\",\n- \"test_utils\",\n- \"tt\",\n- \"vfs\",\n-]\n-\n [[package]]\n name = \"ra_hir\"\n version = \"0.1.0\"\n dependencies = [\n  \"arrayvec\",\n+ \"base_db\",\n  \"either\",\n+ \"hir_def\",\n+ \"hir_expand\",\n  \"itertools\",\n  \"log\",\n  \"profile\",\n- \"ra_db\",\n- \"ra_hir_def\",\n- \"ra_hir_expand\",\n  \"ra_hir_ty\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"syntax\",\n ]\n \n-[[package]]\n-name = \"ra_hir_def\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"anymap\",\n- \"arena\",\n- \"cfg\",\n- \"drop_bomb\",\n- \"either\",\n- \"expect\",\n- \"fst\",\n- \"indexmap\",\n- \"itertools\",\n- \"log\",\n- \"mbe\",\n- \"once_cell\",\n- \"profile\",\n- \"ra_db\",\n- \"ra_hir_expand\",\n- \"rustc-hash\",\n- \"smallvec\",\n- \"stdx\",\n- \"syntax\",\n- \"test_utils\",\n- \"tt\",\n-]\n-\n-[[package]]\n-name = \"ra_hir_expand\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"arena\",\n- \"either\",\n- \"log\",\n- \"mbe\",\n- \"parser\",\n- \"profile\",\n- \"ra_db\",\n- \"rustc-hash\",\n- \"syntax\",\n- \"test_utils\",\n- \"tt\",\n-]\n-\n [[package]]\n name = \"ra_hir_ty\"\n version = \"0.1.0\"\n dependencies = [\n  \"arena\",\n  \"arrayvec\",\n+ \"base_db\",\n  \"chalk-ir\",\n  \"chalk-recursive\",\n  \"chalk-solve\",\n  \"ena\",\n  \"expect\",\n+ \"hir_def\",\n+ \"hir_expand\",\n  \"itertools\",\n  \"log\",\n  \"profile\",\n- \"ra_db\",\n- \"ra_hir_def\",\n- \"ra_hir_expand\",\n  \"rustc-hash\",\n  \"scoped-tls\",\n  \"smallvec\",\n@@ -1104,6 +1104,7 @@ dependencies = [\n name = \"ra_ide\"\n version = \"0.1.0\"\n dependencies = [\n+ \"base_db\",\n  \"cfg\",\n  \"either\",\n  \"expect\",\n@@ -1113,7 +1114,6 @@ dependencies = [\n  \"oorandom\",\n  \"profile\",\n  \"ra_assists\",\n- \"ra_db\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_ssr\",\n@@ -1128,12 +1128,12 @@ dependencies = [\n name = \"ra_ide_db\"\n version = \"0.1.0\"\n dependencies = [\n+ \"base_db\",\n  \"either\",\n  \"fst\",\n  \"log\",\n  \"once_cell\",\n  \"profile\",\n- \"ra_db\",\n  \"ra_hir\",\n  \"rayon\",\n  \"rustc-hash\",\n@@ -1147,8 +1147,8 @@ dependencies = [\n name = \"ra_ssr\"\n version = \"0.1.0\"\n dependencies = [\n+ \"base_db\",\n  \"expect\",\n- \"ra_db\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"rustc-hash\",\n@@ -1230,11 +1230,13 @@ name = \"rust-analyzer\"\n version = \"0.1.0\"\n dependencies = [\n  \"anyhow\",\n+ \"base_db\",\n  \"cfg\",\n  \"crossbeam-channel\",\n  \"env_logger\",\n  \"expect\",\n  \"flycheck\",\n+ \"hir_def\",\n  \"itertools\",\n  \"jod-thread\",\n  \"log\",\n@@ -1248,9 +1250,7 @@ dependencies = [\n  \"proc_macro_srv\",\n  \"profile\",\n  \"project_model\",\n- \"ra_db\",\n  \"ra_hir\",\n- \"ra_hir_def\",\n  \"ra_hir_ty\",\n  \"ra_ide\",\n  \"ra_ide_db\","}, {"sha": "7347d7528ccabba48d4fae546859379273243eb5", "filename": "crates/base_db/Cargo.toml", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_db\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"base_db\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false", "previous_filename": "crates/ra_db/Cargo.toml"}, {"sha": "7420a1976f49a465d7cf0a79e3dd6551d4c03dbb", "filename": "crates/base_db/src/cancellation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Fcancellation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Fcancellation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Fcancellation.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_db/src/cancellation.rs"}, {"sha": "5ff8ead0e5ed90c071fc1a488b8e7090753bd7a6", "filename": "crates/base_db/src/fixture.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_db/src/fixture.rs"}, {"sha": "f3d65cdf02f510cd13b69efc466077f20d06fb01", "filename": "crates/base_db/src/input.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_db/src/input.rs"}, {"sha": "811057251d0bb096fcefdd4ddeb5842dc7a81c70", "filename": "crates/base_db/src/lib.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fbase_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,4 +1,4 @@\n-//! ra_db defines basic database traits. The concrete DB is defined by ra_ide.\n+//! base_db defines basic database traits. The concrete DB is defined by ra_ide.\n mod cancellation;\n mod input;\n pub mod fixture;", "previous_filename": "crates/ra_db/src/lib.rs"}, {"sha": "403bc2aff3e23f75c29477ab44aabe833a38c7ee", "filename": "crates/hir_def/Cargo.toml", "status": "renamed", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_hir_def\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"hir_def\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -21,12 +21,11 @@ indexmap = \"1.4.0\"\n smallvec = \"1.4.0\"\n \n stdx = { path = \"../stdx\" }\n-\n arena = { path = \"../arena\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n syntax = { path = \"../syntax\" }\n profile = { path = \"../profile\" }\n-hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }\n+hir_expand = { path = \"../hir_expand\" }\n test_utils = { path = \"../test_utils\" }\n mbe = { path = \"../mbe\" }\n cfg = { path = \"../cfg\" }", "previous_filename": "crates/ra_hir_def/Cargo.toml"}, {"sha": "d69ff2fc79e760a0829cc2cae4bc0f7f0e952eab", "filename": "crates/hir_def/src/adt.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fadt.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/adt.rs"}, {"sha": "dea552a605a4bbf664accf316a8f5a341eb535fd", "filename": "crates/hir_def/src/attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/attr.rs"}, {"sha": "9a9a605ddb943055492a0c667329d4db4ddc6068", "filename": "crates/hir_def/src/body.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,11 +6,11 @@ pub mod scope;\n use std::{mem, ops::Index, sync::Arc};\n \n use arena::{map::ArenaMap, Arena};\n+use base_db::CrateId;\n use cfg::CfgOptions;\n use drop_bomb::DropBomb;\n use either::Either;\n use hir_expand::{ast_id_map::AstIdMap, hygiene::Hygiene, AstId, HirFileId, InFile, MacroDefId};\n-use ra_db::CrateId;\n use rustc_hash::FxHashMap;\n use syntax::{ast, AstNode, AstPtr};\n use test_utils::mark;\n@@ -320,7 +320,7 @@ impl BodySourceMap {\n \n #[cfg(test)]\n mod tests {\n-    use ra_db::{fixture::WithFixture, SourceDatabase};\n+    use base_db::{fixture::WithFixture, SourceDatabase};\n     use test_utils::mark;\n \n     use crate::ModuleDefId;", "previous_filename": "crates/ra_hir_def/src/body.rs"}, {"sha": "a26251cdeb5bbca48ab42fd71c8fceccc34448b5", "filename": "crates/hir_def/src/body/lower.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/body/lower.rs"}, {"sha": "9142bc05b8d836251389c1c1fe292b01826063e9", "filename": "crates/hir_def/src/body/scope.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -169,8 +169,8 @@ fn compute_expr_scopes(expr: ExprId, body: &Body, scopes: &mut ExprScopes, scope\n \n #[cfg(test)]\n mod tests {\n+    use base_db::{fixture::WithFixture, FileId, SourceDatabase};\n     use hir_expand::{name::AsName, InFile};\n-    use ra_db::{fixture::WithFixture, FileId, SourceDatabase};\n     use syntax::{algo::find_node_at_offset, ast, AstNode};\n     use test_utils::{assert_eq_text, extract_offset, mark};\n ", "previous_filename": "crates/ra_hir_def/src/body/scope.rs"}, {"sha": "0f872b5c047487140eff04e8ea57db9cb9b77659", "filename": "crates/hir_def/src/builtin_type.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbuiltin_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fbuiltin_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbuiltin_type.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/builtin_type.rs"}, {"sha": "dcb00a1d9a0ba916cc83b3bcc0015f7a9c79aab7", "filename": "crates/hir_def/src/child_by_source.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fchild_by_source.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/child_by_source.rs"}, {"sha": "9a8eb4edec7ce8827047f1657fbe9263d9f1df5f", "filename": "crates/hir_def/src/data.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdata.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/data.rs"}, {"sha": "6d694de11568714a81792efb7d1d2b0adc6e86b1", "filename": "crates/hir_def/src/db.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,8 +1,8 @@\n //! Defines database & queries for name resolution.\n use std::sync::Arc;\n \n+use base_db::{salsa, CrateId, SourceDatabase, Upcast};\n use hir_expand::{db::AstDatabase, HirFileId};\n-use ra_db::{salsa, CrateId, SourceDatabase, Upcast};\n use syntax::SmolStr;\n \n use crate::{", "previous_filename": "crates/ra_hir_def/src/db.rs"}, {"sha": "2e38a978f829273c2d8b5933d59c155d843336c7", "filename": "crates/hir_def/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdiagnostics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/diagnostics.rs"}, {"sha": "e9a02b11bb60cd28fda131e804df03f907ea5f01", "filename": "crates/hir_def/src/docs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdocs.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/docs.rs"}, {"sha": "6f269d7b01fec1645d62e7f79bef846b9f57af6f", "filename": "crates/hir_def/src/dyn_map.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdyn_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fdyn_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdyn_map.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/dyn_map.rs"}, {"sha": "c94b3a36f57c73f9bfe767dc9ae0f4d1d5ad732f", "filename": "crates/hir_def/src/expr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fexpr.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/expr.rs"}, {"sha": "ac2c54ac53645e7e84ba2bc2bfaa138e6dc583fc", "filename": "crates/hir_def/src/find_path.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ffind_path.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -292,8 +292,8 @@ fn find_local_import_locations(\n \n #[cfg(test)]\n mod tests {\n+    use base_db::fixture::WithFixture;\n     use hir_expand::hygiene::Hygiene;\n-    use ra_db::fixture::WithFixture;\n     use syntax::ast::AstNode;\n     use test_utils::mark;\n ", "previous_filename": "crates/ra_hir_def/src/find_path.rs"}, {"sha": "835fe3fbdc696530f7645a3e019c7a557b78121f", "filename": "crates/hir_def/src/generics.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fgenerics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,12 +5,12 @@\n use std::sync::Arc;\n \n use arena::{map::ArenaMap, Arena};\n+use base_db::FileId;\n use either::Either;\n use hir_expand::{\n     name::{name, AsName, Name},\n     InFile,\n };\n-use ra_db::FileId;\n use syntax::ast::{self, GenericParamsOwner, NameOwner, TypeBoundsOwner};\n \n use crate::{", "previous_filename": "crates/ra_hir_def/src/generics.rs"}, {"sha": "d32a0bdaf2e99e165008a24fe56f11b3daa470ad", "filename": "crates/hir_def/src/import_map.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fimport_map.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,9 +2,9 @@\n \n use std::{cmp::Ordering, fmt, hash::BuildHasherDefault, sync::Arc};\n \n+use base_db::CrateId;\n use fst::{self, Streamer};\n use indexmap::{map::Entry, IndexMap};\n-use ra_db::CrateId;\n use rustc_hash::{FxHashMap, FxHasher};\n use smallvec::SmallVec;\n use syntax::SmolStr;\n@@ -327,8 +327,8 @@ pub fn search_dependencies<'a>(\n \n #[cfg(test)]\n mod tests {\n+    use base_db::{fixture::WithFixture, SourceDatabase, Upcast};\n     use expect::{expect, Expect};\n-    use ra_db::{fixture::WithFixture, SourceDatabase, Upcast};\n \n     use crate::{test_db::TestDB, AssocContainerId, Lookup};\n ", "previous_filename": "crates/ra_hir_def/src/import_map.rs"}, {"sha": "f1e9dfd5b14d37a8a282593df6892187692885d0", "filename": "crates/hir_def/src/item_scope.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_scope.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,9 +3,9 @@\n \n use std::collections::hash_map::Entry;\n \n+use base_db::CrateId;\n use hir_expand::name::Name;\n use once_cell::sync::Lazy;\n-use ra_db::CrateId;\n use rustc_hash::{FxHashMap, FxHashSet};\n use test_utils::mark;\n ", "previous_filename": "crates/ra_hir_def/src/item_scope.rs"}, {"sha": "e14722caebb59875a9dc596e135209f9de73ae83", "filename": "crates/hir_def/src/item_tree.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/item_tree.rs"}, {"sha": "391ab5d3928ab9ca5752cd18284e5c0c25c4bd17", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/item_tree/lower.rs"}, {"sha": "9c5bf72bd504d9e480706bdcd108d06a2c2ca583", "filename": "crates/hir_def/src/item_tree/tests.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Ftests.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,6 +1,6 @@\n+use base_db::fixture::WithFixture;\n use expect::{expect, Expect};\n use hir_expand::{db::AstDatabase, HirFileId, InFile};\n-use ra_db::fixture::WithFixture;\n use rustc_hash::FxHashSet;\n use std::sync::Arc;\n use stdx::format_to;\n@@ -246,13 +246,13 @@ fn smoke() {\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct0\"))] }, input: None }]) }]\n             Struct { name: Name(Text(\"Struct0\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(1), fields: Unit, ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(3), kind: Unit }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct1\"))] }, input: None }]) }]\n-            Struct { name: Name(Text(\"Struct1\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(2), fields: Tuple(IdRange::<ra_hir_def::item_tree::Field>(0..1)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(4), kind: Tuple }\n+            Struct { name: Name(Text(\"Struct1\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(2), fields: Tuple(IdRange::<hir_def::item_tree::Field>(0..1)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(4), kind: Tuple }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"struct2\"))] }, input: None }]) }]\n-            Struct { name: Name(Text(\"Struct2\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(3), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(1..2)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(5), kind: Record }\n+            Struct { name: Name(Text(\"Struct2\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(3), fields: Record(IdRange::<hir_def::item_tree::Field>(1..2)), ast_id: FileAstId::<syntax::ast::generated::nodes::Struct>(5), kind: Record }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"en\"))] }, input: None }]) }]\n-            Enum { name: Name(Text(\"En\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), variants: IdRange::<ra_hir_def::item_tree::Variant>(0..1), ast_id: FileAstId::<syntax::ast::generated::nodes::Enum>(6) }\n+            Enum { name: Name(Text(\"En\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), variants: IdRange::<hir_def::item_tree::Variant>(0..1), ast_id: FileAstId::<syntax::ast::generated::nodes::Enum>(6) }\n             #[Attrs { entries: Some([Attr { path: ModPath { kind: Plain, segments: [Name(Text(\"un\"))] }, input: None }]) }]\n-            Union { name: Name(Text(\"Un\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), fields: Record(IdRange::<ra_hir_def::item_tree::Field>(3..4)), ast_id: FileAstId::<syntax::ast::generated::nodes::Union>(7) }\n+            Union { name: Name(Text(\"Un\")), visibility: RawVisibilityId(\"pub(self)\"), generic_params: GenericParamsId(4294967295), fields: Record(IdRange::<hir_def::item_tree::Field>(3..4)), ast_id: FileAstId::<syntax::ast::generated::nodes::Union>(7) }\n         \"##]],\n     );\n }", "previous_filename": "crates/ra_hir_def/src/item_tree/tests.rs"}, {"sha": "40a5d92b5076766c3b21099c626b4d4fde20c15f", "filename": "crates/hir_def/src/keys.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fkeys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fkeys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fkeys.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/keys.rs"}, {"sha": "063eadccb2dbd3043ad6bc7d5502a3fac5e97995", "filename": "crates/hir_def/src/lang_item.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flang_item.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/lang_item.rs"}, {"sha": "f24a1dd77cc2566f38cccb6cc4637cbe2b7de63b", "filename": "crates/hir_def/src/lib.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -53,11 +53,11 @@ mod test_db;\n use std::hash::{Hash, Hasher};\n \n use arena::Idx;\n+use base_db::{impl_intern_key, salsa, CrateId};\n use hir_expand::{\n     ast_id_map::FileAstId, eager::expand_eager_macro, hygiene::Hygiene, AstId, HirFileId, InFile,\n     MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n-use ra_db::{impl_intern_key, salsa, CrateId};\n use syntax::ast;\n \n use crate::builtin_type::BuiltinType;", "previous_filename": "crates/ra_hir_def/src/lib.rs"}, {"sha": "bf302172d05f58d7460fcc190b9b14503a69dc8a", "filename": "crates/hir_def/src/nameres.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -57,8 +57,8 @@ mod tests;\n use std::sync::Arc;\n \n use arena::Arena;\n+use base_db::{CrateId, Edition, FileId};\n use hir_expand::{diagnostics::DiagnosticSink, name::Name, InFile};\n-use ra_db::{CrateId, Edition, FileId};\n use rustc_hash::FxHashMap;\n use stdx::format_to;\n use syntax::ast;", "previous_filename": "crates/ra_hir_def/src/nameres.rs"}, {"sha": "3e99c8773741f0d40199f43677364b400e155e11", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,6 +3,7 @@\n //! `DefCollector::collect` contains the fixed-point iteration loop which\n //! resolves imports and expands macros.\n \n+use base_db::{CrateId, FileId, ProcMacroId};\n use cfg::CfgOptions;\n use hir_expand::{\n     ast_id_map::FileAstId,\n@@ -12,7 +13,6 @@ use hir_expand::{\n     proc_macro::ProcMacroExpander,\n     HirFileId, MacroCallId, MacroDefId, MacroDefKind,\n };\n-use ra_db::{CrateId, FileId, ProcMacroId};\n use rustc_hash::FxHashMap;\n use syntax::ast;\n use test_utils::mark;\n@@ -1209,7 +1209,7 @@ fn is_macro_rules(path: &ModPath) -> bool {\n mod tests {\n     use crate::{db::DefDatabase, test_db::TestDB};\n     use arena::Arena;\n-    use ra_db::{fixture::WithFixture, SourceDatabase};\n+    use base_db::{fixture::WithFixture, SourceDatabase};\n \n     use super::*;\n ", "previous_filename": "crates/ra_hir_def/src/nameres/collector.rs"}, {"sha": "e8389b4846768af9af88c1e519839249deacbd91", "filename": "crates/hir_def/src/nameres/mod_resolution.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,6 +1,6 @@\n //! This module resolves `mod foo;` declaration to file.\n+use base_db::FileId;\n use hir_expand::name::Name;\n-use ra_db::FileId;\n use syntax::SmolStr;\n \n use crate::{db::DefDatabase, HirFileId};", "previous_filename": "crates/ra_hir_def/src/nameres/mod_resolution.rs"}, {"sha": "88e10574efd54842815002d3835cc160b2c21610", "filename": "crates/hir_def/src/nameres/path_resolution.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fpath_resolution.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -12,8 +12,8 @@\n \n use std::iter::successors;\n \n+use base_db::Edition;\n use hir_expand::name::Name;\n-use ra_db::Edition;\n use test_utils::mark;\n \n use crate::{", "previous_filename": "crates/ra_hir_def/src/nameres/path_resolution.rs"}, {"sha": "b105d56b243bb7aa5b4e4c343a31e320c964f887", "filename": "crates/hir_def/src/nameres/tests.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,8 +6,8 @@ mod primitives;\n \n use std::sync::Arc;\n \n+use base_db::{fixture::WithFixture, SourceDatabase};\n use expect::{expect, Expect};\n-use ra_db::{fixture::WithFixture, SourceDatabase};\n use test_utils::mark;\n \n use crate::{db::DefDatabase, nameres::*, test_db::TestDB};", "previous_filename": "crates/ra_hir_def/src/nameres/tests.rs"}, {"sha": "2ae836e3c2892085080b9d53758e430933425fb7", "filename": "crates/hir_def/src/nameres/tests/globs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/nameres/tests/globs.rs"}, {"sha": "cfbc62cc43ccd589f877b9bd4aad0e1f51430fe8", "filename": "crates/hir_def/src/nameres/tests/incremental.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fincremental.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,6 +1,6 @@\n use std::sync::Arc;\n \n-use ra_db::SourceDatabaseExt;\n+use base_db::SourceDatabaseExt;\n \n use super::*;\n ", "previous_filename": "crates/ra_hir_def/src/nameres/tests/incremental.rs"}, {"sha": "e0fb8bdef46d74cd29ced45d0b54ff6b15190656", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/nameres/tests/macros.rs"}, {"sha": "1f619787e1d5d47ebb80dfdac83bdcf47222e978", "filename": "crates/hir_def/src/nameres/tests/mod_resolution.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmod_resolution.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/nameres/tests/mod_resolution.rs"}, {"sha": "215e8952d90299e3c977ef96a51d6e8b96143ec7", "filename": "crates/hir_def/src/nameres/tests/primitives.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fprimitives.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/nameres/tests/primitives.rs"}, {"sha": "74d26f08b37d71ba84558832c9d287c99f12aa16", "filename": "crates/hir_def/src/path.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -8,11 +8,11 @@ use std::{\n };\n \n use crate::body::LowerCtx;\n+use base_db::CrateId;\n use hir_expand::{\n     hygiene::Hygiene,\n     name::{AsName, Name},\n };\n-use ra_db::CrateId;\n use syntax::ast;\n \n use crate::{", "previous_filename": "crates/ra_hir_def/src/path.rs"}, {"sha": "07b9723ce01b6d2230054fa709217166f5aeaa2f", "filename": "crates/hir_def/src/path/lower.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/path/lower.rs"}, {"sha": "53cecb05fb2a335b85e6071e63af888e84135b9f", "filename": "crates/hir_def/src/path/lower/lower_use.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower%2Flower_use.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/path/lower/lower_use.rs"}, {"sha": "74665c58851c909417bbd2efe9a24b180b1a39dc", "filename": "crates/hir_def/src/per_ns.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fper_ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fper_ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fper_ns.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/per_ns.rs"}, {"sha": "f8cc5e075ed8dc62df74eaa832f23220a26b9366", "filename": "crates/hir_def/src/resolver.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,11 +1,11 @@\n //! Name resolution fa\u00e7ade.\n use std::sync::Arc;\n \n+use base_db::CrateId;\n use hir_expand::{\n     name::{name, Name},\n     MacroDefId,\n };\n-use ra_db::CrateId;\n use rustc_hash::FxHashSet;\n \n use crate::{", "previous_filename": "crates/ra_hir_def/src/resolver.rs"}, {"sha": "7a79b0314993d22a7d37b1a82f9c391beb29c07a", "filename": "crates/hir_def/src/src.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fsrc.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/src.rs"}, {"sha": "42a762936dd461e32fd4b26957f208ddb95b3117", "filename": "crates/hir_def/src/test_db.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftest_db.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,15 +5,15 @@ use std::{\n     sync::{Arc, Mutex},\n };\n \n+use base_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, Upcast};\n use hir_expand::db::AstDatabase;\n-use ra_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, Upcast};\n use rustc_hash::FxHashSet;\n \n use crate::db::DefDatabase;\n \n #[salsa::database(\n-    ra_db::SourceDatabaseExtStorage,\n-    ra_db::SourceDatabaseStorage,\n+    base_db::SourceDatabaseExtStorage,\n+    base_db::SourceDatabaseStorage,\n     hir_expand::db::AstDatabaseStorage,\n     crate::db::InternDatabaseStorage,\n     crate::db::DefDatabaseStorage", "previous_filename": "crates/ra_hir_def/src/test_db.rs"}, {"sha": "fd64e701888396bad624cc9f39aff8334305d706", "filename": "crates/hir_def/src/trace.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftrace.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/trace.rs"}, {"sha": "1a78c1444c4326bb44fe3185e8a9499dc60b1fc9", "filename": "crates/hir_def/src/type_ref.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Ftype_ref.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/type_ref.rs"}, {"sha": "e6e0853a30a3ae5c44e3e7f73103817dd18e8861", "filename": "crates/hir_def/src/visibility.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_def%2Fsrc%2Fvisibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fvisibility.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_def/src/visibility.rs"}, {"sha": "1c46992915e588c0309a6318fd319ad9c3778c9a", "filename": "crates/hir_expand/Cargo.toml", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,9 +1,9 @@\n [package]\n-edition = \"2018\"\n-name = \"ra_hir_expand\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n+name = \"hir_expand\"\n+version = \"0.0.0\"\n license = \"MIT OR Apache-2.0\"\n+authors = [\"rust-analyzer developers\"]\n+edition = \"2018\"\n \n [lib]\n doctest = false\n@@ -14,7 +14,7 @@ either = \"1.5.3\"\n rustc-hash = \"1.0.0\"\n \n arena = { path = \"../arena\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n syntax = { path = \"../syntax\" }\n parser = { path = \"../parser\" }\n profile = { path = \"../profile\" }", "previous_filename": "crates/ra_hir_expand/Cargo.toml"}, {"sha": "f63629b305302202353c2ccbc35909b95763c0a0", "filename": "crates/hir_expand/src/ast_id_map.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fast_id_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fast_id_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fast_id_map.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_expand/src/ast_id_map.rs"}, {"sha": "988a60d56ade855110c8dff4e3f9d45a5a691241", "filename": "crates/hir_expand/src/builtin_derive.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_derive.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -253,8 +253,8 @@ fn partial_ord_expand(\n \n #[cfg(test)]\n mod tests {\n+    use base_db::{fixture::WithFixture, CrateId, SourceDatabase};\n     use name::{known, Name};\n-    use ra_db::{fixture::WithFixture, CrateId, SourceDatabase};\n \n     use crate::{test_db::TestDB, AstId, MacroCallId, MacroCallKind, MacroCallLoc};\n ", "previous_filename": "crates/ra_hir_expand/src/builtin_derive.rs"}, {"sha": "86918b626998e1233acfad0c431e911bb188156b", "filename": "crates/hir_expand/src/builtin_macro.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -4,10 +4,10 @@ use crate::{\n     MacroDefId, MacroDefKind, TextSize,\n };\n \n+use base_db::FileId;\n use either::Either;\n use mbe::parse_to_token_tree;\n use parser::FragmentKind;\n-use ra_db::FileId;\n use syntax::ast::{self, AstToken, HasStringValue};\n \n macro_rules! register_builtin {\n@@ -426,7 +426,7 @@ mod tests {\n         name::AsName, test_db::TestDB, AstNode, EagerCallLoc, MacroCallId, MacroCallKind,\n         MacroCallLoc,\n     };\n-    use ra_db::{fixture::WithFixture, SourceDatabase};\n+    use base_db::{fixture::WithFixture, SourceDatabase};\n     use std::sync::Arc;\n     use syntax::ast::NameOwner;\n ", "previous_filename": "crates/ra_hir_expand/src/builtin_macro.rs"}, {"sha": "dcc038bcd8d6ce8b44403d31d2e3d913b2a1857b", "filename": "crates/hir_expand/src/db.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdb.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,9 +2,9 @@\n \n use std::sync::Arc;\n \n+use base_db::{salsa, SourceDatabase};\n use mbe::{ExpandResult, MacroRules};\n use parser::FragmentKind;\n-use ra_db::{salsa, SourceDatabase};\n use syntax::{algo::diff, AstNode, GreenNode, Parse, SyntaxKind::*, SyntaxNode};\n \n use crate::{", "previous_filename": "crates/ra_hir_expand/src/db.rs"}, {"sha": "59d35debe331d5f977d71036aaad2d42259d98c8", "filename": "crates/hir_expand/src/diagnostics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fdiagnostics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_expand/src/diagnostics.rs"}, {"sha": "10c45646f0d94228ff710d8775dd6033d8381d2c", "filename": "crates/hir_expand/src/eager.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Feager.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Feager.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Feager.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -25,8 +25,8 @@ use crate::{\n     EagerCallLoc, EagerMacroId, InFile, MacroCallId, MacroCallKind, MacroDefId, MacroDefKind,\n };\n \n+use base_db::CrateId;\n use parser::FragmentKind;\n-use ra_db::CrateId;\n use std::sync::Arc;\n use syntax::{algo::SyntaxRewriter, SyntaxNode};\n ", "previous_filename": "crates/ra_hir_expand/src/eager.rs"}, {"sha": "845e9cbc19a6fc7168cea7a92f8cbc229dacecc6", "filename": "crates/hir_expand/src/hygiene.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,8 +2,8 @@\n //!\n //! Specifically, `ast` + `Hygiene` allows you to create a `Name`. Note that, at\n //! this moment, this is horribly incomplete and handles only `$crate`.\n+use base_db::CrateId;\n use either::Either;\n-use ra_db::CrateId;\n use syntax::ast;\n \n use crate::{", "previous_filename": "crates/ra_hir_expand/src/hygiene.rs"}, {"sha": "2be15e84132d91ecf716fa2e6bd89ddbcd86e00d", "filename": "crates/hir_expand/src/lib.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,4 +1,4 @@\n-//! `ra_hir_expand` deals with macro expansion.\n+//! `hir_expand` deals with macro expansion.\n //!\n //! Specifically, it implements a concept of `MacroFile` -- a file whose syntax\n //! tree originates not from the text of some `FileId`, but from some macro\n@@ -18,7 +18,7 @@ pub mod eager;\n use std::hash::Hash;\n use std::sync::Arc;\n \n-use ra_db::{impl_intern_key, salsa, CrateId, FileId};\n+use base_db::{impl_intern_key, salsa, CrateId, FileId};\n use syntax::{\n     algo,\n     ast::{self, AstNode},", "previous_filename": "crates/ra_hir_expand/src/lib.rs"}, {"sha": "49841c7a124fcd655507ffe73492416675d5c7c5", "filename": "crates/hir_expand/src/name.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fname.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -115,7 +115,7 @@ impl AsName for ast::FieldKind {\n     }\n }\n \n-impl AsName for ra_db::Dependency {\n+impl AsName for base_db::Dependency {\n     fn as_name(&self) -> Name {\n         Name::new_text(SmolStr::new(&*self.name))\n     }", "previous_filename": "crates/ra_hir_expand/src/name.rs"}, {"sha": "80255ea32740cec7db4534fd2dca7391d9a76535", "filename": "crates/hir_expand/src/proc_macro.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fproc_macro.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! Proc Macro Expander stub\n \n use crate::{db::AstDatabase, LazyMacroId};\n-use ra_db::{CrateId, ProcMacroId};\n+use base_db::{CrateId, ProcMacroId};\n use tt::buffer::{Cursor, TokenBuffer};\n \n #[derive(Debug, Clone, Copy, Eq, PartialEq, Hash)]", "previous_filename": "crates/ra_hir_expand/src/proc_macro.rs"}, {"sha": "219bc20978e5c66c79c156bf3591c248beacc2ae", "filename": "crates/hir_expand/src/quote.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fquote.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "previous_filename": "crates/ra_hir_expand/src/quote.rs"}, {"sha": "86a5d867e6808f5d1090e3c068d8e4bcbc4e277a", "filename": "crates/hir_expand/src/test_db.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Ftest_db.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,12 +5,12 @@ use std::{\n     sync::{Arc, Mutex},\n };\n \n-use ra_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate};\n+use base_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate};\n use rustc_hash::FxHashSet;\n \n #[salsa::database(\n-    ra_db::SourceDatabaseExtStorage,\n-    ra_db::SourceDatabaseStorage,\n+    base_db::SourceDatabaseExtStorage,\n+    base_db::SourceDatabaseStorage,\n     crate::db::AstDatabaseStorage\n )]\n #[derive(Default)]", "previous_filename": "crates/ra_hir_expand/src/test_db.rs"}, {"sha": "386f72f419563ddf89a0a16ec2ae3c450d364249", "filename": "crates/project_model/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -18,7 +18,7 @@ anyhow = \"1.0.26\"\n \n arena = { path = \"../arena\" }\n cfg = { path = \"../cfg\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n toolchain = { path = \"../toolchain\" }\n proc_macro_api =  { path = \"../proc_macro_api\" }\n paths =  { path = \"../paths\" }"}, {"sha": "e5c2d2b256668ff54b8bf3a7d79b2bfb86c6d418", "filename": "crates/project_model/src/cargo_workspace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fcargo_workspace.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -9,9 +9,9 @@ use std::{\n \n use anyhow::{Context, Result};\n use arena::{Arena, Idx};\n+use base_db::Edition;\n use cargo_metadata::{BuildScript, CargoOpt, Message, MetadataCommand, PackageId};\n use paths::{AbsPath, AbsPathBuf};\n-use ra_db::Edition;\n use rustc_hash::FxHashMap;\n \n use crate::cfg_flag::CfgFlag;"}, {"sha": "1f5a94d7f98f5fc40542b0610a91ef1ae352110e", "filename": "crates/project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -12,9 +12,9 @@ use std::{\n };\n \n use anyhow::{bail, Context, Result};\n+use base_db::{CrateGraph, CrateId, CrateName, Edition, Env, FileId};\n use cfg::CfgOptions;\n use paths::{AbsPath, AbsPathBuf};\n-use ra_db::{CrateGraph, CrateId, CrateName, Edition, Env, FileId};\n use rustc_hash::{FxHashMap, FxHashSet};\n \n use crate::cfg_flag::CfgFlag;"}, {"sha": "060ea5b7dc0c95c77dda8df6c204c233ee82dfcc", "filename": "crates/project_model/src/project_json.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Fproject_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fproject_model%2Fsrc%2Fproject_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fproject_json.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,8 +2,8 @@\n \n use std::path::PathBuf;\n \n+use base_db::{CrateId, CrateName, Dependency, Edition};\n use paths::{AbsPath, AbsPathBuf};\n-use ra_db::{CrateId, CrateName, Dependency, Edition};\n use rustc_hash::FxHashMap;\n use serde::{de, Deserialize};\n "}, {"sha": "ebac09be6261c96b261a3e287a2643d04939c469", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -18,7 +18,7 @@ stdx = { path = \"../stdx\" }\n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n profile = { path = \"../profile\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "2fdce037fb8b02d9c4fb15f78a2b6bbd7f8c6fa0", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,8 +3,8 @@\n use std::mem;\n \n use algo::find_covering_element;\n+use base_db::{FileId, FileRange};\n use hir::Semantics;\n-use ra_db::{FileId, FileRange};\n use ra_ide_db::{\n     source_change::{SourceChange, SourceFileEdit},\n     RootDatabase,"}, {"sha": "52fbc540eb082dc56eeaed31c31b982c181043ea", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,5 +1,5 @@\n+use base_db::FileId;\n use hir::{EnumVariant, Module, ModuleDef, Name};\n-use ra_db::FileId;\n use ra_ide_db::{defs::Definition, search::Reference, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{"}, {"sha": "7cd76ea06594f9fa1ed2356141e492316144d733", "filename": "crates/ra_assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,5 +1,5 @@\n+use base_db::FileId;\n use hir::{db::HirDatabase, HasSource, HasVisibility, PathResolution};\n-use ra_db::FileId;\n use syntax::{ast, AstNode, TextRange, TextSize};\n \n use crate::{utils::vis_offset, AssistContext, AssistId, AssistKind, Assists};"}, {"sha": "b38d640581caee331ed88d98836ab4fe65fa57e2", "filename": "crates/ra_assists/src/handlers/generate_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,5 +1,5 @@\n+use base_db::FileId;\n use hir::HirDisplay;\n-use ra_db::FileId;\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     ast::{"}, {"sha": "5d062b88b8bd7e0a07db95649725bf6acc0f119e", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -17,8 +17,8 @@ mod tests;\n pub mod utils;\n pub mod ast_transform;\n \n+use base_db::FileRange;\n use hir::Semantics;\n-use ra_db::FileRange;\n use ra_ide_db::{source_change::SourceChange, RootDatabase};\n use syntax::TextRange;\n "}, {"sha": "75d9736882227864b425ef46935422173495ea93", "filename": "crates/ra_assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Ftests.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n mod generated;\n \n+use base_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use hir::Semantics;\n-use ra_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use ra_ide_db::RootDatabase;\n use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};"}, {"sha": "edca5dc6f81e77abef302899574990d79c1243f1", "filename": "crates/ra_hir/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -18,8 +18,8 @@ itertools = \"0.9.0\"\n \n stdx = { path = \"../stdx\" }\n syntax = { path = \"../syntax\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n-hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }\n-hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n+hir_expand = { path = \"../hir_expand\" }\n+hir_def = { path = \"../hir_def\" }\n hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }"}, {"sha": "8ffb9e99b0ee813d6b44281cf6281c115742778f", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,6 +2,7 @@\n use std::{iter, sync::Arc};\n \n use arrayvec::ArrayVec;\n+use base_db::{CrateId, Edition, FileId};\n use either::Either;\n use hir_def::{\n     adt::ReprKind,\n@@ -30,7 +31,6 @@ use hir_ty::{\n     method_resolution, ApplicationTy, CallableDefId, Canonical, FnSig, GenericPredicate,\n     InEnvironment, Substs, TraitEnvironment, Ty, TyDefId, TypeCtor,\n };\n-use ra_db::{CrateId, Edition, FileId};\n use rustc_hash::FxHashSet;\n use stdx::impl_from;\n use syntax::{\n@@ -815,7 +815,7 @@ pub struct MacroDef {\n impl MacroDef {\n     /// FIXME: right now, this just returns the root module of the crate that\n     /// defines this macro. The reasons for this is that macros are expanded\n-    /// early, in `ra_hir_expand`, where modules simply do not exist yet.\n+    /// early, in `hir_expand`, where modules simply do not exist yet.\n     pub fn module(self, db: &dyn HirDatabase) -> Option<Module> {\n         let krate = self.id.krate?;\n         let module_id = db.crate_def_map(krate).root;"}, {"sha": "a53ac1e080be98d15222b2996dcbd74fbaebc7c6", "filename": "crates/ra_hir/src/from_id.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Ffrom_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Ffrom_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffrom_id.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -29,7 +29,7 @@ macro_rules! from_id {\n }\n \n from_id![\n-    (ra_db::CrateId, crate::Crate),\n+    (base_db::CrateId, crate::Crate),\n     (hir_def::ModuleId, crate::Module),\n     (hir_def::StructId, crate::Struct),\n     (hir_def::UnionId, crate::Union),"}, {"sha": "1467d825d9338bae0f0d0d7b1f72ff031756c565", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -4,14 +4,14 @@ mod source_to_def;\n \n use std::{cell::RefCell, fmt, iter::successors};\n \n+use base_db::{FileId, FileRange};\n use hir_def::{\n     resolver::{self, HasResolver, Resolver},\n     AsMacroCall, FunctionId, TraitId, VariantId,\n };\n use hir_expand::{hygiene::Hygiene, name::AsName, ExpansionInfo};\n use hir_ty::associated_type_shorthand_candidates;\n use itertools::Itertools;\n-use ra_db::{FileId, FileRange};\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     algo::{find_node_at_offset, skip_trivia_token},"}, {"sha": "5918b9541be2ecd0c79ace07e72a8cbb451167b2", "filename": "crates/ra_hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,5 +1,6 @@\n //! Maps *syntax* of various definitions to their semantic ids.\n \n+use base_db::FileId;\n use hir_def::{\n     child_by_source::ChildBySource,\n     dyn_map::DynMap,\n@@ -9,7 +10,6 @@ use hir_def::{\n     ModuleId, StaticId, StructId, TraitId, TypeAliasId, TypeParamId, UnionId, VariantId,\n };\n use hir_expand::{name::AsName, AstId, MacroDefKind};\n-use ra_db::FileId;\n use rustc_hash::FxHashMap;\n use stdx::impl_from;\n use syntax::{"}, {"sha": "8750584f946ac09db257c6022beb431e4a88ac42", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -31,7 +31,7 @@ use crate::{\n     MacroDef, ModPath, ModuleDef, Path, PathKind, Static, Struct, Trait, Type, TypeAlias,\n     TypeParam,\n };\n-use ra_db::CrateId;\n+use base_db::CrateId;\n \n /// `SourceAnalyzer` is a convenience wrapper which exposes HIR API in terms of\n /// original source files. It should not be used inside the HIR itself."}, {"sha": "d430b08ca7e294e40cf033d4811d347be3a4687b", "filename": "crates/ra_hir_ty/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -18,10 +18,10 @@ rustc-hash = \"1.1.0\"\n \n stdx = { path = \"../stdx\" }\n \n-hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n-hir_expand = { path = \"../ra_hir_expand\", package = \"ra_hir_expand\" }\n+hir_def = { path = \"../hir_def\" }\n+hir_expand = { path = \"../hir_expand\" }\n arena = { path = \"../arena\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n syntax = { path = \"../syntax\" }\n test_utils = { path = \"../test_utils\" }"}, {"sha": "ece68183e749fe57893bba854eb36103fcc9c330", "filename": "crates/ra_hir_ty/src/autoderef.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fautoderef.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,10 +5,10 @@\n \n use std::iter::successors;\n \n+use base_db::CrateId;\n use hir_def::lang_item::LangItemTarget;\n use hir_expand::name::name;\n use log::{info, warn};\n-use ra_db::CrateId;\n \n use crate::{\n     db::HirDatabase,"}, {"sha": "25cf9eb7f1279099a2e7de51ad08e8b7e5a7add0", "filename": "crates/ra_hir_ty/src/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdb.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,11 +3,11 @@\n use std::sync::Arc;\n \n use arena::map::ArenaMap;\n+use base_db::{impl_intern_key, salsa, CrateId, Upcast};\n use hir_def::{\n     db::DefDatabase, expr::ExprId, DefWithBodyId, FunctionId, GenericDefId, ImplId, LocalFieldId,\n     TypeParamId, VariantId,\n };\n-use ra_db::{impl_intern_key, salsa, CrateId, Upcast};\n \n use crate::{\n     method_resolution::{InherentImpls, TraitImpls},"}, {"sha": "ae0cf8d09b947e5cd7f2a4226b914041b2f30edb", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -208,12 +208,12 @@ impl Diagnostic for MismatchedArgCount {\n \n #[cfg(test)]\n mod tests {\n+    use base_db::{fixture::WithFixture, FileId, SourceDatabase, SourceDatabaseExt};\n     use hir_def::{db::DefDatabase, AssocItemId, ModuleDefId};\n     use hir_expand::{\n         db::AstDatabase,\n         diagnostics::{Diagnostic, DiagnosticSinkBuilder},\n     };\n-    use ra_db::{fixture::WithFixture, FileId, SourceDatabase, SourceDatabaseExt};\n     use rustc_hash::FxHashMap;\n     use syntax::{TextRange, TextSize};\n "}, {"sha": "1e748476ac1946a6afefce3b91056136424889f3", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -26,14 +26,14 @@ mod test_db;\n \n use std::{iter, mem, ops::Deref, sync::Arc};\n \n+use base_db::{salsa, CrateId};\n use hir_def::{\n     expr::ExprId,\n     type_ref::{Mutability, Rawness},\n     AdtId, AssocContainerId, DefWithBodyId, GenericDefId, HasModule, Lookup, TraitId, TypeAliasId,\n     TypeParamId,\n };\n use itertools::Itertools;\n-use ra_db::{salsa, CrateId};\n \n use crate::{\n     db::HirDatabase,"}, {"sha": "cd574e983f90ad09bb314e4c52d3f72807bc2562", "filename": "crates/ra_hir_ty/src/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flower.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -8,6 +8,7 @@\n use std::{iter, sync::Arc};\n \n use arena::map::ArenaMap;\n+use base_db::CrateId;\n use hir_def::{\n     adt::StructKind,\n     builtin_type::BuiltinType,\n@@ -20,7 +21,6 @@ use hir_def::{\n     UnionId, VariantId,\n };\n use hir_expand::name::Name;\n-use ra_db::CrateId;\n use smallvec::SmallVec;\n use stdx::impl_from;\n use test_utils::mark;"}, {"sha": "ec59145c700a85990045ce4f7c6926947276ac58", "filename": "crates/ra_hir_ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fmethod_resolution.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,14 +5,14 @@\n use std::{iter, sync::Arc};\n \n use arrayvec::ArrayVec;\n+use base_db::CrateId;\n use hir_def::{\n     builtin_type::{IntBitness, Signedness},\n     lang_item::LangItemTarget,\n     type_ref::Mutability,\n     AssocContainerId, AssocItemId, FunctionId, HasModule, ImplId, Lookup, TraitId,\n };\n use hir_expand::name::Name;\n-use ra_db::CrateId;\n use rustc_hash::{FxHashMap, FxHashSet};\n \n use super::Substs;"}, {"sha": "15b8435e9213427e492212e7c753b94da8808027", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,16 +5,16 @@ use std::{\n     sync::{Arc, Mutex},\n };\n \n+use base_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, SourceDatabase, Upcast};\n use hir_def::{db::DefDatabase, ModuleId};\n use hir_expand::db::AstDatabase;\n-use ra_db::{salsa, CrateId, FileId, FileLoader, FileLoaderDelegate, SourceDatabase, Upcast};\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::TextRange;\n use test_utils::extract_annotations;\n \n #[salsa::database(\n-    ra_db::SourceDatabaseExtStorage,\n-    ra_db::SourceDatabaseStorage,\n+    base_db::SourceDatabaseExtStorage,\n+    base_db::SourceDatabaseStorage,\n     hir_expand::db::AstDatabaseStorage,\n     hir_def::db::InternDatabaseStorage,\n     hir_def::db::DefDatabaseStorage,"}, {"sha": "f6b172c3afe74c083875b387a42d8128cafe9873", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -10,6 +10,7 @@ mod display_source_code;\n \n use std::sync::Arc;\n \n+use base_db::{fixture::WithFixture, FileRange, SourceDatabase, SourceDatabaseExt};\n use expect::Expect;\n use hir_def::{\n     body::{BodySourceMap, SyntheticSyntax},\n@@ -21,7 +22,6 @@ use hir_def::{\n     AssocItemId, DefWithBodyId, LocalModuleId, Lookup, ModuleDefId,\n };\n use hir_expand::{db::AstDatabase, InFile};\n-use ra_db::{fixture::WithFixture, FileRange, SourceDatabase, SourceDatabaseExt};\n use stdx::format_to;\n use syntax::{\n     algo,"}, {"sha": "59eb59d5fab036df05d68e98fdc919a910e52e6b", "filename": "crates/ra_hir_ty/src/tests/simple.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1776,8 +1776,8 @@ fn main() {\n     );\n }\n \n-// This test is actually testing the shadowing behavior within ra_hir_def. It\n-// lives here because the testing infrastructure in ra_hir_def isn't currently\n+// This test is actually testing the shadowing behavior within hir_def. It\n+// lives here because the testing infrastructure in hir_def isn't currently\n // capable of asserting the necessary conditions.\n #[test]\n fn should_be_shadowing_imports() {"}, {"sha": "2553237170da9a29cd5786132a08fb681ef21b9b", "filename": "crates/ra_hir_ty/src/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,10 +1,10 @@\n //! Trait solving using Chalk.\n use std::sync::Arc;\n \n+use base_db::CrateId;\n use chalk_ir::cast::Cast;\n use chalk_solve::Solver;\n use hir_def::{lang_item::LangItemTarget, TraitId};\n-use ra_db::CrateId;\n \n use crate::{db::HirDatabase, DebruijnIndex, Substs};\n "}, {"sha": "b3365341791f12377e24efa226ce03cd503978bf", "filename": "crates/ra_hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,11 +6,11 @@ use log::debug;\n use chalk_ir::{fold::shift::Shift, CanonicalVarKinds, GenericArg, TypeName};\n use chalk_solve::rust_ir::{self, OpaqueTyDatumBound, WellKnownTrait};\n \n+use base_db::{salsa::InternKey, CrateId};\n use hir_def::{\n     lang_item::{lang_attr, LangItemTarget},\n     AssocContainerId, AssocItemId, HasModule, Lookup, TypeAliasId,\n };\n-use ra_db::{salsa::InternKey, CrateId};\n \n use super::ChalkContext;\n use crate::{"}, {"sha": "fc0f9c20198c751efac1a88967011fe60cfa9446", "filename": "crates/ra_hir_ty/src/traits/chalk/interner.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Finterner.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,9 +2,9 @@\n //! representation of the various objects Chalk deals with (types, goals etc.).\n \n use super::tls;\n+use base_db::salsa::InternId;\n use chalk_ir::{GenericArg, Goal, GoalData};\n use hir_def::TypeAliasId;\n-use ra_db::salsa::InternId;\n use std::{fmt, sync::Arc};\n \n #[derive(Debug, Copy, Clone, Hash, PartialOrd, Ord, PartialEq, Eq)]"}, {"sha": "fe62f3fa7cd955e2c19a41f45923c5a363c4296f", "filename": "crates/ra_hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -9,8 +9,8 @@ use chalk_ir::{\n };\n use chalk_solve::rust_ir;\n \n+use base_db::salsa::InternKey;\n use hir_def::{type_ref::Mutability, AssocContainerId, GenericDefId, Lookup, TypeAliasId};\n-use ra_db::salsa::InternKey;\n \n use crate::{\n     db::HirDatabase,"}, {"sha": "1af51f3ae8f78a450e52a4e021ada9546b906792", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -23,7 +23,7 @@ stdx = { path = \"../stdx\" }\n \n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n cfg = { path = \"../cfg\" }\n profile = { path = \"../profile\" }"}, {"sha": "3578b8d3ce1cdae634729a691ac80567c0e37eed", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -137,7 +137,7 @@ impl CallLocations {\n \n #[cfg(test)]\n mod tests {\n-    use ra_db::FilePosition;\n+    use base_db::FilePosition;\n \n     use crate::mock_analysis::analysis_and_position;\n "}, {"sha": "0e0a201d091c49d7f8f8bc94e22016e3993143f3", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n+use base_db::SourceDatabase;\n use hir::{Semantics, SemanticsScope, Type};\n-use ra_db::SourceDatabase;\n use ra_ide_db::RootDatabase;\n use syntax::{\n     algo::{find_covering_element, find_node_at_offset},"}, {"sha": "4e59e3a48058054460a2f09b02bc13c65a086bd7", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,9 +6,9 @@\n \n use std::cell::RefCell;\n \n+use base_db::SourceDatabase;\n use hir::{diagnostics::DiagnosticSinkBuilder, Semantics};\n use itertools::Itertools;\n-use ra_db::SourceDatabase;\n use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstNode},"}, {"sha": "7e126d7a6a544e6eedb514627296cf99f65aef17", "filename": "crates/ra_ide/src/diagnostics/diagnostics_with_fix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics%2Fdiagnostics_with_fix.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,12 +2,12 @@\n //! The same module also has all curret custom fixes for the diagnostics implemented.\n use crate::Fix;\n use ast::{edit::IndentLevel, make};\n+use base_db::FileId;\n use hir::{\n     db::AstDatabase,\n     diagnostics::{Diagnostic, MissingFields, MissingOkInTailExpr, NoSuchField, UnresolvedModule},\n     HasSource, HirDisplay, Semantics, VariantDef,\n };\n-use ra_db::FileId;\n use ra_ide_db::{\n     source_change::{FileSystemEdit, SourceFileEdit},\n     RootDatabase,"}, {"sha": "09ec3f65e69d6df1fb4e797abdf441527c3704e3", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n \n+use base_db::{FileId, SourceDatabase};\n use either::Either;\n use hir::{original_range, AssocItem, FieldSource, HasSource, InFile, ModuleSource};\n-use ra_db::{FileId, SourceDatabase};\n use ra_ide_db::{defs::Definition, RootDatabase};\n use syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},"}, {"sha": "b93d116bf8689df0113adb7b261f2a010d589b2a", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -100,7 +100,7 @@ pub(crate) fn reference_definition(\n \n #[cfg(test)]\n mod tests {\n-    use ra_db::FileRange;\n+    use base_db::FileRange;\n     use syntax::{TextRange, TextSize};\n \n     use crate::mock_analysis::MockAnalysis;"}, {"sha": "6dc2ccfd05fc0d5f4a38c41ba09dd01d339eb66e", "filename": "crates/ra_ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_implementation.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -74,7 +74,7 @@ fn impls_for_trait(\n \n #[cfg(test)]\n mod tests {\n-    use ra_db::FileRange;\n+    use base_db::FileRange;\n \n     use crate::mock_analysis::MockAnalysis;\n "}, {"sha": "8017ca58cba9d38ebab97cd4cac7723c20c0af2b", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -54,7 +54,7 @@ fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n \n #[cfg(test)]\n mod tests {\n-    use ra_db::FileRange;\n+    use base_db::FileRange;\n \n     use crate::mock_analysis::MockAnalysis;\n "}, {"sha": "a74087f87a712404839d59ec52675810d7681c1d", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,9 +1,9 @@\n+use base_db::SourceDatabase;\n use hir::{\n     Adt, AsAssocItem, AssocItemContainer, Documentation, FieldSource, HasSource, HirDisplay,\n     Module, ModuleDef, ModuleSource, Semantics,\n };\n use itertools::Itertools;\n-use ra_db::SourceDatabase;\n use ra_ide_db::{\n     defs::{classify_name, classify_name_ref, Definition},\n     RootDatabase,\n@@ -352,8 +352,8 @@ fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n \n #[cfg(test)]\n mod tests {\n+    use base_db::FileLoader;\n     use expect::{expect, Expect};\n-    use ra_db::FileLoader;\n \n     use crate::mock_analysis::analysis_and_position;\n "}, {"sha": "789fbdaf232e55a1ccbb50e8e101e42f01ba21d2", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -47,11 +47,11 @@ mod typing;\n \n use std::sync::Arc;\n \n-use cfg::CfgOptions;\n-use ra_db::{\n+use base_db::{\n     salsa::{self, ParallelDatabase},\n     CheckCanceled, Env, FileLoader, FileSet, SourceDatabase, VfsPath,\n };\n+use cfg::CfgOptions;\n use ra_ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n@@ -81,12 +81,12 @@ pub use crate::{\n     },\n };\n \n-pub use hir::{Documentation, Semantics};\n-pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n-pub use ra_db::{\n+pub use base_db::{\n     Canceled, CrateGraph, CrateId, Edition, FileId, FilePosition, FileRange, SourceRoot,\n     SourceRootId,\n };\n+pub use hir::{Documentation, Semantics};\n+pub use ra_assists::{Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist};\n pub use ra_ide_db::{\n     change::AnalysisChange,\n     line_index::{LineCol, LineIndex},"}, {"sha": "363e6d27e5a55ac97fdd5090cbfd7051007a2f1e", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n use std::sync::Arc;\n \n+use base_db::{CrateName, FileSet, SourceRoot, VfsPath};\n use cfg::CfgOptions;\n-use ra_db::{CrateName, FileSet, SourceRoot, VfsPath};\n use test_utils::{\n     extract_annotations, extract_range_or_offset, Fixture, RangeOrOffset, CURSOR_MARKER,\n };"}, {"sha": "8439e1d5d3311c0292bb60fd67fe7efe186376c0", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,5 +1,5 @@\n+use base_db::{CrateId, FileId, FilePosition};\n use hir::Semantics;\n-use ra_db::{CrateId, FileId, FilePosition};\n use ra_ide_db::RootDatabase;\n use syntax::{\n     algo::find_node_at_offset,\n@@ -63,8 +63,8 @@ pub(crate) fn crate_for(db: &RootDatabase, file_id: FileId) -> Vec<CrateId> {\n \n #[cfg(test)]\n mod tests {\n+    use base_db::Env;\n     use cfg::CfgOptions;\n-    use ra_db::Env;\n     use test_utils::mark;\n \n     use crate::{"}, {"sha": "5697b9d879d802b5e34bf5627f84caea800e822d", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n+use base_db::SourceDatabaseExt;\n use hir::{Module, ModuleDef, ModuleSource, Semantics};\n-use ra_db::SourceDatabaseExt;\n use ra_ide_db::{\n     defs::{classify_name, classify_name_ref, Definition, NameClass, NameRefClass},\n     RootDatabase,"}, {"sha": "97b82b70e5b4db8da5b025bbad74fd677104438a", "filename": "crates/ra_ide/src/ssr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fssr.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,4 +1,4 @@\n-use ra_db::{FilePosition, FileRange};\n+use base_db::{FilePosition, FileRange};\n use ra_ide_db::RootDatabase;\n \n use crate::SourceFileEdit;"}, {"sha": "869c74accc20f956a7cb41f51c80f68023e02ffb", "filename": "crates/ra_ide/src/status.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fstatus.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,11 +1,11 @@\n use std::{fmt, iter::FromIterator, sync::Arc};\n \n-use hir::MacroFile;\n-use profile::{memory_usage, Bytes};\n-use ra_db::{\n+use base_db::{\n     salsa::debug::{DebugQueryTable, TableEntry},\n     FileTextQuery, SourceRootId,\n };\n+use hir::MacroFile;\n+use profile::{memory_usage, Bytes};\n use ra_ide_db::{\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex},\n     RootDatabase,\n@@ -16,7 +16,7 @@ use syntax::{ast, Parse, SyntaxNode};\n use crate::FileId;\n \n fn syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n-    ra_db::ParseQuery.in_db(db).entries::<SyntaxTreeStats>()\n+    base_db::ParseQuery.in_db(db).entries::<SyntaxTreeStats>()\n }\n fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n     hir::db::ParseMacroQuery.in_db(db).entries::<SyntaxTreeStats>()"}, {"sha": "249368ff8142a3670197a40e2e9181cef25072b5", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! Renders a bit of code as HTML.\n \n+use base_db::SourceDatabase;\n use oorandom::Rand32;\n-use ra_db::SourceDatabase;\n use syntax::{AstNode, TextRange, TextSize};\n \n use crate::{syntax_highlighting::highlight, FileId, RootDatabase};"}, {"sha": "17daf06b66c9874cd9a4da26a6aa6b9b90abc580", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,4 +1,4 @@\n-use ra_db::{FileId, SourceDatabase};\n+use base_db::{FileId, SourceDatabase};\n use ra_ide_db::RootDatabase;\n use syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,"}, {"sha": "75f2a6b60573074fecee82addbeeeeca7170ac7d", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -15,7 +15,7 @@\n \n mod on_enter;\n \n-use ra_db::{FilePosition, SourceDatabase};\n+use base_db::{FilePosition, SourceDatabase};\n use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n use syntax::{\n     algo::find_node_at_offset,"}, {"sha": "1939306590f07f3cd66b7511e0fe4a2a0397119f", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! Handles the `Enter` key press. At the momently, this only continues\n //! comments, but should handle indent some time in the future as well.\n \n-use ra_db::{FilePosition, SourceDatabase};\n+use base_db::{FilePosition, SourceDatabase};\n use ra_ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstToken},"}, {"sha": "0cda7090d3f7630dcc45f1bf8d0540cad3555e8a", "filename": "crates/ra_ide_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -23,7 +23,7 @@ stdx = { path = \"../stdx\" }\n \n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }\n "}, {"sha": "8b4fd7ab84981f21b5ee7c93fc6cd54e1c401f1e", "filename": "crates/ra_ide_db/src/change.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fchange.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,11 +3,11 @@\n \n use std::{fmt, sync::Arc, time};\n \n-use profile::{memory_usage, Bytes};\n-use ra_db::{\n+use base_db::{\n     salsa::{Database, Durability, SweepStrategy},\n     CrateGraph, FileId, SourceDatabase, SourceDatabaseExt, SourceRoot, SourceRootId,\n };\n+use profile::{memory_usage, Bytes};\n use rustc_hash::FxHashSet;\n \n use crate::{symbol_index::SymbolsDatabase, RootDatabase};\n@@ -146,7 +146,7 @@ impl RootDatabase {\n \n         let sweep = SweepStrategy::default().discard_values().sweep_all_revisions();\n \n-        ra_db::ParseQuery.in_db(self).sweep(sweep);\n+        base_db::ParseQuery.in_db(self).sweep(sweep);\n         hir::db::ParseMacroQuery.in_db(self).sweep(sweep);\n \n         // Macros do take significant space, but less then the syntax trees\n@@ -201,14 +201,14 @@ impl RootDatabase {\n         }\n         sweep_each_query![\n             // SourceDatabase\n-            ra_db::ParseQuery\n-            ra_db::CrateGraphQuery\n+            base_db::ParseQuery\n+            base_db::CrateGraphQuery\n \n             // SourceDatabaseExt\n-            ra_db::FileTextQuery\n-            ra_db::FileSourceRootQuery\n-            ra_db::SourceRootQuery\n-            ra_db::SourceRootCratesQuery\n+            base_db::FileTextQuery\n+            base_db::FileSourceRootQuery\n+            base_db::SourceRootQuery\n+            base_db::SourceRootCratesQuery\n \n             // AstDatabase\n             hir::db::AstIdMapQuery"}, {"sha": "fd474cd0f4918c27c6dabc42281ff4cd81d2f46c", "filename": "crates/ra_ide_db/src/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -13,19 +13,19 @@ mod wasm_shims;\n \n use std::{fmt, sync::Arc};\n \n-use hir::db::{AstDatabase, DefDatabase, HirDatabase};\n-use ra_db::{\n+use base_db::{\n     salsa::{self, Durability},\n     Canceled, CheckCanceled, CrateId, FileId, FileLoader, FileLoaderDelegate, SourceDatabase,\n     Upcast,\n };\n+use hir::db::{AstDatabase, DefDatabase, HirDatabase};\n use rustc_hash::FxHashSet;\n \n use crate::{line_index::LineIndex, symbol_index::SymbolsDatabase};\n \n #[salsa::database(\n-    ra_db::SourceDatabaseStorage,\n-    ra_db::SourceDatabaseExtStorage,\n+    base_db::SourceDatabaseStorage,\n+    base_db::SourceDatabaseExtStorage,\n     LineIndexDatabaseStorage,\n     symbol_index::SymbolsDatabaseStorage,\n     hir::db::InternDatabaseStorage,\n@@ -111,8 +111,8 @@ impl RootDatabase {\n     }\n \n     pub fn update_lru_capacity(&mut self, lru_capacity: Option<usize>) {\n-        let lru_capacity = lru_capacity.unwrap_or(ra_db::DEFAULT_LRU_CAP);\n-        ra_db::ParseQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n+        let lru_capacity = lru_capacity.unwrap_or(base_db::DEFAULT_LRU_CAP);\n+        base_db::ParseQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n         hir::db::ParseMacroQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n         hir::db::MacroExpandQuery.in_db_mut(self).set_lru_capacity(lru_capacity);\n     }\n@@ -129,7 +129,7 @@ impl salsa::ParallelDatabase for RootDatabase {\n }\n \n #[salsa::query_group(LineIndexDatabaseStorage)]\n-pub trait LineIndexDatabase: ra_db::SourceDatabase + CheckCanceled {\n+pub trait LineIndexDatabase: base_db::SourceDatabase + CheckCanceled {\n     fn line_index(&self, file_id: FileId) -> Arc<LineIndex>;\n }\n "}, {"sha": "b9360bf12912f04cc3ce8d48d93425e97e4f55d3", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,9 +6,9 @@\n \n use std::{convert::TryInto, mem};\n \n+use base_db::{FileId, FileRange, SourceDatabaseExt};\n use hir::{DefWithBody, HasSource, Module, ModuleSource, Semantics, Visibility};\n use once_cell::unsync::Lazy;\n-use ra_db::{FileId, FileRange, SourceDatabaseExt};\n use rustc_hash::FxHashMap;\n use syntax::{ast, match_ast, AstNode, TextRange, TextSize};\n "}, {"sha": "f1590ec66326856c3ea2e9df385701f95e6e4173", "filename": "crates/ra_ide_db/src/source_change.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsource_change.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,7 +3,7 @@\n //!\n //! It can be viewed as a dual for `AnalysisChange`.\n \n-use ra_db::FileId;\n+use base_db::FileId;\n use text_edit::TextEdit;\n \n #[derive(Default, Debug, Clone)]"}, {"sha": "654df898e93d76c22a4384009ac231f8821adff5", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -28,12 +28,12 @@ use std::{\n     sync::Arc,\n };\n \n-use fst::{self, Streamer};\n-use hir::db::DefDatabase;\n-use ra_db::{\n+use base_db::{\n     salsa::{self, ParallelDatabase},\n     CrateId, FileId, SourceDatabaseExt, SourceRootId,\n };\n+use fst::{self, Streamer};\n+use hir::db::DefDatabase;\n use rayon::prelude::*;\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{"}, {"sha": "f290939cfbdd24c7cecd371b19dee34c813e47b6", "filename": "crates/ra_ssr/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -13,7 +13,7 @@ doctest = false\n [dependencies]\n text_edit = { path = \"../text_edit\" }\n syntax = { path = \"../syntax\" }\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n rustc-hash = \"1.1.0\""}, {"sha": "6725582e49b2fa6340c944af201c77df6cf6d5c5", "filename": "crates/ra_ssr/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -18,8 +18,8 @@ use crate::errors::bail;\n pub use crate::errors::SsrError;\n pub use crate::matching::Match;\n use crate::matching::MatchFailureReason;\n+use base_db::{FileId, FilePosition, FileRange};\n use hir::Semantics;\n-use ra_db::{FileId, FilePosition, FileRange};\n use ra_ide_db::source_change::SourceFileEdit;\n use resolving::ResolvedRule;\n use rustc_hash::FxHashMap;\n@@ -71,7 +71,7 @@ impl<'db> MatchFinder<'db> {\n \n     /// Constructs an instance using the start of the first file in `db` as the lookup context.\n     pub fn at_first_file(db: &'db ra_ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n-        use ra_db::SourceDatabaseExt;\n+        use base_db::SourceDatabaseExt;\n         use ra_ide_db::symbol_index::SymbolsDatabase;\n         if let Some(first_file_id) = db\n             .local_roots()\n@@ -105,7 +105,7 @@ impl<'db> MatchFinder<'db> {\n \n     /// Finds matches for all added rules and returns edits for all found matches.\n     pub fn edits(&self) -> Vec<SourceFileEdit> {\n-        use ra_db::SourceDatabaseExt;\n+        use base_db::SourceDatabaseExt;\n         let mut matches_by_file = FxHashMap::default();\n         for m in self.matches().matches {\n             matches_by_file\n@@ -150,7 +150,7 @@ impl<'db> MatchFinder<'db> {\n     /// them, while recording reasons why they don't match. This API is useful for command\n     /// line-based debugging where providing a range is difficult.\n     pub fn debug_where_text_equal(&self, file_id: FileId, snippet: &str) -> Vec<MatchDebugInfo> {\n-        use ra_db::SourceDatabaseExt;\n+        use base_db::SourceDatabaseExt;\n         let file = self.sema.parse(file_id);\n         let mut res = Vec::new();\n         let file_text = self.sema.db.file_text(file_id);"}, {"sha": "e81a87c4714b8e27d7b9567e1377da5337fe1a59", "filename": "crates/ra_ssr/src/matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fmatching.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,8 +6,8 @@ use crate::{\n     resolving::{ResolvedPattern, ResolvedRule, UfcsCallInfo},\n     SsrMatches,\n };\n+use base_db::FileRange;\n use hir::Semantics;\n-use ra_db::FileRange;\n use rustc_hash::FxHashMap;\n use std::{cell::Cell, iter::Peekable};\n use syntax::ast::{AstNode, AstToken};"}, {"sha": "dac09bae803a453b60d971a8326674d9575132b3", "filename": "crates/ra_ssr/src/resolving.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fresolving.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -2,8 +2,8 @@\n \n use crate::errors::error;\n use crate::{parsing, SsrError};\n+use base_db::FilePosition;\n use parsing::Placeholder;\n-use ra_db::FilePosition;\n use rustc_hash::FxHashMap;\n use syntax::{ast, SmolStr, SyntaxKind, SyntaxNode, SyntaxToken};\n use test_utils::mark;"}, {"sha": "434953fb48b9b0550aa6ca874e2ddf244538d564", "filename": "crates/ra_ssr/src/search.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Fsearch.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,7 +5,7 @@ use crate::{\n     resolving::{ResolvedPath, ResolvedPattern, ResolvedRule},\n     Match, MatchFinder,\n };\n-use ra_db::{FileId, FileRange};\n+use base_db::{FileId, FileRange};\n use ra_ide_db::{\n     defs::Definition,\n     search::{Reference, SearchScope},\n@@ -145,7 +145,7 @@ impl<'db> MatchFinder<'db> {\n     fn search_files_do(&self, mut callback: impl FnMut(FileId)) {\n         if self.restrict_ranges.is_empty() {\n             // Unrestricted search.\n-            use ra_db::SourceDatabaseExt;\n+            use base_db::SourceDatabaseExt;\n             use ra_ide_db::symbol_index::SymbolsDatabase;\n             for &root in self.sema.db.local_roots().iter() {\n                 let sr = self.sema.db.source_root(root);"}, {"sha": "54c3da9db356fdadc3fc162b89d8e3598ec998af", "filename": "crates/ra_ssr/src/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Fra_ssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ssr%2Fsrc%2Ftests.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,6 +1,6 @@\n use crate::{MatchFinder, SsrRule};\n+use base_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt};\n use expect::{expect, Expect};\n-use ra_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt};\n use rustc_hash::FxHashSet;\n use std::sync::Arc;\n use test_utils::{mark, RangeOrOffset};\n@@ -62,7 +62,7 @@ fn parser_undefined_placeholder_in_replacement() {\n /// `code` may optionally contain a cursor marker `<|>`. If it doesn't, then the position will be\n /// the start of the file. If there's a second cursor marker, then we'll return a single range.\n pub(crate) fn single_file(code: &str) -> (ra_ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n-    use ra_db::fixture::WithFixture;\n+    use base_db::fixture::WithFixture;\n     use ra_ide_db::symbol_index::SymbolsDatabase;\n     let (mut db, file_id, range_or_offset) = if code.contains(test_utils::CURSOR_MARKER) {\n         ra_ide_db::RootDatabase::with_range_or_offset(code)\n@@ -83,7 +83,7 @@ pub(crate) fn single_file(code: &str) -> (ra_ide_db::RootDatabase, FilePosition,\n         }\n     }\n     let mut local_roots = FxHashSet::default();\n-    local_roots.insert(ra_db::fixture::WORKSPACE);\n+    local_roots.insert(base_db::fixture::WORKSPACE);\n     db.set_local_roots_with_durability(Arc::new(local_roots), Durability::HIGH);\n     (db, position, selections)\n }"}, {"sha": "0dee719de559a52c55e5888263a8c49ffa2df1dc", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -46,11 +46,11 @@ cfg = { path = \"../cfg\" }\n toolchain = { path = \"../toolchain\" }\n \n # This should only be used in CLI\n-ra_db = { path = \"../ra_db\" }\n+base_db = { path = \"../base_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n ra_ssr = { path = \"../ra_ssr\" }\n hir = { path = \"../ra_hir\", package = \"ra_hir\" }\n-hir_def = { path = \"../ra_hir_def\", package = \"ra_hir_def\" }\n+hir_def = { path = \"../hir_def\" }\n hir_ty = { path = \"../ra_hir_ty\", package = \"ra_hir_ty\" }\n proc_macro_srv = { path = \"../proc_macro_srv\" }\n "}, {"sha": "b20a1675e6d349041721a98e5f06addab769af73", "filename": "crates/rust-analyzer/src/cli/analysis_bench.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,7 +3,7 @@\n use std::{env, path::PathBuf, str::FromStr, sync::Arc, time::Instant};\n \n use anyhow::{bail, format_err, Result};\n-use ra_db::{\n+use base_db::{\n     salsa::{Database, Durability},\n     FileId,\n };"}, {"sha": "fb2b2b00014486d7904c10286247888e13cf0a19", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,6 +6,10 @@ use std::{\n     time::{SystemTime, UNIX_EPOCH},\n };\n \n+use base_db::{\n+    salsa::{self, ParallelDatabase},\n+    SourceDatabaseExt,\n+};\n use hir::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n     original_range, AssocItem, Crate, HasSource, HirDisplay, ModuleDef,\n@@ -14,10 +18,6 @@ use hir_def::FunctionId;\n use hir_ty::{Ty, TypeWalk};\n use itertools::Itertools;\n use oorandom::Rand32;\n-use ra_db::{\n-    salsa::{self, ParallelDatabase},\n-    SourceDatabaseExt,\n-};\n use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n use stdx::format_to;"}, {"sha": "56403cabe4681d2f7bf5b441edad35af765e3122", "filename": "crates/rust-analyzer/src/cli/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -6,8 +6,8 @@ use std::path::Path;\n use anyhow::anyhow;\n use rustc_hash::FxHashSet;\n \n+use base_db::SourceDatabaseExt;\n use hir::Crate;\n-use ra_db::SourceDatabaseExt;\n use ra_ide::Severity;\n \n use crate::cli::{load_cargo::load_cargo, Result};"}, {"sha": "54273480327d631520576ea8872fc4bbd2d1f61d", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -3,9 +3,9 @@\n use std::{path::Path, sync::Arc};\n \n use anyhow::Result;\n+use base_db::CrateGraph;\n use crossbeam_channel::{unbounded, Receiver};\n use project_model::{CargoConfig, ProcMacroClient, ProjectManifest, ProjectWorkspace};\n-use ra_db::CrateGraph;\n use ra_ide::{AnalysisChange, AnalysisHost};\n use vfs::{loader::Handle, AbsPath, AbsPathBuf};\n "}, {"sha": "08788fb415474eeb7cea4825ce20f0bb215d924f", "filename": "crates/rust-analyzer/src/cli/ssr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -4,7 +4,7 @@ use crate::cli::{load_cargo::load_cargo, Result};\n use ra_ssr::{MatchFinder, SsrPattern, SsrRule};\n \n pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n-    use ra_db::SourceDatabaseExt;\n+    use base_db::SourceDatabaseExt;\n     let (host, vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();\n     let mut match_finder = MatchFinder::at_first_file(db)?;\n@@ -26,7 +26,7 @@ pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n /// `debug_snippet`. This is intended for debugging and probably isn't in it's current form useful\n /// for much else.\n pub fn search_for_patterns(patterns: Vec<SsrPattern>, debug_snippet: Option<String>) -> Result<()> {\n-    use ra_db::SourceDatabaseExt;\n+    use base_db::SourceDatabaseExt;\n     use ra_ide_db::symbol_index::SymbolsDatabase;\n     let (host, _vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();"}, {"sha": "6d5408156059b13b6fe33ac3d5bcf6882afa3c42", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1116,7 +1116,7 @@ mod tests {\n     fn macro_compiler_error() {\n         check(\n             r##\"{\n-        \"rendered\": \"error: Please register your known path in the path module\\n   --> crates/ra_hir_def/src/path.rs:265:9\\n    |\\n265 |         compile_error!(\\\"Please register your known path in the path module\\\")\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n    | \\n   ::: crates/ra_hir_def/src/data.rs:80:16\\n    |\\n80  |     let path = path![std::future::Future];\\n    |                -------------------------- in this macro invocation\\n\\n\",\n+        \"rendered\": \"error: Please register your known path in the path module\\n   --> crates/hir_def/src/path.rs:265:9\\n    |\\n265 |         compile_error!(\\\"Please register your known path in the path module\\\")\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n    | \\n   ::: crates/hir_def/src/data.rs:80:16\\n    |\\n80  |     let path = path![std::future::Future];\\n    |                -------------------------- in this macro invocation\\n\\n\",\n         \"children\": [],\n         \"code\": null,\n         \"level\": \"error\",\n@@ -1134,7 +1134,7 @@ mod tests {\n                         \"column_end\": 2,\n                         \"column_start\": 1,\n                         \"expansion\": null,\n-                        \"file_name\": \"crates/ra_hir_def/src/path.rs\",\n+                        \"file_name\": \"crates/hir_def/src/path.rs\",\n                         \"is_primary\": false,\n                         \"label\": null,\n                         \"line_end\": 267,\n@@ -1227,7 +1227,7 @@ mod tests {\n                                 \"column_end\": 2,\n                                 \"column_start\": 1,\n                                 \"expansion\": null,\n-                                \"file_name\": \"crates/ra_hir_def/src/path.rs\",\n+                                \"file_name\": \"crates/hir_def/src/path.rs\",\n                                 \"is_primary\": false,\n                                 \"label\": null,\n                                 \"line_end\": 277,\n@@ -1284,7 +1284,7 @@ mod tests {\n                                 \"column_end\": 42,\n                                 \"column_start\": 16,\n                                 \"expansion\": null,\n-                                \"file_name\": \"crates/ra_hir_def/src/data.rs\",\n+                                \"file_name\": \"crates/hir_def/src/data.rs\",\n                                 \"is_primary\": false,\n                                 \"label\": null,\n                                 \"line_end\": 80,\n@@ -1300,7 +1300,7 @@ mod tests {\n                                 ]\n                             }\n                         },\n-                        \"file_name\": \"crates/ra_hir_def/src/path.rs\",\n+                        \"file_name\": \"crates/hir_def/src/path.rs\",\n                         \"is_primary\": false,\n                         \"label\": null,\n                         \"line_end\": 272,\n@@ -1316,7 +1316,7 @@ mod tests {\n                         ]\n                     }\n                 },\n-                \"file_name\": \"crates/ra_hir_def/src/path.rs\",\n+                \"file_name\": \"crates/hir_def/src/path.rs\",\n                 \"is_primary\": true,\n                 \"label\": null,\n                 \"line_end\": 265,"}, {"sha": "945a353dd50d3bdbcaa5735d2346698cf0c71cea", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,7 +1,7 @@\n //! Conversion lsp_types types to rust-analyzer specific ones.\n use std::convert::TryFrom;\n \n-use ra_db::{FileId, FilePosition, FileRange};\n+use base_db::{FileId, FilePosition, FileRange};\n use ra_ide::{AssistKind, LineCol, LineIndex};\n use syntax::{TextRange, TextSize};\n use vfs::AbsPathBuf;"}, {"sha": "f04a0a59fd8a6113f842b9088fbed4d91417e805", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,12 +5,12 @@\n \n use std::{sync::Arc, time::Instant};\n \n+use base_db::{CrateId, VfsPath};\n use crossbeam_channel::{unbounded, Receiver, Sender};\n use flycheck::FlycheckHandle;\n use lsp_types::{SemanticTokens, Url};\n use parking_lot::{Mutex, RwLock};\n use project_model::{CargoWorkspace, ProcMacroClient, ProjectWorkspace, Target};\n-use ra_db::{CrateId, VfsPath};\n use ra_ide::{Analysis, AnalysisChange, AnalysisHost, FileId};\n use rustc_hash::FxHashMap;\n "}, {"sha": "17d1550cddfd0bb1d6079ac91b1ca91b4d6ca9df", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,8 +1,8 @@\n //! Utilities for LSP-related boilerplate code.\n use std::{error::Error, ops::Range};\n \n+use base_db::Canceled;\n use lsp_server::Notification;\n-use ra_db::Canceled;\n use ra_ide::LineIndex;\n \n use crate::{from_proto, global_state::GlobalState};"}, {"sha": "5726820f917695cea4579f0666f2310b0f9a52ed", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -5,10 +5,10 @@ use std::{\n     time::{Duration, Instant},\n };\n \n+use base_db::VfsPath;\n use crossbeam_channel::{select, Receiver};\n use lsp_server::{Connection, Notification, Request, Response};\n use lsp_types::notification::Notification as _;\n-use ra_db::VfsPath;\n use ra_ide::{Canceled, FileId};\n \n use crate::{"}, {"sha": "fd133e31243074ccd7e25690bef95b9bfb355d38", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,9 +1,9 @@\n //! Project loading & configuration updates\n use std::{mem, sync::Arc};\n \n+use base_db::{CrateGraph, SourceRoot, VfsPath};\n use flycheck::FlycheckHandle;\n use project_model::{ProcMacroClient, ProjectWorkspace};\n-use ra_db::{CrateGraph, SourceRoot, VfsPath};\n use ra_ide::AnalysisChange;\n use vfs::{file_set::FileSetConfig, AbsPath, AbsPathBuf, ChangeKind};\n "}, {"sha": "93a4b1f27d4d54fcb40b440a89b98d9a2f4d646a", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -4,8 +4,8 @@ use std::{\n     sync::atomic::{AtomicU32, Ordering},\n };\n \n+use base_db::{FileId, FileRange};\n use itertools::Itertools;\n-use ra_db::{FileId, FileRange};\n use ra_ide::{\n     Assist, AssistKind, CallInfo, CompletionItem, CompletionItemKind, Documentation,\n     FileSystemEdit, Fold, FoldKind, Highlight, HighlightModifier, HighlightTag, HighlightedRange,"}, {"sha": "89dae7d5a69d0aafba1a097613c8cd6de6079936", "filename": "crates/rust-analyzer/test_data/macro_compiler_error.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Ftest_data%2Fmacro_compiler_error.txt", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/crates%2Frust-analyzer%2Ftest_data%2Fmacro_compiler_error.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftest_data%2Fmacro_compiler_error.txt?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -1,6 +1,6 @@\n [\n     MappedRustDiagnostic {\n-        url: \"file:///test/crates/ra_hir_def/src/data.rs\",\n+        url: \"file:///test/crates/hir_def/src/data.rs\",\n         diagnostic: Diagnostic {\n             range: Range {\n                 start: Position {\n@@ -24,7 +24,7 @@\n                 [\n                     DiagnosticRelatedInformation {\n                         location: Location {\n-                            uri: \"file:///test/crates/ra_hir_def/src/path.rs\",\n+                            uri: \"file:///test/crates/hir_def/src/path.rs\",\n                             range: Range {\n                                 start: Position {\n                                     line: 264,"}, {"sha": "746d41f83ced4fb83dc09304db684dafa13a6229", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -92,14 +92,14 @@ in particular: it shows off various methods of working with syntax tree.\n See [#93](https://github.com/rust-analyzer/rust-analyzer/pull/93) for an example PR which\n fixes a bug in the grammar.\n \n-### `crates/ra_db`\n+### `crates/base_db`\n \n We use the [salsa](https://github.com/salsa-rs/salsa) crate for incremental and\n on-demand computation. Roughly, you can think of salsa as a key-value store, but\n-it also can compute derived values using specified functions. The `ra_db` crate\n+it also can compute derived values using specified functions. The `base_db` crate\n provides basic infrastructure for interacting with salsa. Crucially, it\n defines most of the \"input\" queries: facts supplied by the client of the\n-analyzer. Reading the docs of the `ra_db::input` module should be useful:\n+analyzer. Reading the docs of the `base_db::input` module should be useful:\n everything else is strictly derived from those inputs.\n \n ### `crates/ra_hir*` crates"}, {"sha": "d14143226b1c3bc2b1d5b5040fcab578d542686a", "filename": "docs/dev/guide.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/docs%2Fdev%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/docs%2Fdev%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fguide.md?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -259,7 +259,7 @@ Salsa input queries are defined in [`FilesDatabase`] (which is a part of\n `RootDatabase`). They closely mirror the familiar `AnalysisChange` structure:\n indeed, what `apply_change` does is it sets the values of input queries.\n \n-[`FilesDatabase`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_db/src/input.rs#L150-L174\n+[`FilesDatabase`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/base_db/src/input.rs#L150-L174\n \n ## From text to semantic model\n \n@@ -392,7 +392,7 @@ integers which can \"intern\" a location and return an integer ID back. The salsa\n database we use includes a couple of [interners]. How to \"garbage collect\"\n unused locations is an open question.\n \n-[`LocationInterner`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_db/src/loc2id.rs#L65-L71\n+[`LocationInterner`]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/base_db/src/loc2id.rs#L65-L71\n [interners]: https://github.com/rust-analyzer/rust-analyzer/blob/guide-2019-01/crates/ra_hir/src/db.rs#L22-L23\n \n For example, we use `LocationInterner` to assign IDs to definitions of functions,"}, {"sha": "807ef587ce3cfe48cabfacc92ce1d026e0cdb3e7", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -139,7 +139,7 @@ pub fn run_pre_cache() -> Result<()> {\n     }\n \n     fs2::remove_file(\"./target/.rustc_info.json\")?;\n-    let to_delete = [\"ra_\", \"heavy_test\", \"xtask\"];\n+    let to_delete = [\"hir\", \"heavy_test\", \"xtask\", \"ide\", \"rust-analyzer\"];\n     for &dir in [\"./target/debug/deps\", \"target/debug/.fingerprint\"].iter() {\n         for entry in Path::new(dir).read_dir()? {\n             let entry = entry?;"}, {"sha": "dc367d1e03a200dcdca19bf60ab80e6c10dac777", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9926948ca267932ccc1341388bfd1b3fa88a001/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9926948ca267932ccc1341388bfd1b3fa88a001/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=e9926948ca267932ccc1341388bfd1b3fa88a001", "patch": "@@ -193,7 +193,7 @@ impl TidyDocs {\n \n         let poorly_documented = [\n             \"ra_hir\",\n-            \"ra_hir_expand\",\n+            \"hir_expand\",\n             \"ra_ide\",\n             \"mbe\",\n             \"parser\","}]}