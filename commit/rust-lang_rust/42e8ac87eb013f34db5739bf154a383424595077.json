{"sha": "42e8ac87eb013f34db5739bf154a383424595077", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZThhYzg3ZWIwMTNmMzRkYjU3MzliZjE1NGEzODM0MjQ1OTUwNzc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-23T23:41:14Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-25T06:27:25Z"}, "message": "Implement `From<ast::FloatTy>` for `PrimitiveType`.", "tree": {"sha": "7138df77b28f82b5547cd3241d5df200fa78ef6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7138df77b28f82b5547cd3241d5df200fa78ef6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42e8ac87eb013f34db5739bf154a383424595077", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42e8ac87eb013f34db5739bf154a383424595077", "html_url": "https://github.com/rust-lang/rust/commit/42e8ac87eb013f34db5739bf154a383424595077", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42e8ac87eb013f34db5739bf154a383424595077/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "168cfea8afaf2dddae3d848a7f49ecb63d130b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/168cfea8afaf2dddae3d848a7f49ecb63d130b47", "html_url": "https://github.com/rust-lang/rust/commit/168cfea8afaf2dddae3d848a7f49ecb63d130b47"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "e2e655ce38bccc807f04796d12b39ede5aeb0b24", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/42e8ac87eb013f34db5739bf154a383424595077/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42e8ac87eb013f34db5739bf154a383424595077/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=42e8ac87eb013f34db5739bf154a383424595077", "patch": "@@ -1643,6 +1643,15 @@ impl From<ast::UintTy> for PrimitiveType {\n     }\n }\n \n+impl From<ast::FloatTy> for PrimitiveType {\n+    fn from(float_ty: ast::FloatTy) -> PrimitiveType {\n+        match float_ty {\n+            ast::FloatTy::F32 => PrimitiveType::F32,\n+            ast::FloatTy::F64 => PrimitiveType::F64,\n+        }\n+    }\n+}\n+\n // Poor man's type parameter substitution at HIR level.\n // Used to replace private type aliases in public signatures with their aliased types.\n struct SubstAlias<'a, 'tcx: 'a> {\n@@ -1797,8 +1806,7 @@ impl<'tcx> Clean<Type> for ty::Ty<'tcx> {\n             ty::TyChar => Primitive(PrimitiveType::Char),\n             ty::TyInt(int_ty) => Primitive(int_ty.into()),\n             ty::TyUint(uint_ty) => Primitive(uint_ty.into()),\n-            ty::TyFloat(ast::FloatTy::F32) => Primitive(PrimitiveType::F32),\n-            ty::TyFloat(ast::FloatTy::F64) => Primitive(PrimitiveType::F64),\n+            ty::TyFloat(float_ty) => Primitive(float_ty.into()),\n             ty::TyStr => Primitive(PrimitiveType::Str),\n             ty::TyBox(t) => {\n                 let box_did = cx.tcx_opt().and_then(|tcx| {\n@@ -2758,8 +2766,7 @@ fn resolve_type(cx: &DocContext,\n             hir::TyChar => return Primitive(PrimitiveType::Char),\n             hir::TyInt(int_ty) => return Primitive(int_ty.into()),\n             hir::TyUint(uint_ty) => return Primitive(uint_ty.into()),\n-            hir::TyFloat(ast::FloatTy::F32) => return Primitive(PrimitiveType::F32),\n-            hir::TyFloat(ast::FloatTy::F64) => return Primitive(PrimitiveType::F64),\n+            hir::TyFloat(float_ty) => return Primitive(float_ty.into()),\n         },\n         Def::SelfTy(..) if path.segments.len() == 1 => {\n             return Generic(keywords::SelfType.name().to_string());"}]}