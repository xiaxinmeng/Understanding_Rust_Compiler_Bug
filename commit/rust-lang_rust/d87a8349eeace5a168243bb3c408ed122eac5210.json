{"sha": "d87a8349eeace5a168243bb3c408ed122eac5210", "node_id": "C_kwDOAAsO6NoAKGQ4N2E4MzQ5ZWVhY2U1YTE2ODI0M2JiM2M0MDhlZDEyMmVhYzUyMTA", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-06T14:32:14Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-12-06T14:32:14Z"}, "message": "Fix an outdated comment mentioning parameter that doesn't exist anymore", "tree": {"sha": "e6c5e5aba808079f66be39a256360bbaa33b30bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6c5e5aba808079f66be39a256360bbaa33b30bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d87a8349eeace5a168243bb3c408ed122eac5210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d87a8349eeace5a168243bb3c408ed122eac5210", "html_url": "https://github.com/rust-lang/rust/commit/d87a8349eeace5a168243bb3c408ed122eac5210", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d87a8349eeace5a168243bb3c408ed122eac5210/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5", "html_url": "https://github.com/rust-lang/rust/commit/c5351ad4dcd9f3d73241b2acbfc6b4631da845c5"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "3639c83bba9c7bda5f11d6f385d51f4093754c25", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d87a8349eeace5a168243bb3c408ed122eac5210/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d87a8349eeace5a168243bb3c408ed122eac5210/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=d87a8349eeace5a168243bb3c408ed122eac5210", "patch": "@@ -1670,9 +1670,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     // Lowers a function declaration.\n     //\n     // `decl`: the unlowered (AST) function declaration.\n-    // `fn_def_id`: if `Some`, impl Trait arguments are lowered into generic parameters on the\n-    //      given DefId, otherwise impl Trait is disallowed. Must be `Some` if\n-    //      `make_ret_async` is also `Some`.\n+    // `fn_node_id`: `impl Trait` arguments are lowered into generic parameters on the given `NodeId`.\n     // `make_ret_async`: if `Some`, converts `-> T` into `-> impl Future<Output = T>` in the\n     //      return type. This is used for `async fn` declarations. The `NodeId` is the ID of the\n     //      return type `impl Trait` item, and the `Span` points to the `async` keyword.\n@@ -1796,7 +1794,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     //     type OpaqueTy<generics_from_parent_fn> = impl Future<Output = T>;\n     //\n     // `output`: unlowered output type (`T` in `-> T`)\n-    // `fn_def_id`: `DefId` of the parent function (used to create child impl trait definition)\n+    // `fn_node_id`: `NodeId` of the parent function (used to create child impl trait definition)\n     // `opaque_ty_node_id`: `NodeId` of the opaque `impl Trait` type that should be created\n     #[instrument(level = \"debug\", skip(self))]\n     fn lower_async_fn_ret_ty("}]}