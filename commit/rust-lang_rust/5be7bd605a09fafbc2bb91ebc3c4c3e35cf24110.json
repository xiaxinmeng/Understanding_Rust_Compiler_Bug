{"sha": "5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZTdiZDYwNWEwOWZhZmJjMmJiOTFlYmMzYzRjM2UzNWNmMjQxMTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-22T10:14:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-22T10:14:41Z"}, "message": "Merge #2348 #2352\n\n2348: Add support for stringify! builtin macro r=matklad a=piotr-szpetkowski\n\nRefs #2212\r\n\r\nFirst time ever contributing here, hopefully it's ok.\n\n2352: Move TypeAlias to hir_def r=matklad a=matklad\n\n\n\nCo-authored-by: Piotr Szpetkowski <piotr.szpetkowski@pyquest.space>\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "df8d82b2672d1bf33b6c738bf68320a012886de3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df8d82b2672d1bf33b6c738bf68320a012886de3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd17URCRBK7hj4Ov3rIwAAdHIIAHU99QcxyENRq4htuCBHXl8J\nx/wE8EfTNd4PeAZrSiV/nP/SXoo6OdoIGA/dswcP5ovAj1lIn4U8eWBenIGf6s+n\ndiMI/gdrTmadxfWv+i6KXufCqVYsMaRxlzTK3vxbcOSb/Z2T/04oNS9B5acREqVk\nI1iyeokquyGBUJYKuflPaTyjCHXY/bc5zZUJEJQxrEw1b0qJeRw+tvxx8Zjc64VW\nyLCzNC0Uftb28zZWIuaKFOy9S9FZmPwxAwcxTL3xwJ02LT/22f0jQaxgiVsMxlXo\noDb4CPMD7zYARWVifpiVHKo3oOdZFP0wPH8ZZzMquSNZldExV0hZL+Z07qlq76k=\n=yBVQ\n-----END PGP SIGNATURE-----\n", "payload": "tree df8d82b2672d1bf33b6c738bf68320a012886de3\nparent 5dd44a08203c538d6c5c7311ded73f7a20b57557\nparent 8ae5d6faf6006e873695bef6fd05cba69e027f63\nparent 4fc900deb121539a5311059e1ebb83ef73b190df\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574417681 +0000\ncommitter GitHub <noreply@github.com> 1574417681 +0000\n\nMerge #2348 #2352\n\n2348: Add support for stringify! builtin macro r=matklad a=piotr-szpetkowski\n\nRefs #2212\r\n\r\nFirst time ever contributing here, hopefully it's ok.\n\n2352: Move TypeAlias to hir_def r=matklad a=matklad\n\n\n\nCo-authored-by: Piotr Szpetkowski <piotr.szpetkowski@pyquest.space>\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "html_url": "https://github.com/rust-lang/rust/commit/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dd44a08203c538d6c5c7311ded73f7a20b57557", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dd44a08203c538d6c5c7311ded73f7a20b57557", "html_url": "https://github.com/rust-lang/rust/commit/5dd44a08203c538d6c5c7311ded73f7a20b57557"}, {"sha": "8ae5d6faf6006e873695bef6fd05cba69e027f63", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ae5d6faf6006e873695bef6fd05cba69e027f63", "html_url": "https://github.com/rust-lang/rust/commit/8ae5d6faf6006e873695bef6fd05cba69e027f63"}, {"sha": "4fc900deb121539a5311059e1ebb83ef73b190df", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc900deb121539a5311059e1ebb83ef73b190df", "html_url": "https://github.com/rust-lang/rust/commit/4fc900deb121539a5311059e1ebb83ef73b190df"}], "stats": {"total": 64, "additions": 44, "deletions": 20}, "files": [{"sha": "72c9b466f7dbca462f890580518ce4a34683da0c", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -937,15 +937,15 @@ impl TypeAlias {\n     }\n \n     pub fn type_ref(self, db: &impl DefDatabase) -> Option<TypeRef> {\n-        db.type_alias_data(self).type_ref.clone()\n+        db.type_alias_data(self.id).type_ref.clone()\n     }\n \n     pub fn ty(self, db: &impl HirDatabase) -> Ty {\n         db.type_for_def(self.into(), Namespace::Types)\n     }\n \n     pub fn name(self, db: &impl DefDatabase) -> Name {\n-        db.type_alias_data(self).name.clone()\n+        db.type_alias_data(self.id).name.clone()\n     }\n }\n "}, {"sha": "1cfcb2fd2f2bcd194a32d4a6c409fba7eafe7420", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -16,16 +16,15 @@ use crate::{\n         CallableDef, FnSig, GenericPredicate, InferenceResult, Namespace, Substs, Ty, TypableDef,\n         TypeCtor,\n     },\n-    type_alias::TypeAliasData,\n     Const, ConstData, Crate, DefWithBody, FnData, Function, GenericDef, ImplBlock, Module, Static,\n-    StructField, Trait, TypeAlias,\n+    StructField, Trait,\n };\n \n pub use hir_def::db::{\n     BodyQuery, BodyWithSourceMapQuery, CrateDefMapQuery, DefDatabase2, DefDatabase2Storage,\n     EnumDataQuery, ExprScopesQuery, GenericParamsQuery, ImplDataQuery, InternDatabase,\n     InternDatabaseStorage, RawItemsQuery, RawItemsWithSourceMapQuery, StructDataQuery,\n-    TraitDataQuery,\n+    TraitDataQuery, TypeAliasDataQuery,\n };\n pub use hir_expand::db::{\n     AstDatabase, AstDatabaseStorage, AstIdMapQuery, MacroArgQuery, MacroDefQuery, MacroExpandQuery,\n@@ -39,9 +38,6 @@ pub trait DefDatabase: HirDebugDatabase + DefDatabase2 {\n     #[salsa::invoke(FnData::fn_data_query)]\n     fn fn_data(&self, func: Function) -> Arc<FnData>;\n \n-    #[salsa::invoke(TypeAliasData::type_alias_data_query)]\n-    fn type_alias_data(&self, typ: TypeAlias) -> Arc<TypeAliasData>;\n-\n     #[salsa::invoke(ConstData::const_data_query)]\n     fn const_data(&self, konst: Const) -> Arc<ConstData>;\n "}, {"sha": "8535629ca76d127adeff60371256c357603dbecd", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -32,7 +32,6 @@ pub mod db;\n pub mod source_binder;\n \n mod ids;\n-mod type_alias;\n mod ty;\n mod impl_block;\n mod expr;"}, {"sha": "5bbdaa4b20ad28049afafb85847c049138e723be", "filename": "crates/ra_hir_def/src/db.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdb.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -15,7 +15,8 @@ use crate::{\n         CrateDefMap,\n     },\n     traits::TraitData,\n-    DefWithBodyId, EnumId, GenericDefId, ImplId, ItemLoc, StructOrUnionId, TraitId,\n+    type_alias::TypeAliasData,\n+    DefWithBodyId, EnumId, GenericDefId, ImplId, ItemLoc, StructOrUnionId, TraitId, TypeAliasId,\n };\n \n #[salsa::query_group(InternDatabaseStorage)]\n@@ -64,6 +65,9 @@ pub trait DefDatabase2: InternDatabase + AstDatabase {\n     #[salsa::invoke(TraitData::trait_data_query)]\n     fn trait_data(&self, e: TraitId) -> Arc<TraitData>;\n \n+    #[salsa::invoke(TypeAliasData::type_alias_data_query)]\n+    fn type_alias_data(&self, e: TypeAliasId) -> Arc<TypeAliasData>;\n+\n     #[salsa::invoke(Body::body_with_source_map_query)]\n     fn body_with_source_map(&self, def: DefWithBodyId) -> (Arc<Body>, Arc<BodySourceMap>);\n "}, {"sha": "26814446296f78298adc927fed8bfba3bf3ed729", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -20,6 +20,7 @@ pub mod body;\n pub mod generics;\n pub mod traits;\n pub mod resolver;\n+pub mod type_alias;\n \n #[cfg(test)]\n mod test_db;"}, {"sha": "c0b49aa7cc7e69ade47e86ae334ff53db87ade35", "filename": "crates/ra_hir_def/src/type_alias.rs", "status": "renamed", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_def%2Fsrc%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftype_alias.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -2,28 +2,24 @@\n \n use std::sync::Arc;\n \n-use hir_def::type_ref::TypeRef;\n use hir_expand::name::{AsName, Name};\n \n use ra_syntax::ast::NameOwner;\n \n-use crate::{\n-    db::{AstDatabase, DefDatabase},\n-    HasSource, TypeAlias,\n-};\n+use crate::{db::DefDatabase2, type_ref::TypeRef, HasSource, Lookup, TypeAliasId};\n \n #[derive(Debug, Clone, PartialEq, Eq)]\n pub struct TypeAliasData {\n-    pub(crate) name: Name,\n-    pub(crate) type_ref: Option<TypeRef>,\n+    pub name: Name,\n+    pub type_ref: Option<TypeRef>,\n }\n \n impl TypeAliasData {\n     pub(crate) fn type_alias_data_query(\n-        db: &(impl DefDatabase + AstDatabase),\n-        typ: TypeAlias,\n+        db: &impl DefDatabase2,\n+        typ: TypeAliasId,\n     ) -> Arc<TypeAliasData> {\n-        let node = typ.source(db).value;\n+        let node = typ.lookup(db).source(db).value;\n         let name = node.name().map_or_else(Name::missing, |n| n.as_name());\n         let type_ref = node.type_ref().map(TypeRef::from_ast);\n         Arc::new(TypeAliasData { name, type_ref })", "previous_filename": "crates/ra_hir/src/type_alias.rs"}, {"sha": "9628666d4636498e4008eadebda94b66b6560c48", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -11,6 +11,7 @@ use crate::quote;\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum BuiltinExpander {\n     Line,\n+    Stringify,\n }\n \n impl BuiltinExpander {\n@@ -22,6 +23,7 @@ impl BuiltinExpander {\n     ) -> Result<tt::Subtree, mbe::ExpandError> {\n         match self {\n             BuiltinExpander::Line => line_expand(db, id, tt),\n+            BuiltinExpander::Stringify => stringify_expand(db, id, tt),\n         }\n     }\n }\n@@ -34,6 +36,8 @@ pub fn find_builtin_macro(\n     // FIXME: Better registering method\n     if ident == &name::LINE_MACRO {\n         Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Line) })\n+    } else if ident == &name::STRINGIFY_MACRO {\n+        Some(MacroDefId { krate, ast_id, kind: MacroDefKind::BuiltIn(BuiltinExpander::Stringify) })\n     } else {\n         None\n     }\n@@ -78,3 +82,26 @@ fn line_expand(\n \n     Ok(expanded)\n }\n+\n+fn stringify_expand(\n+    db: &dyn AstDatabase,\n+    id: MacroCallId,\n+    _tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    let loc = db.lookup_intern_macro(id);\n+    let macro_call = loc.ast_id.to_node(db);\n+\n+    let macro_content = {\n+        let arg = macro_call.token_tree().ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n+        let macro_args = arg.syntax().clone();\n+        let text = macro_args.text();\n+        let without_parens = TextUnit::of_char('(')..text.len() - TextUnit::of_char(')');\n+        text.slice(without_parens).to_string()\n+    };\n+\n+    let expanded = quote! {\n+        #macro_content\n+    };\n+\n+    Ok(expanded)\n+}"}, {"sha": "c3f7e77a5ae1b383ad11ee8da104351d50bb057e", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=5be7bd605a09fafbc2bb91ebc3c4c3e35cf24110", "patch": "@@ -143,3 +143,4 @@ pub const BOX_TYPE: Name = Name::new_inline_ascii(3, b\"Box\");\n \n // Builtin Macros\n pub const LINE_MACRO: Name = Name::new_inline_ascii(4, b\"line\");\n+pub const STRINGIFY_MACRO: Name = Name::new_inline_ascii(9, b\"stringify\");"}]}