{"sha": "d62de4c066cf12d820b3dfdcf7a45400611e29a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MmRlNGMwNjZjZjEyZDgyMGIzZGZkY2Y3YTQ1NDAwNjExZTI5YTc=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2015-12-10T19:35:53Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2015-12-10T19:56:18Z"}, "message": "Add TupleSlice trait to rustc_data_structures.", "tree": {"sha": "042a251953b69e28f33a5c53198e0fb61ff4f188", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/042a251953b69e28f33a5c53198e0fb61ff4f188"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d62de4c066cf12d820b3dfdcf7a45400611e29a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d62de4c066cf12d820b3dfdcf7a45400611e29a7", "html_url": "https://github.com/rust-lang/rust/commit/d62de4c066cf12d820b3dfdcf7a45400611e29a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d62de4c066cf12d820b3dfdcf7a45400611e29a7/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae1cf9815f51f029c9f1b55c7cef6b9b48ea4a5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae1cf9815f51f029c9f1b55c7cef6b9b48ea4a5f", "html_url": "https://github.com/rust-lang/rust/commit/ae1cf9815f51f029c9f1b55c7cef6b9b48ea4a5f"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "0ea7cfa3902fa86df7b2c79fe2f354329c1e63b9", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d62de4c066cf12d820b3dfdcf7a45400611e29a7/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62de4c066cf12d820b3dfdcf7a45400611e29a7/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=d62de4c066cf12d820b3dfdcf7a45400611e29a7", "patch": "@@ -42,6 +42,7 @@ pub mod snapshot_vec;\n pub mod transitive_relation;\n pub mod unify;\n pub mod fnv;\n+pub mod tuple_slice;\n \n // See comments in src/librustc/lib.rs\n #[doc(hidden)]"}, {"sha": "f157d82eda12b9d7d9d05dace89223d0f13a05f5", "filename": "src/librustc_data_structures/tuple_slice.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/d62de4c066cf12d820b3dfdcf7a45400611e29a7/src%2Flibrustc_data_structures%2Ftuple_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62de4c066cf12d820b3dfdcf7a45400611e29a7/src%2Flibrustc_data_structures%2Ftuple_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Ftuple_slice.rs?ref=d62de4c066cf12d820b3dfdcf7a45400611e29a7", "patch": "@@ -0,0 +1,60 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::slice;\n+\n+/// Allows to view uniform tuples as slices\n+pub trait TupleSlice<T> {\n+    fn as_slice(&self) -> &[T];\n+    fn as_mut_slice(&mut self) -> &mut [T];\n+}\n+\n+macro_rules! impl_tuple_slice {\n+    ($tuple_type:ty, $size:expr) => {\n+        impl<T> TupleSlice<T> for $tuple_type {\n+            fn as_slice(&self) -> &[T] {\n+                unsafe {\n+                    let ptr = &self.0 as *const T;\n+                    slice::from_raw_parts(ptr, $size)\n+                }\n+            }\n+\n+            fn as_mut_slice(&mut self) -> &mut [T] {\n+                unsafe {\n+                    let ptr = &mut self.0 as *mut T;\n+                    slice::from_raw_parts_mut(ptr, $size)\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+impl_tuple_slice!((T,T), 2);\n+impl_tuple_slice!((T,T,T), 3);\n+impl_tuple_slice!((T,T,T,T), 4);\n+impl_tuple_slice!((T,T,T,T,T), 5);\n+impl_tuple_slice!((T,T,T,T,T,T), 6);\n+impl_tuple_slice!((T,T,T,T,T,T,T), 7);\n+impl_tuple_slice!((T,T,T,T,T,T,T,T), 8);\n+\n+#[test]\n+fn test_sliced_tuples() {\n+    let t2 = (100i32, 101i32);\n+    assert_eq!(t2.as_slice(), &[100i32, 101i32]);\n+\n+    let t3 = (102i32, 103i32, 104i32);\n+    assert_eq!(t3.as_slice(), &[102i32, 103i32, 104i32]);\n+\n+    let t4 = (105i32, 106i32, 107i32, 108i32);\n+    assert_eq!(t4.as_slice(), &[105i32, 106i32, 107i32, 108i32]);\n+\n+    let t5 = (109i32, 110i32, 111i32, 112i32, 113i32);\n+    assert_eq!(t5.as_slice(), &[109i32, 110i32, 111i32, 112i32, 113i32]);\n+}"}]}