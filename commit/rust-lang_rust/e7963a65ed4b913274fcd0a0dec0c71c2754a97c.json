{"sha": "e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "node_id": "C_kwDOAAsO6NoAKGU3OTYzYTY1ZWQ0YjkxMzI3NGZjZDBhMGRlYzBjNzFjMjc1NGE5N2M", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-02-05T03:12:01Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2023-05-16T17:00:52Z"}, "message": "Hide repr attribute from doc of types without guaranteed repr", "tree": {"sha": "8e82e2a7cfdc89b930f1ac91b23df3e61411d749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e82e2a7cfdc89b930f1ac91b23df3e61411d749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmRjtscACgkQ+boUO5X/\nbYJNEw//TrRBg0ULYGAxnEHeiyxcZs1G6zk4BLMjukPqBkBIrq9hnyhw4cNbMHkq\nr+3PWuTkfNe6iFOdePf0g6l1Yu6LGvjKsaffDza2sPr5V88AikoibkxKOQxTTCqM\nhLhHOUGCYOeWJ0qa6UXORIE75lYHm/oodjHMuPUJEuYNRXYNuln8q6a97ow2lCD8\nL3Ie/WcOxeXm4rjDBuZ86MxLsml6iY5Vjnj6QayUk+r8+uZiF5+l8HoPy0cktrZk\nxeLqTOrVd6z68blVhkeLuQw5kRX/0cNjPcw+Qxnq/Bj5Jpfrzp5J5/+IRTlR2W+M\nDSKPmKWCV7Mwz4C6m9hxx1Qmmfudd58IdSsJahs3PlNxMCJLC0J2/vCzPf9q6/aC\n3L3bOOFcnZr0KlswNElVaRX/CqSw2JeXqlwAiaV2psVFZbOA4bubWA3QkcMDJTRQ\nBoOJElRP/hvwRM69godbVClpWMKCErL6+4HQkm4JsORgKsaVyKMCtV+yBxFhevRP\n7MjqORn/q2T3gBnTdGrRhKAvYXNonXbKFxZLhlsEHD7wplR5H6xR8bCn9/0VxIS5\nAFjme8vQQKmIARwiCxGtRQAMZg7MOp8gbrLO803KzRTxXvsG8s16Cl3kHWn06d6L\nX8qhQuCgKPCwVYhPx0rpTKvKzz47BOaxO1VNNd/fWMuzcemNmHY=\n=WoxH\n-----END PGP SIGNATURE-----", "payload": "tree 8e82e2a7cfdc89b930f1ac91b23df3e61411d749\nparent 9239760da89cd8e9a51536beeb0a23762064037d\nauthor David Tolnay <dtolnay@gmail.com> 1675566721 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1684256452 -0700\n\nHide repr attribute from doc of types without guaranteed repr\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "html_url": "https://github.com/rust-lang/rust/commit/e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9239760da89cd8e9a51536beeb0a23762064037d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9239760da89cd8e9a51536beeb0a23762064037d", "html_url": "https://github.com/rust-lang/rust/commit/9239760da89cd8e9a51536beeb0a23762064037d"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d1c1ae6526b6ee0b59b28417563bf75ad007badd", "filename": "library/core/src/any.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fany.rs?ref=e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "patch": "@@ -866,7 +866,7 @@ where\n ///\n /// A data provider provides values by calling this type's provide methods.\n #[unstable(feature = \"provide_any\", issue = \"96024\")]\n-#[repr(transparent)]\n+#[cfg_attr(not(doc), repr(transparent))] // work around https://github.com/rust-lang/rust/issues/90435\n pub struct Demand<'a>(dyn Erased<'a> + 'a);\n \n impl<'a> Demand<'a> {"}, {"sha": "b73abbbaca7ad52408b23d1c1c7a3cfb1d73feae", "filename": "library/core/src/ffi/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fffi%2Fmod.rs?ref=e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "patch": "@@ -203,7 +203,7 @@ mod c_long_definition {\n //     be UB.\n #[doc = include_str!(\"c_void.md\")]\n #[cfg_attr(not(bootstrap), lang = \"c_void\")]\n-#[repr(u8)]\n+#[cfg_attr(not(doc), repr(u8))] // work around https://github.com/rust-lang/rust/issues/90435\n #[stable(feature = \"core_c_void\", since = \"1.30.0\")]\n pub enum c_void {\n     #[unstable(\n@@ -244,7 +244,7 @@ impl fmt::Debug for c_void {\n     target_os = \"uefi\",\n     windows,\n ))]\n-#[repr(transparent)]\n+#[cfg_attr(not(doc), repr(transparent))] // work around https://github.com/rust-lang/rust/issues/90435\n #[unstable(\n     feature = \"c_variadic\",\n     reason = \"the `c_variadic` feature has not been properly tested on \\\n@@ -296,7 +296,7 @@ impl<'f> fmt::Debug for VaListImpl<'f> {\n     not(target_os = \"uefi\"),\n     not(windows),\n ))]\n-#[repr(C)]\n+#[cfg_attr(not(doc), repr(C))] // work around https://github.com/rust-lang/rust/issues/66401\n #[derive(Debug)]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -316,7 +316,7 @@ pub struct VaListImpl<'f> {\n \n /// PowerPC ABI implementation of a `va_list`.\n #[cfg(all(target_arch = \"powerpc\", not(target_os = \"uefi\"), not(windows)))]\n-#[repr(C)]\n+#[cfg_attr(not(doc), repr(C))] // work around https://github.com/rust-lang/rust/issues/66401\n #[derive(Debug)]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -336,7 +336,7 @@ pub struct VaListImpl<'f> {\n \n /// s390x ABI implementation of a `va_list`.\n #[cfg(target_arch = \"s390x\")]\n-#[repr(C)]\n+#[cfg_attr(not(doc), repr(C))] // work around https://github.com/rust-lang/rust/issues/66401\n #[derive(Debug)]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -355,7 +355,7 @@ pub struct VaListImpl<'f> {\n \n /// x86_64 ABI implementation of a `va_list`.\n #[cfg(all(target_arch = \"x86_64\", not(target_os = \"uefi\"), not(windows)))]\n-#[repr(C)]\n+#[cfg_attr(not(doc), repr(C))] // work around https://github.com/rust-lang/rust/issues/66401\n #[derive(Debug)]\n #[unstable(\n     feature = \"c_variadic\",\n@@ -373,7 +373,7 @@ pub struct VaListImpl<'f> {\n }\n \n /// A wrapper for a `va_list`\n-#[repr(transparent)]\n+#[cfg_attr(not(doc), repr(transparent))] // work around https://github.com/rust-lang/rust/issues/90435\n #[derive(Debug)]\n #[unstable(\n     feature = \"c_variadic\","}, {"sha": "7043ab5ff2b41815fa3138fbaf56dd57b01f1af1", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "patch": "@@ -232,7 +232,7 @@ impl fmt::Debug for Context<'_> {\n ///\n /// [`Future::poll()`]: core::future::Future::poll\n /// [`Poll::Pending`]: core::task::Poll::Pending\n-#[repr(transparent)]\n+#[cfg_attr(not(doc), repr(transparent))] // work around https://github.com/rust-lang/rust/issues/66401\n #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n pub struct Waker {\n     waker: RawWaker,"}, {"sha": "e0f3c7beef68943daad4461fa70ea9bf4fdc3daa", "filename": "library/portable-simd/crates/core_simd/src/masks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fmasks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7963a65ed4b913274fcd0a0dec0c71c2754a97c/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fmasks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fportable-simd%2Fcrates%2Fcore_simd%2Fsrc%2Fmasks.rs?ref=e7963a65ed4b913274fcd0a0dec0c71c2754a97c", "patch": "@@ -88,7 +88,7 @@ impl_element! { isize }\n /// The layout of this type is unspecified, and may change between platforms\n /// and/or Rust versions, and code should not assume that it is equivalent to\n /// `[T; LANES]`.\n-#[repr(transparent)]\n+#[cfg_attr(not(doc), repr(transparent))] // work around https://github.com/rust-lang/rust/issues/90435\n pub struct Mask<T, const LANES: usize>(mask_impl::Mask<T, LANES>)\n where\n     T: MaskElement,"}]}