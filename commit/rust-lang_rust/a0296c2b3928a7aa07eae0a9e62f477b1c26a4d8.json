{"sha": "a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "node_id": "C_kwDOAAsO6NoAKGEwMjk2YzJiMzkyOGE3YWEwN2VhZTBhOWU2MmY0NzdiMWMyNmE0ZDg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-09T16:59:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-09T16:59:02Z"}, "message": "Auto merge of #13745 - Veykril:ty-hint-variant-field, r=Veykril\n\nShow type info on hover of enum variant fields\n\nSmall addition to https://github.com/rust-lang/rust-analyzer/pull/13490", "tree": {"sha": "30032097eba207bdb56db2135cd3440bce6005da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30032097eba207bdb56db2135cd3440bce6005da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "html_url": "https://github.com/rust-lang/rust/commit/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34e654cd7b9f347caf7d2a4726a3f632af533ea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/34e654cd7b9f347caf7d2a4726a3f632af533ea4", "html_url": "https://github.com/rust-lang/rust/commit/34e654cd7b9f347caf7d2a4726a3f632af533ea4"}, {"sha": "e80674e6b3ddfe083e4fb9566af8cdeb09fae02c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e80674e6b3ddfe083e4fb9566af8cdeb09fae02c", "html_url": "https://github.com/rust-lang/rust/commit/e80674e6b3ddfe083e4fb9566af8cdeb09fae02c"}], "stats": {"total": 58, "additions": 43, "deletions": 15}, "files": [{"sha": "f4f3c723ab7deac954a478e195c1ba9cb399ee3b", "filename": "crates/hir-ty/src/layout.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout.rs?ref=a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "patch": "@@ -3,8 +3,13 @@\n use std::sync::Arc;\n \n use chalk_ir::{AdtId, TyKind};\n-pub(self) use hir_def::layout::*;\n-use hir_def::LocalFieldId;\n+use hir_def::{\n+    layout::{\n+        Abi, FieldsShape, Integer, Layout, LayoutCalculator, LayoutError, Primitive, ReprOptions,\n+        RustcEnumVariantIdx, Scalar, Size, StructKind, TargetDataLayout, Variants, WrappingRange,\n+    },\n+    LocalFieldId,\n+};\n use stdx::never;\n \n use crate::{db::HirDatabase, Interner, Substitution, Ty};"}, {"sha": "e938295535686fd3b90dcc2ba213785af60173b3", "filename": "crates/hir-ty/src/layout/adt.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout%2Fadt.rs?ref=a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "patch": "@@ -8,7 +8,7 @@ use hir_def::{\n     AdtId, EnumVariantId, LocalEnumVariantId, VariantId,\n };\n use la_arena::RawIdx;\n-use rustc_index::vec::IndexVec;\n+use smallvec::SmallVec;\n \n use crate::{db::HirDatabase, lang_items::is_unsafe_cell, layout::field_ty, Substitution};\n \n@@ -34,13 +34,13 @@ pub fn layout_of_adt_query(\n     let (variants, is_enum, is_union, repr) = match def {\n         AdtId::StructId(s) => {\n             let data = db.struct_data(s);\n-            let mut r = IndexVec::new();\n+            let mut r = SmallVec::<[_; 1]>::new();\n             r.push(handle_variant(s.into(), &data.variant_data)?);\n             (r, false, false, data.repr.unwrap_or_default())\n         }\n         AdtId::UnionId(id) => {\n             let data = db.union_data(id);\n-            let mut r = IndexVec::new();\n+            let mut r = SmallVec::new();\n             r.push(handle_variant(id.into(), &data.variant_data)?);\n             (r, false, true, data.repr.unwrap_or_default())\n         }\n@@ -55,11 +55,12 @@ pub fn layout_of_adt_query(\n                         &v.variant_data,\n                     )\n                 })\n-                .collect::<Result<IndexVec<RustcEnumVariantIdx, _>, _>>()?;\n+                .collect::<Result<SmallVec<_>, _>>()?;\n             (r, true, false, data.repr.unwrap_or_default())\n         }\n     };\n-    let variants = variants.iter().map(|x| x.iter().collect::<Vec<_>>()).collect::<Vec<_>>();\n+    let variants =\n+        variants.iter().map(|x| x.iter().collect::<Vec<_>>()).collect::<SmallVec<[_; 1]>>();\n     let variants = variants.iter().map(|x| x.iter().collect()).collect();\n     if is_union {\n         cx.layout_of_union(&repr, &variants).ok_or(LayoutError::Unknown)"}, {"sha": "b248031f15284ce05ad65b162e5f70ac82298431", "filename": "crates/hir-ty/src/layout/target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftarget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftarget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flayout%2Ftarget.rs?ref=a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "patch": "@@ -6,7 +6,7 @@ use hir_def::layout::TargetDataLayout;\n \n use crate::db::HirDatabase;\n \n-use super::{AbiAndPrefAlign, AddressSpace, Align, Endian, Integer, Size};\n+use hir_def::layout::{AbiAndPrefAlign, AddressSpace, Align, Endian, Integer, Size};\n \n pub fn current_target_data_layout_query(db: &dyn HirDatabase) -> Arc<TargetDataLayout> {\n     let crate_graph = db.crate_graph();"}, {"sha": "ef434e51c106f7d247136fbcb6eb348ab2646c7a", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "patch": "@@ -395,17 +395,17 @@ pub(super) fn definition(\n             let id = it.index();\n             let layout = it.layout(db).ok()?;\n             let offset = match var_def {\n-                hir::VariantDef::Struct(s) => {\n-                    let layout = Adt::from(s).layout(db).ok()?;\n-                    layout.fields.offset(id)\n-                }\n-                _ => return None,\n+                hir::VariantDef::Struct(s) => Adt::from(s)\n+                    .layout(db)\n+                    .ok()\n+                    .map(|layout| format!(\", offset = {}\", layout.fields.offset(id).bytes())),\n+                _ => None,\n             };\n             Some(format!(\n-                \"size = {}, align = {}, offset = {}\",\n+                \"size = {}, align = {}{}\",\n                 layout.size.bytes(),\n                 layout.align.abi.bytes(),\n-                offset.bytes()\n+                offset.as_deref().unwrap_or_default()\n             ))\n         }),\n         Definition::Module(it) => label_and_docs(db, it),"}, {"sha": "34dd7fb62124a8660a02af0420a2bd4a15568512", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=a0296c2b3928a7aa07eae0a9e62f477b1c26a4d8", "patch": "@@ -5176,6 +5176,28 @@ enum Enum {\n     );\n }\n \n+#[test]\n+fn hover_record_variant_field() {\n+    check(\n+        r#\"\n+enum Enum {\n+    RecordV { field$0: u32 }\n+}\n+\"#,\n+        expect![[r#\"\n+            *field*\n+\n+            ```rust\n+            test::RecordV\n+            ```\n+\n+            ```rust\n+            field: u32 // size = 4, align = 4\n+            ```\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn hover_trait_impl_assoc_item_def_doc_forwarding() {\n     check("}]}