{"sha": "5b0e702f6c610a46e71fbd881d282a497353cf20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMGU3MDJmNmM2MTBhNDZlNzFmYmQ4ODFkMjgyYTQ5NzM1M2NmMjA=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-09T19:34:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-17T21:37:01Z"}, "message": "Create a generic HashStable derive.", "tree": {"sha": "231c8e51f07c7d3731788ff4207abddbf6c06f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/231c8e51f07c7d3731788ff4207abddbf6c06f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b0e702f6c610a46e71fbd881d282a497353cf20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0e702f6c610a46e71fbd881d282a497353cf20", "html_url": "https://github.com/rust-lang/rust/commit/5b0e702f6c610a46e71fbd881d282a497353cf20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b0e702f6c610a46e71fbd881d282a497353cf20/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8014582b843d8722795b06586ef9c2042094963", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8014582b843d8722795b06586ef9c2042094963", "html_url": "https://github.com/rust-lang/rust/commit/d8014582b843d8722795b06586ef9c2042094963"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "3fb252cbf8d9c867939130d585f14a1ee3e3868d", "filename": "src/librustc_macros/src/hash_stable.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5b0e702f6c610a46e71fbd881d282a497353cf20/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0e702f6c610a46e71fbd881d282a497353cf20/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fhash_stable.rs?ref=5b0e702f6c610a46e71fbd881d282a497353cf20", "patch": "@@ -47,6 +47,44 @@ fn parse_attributes(field: &syn::Field) -> Attributes {\n     attrs\n }\n \n+pub fn hash_stable_generic_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStream {\n+    let generic: syn::GenericParam = parse_quote!(__CTX);\n+    s.add_bounds(synstructure::AddBounds::Generics);\n+    s.add_impl_generic(generic);\n+    let body = s.each(|bi| {\n+        let attrs = parse_attributes(bi.ast());\n+        if attrs.ignore {\n+             quote!{}\n+        } else if let Some(project) = attrs.project {\n+            quote!{\n+                &#bi.#project.hash_stable(__hcx, __hasher);\n+            }\n+        } else {\n+            quote!{\n+                #bi.hash_stable(__hcx, __hasher);\n+            }\n+        }\n+    });\n+\n+    let discriminant = match s.ast().data {\n+        syn::Data::Enum(_) => quote! {\n+            ::std::mem::discriminant(self).hash_stable(__hcx, __hasher);\n+        },\n+        syn::Data::Struct(_) => quote! {},\n+        syn::Data::Union(_) => panic!(\"cannot derive on union\"),\n+    };\n+\n+    s.bound_impl(quote!(::rustc_data_structures::stable_hasher::HashStable<__CTX>), quote!{\n+        fn hash_stable(\n+            &self,\n+            __hcx: &mut __CTX,\n+            __hasher: &mut ::rustc_data_structures::stable_hasher::StableHasher) {\n+            #discriminant\n+            match *self { #body }\n+        }\n+    })\n+}\n+\n pub fn hash_stable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStream {\n     let generic: syn::GenericParam = parse_quote!('__ctx);\n     s.add_bounds(synstructure::AddBounds::Generics);"}, {"sha": "af022115ed0647ee59d72bbacab5296edbf483ec", "filename": "src/librustc_macros/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5b0e702f6c610a46e71fbd881d282a497353cf20/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0e702f6c610a46e71fbd881d282a497353cf20/src%2Flibrustc_macros%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Flib.rs?ref=5b0e702f6c610a46e71fbd881d282a497353cf20", "patch": "@@ -24,4 +24,9 @@ pub fn symbols(input: TokenStream) -> TokenStream {\n }\n \n decl_derive!([HashStable, attributes(stable_hasher)] => hash_stable::hash_stable_derive);\n+decl_derive!(\n+    [HashStable_Generic, attributes(stable_hasher)] =>\n+    hash_stable::hash_stable_generic_derive\n+);\n+\n decl_derive!([TypeFoldable, attributes(type_foldable)] => type_foldable::type_foldable_derive);"}]}