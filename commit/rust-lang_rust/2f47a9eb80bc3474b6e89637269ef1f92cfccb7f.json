{"sha": "2f47a9eb80bc3474b6e89637269ef1f92cfccb7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNDdhOWViODBiYzM0NzRiNmU4OTYzNzI2OWVmMWY5MmNmY2NiN2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-25T14:28:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-11-25T14:28:20Z"}, "message": "Auto merge of #46191 - eddyb:better-late-than-never, r=nikomatsakis\n\nrustc: don't mark lifetimes as early-bound in the presence of impl Trait.\n\nThis hack from the original implementation shouldn't be needed anymore, thanks to @cramertj.\n\nr? @nikomatsakis", "tree": {"sha": "c6e9b327f8f36c06111c56a4143520c465472462", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6e9b327f8f36c06111c56a4143520c465472462"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f", "html_url": "https://github.com/rust-lang/rust/commit/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc6b88ccb2fd10c2ad04a30ba648a1e9abf7ba4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6b88ccb2fd10c2ad04a30ba648a1e9abf7ba4b", "html_url": "https://github.com/rust-lang/rust/commit/cc6b88ccb2fd10c2ad04a30ba648a1e9abf7ba4b"}, {"sha": "fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "html_url": "https://github.com/rust-lang/rust/commit/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "4856fa3fc45acae3881a226d1d1b97fbb8d74bb2", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f47a9eb80bc3474b6e89637269ef1f92cfccb7f/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=2f47a9eb80bc3474b6e89637269ef1f92cfccb7f", "patch": "@@ -1750,7 +1750,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n \n     let mut appears_in_output = AllCollector {\n         regions: FxHashSet(),\n-        impl_trait: false\n     };\n     intravisit::walk_fn_ret_ty(&mut appears_in_output, &decl.output);\n \n@@ -1763,7 +1762,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n     // ignore binders here and scrape up all names we see.\n     let mut appears_in_where_clause = AllCollector {\n         regions: FxHashSet(),\n-        impl_trait: false\n     };\n     for ty_param in generics.ty_params.iter() {\n         walk_list!(&mut appears_in_where_clause,\n@@ -1804,9 +1802,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n         // appears in the where clauses? early-bound.\n         if appears_in_where_clause.regions.contains(&name) { continue; }\n \n-        // any `impl Trait` in the return type? early-bound.\n-        if appears_in_output.impl_trait { continue; }\n-\n         // does not appear in the inputs, but appears in the return type? early-bound.\n         if !constrained_by_input.regions.contains(&name) &&\n             appears_in_output.regions.contains(&name) {\n@@ -1865,7 +1860,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n \n     struct AllCollector {\n         regions: FxHashSet<hir::LifetimeName>,\n-        impl_trait: bool\n     }\n \n     impl<'v> Visitor<'v> for AllCollector {\n@@ -1876,12 +1870,5 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n         fn visit_lifetime(&mut self, lifetime_ref: &'v hir::Lifetime) {\n             self.regions.insert(lifetime_ref.name);\n         }\n-\n-        fn visit_ty(&mut self, ty: &hir::Ty) {\n-            if let hir::TyImplTraitExistential(..) = ty.node {\n-                self.impl_trait = true;\n-            }\n-            intravisit::walk_ty(self, ty);\n-        }\n     }\n }"}]}