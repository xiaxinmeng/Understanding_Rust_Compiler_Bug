{"sha": "e9902b92ab0e886a190a2babdbe7a940955bceed", "node_id": "C_kwDOAAsO6NoAKGU5OTAyYjkyYWIwZTg4NmExOTBhMmJhYmRiZTdhOTQwOTU1YmNlZWQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-09T20:33:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:08:02Z"}, "message": "internal: move some mbe tests", "tree": {"sha": "70d30f759da58afc3e05fbc02e57737f2acbbfcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70d30f759da58afc3e05fbc02e57737f2acbbfcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9902b92ab0e886a190a2babdbe7a940955bceed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9902b92ab0e886a190a2babdbe7a940955bceed", "html_url": "https://github.com/rust-lang/rust/commit/e9902b92ab0e886a190a2babdbe7a940955bceed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9902b92ab0e886a190a2babdbe7a940955bceed/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f17f5d68f9a771791daa895ecea33659557e0359", "url": "https://api.github.com/repos/rust-lang/rust/commits/f17f5d68f9a771791daa895ecea33659557e0359", "html_url": "https://github.com/rust-lang/rust/commit/f17f5d68f9a771791daa895ecea33659557e0359"}], "stats": {"total": 127, "additions": 75, "deletions": 52}, "files": [{"sha": "e892ab52686f7699fb3d7c675148755610ec545a", "filename": "crates/hir_def/src/macro_expansion_tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests.rs?ref=e9902b92ab0e886a190a2babdbe7a940955bceed", "patch": "@@ -121,6 +121,7 @@ fn pretty_print_macro_expansion(expn: SyntaxNode) -> String {\n             (T![;] | T!['{'] | T!['}'], _) => \"\\n\",\n             (_, T!['}']) => \"\\n\",\n             (IDENT | LIFETIME_IDENT, IDENT | LIFETIME_IDENT) => \" \",\n+            _ if prev_kind.is_keyword() && curr_kind.is_keyword() => \" \",\n             (IDENT, _) if curr_kind.is_keyword() => \" \",\n             (_, IDENT) if prev_kind.is_keyword() => \" \",\n             (T![>], IDENT) => \" \","}, {"sha": "958f2a1c33172bfebf8799ade1facf2ccf4f52ca", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=e9902b92ab0e886a190a2babdbe7a940955bceed", "patch": "@@ -704,3 +704,77 @@ fn foo() {\n \"#]],\n     );\n }\n+\n+#[test]\n+fn test_expr() {\n+    check(\n+        r#\"\n+macro_rules! m {\n+    ($e:expr) => { fn bar() { $e; } }\n+}\n+\n+m! { 2 + 2 * baz(3).quux() }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m {\n+    ($e:expr) => { fn bar() { $e; } }\n+}\n+\n+fn bar() {\n+    2+2*baz(3).quux();\n+}\n+\"#]],\n+    )\n+}\n+\n+#[test]\n+fn test_last_expr() {\n+    check(\n+        r#\"\n+macro_rules! vec {\n+    ($($item:expr),*) => {{\n+            let mut v = Vec::new();\n+            $( v.push($item); )*\n+            v\n+    }};\n+}\n+\n+fn f() {\n+    vec![1,2,3];\n+}\n+\"#,\n+        expect![[r#\"\n+macro_rules! vec {\n+    ($($item:expr),*) => {{\n+            let mut v = Vec::new();\n+            $( v.push($item); )*\n+            v\n+    }};\n+}\n+\n+fn f() {\n+     {\n+        let mut v = Vec::new();\n+        v.push(1);\n+        v.push(2);\n+        v.push(3);\n+        v\n+    };\n+}\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_expr_with_attr() {\n+    check(\n+        r#\"\n+macro_rules! m { ($a:expr) => { x!(); } }\n+m!(#[allow(a)]());\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($a:expr) => { x!(); } }\n+x!();\n+\"#]],\n+    )\n+}"}, {"sha": "01b5533522688817d7578dd18e147af82517afc9", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9902b92ab0e886a190a2babdbe7a940955bceed/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=e9902b92ab0e886a190a2babdbe7a940955bceed", "patch": "@@ -101,58 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_expr() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:expr) => {\n-                 fn bar() { $ i; }\n-            }\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\n-        \"foo! { 2 + 2 * baz(3).quux() }\",\n-        \"fn bar () {2 + 2 * baz (3) . quux () ;}\",\n-    );\n-}\n-\n-#[test]\n-fn test_last_expr() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! vec {\n-            ($($item:expr),*) => {\n-                {\n-                    let mut v = Vec::new();\n-                    $(\n-                        v.push($item);\n-                    )*\n-                    v\n-                }\n-            };\n-        }\n-\"#,\n-    )\n-    .assert_expand_items(\n-        \"vec!(1,2,3);\",\n-        \"{let mut v = Vec :: new () ; v . push (1) ; v . push (2) ; v . push (3) ; v}\",\n-    );\n-}\n-\n-#[test]\n-fn test_expr_with_attr() {\n-    parse_macro(\n-        r#\"\n-macro_rules! m {\n-    ($a:expr) => {0}\n-}\n-\"#,\n-    )\n-    .assert_expand_items(\"m!(#[allow(a)]())\", \"0\");\n-}\n-\n #[test]\n fn test_ty() {\n     parse_macro("}]}