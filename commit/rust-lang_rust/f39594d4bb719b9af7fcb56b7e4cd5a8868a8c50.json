{"sha": "f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzOTU5NGQ0YmI3MTliOWFmN2ZjYjU2YjdlNGNkNWE4ODY4YThjNTA=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2017-10-25T12:46:02Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2017-10-25T12:46:02Z"}, "message": "move sallocx and excess into not null branch", "tree": {"sha": "a820ea16f4fd9f789c1cc8eb8a05195978592013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a820ea16f4fd9f789c1cc8eb8a05195978592013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50", "html_url": "https://github.com/rust-lang/rust/commit/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a71e7b8a15026b1a8067135fccf3d18be0203d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a71e7b8a15026b1a8067135fccf3d18be0203d", "html_url": "https://github.com/rust-lang/rust/commit/e1a71e7b8a15026b1a8067135fccf3d18be0203d"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "09666bd0e62ee6f969fdf11fa4504c6ea191136f", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=f39594d4bb719b9af7fcb56b7e4cd5a8868a8c50", "patch": "@@ -229,13 +229,14 @@ mod contents {\n \n         let flags = align_to_flags(new_align);\n         let ptr = rallocx(ptr as *mut c_void, new_size, flags) as *mut u8;\n-        let alloc_size = sallocx(ptr as *mut c_void, flags);\n         if ptr.is_null() {\n             let layout = Layout::from_size_align_unchecked(new_size, new_align);\n             ptr::write(err as *mut AllocErr,\n                        AllocErr::Exhausted { request: layout });\n+        } else {\n+            let alloc_size = sallocx(ptr as *mut c_void, flags);\n+            *excess = alloc_size;\n         }\n-        *excess = alloc_size;\n         ptr\n     }\n "}]}