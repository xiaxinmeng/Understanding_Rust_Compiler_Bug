{"sha": "01cb1044f74b69e128bd73651971ef365954a0ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxY2IxMDQ0Zjc0YjY5ZTEyOGJkNzM2NTE5NzFlZjM2NTk1NGEwYmE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-21T00:18:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-21T14:14:35Z"}, "message": "update pprinter to understand ret type of block, add warnings", "tree": {"sha": "f93199362abf618b617025d7f1daa835f324b129", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f93199362abf618b617025d7f1daa835f324b129"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01cb1044f74b69e128bd73651971ef365954a0ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01cb1044f74b69e128bd73651971ef365954a0ba", "html_url": "https://github.com/rust-lang/rust/commit/01cb1044f74b69e128bd73651971ef365954a0ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01cb1044f74b69e128bd73651971ef365954a0ba/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a901409410fc2fbc6722eb7b352008135252cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a901409410fc2fbc6722eb7b352008135252cec", "html_url": "https://github.com/rust-lang/rust/commit/6a901409410fc2fbc6722eb7b352008135252cec"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "f48de76f9d3c938c51597ad8d477ac31f91f858e", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/01cb1044f74b69e128bd73651971ef365954a0ba/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cb1044f74b69e128bd73651971ef365954a0ba/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=01cb1044f74b69e128bd73651971ef365954a0ba", "patch": "@@ -1512,6 +1512,10 @@ fn check_expr_fn_with_unifier(fcx: @fn_ctxt,\n     let fty = ty_of_fn_decl(tcx, m_check_tyvar(fcx), decl,\n                             proto, [], none).ty;\n \n+    log #fmt(\"check_expr_fn_with_unifier %s fty=%s\",\n+             expr_to_str(expr),\n+             ty_to_str(tcx, fty));\n+\n     write::ty_only_fixup(fcx, expr.id, fty);\n \n     // Unify the type of the function with the expected type before we\n@@ -1521,9 +1525,6 @@ fn check_expr_fn_with_unifier(fcx: @fn_ctxt,\n     unify(fcx, expr.span, expected, fty);\n \n     check_fn1(fcx.ccx, decl, proto, body, expr.id, some(fcx));\n-    if proto == ast::proto_block {\n-        write::ty_only_fixup(fcx, expr.id, expected);\n-    }\n }\n \n fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n@@ -1979,11 +1980,20 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n         // Take the prototype from the expected type, but default to block:\n         let proto = alt ty::struct(tcx, expected) {\n           ty::ty_fn(proto, _, _, _, _) { proto }\n-          _ { ast::proto_block }\n+          _ {\n+            fcx.ccx.tcx.sess.span_warn(\n+                expr.span,\n+                \"unable to infer kind of closure, defaulting to block\");\n+            ast::proto_block\n+          }\n         };\n+        log #fmt(\"checking expr_fn_block %s expected=%s\",\n+                 expr_to_str(expr),\n+                 ty_to_str(tcx, expected));\n         check_expr_fn_with_unifier(fcx, expr, decl,\n                                    proto, body,\n                                    unify, expected);\n+        write::ty_only_fixup(fcx, id, expected);\n       }\n       ast::expr_block(b) {\n         // If this is an unchecked block, turn off purity-checking"}, {"sha": "4ac884171b3f634665b9bbef5a8d9c862a549b0c", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/01cb1044f74b69e128bd73651971ef365954a0ba/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01cb1044f74b69e128bd73651971ef365954a0ba/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=01cb1044f74b69e128bd73651971ef365954a0ba", "patch": "@@ -1161,6 +1161,11 @@ fn print_fn_block_args(s: ps, decl: ast::fn_decl) {\n     }\n     commasep(s, inconsistent, decl.inputs, print_arg);\n     word(s.s, \"|\");\n+    if decl.output.node != ast::ty_infer {\n+        space_if_not_bol(s);\n+        word_space(s, \"->\");\n+        print_type(s, decl.output);\n+    }\n     maybe_print_comment(s, decl.output.span.lo);\n }\n "}]}