{"sha": "88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZjA0NjNjMmJkNmU3ZmQyYWY0NjFhZmM1ZTgzYmQzNDE3ZTNiYzU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T01:17:39Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-02-25T01:17:39Z"}, "message": "Support the awful alt-else form in rustboot's cexp grammar, at least transiently. Remove in the future.", "tree": {"sha": "f8b60c224a3ac6d1e62bcbc41653fe0e73730209", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8b60c224a3ac6d1e62bcbc41653fe0e73730209"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5", "html_url": "https://github.com/rust-lang/rust/commit/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbf53b4c37f9f2a1cda43aa8320ceb4c4460051e", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbf53b4c37f9f2a1cda43aa8320ceb4c4460051e", "html_url": "https://github.com/rust-lang/rust/commit/dbf53b4c37f9f2a1cda43aa8320ceb4c4460051e"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "67b9cc80f2b214884533eefa1545f4589dcb2f5f", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=88f0463c2bd6e7fd2af461afc5e83bd3417e3bc5", "patch": "@@ -1170,6 +1170,23 @@ impure fn parse_alt_expr(parser p) -> @ast.expr {\n                 auto block = parse_block(p);\n                 arms += vec(rec(pat=pat, block=block, index=index));\n             }\n+\n+            // FIXME: this is a vestigial form left over from\n+            // rustboot, we're keeping it here for source-compat\n+            // for the time being but it should be flushed out\n+            // once we've bootstrapped. When we see 'else {' here,\n+            // we pretend we saw 'case (_) {'. It has the same\n+            // meaning, and only exists due to the cexp/pexp split\n+            // in rustboot, which we're not maintaining.\n+\n+            case (token.ELSE) {\n+                p.bump();\n+                auto hi = p.get_span();\n+                auto pat = @spanned(lo, hi, ast.pat_wild(ast.ann_none));\n+                auto index = index_arm(pat);\n+                auto block = parse_block(p);\n+                arms += vec(rec(pat=pat, block=block, index=index));\n+            }\n             case (token.RBRACE) { /* empty */ }\n             case (?tok) {\n                 p.err(\"expected 'case' or '}' when parsing 'alt' statement \" +"}]}