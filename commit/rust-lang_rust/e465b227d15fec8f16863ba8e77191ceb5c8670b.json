{"sha": "e465b227d15fec8f16863ba8e77191ceb5c8670b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NjViMjI3ZDE1ZmVjOGYxNjg2M2JhOGU3NzE5MWNlYjVjODY3MGI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-21T11:17:05Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-06-21T11:17:05Z"}, "message": "`icmp` can handle raw pointers just fine, there's no need to cast to int.", "tree": {"sha": "a88108e839901aa65ac3a8854d5f2d6da4b60cc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a88108e839901aa65ac3a8854d5f2d6da4b60cc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e465b227d15fec8f16863ba8e77191ceb5c8670b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e465b227d15fec8f16863ba8e77191ceb5c8670b", "html_url": "https://github.com/rust-lang/rust/commit/e465b227d15fec8f16863ba8e77191ceb5c8670b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e465b227d15fec8f16863ba8e77191ceb5c8670b/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98e97a46e2201520f54082abe462728b0a770a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/98e97a46e2201520f54082abe462728b0a770a6b", "html_url": "https://github.com/rust-lang/rust/commit/98e97a46e2201520f54082abe462728b0a770a6b"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "0a8525f06fa3d7d04d9208188489cd396e00d3c9", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e465b227d15fec8f16863ba8e77191ceb5c8670b/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e465b227d15fec8f16863ba8e77191ceb5c8670b/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=e465b227d15fec8f16863ba8e77191ceb5c8670b", "patch": "@@ -734,8 +734,6 @@ impl IntrinsicCallMethods<'tcx> for Builder<'a, 'll, 'tcx> {\n             \"ptr_guaranteed_eq\" | \"ptr_guaranteed_ne\" => {\n                 let a = args[0].immediate();\n                 let b = args[1].immediate();\n-                let a = self.ptrtoint(a, self.type_isize());\n-                let b = self.ptrtoint(b, self.type_isize());\n                 if name == \"ptr_guaranteed_eq\" {\n                     self.icmp(IntPredicate::IntEQ, a, b)\n                 } else {"}]}