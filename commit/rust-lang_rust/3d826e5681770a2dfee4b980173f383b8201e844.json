{"sha": "3d826e5681770a2dfee4b980173f383b8201e844", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkODI2ZTU2ODE3NzBhMmRmZWU0Yjk4MDE3M2YzODNiODIwMWU4NDQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-19T09:26:56Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-19T09:26:56Z"}, "message": "remove dead `is_foo_free_region` helpers\n\nOnly `is_local_free_region` is used.", "tree": {"sha": "3331aa8ca63acd2cdc5de6a8c10dbddf14bcca6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3331aa8ca63acd2cdc5de6a8c10dbddf14bcca6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d826e5681770a2dfee4b980173f383b8201e844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d826e5681770a2dfee4b980173f383b8201e844", "html_url": "https://github.com/rust-lang/rust/commit/3d826e5681770a2dfee4b980173f383b8201e844", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d826e5681770a2dfee4b980173f383b8201e844/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c56c3610ec7684f4c759c3eee95a50fef208e1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c56c3610ec7684f4c759c3eee95a50fef208e1b", "html_url": "https://github.com/rust-lang/rust/commit/3c56c3610ec7684f4c759c3eee95a50fef208e1b"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "64195338aa5e8e28cb5eabf38ead2774e1253cd1", "filename": "src/librustc_mir/borrow_check/nll/universal_regions.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3d826e5681770a2dfee4b980173f383b8201e844/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d826e5681770a2dfee4b980173f383b8201e844/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs?ref=3d826e5681770a2dfee4b980173f383b8201e844", "patch": "@@ -249,23 +249,6 @@ impl<'tcx> UniversalRegions<'tcx> {\n         (FIRST_GLOBAL_INDEX..self.num_universals).map(RegionVid::new)\n     }\n \n-    /// True if `r` is classified as a global region.\n-    pub fn is_global_free_region(&self, r: RegionVid) -> bool {\n-        self.region_classification(r) == Some(RegionClassification::Global)\n-    }\n-\n-    /// True if `r` is classified as an external region.\n-    pub fn is_extern_free_region(&self, r: RegionVid) -> bool {\n-        self.region_classification(r) == Some(RegionClassification::External)\n-    }\n-\n-    /// True if `r` is a free region that is classified as global or\n-    /// extern.  This is an important category, because these regions\n-    /// can be referenced in `ClosureRegionRequirements`.\n-    pub fn is_non_local_free_region(&self, r: RegionVid) -> bool {\n-        self.region_classification(r) == Some(RegionClassification::Local)\n-    }\n-\n     /// True if `r` is classified as an local region.\n     pub fn is_local_free_region(&self, r: RegionVid) -> bool {\n         self.region_classification(r) == Some(RegionClassification::Local)"}]}