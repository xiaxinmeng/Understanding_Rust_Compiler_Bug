{"sha": "6b348257a19165c9c1025a46b24f0bc128842bd4", "node_id": "C_kwDOAAsO6NoAKDZiMzQ4MjU3YTE5MTY1YzljMTAyNWE0NmIyNGYwYmMxMjg4NDJiZDQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-30T18:03:27Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-07T08:25:57Z"}, "message": "Cleanup opaque type storage after checking impossible predicates.", "tree": {"sha": "bf4422b1ef4017f041ff52ba80edb8b3111149d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf4422b1ef4017f041ff52ba80edb8b3111149d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b348257a19165c9c1025a46b24f0bc128842bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b348257a19165c9c1025a46b24f0bc128842bd4", "html_url": "https://github.com/rust-lang/rust/commit/6b348257a19165c9c1025a46b24f0bc128842bd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b348257a19165c9c1025a46b24f0bc128842bd4/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8492460fa461104d305625ee0a477db0dcd16b82", "url": "https://api.github.com/repos/rust-lang/rust/commits/8492460fa461104d305625ee0a477db0dcd16b82", "html_url": "https://github.com/rust-lang/rust/commit/8492460fa461104d305625ee0a477db0dcd16b82"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "8683de9fa74474767cf53d5259b8e9011d5ba691", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6b348257a19165c9c1025a46b24f0bc128842bd4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b348257a19165c9c1025a46b24f0bc128842bd4/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=6b348257a19165c9c1025a46b24f0bc128842bd4", "patch": "@@ -448,6 +448,9 @@ pub fn impossible_predicates<'tcx>(\n \n         let errors = fulfill_cx.select_all_or_error(&infcx);\n \n+        // Clean up after ourselves\n+        let _ = infcx.inner.borrow_mut().opaque_type_storage.take_opaque_types();\n+\n         !errors.is_empty()\n     });\n     debug!(\"impossible_predicates = {:?}\", result);"}]}