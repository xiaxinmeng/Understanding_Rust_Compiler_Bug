{"sha": "4bd26481c4c91858c544981990efb2f48e5d3bbe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZDI2NDgxYzRjOTE4NThjNTQ0OTgxOTkwZWZiMmY0OGU1ZDNiYmU=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-15T16:17:49Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-15T16:17:49Z"}, "message": "Update test case to conform to new restrictions on casting", "tree": {"sha": "e1907f4769f9ee2ce6cd90526971eb25a3c1657a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1907f4769f9ee2ce6cd90526971eb25a3c1657a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd26481c4c91858c544981990efb2f48e5d3bbe", "comment_count": 10, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd26481c4c91858c544981990efb2f48e5d3bbe", "html_url": "https://github.com/rust-lang/rust/commit/4bd26481c4c91858c544981990efb2f48e5d3bbe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd26481c4c91858c544981990efb2f48e5d3bbe/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5ace4df455606b5056331fa3f5ea86498dca448", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5ace4df455606b5056331fa3f5ea86498dca448", "html_url": "https://github.com/rust-lang/rust/commit/b5ace4df455606b5056331fa3f5ea86498dca448"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "66a3ae7a2ae0381d9110121f90de3505993b209b", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4bd26481c4c91858c544981990efb2f48e5d3bbe/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd26481c4c91858c544981990efb2f48e5d3bbe/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=4bd26481c4c91858c544981990efb2f48e5d3bbe", "patch": "@@ -297,10 +297,9 @@ mod test {\n     use std;\n     use core::io;\n     use core::option::None;\n-    use core::str;\n     use util::testing::*;\n \n-    #[test] fn to_json_str (val: @Encodable<std::json::Encoder>) -> ~str {\n+    #[test] fn to_json_str<E : Encodable<std::json::Encoder>>(val: @E) -> ~str {\n         do io::with_str_writer |writer| {\n             val.encode(~std::json::Encoder(writer));\n         }\n@@ -312,7 +311,7 @@ mod test {\n             @~\"fn foo (x : int) { x; }\",\n             ~[],\n             new_parse_sess(None));\n-        check_equal(to_json_str(@tts as Encodable::<std::json::Encoder>),\n+        check_equal(to_json_str(@tts),\n                     ~\"[[\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"fn\\\",false]]]],\\\n                       [\\\"tt_tok\\\",[null,[\\\"IDENT\\\",[\\\"foo\\\",false]]]],\\\n                       [\\\"tt_delim\\\",[[[\\\"tt_tok\\\",[null,[\\\"LPAREN\\\",[]]]],\\"}]}