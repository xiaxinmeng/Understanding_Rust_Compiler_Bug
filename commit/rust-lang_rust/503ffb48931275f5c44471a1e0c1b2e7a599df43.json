{"sha": "503ffb48931275f5c44471a1e0c1b2e7a599df43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2ZmYjQ4OTMxMjc1ZjVjNDQ0NzFhMWUwYzFiMmU3YTU5OWRmNDM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-02T12:59:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-02T12:59:35Z"}, "message": "One more assert", "tree": {"sha": "99633035713bf0ffa3c63f46ca5a6622770a959e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99633035713bf0ffa3c63f46ca5a6622770a959e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503ffb48931275f5c44471a1e0c1b2e7a599df43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503ffb48931275f5c44471a1e0c1b2e7a599df43", "html_url": "https://github.com/rust-lang/rust/commit/503ffb48931275f5c44471a1e0c1b2e7a599df43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503ffb48931275f5c44471a1e0c1b2e7a599df43/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8980cedfc3f21b1a48b42a759796bd2d5a2dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8980cedfc3f21b1a48b42a759796bd2d5a2dc3", "html_url": "https://github.com/rust-lang/rust/commit/8f8980cedfc3f21b1a48b42a759796bd2d5a2dc3"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "42856f0ca47d2b2253391a162b80c7ba61e2958b", "filename": "crates/ra_assists/src/ast_transform.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/503ffb48931275f5c44471a1e0c1b2e7a599df43/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503ffb48931275f5c44471a1e0c1b2e7a599df43/crates%2Fra_assists%2Fsrc%2Fast_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fast_transform.rs?ref=503ffb48931275f5c44471a1e0c1b2e7a599df43", "patch": "@@ -178,5 +178,10 @@ impl<'a> AstTransform<'a> for QualifyPaths<'a> {\n \n pub(crate) fn path_to_ast(path: hir::ModPath) -> ast::Path {\n     let parse = ast::SourceFile::parse(&path.to_string());\n-    parse.tree().syntax().descendants().find_map(ast::Path::cast).unwrap()\n+    parse\n+        .tree()\n+        .syntax()\n+        .descendants()\n+        .find_map(ast::Path::cast)\n+        .unwrap_or_else(|| panic!(\"failed to parse path {:?}, `{}`\", path, path))\n }"}]}