{"sha": "ada6f1cd3db78f2972275c24f50721467aea4c70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkYTZmMWNkM2RiNzhmMjk3MjI3NWMyNGY1MDcyMTQ2N2FlYTRjNzA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-12T13:32:48Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-19T15:57:01Z"}, "message": "rustc_mir: make subst_from_frame_and_normalize_erasing_regions infallible.", "tree": {"sha": "1771f007c231fd8a43df194b043ac8478dbebb68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1771f007c231fd8a43df194b043ac8478dbebb68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ada6f1cd3db78f2972275c24f50721467aea4c70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ada6f1cd3db78f2972275c24f50721467aea4c70", "html_url": "https://github.com/rust-lang/rust/commit/ada6f1cd3db78f2972275c24f50721467aea4c70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ada6f1cd3db78f2972275c24f50721467aea4c70/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4f217ed7b8b2fd0695c3b2278fe1b664f038607", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4f217ed7b8b2fd0695c3b2278fe1b664f038607", "html_url": "https://github.com/rust-lang/rust/commit/b4f217ed7b8b2fd0695c3b2278fe1b664f038607"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "6f48396cdd7cfeca0af170637f00b6ccb23d3d5d", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=ada6f1cd3db78f2972275c24f50721467aea4c70", "patch": "@@ -315,23 +315,16 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n     }\n \n     /// Call this on things you got out of the MIR (so it is as generic as the current\n-    /// stack rameframe), to bring it into the proper environment for this interpreter.\n+    /// stack frame), to bring it into the proper environment for this interpreter.\n     pub(super) fn subst_from_frame_and_normalize_erasing_regions<T: TypeFoldable<'tcx>>(\n         &self,\n-        t: T,\n-    ) -> InterpResult<'tcx, T> {\n-        match self.stack.last() {\n-            Some(frame) => Ok(self.tcx.subst_and_normalize_erasing_regions(\n-                frame.instance.substs,\n-                self.param_env,\n-                &t,\n-            )),\n-            None => if t.needs_subst() {\n-                throw_inval!(TooGeneric)\n-            } else {\n-                Ok(t)\n-            },\n-        }\n+        value: T,\n+    ) -> T {\n+        self.tcx.subst_and_normalize_erasing_regions(\n+            self.frame().instance.substs,\n+            self.param_env,\n+            &value,\n+        )\n     }\n \n     /// The `substs` are assumed to already be in our interpreter \"universe\" (param_env)."}, {"sha": "85f9cbd37589ab2260f0d66211e44d5539759128", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=ada6f1cd3db78f2972275c24f50721467aea4c70", "patch": "@@ -643,7 +643,7 @@ where\n                             layout: self.layout_of(\n                                 self.subst_from_frame_and_normalize_erasing_regions(\n                                     self.frame().body.return_ty()\n-                                )?\n+                                )\n                             )?,\n                         }\n                     }"}, {"sha": "ca4da451a1f2d58f9f57879c683073b107fcb980", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ada6f1cd3db78f2972275c24f50721467aea4c70/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=ada6f1cd3db78f2972275c24f50721467aea4c70", "patch": "@@ -254,7 +254,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             NullaryOp(mir::NullOp::SizeOf, ty) => {\n-                let ty = self.subst_from_frame_and_normalize_erasing_regions(ty)?;\n+                let ty = self.subst_from_frame_and_normalize_erasing_regions(ty);\n                 let layout = self.layout_of(ty)?;\n                 assert!(!layout.is_unsized(),\n                         \"SizeOf nullary MIR operator called for unsized type\");"}]}