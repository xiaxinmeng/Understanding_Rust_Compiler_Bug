{"sha": "d7a380e4b9808cd62d3774f027ecf2395ef2b286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YTM4MGU0Yjk4MDhjZDYyZDM3NzRmMDI3ZWNmMjM5NWVmMmIyODY=", "commit": {"author": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-06-05T06:11:44Z"}, "committer": {"name": "Yoshitomo Nakanishi", "email": "yurayura.rounin.3@gmail.com", "date": "2021-06-06T03:43:22Z"}, "message": "Fix FP in `default_numeric_fallback` with external macro expansion", "tree": {"sha": "92ccaca85e03ad55d7872b695acd2b0403a939d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92ccaca85e03ad55d7872b695acd2b0403a939d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7a380e4b9808cd62d3774f027ecf2395ef2b286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7a380e4b9808cd62d3774f027ecf2395ef2b286", "html_url": "https://github.com/rust-lang/rust/commit/d7a380e4b9808cd62d3774f027ecf2395ef2b286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7a380e4b9808cd62d3774f027ecf2395ef2b286/comments", "author": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Y-Nak", "id": 6376004, "node_id": "MDQ6VXNlcjYzNzYwMDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6376004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Y-Nak", "html_url": "https://github.com/Y-Nak", "followers_url": "https://api.github.com/users/Y-Nak/followers", "following_url": "https://api.github.com/users/Y-Nak/following{/other_user}", "gists_url": "https://api.github.com/users/Y-Nak/gists{/gist_id}", "starred_url": "https://api.github.com/users/Y-Nak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Y-Nak/subscriptions", "organizations_url": "https://api.github.com/users/Y-Nak/orgs", "repos_url": "https://api.github.com/users/Y-Nak/repos", "events_url": "https://api.github.com/users/Y-Nak/events{/privacy}", "received_events_url": "https://api.github.com/users/Y-Nak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9991040258b838ad90b1f87bb635c62f17268448", "url": "https://api.github.com/repos/rust-lang/rust/commits/9991040258b838ad90b1f87bb635c62f17268448", "html_url": "https://github.com/rust-lang/rust/commit/9991040258b838ad90b1f87bb635c62f17268448"}], "stats": {"total": 95, "additions": 69, "deletions": 26}, "files": [{"sha": "a125376bffa9fa405089ba1cc483e3543496aee9", "filename": "clippy_lints/src/default_numeric_fallback.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7a380e4b9808cd62d3774f027ecf2395ef2b286/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a380e4b9808cd62d3774f027ecf2395ef2b286/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_numeric_fallback.rs?ref=d7a380e4b9808cd62d3774f027ecf2395ef2b286", "patch": "@@ -7,9 +7,10 @@ use rustc_hir::{\n     intravisit::{walk_expr, walk_stmt, NestedVisitorMap, Visitor},\n     Body, Expr, ExprKind, HirId, Lit, Stmt, StmtKind,\n };\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::{\n     hir::map::Map,\n+    lint::in_external_macro,\n     ty::{self, FloatTy, IntTy, PolyFnSig, Ty},\n };\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -73,6 +74,7 @@ impl<'a, 'tcx> NumericFallbackVisitor<'a, 'tcx> {\n     /// Check whether a passed literal has potential to cause fallback or not.\n     fn check_lit(&self, lit: &Lit, lit_ty: Ty<'tcx>) {\n         if_chain! {\n+                if !in_external_macro(self.cx.sess(), lit.span);\n                 if let Some(ty_bound) = self.ty_bounds.last();\n                 if matches!(lit.node,\n                             LitKind::Int(_, LitIntType::Unsuffixed) | LitKind::Float(_, LitFloatType::Unsuffixed));"}, {"sha": "170955e726cc573853764fbaaf16b187450bada7", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=d7a380e4b9808cd62d3774f027ecf2395ef2b286", "patch": "@@ -106,3 +106,10 @@ macro_rules! field_reassign_with_default {\n         }\n     };\n }\n+\n+#[macro_export]\n+macro_rules! default_numeric_fallback {\n+    () => {\n+        let x = 22;\n+    };\n+}"}, {"sha": "c0625fd1b75e8af15b1e2af3f9d43f749963974b", "filename": "tests/ui/default_numeric_fallback.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fdefault_numeric_fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fdefault_numeric_fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback.rs?ref=d7a380e4b9808cd62d3774f027ecf2395ef2b286", "patch": "@@ -1,10 +1,15 @@\n+// aux-build:macro_rules.rs\n+\n #![warn(clippy::default_numeric_fallback)]\n #![allow(unused)]\n #![allow(clippy::never_loop)]\n #![allow(clippy::no_effect)]\n #![allow(clippy::unnecessary_operation)]\n #![allow(clippy::branches_sharing_code)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n mod basic_expr {\n     fn test() {\n         // Should lint unsuffixed literals typed `i32`.\n@@ -133,4 +138,22 @@ mod method_calls {\n     }\n }\n \n+mod in_macro {\n+    macro_rules! internal_macro {\n+        () => {\n+            let x = 22;\n+        };\n+    }\n+\n+    // Should lint in internal macro.\n+    fn internal() {\n+        internal_macro!();\n+    }\n+\n+    // Should NOT lint in external macro.\n+    fn external() {\n+        default_numeric_fallback!();\n+    }\n+}\n+\n fn main() {}"}, {"sha": "5862cd936ac104ac03822912e75bed4dd4130c61", "filename": "tests/ui/default_numeric_fallback.stderr", "status": "modified", "additions": 36, "deletions": 25, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fdefault_numeric_fallback.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d7a380e4b9808cd62d3774f027ecf2395ef2b286/tests%2Fui%2Fdefault_numeric_fallback.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback.stderr?ref=d7a380e4b9808cd62d3774f027ecf2395ef2b286", "patch": "@@ -1,148 +1,159 @@\n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:11:17\n+  --> $DIR/default_numeric_fallback.rs:16:17\n    |\n LL |         let x = 22;\n    |                 ^^ help: consider adding suffix: `22_i32`\n    |\n    = note: `-D clippy::default-numeric-fallback` implied by `-D warnings`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:12:18\n+  --> $DIR/default_numeric_fallback.rs:17:18\n    |\n LL |         let x = [1, 2, 3];\n    |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:12:21\n+  --> $DIR/default_numeric_fallback.rs:17:21\n    |\n LL |         let x = [1, 2, 3];\n    |                     ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:12:24\n+  --> $DIR/default_numeric_fallback.rs:17:24\n    |\n LL |         let x = [1, 2, 3];\n    |                        ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:13:28\n+  --> $DIR/default_numeric_fallback.rs:18:28\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:13:31\n+  --> $DIR/default_numeric_fallback.rs:18:31\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                               ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:13:44\n+  --> $DIR/default_numeric_fallback.rs:18:44\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                                            ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:13:47\n+  --> $DIR/default_numeric_fallback.rs:18:47\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                                               ^ help: consider adding suffix: `4_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:14:23\n+  --> $DIR/default_numeric_fallback.rs:19:23\n    |\n LL |         let x = match 1 {\n    |                       ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:15:13\n+  --> $DIR/default_numeric_fallback.rs:20:13\n    |\n LL |             1 => 1,\n    |             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:15:18\n+  --> $DIR/default_numeric_fallback.rs:20:18\n    |\n LL |             1 => 1,\n    |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:16:18\n+  --> $DIR/default_numeric_fallback.rs:21:18\n    |\n LL |             _ => 2,\n    |                  ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:20:17\n+  --> $DIR/default_numeric_fallback.rs:25:17\n    |\n LL |         let x = 0.12;\n    |                 ^^^^ help: consider adding suffix: `0.12_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:38:21\n+  --> $DIR/default_numeric_fallback.rs:43:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:46:21\n+  --> $DIR/default_numeric_fallback.rs:51:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:52:21\n+  --> $DIR/default_numeric_fallback.rs:57:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:64:9\n+  --> $DIR/default_numeric_fallback.rs:69:9\n    |\n LL |         1\n    |         ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:70:27\n+  --> $DIR/default_numeric_fallback.rs:75:27\n    |\n LL |         let f = || -> _ { 1 };\n    |                           ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:74:29\n+  --> $DIR/default_numeric_fallback.rs:79:29\n    |\n LL |         let f = || -> i32 { 1 };\n    |                             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:88:21\n+  --> $DIR/default_numeric_fallback.rs:93:21\n    |\n LL |         generic_arg(1);\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:91:32\n+  --> $DIR/default_numeric_fallback.rs:96:32\n    |\n LL |         let x: _ = generic_arg(1);\n    |                                ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:109:28\n+  --> $DIR/default_numeric_fallback.rs:114:28\n    |\n LL |         GenericStruct { x: 1 };\n    |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:112:36\n+  --> $DIR/default_numeric_fallback.rs:117:36\n    |\n LL |         let _ = GenericStruct { x: 1 };\n    |                                    ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback.rs:132:23\n+  --> $DIR/default_numeric_fallback.rs:137:23\n    |\n LL |         s.generic_arg(1);\n    |                       ^ help: consider adding suffix: `1_i32`\n \n-error: aborting due to 24 previous errors\n+error: default numeric fallback might occur\n+  --> $DIR/default_numeric_fallback.rs:144:21\n+   |\n+LL |             let x = 22;\n+   |                     ^^ help: consider adding suffix: `22_i32`\n+...\n+LL |         internal_macro!();\n+   |         ------------------ in this macro invocation\n+   |\n+   = note: this error originates in the macro `internal_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 25 previous errors\n "}]}