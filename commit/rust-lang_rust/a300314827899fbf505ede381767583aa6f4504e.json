{"sha": "a300314827899fbf505ede381767583aa6f4504e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMDAzMTQ4Mjc4OTlmYmY1MDVlZGUzODE3Njc1ODNhYTZmNDUwNGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-01T12:21:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-11-01T12:21:24Z"}, "message": "auto merge of #10213 : telotortium/rust/rand-fill_bytes-stack-overflow, r=huonw\n\nFix the implementation of `std::rand::Rng::fill_bytes()` for\r\n`std::rand::reseeding::ReseedingRng` to call the `fill_bytes()` method\r\nof the underlying RNG rather than itself, which causes infinite\r\nrecursion.\r\n\r\nFixes #10202.", "tree": {"sha": "e3ba5e026bcbbfa82ecabfe9823a805ad83e2b6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3ba5e026bcbbfa82ecabfe9823a805ad83e2b6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a300314827899fbf505ede381767583aa6f4504e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a300314827899fbf505ede381767583aa6f4504e", "html_url": "https://github.com/rust-lang/rust/commit/a300314827899fbf505ede381767583aa6f4504e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a300314827899fbf505ede381767583aa6f4504e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c58c9f81c5d9b6b1847573a41c8b819893a12a", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c58c9f81c5d9b6b1847573a41c8b819893a12a", "html_url": "https://github.com/rust-lang/rust/commit/04c58c9f81c5d9b6b1847573a41c8b819893a12a"}, {"sha": "96589e7264fae59a04ef47d3e5dc04fdabc9441f", "url": "https://api.github.com/repos/rust-lang/rust/commits/96589e7264fae59a04ef47d3e5dc04fdabc9441f", "html_url": "https://github.com/rust-lang/rust/commit/96589e7264fae59a04ef47d3e5dc04fdabc9441f"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "7055b7af3ded643c8a3cf791d6a9f911c5f1f1a4", "filename": "src/libstd/rand/reseeding.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a300314827899fbf505ede381767583aa6f4504e/src%2Flibstd%2Frand%2Freseeding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a300314827899fbf505ede381767583aa6f4504e/src%2Flibstd%2Frand%2Freseeding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Freseeding.rs?ref=a300314827899fbf505ede381767583aa6f4504e", "patch": "@@ -72,7 +72,7 @@ impl<R: Rng, Rsdr: Reseeder<R>> Rng for ReseedingRng<R, Rsdr> {\n     fn fill_bytes(&mut self, dest: &mut [u8]) {\n         self.reseed_if_necessary();\n         self.bytes_generated += dest.len();\n-        self.fill_bytes(dest)\n+        self.rng.fill_bytes(dest)\n     }\n }\n \n@@ -201,4 +201,24 @@ mod test {\n         let string2 = r.gen_ascii_str(100);\n         assert_eq!(string1, string2);\n     }\n+\n+    static fill_bytes_v_len: uint = 13579;\n+    #[test]\n+    fn test_rng_fill_bytes() {\n+        use rand::task_rng;\n+        let mut v = ~[0u8, .. fill_bytes_v_len];\n+        task_rng().fill_bytes(v);\n+\n+        // Sanity test: if we've gotten here, `fill_bytes` has not infinitely\n+        // recursed.\n+        assert_eq!(v.len(), fill_bytes_v_len);\n+\n+        // To test that `fill_bytes` actually did something, check that the\n+        // average of `v` is not 0.\n+        let mut sum = 0.0;\n+        for &x in v.iter() {\n+            sum += x as f64;\n+        }\n+        assert!(sum / v.len() as f64 != 0.0);\n+    }\n }"}]}