{"sha": "c30eb31f9bf4e0023791bb82b855700450b68c3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMGViMzFmOWJmNGUwMDIzNzkxYmI4MmI4NTU3MDA0NTBiNjhjM2I=", "commit": {"author": {"name": "Peter N", "email": "spacey-github.com@ssr.com", "date": "2016-09-27T02:38:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-09-27T02:38:45Z"}, "message": "Use \"through\"", "tree": {"sha": "848cfb0cc0b167f1b6e94cf07ff924396d19bea4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/848cfb0cc0b167f1b6e94cf07ff924396d19bea4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c30eb31f9bf4e0023791bb82b855700450b68c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c30eb31f9bf4e0023791bb82b855700450b68c3b", "html_url": "https://github.com/rust-lang/rust/commit/c30eb31f9bf4e0023791bb82b855700450b68c3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c30eb31f9bf4e0023791bb82b855700450b68c3b/comments", "author": {"login": "pcn", "id": 1056756, "node_id": "MDQ6VXNlcjEwNTY3NTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1056756?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcn", "html_url": "https://github.com/pcn", "followers_url": "https://api.github.com/users/pcn/followers", "following_url": "https://api.github.com/users/pcn/following{/other_user}", "gists_url": "https://api.github.com/users/pcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcn/subscriptions", "organizations_url": "https://api.github.com/users/pcn/orgs", "repos_url": "https://api.github.com/users/pcn/repos", "events_url": "https://api.github.com/users/pcn/events{/privacy}", "received_events_url": "https://api.github.com/users/pcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a72b4dc9fa6f32483bdce84bd5f64164cc1787d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a72b4dc9fa6f32483bdce84bd5f64164cc1787d", "html_url": "https://github.com/rust-lang/rust/commit/0a72b4dc9fa6f32483bdce84bd5f64164cc1787d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d845ad6feb0013deb3856982f1e11a5c1d894201", "filename": "src/doc/book/references-and-borrowing.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c30eb31f9bf4e0023791bb82b855700450b68c3b/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/c30eb31f9bf4e0023791bb82b855700450b68c3b/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md?ref=c30eb31f9bf4e0023791bb82b855700450b68c3b", "patch": "@@ -86,7 +86,7 @@ fn main() {\n         return v.iter().fold(0, |a, &b| a + b);\n     }\n     // Borrow two vectors and sum them.\n-    // This kind of borrowing does not allow mutation to the borrowed reference.\n+    // This kind of borrowing does not allow mutation through the borrowed reference.\n     fn foo(v1: &Vec<i32>, v2: &Vec<i32>) -> i32 {\n         // do stuff with v1 and v2\n         let s1 = sum_vec(v1);"}]}