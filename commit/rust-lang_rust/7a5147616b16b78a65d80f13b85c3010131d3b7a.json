{"sha": "7a5147616b16b78a65d80f13b85c3010131d3b7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNTE0NzYxNmIxNmI3OGE2NWQ4MGYxM2I4NWMzMDEwMTMxZDNiN2E=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-02-05T19:07:20Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-04-26T13:50:28Z"}, "message": "rustc_target: move LayoutOf's type parameter to an associated type.", "tree": {"sha": "09ff196592e7e2a7ca43bc2dc37e205396e4ffc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09ff196592e7e2a7ca43bc2dc37e205396e4ffc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a5147616b16b78a65d80f13b85c3010131d3b7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a5147616b16b78a65d80f13b85c3010131d3b7a", "html_url": "https://github.com/rust-lang/rust/commit/7a5147616b16b78a65d80f13b85c3010131d3b7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a5147616b16b78a65d80f13b85c3010131d3b7a/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bd7efadae490bcf3434719dc97e649f93645901", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd7efadae490bcf3434719dc97e649f93645901", "html_url": "https://github.com/rust-lang/rust/commit/3bd7efadae490bcf3434719dc97e649f93645901"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "f90baa2ccd95d02766a0d7ffba31ee954aa22649", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -657,7 +657,8 @@ impl<'a, 'tcx> LateContext<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'tcx> LayoutOf<Ty<'tcx>> for &'a LateContext<'a, 'tcx> {\n+impl<'a, 'tcx> LayoutOf for &'a LateContext<'a, 'tcx> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = Result<TyLayout<'tcx>, LayoutError<'tcx>>;\n \n     fn layout_of(self, ty: Ty<'tcx>) -> Self::TyLayout {"}, {"sha": "069250bb05570a63d6f5dd11bf37778d423aa56d", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -1371,7 +1371,8 @@ impl<T, E> MaybeResult<T> for Result<T, E> {\n     }\n }\n \n-impl<'a, 'tcx> LayoutOf<Ty<'tcx>> for LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n+impl<'a, 'tcx> LayoutOf for LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = Result<TyLayout<'tcx>, LayoutError<'tcx>>;\n \n     /// Computes the layout of a type. Note that this implicitly\n@@ -1397,7 +1398,8 @@ impl<'a, 'tcx> LayoutOf<Ty<'tcx>> for LayoutCx<'tcx, TyCtxt<'a, 'tcx, 'tcx>> {\n     }\n }\n \n-impl<'a, 'tcx> LayoutOf<Ty<'tcx>> for LayoutCx<'tcx, ty::maps::TyCtxtAt<'a, 'tcx, 'tcx>> {\n+impl<'a, 'tcx> LayoutOf for LayoutCx<'tcx, ty::maps::TyCtxtAt<'a, 'tcx, 'tcx>> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = Result<TyLayout<'tcx>, LayoutError<'tcx>>;\n \n     /// Computes the layout of a type. Note that this implicitly\n@@ -1458,7 +1460,7 @@ impl<'a, 'tcx> ty::maps::TyCtxtAt<'a, 'tcx, 'tcx> {\n \n impl<'a, 'tcx> TyLayout<'tcx> {\n     pub fn for_variant<C>(&self, cx: C, variant_index: usize) -> Self\n-        where C: LayoutOf<Ty<'tcx>> + HasTyCtxt<'tcx>,\n+        where C: LayoutOf<Ty = Ty<'tcx>> + HasTyCtxt<'tcx>,\n               C::TyLayout: MaybeResult<TyLayout<'tcx>>\n     {\n         let details = match self.variants {\n@@ -1495,7 +1497,7 @@ impl<'a, 'tcx> TyLayout<'tcx> {\n     }\n \n     pub fn field<C>(&self, cx: C, i: usize) -> C::TyLayout\n-        where C: LayoutOf<Ty<'tcx>> + HasTyCtxt<'tcx>,\n+        where C: LayoutOf<Ty = Ty<'tcx>> + HasTyCtxt<'tcx>,\n               C::TyLayout: MaybeResult<TyLayout<'tcx>>\n     {\n         let tcx = cx.tcx();\n@@ -1623,7 +1625,7 @@ impl<'a, 'tcx> TyLayout<'tcx> {\n     // FIXME(eddyb) traverse already optimized enums.\n     fn find_niche<C>(&self, cx: C, count: u128)\n         -> Result<Option<(Size, Scalar, u128)>, LayoutError<'tcx>>\n-        where C: LayoutOf<Ty<'tcx>, TyLayout = Result<Self, LayoutError<'tcx>>> +\n+        where C: LayoutOf<Ty = Ty<'tcx>, TyLayout = Result<Self, LayoutError<'tcx>>> +\n                  HasTyCtxt<'tcx>\n     {\n         let scalar_component = |scalar: &Scalar, offset| {"}, {"sha": "42f0e38af1f770895125b9203196dd3b4c0b0a22", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -162,7 +162,8 @@ impl<'c, 'b, 'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> layout::HasTyCtxt<'tcx>\n     }\n }\n \n-impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf<Ty<'tcx>> for &'a EvalContext<'a, 'mir, 'tcx, M> {\n+impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf for &'a EvalContext<'a, 'mir, 'tcx, M> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = EvalResult<'tcx, TyLayout<'tcx>>;\n \n     fn layout_of(self, ty: Ty<'tcx>) -> Self::TyLayout {\n@@ -171,8 +172,9 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf<Ty<'tcx>> for &'a EvalCont\n     }\n }\n \n-impl<'c, 'b, 'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf<Ty<'tcx>>\n+impl<'c, 'b, 'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> LayoutOf\n     for &'c &'b mut EvalContext<'a, 'mir, 'tcx, M> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = EvalResult<'tcx, TyLayout<'tcx>>;\n \n     #[inline]"}, {"sha": "47b2f430bc70e2b3c35c44ef75dacaa95d62ec7c", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -72,7 +72,8 @@ struct ConstPropagator<'b, 'a, 'tcx:'a+'b> {\n     param_env: ParamEnv<'tcx>,\n }\n \n-impl<'a, 'b, 'tcx> LayoutOf<ty::Ty<'tcx>> for &'a ConstPropagator<'a, 'b, 'tcx> {\n+impl<'a, 'b, 'tcx> LayoutOf for &'a ConstPropagator<'a, 'b, 'tcx> {\n+    type Ty = ty::Ty<'tcx>;\n     type TyLayout = Result<TyLayout<'tcx>, LayoutError<'tcx>>;\n \n     fn layout_of(self, ty: ty::Ty<'tcx>) -> Self::TyLayout {"}, {"sha": "b0a53445659ef402b057a3f5233b4dcf0776ee92", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -757,8 +757,9 @@ impl LayoutDetails {\n     }\n }\n \n-pub trait LayoutOf<T> {\n+pub trait LayoutOf {\n+    type Ty;\n     type TyLayout;\n \n-    fn layout_of(self, ty: T) -> Self::TyLayout;\n-}\n\\ No newline at end of file\n+    fn layout_of(self, ty: Self::Ty) -> Self::TyLayout;\n+}"}, {"sha": "44149ec9a4e87f62ffee670d4d495cce1e74c9b8", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a5147616b16b78a65d80f13b85c3010131d3b7a/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=7a5147616b16b78a65d80f13b85c3010131d3b7a", "patch": "@@ -459,7 +459,8 @@ impl<'a, 'tcx> ty::layout::HasTyCtxt<'tcx> for &'a CodegenCx<'a, 'tcx> {\n     }\n }\n \n-impl<'a, 'tcx> LayoutOf<Ty<'tcx>> for &'a CodegenCx<'a, 'tcx> {\n+impl<'a, 'tcx> LayoutOf for &'a CodegenCx<'a, 'tcx> {\n+    type Ty = Ty<'tcx>;\n     type TyLayout = TyLayout<'tcx>;\n \n     fn layout_of(self, ty: Ty<'tcx>) -> Self::TyLayout {"}]}