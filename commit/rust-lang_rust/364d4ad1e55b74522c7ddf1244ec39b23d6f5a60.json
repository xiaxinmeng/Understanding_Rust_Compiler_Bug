{"sha": "364d4ad1e55b74522c7ddf1244ec39b23d6f5a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NGQ0YWQxZTU1Yjc0NTIyYzdkZGYxMjQ0ZWMzOWIyM2Q2ZjVhNjA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-09T21:15:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-03-09T21:17:27Z"}, "message": "mk: Put all distribution artifacts in dist/\n\nAlso, add license docs to installers", "tree": {"sha": "f3091d20794eefcc3ad38a492a02c18e2ef789e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3091d20794eefcc3ad38a492a02c18e2ef789e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60", "html_url": "https://github.com/rust-lang/rust/commit/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e66af6bccacc2e77c055899441fd90729dbd53e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e66af6bccacc2e77c055899441fd90729dbd53e", "html_url": "https://github.com/rust-lang/rust/commit/5e66af6bccacc2e77c055899441fd90729dbd53e"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "01ee7a7947baa14878adcb0fe76aa6f59b8fe131", "filename": "mk/dist.mk", "status": "modified", "additions": 31, "deletions": 20, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/364d4ad1e55b74522c7ddf1244ec39b23d6f5a60/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=364d4ad1e55b74522c7ddf1244ec39b23d6f5a60", "patch": "@@ -4,16 +4,16 @@\n \n PKG_NAME := rust\n PKG_DIR = $(PKG_NAME)-$(CFG_RELEASE)\n-PKG_TAR = $(PKG_DIR).tar.gz\n+PKG_TAR = dist/$(PKG_DIR).tar.gz\n \n ifdef CFG_ISCC\n PKG_ISS = $(wildcard $(S)src/etc/pkg/*.iss)\n PKG_ICO = $(S)src/etc/pkg/rust-logo.ico\n-PKG_EXE = $(PKG_DIR)-install.exe\n+PKG_EXE = dist/$(PKG_DIR)-install.exe\n endif\n \n ifeq ($(CFG_OSTYPE), apple-darwin)\n-PKG_OSX = $(PKG_DIR).pkg\n+PKG_OSX = dist/$(PKG_DIR).pkg\n endif\n \n PKG_GITMODULES := $(S)src/libuv $(S)src/llvm $(S)src/gyp $(S)src/compiler-rt\n@@ -78,8 +78,8 @@ endif\n \n $(PKG_TAR): $(PKG_FILES)\n \t@$(call E, making dist dir)\n-\t$(Q)rm -Rf dist\n-\t$(Q)mkdir -p dist/$(PKG_DIR)\n+\t$(Q)rm -Rf tmp/dist/$(PKG_DIR)\n+\t$(Q)mkdir -p tmp/dist/$(PKG_DIR)\n \t$(Q)tar \\\n          -C $(S) \\\n          --exclude-vcs \\\n@@ -90,9 +90,9 @@ $(PKG_TAR): $(PKG_FILES)\n          --exclude=*/llvm/test/*/*/*.ll \\\n          --exclude=*/llvm/test/*/*/*.td \\\n          --exclude=*/llvm/test/*/*/*.s \\\n-         -c $(UNROOTED_PKG_FILES) | tar -x -C dist/$(PKG_DIR)\n-\t$(Q)tar -czf $(PKG_TAR) -C dist $(PKG_DIR)\n-\t$(Q)rm -Rf dist\n+         -c $(UNROOTED_PKG_FILES) | tar -x -C tmp/dist/$(PKG_DIR)\n+\t$(Q)tar -czf $(PKG_TAR) -C tmp/dist $(PKG_DIR)\n+\t$(Q)rm -Rf tmp/dist/$(PKG_DIR)\n \n .PHONY: dist distcheck\n \n@@ -158,22 +158,33 @@ distcheck-osx: $(PKG_OSX)\n \n endif\n \n-dist-installer: $(foreach host,$(CFG_HOST),dist-installer-$(host))\n+dist-install-dir: $(foreach host,$(CFG_HOST),dist-install-dir-$(host))\n+\n+dist-tar-bins: $(foreach host,$(CFG_HOST),dist/$(PKG_DIR)-$(host).tar.gz)\n \n define DEF_INSTALLER\n-dist-installer-$(1): PREPARE_HOST=$(1)\n-dist-installer-$(1): PREPARE_TARGETS=$(1)\n-dist-installer-$(1): PREPARE_STAGE=2\n-dist-installer-$(1): PREPARE_DEST_DIR=tmp/dist/installer-$(1)\n-dist-installer-$(1): PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n-dist-installer-$(1): PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n-dist-installer-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n-dist-installer-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n-dist-installer-$(1): PREPARE_CLEAN=true\n-dist-installer-$(1): prepare-base\n+dist-install-dir-$(1): PREPARE_HOST=$(1)\n+dist-install-dir-$(1): PREPARE_TARGETS=$(1)\n+dist-install-dir-$(1): PREPARE_STAGE=2\n+dist-install-dir-$(1): PREPARE_DEST_DIR=tmp/dist/$$(PKG_DIR)-$(1)\n+dist-install-dir-$(1): PREPARE_DIR_CMD=$(DEFAULT_PREPARE_DIR_CMD)\n+dist-install-dir-$(1): PREPARE_BIN_CMD=$(DEFAULT_PREPARE_BIN_CMD)\n+dist-install-dir-$(1): PREPARE_LIB_CMD=$(DEFAULT_PREPARE_LIB_CMD)\n+dist-install-dir-$(1): PREPARE_MAN_CMD=$(DEFAULT_PREPARE_MAN_CMD)\n+dist-install-dir-$(1): PREPARE_CLEAN=true\n+dist-install-dir-$(1): prepare-base\n \t$$(Q)(cd $$(PREPARE_DEST_DIR)/ && find -type f) \\\n       > $$(PREPARE_DEST_DIR)/$$(CFG_LIBDIR_RELATIVE)/$$(CFG_RUSTLIBDIR)/manifest\n-\t$$(Q)cp $$(S)src/etc/install.sh $$(PREPARE_DEST_DIR)\n+\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)COPYRIGHT $$(PREPARE_DEST_DIR)\n+\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-APACHE $$(PREPARE_DEST_DIR)\n+\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)LICENSE-MIT $$(PREPARE_DEST_DIR)\n+\t$$(Q)$$(PREPARE_MAN_CMD) $$(S)README.md $$(PREPARE_DEST_DIR)\n+\t$$(Q)$$(PREPARE_BIN_CMD) $$(S)src/etc/install.sh $$(PREPARE_DEST_DIR)\n+\n+dist/$$(PKG_DIR)-$(1).tar.gz: dist-install-dir-$(1)\n+\t@$(call E, build: $$@)\n+\t$$(Q)tar -czf dist/$$(PKG_DIR)-$(1).tar.gz -C tmp/dist $$(PKG_DIR)-$(1)\n+\n endef\n \n $(foreach host,$(CFG_HOST),\\"}]}