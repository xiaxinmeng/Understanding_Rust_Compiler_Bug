{"sha": "bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYmZhMmNjMTE0NmRmYTIzYWNiM2U2MWY3ZWMwNTM3MzNhOGZhYzE=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-18T14:38:11Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-19T12:37:26Z"}, "message": "Finish move of StructField for pattern type inference", "tree": {"sha": "7586d897724f0bf75b466945c4f9f34cd59197d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7586d897724f0bf75b466945c4f9f34cd59197d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "html_url": "https://github.com/rust-lang/rust/commit/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4277f420aa947f0c0739506ec229da94e76ee67b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4277f420aa947f0c0739506ec229da94e76ee67b", "html_url": "https://github.com/rust-lang/rust/commit/4277f420aa947f0c0739506ec229da94e76ee67b"}], "stats": {"total": 77, "additions": 46, "deletions": 31}, "files": [{"sha": "11e919c1a1691b22480e6bc9803ef6fb6b0200b4", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "patch": "@@ -158,16 +158,17 @@ impl Module {\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct StructField {\n-    struct_: Struct,\n+    parent: DefId,\n     name: Name,\n }\n \n impl StructField {\n     pub fn name(&self) -> &Name {\n         &self.name\n     }\n+\n     pub fn ty(&self, db: &impl HirDatabase) -> Option<Ty> {\n-        db.type_for_field(self.struct_.def_id, self.name.clone())\n+        db.type_for_field(self.parent, self.name.clone())\n     }\n }\n \n@@ -191,7 +192,7 @@ impl Struct {\n             .fields()\n             .iter()\n             .map(|it| StructField {\n-                struct_: self.clone(),\n+                parent: self.def_id,\n                 name: it.name.clone(),\n             })\n             .collect()\n@@ -255,6 +256,17 @@ impl EnumVariant {\n         db.enum_variant_data(self.def_id).variant_data.clone()\n     }\n \n+    pub fn fields(&self, db: &impl HirDatabase) -> Vec<StructField> {\n+        self.variant_data(db)\n+            .fields()\n+            .iter()\n+            .map(|it| StructField {\n+                parent: self.def_id,\n+                name: it.name.clone(),\n+            })\n+            .collect()\n+    }\n+\n     pub fn source(&self, db: &impl HirDatabase) -> (HirFileId, TreeArc<ast::EnumVariant>) {\n         def_id_to_ast(db, self.def_id)\n     }"}, {"sha": "8d6493887be591bbbeecc2017e790ad1d6114c63", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "patch": "@@ -872,22 +872,19 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n         }\n     }\n \n-    // TODO: add fields method for tuple like structs and variants\n-    // TODO: and add tests!\n-\n     fn resolve_fields(&self, path: Option<&Path>) -> Option<(Ty, Vec<StructField>)> {\n         let def_id = self.module.resolve_path(self.db, path?).take_types()?;\n         let def = def_id.resolve(self.db);\n \n         match def {\n             Def::Struct(s) => {\n-                let fields: Vec<_> = s.fields(self.db);\n+                let fields = s.fields(self.db);\n                 Some((type_for_struct(self.db, s), fields))\n             }\n-            // Def::EnumVariant(ev) => {\n-            //     let fields: Vec<_> = ev.variant_data(self.db).fields().to_owned();\n-            //     Some((type_for_enum_variant(self.db, ev), fields))\n-            // }\n+            Def::EnumVariant(ev) => {\n+                let fields = ev.fields(self.db);\n+                Some((type_for_enum_variant(self.db, ev), fields))\n+            }\n             _ => None,\n         }\n     }"}, {"sha": "ec48eada17649919dada8a555cd332dc9b3f1fc4", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0102_field_pat_list.txt", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0102_field_pat_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0102_field_pat_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0102_field_pat_list.txt?ref=bcbfa2cc1146dfa23acb3e61f7ec053733a8fac1", "patch": "@@ -43,18 +43,20 @@ SOURCE_FILE@[0; 119)\n           FIELD_PAT_LIST@[40; 56)\n             L_CURLY@[40; 41)\n             WHITESPACE@[41; 42)\n-            BIND_PAT@[42; 43)\n-              NAME@[42; 43)\n-                IDENT@[42; 43) \"f\"\n+            FIELD_PAT@[42; 43)\n+              BIND_PAT@[42; 43)\n+                NAME@[42; 43)\n+                  IDENT@[42; 43) \"f\"\n             COMMA@[43; 44)\n             WHITESPACE@[44; 45)\n-            BIND_PAT@[45; 54)\n-              REF_KW@[45; 48)\n-              WHITESPACE@[48; 49)\n-              MUT_KW@[49; 52)\n-              WHITESPACE@[52; 53)\n-              NAME@[53; 54)\n-                IDENT@[53; 54) \"g\"\n+            FIELD_PAT@[45; 54)\n+              BIND_PAT@[45; 54)\n+                REF_KW@[45; 48)\n+                WHITESPACE@[48; 49)\n+                MUT_KW@[49; 52)\n+                WHITESPACE@[52; 53)\n+                NAME@[53; 54)\n+                  IDENT@[53; 54) \"g\"\n             WHITESPACE@[54; 55)\n             R_CURLY@[55; 56)\n         WHITESPACE@[56; 57)\n@@ -77,11 +79,13 @@ SOURCE_FILE@[0; 119)\n           FIELD_PAT_LIST@[73; 84)\n             L_CURLY@[73; 74)\n             WHITESPACE@[74; 75)\n-            IDENT@[75; 76) \"h\"\n-            COLON@[76; 77)\n-            WHITESPACE@[77; 78)\n-            PLACEHOLDER_PAT@[78; 79)\n-              UNDERSCORE@[78; 79)\n+            FIELD_PAT@[75; 79)\n+              NAME@[75; 76)\n+                IDENT@[75; 76) \"h\"\n+              COLON@[76; 77)\n+              WHITESPACE@[77; 78)\n+              PLACEHOLDER_PAT@[78; 79)\n+                UNDERSCORE@[78; 79)\n             COMMA@[79; 80)\n             WHITESPACE@[80; 81)\n             DOTDOT@[81; 83)\n@@ -106,11 +110,13 @@ SOURCE_FILE@[0; 119)\n           FIELD_PAT_LIST@[101; 110)\n             L_CURLY@[101; 102)\n             WHITESPACE@[102; 103)\n-            IDENT@[103; 104) \"h\"\n-            COLON@[104; 105)\n-            WHITESPACE@[105; 106)\n-            PLACEHOLDER_PAT@[106; 107)\n-              UNDERSCORE@[106; 107)\n+            FIELD_PAT@[103; 107)\n+              NAME@[103; 104)\n+                IDENT@[103; 104) \"h\"\n+              COLON@[104; 105)\n+              WHITESPACE@[105; 106)\n+              PLACEHOLDER_PAT@[106; 107)\n+                UNDERSCORE@[106; 107)\n             COMMA@[107; 108)\n             WHITESPACE@[108; 109)\n             R_CURLY@[109; 110)"}]}