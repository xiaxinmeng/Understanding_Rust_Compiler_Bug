{"sha": "1785f1549cec9eb7947e204d6146c20b2410c40d", "node_id": "C_kwDOAAsO6NoAKDE3ODVmMTU0OWNlYzllYjc5NDdlMjA0ZDYxNDZjMjBiMjQxMGM0MGQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-02T01:41:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-02T01:41:55Z"}, "message": "Rollup merge of #96222 - jmaargh:john-mark/clarify-from-raw-parts-docs, r=JohnTitor\n\nClarify docs for `from_raw_parts` on `Vec` and `String`\n\nCloses #95427\n\nOriginal safety explanation for `from_raw_parts` was unclear on safety for consuming a C string. This clarifies when doing so is safe.", "tree": {"sha": "080998b354b3a40362d09f6146375b8f4fca22c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/080998b354b3a40362d09f6146375b8f4fca22c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1785f1549cec9eb7947e204d6146c20b2410c40d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJibzbjCRBK7hj4Ov3rIwAArj8IAB4MEjfOX18I+3Ccu/Kuyfjp\nK4wQjXTShvb+4fldoUrj46w4p10SJAPkKimChOutXnAUY9dMuN9hS/wc5uasmv6v\nUQ5Pw7E3eunXKIiW+QkyvBUl0v7EgDt2vqUHqyFI7OgvS4s50tznVzgFhAj9u1FD\nZcKLgtJCzIvbzii2PbMpHCHGjRE+qPvE1lqSOXpIDVmnJxFBMe0I5R7OjjVZ++es\npJlgrVt38rz1S4rOBlpaOGv8DLBhy+o0JK/f568w/rwOG/YGBKgv9m1vaQRd41PN\nTrQDJSXrHx42MRsYGXAPlduejjig9aR4FhzFel1gYYGUCP8Q8suLV26sTWKlS3I=\n=5yu2\n-----END PGP SIGNATURE-----\n", "payload": "tree 080998b354b3a40362d09f6146375b8f4fca22c3\nparent ddfc65dae0982c25c7cb8f60874e249dd2d071f1\nparent 4dda047de346ae68fa760548f7ae63e3ae736146\nauthor Yuki Okushi <jtitor@2k36.org> 1651455715 +0900\ncommitter GitHub <noreply@github.com> 1651455715 +0900\n\nRollup merge of #96222 - jmaargh:john-mark/clarify-from-raw-parts-docs, r=JohnTitor\n\nClarify docs for `from_raw_parts` on `Vec` and `String`\n\nCloses #95427\n\nOriginal safety explanation for `from_raw_parts` was unclear on safety for consuming a C string. This clarifies when doing so is safe.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1785f1549cec9eb7947e204d6146c20b2410c40d", "html_url": "https://github.com/rust-lang/rust/commit/1785f1549cec9eb7947e204d6146c20b2410c40d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1785f1549cec9eb7947e204d6146c20b2410c40d/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddfc65dae0982c25c7cb8f60874e249dd2d071f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfc65dae0982c25c7cb8f60874e249dd2d071f1", "html_url": "https://github.com/rust-lang/rust/commit/ddfc65dae0982c25c7cb8f60874e249dd2d071f1"}, {"sha": "4dda047de346ae68fa760548f7ae63e3ae736146", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dda047de346ae68fa760548f7ae63e3ae736146", "html_url": "https://github.com/rust-lang/rust/commit/4dda047de346ae68fa760548f7ae63e3ae736146"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "2272c5b7330dc872b0386646fecb655288061c1b", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1785f1549cec9eb7947e204d6146c20b2410c40d/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1785f1549cec9eb7947e204d6146c20b2410c40d/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=1785f1549cec9eb7947e204d6146c20b2410c40d", "patch": "@@ -770,7 +770,10 @@ impl String {\n     /// * The first `length` bytes at `buf` need to be valid UTF-8.\n     ///\n     /// Violating these may cause problems like corrupting the allocator's\n-    /// internal data structures.\n+    /// internal data structures. For example, it is normally **not** safe to\n+    /// build a `String` from a pointer to a C `char` array containing UTF-8\n+    /// _unless_ you are certain that array was originally allocated by the\n+    /// Rust standard library's allocator.\n     ///\n     /// The ownership of `buf` is effectively transferred to the\n     /// `String` which may then deallocate, reallocate or change the"}, {"sha": "3dc8a4fbba86ba064926de4668fb25a3dfefba01", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1785f1549cec9eb7947e204d6146c20b2410c40d/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1785f1549cec9eb7947e204d6146c20b2410c40d/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=1785f1549cec9eb7947e204d6146c20b2410c40d", "patch": "@@ -489,8 +489,10 @@ impl<T> Vec<T> {\n     /// * `length` needs to be less than or equal to `capacity`.\n     ///\n     /// Violating these may cause problems like corrupting the allocator's\n-    /// internal data structures. For example it is **not** safe\n-    /// to build a `Vec<u8>` from a pointer to a C `char` array with length `size_t`.\n+    /// internal data structures. For example it is normally **not** safe\n+    /// to build a `Vec<u8>` from a pointer to a C `char` array with length\n+    /// `size_t`, doing so is only safe if the array was initially allocated by\n+    /// a `Vec` or `String`.\n     /// It's also not safe to build one from a `Vec<u16>` and its length, because\n     /// the allocator cares about the alignment, and these two types have different\n     /// alignments. The buffer was allocated with alignment 2 (for `u16`), but after"}]}