{"sha": "5caebb23cd3b2c4c8519cc94759a7bc0a377f959", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYWViYjIzY2QzYjJjNGM4NTE5Y2M5NDc1OWE3YmMwYTM3N2Y5NTk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T21:18:17Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-18T19:56:00Z"}, "message": "Tell regionck that user unops are by value", "tree": {"sha": "9b913513fb35f3f4f43da6af57fedd58e2097dfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b913513fb35f3f4f43da6af57fedd58e2097dfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5caebb23cd3b2c4c8519cc94759a7bc0a377f959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5caebb23cd3b2c4c8519cc94759a7bc0a377f959", "html_url": "https://github.com/rust-lang/rust/commit/5caebb23cd3b2c4c8519cc94759a7bc0a377f959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5caebb23cd3b2c4c8519cc94759a7bc0a377f959/comments", "author": null, "committer": null, "parents": [{"sha": "b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "url": "https://api.github.com/repos/rust-lang/rust/commits/b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "html_url": "https://github.com/rust-lang/rust/commit/b98c3bd4d2e03f801435165fe8fa75cbf59c0582"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "bfa3c384da7b2468f1065838c03021aacbabf3a5", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5caebb23cd3b2c4c8519cc94759a7bc0a377f959/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5caebb23cd3b2c4c8519cc94759a7bc0a377f959/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=5caebb23cd3b2c4c8519cc94759a7bc0a377f959", "patch": "@@ -682,10 +682,12 @@ fn visit_expr(rcx: &mut Rcx, expr: &ast::Expr) {\n             visit::walk_expr(rcx, expr);\n         }\n \n-        ast::ExprUnary(_, ref lhs) if has_method_map => {\n+        ast::ExprUnary(op, ref lhs) if has_method_map => {\n+            let implicitly_ref_args = !ast_util::is_by_value_unop(op);\n+\n             // As above.\n             constrain_call(rcx, expr, Some(&**lhs),\n-                           None::<ast::Expr>.iter(), true);\n+                           None::<ast::Expr>.iter(), implicitly_ref_args);\n \n             visit::walk_expr(rcx, expr);\n         }"}]}