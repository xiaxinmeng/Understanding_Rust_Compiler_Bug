{"sha": "655a810b665053ebef1739a3b662b79d232d75f4", "node_id": "C_kwDOAAsO6NoAKDY1NWE4MTBiNjY1MDUzZWJlZjE3MzlhM2I2NjJiNzlkMjMyZDc1ZjQ", "commit": {"author": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2023-03-01T08:26:00Z"}, "committer": {"name": "Nikita Popov", "email": "npopov@redhat.com", "date": "2023-03-01T08:26:00Z"}, "message": "Print NewPM passes\n\n-C passes=list was printing passes for the legacy pass manager.\nUse PassBuilder::printPassNames() to print NewPM passes instead.", "tree": {"sha": "878d44b06bc69cf8f16278d539d8e8d116b5869a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/878d44b06bc69cf8f16278d539d8e8d116b5869a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/655a810b665053ebef1739a3b662b79d232d75f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/655a810b665053ebef1739a3b662b79d232d75f4", "html_url": "https://github.com/rust-lang/rust/commit/655a810b665053ebef1739a3b662b79d232d75f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/655a810b665053ebef1739a3b662b79d232d75f4/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45f694dbba5de87e64aa771e82247a8b803b8764", "url": "https://api.github.com/repos/rust-lang/rust/commits/45f694dbba5de87e64aa771e82247a8b803b8764", "html_url": "https://github.com/rust-lang/rust/commit/45f694dbba5de87e64aa771e82247a8b803b8764"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "4761ce83fabf18524c4255efb1cee290e70a5262", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/655a810b665053ebef1739a3b662b79d232d75f4/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/655a810b665053ebef1739a3b662b79d232d75f4/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=655a810b665053ebef1739a3b662b79d232d75f4", "patch": "@@ -987,22 +987,8 @@ LLVMRustPrintModule(LLVMModuleRef M, const char *Path, DemangleFn Demangle) {\n }\n \n extern \"C\" void LLVMRustPrintPasses() {\n-  struct MyListener : PassRegistrationListener {\n-    void passEnumerate(const PassInfo *Info) {\n-      StringRef PassArg = Info->getPassArgument();\n-      StringRef PassName = Info->getPassName();\n-      if (!PassArg.empty()) {\n-        // These unsigned->signed casts could theoretically overflow, but\n-        // realistically never will (and even if, the result is implementation\n-        // defined rather plain UB).\n-        printf(\"%15.*s - %.*s\\n\", (int)PassArg.size(), PassArg.data(),\n-               (int)PassName.size(), PassName.data());\n-      }\n-    }\n-  } Listener;\n-\n-  PassRegistry *PR = PassRegistry::getPassRegistry();\n-  PR->enumerateWith(&Listener);\n+  PassBuilder PB;\n+  PB.printPassNames(outs());\n }\n \n extern \"C\" void LLVMRustRunRestrictionPass(LLVMModuleRef M, char **Symbols,"}]}