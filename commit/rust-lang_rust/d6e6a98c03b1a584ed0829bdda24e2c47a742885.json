{"sha": "d6e6a98c03b1a584ed0829bdda24e2c47a742885", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2ZTZhOThjMDNiMWE1ODRlZDA4MjliZGRhMjRlMmM0N2E3NDI4ODU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-26T12:11:18Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-05-26T12:11:18Z"}, "message": "Add Test for new item resolution", "tree": {"sha": "9e7cb2485e3644092a00bda6be9df1c9f1928975", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e7cb2485e3644092a00bda6be9df1c9f1928975"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6e6a98c03b1a584ed0829bdda24e2c47a742885", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6e6a98c03b1a584ed0829bdda24e2c47a742885", "html_url": "https://github.com/rust-lang/rust/commit/d6e6a98c03b1a584ed0829bdda24e2c47a742885", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6e6a98c03b1a584ed0829bdda24e2c47a742885/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b72074a715cc08b5520c52438c8bb987ddf9038d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b72074a715cc08b5520c52438c8bb987ddf9038d", "html_url": "https://github.com/rust-lang/rust/commit/b72074a715cc08b5520c52438c8bb987ddf9038d"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "ffb627c02c5ce65f74cebe1e51aaf969d252ac9a", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d6e6a98c03b1a584ed0829bdda24e2c47a742885/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6e6a98c03b1a584ed0829bdda24e2c47a742885/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=d6e6a98c03b1a584ed0829bdda24e2c47a742885", "patch": "@@ -7,6 +7,7 @@ use std::sync::Arc;\n use ra_db::SourceDatabase;\n use test_utils::covers;\n use insta::assert_snapshot_matches;\n+use either::Either;\n \n use crate::{\n     Crate,\n@@ -35,10 +36,22 @@ fn render_crate_def_map(map: &CrateDefMap) -> String {\n         *buf += path;\n         *buf += \"\\n\";\n \n-        let mut entries = map.modules[module].scope.items.iter().collect::<Vec<_>>();\n+        let items =\n+            map.modules[module].scope.items.iter().map(|(name, it)| (name, Either::Left(it)));\n+        let macros =\n+            map.modules[module].scope.macros.iter().map(|(name, m)| (name, Either::Right(m)));\n+        let mut entries = items.chain(macros).collect::<Vec<_>>();\n+\n         entries.sort_by_key(|(name, _)| *name);\n         for (name, res) in entries {\n-            *buf += &format!(\"{}: {}\\n\", name, dump_resolution(res))\n+            match res {\n+                Either::Left(it) => {\n+                    *buf += &format!(\"{}: {}\\n\", name, dump_resolution(it));\n+                }\n+                Either::Right(_) => {\n+                    *buf += &format!(\"{}: m\\n\", name);\n+                }\n+            }\n         }\n         for (name, child) in map.modules[module].children.iter() {\n             let path = path.to_string() + &format!(\"::{}\", name);"}, {"sha": "42241aeff75f24116da231bd1b87463508b682d9", "filename": "crates/ra_hir/src/nameres/tests/macros.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/d6e6a98c03b1a584ed0829bdda24e2c47a742885/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6e6a98c03b1a584ed0829bdda24e2c47a742885/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=d6e6a98c03b1a584ed0829bdda24e2c47a742885", "patch": "@@ -92,3 +92,43 @@ fn macro_rules_from_other_crates_are_visible() {\n    \u22eebar: t\n     \"###);\n }\n+\n+#[test]\n+fn unexpanded_macro_should_expand_by_fixedpoint_loop() {\n+    let map = def_map_with_crate_graph(\n+        \"\n+        //- /main.rs      \n+        macro_rules! baz {\n+            () => {\n+                use foo::bar;                \n+            }\n+        }\n+        \n+        foo!();              \n+        bar!();\n+        baz!();\n+\n+        //- /lib.rs\n+        #[macro_export]\n+        macro_rules! foo {\n+            () => {\n+                struct Foo { field: u32 } \n+            }\n+        }\n+        #[macro_export]\n+        macro_rules! bar {\n+            () => {\n+                use foo::foo;\n+            }\n+        }\n+        \",\n+        crate_graph! {\n+            \"main\": (\"/main.rs\", [\"foo\"]),\n+            \"foo\": (\"/lib.rs\", []),\n+        },\n+    );\n+    assert_snapshot_matches!(map, @r###\"crate\n+Foo: t v\n+bar: m\n+foo: m\"###);\n+}"}]}