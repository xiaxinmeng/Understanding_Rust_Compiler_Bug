{"sha": "5bafd81f930ad9da15a580b3d3760b428a45b465", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYWZkODFmOTMwYWQ5ZGExNWE1ODBiM2QzNzYwYjQyOGE0NWI0NjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-05-11T16:18:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-11T16:18:44Z"}, "message": "Merge pull request #1748 from luisbg/empty_lines\n\nEmpty lines", "tree": {"sha": "0c4fd5b10490b6353430d3735da0eee531a59c3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c4fd5b10490b6353430d3735da0eee531a59c3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bafd81f930ad9da15a580b3d3760b428a45b465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bafd81f930ad9da15a580b3d3760b428a45b465", "html_url": "https://github.com/rust-lang/rust/commit/5bafd81f930ad9da15a580b3d3760b428a45b465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bafd81f930ad9da15a580b3d3760b428a45b465/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f94763c69a59ce81c16be88c4b21819c638b387", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f94763c69a59ce81c16be88c4b21819c638b387", "html_url": "https://github.com/rust-lang/rust/commit/5f94763c69a59ce81c16be88c4b21819c638b387"}, {"sha": "6f3679b8e4b1e9ae34850e15d43a2b9846703e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f3679b8e4b1e9ae34850e15d43a2b9846703e3a", "html_url": "https://github.com/rust-lang/rust/commit/6f3679b8e4b1e9ae34850e15d43a2b9846703e3a"}], "stats": {"total": 5067, "additions": 1848, "deletions": 3219}, "files": [{"sha": "4bd1aa35dc9c849b0f95d07af6233f90e5cd78b9", "filename": "tests/ui/absurd-extreme-comparisons.rs", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fabsurd-extreme-comparisons.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,68 +6,27 @@\n \n fn main() {\n     const Z: u32 = 0;\n-\n     let u: u32 = 42;\n-\n     u <= 0;\n-\n-\n     u <= Z;\n-\n-\n     u < Z;\n-\n-\n     Z >= u;\n-\n-\n     Z > u;\n-\n-\n     u > std::u32::MAX;\n-\n-\n     u >= std::u32::MAX;\n-\n-\n     std::u32::MAX < u;\n-\n-\n     std::u32::MAX <= u;\n-\n-\n-\n     1-1 > u;\n-\n-\n     u >= !0;\n-\n-\n     u <= 12 - 2*6;\n-\n-\n-\n     let i: i8 = 0;\n     i < -127 - 1;\n-\n-\n     std::i8::MAX >= i;\n-\n-\n     3-7 < std::i32::MIN;\n-\n-\n-\n     let b = false;\n     b >= true;\n-\n-\n     false > b;\n-\n-\n-\n     u > 0; // ok\n-\n     // this is handled by unit_cmp\n     () < {};\n }"}, {"sha": "25fabf0aafd98fc1e407eaa519e24dbd51412e8c", "filename": "tests/ui/absurd-extreme-comparisons.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fabsurd-extreme-comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fabsurd-extreme-comparisons.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:12:5\n+  --> $DIR/absurd-extreme-comparisons.rs:10:5\n    |\n-12 |     u <= 0;\n+10 |     u <= 0;\n    |     ^^^^^^\n    |\n note: lint level defined here\n@@ -12,137 +12,137 @@ note: lint level defined here\n    = help: because 0 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:15:5\n+  --> $DIR/absurd-extreme-comparisons.rs:11:5\n    |\n-15 |     u <= Z;\n+11 |     u <= Z;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == Z instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:18:5\n+  --> $DIR/absurd-extreme-comparisons.rs:12:5\n    |\n-18 |     u < Z;\n+12 |     u < Z;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:21:5\n+  --> $DIR/absurd-extreme-comparisons.rs:13:5\n    |\n-21 |     Z >= u;\n+13 |     Z >= u;\n    |     ^^^^^^\n    |\n    = help: because Z is the minimum value for this type, the case where the two sides are not equal never occurs, consider using Z == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:24:5\n+  --> $DIR/absurd-extreme-comparisons.rs:14:5\n    |\n-24 |     Z > u;\n+14 |     Z > u;\n    |     ^^^^^\n    |\n    = help: because Z is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:27:5\n+  --> $DIR/absurd-extreme-comparisons.rs:15:5\n    |\n-27 |     u > std::u32::MAX;\n+15 |     u > std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:30:5\n+  --> $DIR/absurd-extreme-comparisons.rs:16:5\n    |\n-30 |     u >= std::u32::MAX;\n+16 |     u >= std::u32::MAX;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == std::u32::MAX instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:33:5\n+  --> $DIR/absurd-extreme-comparisons.rs:17:5\n    |\n-33 |     std::u32::MAX < u;\n+17 |     std::u32::MAX < u;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:36:5\n+  --> $DIR/absurd-extreme-comparisons.rs:18:5\n    |\n-36 |     std::u32::MAX <= u;\n+18 |     std::u32::MAX <= u;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::u32::MAX is the maximum value for this type, the case where the two sides are not equal never occurs, consider using std::u32::MAX == u instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:40:5\n+  --> $DIR/absurd-extreme-comparisons.rs:19:5\n    |\n-40 |     1-1 > u;\n+19 |     1-1 > u;\n    |     ^^^^^^^\n    |\n    = help: because 1-1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:43:5\n+  --> $DIR/absurd-extreme-comparisons.rs:20:5\n    |\n-43 |     u >= !0;\n+20 |     u >= !0;\n    |     ^^^^^^^\n    |\n    = help: because !0 is the maximum value for this type, the case where the two sides are not equal never occurs, consider using u == !0 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:46:5\n+  --> $DIR/absurd-extreme-comparisons.rs:21:5\n    |\n-46 |     u <= 12 - 2*6;\n+21 |     u <= 12 - 2*6;\n    |     ^^^^^^^^^^^^^\n    |\n    = help: because 12 - 2*6 is the minimum value for this type, the case where the two sides are not equal never occurs, consider using u == 12 - 2*6 instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:51:5\n+  --> $DIR/absurd-extreme-comparisons.rs:23:5\n    |\n-51 |     i < -127 - 1;\n+23 |     i < -127 - 1;\n    |     ^^^^^^^^^^^^\n    |\n    = help: because -127 - 1 is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:54:5\n+  --> $DIR/absurd-extreme-comparisons.rs:24:5\n    |\n-54 |     std::i8::MAX >= i;\n+24 |     std::i8::MAX >= i;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i8::MAX is the maximum value for this type, this comparison is always true\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:57:5\n+  --> $DIR/absurd-extreme-comparisons.rs:25:5\n    |\n-57 |     3-7 < std::i32::MIN;\n+25 |     3-7 < std::i32::MIN;\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: because std::i32::MIN is the minimum value for this type, this comparison is always false\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:62:5\n+  --> $DIR/absurd-extreme-comparisons.rs:27:5\n    |\n-62 |     b >= true;\n+27 |     b >= true;\n    |     ^^^^^^^^^\n    |\n    = help: because true is the maximum value for this type, the case where the two sides are not equal never occurs, consider using b == true instead\n \n error: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false\n-  --> $DIR/absurd-extreme-comparisons.rs:65:5\n+  --> $DIR/absurd-extreme-comparisons.rs:28:5\n    |\n-65 |     false > b;\n+28 |     false > b;\n    |     ^^^^^^^^^\n    |\n    = help: because false is the minimum value for this type, this comparison is always false\n \n warning: <-comparison of unit values detected. This will always be false\n-  --> $DIR/absurd-extreme-comparisons.rs:72:5\n+  --> $DIR/absurd-extreme-comparisons.rs:31:5\n    |\n-72 |     () < {};\n+31 |     () < {};\n    |     ^^^^^^^\n    |\n    = note: #[warn(unit_cmp)] on by default"}, {"sha": "be68d2716bd483f79bb22045ec1399ef47d0e074", "filename": "tests/ui/assign_ops2.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fassign_ops2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fassign_ops2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,29 +6,13 @@\n fn main() {\n     let mut a = 5;\n     a += a + 1;\n-\n-\n     a += 1 + a;\n-\n-\n     a -= a - 1;\n-\n-\n     a *= a * 99;\n-\n-\n     a *= 42 * a;\n-\n-\n     a /= a / 2;\n-\n-\n     a %= a % 5;\n-\n-\n     a &= a & 1;\n-\n-\n     a -= 1 - a;\n     a /= 5 / a;\n     a %= 42 % a;"}, {"sha": "6fbfac71c1503de4980e7395672c0a6dc1e53234", "filename": "tests/ui/assign_ops2.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fassign_ops2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fassign_ops2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassign_ops2.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,45 +11,45 @@ note: lint level defined here\n   |        ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:11:5\n-   |\n-11 |     a += 1 + a;\n-   |     ^^^^^^^^^^ help: replace it with `a += 1`\n+ --> $DIR/assign_ops2.rs:9:5\n+  |\n+9 |     a += 1 + a;\n+  |     ^^^^^^^^^^ help: replace it with `a += 1`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:14:5\n+  --> $DIR/assign_ops2.rs:10:5\n    |\n-14 |     a -= a - 1;\n+10 |     a -= a - 1;\n    |     ^^^^^^^^^^ help: replace it with `a -= 1`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:17:5\n+  --> $DIR/assign_ops2.rs:11:5\n    |\n-17 |     a *= a * 99;\n+11 |     a *= a * 99;\n    |     ^^^^^^^^^^^ help: replace it with `a *= 99`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:20:5\n+  --> $DIR/assign_ops2.rs:12:5\n    |\n-20 |     a *= 42 * a;\n+12 |     a *= 42 * a;\n    |     ^^^^^^^^^^^ help: replace it with `a *= 42`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:23:5\n+  --> $DIR/assign_ops2.rs:13:5\n    |\n-23 |     a /= a / 2;\n+13 |     a /= a / 2;\n    |     ^^^^^^^^^^ help: replace it with `a /= 2`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:26:5\n+  --> $DIR/assign_ops2.rs:14:5\n    |\n-26 |     a %= a % 5;\n+14 |     a %= a % 5;\n    |     ^^^^^^^^^^ help: replace it with `a %= 5`\n \n error: variable appears on both sides of an assignment operation\n-  --> $DIR/assign_ops2.rs:29:5\n+  --> $DIR/assign_ops2.rs:15:5\n    |\n-29 |     a &= a & 1;\n+15 |     a &= a & 1;\n    |     ^^^^^^^^^^ help: replace it with `a &= 1`\n \n error: aborting due to 8 previous errors"}, {"sha": "c1abbf1bb9d9f9da972e23ca855d0898fba686fc", "filename": "tests/ui/blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblacklisted_name.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -18,9 +18,6 @@ fn main() {\n \n     match (42, Some(1337), Some(0)) {\n         (foo, Some(bar), baz @ Some(_)) => (),\n-\n-\n-\n         _ => (),\n     }\n }"}, {"sha": "648327717155b6fc51e4a328e6bcb08077aa27d1", "filename": "tests/ui/block_in_if_condition.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -56,13 +56,10 @@ fn pred_test() {\n     // inside a closure that the condition is using.  same principle applies.  add some extra\n     // expressions to make sure linter isn't confused by them.\n     if v == 3 && sky == \"blue\" && predicate(|x| { let target = 3; x == target }, v) {\n-\n     }\n \n     if predicate(|x| { let target = 3; x == target }, v) {\n-\n     }\n-\n }\n \n fn condition_is_normal() -> i32 {"}, {"sha": "fb7f11798633fcb6154352908e8c2f7ac423b71d", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -45,15 +45,15 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: in an 'if' condition, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a 'let'\n-  --> $DIR/block_in_if_condition.rs:62:22\n+  --> $DIR/block_in_if_condition.rs:61:22\n    |\n-62 |     if predicate(|x| { let target = 3; x == target }, v) {\n+61 |     if predicate(|x| { let target = 3; x == target }, v) {\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: this boolean expression can be simplified\n-  --> $DIR/block_in_if_condition.rs:70:8\n+  --> $DIR/block_in_if_condition.rs:67:8\n    |\n-70 |     if true && x == 3 {\n+67 |     if true && x == 3 {\n    |        ^^^^^^^^^^^^^^ help: try `x == 3`\n    |\n note: lint level defined here"}, {"sha": "606cbdc91ffe67aedac4cf24b56e0a53909400e5", "filename": "tests/ui/bool_comparison.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbool_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbool_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,19 +5,7 @@\n fn main() {\n     let x = true;\n     if x == true { \"yes\" } else { \"no\" };\n-\n-\n-\n     if x == false { \"yes\" } else { \"no\" };\n-\n-\n-\n     if true == x { \"yes\" } else { \"no\" };\n-\n-\n-\n     if false == x { \"yes\" } else { \"no\" };\n-\n-\n-\n }"}, {"sha": "6cefb2f22232e0f17ba33b14010d7fafbb57b164", "filename": "tests/ui/bool_comparison.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbool_comparison.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,21 +11,21 @@ note: lint level defined here\n   |        ^^^^^^^^^^^^^^^\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:11:8\n-   |\n-11 |     if x == false { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n+ --> $DIR/bool_comparison.rs:8:8\n+  |\n+8 |     if x == false { \"yes\" } else { \"no\" };\n+  |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n-  --> $DIR/bool_comparison.rs:15:8\n-   |\n-15 |     if true == x { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n+ --> $DIR/bool_comparison.rs:9:8\n+  |\n+9 |     if true == x { \"yes\" } else { \"no\" };\n+  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n-  --> $DIR/bool_comparison.rs:19:8\n+  --> $DIR/bool_comparison.rs:10:8\n    |\n-19 |     if false == x { \"yes\" } else { \"no\" };\n+10 |     if false == x { \"yes\" } else { \"no\" };\n    |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: aborting due to 4 previous errors"}, {"sha": "6acb66d9c406511b132fa24a3c8a760e219663af", "filename": "tests/ui/booleans.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -10,39 +10,17 @@ fn main() {\n     let d: bool = unimplemented!();\n     let e: bool = unimplemented!();\n     let _ = a && b || a;\n-\n-\n-\n     let _ = !(a && b);\n     let _ = !true;\n-\n-\n     let _ = !false;\n-\n-\n     let _ = !!a;\n-\n-\n-\n     let _ = false && a;\n-\n-\n-\n-\n     let _ = false || a;\n-\n-\n-\n     // don't lint on cfgs\n     let _ = cfg!(you_shall_not_not_pass) && a;\n-\n     let _ = a || !b || !c || !d || !e;\n-\n     let _ = !(a && b || c);\n-\n     let _ = !(!a && b);\n-\n-\n }\n \n #[allow(unused, many_single_char_names)]\n@@ -53,38 +31,10 @@ fn equality_stuff() {\n     let d: i32 = unimplemented!();\n     let e: i32 = unimplemented!();\n     let _ = a == b && a != b;\n-\n-\n-\n-\n     let _ = a == b && c == 5 && a == b;\n-\n-\n-\n-\n-\n     let _ = a == b && c == 5 && b == a;\n-\n-\n-\n-\n-\n     let _ = a < b && a >= b;\n-\n-\n-\n-\n     let _ = a > b && a <= b;\n-\n-\n-\n-\n     let _ = a > b && a == b;\n-\n     let _ = a != b || !(a != b || c == d);\n-\n-\n-\n-\n-\n }"}, {"sha": "27e1d882a7bf4c71971e299237ba5ca458bd6b1f", "filename": "tests/ui/booleans.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbooleans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fbooleans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbooleans.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -16,9 +16,9 @@ help: this expression can be optimized out by applying boolean operations to the\n    |                  ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:17:13\n+  --> $DIR/booleans.rs:14:13\n    |\n-17 |     let _ = !true;\n+14 |     let _ = !true;\n    |             ^^^^^ help: try `false`\n    |\n note: lint level defined here\n@@ -28,93 +28,93 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:20:13\n+  --> $DIR/booleans.rs:15:13\n    |\n-20 |     let _ = !false;\n+15 |     let _ = !false;\n    |             ^^^^^^ help: try `true`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:23:13\n+  --> $DIR/booleans.rs:16:13\n    |\n-23 |     let _ = !!a;\n+16 |     let _ = !!a;\n    |             ^^^ help: try `a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:27:13\n+  --> $DIR/booleans.rs:17:13\n    |\n-27 |     let _ = false && a;\n+17 |     let _ = false && a;\n    |             ^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:27:22\n+  --> $DIR/booleans.rs:17:22\n    |\n-27 |     let _ = false && a;\n+17 |     let _ = false && a;\n    |                      ^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:32:13\n+  --> $DIR/booleans.rs:18:13\n    |\n-32 |     let _ = false || a;\n+18 |     let _ = false || a;\n    |             ^^^^^^^^^^ help: try `a`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:43:13\n+  --> $DIR/booleans.rs:23:13\n    |\n-43 |     let _ = !(!a && b);\n+23 |     let _ = !(!a && b);\n    |             ^^^^^^^^^^ help: try `!b || a`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:55:13\n+  --> $DIR/booleans.rs:33:13\n    |\n-55 |     let _ = a == b && a != b;\n+33 |     let _ = a == b && a != b;\n    |             ^^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:55:13\n+  --> $DIR/booleans.rs:33:13\n    |\n-55 |     let _ = a == b && a != b;\n+33 |     let _ = a == b && a != b;\n    |             ^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:60:13\n+  --> $DIR/booleans.rs:34:13\n    |\n-60 |     let _ = a == b && c == 5 && a == b;\n+34 |     let _ = a == b && c == 5 && a == b;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `a == b && c == 5`\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:66:13\n+  --> $DIR/booleans.rs:35:13\n    |\n-66 |     let _ = a == b && c == 5 && b == a;\n+35 |     let _ = a == b && c == 5 && b == a;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `a == b && c == 5`\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:72:13\n+  --> $DIR/booleans.rs:36:13\n    |\n-72 |     let _ = a < b && a >= b;\n+36 |     let _ = a < b && a >= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:72:13\n+  --> $DIR/booleans.rs:36:13\n    |\n-72 |     let _ = a < b && a >= b;\n+36 |     let _ = a < b && a >= b;\n    |             ^^^^^\n \n error: this boolean expression contains a logic bug\n-  --> $DIR/booleans.rs:77:13\n+  --> $DIR/booleans.rs:37:13\n    |\n-77 |     let _ = a > b && a <= b;\n+37 |     let _ = a > b && a <= b;\n    |             ^^^^^^^^^^^^^^^ help: it would look like the following `false`\n    |\n help: this expression can be optimized out by applying boolean operations to the outer expression\n-  --> $DIR/booleans.rs:77:13\n+  --> $DIR/booleans.rs:37:13\n    |\n-77 |     let _ = a > b && a <= b;\n+37 |     let _ = a > b && a <= b;\n    |             ^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/booleans.rs:84:13\n+  --> $DIR/booleans.rs:39:13\n    |\n-84 |     let _ = a != b || !(a != b || c == d);\n+39 |     let _ = a != b || !(a != b || c == d);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `c != d || a != b`\n \n error: aborting due to 13 previous errors"}, {"sha": "19c984818730db2be71fdfd8a7ad6da249ac2229", "filename": "tests/ui/cast.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -13,30 +13,23 @@ fn main() {\n     1u64 as f64;\n     1i32 as f64; // Should not trigger the lint\n     1u32 as f64; // Should not trigger the lint\n-\n     // Test cast_possible_truncation\n     1f32 as i32;\n     1f32 as u32;\n-\n     1f64 as f32;\n     1i32 as i8;\n     1i32 as u8;\n-\n     1f64 as isize;\n     1f64 as usize;\n-\n-\n     // Test cast_possible_wrap\n     1u8 as i8;\n     1u16 as i16;\n     1u32 as i32;\n     1u64 as i64;\n     1usize as isize;\n-\n     // Test cast_sign_loss\n     1i32 as u32;\n     1isize as usize;\n-\n     // Extra checks for *size\n     // Casting from *size\n     1isize as i8;\n@@ -46,28 +39,22 @@ fn main() {\n     1usize as f32;\n     1isize as i32;\n     1isize as u32;\n-\n     1usize as u32;\n     1usize as i32;\n-\n     // Casting to *size\n     1i64 as isize;\n     1i64 as usize;\n-\n     1u64 as isize;\n-\n     1u64 as usize;\n     1u32 as isize;\n     1u32 as usize; // Should not trigger any lint\n     1i32 as isize; // Neither should this\n     1i32 as usize;\n-\n     // Test cast_unnecessary\n     1i32 as i32;\n     1f32 as f32;\n     false as bool;\n     &1i32 as &i32;\n-\n     // Should not trigger\n     1i32 as i64;\n     let v = vec!(1);"}, {"sha": "e9fd694d121359f3ce4b52ab5c6aed7f51d3c63c", "filename": "tests/ui/cast.stderr", "status": "modified", "additions": 78, "deletions": 78, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -41,9 +41,9 @@ error: casting u64 to f64 causes a loss of precision (u64 is 64 bits wide, but f\n    |     ^^^^^^^^^^^\n \n error: casting f32 to i32 may truncate the value\n-  --> $DIR/cast.rs:18:5\n+  --> $DIR/cast.rs:17:5\n    |\n-18 |     1f32 as i32;\n+17 |     1f32 as i32;\n    |     ^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -53,15 +53,15 @@ note: lint level defined here\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: casting f32 to u32 may truncate the value\n-  --> $DIR/cast.rs:19:5\n+  --> $DIR/cast.rs:18:5\n    |\n-19 |     1f32 as u32;\n+18 |     1f32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting f32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:19:5\n+  --> $DIR/cast.rs:18:5\n    |\n-19 |     1f32 as u32;\n+18 |     1f32 as u32;\n    |     ^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -71,51 +71,51 @@ note: lint level defined here\n    |                                                       ^^^^^^^^^^^^^^\n \n error: casting f64 to f32 may truncate the value\n-  --> $DIR/cast.rs:21:5\n+  --> $DIR/cast.rs:19:5\n    |\n-21 |     1f64 as f32;\n+19 |     1f64 as f32;\n    |     ^^^^^^^^^^^\n \n error: casting i32 to i8 may truncate the value\n-  --> $DIR/cast.rs:22:5\n+  --> $DIR/cast.rs:20:5\n    |\n-22 |     1i32 as i8;\n+20 |     1i32 as i8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may lose the sign of the value\n-  --> $DIR/cast.rs:23:5\n+  --> $DIR/cast.rs:21:5\n    |\n-23 |     1i32 as u8;\n+21 |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting i32 to u8 may truncate the value\n-  --> $DIR/cast.rs:23:5\n+  --> $DIR/cast.rs:21:5\n    |\n-23 |     1i32 as u8;\n+21 |     1i32 as u8;\n    |     ^^^^^^^^^^\n \n error: casting f64 to isize may truncate the value\n-  --> $DIR/cast.rs:25:5\n+  --> $DIR/cast.rs:22:5\n    |\n-25 |     1f64 as isize;\n+22 |     1f64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may truncate the value\n-  --> $DIR/cast.rs:26:5\n+  --> $DIR/cast.rs:23:5\n    |\n-26 |     1f64 as usize;\n+23 |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting f64 to usize may lose the sign of the value\n-  --> $DIR/cast.rs:26:5\n+  --> $DIR/cast.rs:23:5\n    |\n-26 |     1f64 as usize;\n+23 |     1f64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u8 to i8 may wrap around the value\n-  --> $DIR/cast.rs:30:5\n+  --> $DIR/cast.rs:25:5\n    |\n-30 |     1u8 as i8;\n+25 |     1u8 as i8;\n    |     ^^^^^^^^^\n    |\n note: lint level defined here\n@@ -125,175 +125,175 @@ note: lint level defined here\n    |                                                                       ^^^^^^^^^^^^^^^^^^\n \n error: casting u16 to i16 may wrap around the value\n-  --> $DIR/cast.rs:31:5\n+  --> $DIR/cast.rs:26:5\n    |\n-31 |     1u16 as i16;\n+26 |     1u16 as i16;\n    |     ^^^^^^^^^^^\n \n error: casting u32 to i32 may wrap around the value\n-  --> $DIR/cast.rs:32:5\n+  --> $DIR/cast.rs:27:5\n    |\n-32 |     1u32 as i32;\n+27 |     1u32 as i32;\n    |     ^^^^^^^^^^^\n \n error: casting u64 to i64 may wrap around the value\n-  --> $DIR/cast.rs:33:5\n+  --> $DIR/cast.rs:28:5\n    |\n-33 |     1u64 as i64;\n+28 |     1u64 as i64;\n    |     ^^^^^^^^^^^\n \n error: casting usize to isize may wrap around the value\n-  --> $DIR/cast.rs:34:5\n+  --> $DIR/cast.rs:29:5\n    |\n-34 |     1usize as isize;\n+29 |     1usize as isize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting i32 to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:37:5\n+  --> $DIR/cast.rs:31:5\n    |\n-37 |     1i32 as u32;\n+31 |     1i32 as u32;\n    |     ^^^^^^^^^^^\n \n error: casting isize to usize may lose the sign of the value\n-  --> $DIR/cast.rs:38:5\n+  --> $DIR/cast.rs:32:5\n    |\n-38 |     1isize as usize;\n+32 |     1isize as usize;\n    |     ^^^^^^^^^^^^^^^\n \n error: casting isize to i8 may truncate the value\n-  --> $DIR/cast.rs:42:5\n+  --> $DIR/cast.rs:35:5\n    |\n-42 |     1isize as i8;\n+35 |     1isize as i8;\n    |     ^^^^^^^^^^^^\n \n error: casting isize to f64 causes a loss of precision on targets with 64-bit wide pointers (isize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:43:5\n+  --> $DIR/cast.rs:36:5\n    |\n-43 |     1isize as f64;\n+36 |     1isize as f64;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to f64 causes a loss of precision on targets with 64-bit wide pointers (usize is 64 bits wide, but f64's mantissa is only 52 bits wide)\n-  --> $DIR/cast.rs:44:5\n+  --> $DIR/cast.rs:37:5\n    |\n-44 |     1usize as f64;\n+37 |     1usize as f64;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to f32 causes a loss of precision (isize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:45:5\n+  --> $DIR/cast.rs:38:5\n    |\n-45 |     1isize as f32;\n+38 |     1isize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to f32 causes a loss of precision (usize is 32 or 64 bits wide, but f32's mantissa is only 23 bits wide)\n-  --> $DIR/cast.rs:46:5\n+  --> $DIR/cast.rs:39:5\n    |\n-46 |     1usize as f32;\n+39 |     1usize as f32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast.rs:47:5\n+  --> $DIR/cast.rs:40:5\n    |\n-47 |     1isize as i32;\n+40 |     1isize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may lose the sign of the value\n-  --> $DIR/cast.rs:48:5\n+  --> $DIR/cast.rs:41:5\n    |\n-48 |     1isize as u32;\n+41 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting isize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast.rs:48:5\n+  --> $DIR/cast.rs:41:5\n    |\n-48 |     1isize as u32;\n+41 |     1isize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to u32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast.rs:50:5\n+  --> $DIR/cast.rs:42:5\n    |\n-50 |     1usize as u32;\n+42 |     1usize as u32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may truncate the value on targets with 64-bit wide pointers\n-  --> $DIR/cast.rs:51:5\n+  --> $DIR/cast.rs:43:5\n    |\n-51 |     1usize as i32;\n+43 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting usize to i32 may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:51:5\n+  --> $DIR/cast.rs:43:5\n    |\n-51 |     1usize as i32;\n+43 |     1usize as i32;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:54:5\n+  --> $DIR/cast.rs:45:5\n    |\n-54 |     1i64 as isize;\n+45 |     1i64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may lose the sign of the value\n-  --> $DIR/cast.rs:55:5\n+  --> $DIR/cast.rs:46:5\n    |\n-55 |     1i64 as usize;\n+46 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:55:5\n+  --> $DIR/cast.rs:46:5\n    |\n-55 |     1i64 as usize;\n+46 |     1i64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:57:5\n+  --> $DIR/cast.rs:47:5\n    |\n-57 |     1u64 as isize;\n+47 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to isize may wrap around the value on targets with 64-bit wide pointers\n-  --> $DIR/cast.rs:57:5\n+  --> $DIR/cast.rs:47:5\n    |\n-57 |     1u64 as isize;\n+47 |     1u64 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u64 to usize may truncate the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:59:5\n+  --> $DIR/cast.rs:48:5\n    |\n-59 |     1u64 as usize;\n+48 |     1u64 as usize;\n    |     ^^^^^^^^^^^^^\n \n error: casting u32 to isize may wrap around the value on targets with 32-bit wide pointers\n-  --> $DIR/cast.rs:60:5\n+  --> $DIR/cast.rs:49:5\n    |\n-60 |     1u32 as isize;\n+49 |     1u32 as isize;\n    |     ^^^^^^^^^^^^^\n \n error: casting i32 to usize may lose the sign of the value\n-  --> $DIR/cast.rs:63:5\n+  --> $DIR/cast.rs:52:5\n    |\n-63 |     1i32 as usize;\n+52 |     1i32 as usize;\n    |     ^^^^^^^^^^^^^\n \n warning: casting to the same type is unnecessary (`i32` -> `i32`)\n-  --> $DIR/cast.rs:66:5\n+  --> $DIR/cast.rs:54:5\n    |\n-66 |     1i32 as i32;\n+54 |     1i32 as i32;\n    |     ^^^^^^^^^^^\n    |\n    = note: #[warn(unnecessary_cast)] on by default\n \n warning: casting to the same type is unnecessary (`f32` -> `f32`)\n-  --> $DIR/cast.rs:67:5\n+  --> $DIR/cast.rs:55:5\n    |\n-67 |     1f32 as f32;\n+55 |     1f32 as f32;\n    |     ^^^^^^^^^^^\n    |\n    = note: #[warn(unnecessary_cast)] on by default\n \n warning: casting to the same type is unnecessary (`bool` -> `bool`)\n-  --> $DIR/cast.rs:68:5\n+  --> $DIR/cast.rs:56:5\n    |\n-68 |     false as bool;\n+56 |     false as bool;\n    |     ^^^^^^^^^^^^^\n    |\n    = note: #[warn(unnecessary_cast)] on by default"}, {"sha": "12dcc8262c286027d4ec8e4d9774d0bc3e0a22df", "filename": "tests/ui/cmp_owned.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcmp_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcmp_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -7,9 +7,7 @@ fn main() {\n     fn with_to_string(x : &str) {\n         x != \"foo\".to_string();\n \n-\n         \"foo\".to_string() != x;\n-\n     }\n \n     let x = \"oh\";"}, {"sha": "a476110be61876ce8b925c73635f6286428204d9", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,21 +11,21 @@ note: lint level defined here\n   |        ^^^^^^^^^\n \n error: this creates an owned instance just for comparison. Consider using `\"foo\" != x` to compare without allocation\n-  --> $DIR/cmp_owned.rs:11:9\n+  --> $DIR/cmp_owned.rs:10:9\n    |\n-11 |         \"foo\".to_string() != x;\n+10 |         \"foo\".to_string() != x;\n    |         ^^^^^^^^^^^^^^^^^\n \n error: this creates an owned instance just for comparison. Consider using `x != \"foo\"` to compare without allocation\n-  --> $DIR/cmp_owned.rs:19:10\n+  --> $DIR/cmp_owned.rs:17:10\n    |\n-19 |     x != \"foo\".to_owned();\n+17 |     x != \"foo\".to_owned();\n    |          ^^^^^^^^^^^^^^^^\n \n error: this creates an owned instance just for comparison. Consider using `x != \"foo\"` to compare without allocation\n-  --> $DIR/cmp_owned.rs:24:10\n+  --> $DIR/cmp_owned.rs:22:10\n    |\n-24 |     x != String::from(\"foo\");\n+22 |     x != String::from(\"foo\");\n    |          ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "b06f4fa793e63487290f537bb2a53acb0e1598ee", "filename": "tests/ui/collapsible_if.rs", "status": "modified", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,54 +6,36 @@ fn main() {\n     let x = \"hello\";\n     let y = \"world\";\n     if x == \"hello\" {\n-\n-\n-\n         if y == \"world\" {\n             println!(\"Hello world!\");\n         }\n     }\n \n     if x == \"hello\" || x == \"world\" {\n-\n-\n-\n         if y == \"world\" || y == \"hello\" {\n             println!(\"Hello world!\");\n         }\n     }\n \n     if x == \"hello\" && x == \"world\" {\n-\n-\n-\n         if y == \"world\" || y == \"hello\" {\n             println!(\"Hello world!\");\n         }\n     }\n \n     if x == \"hello\" || x == \"world\" {\n-\n-\n-\n         if y == \"world\" && y == \"hello\" {\n             println!(\"Hello world!\");\n         }\n     }\n \n     if x == \"hello\" && x == \"world\" {\n-\n-\n-\n         if y == \"world\" && y == \"hello\" {\n             println!(\"Hello world!\");\n         }\n     }\n \n     if 42 == 1337 {\n-\n-\n-\n         if 'a' != 'A' {\n             println!(\"world!\")\n         }\n@@ -63,9 +45,6 @@ fn main() {\n     if x == \"hello\" {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if y == \"world\" {\n             println!(\"world!\")\n         }\n@@ -74,9 +53,6 @@ fn main() {\n     if x == \"hello\" {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if let Some(42) = Some(42) {\n             println!(\"world!\")\n         }\n@@ -85,9 +61,6 @@ fn main() {\n     if x == \"hello\" {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if y == \"world\" {\n             println!(\"world\")\n         }\n@@ -99,9 +72,6 @@ fn main() {\n     if x == \"hello\" {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if let Some(42) = Some(42) {\n             println!(\"world\")\n         }\n@@ -113,9 +83,6 @@ fn main() {\n     if let Some(42) = Some(42) {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if let Some(42) = Some(42) {\n             println!(\"world\")\n         }\n@@ -127,9 +94,6 @@ fn main() {\n     if let Some(42) = Some(42) {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if x == \"hello\" {\n             println!(\"world\")\n         }\n@@ -141,9 +105,6 @@ fn main() {\n     if let Some(42) = Some(42) {\n         print!(\"Hello \");\n     } else {\n-\n-\n-\n         if let Some(42) = Some(42) {\n             println!(\"world\")\n         }"}, {"sha": "5e643f68160baabdf4c2a312ca9af4bb9843a3ce", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 103, "deletions": 119, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,12 +2,10 @@ error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:8:5\n    |\n 8  | /     if x == \"hello\" {\n-9  | |\n-10 | |\n-11 | |\n-...  |\n-14 | |         }\n-15 | |     }\n+9  | |         if y == \"world\" {\n+10 | |             println!(\"Hello world!\");\n+11 | |         }\n+12 | |     }\n    | |_____^\n    |\n note: lint level defined here\n@@ -21,15 +19,13 @@ help: try\n    | }\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:17:5\n+  --> $DIR/collapsible_if.rs:14:5\n    |\n-17 | /     if x == \"hello\" || x == \"world\" {\n-18 | |\n-19 | |\n-20 | |\n-...  |\n-23 | |         }\n-24 | |     }\n+14 | /     if x == \"hello\" || x == \"world\" {\n+15 | |         if y == \"world\" || y == \"hello\" {\n+16 | |             println!(\"Hello world!\");\n+17 | |         }\n+18 | |     }\n    | |_____^\n    |\n help: try\n@@ -38,15 +34,13 @@ help: try\n    | }\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:26:5\n+  --> $DIR/collapsible_if.rs:20:5\n    |\n-26 | /     if x == \"hello\" && x == \"world\" {\n-27 | |\n-28 | |\n-29 | |\n-...  |\n-32 | |         }\n-33 | |     }\n+20 | /     if x == \"hello\" && x == \"world\" {\n+21 | |         if y == \"world\" || y == \"hello\" {\n+22 | |             println!(\"Hello world!\");\n+23 | |         }\n+24 | |     }\n    | |_____^\n    |\n help: try\n@@ -55,15 +49,13 @@ help: try\n    | }\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:35:5\n+  --> $DIR/collapsible_if.rs:26:5\n    |\n-35 | /     if x == \"hello\" || x == \"world\" {\n-36 | |\n-37 | |\n-38 | |\n-...  |\n-41 | |         }\n-42 | |     }\n+26 | /     if x == \"hello\" || x == \"world\" {\n+27 | |         if y == \"world\" && y == \"hello\" {\n+28 | |             println!(\"Hello world!\");\n+29 | |         }\n+30 | |     }\n    | |_____^\n    |\n help: try\n@@ -72,15 +64,13 @@ help: try\n    | }\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:44:5\n+  --> $DIR/collapsible_if.rs:32:5\n    |\n-44 | /     if x == \"hello\" && x == \"world\" {\n-45 | |\n-46 | |\n-47 | |\n-...  |\n-50 | |         }\n-51 | |     }\n+32 | /     if x == \"hello\" && x == \"world\" {\n+33 | |         if y == \"world\" && y == \"hello\" {\n+34 | |             println!(\"Hello world!\");\n+35 | |         }\n+36 | |     }\n    | |_____^\n    |\n help: try\n@@ -89,15 +79,13 @@ help: try\n    | }\n \n error: this if statement can be collapsed\n-  --> $DIR/collapsible_if.rs:53:5\n+  --> $DIR/collapsible_if.rs:38:5\n    |\n-53 | /     if 42 == 1337 {\n-54 | |\n-55 | |\n-56 | |\n-...  |\n-59 | |         }\n-60 | |     }\n+38 | /     if 42 == 1337 {\n+39 | |         if 'a' != 'A' {\n+40 | |             println!(\"world!\")\n+41 | |         }\n+42 | |     }\n    | |_____^\n    |\n help: try\n@@ -106,16 +94,14 @@ help: try\n    | }\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:65:12\n+  --> $DIR/collapsible_if.rs:47:12\n    |\n-65 |       } else {\n+47 |       } else {\n    |  ____________^\n-66 | |\n-67 | |\n-68 | |\n-...  |\n-71 | |         }\n-72 | |     }\n+48 | |         if y == \"world\" {\n+49 | |             println!(\"world!\")\n+50 | |         }\n+51 | |     }\n    | |_____^\n    |\n help: try\n@@ -124,16 +110,14 @@ help: try\n    | }\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:76:12\n+  --> $DIR/collapsible_if.rs:55:12\n    |\n-76 |       } else {\n+55 |       } else {\n    |  ____________^\n-77 | |\n-78 | |\n-79 | |\n-...  |\n-82 | |         }\n-83 | |     }\n+56 | |         if let Some(42) = Some(42) {\n+57 | |             println!(\"world!\")\n+58 | |         }\n+59 | |     }\n    | |_____^\n    |\n help: try\n@@ -142,16 +126,16 @@ help: try\n    | }\n \n error: this `else { if .. }` block can be collapsed\n-  --> $DIR/collapsible_if.rs:87:12\n+  --> $DIR/collapsible_if.rs:63:12\n    |\n-87 |       } else {\n+63 |       } else {\n    |  ____________^\n-88 | |\n-89 | |\n-90 | |\n+64 | |         if y == \"world\" {\n+65 | |             println!(\"world\")\n+66 | |         }\n ...  |\n-96 | |         }\n-97 | |     }\n+69 | |         }\n+70 | |     }\n    | |_____^\n    |\n help: try\n@@ -163,58 +147,58 @@ help: try\n    | }\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:101:12\n-    |\n-101 |       } else {\n-    |  ____________^\n-102 | |\n-103 | |\n-104 | |\n-...   |\n-110 | |         }\n-111 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/collapsible_if.rs:74:12\n+   |\n+74 |       } else {\n+   |  ____________^\n+75 | |         if let Some(42) = Some(42) {\n+76 | |             println!(\"world\")\n+77 | |         }\n+...  |\n+80 | |         }\n+81 | |     }\n+   | |_____^\n+   |\n help: try\n-    |     } else if let Some(42) = Some(42) {\n-    |     println!(\"world\")\n-    | }\n-    | else {\n-    |     println!(\"!\")\n-    | }\n+   |     } else if let Some(42) = Some(42) {\n+   |     println!(\"world\")\n+   | }\n+   | else {\n+   |     println!(\"!\")\n+   | }\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:115:12\n-    |\n-115 |       } else {\n-    |  ____________^\n-116 | |\n-117 | |\n-118 | |\n-...   |\n-124 | |         }\n-125 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/collapsible_if.rs:85:12\n+   |\n+85 |       } else {\n+   |  ____________^\n+86 | |         if let Some(42) = Some(42) {\n+87 | |             println!(\"world\")\n+88 | |         }\n+...  |\n+91 | |         }\n+92 | |     }\n+   | |_____^\n+   |\n help: try\n-    |     } else if let Some(42) = Some(42) {\n-    |     println!(\"world\")\n-    | }\n-    | else {\n-    |     println!(\"!\")\n-    | }\n+   |     } else if let Some(42) = Some(42) {\n+   |     println!(\"world\")\n+   | }\n+   | else {\n+   |     println!(\"!\")\n+   | }\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:129:12\n+   --> $DIR/collapsible_if.rs:96:12\n     |\n-129 |       } else {\n+96  |       } else {\n     |  ____________^\n-130 | |\n-131 | |\n-132 | |\n+97  | |         if x == \"hello\" {\n+98  | |             println!(\"world\")\n+99  | |         }\n ...   |\n-138 | |         }\n-139 | |     }\n+102 | |         }\n+103 | |     }\n     | |_____^\n     |\n help: try\n@@ -226,16 +210,16 @@ help: try\n     | }\n \n error: this `else { if .. }` block can be collapsed\n-   --> $DIR/collapsible_if.rs:143:12\n+   --> $DIR/collapsible_if.rs:107:12\n     |\n-143 |       } else {\n+107 |       } else {\n     |  ____________^\n-144 | |\n-145 | |\n-146 | |\n+108 | |         if let Some(42) = Some(42) {\n+109 | |             println!(\"world\")\n+110 | |         }\n ...   |\n-152 | |         }\n-153 | |     }\n+113 | |         }\n+114 | |     }\n     | |_____^\n     |\n help: try"}, {"sha": "ccc53f0c07ad02061f8e0e062cb94bf81317e948", "filename": "tests/ui/conf_french_blacklisted_name.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fconf_french_blacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fconf_french_blacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_french_blacklisted_name.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -18,9 +18,6 @@ fn main() {\n \n     match (42, Some(1337), Some(0)) {\n         (toto, Some(tata), titi @ Some(_)) => (),\n-\n-\n-\n         _ => (),\n     }\n }"}, {"sha": "f6f40513be8a5fb9a568613be5cfd4f0a16eb545", "filename": "tests/ui/conf_path_non_string.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fconf_path_non_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fconf_path_non_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconf_path_non_string.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,5 +2,4 @@\n #![feature(plugin)]\n #![plugin(clippy(conf_file=42))]\n \n-\n fn main() {}"}, {"sha": "8192593be1ad6ab4641dcea2250b10c5817553d8", "filename": "tests/ui/copies.rs", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -28,7 +28,6 @@ pub enum Abc {\n #[deny(match_same_arms)]\n fn if_same_then_else() -> Result<&'static str, ()> {\n     if true {\n-\n         Foo { bar: 42 };\n         0..10;\n         ..;\n@@ -78,8 +77,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match 42 {\n         42 => {\n-\n-\n             foo();\n             let mut a = 42 + [23].len() as i32;\n             if true {\n@@ -101,8 +98,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match Abc::A {\n         Abc::A => 0,\n-\n-\n         Abc::B => 1,\n         _ => 0,\n     };\n@@ -112,15 +107,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     let _ = if true {\n-\n         42\n     }\n     else {\n         42\n     };\n \n     if true {\n-\n         for _ in &[42] {\n             let foo: &Option<_> = &Some::<u8>(42);\n             if true {\n@@ -142,7 +135,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         let bar = if true {\n             42\n         }\n@@ -166,7 +158,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         let _ = match 42 {\n             42 => 1,\n             a if a > 0 => 2,\n@@ -187,15 +178,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         if let Some(a) = Some(42) {}\n     }\n     else {\n         if let Some(a) = Some(42) {}\n     }\n \n     if true {\n-\n         if let (1, .., 3) = (1, 2, 3) {}\n     }\n     else {\n@@ -253,16 +242,12 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     let _ = match 42 {\n         42 => foo(),\n-\n-\n         51 => foo(),\n         _ => true,\n     };\n \n     let _ = match Some(42) {\n         Some(_) => 24,\n-\n-\n         None => 24,\n     };\n \n@@ -285,37 +270,29 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     match (Some(42), Some(42)) {\n         (Some(a), None) => bar(a),\n-\n-\n         (None, Some(a)) => bar(a),\n         _ => (),\n     }\n \n     match (Some(42), Some(42)) {\n         (Some(a), ..) => bar(a),\n-\n-\n         (.., Some(a)) => bar(a),\n         _ => (),\n     }\n \n     match (1, 2, 3) {\n         (1, .., 3) => 42,\n-\n-\n         (.., 3) => 42,\n         _ => 0,\n     };\n \n     let _ = if true {\n-\n         0.0\n     } else {\n         0.0\n     };\n \n     let _ = if true {\n-\n         -0.0\n     } else {\n         -0.0\n@@ -336,7 +313,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n \n     // Same NaNs\n     let _ = if true {\n-\n         std::f32::NAN\n     } else {\n         std::f32::NAN\n@@ -354,15 +330,13 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n     }\n \n     if true {\n-\n         try!(Ok(\"foo\"));\n     }\n     else {\n         try!(Ok(\"foo\"));\n     }\n \n     if true {\n-\n         let foo = \"\";\n         return Ok(&foo[0..]);\n     }\n@@ -383,19 +357,16 @@ fn ifs_same_cond() {\n     let b = false;\n \n     if b {\n-\n     }\n     else if b {\n     }\n \n     if a == 1 {\n-\n     }\n     else if a == 1 {\n     }\n \n     if 2*a == 1 {\n-\n     }\n     else if 2*a == 2 {\n     }"}, {"sha": "c9ad01f335ed7db0e485f2db34d647ae5f19e397", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 199, "deletions": 207, "changes": 406, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,11 +1,11 @@\n warning: This else block is redundant.\n \n-   --> $DIR/copies.rs:128:20\n+   --> $DIR/copies.rs:121:20\n     |\n-128 |               } else {\n+121 |               } else {\n     |  ____________________^\n-129 | |                 continue;\n-130 | |             }\n+122 | |                 continue;\n+123 | |             }\n     | |_____________^\n     |\n     = note: #[warn(needless_continue)] on by default\n@@ -18,12 +18,12 @@ warning: This else block is redundant.\n \n warning: This else block is redundant.\n \n-   --> $DIR/copies.rs:138:20\n+   --> $DIR/copies.rs:131:20\n     |\n-138 |               } else {\n+131 |               } else {\n     |  ____________________^\n-139 | |                 continue;\n-140 | |             }\n+132 | |                 continue;\n+133 | |             }\n     | |_____________^\n     |\n     = note: #[warn(needless_continue)] on by default\n@@ -35,16 +35,16 @@ warning: This else block is redundant.\n             \n \n error: this `if` has identical blocks\n-  --> $DIR/copies.rs:40:10\n+  --> $DIR/copies.rs:39:10\n    |\n-40 |       else {\n+39 |       else {\n    |  __________^\n-41 | |         Foo { bar: 42 };\n-42 | |         0..10;\n-43 | |         ..;\n+40 | |         Foo { bar: 42 };\n+41 | |         0..10;\n+42 | |         ..;\n ...  |\n-47 | |         foo();\n-48 | |     }\n+46 | |         foo();\n+47 | |     }\n    | |_____^\n    |\n note: lint level defined here\n@@ -57,25 +57,25 @@ note: same as this\n    |\n 30 |       if true {\n    |  _____________^\n-31 | |\n-32 | |         Foo { bar: 42 };\n-33 | |         0..10;\n+31 | |         Foo { bar: 42 };\n+32 | |         0..10;\n+33 | |         ..;\n ...  |\n-38 | |         foo();\n-39 | |     }\n+37 | |         foo();\n+38 | |     }\n    | |_____^\n \n error: this `match` has identical arm bodies\n-  --> $DIR/copies.rs:91:14\n+  --> $DIR/copies.rs:88:14\n    |\n-91 |           _ => {\n+88 |           _ => {\n    |  ______________^\n-92 | |             foo();\n-93 | |             let mut a = 42 + [23].len() as i32;\n-94 | |             if true {\n+89 | |             foo();\n+90 | |             let mut a = 42 + [23].len() as i32;\n+91 | |             if true {\n ...  |\n-98 | |             a\n-99 | |         }\n+95 | |             a\n+96 | |         }\n    | |_________^\n    |\n note: lint level defined here\n@@ -84,403 +84,395 @@ note: lint level defined here\n 28 | #[deny(match_same_arms)]\n    |        ^^^^^^^^^^^^^^^\n note: same as this\n-  --> $DIR/copies.rs:80:15\n+  --> $DIR/copies.rs:79:15\n    |\n-80 |           42 => {\n+79 |           42 => {\n    |  _______________^\n-81 | |\n-82 | |\n-83 | |             foo();\n+80 | |             foo();\n+81 | |             let mut a = 42 + [23].len() as i32;\n+82 | |             if true {\n ...  |\n-89 | |             a\n-90 | |         }\n+86 | |             a\n+87 | |         }\n    | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n-  --> $DIR/copies.rs:80:15\n+  --> $DIR/copies.rs:79:15\n    |\n-80 |           42 => {\n+79 |           42 => {\n    |  _______________^\n-81 | |\n-82 | |\n-83 | |             foo();\n+80 | |             foo();\n+81 | |             let mut a = 42 + [23].len() as i32;\n+82 | |             if true {\n ...  |\n-89 | |             a\n-90 | |         }\n+86 | |             a\n+87 | |         }\n    | |_________^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:107:14\n+   --> $DIR/copies.rs:102:14\n     |\n-107 |         _ => 0,\n+102 |         _ => 0,\n     |              ^\n     |\n note: same as this\n-   --> $DIR/copies.rs:103:19\n+   --> $DIR/copies.rs:100:19\n     |\n-103 |         Abc::A => 0,\n+100 |         Abc::A => 0,\n     |                   ^\n note: `Abc::A` has the same arm body as the `_` wildcard, consider removing it`\n-   --> $DIR/copies.rs:103:19\n+   --> $DIR/copies.rs:100:19\n     |\n-103 |         Abc::A => 0,\n+100 |         Abc::A => 0,\n     |                   ^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:118:10\n+   --> $DIR/copies.rs:112:10\n     |\n-118 |       else {\n+112 |       else {\n     |  __________^\n-119 | |         42\n-120 | |     };\n+113 | |         42\n+114 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:114:21\n+   --> $DIR/copies.rs:109:21\n     |\n-114 |       let _ = if true {\n+109 |       let _ = if true {\n     |  _____________________^\n-115 | |\n-116 | |         42\n-117 | |     }\n+110 | |         42\n+111 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:133:10\n+   --> $DIR/copies.rs:126:10\n     |\n-133 |       else {\n+126 |       else {\n     |  __________^\n-134 | |         for _ in &[42] {\n-135 | |             let foo: &Option<_> = &Some::<u8>(42);\n-136 | |             if true {\n+127 | |         for _ in &[42] {\n+128 | |             let foo: &Option<_> = &Some::<u8>(42);\n+129 | |             if true {\n ...   |\n-141 | |         }\n-142 | |     }\n+134 | |         }\n+135 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:122:13\n+   --> $DIR/copies.rs:116:13\n     |\n-122 |       if true {\n+116 |       if true {\n     |  _____________^\n-123 | |\n-124 | |         for _ in &[42] {\n-125 | |             let foo: &Option<_> = &Some::<u8>(42);\n+117 | |         for _ in &[42] {\n+118 | |             let foo: &Option<_> = &Some::<u8>(42);\n+119 | |             if true {\n ...   |\n-131 | |         }\n-132 | |     }\n+124 | |         }\n+125 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:156:10\n+   --> $DIR/copies.rs:148:10\n     |\n-156 |       else {\n+148 |       else {\n     |  __________^\n-157 | |         let bar = if true {\n-158 | |             42\n-159 | |         }\n+149 | |         let bar = if true {\n+150 | |             42\n+151 | |         }\n ...   |\n-165 | |         bar + 1;\n-166 | |     }\n+157 | |         bar + 1;\n+158 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:144:13\n+   --> $DIR/copies.rs:137:13\n     |\n-144 |       if true {\n+137 |       if true {\n     |  _____________^\n-145 | |\n-146 | |         let bar = if true {\n-147 | |             42\n+138 | |         let bar = if true {\n+139 | |             42\n+140 | |         }\n ...   |\n-154 | |         bar + 1;\n-155 | |     }\n+146 | |         bar + 1;\n+147 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:180:19\n+   --> $DIR/copies.rs:171:19\n     |\n-180 |       else if foo() {\n+171 |       else if foo() {\n     |  ___________________^\n-181 | |         let _ = match 42 {\n-182 | |             42 => 1,\n-183 | |             a if a > 0 => 2,\n+172 | |         let _ = match 42 {\n+173 | |             42 => 1,\n+174 | |             a if a > 0 => 2,\n ...   |\n-186 | |         };\n-187 | |     }\n+177 | |         };\n+178 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:168:13\n+   --> $DIR/copies.rs:160:13\n     |\n-168 |       if true {\n+160 |       if true {\n     |  _____________^\n-169 | |\n-170 | |         let _ = match 42 {\n-171 | |             42 => 1,\n+161 | |         let _ = match 42 {\n+162 | |             42 => 1,\n+163 | |             a if a > 0 => 2,\n ...   |\n-175 | |         };\n-176 | |     }\n+166 | |         };\n+167 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:193:10\n+   --> $DIR/copies.rs:183:10\n     |\n-193 |       else {\n+183 |       else {\n     |  __________^\n-194 | |         if let Some(a) = Some(42) {}\n-195 | |     }\n+184 | |         if let Some(a) = Some(42) {}\n+185 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:189:13\n+   --> $DIR/copies.rs:180:13\n     |\n-189 |       if true {\n+180 |       if true {\n     |  _____________^\n-190 | |\n-191 | |         if let Some(a) = Some(42) {}\n-192 | |     }\n+181 | |         if let Some(a) = Some(42) {}\n+182 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:201:10\n+   --> $DIR/copies.rs:190:10\n     |\n-201 |       else {\n+190 |       else {\n     |  __________^\n-202 | |         if let (1, .., 3) = (1, 2, 3) {}\n-203 | |     }\n+191 | |         if let (1, .., 3) = (1, 2, 3) {}\n+192 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:197:13\n+   --> $DIR/copies.rs:187:13\n     |\n-197 |       if true {\n+187 |       if true {\n     |  _____________^\n-198 | |\n-199 | |         if let (1, .., 3) = (1, 2, 3) {}\n-200 | |     }\n+188 | |         if let (1, .., 3) = (1, 2, 3) {}\n+189 | |     }\n     | |_____^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:258:15\n+   --> $DIR/copies.rs:245:15\n     |\n-258 |         51 => foo(),\n+245 |         51 => foo(),\n     |               ^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:255:15\n+   --> $DIR/copies.rs:244:15\n     |\n-255 |         42 => foo(),\n+244 |         42 => foo(),\n     |               ^^^^^\n note: consider refactoring into `42 | 51`\n-   --> $DIR/copies.rs:255:15\n+   --> $DIR/copies.rs:244:15\n     |\n-255 |         42 => foo(),\n+244 |         42 => foo(),\n     |               ^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:266:17\n+   --> $DIR/copies.rs:251:17\n     |\n-266 |         None => 24,\n+251 |         None => 24,\n     |                 ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:263:20\n+   --> $DIR/copies.rs:250:20\n     |\n-263 |         Some(_) => 24,\n+250 |         Some(_) => 24,\n     |                    ^^\n note: consider refactoring into `Some(_) | None`\n-   --> $DIR/copies.rs:263:20\n+   --> $DIR/copies.rs:250:20\n     |\n-263 |         Some(_) => 24,\n+250 |         Some(_) => 24,\n     |                    ^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:290:28\n+   --> $DIR/copies.rs:273:28\n     |\n-290 |         (None, Some(a)) => bar(a),\n+273 |         (None, Some(a)) => bar(a),\n     |                            ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:287:28\n+   --> $DIR/copies.rs:272:28\n     |\n-287 |         (Some(a), None) => bar(a),\n+272 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n note: consider refactoring into `(Some(a), None) | (None, Some(a))`\n-   --> $DIR/copies.rs:287:28\n+   --> $DIR/copies.rs:272:28\n     |\n-287 |         (Some(a), None) => bar(a),\n+272 |         (Some(a), None) => bar(a),\n     |                            ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:298:26\n+   --> $DIR/copies.rs:279:26\n     |\n-298 |         (.., Some(a)) => bar(a),\n+279 |         (.., Some(a)) => bar(a),\n     |                          ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:295:26\n+   --> $DIR/copies.rs:278:26\n     |\n-295 |         (Some(a), ..) => bar(a),\n+278 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n note: consider refactoring into `(Some(a), ..) | (.., Some(a))`\n-   --> $DIR/copies.rs:295:26\n+   --> $DIR/copies.rs:278:26\n     |\n-295 |         (Some(a), ..) => bar(a),\n+278 |         (Some(a), ..) => bar(a),\n     |                          ^^^^^^\n \n error: this `match` has identical arm bodies\n-   --> $DIR/copies.rs:306:20\n+   --> $DIR/copies.rs:285:20\n     |\n-306 |         (.., 3) => 42,\n+285 |         (.., 3) => 42,\n     |                    ^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:303:23\n+   --> $DIR/copies.rs:284:23\n     |\n-303 |         (1, .., 3) => 42,\n+284 |         (1, .., 3) => 42,\n     |                       ^^\n note: consider refactoring into `(1, .., 3) | (.., 3)`\n-   --> $DIR/copies.rs:303:23\n+   --> $DIR/copies.rs:284:23\n     |\n-303 |         (1, .., 3) => 42,\n+284 |         (1, .., 3) => 42,\n     |                       ^^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:313:12\n+   --> $DIR/copies.rs:291:12\n     |\n-313 |       } else {\n+291 |       } else {\n     |  ____________^\n-314 | |         0.0\n-315 | |     };\n+292 | |         0.0\n+293 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:310:21\n+   --> $DIR/copies.rs:289:21\n     |\n-310 |       let _ = if true {\n+289 |       let _ = if true {\n     |  _____________________^\n-311 | |\n-312 | |         0.0\n-313 | |     } else {\n+290 | |         0.0\n+291 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:320:12\n+   --> $DIR/copies.rs:297:12\n     |\n-320 |       } else {\n+297 |       } else {\n     |  ____________^\n-321 | |         -0.0\n-322 | |     };\n+298 | |         -0.0\n+299 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:317:21\n+   --> $DIR/copies.rs:295:21\n     |\n-317 |       let _ = if true {\n+295 |       let _ = if true {\n     |  _____________________^\n-318 | |\n-319 | |         -0.0\n-320 | |     } else {\n+296 | |         -0.0\n+297 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:341:12\n+   --> $DIR/copies.rs:317:12\n     |\n-341 |       } else {\n+317 |       } else {\n     |  ____________^\n-342 | |         std::f32::NAN\n-343 | |     };\n+318 | |         std::f32::NAN\n+319 | |     };\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:338:21\n+   --> $DIR/copies.rs:315:21\n     |\n-338 |       let _ = if true {\n+315 |       let _ = if true {\n     |  _____________________^\n-339 | |\n-340 | |         std::f32::NAN\n-341 | |     } else {\n+316 | |         std::f32::NAN\n+317 | |     } else {\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:360:10\n+   --> $DIR/copies.rs:335:10\n     |\n-360 |       else {\n+335 |       else {\n     |  __________^\n-361 | |         try!(Ok(\"foo\"));\n-362 | |     }\n+336 | |         try!(Ok(\"foo\"));\n+337 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:356:13\n+   --> $DIR/copies.rs:332:13\n     |\n-356 |       if true {\n+332 |       if true {\n     |  _____________^\n-357 | |\n-358 | |         try!(Ok(\"foo\"));\n-359 | |     }\n+333 | |         try!(Ok(\"foo\"));\n+334 | |     }\n     | |_____^\n \n error: this `if` has identical blocks\n-   --> $DIR/copies.rs:373:10\n+   --> $DIR/copies.rs:347:10\n     |\n-373 |       else {\n+347 |       else {\n     |  __________^\n-374 | |         let foo = \"\";\n-375 | |         return Ok(&foo[0..]);\n-376 | |     }\n+348 | |         let foo = \"\";\n+349 | |         return Ok(&foo[0..]);\n+350 | |     }\n     | |_____^\n     |\n note: same as this\n-   --> $DIR/copies.rs:364:13\n+   --> $DIR/copies.rs:339:13\n     |\n-364 |       if true {\n+339 |       if true {\n     |  _____________^\n-365 | |\n-366 | |         let foo = \"\";\n-367 | |         return Ok(&foo[0..]);\n-368 | |     }\n+340 | |         let foo = \"\";\n+341 | |         return Ok(&foo[0..]);\n+342 | |     }\n     | |_____^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:388:13\n+   --> $DIR/copies.rs:361:13\n     |\n-388 |     else if b {\n+361 |     else if b {\n     |             ^\n     |\n note: lint level defined here\n-   --> $DIR/copies.rs:379:8\n+   --> $DIR/copies.rs:353:8\n     |\n-379 | #[deny(ifs_same_cond)]\n+353 | #[deny(ifs_same_cond)]\n     |        ^^^^^^^^^^^^^\n note: same as this\n-   --> $DIR/copies.rs:385:8\n+   --> $DIR/copies.rs:359:8\n     |\n-385 |     if b {\n+359 |     if b {\n     |        ^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:394:13\n+   --> $DIR/copies.rs:366:13\n     |\n-394 |     else if a == 1 {\n+366 |     else if a == 1 {\n     |             ^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:391:8\n+   --> $DIR/copies.rs:364:8\n     |\n-391 |     if a == 1 {\n+364 |     if a == 1 {\n     |        ^^^^^^\n \n error: this `if` has the same condition as a previous if\n-   --> $DIR/copies.rs:402:13\n+   --> $DIR/copies.rs:373:13\n     |\n-402 |     else if 2*a == 1 {\n+373 |     else if 2*a == 1 {\n     |             ^^^^^^^^\n     |\n note: same as this\n-   --> $DIR/copies.rs:397:8\n+   --> $DIR/copies.rs:369:8\n     |\n-397 |     if 2*a == 1 {\n+369 |     if 2*a == 1 {\n     |        ^^^^^^^^\n \n error: aborting due to 22 previous errors"}, {"sha": "50c1c1103c44ca32b9b7022cc078d038d69d8323", "filename": "tests/ui/derive.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -16,15 +16,13 @@ impl PartialEq<u64> for Foo {\n }\n \n #[derive(Hash)]\n-\n struct Bar;\n \n impl PartialEq for Bar {\n     fn eq(&self, _: &Bar) -> bool { true }\n }\n \n #[derive(Hash)]\n-\n struct Baz;\n \n impl PartialEq<Baz> for Baz {\n@@ -35,15 +33,13 @@ impl PartialEq<Baz> for Baz {\n struct Bah;\n \n impl Hash for Bah {\n-\n     fn hash<H: Hasher>(&self, _: &mut H) {}\n }\n \n #[derive(Copy)]\n struct Qux;\n \n impl Clone for Qux {\n-\n     fn clone(&self) -> Self { Qux }\n }\n \n@@ -68,7 +64,6 @@ struct Lt<'a> {\n }\n \n impl<'a> Clone for Lt<'a> {\n-\n     fn clone(&self) -> Self { unimplemented!() }\n }\n "}, {"sha": "25d59bdb7da9a01589756a83639d1aa8266aca41", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 32, "deletions": 37, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,51 +11,49 @@ note: lint level defined here\n 6  | #![deny(warnings)]\n    |         ^^^^^^^^\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:22:1\n+  --> $DIR/derive.rs:21:1\n    |\n-22 | / impl PartialEq for Bar {\n-23 | |     fn eq(&self, _: &Bar) -> bool { true }\n-24 | | }\n+21 | / impl PartialEq for Bar {\n+22 | |     fn eq(&self, _: &Bar) -> bool { true }\n+23 | | }\n    | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:26:10\n+  --> $DIR/derive.rs:25:10\n    |\n-26 | #[derive(Hash)]\n+25 | #[derive(Hash)]\n    |          ^^^^\n    |\n    = note: #[deny(derive_hash_xor_eq)] implied by #[deny(warnings)]\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:30:1\n+  --> $DIR/derive.rs:28:1\n    |\n-30 | / impl PartialEq<Baz> for Baz {\n-31 | |     fn eq(&self, _: &Baz) -> bool { true }\n-32 | | }\n+28 | / impl PartialEq<Baz> for Baz {\n+29 | |     fn eq(&self, _: &Baz) -> bool { true }\n+30 | | }\n    | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive.rs:37:1\n+  --> $DIR/derive.rs:35:1\n    |\n-37 | / impl Hash for Bah {\n-38 | |\n-39 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n-40 | | }\n+35 | / impl Hash for Bah {\n+36 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+37 | | }\n    | |_^\n    |\n    = note: #[deny(derive_hash_xor_eq)] implied by #[deny(warnings)]\n note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:34:10\n+  --> $DIR/derive.rs:32:10\n    |\n-34 | #[derive(PartialEq)]\n+32 | #[derive(PartialEq)]\n    |          ^^^^^^^^^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:45:1\n+  --> $DIR/derive.rs:42:1\n    |\n-45 | / impl Clone for Qux {\n-46 | |\n-47 | |     fn clone(&self) -> Self { Qux }\n-48 | | }\n+42 | / impl Clone for Qux {\n+43 | |     fn clone(&self) -> Self { Qux }\n+44 | | }\n    | |_^\n    |\n    = note: #[deny(expl_impl_clone_on_copy)] implied by #[deny(warnings)]\n@@ -65,31 +63,28 @@ note: lint level defined here\n 6  | #![deny(warnings)]\n    |         ^^^^^^^^\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:45:1\n+  --> $DIR/derive.rs:42:1\n    |\n-45 | / impl Clone for Qux {\n-46 | |\n-47 | |     fn clone(&self) -> Self { Qux }\n-48 | | }\n+42 | / impl Clone for Qux {\n+43 | |     fn clone(&self) -> Self { Qux }\n+44 | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:70:1\n+  --> $DIR/derive.rs:66:1\n    |\n-70 | / impl<'a> Clone for Lt<'a> {\n-71 | |\n-72 | |     fn clone(&self) -> Self { unimplemented!() }\n-73 | | }\n+66 | / impl<'a> Clone for Lt<'a> {\n+67 | |     fn clone(&self) -> Self { unimplemented!() }\n+68 | | }\n    | |_^\n    |\n    = note: #[deny(expl_impl_clone_on_copy)] implied by #[deny(warnings)]\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:70:1\n+  --> $DIR/derive.rs:66:1\n    |\n-70 | / impl<'a> Clone for Lt<'a> {\n-71 | |\n-72 | |     fn clone(&self) -> Self { unimplemented!() }\n-73 | | }\n+66 | / impl<'a> Clone for Lt<'a> {\n+67 | |     fn clone(&self) -> Self { unimplemented!() }\n+68 | | }\n    | |_^\n \n error: aborting due to 5 previous errors"}, {"sha": "b954e78999e259c140fdfc9ebbb9ecda0e36afb1", "filename": "tests/ui/doc.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,23 +1,16 @@\n //! This file tests for the DOC_MARKDOWN lint\n \n-\n #![feature(plugin)]\n #![plugin(clippy)]\n \n #![deny(doc_markdown)]\n \n /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n-\n-\n /// Markdown is _weird_. I mean _really weird_.  This \\_ is ok. So is `_`. But not Foo::some_fun\n-\n /// which should be reported only once despite being __doubly bad__.\n /// Here be ::is::a::global:path.\n-\n /// That's not code ~NotInCodeBlock~.\n-\n /// be_sure_we_got_to_the_end_of_it\n-\n fn foo_bar() {\n }\n \n@@ -32,15 +25,13 @@ fn foo_bar() {\n /// _foo bar_\n /// ~~~\n /// be_sure_we_got_to_the_end_of_it\n-\n fn multiline_codeblock() {\n }\n \n /// This _is a test for\n /// multiline\n /// emphasis_.\n /// be_sure_we_got_to_the_end_of_it\n-\n fn test_emphasis() {\n }\n \n@@ -55,7 +46,6 @@ fn test_emphasis() {\n /// 32kb 32Mb 32Gb 32Tb 32Pb 32Eb\n /// NaN\n /// be_sure_we_got_to_the_end_of_it\n-\n fn test_units() {\n }\n \n@@ -65,15 +55,11 @@ fn test_units() {\n /// `\ud83d\udca3`\n /// `\u2764\ufe0f`\n /// \u00df_foo\n-\n /// \u211d_foo\n-\n /// \ud83d\udca3_foo\n /// \u2764\ufe0f_foo\n /// foo_\u00df\n-\n /// foo_\u211d\n-\n /// foo_\ud83d\udca3\n /// foo_\u2764\ufe0f\n /// [\u00dfdummy text\u00df][foo_1\u00df]\n@@ -89,28 +75,23 @@ fn test_units() {\n /// [foo3_\ud83d\udca3]: dummy text\n /// [foo4_\u2764\ufe0f]: dummy text\n /// be_sure_we_got_to_the_end_of_it\n-\n fn test_unicode() {\n }\n \n /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n-\n /// See also [the issue tracker](https://github.com/Manishearth/rust-clippy/search?q=doc_markdown&type=Issues)\n /// on GitHub (which is a camel-cased word, but is OK). And here is another [inline link][inline_link].\n /// It can also be [inline_link2].\n-\n ///\n /// [chunked-example]: https://en.wikipedia.org/wiki/Chunked_transfer_encoding#Example\n /// [inline_link]: https://foobar\n /// [inline_link2]: https://foobar\n-\n /// The `main` function is the entry point of the program. Here it only calls the `foo_bar` and\n /// `multiline_ticks` functions.\n ///\n /// expression of the type  `_ <bit_op> m <cmp_op> c` (where `<bit_op>`\n /// is one of {`&`, '|'} and `<cmp_op>` is one of {`!=`, `>=`, `>` ,\n /// be_sure_we_got_to_the_end_of_it\n-\n fn main() {\n     foo_bar();\n     multiline_codeblock();\n@@ -124,17 +105,14 @@ fn main() {\n /// # CamelCaseThing\n ///\n /// Not a title #897 CamelCaseThing\n-\n /// be_sure_we_got_to_the_end_of_it\n-\n fn issue897() {\n }\n \n /// I am confused by brackets? (`x_y`)\n /// I am confused by brackets? (foo `x_y`)\n /// I am confused by brackets? (`x_y` foo)\n /// be_sure_we_got_to_the_end_of_it\n-\n fn issue900() {\n }\n \n@@ -148,7 +126,6 @@ fn issue900() {\n /// [iterator]: https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html\n /// [helper_types]: ../helper_types/index.html\n /// be_sure_we_got_to_the_end_of_it\n-\n fn issue883() {\n }\n \n@@ -167,9 +144,6 @@ That's in a code block: `PackedNode`\n And BarQuz too.\n be_sure_we_got_to_the_end_of_it\n */\n-\n-\n-\n fn issue1073() {\n }\n \n@@ -181,9 +155,6 @@ That's in a code block: PackedNode\n And BarQuz too.\n be_sure_we_got_to_the_end_of_it\n */\n-\n-\n-\n fn issue1073_alt() {\n }\n \n@@ -194,6 +165,5 @@ fn issue1073_alt() {\n /// StillDont\n /// ````\n /// be_sure_we_got_to_the_end_of_it\n-\n fn four_quotes() {\n }"}, {"sha": "d267331fb688cf3a85f3189987b2a3694bd63e0a", "filename": "tests/ui/doc.stderr", "status": "modified", "additions": 64, "deletions": 64, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,177 +5,177 @@ error: you should put `DOC_MARKDOWN` between ticks in the documentation\n   |                             ^^^^^^^^^^^^\n   |\n note: lint level defined here\n- --> $DIR/doc.rs:7:9\n+ --> $DIR/doc.rs:6:9\n   |\n-7 | #![deny(doc_markdown)]\n+6 | #![deny(doc_markdown)]\n   |         ^^^^^^^^^^^^\n \n error: you should put `foo_bar` between ticks in the documentation\n- --> $DIR/doc.rs:9:9\n+ --> $DIR/doc.rs:8:9\n   |\n-9 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+8 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n   |         ^^^^^^^\n \n error: you should put `foo::bar` between ticks in the documentation\n- --> $DIR/doc.rs:9:51\n+ --> $DIR/doc.rs:8:51\n   |\n-9 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n+8 | /// The foo_bar function does _nothing_. See also foo::bar. (note the dot there)\n   |                                                   ^^^^^^^^\n \n error: you should put `Foo::some_fun` between ticks in the documentation\n-  --> $DIR/doc.rs:12:84\n-   |\n-12 | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n-   |                                                                                    ^^^^^^^^^^^^^\n+ --> $DIR/doc.rs:9:84\n+  |\n+9 | /// Markdown is _weird_. I mean _really weird_.  This /_ is ok. So is `_`. But not Foo::some_fun\n+  |                                                                                    ^^^^^^^^^^^^^\n \n error: you should put `is::a::global:path` between ticks in the documentation\n-  --> $DIR/doc.rs:15:13\n+  --> $DIR/doc.rs:11:13\n    |\n-15 | /// Here be ::is::a::global:path.\n+11 | /// Here be ::is::a::global:path.\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `NotInCodeBlock` between ticks in the documentation\n-  --> $DIR/doc.rs:17:21\n+  --> $DIR/doc.rs:12:21\n    |\n-17 | /// That's not code ~NotInCodeBlock~.\n+12 | /// That's not code ~NotInCodeBlock~.\n    |                     ^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:19:5\n+  --> $DIR/doc.rs:13:5\n    |\n-19 | /// be_sure_we_got_to_the_end_of_it\n+13 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:34:5\n+  --> $DIR/doc.rs:27:5\n    |\n-34 | /// be_sure_we_got_to_the_end_of_it\n+27 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:42:5\n+  --> $DIR/doc.rs:34:5\n    |\n-42 | /// be_sure_we_got_to_the_end_of_it\n+34 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:57:5\n+  --> $DIR/doc.rs:48:5\n    |\n-57 | /// be_sure_we_got_to_the_end_of_it\n+48 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `\u00df_foo` between ticks in the documentation\n-  --> $DIR/doc.rs:67:5\n+  --> $DIR/doc.rs:57:5\n    |\n-67 | /// \u00df_foo\n+57 | /// \u00df_foo\n    |     ^^^^^\n \n error: you should put `\u211d_foo` between ticks in the documentation\n-  --> $DIR/doc.rs:69:5\n+  --> $DIR/doc.rs:58:5\n    |\n-69 | /// \u211d_foo\n+58 | /// \u211d_foo\n    |     ^^^^^\n \n error: you should put `foo_\u00df` between ticks in the documentation\n-  --> $DIR/doc.rs:73:5\n+  --> $DIR/doc.rs:61:5\n    |\n-73 | /// foo_\u00df\n+61 | /// foo_\u00df\n    |     ^^^^^\n \n error: you should put `foo_\u211d` between ticks in the documentation\n-  --> $DIR/doc.rs:75:5\n+  --> $DIR/doc.rs:62:5\n    |\n-75 | /// foo_\u211d\n+62 | /// foo_\u211d\n    |     ^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-  --> $DIR/doc.rs:91:5\n+  --> $DIR/doc.rs:77:5\n    |\n-91 | /// be_sure_we_got_to_the_end_of_it\n+77 | /// be_sure_we_got_to_the_end_of_it\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `link_with_underscores` between ticks in the documentation\n-  --> $DIR/doc.rs:96:22\n+  --> $DIR/doc.rs:81:22\n    |\n-96 | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n+81 | /// This test has [a link_with_underscores][chunked-example] inside it. See #823.\n    |                      ^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `inline_link2` between ticks in the documentation\n-   --> $DIR/doc.rs:100:21\n-    |\n-100 | /// It can also be [inline_link2].\n-    |                     ^^^^^^^^^^^^\n+  --> $DIR/doc.rs:84:21\n+   |\n+84 | /// It can also be [inline_link2].\n+   |                     ^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:112:5\n-    |\n-112 | /// be_sure_we_got_to_the_end_of_it\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/doc.rs:94:5\n+   |\n+94 | /// be_sure_we_got_to_the_end_of_it\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `CamelCaseThing` between ticks in the documentation\n-   --> $DIR/doc.rs:126:22\n+   --> $DIR/doc.rs:107:22\n     |\n-126 | /// Not a title #897 CamelCaseThing\n+107 | /// Not a title #897 CamelCaseThing\n     |                      ^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:128:5\n+   --> $DIR/doc.rs:108:5\n     |\n-128 | /// be_sure_we_got_to_the_end_of_it\n+108 | /// be_sure_we_got_to_the_end_of_it\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:136:5\n+   --> $DIR/doc.rs:115:5\n     |\n-136 | /// be_sure_we_got_to_the_end_of_it\n+115 | /// be_sure_we_got_to_the_end_of_it\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:150:5\n+   --> $DIR/doc.rs:128:5\n     |\n-150 | /// be_sure_we_got_to_the_end_of_it\n+128 | /// be_sure_we_got_to_the_end_of_it\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:162:42\n+   --> $DIR/doc.rs:139:42\n     |\n-162 | /** E.g. serialization of an empty list: FooBar\n+139 | /** E.g. serialization of an empty list: FooBar\n     |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:167:5\n+   --> $DIR/doc.rs:144:5\n     |\n-167 | And BarQuz too.\n+144 | And BarQuz too.\n     |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:168:1\n+   --> $DIR/doc.rs:145:1\n     |\n-168 | be_sure_we_got_to_the_end_of_it\n+145 | be_sure_we_got_to_the_end_of_it\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `FooBar` between ticks in the documentation\n-   --> $DIR/doc.rs:176:42\n+   --> $DIR/doc.rs:150:42\n     |\n-176 | /** E.g. serialization of an empty list: FooBar\n+150 | /** E.g. serialization of an empty list: FooBar\n     |                                          ^^^^^^\n \n error: you should put `BarQuz` between ticks in the documentation\n-   --> $DIR/doc.rs:181:5\n+   --> $DIR/doc.rs:155:5\n     |\n-181 | And BarQuz too.\n+155 | And BarQuz too.\n     |     ^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:182:1\n+   --> $DIR/doc.rs:156:1\n     |\n-182 | be_sure_we_got_to_the_end_of_it\n+156 | be_sure_we_got_to_the_end_of_it\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you should put `be_sure_we_got_to_the_end_of_it` between ticks in the documentation\n-   --> $DIR/doc.rs:196:5\n+   --> $DIR/doc.rs:167:5\n     |\n-196 | /// be_sure_we_got_to_the_end_of_it\n+167 | /// be_sure_we_got_to_the_end_of_it\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 29 previous errors"}, {"sha": "941f0e73c0a71f828257c9ab555c7020398b97ae", "filename": "tests/ui/empty_enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,6 +6,5 @@\n \n enum Empty {}\n \n-\n fn main() {\n }"}, {"sha": "c7ee18409044bd97d4775fc3d8e3b7dfb402aa83", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,51 +11,30 @@ fn foo() {}\n \n fn insert_if_absent0<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { m.insert(k, v); }\n-\n-\n-\n }\n \n fn insert_if_absent1<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n-\n-\n-\n }\n \n fn insert_if_absent2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_if_present2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if m.contains_key(&k) { None } else { m.insert(k, v) };\n-\n-\n-\n }\n \n fn insert_if_absent3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_if_present3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n-\n-\n-\n }\n \n fn insert_in_btreemap<K: Ord, V>(m: &mut BTreeMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_other_if_absent<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, o: K, v: V) {"}, {"sha": "838eb88737019b7a6c4dfe79c57ebab2168e1b36", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,39 +11,39 @@ note: lint level defined here\n    |         ^^^^^^^^^\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:20:5\n+  --> $DIR/entry.rs:17:5\n    |\n-20 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n+17 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:27:5\n+  --> $DIR/entry.rs:21:5\n    |\n-27 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n+21 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:34:5\n+  --> $DIR/entry.rs:25:5\n    |\n-34 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n+25 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:41:5\n+  --> $DIR/entry.rs:29:5\n    |\n-41 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+29 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:48:5\n+  --> $DIR/entry.rs:33:5\n    |\n-48 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n+33 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n-  --> $DIR/entry.rs:55:5\n+  --> $DIR/entry.rs:37:5\n    |\n-55 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+37 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: aborting due to 7 previous errors"}, {"sha": "cb02947933b679246f2cc53149461a9ad19d47cf", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -21,9 +21,6 @@ fn main() {\n     // unary and binary operators\n     (-(2) < -(2));\n     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n-\n-\n-\n     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n \n     // various other things\n@@ -35,7 +32,6 @@ fn main() {\n     1 + 1 == 2;\n     1 - 1 == 0;\n \n-\n     1 - 1;\n     1 / 1;\n     true && true;\n@@ -47,14 +43,10 @@ fn main() {\n     let b: u32 = 0;\n \n     a == b && b == a;\n-\n     a != b && b != a;\n-\n     a < b && b > a;\n-\n     a <= b && b >= a;\n \n-\n     let mut a = vec![1];\n     a == a;\n     2*a.len() == 2*a.len(); // ok, functions"}, {"sha": "3e96dd4f9684899d97cab1c662fd9a1c04dffdc8", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:41:5\n+  --> $DIR/eq_op.rs:37:5\n    |\n-41 |     true && true;\n+37 |     true && true;\n    |     ^^^^^^^^^^^^ help: try `true`\n    |\n note: lint level defined here\n@@ -11,33 +11,33 @@ note: lint level defined here\n    |        ^^^^^^^^^^^^^^^\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:43:5\n+  --> $DIR/eq_op.rs:39:5\n    |\n-43 |     true || true;\n+39 |     true || true;\n    |     ^^^^^^^^^^^^ help: try `true`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:49:5\n+  --> $DIR/eq_op.rs:45:5\n    |\n-49 |     a == b && b == a;\n+45 |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^ help: try `a == b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:51:5\n+  --> $DIR/eq_op.rs:46:5\n    |\n-51 |     a != b && b != a;\n+46 |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^ help: try `a != b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:53:5\n+  --> $DIR/eq_op.rs:47:5\n    |\n-53 |     a < b && b > a;\n+47 |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^ help: try `a < b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:55:5\n+  --> $DIR/eq_op.rs:48:5\n    |\n-55 |     a <= b && b >= a;\n+48 |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^ help: try `a <= b`\n \n error: equal expressions as operands to `==`\n@@ -113,99 +113,99 @@ error: equal expressions as operands to `&`\n    |                           ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:27:5\n+  --> $DIR/eq_op.rs:24:5\n    |\n-27 |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n+24 |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:30:5\n+  --> $DIR/eq_op.rs:27:5\n    |\n-30 |     ([1] != [1]);\n+27 |     ([1] != [1]);\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:31:5\n+  --> $DIR/eq_op.rs:28:5\n    |\n-31 |     ((1, 2) != (1, 2));\n+28 |     ((1, 2) != (1, 2));\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:35:5\n+  --> $DIR/eq_op.rs:32:5\n    |\n-35 |     1 + 1 == 2;\n+32 |     1 + 1 == 2;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:36:5\n+  --> $DIR/eq_op.rs:33:5\n    |\n-36 |     1 - 1 == 0;\n+33 |     1 - 1 == 0;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:36:5\n+  --> $DIR/eq_op.rs:33:5\n    |\n-36 |     1 - 1 == 0;\n+33 |     1 - 1 == 0;\n    |     ^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:39:5\n+  --> $DIR/eq_op.rs:35:5\n    |\n-39 |     1 - 1;\n+35 |     1 - 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:40:5\n+  --> $DIR/eq_op.rs:36:5\n    |\n-40 |     1 / 1;\n+36 |     1 / 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:41:5\n+  --> $DIR/eq_op.rs:37:5\n    |\n-41 |     true && true;\n+37 |     true && true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `||`\n-  --> $DIR/eq_op.rs:43:5\n+  --> $DIR/eq_op.rs:39:5\n    |\n-43 |     true || true;\n+39 |     true || true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:49:5\n+  --> $DIR/eq_op.rs:45:5\n    |\n-49 |     a == b && b == a;\n+45 |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:51:5\n+  --> $DIR/eq_op.rs:46:5\n    |\n-51 |     a != b && b != a;\n+46 |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:53:5\n+  --> $DIR/eq_op.rs:47:5\n    |\n-53 |     a < b && b > a;\n+47 |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:55:5\n+  --> $DIR/eq_op.rs:48:5\n    |\n-55 |     a <= b && b >= a;\n+48 |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:59:5\n+  --> $DIR/eq_op.rs:51:5\n    |\n-59 |     a == a;\n+51 |     a == a;\n    |     ^^^^^^\n \n warning: taken reference of right operand\n-  --> $DIR/eq_op.rs:97:13\n+  --> $DIR/eq_op.rs:89:13\n    |\n-97 |     let z = x & &y;\n+89 |     let z = x & &y;\n    |             ^^^^--\n    |                 |\n    |                 help: use the right value directly `y`"}, {"sha": "91e081f5ec672403370849da91830d4d1eeed605", "filename": "tests/ui/eta.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,32 +5,18 @@\n \n fn main() {\n     let a = Some(1u8).map(|a| foo(a));\n-\n-\n-\n     meta(|a| foo(a));\n-\n-\n-\n     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-\n-\n-\n     let d = Some(1u8).map(|a| foo((|b| foo2(b))(a))); //is adjusted?\n     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n-\n     unsafe {\n         Some(1u8).map(|a| unsafe_fn(a)); // unsafe fn\n     }\n \n     // See #815\n     let e = Some(1u8).map(|a| divergent(a));\n     let e = Some(1u8).map(|a| generic(a));\n-\n-\n-\n     let e = Some(1u8).map(generic);\n-\n     // See #515\n     let a: Option<Box<::std::ops::Deref<Target = [i32]>>> =\n         Some(vec![1i32, 2]).map(|v| -> Box<::std::ops::Deref<Target = [i32]>> { Box::new(v) });\n@@ -41,7 +27,6 @@ fn meta<F>(f: F) where F: Fn(u8) {\n }\n \n fn foo(_: u8) {\n-\n }\n \n fn foo2(_: u8) -> u8 {"}, {"sha": "b218523ba5f5d0083e542a84383bbade37088699", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,29 +11,29 @@ note: lint level defined here\n   |         ^^^^^^^^^^^^^^^^^\n \n error: redundant closure found\n-  --> $DIR/eta.rs:11:10\n-   |\n-11 |     meta(|a| foo(a));\n-   |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n+ --> $DIR/eta.rs:8:10\n+  |\n+8 |     meta(|a| foo(a));\n+  |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n \n error: redundant closure found\n-  --> $DIR/eta.rs:15:27\n-   |\n-15 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-   |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n+ --> $DIR/eta.rs:9:27\n+  |\n+9 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n+  |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n \n warning: this expression borrows a reference that is immediately dereferenced by the compiler\n-  --> $DIR/eta.rs:20:21\n+  --> $DIR/eta.rs:11:21\n    |\n-20 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n+11 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n    |                     ^^^\n    |\n    = note: #[warn(needless_borrow)] on by default\n \n error: redundant closure found\n-  --> $DIR/eta.rs:28:27\n+  --> $DIR/eta.rs:18:27\n    |\n-28 |     let e = Some(1u8).map(|a| generic(a));\n+18 |     let e = Some(1u8).map(|a| generic(a));\n    |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n error: aborting due to 4 previous errors"}, {"sha": "1c25afed77aa9c52bb897804a2f6839b8d426b06", "filename": "tests/ui/eval_order_dependence.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -7,7 +7,6 @@ fn main() {\n     let mut x = 0;\n     let a = { x = 1; 1 } + x;\n \n-\n     // Example from iss#277\n     x += { x = 20; 2 };\n \n@@ -16,7 +15,6 @@ fn main() {\n     struct Foo { a: i32, b: i32 };\n     let base = Foo { a: 4, b: 5 };\n     let foo = Foo { a: x, .. { x = 6; base } };\n-\n     // ...inside a closure?\n     let closure = || {\n         let mut x = 0;"}, {"sha": "5e5ae53e1842b0905a974fb2a73309da2df4fe8e", "filename": "tests/ui/eval_order_dependence.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feval_order_dependence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Feval_order_dependence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feval_order_dependence.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -16,39 +16,39 @@ note: whether read occurs before this write depends on evaluation order\n   |               ^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:12:5\n+  --> $DIR/eval_order_dependence.rs:11:5\n    |\n-12 |     x += { x = 20; 2 };\n+11 |     x += { x = 20; 2 };\n    |     ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:12:12\n+  --> $DIR/eval_order_dependence.rs:11:12\n    |\n-12 |     x += { x = 20; 2 };\n+11 |     x += { x = 20; 2 };\n    |            ^^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:18:24\n+  --> $DIR/eval_order_dependence.rs:17:24\n    |\n-18 |     let foo = Foo { a: x, .. { x = 6; base } };\n+17 |     let foo = Foo { a: x, .. { x = 6; base } };\n    |                        ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:18:32\n+  --> $DIR/eval_order_dependence.rs:17:32\n    |\n-18 |     let foo = Foo { a: x, .. { x = 6; base } };\n+17 |     let foo = Foo { a: x, .. { x = 6; base } };\n    |                                ^^^^^\n \n error: unsequenced read of a variable\n-  --> $DIR/eval_order_dependence.rs:23:9\n+  --> $DIR/eval_order_dependence.rs:21:9\n    |\n-23 |         x += { x = 20; 2 };\n+21 |         x += { x = 20; 2 };\n    |         ^\n    |\n note: whether read occurs before this write depends on evaluation order\n-  --> $DIR/eval_order_dependence.rs:23:16\n+  --> $DIR/eval_order_dependence.rs:21:16\n    |\n-23 |         x += { x = 20; 2 };\n+21 |         x += { x = 20; 2 };\n    |                ^^^^^^\n \n error: aborting due to 4 previous errors"}, {"sha": "d6a74193ae312f73facce54e844855d20699aa89", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -41,48 +41,21 @@ fn main() {\n     ZERO + ZERO != 1.0; //no error, comparison with zero is ok\n \n     ONE == 1f32;\n-\n-\n-\n     ONE == 1.0 + 0.0;\n-\n-\n-\n-\n     ONE + ONE == ZERO + ONE + ONE;\n-\n-\n-\n-\n     ONE != 2.0;\n-\n-\n-\n     ONE != 0.0; // no error, comparison with zero is ok\n     twice(ONE) != ONE;\n-\n-\n-\n     ONE as f64 != 2.0;\n-\n-\n-\n     ONE as f64 != 0.0; // no error, comparison with zero is ok\n \n     let x : f64 = 1.0;\n \n     x == 1.0;\n-\n-\n-\n     x != 0f64; // no error, comparison with zero is ok\n \n     twice(x) != twice(ONE as f64);\n \n-\n-\n-\n-\n     x < 0.0; // no errors, lower or greater comparisons need no fuzzyness\n     x > 0.0;\n     x <= 0.0;"}, {"sha": "082990334d1ced0112512e7c7017b6c03de8c857", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -16,87 +16,87 @@ note: std::f32::EPSILON and std::f64::EPSILON are available.\n    |     ^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:47:5\n+  --> $DIR/float_cmp.rs:44:5\n    |\n-47 |     ONE == 1.0 + 0.0;\n+44 |     ONE == 1.0 + 0.0;\n    |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE - (1.0 + 0.0)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:47:5\n+  --> $DIR/float_cmp.rs:44:5\n    |\n-47 |     ONE == 1.0 + 0.0;\n+44 |     ONE == 1.0 + 0.0;\n    |     ^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:52:5\n+  --> $DIR/float_cmp.rs:45:5\n    |\n-52 |     ONE + ONE == ZERO + ONE + ONE;\n+45 |     ONE + ONE == ZERO + ONE + ONE;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE + ONE - (ZERO + ONE + ONE)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:52:5\n+  --> $DIR/float_cmp.rs:45:5\n    |\n-52 |     ONE + ONE == ZERO + ONE + ONE;\n+45 |     ONE + ONE == ZERO + ONE + ONE;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:57:5\n+  --> $DIR/float_cmp.rs:46:5\n    |\n-57 |     ONE != 2.0;\n+46 |     ONE != 2.0;\n    |     ^^^^^^^^^^ help: consider comparing them within some error `(ONE - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:57:5\n+  --> $DIR/float_cmp.rs:46:5\n    |\n-57 |     ONE != 2.0;\n+46 |     ONE != 2.0;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:62:5\n+  --> $DIR/float_cmp.rs:48:5\n    |\n-62 |     twice(ONE) != ONE;\n+48 |     twice(ONE) != ONE;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(ONE) - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:62:5\n+  --> $DIR/float_cmp.rs:48:5\n    |\n-62 |     twice(ONE) != ONE;\n+48 |     twice(ONE) != ONE;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:66:5\n+  --> $DIR/float_cmp.rs:49:5\n    |\n-66 |     ONE as f64 != 2.0;\n+49 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE as f64 - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:66:5\n+  --> $DIR/float_cmp.rs:49:5\n    |\n-66 |     ONE as f64 != 2.0;\n+49 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:74:5\n+  --> $DIR/float_cmp.rs:54:5\n    |\n-74 |     x == 1.0;\n+54 |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:74:5\n+  --> $DIR/float_cmp.rs:54:5\n    |\n-74 |     x == 1.0;\n+54 |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:80:5\n+  --> $DIR/float_cmp.rs:57:5\n    |\n-80 |     twice(x) != twice(ONE as f64);\n+57 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:80:5\n+  --> $DIR/float_cmp.rs:57:5\n    |\n-80 |     twice(x) != twice(ONE as f64);\n+57 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "556053fdbc5d86d8b2b9be8a0142b2fe22a22c64", "filename": "tests/ui/for_loop.rs", "status": "modified", "additions": 0, "deletions": 139, "changes": 139, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffor_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffor_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -14,45 +14,30 @@ fn for_loop_over_option_and_result() {\n     let v = vec![0,1,2];\n \n     // check FOR_LOOP_OVER_OPTION lint\n-\n     for x in option {\n-\n-\n         println!(\"{}\", x);\n     }\n \n     // check FOR_LOOP_OVER_RESULT lint\n-\n     for x in result {\n-\n-\n         println!(\"{}\", x);\n     }\n \n     for x in option.ok_or(\"x not found\") {\n-\n-\n         println!(\"{}\", x);\n     }\n \n     // make sure LOOP_OVER_NEXT lint takes precedence when next() is the last call in the chain\n-\n     for x in v.iter().next() {\n-\n         println!(\"{}\", x);\n     }\n \n     // make sure we lint when next() is not the last call in the chain\n-\n     for x in v.iter().next().and(Some(0)) {\n-\n-\n         println!(\"{}\", x);\n     }\n \n     for x in v.iter().next().ok_or(\"x not found\") {\n-\n-\n         println!(\"{}\", x);\n     }\n \n@@ -97,134 +82,73 @@ fn main() {\n     let mut vec = vec![1, 2, 3, 4];\n     let vec2 = vec![1, 2, 3, 4];\n     for i in 0..vec.len() {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 0..vec.len() {\n-\n         let i = 42; // make a different `i`\n         println!(\"{}\", vec[i]); // ok, not the `i` of the for-loop\n     }\n \n     for i in 0..vec.len() { let _ = vec[i]; }\n \n-\n-\n-\n-\n     // ICE #746\n     for j in 0..4 {\n-\n-\n-\n-\n         println!(\"{:?}\", STATIC[j]);\n     }\n \n     for j in 0..4 {\n-\n-\n-\n-\n         println!(\"{:?}\", CONST[j]);\n     }\n \n     for i in 0..vec.len() {\n-\n-\n-\n-\n         println!(\"{} {}\", vec[i], i);\n     }\n     for i in 0..vec.len() {      // not an error, indexing more than one variable\n         println!(\"{} {}\", vec[i], vec2[i]);\n     }\n \n     for i in 0..vec.len() {\n-\n-\n-\n-\n         println!(\"{}\", vec2[i]);\n     }\n \n     for i in 5..vec.len() {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 0..MAX_LEN {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 0...MAX_LEN {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 5..10 {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 5...10 {\n-\n-\n-\n-\n         println!(\"{}\", vec[i]);\n     }\n \n     for i in 5..vec.len() {\n-\n-\n-\n-\n         println!(\"{} {}\", vec[i], i);\n     }\n \n     for i in 5..10 {\n-\n-\n-\n-\n         println!(\"{} {}\", vec[i], i);\n     }\n \n     for i in 10..0 {\n-\n-\n-\n         println!(\"{}\", i);\n     }\n \n     for i in 10...0 {\n-\n-\n-\n         println!(\"{}\", i);\n     }\n \n     for i in MAX_LEN..0 {\n-\n-\n         println!(\"{}\", i);\n     }\n \n@@ -250,16 +174,10 @@ fn main() {\n \n     // testing that the empty range lint folds constants\n     for i in 10..5+4 {\n-\n-\n-\n         println!(\"{}\", i);\n     }\n \n     for i in (5+2)..(3-1) {\n-\n-\n-\n         println!(\"{}\", i);\n     }\n \n@@ -288,20 +206,11 @@ fn main() {\n \n     for _v in vec.iter() { }\n \n-\n-\n-\n     for _v in vec.iter_mut() { }\n \n-\n-\n-\n     let out_vec = vec![1,2,3];\n     for _v in out_vec.into_iter() { }\n \n-\n-\n-\n     let array = [1, 2, 3];\n     for _v in array.into_iter() {}\n \n@@ -310,61 +219,33 @@ fn main() {\n \n     for _v in [1, 2, 3].iter() { }\n \n-\n-\n-\n     for _v in (&mut [1, 2, 3]).iter() { } // no error\n \n     for _v in [0; 32].iter() {}\n \n-\n-\n-\n     for _v in [0; 33].iter() {} // no error\n \n     let ll: LinkedList<()> = LinkedList::new();\n     for _v in ll.iter() { }\n \n-\n-\n-\n     let vd: VecDeque<()> = VecDeque::new();\n     for _v in vd.iter() { }\n \n-\n-\n-\n     let bh: BinaryHeap<()> = BinaryHeap::new();\n     for _v in bh.iter() { }\n \n-\n-\n-\n     let hm: HashMap<(), ()> = HashMap::new();\n     for _v in hm.iter() { }\n \n-\n-\n-\n     let bt: BTreeMap<(), ()> = BTreeMap::new();\n     for _v in bt.iter() { }\n \n-\n-\n-\n     let hs: HashSet<()> = HashSet::new();\n     for _v in hs.iter() { }\n \n-\n-\n-\n     let bs: BTreeSet<()> = BTreeSet::new();\n     for _v in bs.iter() { }\n \n-\n-\n-\n-\n     for _v in vec.iter().next() { }\n \n     let u = Unrelated(vec![]);\n@@ -442,49 +323,29 @@ fn main() {\n \n     let m : HashMap<u64, u64> = HashMap::new();\n     for (_, v) in &m {\n-\n-\n-\n-\n         let _v = v;\n     }\n \n     let m : Rc<HashMap<u64, u64>> = Rc::new(HashMap::new());\n     for (_, v) in &*m {\n-\n-\n-\n-\n         let _v = v;\n         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n         // `in *m.values()` as we used to\n     }\n \n     let mut m : HashMap<u64, u64> = HashMap::new();\n     for (_, v) in &mut m {\n-\n-\n-\n-\n         let _v = v;\n     }\n \n     let m: &mut HashMap<u64, u64> = &mut HashMap::new();\n     for (_, v) in &mut *m {\n-\n-\n-\n-\n         let _v = v;\n     }\n \n     let m : HashMap<u64, u64> = HashMap::new();\n     let rm = &m;\n     for (k, _value) in rm {\n-\n-\n-\n-\n         let _k = k;\n     }\n "}, {"sha": "fb5592a54e70314de98d51f8f437653cf4d9dc2d", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 201, "deletions": 282, "changes": 483, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: for loop over `option`, which is an `Option`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:18:14\n+  --> $DIR/for_loop.rs:17:14\n    |\n-18 |     for x in option {\n+17 |     for x in option {\n    |              ^^^^^^\n    |\n    = note: #[deny(for_loop_over_option)] implied by #[deny(clippy)]\n@@ -13,9 +13,9 @@ note: lint level defined here\n    = help: consider replacing `for x in option` with `if let Some(x) = option`\n \n error: for loop over `result`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:26:14\n+  --> $DIR/for_loop.rs:22:14\n    |\n-26 |     for x in result {\n+22 |     for x in result {\n    |              ^^^^^^\n    |\n    = note: #[deny(for_loop_over_result)] implied by #[deny(clippy)]\n@@ -27,21 +27,20 @@ note: lint level defined here\n    = help: consider replacing `for x in result` with `if let Ok(x) = result`\n \n error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:32:14\n+  --> $DIR/for_loop.rs:26:14\n    |\n-32 |     for x in option.ok_or(\"x not found\") {\n+26 |     for x in option.ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(for_loop_over_result)] implied by #[deny(clippy)]\n    = help: consider replacing `for x in option.ok_or(\"x not found\")` with `if let Ok(x) = option.ok_or(\"x not found\")`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-  --> $DIR/for_loop.rs:40:5\n+  --> $DIR/for_loop.rs:31:5\n    |\n-40 | /     for x in v.iter().next() {\n-41 | |\n-42 | |         println!(\"{}\", x);\n-43 | |     }\n+31 | /     for x in v.iter().next() {\n+32 | |         println!(\"{}\", x);\n+33 | |     }\n    | |_____^\n    |\n    = note: #[deny(iter_next_loop)] implied by #[deny(clippy)]\n@@ -52,522 +51,442 @@ note: lint level defined here\n    |        ^^^^^^\n \n error: for loop over `v.iter().next().and(Some(0))`, which is an `Option`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:47:14\n+  --> $DIR/for_loop.rs:36:14\n    |\n-47 |     for x in v.iter().next().and(Some(0)) {\n+36 |     for x in v.iter().next().and(Some(0)) {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(for_loop_over_option)] implied by #[deny(clippy)]\n    = help: consider replacing `for x in v.iter().next().and(Some(0))` with `if let Some(x) = v.iter().next().and(Some(0))`\n \n error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`. This is more readably written as an `if let` statement.\n-  --> $DIR/for_loop.rs:53:14\n+  --> $DIR/for_loop.rs:40:14\n    |\n-53 |     for x in v.iter().next().ok_or(\"x not found\") {\n+40 |     for x in v.iter().next().ok_or(\"x not found\") {\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(for_loop_over_result)] implied by #[deny(clippy)]\n    = help: consider replacing `for x in v.iter().next().ok_or(\"x not found\")` with `if let Ok(x) = v.iter().next().ok_or(\"x not found\")`\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:99:5\n-    |\n-99  | /     for i in 0..vec.len() {\n-100 | |\n-101 | |\n-102 | |\n-103 | |\n-104 | |         println!(\"{}\", vec[i]);\n-105 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/for_loop.rs:84:5\n+   |\n+84 | /     for i in 0..vec.len() {\n+85 | |         println!(\"{}\", vec[i]);\n+86 | |     }\n+   | |_____^\n+   |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:8\n-    |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n-    |        ^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/for_loop.rs:75:8\n+   |\n+75 | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+   |        ^^^^^^^^^^^^^^^^^^^\n help: consider using an iterator\n-    |     for <item> in &vec {\n+   |     for <item> in &vec {\n \n warning: unused variable: `i`\n-   --> $DIR/for_loop.rs:107:9\n-    |\n-107 |     for i in 0..vec.len() {\n-    |         ^\n-    |\n-    = note: #[warn(unused_variables)] on by default\n+  --> $DIR/for_loop.rs:88:9\n+   |\n+88 |     for i in 0..vec.len() {\n+   |         ^\n+   |\n+   = note: #[warn(unused_variables)] on by default\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:113:5\n-    |\n-113 |     for i in 0..vec.len() { let _ = vec[i]; }\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/for_loop.rs:93:5\n+   |\n+93 |     for i in 0..vec.len() { let _ = vec[i]; }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: consider using an iterator\n-    |     for <item> in &vec { let _ = vec[i]; }\n+   |     for <item> in &vec { let _ = vec[i]; }\n \n error: the loop variable `j` is only used to index `STATIC`.\n-   --> $DIR/for_loop.rs:120:5\n-    |\n-120 | /     for j in 0..4 {\n-121 | |\n-122 | |\n-123 | |\n-124 | |\n-125 | |         println!(\"{:?}\", STATIC[j]);\n-126 | |     }\n-    | |_____^\n-    |\n+  --> $DIR/for_loop.rs:96:5\n+   |\n+96 | /     for j in 0..4 {\n+97 | |         println!(\"{:?}\", STATIC[j]);\n+98 | |     }\n+   | |_____^\n+   |\n help: consider using an iterator\n-    |     for <item> in STATIC.iter().take(4) {\n+   |     for <item> in STATIC.iter().take(4) {\n \n error: the loop variable `j` is only used to index `CONST`.\n-   --> $DIR/for_loop.rs:128:5\n-    |\n-128 | /     for j in 0..4 {\n-129 | |\n-130 | |\n-131 | |\n-132 | |\n-133 | |         println!(\"{:?}\", CONST[j]);\n-134 | |     }\n+   --> $DIR/for_loop.rs:100:5\n+    |\n+100 | /     for j in 0..4 {\n+101 | |         println!(\"{:?}\", CONST[j]);\n+102 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in CONST.iter().take(4) {\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:136:5\n-    |\n-136 | /     for i in 0..vec.len() {\n-137 | |\n-138 | |\n-139 | |\n-140 | |\n-141 | |         println!(\"{} {}\", vec[i], i);\n-142 | |     }\n+   --> $DIR/for_loop.rs:104:5\n+    |\n+104 | /     for i in 0..vec.len() {\n+105 | |         println!(\"{} {}\", vec[i], i);\n+106 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate() {\n \n error: the loop variable `i` is only used to index `vec2`.\n-   --> $DIR/for_loop.rs:147:5\n+   --> $DIR/for_loop.rs:111:5\n     |\n-147 | /     for i in 0..vec.len() {\n-148 | |\n-149 | |\n-150 | |\n-151 | |\n-152 | |         println!(\"{}\", vec2[i]);\n-153 | |     }\n+111 | /     for i in 0..vec.len() {\n+112 | |         println!(\"{}\", vec2[i]);\n+113 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec2.iter().take(vec.len()) {\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:155:5\n+   --> $DIR/for_loop.rs:115:5\n     |\n-155 | /     for i in 5..vec.len() {\n-156 | |\n-157 | |\n-158 | |\n-159 | |\n-160 | |         println!(\"{}\", vec[i]);\n-161 | |     }\n+115 | /     for i in 5..vec.len() {\n+116 | |         println!(\"{}\", vec[i]);\n+117 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().skip(5) {\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:163:5\n-    |\n-163 | /     for i in 0..MAX_LEN {\n-164 | |\n-165 | |\n-166 | |\n-167 | |\n-168 | |         println!(\"{}\", vec[i]);\n-169 | |     }\n+   --> $DIR/for_loop.rs:119:5\n+    |\n+119 | /     for i in 0..MAX_LEN {\n+120 | |         println!(\"{}\", vec[i]);\n+121 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(MAX_LEN) {\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:171:5\n-    |\n-171 | /     for i in 0...MAX_LEN {\n-172 | |\n-173 | |\n-174 | |\n-175 | |\n-176 | |         println!(\"{}\", vec[i]);\n-177 | |     }\n+   --> $DIR/for_loop.rs:123:5\n+    |\n+123 | /     for i in 0...MAX_LEN {\n+124 | |         println!(\"{}\", vec[i]);\n+125 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(MAX_LEN + 1) {\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:179:5\n-    |\n-179 | /     for i in 5..10 {\n-180 | |\n-181 | |\n-182 | |\n-183 | |\n-184 | |         println!(\"{}\", vec[i]);\n-185 | |     }\n+   --> $DIR/for_loop.rs:127:5\n+    |\n+127 | /     for i in 5..10 {\n+128 | |         println!(\"{}\", vec[i]);\n+129 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(10).skip(5) {\n \n error: the loop variable `i` is only used to index `vec`.\n-   --> $DIR/for_loop.rs:187:5\n-    |\n-187 | /     for i in 5...10 {\n-188 | |\n-189 | |\n-190 | |\n-191 | |\n-192 | |         println!(\"{}\", vec[i]);\n-193 | |     }\n+   --> $DIR/for_loop.rs:131:5\n+    |\n+131 | /     for i in 5...10 {\n+132 | |         println!(\"{}\", vec[i]);\n+133 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(10 + 1).skip(5) {\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:195:5\n-    |\n-195 | /     for i in 5..vec.len() {\n-196 | |\n-197 | |\n-198 | |\n-199 | |\n-200 | |         println!(\"{} {}\", vec[i], i);\n-201 | |     }\n+   --> $DIR/for_loop.rs:135:5\n+    |\n+135 | /     for i in 5..vec.len() {\n+136 | |         println!(\"{} {}\", vec[i], i);\n+137 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n \n error: the loop variable `i` is used to index `vec`\n-   --> $DIR/for_loop.rs:203:5\n-    |\n-203 | /     for i in 5..10 {\n-204 | |\n-205 | |\n-206 | |\n-207 | |\n-208 | |         println!(\"{} {}\", vec[i], i);\n-209 | |     }\n+   --> $DIR/for_loop.rs:139:5\n+    |\n+139 | /     for i in 5..10 {\n+140 | |         println!(\"{} {}\", vec[i], i);\n+141 | |     }\n     | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:211:5\n-    |\n-211 | /     for i in 10..0 {\n-212 | |\n-213 | |\n-214 | |\n-215 | |         println!(\"{}\", i);\n-216 | |     }\n+   --> $DIR/for_loop.rs:143:5\n+    |\n+143 | /     for i in 10..0 {\n+144 | |         println!(\"{}\", i);\n+145 | |     }\n     | |_____^\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:90\n+   --> $DIR/for_loop.rs:75:90\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                                                          ^^^^^^^^^^^^^^^^^^\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (0..10).rev() {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:218:5\n-    |\n-218 | /     for i in 10...0 {\n-219 | |\n-220 | |\n-221 | |\n-222 | |         println!(\"{}\", i);\n-223 | |     }\n+   --> $DIR/for_loop.rs:147:5\n+    |\n+147 | /     for i in 10...0 {\n+148 | |         println!(\"{}\", i);\n+149 | |     }\n     | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (0...10).rev() {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:225:5\n+   --> $DIR/for_loop.rs:151:5\n     |\n-225 | /     for i in MAX_LEN..0 {\n-226 | |\n-227 | |\n-228 | |         println!(\"{}\", i);\n-229 | |     }\n+151 | /     for i in MAX_LEN..0 {\n+152 | |         println!(\"{}\", i);\n+153 | |     }\n     | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (0..MAX_LEN).rev() {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:231:5\n+   --> $DIR/for_loop.rs:155:5\n     |\n-231 | /     for i in 5..5 {\n-232 | |         println!(\"{}\", i);\n-233 | |     }\n+155 | /     for i in 5..5 {\n+156 | |         println!(\"{}\", i);\n+157 | |     }\n     | |_____^\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:252:5\n-    |\n-252 | /     for i in 10..5+4 {\n-253 | |\n-254 | |\n-255 | |\n-256 | |         println!(\"{}\", i);\n-257 | |     }\n+   --> $DIR/for_loop.rs:176:5\n+    |\n+176 | /     for i in 10..5+4 {\n+177 | |         println!(\"{}\", i);\n+178 | |     }\n     | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (5+4..10).rev() {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:259:5\n-    |\n-259 | /     for i in (5+2)..(3-1) {\n-260 | |\n-261 | |\n-262 | |\n-263 | |         println!(\"{}\", i);\n-264 | |     }\n+   --> $DIR/for_loop.rs:180:5\n+    |\n+180 | /     for i in (5+2)..(3-1) {\n+181 | |         println!(\"{}\", i);\n+182 | |     }\n     | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in ((3-1)..(5+2)).rev() {\n \n error: this range is empty so this for loop will never run\n-   --> $DIR/for_loop.rs:266:5\n+   --> $DIR/for_loop.rs:184:5\n     |\n-266 | /     for i in (5+2)..(8-1) {\n-267 | |         println!(\"{}\", i);\n-268 | |     }\n+184 | /     for i in (5+2)..(8-1) {\n+185 | |         println!(\"{}\", i);\n+186 | |     }\n     | |_____^\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:289:15\n+   --> $DIR/for_loop.rs:207:15\n     |\n-289 |     for _v in vec.iter() { }\n+207 |     for _v in vec.iter() { }\n     |               ^^^^^^^^^^ help: to write this more concisely, try `&vec`\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:29\n+   --> $DIR/for_loop.rs:75:29\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                             ^^^^^^^^^^^^^^^^^^\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:294:15\n+   --> $DIR/for_loop.rs:209:15\n     |\n-294 |     for _v in vec.iter_mut() { }\n+209 |     for _v in vec.iter_mut() { }\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&mut vec`\n \n error: it is more idiomatic to loop over containers instead of using explicit iteration methods`\n-   --> $DIR/for_loop.rs:300:15\n+   --> $DIR/for_loop.rs:212:15\n     |\n-300 |     for _v in out_vec.into_iter() { }\n+212 |     for _v in out_vec.into_iter() { }\n     |               ^^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `out_vec`\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:49\n+   --> $DIR/for_loop.rs:75:49\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:306:15\n+   --> $DIR/for_loop.rs:215:15\n     |\n-306 |     for _v in array.into_iter() {}\n+215 |     for _v in array.into_iter() {}\n     |               ^^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&array`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:311:15\n+   --> $DIR/for_loop.rs:220:15\n     |\n-311 |     for _v in [1, 2, 3].iter() { }\n+220 |     for _v in [1, 2, 3].iter() { }\n     |               ^^^^^^^^^^^^^^^^ help: to write this more concisely, try `&[1, 2, 3]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:318:15\n+   --> $DIR/for_loop.rs:224:15\n     |\n-318 |     for _v in [0; 32].iter() {}\n+224 |     for _v in [0; 32].iter() {}\n     |               ^^^^^^^^^^^^^^ help: to write this more concisely, try `&[0; 32]`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:326:15\n+   --> $DIR/for_loop.rs:229:15\n     |\n-326 |     for _v in ll.iter() { }\n+229 |     for _v in ll.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&ll`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:332:15\n+   --> $DIR/for_loop.rs:232:15\n     |\n-332 |     for _v in vd.iter() { }\n+232 |     for _v in vd.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&vd`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:338:15\n+   --> $DIR/for_loop.rs:235:15\n     |\n-338 |     for _v in bh.iter() { }\n+235 |     for _v in bh.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bh`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:344:15\n+   --> $DIR/for_loop.rs:238:15\n     |\n-344 |     for _v in hm.iter() { }\n+238 |     for _v in hm.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&hm`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:350:15\n+   --> $DIR/for_loop.rs:241:15\n     |\n-350 |     for _v in bt.iter() { }\n+241 |     for _v in bt.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bt`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:356:15\n+   --> $DIR/for_loop.rs:244:15\n     |\n-356 |     for _v in hs.iter() { }\n+244 |     for _v in hs.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&hs`\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n-   --> $DIR/for_loop.rs:362:15\n+   --> $DIR/for_loop.rs:247:15\n     |\n-362 |     for _v in bs.iter() { }\n+247 |     for _v in bs.iter() { }\n     |               ^^^^^^^^^ help: to write this more concisely, try `&bs`\n \n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n-   --> $DIR/for_loop.rs:368:5\n+   --> $DIR/for_loop.rs:249:5\n     |\n-368 |     for _v in vec.iter().next() { }\n+249 |     for _v in vec.iter().next() { }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:74\n+   --> $DIR/for_loop.rs:75:74\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                                          ^^^^^^^^^^^^^^\n \n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-   --> $DIR/for_loop.rs:375:5\n+   --> $DIR/for_loop.rs:256:5\n     |\n-375 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n+256 |     vec.iter().map(|x| out.push(x)).collect::<Vec<_>>();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:91:8\n+   --> $DIR/for_loop.rs:76:8\n     |\n-91  | #[deny(unused_collect)]\n+76  | #[deny(unused_collect)]\n     |        ^^^^^^^^^^^^^^\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:380:5\n+   --> $DIR/for_loop.rs:261:5\n     |\n-380 |     for _v in &vec { _index += 1 }\n+261 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:110\n+   --> $DIR/for_loop.rs:75:110\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                                                                              ^^^^^^^^^^^^^^^^^^^^^\n \n error: the variable `_index` is used as a loop counter. Consider using `for (_index, item) in &vec.enumerate()` or similar iterators\n-   --> $DIR/for_loop.rs:384:5\n+   --> $DIR/for_loop.rs:265:5\n     |\n-384 |     for _v in &vec { _index += 1 }\n+265 |     for _v in &vec { _index += 1 }\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:444:5\n-    |\n-444 | /     for (_, v) in &m {\n-445 | |\n-446 | |\n-447 | |\n-448 | |\n-449 | |         let _v = v;\n-450 | |     }\n+   --> $DIR/for_loop.rs:325:5\n+    |\n+325 | /     for (_, v) in &m {\n+326 | |         let _v = v;\n+327 | |     }\n     | |_____^\n     |\n note: lint level defined here\n-   --> $DIR/for_loop.rs:90:133\n+   --> $DIR/for_loop.rs:75:133\n     |\n-90  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n+75  | #[deny(needless_range_loop, explicit_iter_loop, explicit_into_iter_loop, iter_next_loop, reverse_range_loop, explicit_counter_loop, for_kv_map)]\n     |                                                                                                                                     ^^^^^^^^^^\n help: use the corresponding method\n     |     for v in m.values() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:453:5\n-    |\n-453 | /     for (_, v) in &*m {\n-454 | |\n-455 | |\n-456 | |\n-...   |\n-460 | |         // `in *m.values()` as we used to\n-461 | |     }\n+   --> $DIR/for_loop.rs:330:5\n+    |\n+330 | /     for (_, v) in &*m {\n+331 | |         let _v = v;\n+332 | |         // Here the `*` is not actually necesarry, but the test tests that we don't suggest\n+333 | |         // `in *m.values()` as we used to\n+334 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:464:5\n-    |\n-464 | /     for (_, v) in &mut m {\n-465 | |\n-466 | |\n-467 | |\n-468 | |\n-469 | |         let _v = v;\n-470 | |     }\n+   --> $DIR/for_loop.rs:337:5\n+    |\n+337 | /     for (_, v) in &mut m {\n+338 | |         let _v = v;\n+339 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in m.values_mut() {\n \n error: you seem to want to iterate on a map's values\n-   --> $DIR/for_loop.rs:473:5\n-    |\n-473 | /     for (_, v) in &mut *m {\n-474 | |\n-475 | |\n-476 | |\n-477 | |\n-478 | |         let _v = v;\n-479 | |     }\n+   --> $DIR/for_loop.rs:342:5\n+    |\n+342 | /     for (_, v) in &mut *m {\n+343 | |         let _v = v;\n+344 | |     }\n     | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values_mut() {\n \n error: you seem to want to iterate on a map's keys\n-   --> $DIR/for_loop.rs:483:5\n-    |\n-483 | /     for (k, _value) in rm {\n-484 | |\n-485 | |\n-486 | |\n-487 | |\n-488 | |         let _k = k;\n-489 | |     }\n+   --> $DIR/for_loop.rs:348:5\n+    |\n+348 | /     for (k, _value) in rm {\n+349 | |         let _k = k;\n+350 | |     }\n     | |_____^\n     |\n help: use the corresponding method"}, {"sha": "822e57d4541f578b4c60b5ee16bda54c9117f66b", "filename": "tests/ui/formatting.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -13,17 +13,13 @@ fn main() {\n     // weird `else if` formatting:\n     if foo() {\n     } if foo() {\n-\n-\n     }\n \n     let _ = { // if as the last expression\n         let _ = 0;\n \n         if foo() {\n         } if foo() {\n-\n-\n         }\n         else {\n         }\n@@ -32,8 +28,6 @@ fn main() {\n     let _ = { // if in the middle of a block\n         if foo() {\n         } if foo() {\n-\n-\n         }\n         else {\n         }\n@@ -43,15 +37,11 @@ fn main() {\n \n     if foo() {\n     } else\n-\n-\n     if foo() { // the span of the above error should continue here\n     }\n \n     if foo() {\n     }\n-\n-\n     else\n     if foo() { // the span of the above error should continue here\n     }\n@@ -73,25 +63,17 @@ fn main() {\n \n     if foo() {\n     }\n-\n     else if\n-\n     foo() {}\n \n     // weird op_eq formatting:\n     let mut a = 42;\n     a =- 35;\n-\n-\n     a =* &191;\n \n-\n-\n     let mut b = true;\n     b =! false;\n \n-\n-\n     // those are ok:\n     a = -35;\n     a = *&191;\n@@ -100,14 +82,10 @@ fn main() {\n     // possible missing comma in an array\n     let _ = &[\n         -1, -2, -3 // <= no comma here\n-\n-\n         -4, -5, -6\n     ];\n     let _ = &[\n         -1, -2, -3 // <= no comma here\n-\n-\n         *4, -5, -6\n     ];\n "}, {"sha": "d69c4dae73057735f264f2bf68ff3034192fd867", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 35, "deletions": 39, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -13,54 +13,50 @@ note: lint level defined here\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:24:10\n+  --> $DIR/formatting.rs:22:10\n    |\n-24 |         } if foo() {\n+22 |         } if foo() {\n    |          ^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this looks like an `else if` but the `else` is missing\n-  --> $DIR/formatting.rs:34:10\n+  --> $DIR/formatting.rs:30:10\n    |\n-34 |         } if foo() {\n+30 |         } if foo() {\n    |          ^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, add the missing `else` or add a new line before the second `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:45:6\n+  --> $DIR/formatting.rs:39:6\n    |\n-45 |       } else\n+39 |       } else\n    |  ______^\n-46 | |\n-47 | |\n-48 | |     if foo() { // the span of the above error should continue here\n+40 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this is an `else if` but the formatting might hide it\n-  --> $DIR/formatting.rs:52:6\n+  --> $DIR/formatting.rs:44:6\n    |\n-52 |       }\n+44 |       }\n    |  ______^\n-53 | |\n-54 | |\n-55 | |     else\n-56 | |     if foo() { // the span of the above error should continue here\n+45 | |     else\n+46 | |     if foo() { // the span of the above error should continue here\n    | |____^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n \n error: this looks like you are trying to use `.. -= ..`, but you really are doing `.. = (- ..)`\n-  --> $DIR/formatting.rs:83:6\n+  --> $DIR/formatting.rs:71:6\n    |\n-83 |     a =- 35;\n+71 |     a =- 35;\n    |      ^^^^\n    |\n    = note: #[deny(suspicious_assignment_formatting)] implied by #[deny(clippy)]\n@@ -72,45 +68,45 @@ note: lint level defined here\n    = note: to remove this lint, use either `-=` or `= -`\n \n error: this looks like you are trying to use `.. *= ..`, but you really are doing `.. = (* ..)`\n-  --> $DIR/formatting.rs:86:6\n+  --> $DIR/formatting.rs:72:6\n    |\n-86 |     a =* &191;\n+72 |     a =* &191;\n    |      ^^^^\n    |\n    = note: #[deny(suspicious_assignment_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, use either `*=` or `= *`\n \n error: this looks like you are trying to use `.. != ..`, but you really are doing `.. = (! ..)`\n-  --> $DIR/formatting.rs:91:6\n+  --> $DIR/formatting.rs:75:6\n    |\n-91 |     b =! false;\n+75 |     b =! false;\n    |      ^^^^\n    |\n    = note: #[deny(suspicious_assignment_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, use either `!=` or `= !`\n \n error: possibly missing a comma here\n-   --> $DIR/formatting.rs:102:19\n-    |\n-102 |         -1, -2, -3 // <= no comma here\n-    |                   ^\n-    |\n-    = note: #[deny(possible_missing_comma)] implied by #[deny(clippy)]\n+  --> $DIR/formatting.rs:84:19\n+   |\n+84 |         -1, -2, -3 // <= no comma here\n+   |                   ^\n+   |\n+   = note: #[deny(possible_missing_comma)] implied by #[deny(clippy)]\n note: lint level defined here\n-   --> $DIR/formatting.rs:4:9\n-    |\n-4   | #![deny(clippy)]\n-    |         ^^^^^^\n-    = note: to remove this lint, add a comma or write the expr in a single line\n+  --> $DIR/formatting.rs:4:9\n+   |\n+4  | #![deny(clippy)]\n+   |         ^^^^^^\n+   = note: to remove this lint, add a comma or write the expr in a single line\n \n error: possibly missing a comma here\n-   --> $DIR/formatting.rs:108:19\n-    |\n-108 |         -1, -2, -3 // <= no comma here\n-    |                   ^\n-    |\n-    = note: #[deny(possible_missing_comma)] implied by #[deny(clippy)]\n-    = note: to remove this lint, add a comma or write the expr in a single line\n+  --> $DIR/formatting.rs:88:19\n+   |\n+88 |         -1, -2, -3 // <= no comma here\n+   |                   ^\n+   |\n+   = note: #[deny(possible_missing_comma)] implied by #[deny(clippy)]\n+   = note: to remove this lint, add a comma or write the expr in a single line\n \n error: aborting due to 10 previous errors\n "}, {"sha": "7f2330b60cc27d14cf9b5a56d96c62b45b8fe396", "filename": "tests/ui/functions.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -9,7 +9,6 @@\n fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}\n \n fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n-\n }\n \n // don't lint extern fns\n@@ -19,7 +18,6 @@ pub trait Foo {\n     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);\n     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n \n-\n     fn ptr(p: *const u8);\n }\n \n@@ -28,7 +26,6 @@ pub struct Bar;\n impl Bar {\n     fn good_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool) {}\n     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n-\n }\n \n // ok, we don\u2019t want to warn implementations\n@@ -38,11 +35,8 @@ impl Foo for Bar {\n \n     fn ptr(p: *const u8) {\n         println!(\"{}\", unsafe { *p });\n-\n         println!(\"{:?}\", unsafe { p.as_ref() });\n-\n         unsafe { std::ptr::read(p) };\n-\n     }\n }\n \n@@ -54,11 +48,8 @@ fn private(p: *const u8) {\n \n pub fn public(p: *const u8) {\n     println!(\"{}\", unsafe { *p });\n-\n     println!(\"{:?}\", unsafe { p.as_ref() });\n-\n     unsafe { std::ptr::read(p) };\n-\n }\n \n impl Bar {\n@@ -68,11 +59,8 @@ impl Bar {\n \n     pub fn public(self, p: *const u8) {\n         println!(\"{}\", unsafe { *p });\n-\n         println!(\"{:?}\", unsafe { p.as_ref() });\n-\n         unsafe { std::ptr::read(p) };\n-\n     }\n \n     pub fn public_ok(self, p: *const u8) {"}, {"sha": "0abf8f2f0a897a2d0951193c0ae6f5bedc8c7b1a", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,8 +2,7 @@ error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:11:1\n    |\n 11 | / fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n-12 | |\n-13 | | }\n+12 | | }\n    | |_^\n    |\n    = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]\n@@ -14,25 +13,25 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: this function has too many arguments (8/7)\n-  --> $DIR/functions.rs:20:5\n+  --> $DIR/functions.rs:19:5\n    |\n-20 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n+19 |     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]\n \n error: this function has too many arguments (8/7)\n-  --> $DIR/functions.rs:30:5\n+  --> $DIR/functions.rs:28:5\n    |\n-30 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+28 |     fn bad_method(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:40:34\n+  --> $DIR/functions.rs:37:34\n    |\n-40 |         println!(\"{}\", unsafe { *p });\n+37 |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n@@ -43,65 +42,65 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:42:35\n+  --> $DIR/functions.rs:38:35\n    |\n-42 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+38 |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:44:33\n+  --> $DIR/functions.rs:39:33\n    |\n-44 |         unsafe { std::ptr::read(p) };\n+39 |         unsafe { std::ptr::read(p) };\n    |                                 ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:56:30\n+  --> $DIR/functions.rs:50:30\n    |\n-56 |     println!(\"{}\", unsafe { *p });\n+50 |     println!(\"{}\", unsafe { *p });\n    |                              ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:58:31\n+  --> $DIR/functions.rs:51:31\n    |\n-58 |     println!(\"{:?}\", unsafe { p.as_ref() });\n+51 |     println!(\"{:?}\", unsafe { p.as_ref() });\n    |                               ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:60:29\n+  --> $DIR/functions.rs:52:29\n    |\n-60 |     unsafe { std::ptr::read(p) };\n+52 |     unsafe { std::ptr::read(p) };\n    |                             ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:70:34\n+  --> $DIR/functions.rs:61:34\n    |\n-70 |         println!(\"{}\", unsafe { *p });\n+61 |         println!(\"{}\", unsafe { *p });\n    |                                  ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:72:35\n+  --> $DIR/functions.rs:62:35\n    |\n-72 |         println!(\"{:?}\", unsafe { p.as_ref() });\n+62 |         println!(\"{:?}\", unsafe { p.as_ref() });\n    |                                   ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]\n \n error: this public function dereferences a raw pointer but is not marked `unsafe`\n-  --> $DIR/functions.rs:74:33\n+  --> $DIR/functions.rs:63:33\n    |\n-74 |         unsafe { std::ptr::read(p) };\n+63 |         unsafe { std::ptr::read(p) };\n    |                                 ^\n    |\n    = note: #[deny(not_unsafe_ptr_arg_deref)] implied by #[deny(clippy)]"}, {"sha": "8ba2e1c5ff7cd7a0570441942ad00bc49f868c4c", "filename": "tests/ui/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -8,46 +8,28 @@\n fn main() {\n     if let Ok(_) = Ok::<i32, i32>(42) {}\n \n-\n-\n-\n     if let Err(_) = Err::<i32, i32>(42) {\n-\n-\n-\n     }\n \n     if let None = None::<()> {\n-\n-\n-\n     }\n \n     if let Some(_) = Some(42) {\n-\n-\n-\n     }\n \n     if Ok::<i32, i32>(42).is_ok() {\n-\n     }\n \n     if Err::<i32, i32>(42).is_err() {\n-\n     }\n \n     if None::<i32>.is_none() {\n-\n     }\n \n     if Some(42).is_some() {\n-\n     }\n \n     if let Ok(x) = Ok::<i32,i32>(42) {\n         println!(\"{}\", x);\n     }\n }\n-\n-"}, {"sha": "a5dddf05ec42318165db0fc2dc7c30454189d3e9", "filename": "tests/ui/if_let_redundant_pattern_matching.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_let_redundant_pattern_matching.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -12,25 +12,25 @@ note: lint level defined here\n   |         ^^^^^^\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/if_let_redundant_pattern_matching.rs:14:12\n+  --> $DIR/if_let_redundant_pattern_matching.rs:11:12\n    |\n-14 |     if let Err(_) = Err::<i32, i32>(42) {\n+11 |     if let Err(_) = Err::<i32, i32>(42) {\n    |     -------^^^^^^---------------------- help: try this `if Err::<i32, i32>(42).is_err()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/if_let_redundant_pattern_matching.rs:20:12\n+  --> $DIR/if_let_redundant_pattern_matching.rs:14:12\n    |\n-20 |     if let None = None::<()> {\n+14 |     if let None = None::<()> {\n    |     -------^^^^------------- help: try this `if None::<()>.is_none()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/if_let_redundant_pattern_matching.rs:26:12\n+  --> $DIR/if_let_redundant_pattern_matching.rs:17:12\n    |\n-26 |     if let Some(_) = Some(42) {\n+17 |     if let Some(_) = Some(42) {\n    |     -------^^^^^^^----------- help: try this `if Some(42).is_some()`\n    |\n    = note: #[deny(if_let_redundant_pattern_matching)] implied by #[deny(clippy)]"}, {"sha": "4940ef4684fd20ccc8e8512a18bf73a13143785f", "filename": "tests/ui/len_zero.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -128,16 +128,10 @@ impl HasWrongIsEmpty {\n fn main() {\n     let x = [1, 2];\n     if x.len() == 0 {\n-\n-\n-\n         println!(\"This should not happen!\");\n     }\n \n     if \"\".len() == 0 {\n-\n-\n-\n     }\n \n     let y = One;\n@@ -152,30 +146,18 @@ fn main() {\n \n     let has_is_empty = HasIsEmpty;\n     if has_is_empty.len() == 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     if has_is_empty.len() != 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     if has_is_empty.len() > 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     assert!(!has_is_empty.is_empty());\n \n     let with_is_empty: &WithIsEmpty = &Wither;\n     if with_is_empty.len() == 0 {\n-\n-\n-\n         println!(\"Or this!\");\n     }\n     assert!(!with_is_empty.is_empty());"}, {"sha": "891f1741aa749438519aeb3aa5aeff41caee72cd", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -59,39 +59,39 @@ note: lint level defined here\n     |                               ^^^^^^^^\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:137:8\n+   --> $DIR/len_zero.rs:134:8\n     |\n-137 |     if \"\".len() == 0 {\n+134 |     if \"\".len() == 0 {\n     |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:154:8\n+   --> $DIR/len_zero.rs:148:8\n     |\n-154 |     if has_is_empty.len() == 0 {\n+148 |     if has_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:160:8\n+   --> $DIR/len_zero.rs:151:8\n     |\n-160 |     if has_is_empty.len() != 0 {\n+151 |     if has_is_empty.len() != 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:166:8\n+   --> $DIR/len_zero.rs:154:8\n     |\n-166 |     if has_is_empty.len() > 0 {\n+154 |     if has_is_empty.len() > 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:175:8\n+   --> $DIR/len_zero.rs:160:8\n     |\n-175 |     if with_is_empty.len() == 0 {\n+160 |     if with_is_empty.len() == 0 {\n     |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n-   --> $DIR/len_zero.rs:190:8\n+   --> $DIR/len_zero.rs:172:8\n     |\n-190 |     if b.len() != 0 {\n+172 |     if b.len() != 0 {\n     |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n \n error: aborting due to 11 previous errors"}, {"sha": "2e9edea006e5521fc77a55f40c3ac32dfbfead7a", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -55,17 +55,11 @@ fn main() {\n     issue985_alt();\n \n     let mut foo = 0;\n-\n-\n-\n     if f() {\n         foo = 42;\n     }\n \n     let mut bar = 0;\n-\n-\n-\n     if f() {\n         f();\n         bar = 42;\n@@ -75,10 +69,6 @@ fn main() {\n     }\n \n     let quz;\n-\n-\n-\n-\n     if f() {\n         quz = 42;\n     } else {\n@@ -87,7 +77,6 @@ fn main() {\n \n     // `toto` is used several times\n     let mut toto;\n-\n     if f() {\n         toto = 42;\n     } else {\n@@ -109,9 +98,6 @@ fn main() {\n \n     // baz needs to be mut\n     let mut baz = 0;\n-\n-\n-\n     if f() {\n         baz = 42;\n     }"}, {"sha": "ea3c820dd8cb79001dcb8de3e7eba22396c70a08", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 22, "deletions": 29, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,12 +2,9 @@ error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:57:5\n    |\n 57 | /     let mut foo = 0;\n-58 | |\n-59 | |\n-60 | |\n-61 | |     if f() {\n-62 | |         foo = 42;\n-63 | |     }\n+58 | |     if f() {\n+59 | |         foo = 42;\n+60 | |     }\n    | |_____^ help: it is more idiomatic to write `let <mut> foo = if f() { 42 } else { 0 };`\n    |\n note: lint level defined here\n@@ -18,41 +15,37 @@ note: lint level defined here\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:65:5\n+  --> $DIR/let_if_seq.rs:62:5\n    |\n-65 | /     let mut bar = 0;\n-66 | |\n-67 | |\n-68 | |\n+62 | /     let mut bar = 0;\n+63 | |     if f() {\n+64 | |         f();\n+65 | |         bar = 42;\n ...  |\n-74 | |         f();\n-75 | |     }\n+68 | |         f();\n+69 | |     }\n    | |_____^ help: it is more idiomatic to write `let <mut> bar = if f() { ..; 42 } else { ..; 0 };`\n    |\n    = note: you might not need `mut` at all\n \n error: `if _ { .. } else { .. }` is an expression\n-  --> $DIR/let_if_seq.rs:77:5\n+  --> $DIR/let_if_seq.rs:71:5\n    |\n-77 | /     let quz;\n-78 | |\n-79 | |\n-80 | |\n-...  |\n-85 | |         quz = 0;\n-86 | |     }\n+71 | /     let quz;\n+72 | |     if f() {\n+73 | |         quz = 42;\n+74 | |     } else {\n+75 | |         quz = 0;\n+76 | |     }\n    | |_____^ help: it is more idiomatic to write `let quz = if f() { 42 } else { 0 };`\n \n error: `if _ { .. } else { .. }` is an expression\n-   --> $DIR/let_if_seq.rs:111:5\n+   --> $DIR/let_if_seq.rs:100:5\n     |\n-111 | /     let mut baz = 0;\n-112 | |\n-113 | |\n-114 | |\n-115 | |     if f() {\n-116 | |         baz = 42;\n-117 | |     }\n+100 | /     let mut baz = 0;\n+101 | |     if f() {\n+102 | |         baz = 42;\n+103 | |     }\n     | |_____^ help: it is more idiomatic to write `let <mut> baz = if f() { 42 } else { 0 };`\n     |\n     = note: you might not need `mut` at all"}, {"sha": "e10fd590e6c14fdb28a162867535e2d5ec82590a", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,10 +6,8 @@\n \n fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n \n-\n fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n \n-\n fn same_lifetime_on_input<'a>(_x: &'a u8, _y: &'a u8) { } // no error, same lifetime on two params\n \n fn only_static_on_input(_x: &u8, _y: &u8, _z: &'static u8) { } // no error, static involved\n@@ -18,7 +16,6 @@ fn mut_and_static_input(_x: &mut u8, _y: &'static str) { }\n \n fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n \n-\n fn multiple_in_and_out_1<'a>(x: &'a u8, _y: &'a u8) -> &'a u8 { x } // no error, multiple input refs\n \n fn multiple_in_and_out_2<'a, 'b>(x: &'a u8, _y: &'b u8) -> &'a u8 { x } // no error, multiple input refs\n@@ -31,18 +28,15 @@ fn deep_reference_2<'a>(x: Result<&'a u8, &'a u8>) -> &'a u8 { x.unwrap() } // n\n \n fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n \n-\n // where clause, but without lifetimes\n fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n \n-\n type Ref<'r> = &'r u8;\n \n fn lifetime_param_1<'a>(_x: Ref<'a>, _y: &'a u8) { } // no error, same lifetime on two params\n \n fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n \n-\n fn lifetime_param_3<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) { } // no error, bounded lifetime\n \n fn lifetime_param_4<'a, 'b>(_x: Ref<'a>, _y: &'b u8) where 'b: 'a { } // no error, bounded lifetime\n@@ -66,12 +60,10 @@ struct X {\n impl X {\n     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n \n-\n     fn self_and_in_out<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 { &self.x } // no error, multiple input refs\n \n     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n \n-\n     fn self_and_same_in<'s>(&'s self, _x: &'s u8) { } // no error, same lifetimes on two params\n }\n "}, {"sha": "f80335af5634fd78331a67f4d13bde1f27a71b12", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,83 +11,83 @@ note: lint level defined here\n   |         ^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:10:1\n-   |\n-10 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+ --> $DIR/lifetimes.rs:9:1\n+  |\n+9 | fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:19:1\n+  --> $DIR/lifetimes.rs:17:1\n    |\n-19 | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n+17 | fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:32:1\n+  --> $DIR/lifetimes.rs:29:1\n    |\n-32 | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n+29 | fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:36:1\n+  --> $DIR/lifetimes.rs:32:1\n    |\n-36 | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n+32 | fn where_clause_without_lt<'a, T>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> where T: Copy { Ok(x) }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:43:1\n+  --> $DIR/lifetimes.rs:38:1\n    |\n-43 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n+38 | fn lifetime_param_2<'a, 'b>(_x: Ref<'a>, _y: &'b u8) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:58:1\n+  --> $DIR/lifetimes.rs:52:1\n    |\n-58 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-59 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n-60 | | { unreachable!() }\n+52 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n+53 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n+54 | | { unreachable!() }\n    | |__________________^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:67:5\n+  --> $DIR/lifetimes.rs:61:5\n    |\n-67 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+61 |     fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:72:5\n+  --> $DIR/lifetimes.rs:65:5\n    |\n-72 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+65 |     fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-  --> $DIR/lifetimes.rs:89:1\n+  --> $DIR/lifetimes.rs:81:1\n    |\n-89 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n+81 | fn struct_with_lt<'a>(_foo: Foo<'a>) -> &'a str { unimplemented!() }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:109:1\n+   --> $DIR/lifetimes.rs:101:1\n     |\n-109 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n+101 | fn trait_obj_elided2<'a>(_arg: &'a Drop) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:113:1\n+   --> $DIR/lifetimes.rs:105:1\n     |\n-113 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n+105 | fn alias_with_lt<'a>(_foo: FooAlias<'a>) -> &'a str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:124:1\n+   --> $DIR/lifetimes.rs:116:1\n     |\n-124 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n+116 | fn named_input_elided_output<'a>(_arg: &'a str) -> &str { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: explicit lifetimes given in parameter types where they could be elided\n-   --> $DIR/lifetimes.rs:128:1\n+   --> $DIR/lifetimes.rs:120:1\n     |\n-128 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n+120 | fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}, {"sha": "3dbd672fc5a8d1257d203afe6103fc3089847073", "filename": "tests/ui/lint_pass.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Flint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_pass.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,7 +11,6 @@ use rustc::lint::{LintPass, LintArray};\n declare_lint! { GOOD_LINT, Warn, \"good lint\" }\n declare_lint! { MISSING_LINT, Warn, \"missing lint\" }\n \n-\n pub struct Pass;\n \n impl LintPass for Pass {\n@@ -23,5 +22,3 @@ impl LintPass for Pass {\n fn main() {\n     let _ = MISSING_LINT;\n }\n-\n-"}, {"sha": "527a96b755e06de722eaebbe92a94cf8b3a20197", "filename": "tests/ui/literals.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fliterals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fliterals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fliterals.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -28,11 +28,6 @@ fn main() {\n     let ok10 = 0_i64;\n     let fail8 = 0123;\n \n-\n-\n-\n-\n-\n     let ok11 = 0o123;\n     let ok12 = 0b101010;\n }"}, {"sha": "e45b0c97f2f960c8f7aa7c3661e7bf6ab958d7fa", "filename": "tests/ui/matches.rs", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -24,9 +24,6 @@ fn dummy() {\n \n fn unwrap_addr() -> Option<&'static ExprNode> {\n     match ExprNode::Butterflies {\n-\n-\n-\n         ExprNode::ExprAddrOf => Some(&NODE),\n         _ => { let x = 5; None },\n     }\n@@ -36,18 +33,12 @@ fn single_match(){\n     let x = Some(1u8);\n \n     match x {\n-\n-\n-\n         Some(y) => { println!(\"{:?}\", y); }\n         _ => ()\n     };\n \n     let z = (1u8,1u8);\n     match z {\n-\n-\n-\n         (2...3, 7...9) => dummy(),\n         _ => {}\n     };\n@@ -70,27 +61,18 @@ fn single_match_know_enum() {\n     let y : Result<_, i8> = Ok(1i8);\n \n     match x {\n-\n-\n-\n         Some(y) => dummy(),\n         None => ()\n     };\n \n     match y {\n-\n-\n-\n         Ok(y) => dummy(),\n         Err(..) => ()\n     };\n \n     let c = Cow::Borrowed(\"\");\n \n     match c {\n-\n-\n-\n         Cow::Borrowed(..) => dummy(),\n         Cow::Owned(..) => (),\n     };\n@@ -112,51 +94,32 @@ fn match_bool() {\n     let test: bool = true;\n \n     match test {\n-\n-\n-\n         true => 0,\n         false => 42,\n     };\n \n     let option = 1;\n     match option == 1 {\n-\n-\n-\n         true => 1,\n         false => 0,\n     };\n \n     match test {\n-\n-\n-\n         true => (),\n         false => { println!(\"Noooo!\"); }\n     };\n \n     match test {\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         _ => (),\n     };\n \n     match test && test {\n-\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         _ => (),\n     };\n \n     match test {\n-\n-\n-\n         false => { println!(\"Noooo!\"); }\n         true => { println!(\"Yes!\"); }\n     };\n@@ -173,9 +136,6 @@ fn ref_pats() {\n     {\n         let v = &Some(0);\n         match v {\n-\n-\n-\n             &Some(v) => println!(\"{:?}\", v),\n             &None => println!(\"none\"),\n         }\n@@ -186,18 +146,12 @@ fn ref_pats() {\n     }\n     let tup =& (1, 2);\n     match tup {\n-\n-\n-\n         &(v, 1) => println!(\"{}\", v),\n         _ => println!(\"none\"),\n     }\n     // special case: using & both in expr and pats\n     let w = Some(0);\n     match &w {\n-\n-\n-\n         &Some(v) => println!(\"{:?}\", v),\n         &None => println!(\"none\"),\n     }\n@@ -209,17 +163,11 @@ fn ref_pats() {\n \n     let a = &Some(0);\n     if let &None = a {\n-\n-\n-\n         println!(\"none\");\n     }\n \n     let b = Some(0);\n     if let &None = &b {\n-\n-\n-\n         println!(\"none\");\n     }\n }"}, {"sha": "a1013aa50118f5522d4c7952872c3587edc57a71", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 127, "deletions": 178, "changes": 305, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,12 +2,9 @@ error: you seem to be trying to use match for destructuring a single pattern. Co\n   --> $DIR/matches.rs:26:5\n    |\n 26 | /     match ExprNode::Butterflies {\n-27 | |\n-28 | |\n-29 | |\n-30 | |         ExprNode::ExprAddrOf => Some(&NODE),\n-31 | |         _ => { let x = 5; None },\n-32 | |     }\n+27 | |         ExprNode::ExprAddrOf => Some(&NODE),\n+28 | |         _ => { let x = 5; None },\n+29 | |     }\n    | |_____^ help: try this `if let ExprNode::ExprAddrOf = ExprNode::Butterflies { Some(&NODE) } else { let x = 5; None }`\n    |\n note: lint level defined here\n@@ -17,15 +14,12 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:38:5\n+  --> $DIR/matches.rs:35:5\n    |\n-38 | /     match x {\n-39 | |\n-40 | |\n-41 | |\n-42 | |         Some(y) => { println!(\"{:?}\", y); }\n-43 | |         _ => ()\n-44 | |     };\n+35 | /     match x {\n+36 | |         Some(y) => { println!(\"{:?}\", y); }\n+37 | |         _ => ()\n+38 | |     };\n    | |_____^ help: try this `if let Some(y) = x { println!(\"{:?}\", y); }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n@@ -36,140 +30,113 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:47:5\n+  --> $DIR/matches.rs:41:5\n    |\n-47 | /     match z {\n-48 | |\n-49 | |\n-50 | |\n-51 | |         (2...3, 7...9) => dummy(),\n-52 | |         _ => {}\n-53 | |     };\n+41 | /     match z {\n+42 | |         (2...3, 7...9) => dummy(),\n+43 | |         _ => {}\n+44 | |     };\n    | |_____^ help: try this `if let (2...3, 7...9) = z { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:72:5\n+  --> $DIR/matches.rs:63:5\n    |\n-72 | /     match x {\n-73 | |\n-74 | |\n-75 | |\n-76 | |         Some(y) => dummy(),\n-77 | |         None => ()\n-78 | |     };\n+63 | /     match x {\n+64 | |         Some(y) => dummy(),\n+65 | |         None => ()\n+66 | |     };\n    | |_____^ help: try this `if let Some(y) = x { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:80:5\n+  --> $DIR/matches.rs:68:5\n    |\n-80 | /     match y {\n-81 | |\n-82 | |\n-83 | |\n-84 | |         Ok(y) => dummy(),\n-85 | |         Err(..) => ()\n-86 | |     };\n+68 | /     match y {\n+69 | |         Ok(y) => dummy(),\n+70 | |         Err(..) => ()\n+71 | |     };\n    | |_____^ help: try this `if let Ok(y) = y { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n-  --> $DIR/matches.rs:90:5\n+  --> $DIR/matches.rs:75:5\n    |\n-90 | /     match c {\n-91 | |\n-92 | |\n-93 | |\n-94 | |         Cow::Borrowed(..) => dummy(),\n-95 | |         Cow::Owned(..) => (),\n-96 | |     };\n+75 | /     match c {\n+76 | |         Cow::Borrowed(..) => dummy(),\n+77 | |         Cow::Owned(..) => (),\n+78 | |     };\n    | |_____^ help: try this `if let Cow::Borrowed(..) = c { dummy() }`\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:114:5\n-    |\n-114 | /     match test {\n-115 | |\n-116 | |\n-117 | |\n-118 | |         true => 0,\n-119 | |         false => 42,\n-120 | |     };\n-    | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n-    |\n-    = note: #[deny(match_bool)] implied by #[deny(clippy)]\n+  --> $DIR/matches.rs:96:5\n+   |\n+96 | /     match test {\n+97 | |         true => 0,\n+98 | |         false => 42,\n+99 | |     };\n+   | |_____^ help: consider using an if/else expression `if test { 0 } else { 42 }`\n+   |\n+   = note: #[deny(match_bool)] implied by #[deny(clippy)]\n note: lint level defined here\n-   --> $DIR/matches.rs:5:9\n-    |\n-5   | #![deny(clippy)]\n-    |         ^^^^^^\n+  --> $DIR/matches.rs:5:9\n+   |\n+5  | #![deny(clippy)]\n+   |         ^^^^^^\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:123:5\n-    |\n-123 | /     match option == 1 {\n-124 | |\n-125 | |\n-126 | |\n-127 | |         true => 1,\n-128 | |         false => 0,\n-129 | |     };\n+   --> $DIR/matches.rs:102:5\n+    |\n+102 | /     match option == 1 {\n+103 | |         true => 1,\n+104 | |         false => 0,\n+105 | |     };\n     | |_____^ help: consider using an if/else expression `if option == 1 { 1 } else { 0 }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:131:5\n-    |\n-131 | /     match test {\n-132 | |\n-133 | |\n-134 | |\n-135 | |         true => (),\n-136 | |         false => { println!(\"Noooo!\"); }\n-137 | |     };\n+   --> $DIR/matches.rs:107:5\n+    |\n+107 | /     match test {\n+108 | |         true => (),\n+109 | |         false => { println!(\"Noooo!\"); }\n+110 | |     };\n     | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:139:5\n-    |\n-139 | /     match test {\n-140 | |\n-141 | |\n-142 | |\n-143 | |         false => { println!(\"Noooo!\"); }\n-144 | |         _ => (),\n-145 | |     };\n+   --> $DIR/matches.rs:112:5\n+    |\n+112 | /     match test {\n+113 | |         false => { println!(\"Noooo!\"); }\n+114 | |         _ => (),\n+115 | |     };\n     | |_____^ help: consider using an if/else expression `if !test { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:147:5\n-    |\n-147 | /     match test && test {\n-148 | |\n-149 | |\n-150 | |\n-...   |\n-153 | |         _ => (),\n-154 | |     };\n+   --> $DIR/matches.rs:117:5\n+    |\n+117 | /     match test && test {\n+118 | |         false => { println!(\"Noooo!\"); }\n+119 | |         _ => (),\n+120 | |     };\n     | |_____^ help: consider using an if/else expression `if !(test && test) { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: equal expressions as operands to `&&`\n-   --> $DIR/matches.rs:147:11\n+   --> $DIR/matches.rs:117:11\n     |\n-147 |     match test && test {\n+117 |     match test && test {\n     |           ^^^^^^^^^^^^\n     |\n     = note: #[deny(eq_op)] implied by #[deny(clippy)]\n@@ -180,29 +147,23 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: you seem to be trying to match on a boolean expression\n-   --> $DIR/matches.rs:156:5\n-    |\n-156 | /     match test {\n-157 | |\n-158 | |\n-159 | |\n-160 | |         false => { println!(\"Noooo!\"); }\n-161 | |         true => { println!(\"Yes!\"); }\n-162 | |     };\n+   --> $DIR/matches.rs:122:5\n+    |\n+122 | /     match test {\n+123 | |         false => { println!(\"Noooo!\"); }\n+124 | |         true => { println!(\"Yes!\"); }\n+125 | |     };\n     | |_____^ help: consider using an if/else expression `if test { println!(\"Yes!\"); } else { println!(\"Noooo!\"); }`\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:175:9\n-    |\n-175 | /         match v {\n-176 | |\n-177 | |\n-178 | |\n-179 | |             &Some(v) => println!(\"{:?}\", v),\n-180 | |             &None => println!(\"none\"),\n-181 | |         }\n+   --> $DIR/matches.rs:138:9\n+    |\n+138 | /         match v {\n+139 | |             &Some(v) => println!(\"{:?}\", v),\n+140 | |             &None => println!(\"none\"),\n+141 | |         }\n     | |_________^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n@@ -215,67 +176,55 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n     |         match *v { .. }\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:188:5\n-    |\n-188 | /     match tup {\n-189 | |\n-190 | |\n-191 | |\n-192 | |         &(v, 1) => println!(\"{}\", v),\n-193 | |         _ => println!(\"none\"),\n-194 | |     }\n+   --> $DIR/matches.rs:148:5\n+    |\n+148 | /     match tup {\n+149 | |         &(v, 1) => println!(\"{}\", v),\n+150 | |         _ => println!(\"none\"),\n+151 | |     }\n     | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |     match *tup { .. }\n \n error: you don't need to add `&` to both the expression and the patterns\n-   --> $DIR/matches.rs:197:5\n-    |\n-197 | /     match &w {\n-198 | |\n-199 | |\n-200 | |\n-201 | |         &Some(v) => println!(\"{:?}\", v),\n-202 | |         &None => println!(\"none\"),\n-203 | |     }\n+   --> $DIR/matches.rs:154:5\n+    |\n+154 | /     match &w {\n+155 | |         &Some(v) => println!(\"{:?}\", v),\n+156 | |         &None => println!(\"none\"),\n+157 | |     }\n     | |_____^ help: try `match w { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n \n error: you don't need to add `&` to all patterns\n-   --> $DIR/matches.rs:211:5\n-    |\n-211 | /     if let &None = a {\n-212 | |\n-213 | |\n-214 | |\n-215 | |         println!(\"none\");\n-216 | |     }\n+   --> $DIR/matches.rs:165:5\n+    |\n+165 | /     if let &None = a {\n+166 | |         println!(\"none\");\n+167 | |     }\n     | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |     if let .. = *a { .. }\n \n error: you don't need to add `&` to both the expression and the patterns\n-   --> $DIR/matches.rs:219:5\n-    |\n-219 | /     if let &None = &b {\n-220 | |\n-221 | |\n-222 | |\n-223 | |         println!(\"none\");\n-224 | |     }\n+   --> $DIR/matches.rs:170:5\n+    |\n+170 | /     if let &None = &b {\n+171 | |         println!(\"none\");\n+172 | |     }\n     | |_____^ help: try `if let .. = b { .. }`\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:231:9\n+   --> $DIR/matches.rs:179:9\n     |\n-231 |         0 ... 10 => println!(\"0 ... 10\"),\n+179 |         0 ... 10 => println!(\"0 ... 10\"),\n     |         ^^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n@@ -285,67 +234,67 @@ note: lint level defined here\n 5   | #![deny(clippy)]\n     |         ^^^^^^\n note: overlaps with this\n-   --> $DIR/matches.rs:232:9\n+   --> $DIR/matches.rs:180:9\n     |\n-232 |         0 ... 11 => println!(\"0 ... 11\"),\n+180 |         0 ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:237:9\n+   --> $DIR/matches.rs:185:9\n     |\n-237 |         0 ... 5 => println!(\"0 ... 5\"),\n+185 |         0 ... 5 => println!(\"0 ... 5\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:239:9\n+   --> $DIR/matches.rs:187:9\n     |\n-239 |         FOO ... 11 => println!(\"0 ... 11\"),\n+187 |         FOO ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^^^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:245:9\n+   --> $DIR/matches.rs:193:9\n     |\n-245 |         0 ... 5 => println!(\"0 ... 5\"),\n+193 |         0 ... 5 => println!(\"0 ... 5\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:244:9\n+   --> $DIR/matches.rs:192:9\n     |\n-244 |         2 => println!(\"2\"),\n+192 |         2 => println!(\"2\"),\n     |         ^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:251:9\n+   --> $DIR/matches.rs:199:9\n     |\n-251 |         0 ... 2 => println!(\"0 ... 2\"),\n+199 |         0 ... 2 => println!(\"0 ... 2\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:250:9\n+   --> $DIR/matches.rs:198:9\n     |\n-250 |         2 => println!(\"2\"),\n+198 |         2 => println!(\"2\"),\n     |         ^\n \n error: some ranges overlap\n-   --> $DIR/matches.rs:274:9\n+   --> $DIR/matches.rs:222:9\n     |\n-274 |         0 .. 11 => println!(\"0 .. 11\"),\n+222 |         0 .. 11 => println!(\"0 .. 11\"),\n     |         ^^^^^^^\n     |\n     = note: #[deny(match_overlapping_arm)] implied by #[deny(clippy)]\n note: overlaps with this\n-   --> $DIR/matches.rs:275:9\n+   --> $DIR/matches.rs:223:9\n     |\n-275 |         0 ... 11 => println!(\"0 ... 11\"),\n+223 |         0 ... 11 => println!(\"0 ... 11\"),\n     |         ^^^^^^^^\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:292:9\n+   --> $DIR/matches.rs:240:9\n     |\n-292 |         Err(_) => panic!(\"err\")\n+240 |         Err(_) => panic!(\"err\")\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]\n@@ -357,18 +306,18 @@ note: lint level defined here\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:298:9\n+   --> $DIR/matches.rs:246:9\n     |\n-298 |         Err(_) => {panic!()}\n+246 |         Err(_) => {panic!()}\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]\n     = note: to remove this warning, match each error seperately or use unreachable macro\n \n error: Err(_) will match all errors, maybe not a good idea\n-   --> $DIR/matches.rs:304:9\n+   --> $DIR/matches.rs:252:9\n     |\n-304 |         Err(_) => {panic!();}\n+252 |         Err(_) => {panic!();}\n     |         ^^^^^^\n     |\n     = note: #[deny(match_wild_err_arm)] implied by #[deny(clippy)]"}, {"sha": "82212414cf360af4bda249d7240169aa014bc2f9", "filename": "tests/ui/mem_forget.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -17,14 +17,11 @@ fn main() {\n     let six: Arc<i32> = Arc::new(6);\n     memstuff::forget(six);\n \n-\n     let seven: Rc<i32> = Rc::new(7);\n     std::mem::forget(seven);\n \n-\n     let eight: Vec<i32> = vec![8];\n     forgetSomething(eight);\n \n-\n     std::mem::forget(7);\n }"}, {"sha": "306032c49c3ed411e7cdd511292de17fc5ee9f96", "filename": "tests/ui/mem_forget.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmem_forget.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmem_forget.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,15 +11,15 @@ note: lint level defined here\n    |        ^^^^^^^^^^\n \n error: usage of mem::forget on Drop type\n-  --> $DIR/mem_forget.rs:22:5\n+  --> $DIR/mem_forget.rs:21:5\n    |\n-22 |     std::mem::forget(seven);\n+21 |     std::mem::forget(seven);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of mem::forget on Drop type\n-  --> $DIR/mem_forget.rs:26:5\n+  --> $DIR/mem_forget.rs:24:5\n    |\n-26 |     forgetSomething(eight);\n+24 |     forgetSomething(eight);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "71b4c48f3de4d6786fd2097c634ab0f18c61339d", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 0, "deletions": 174, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -28,8 +28,6 @@ impl T {\n     fn to_something(self) -> u32 { 0 }\n \n     fn new(self) {}\n-\n-\n }\n \n struct Lt<'a> {\n@@ -195,8 +193,6 @@ fn filter_next() {\n     // check single-line case\n     let _ = v.iter().filter(|&x| *x < 0).next();\n \n-\n-\n     // check multi-line case\n     let _ = v.iter().filter(|&x| {\n                                 *x < 0\n@@ -215,8 +211,6 @@ fn search_is_some() {\n     // check `find().is_some()`, single-line\n     let _ = v.iter().find(|&x| *x < 0).is_some();\n \n-\n-\n     // check `find().is_some()`, multi-line\n     let _ = v.iter().find(|&x| {\n                               *x < 0\n@@ -226,8 +220,6 @@ fn search_is_some() {\n     // check `position().is_some()`, single-line\n     let _ = v.iter().position(|&x| x < 0).is_some();\n \n-\n-\n     // check `position().is_some()`, multi-line\n     let _ = v.iter().position(|&x| {\n                                   x < 0\n@@ -237,8 +229,6 @@ fn search_is_some() {\n     // check `rposition().is_some()`, single-line\n     let _ = v.iter().rposition(|&x| x < 0).is_some();\n \n-\n-\n     // check `rposition().is_some()`, multi-line\n     let _ = v.iter().rposition(|&x| {\n                                    x < 0\n@@ -277,74 +267,40 @@ fn or_fun_call() {\n     let with_constructor = Some(vec![1]);\n     with_constructor.unwrap_or(make());\n \n-\n-\n-\n     let with_new = Some(vec![1]);\n     with_new.unwrap_or(Vec::new());\n \n-\n-\n-\n     let with_const_args = Some(vec![1]);\n     with_const_args.unwrap_or(Vec::with_capacity(12));\n \n-\n-\n-\n     let with_err : Result<_, ()> = Ok(vec![1]);\n     with_err.unwrap_or(make());\n \n-\n-\n-\n     let with_err_args : Result<_, ()> = Ok(vec![1]);\n     with_err_args.unwrap_or(Vec::with_capacity(12));\n \n-\n-\n-\n     let with_default_trait = Some(1);\n     with_default_trait.unwrap_or(Default::default());\n \n-\n-\n-\n     let with_default_type = Some(1);\n     with_default_type.unwrap_or(u64::default());\n \n-\n-\n-\n     let with_vec = Some(vec![1]);\n     with_vec.unwrap_or(vec![]);\n \n-\n     // FIXME #944: ~|SUGGESTION with_vec.unwrap_or_else(|| vec![]);\n \n     let without_default = Some(Foo);\n     without_default.unwrap_or(Foo::new());\n \n-\n-\n-\n     let mut map = HashMap::<u64, String>::new();\n     map.entry(42).or_insert(String::new());\n \n-\n-\n-\n     let mut btree = BTreeMap::<u64, String>::new();\n     btree.entry(42).or_insert(String::new());\n \n-\n-\n-\n     let stringy = Some(String::from(\"\"));\n     let _ = stringy.unwrap_or(\"\".to_owned());\n-\n-\n-\n }\n \n /// Checks implementation of `ITER_NTH` lint\n@@ -356,27 +312,20 @@ fn iter_nth() {\n     {\n         // Make sure we lint `.iter()` for relevant types\n         let bad_vec = some_vec.iter().nth(3);\n-\n         let bad_slice = &some_vec[..].iter().nth(3);\n-\n         let bad_boxed_slice = boxed_slice.iter().nth(3);\n-\n         let bad_vec_deque = some_vec_deque.iter().nth(3);\n-\n     }\n \n     {\n         // Make sure we lint `.iter_mut()` for relevant types\n         let bad_vec = some_vec.iter_mut().nth(3);\n-\n     }\n     {\n         let bad_slice = &some_vec[..].iter_mut().nth(3);\n-\n     }\n     {\n         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n-\n     }\n \n     // Make sure we don't lint for non-relevant types\n@@ -388,19 +337,10 @@ fn iter_nth() {\n /// Checks implementation of `ITER_SKIP_NEXT` lint\n fn iter_skip_next() {\n     let mut some_vec = vec![0, 1, 2, 3];\n-\n     let _ = some_vec.iter().skip(42).next();\n-\n-\n     let _ = some_vec.iter().cycle().skip(42).next();\n-\n-\n     let _ = (1..10).skip(10).next();\n-\n-\n     let _ = &some_vec[..].iter().skip(3).next();\n-\n-\n     let foo = IteratorFalsePositives { foo : 0 };\n     let _ = foo.skip(42).next();\n     let _ = foo.filter().skip(42).next();\n@@ -427,51 +367,19 @@ fn get_unwrap() {\n \n     { // Test `get().unwrap()`\n         let _ = boxed_slice.get(1).unwrap();\n-\n-\n-\n         let _ = some_slice.get(0).unwrap();\n-\n-\n-\n         let _ = some_vec.get(0).unwrap();\n-\n-\n-\n         let _ = some_vecdeque.get(0).unwrap();\n-\n-\n-\n         let _ = some_hashmap.get(&1).unwrap();\n-\n-\n-\n         let _ = some_btreemap.get(&1).unwrap();\n-\n-\n-\n-\n         let _ = false_positive.get(0).unwrap();\n     }\n \n     { // Test `get_mut().unwrap()`\n         *boxed_slice.get_mut(0).unwrap() = 1;\n-\n-\n-\n         *some_slice.get_mut(0).unwrap() = 1;\n-\n-\n-\n         *some_vec.get_mut(0).unwrap() = 1;\n-\n-\n-\n         *some_vecdeque.get_mut(0).unwrap() = 1;\n-\n-\n-\n-\n         // Check false positives\n         *some_hashmap.get_mut(&1).unwrap() = 'b';\n         *some_btreemap.get_mut(&1).unwrap() = 'b';\n@@ -515,14 +423,7 @@ struct MyErrorWithParam<T> {\n #[allow(unnecessary_operation)]\n fn starts_with() {\n     \"\".chars().next() == Some(' ');\n-\n-\n-\n-\n     Some(' ') != \"\".chars().next();\n-\n-\n-\n }\n \n fn str_extend_chars() {\n@@ -533,21 +434,12 @@ fn str_extend_chars() {\n     s.push_str(abc);\n     s.extend(abc.chars());\n \n-\n-\n-\n     s.push_str(\"abc\");\n     s.extend(\"abc\".chars());\n \n-\n-\n-\n     s.push_str(&def);\n     s.extend(def.chars());\n \n-\n-\n-\n     s.extend(abc.chars().skip(1));\n     s.extend(\"abc\".chars().skip(1));\n     s.extend(['a', 'b', 'c'].iter());\n@@ -559,46 +451,33 @@ fn str_extend_chars() {\n fn clone_on_copy() {\n     42.clone();\n \n-\n     vec![1].clone(); // ok, not a Copy type\n     Some(vec![1]).clone(); // ok, not a Copy type\n     (&42).clone();\n-\n-\n }\n \n fn clone_on_copy_generic<T: Copy>(t: T) {\n     t.clone();\n \n-\n     Some(t).clone();\n-\n-\n }\n \n fn clone_on_double_ref() {\n     let x = vec![1];\n     let y = &&x;\n     let z: &Vec<_> = y.clone();\n \n-\n     println!(\"{:p} {:p}\",*y, z);\n }\n \n fn single_char_pattern() {\n     let x = \"foo\";\n     x.split(\"x\");\n-\n-\n-\n-\n     x.split(\"xx\");\n-\n     x.split('x');\n \n     let y = \"x\";\n     x.split(y);\n-\n     // Not yet testing for multi-byte characters\n     // Changing `r.len() == 1` to `r.chars().count() == 1` in `lint_single_char_pattern`\n     // should have done this but produced an ICE\n@@ -610,72 +489,23 @@ fn single_char_pattern() {\n     x.split(\"\ud83d\udca3\");\n     // Can't use this lint for unicode code points which don't fit in a char\n     x.split(\"\u2764\ufe0f\");\n-\n     x.contains(\"x\");\n-\n-\n-\n     x.starts_with(\"x\");\n-\n-\n-\n     x.ends_with(\"x\");\n-\n-\n-\n     x.find(\"x\");\n-\n-\n-\n     x.rfind(\"x\");\n-\n-\n-\n     x.rsplit(\"x\");\n-\n-\n-\n     x.split_terminator(\"x\");\n-\n-\n-\n     x.rsplit_terminator(\"x\");\n-\n-\n-\n     x.splitn(0, \"x\");\n-\n-\n-\n     x.rsplitn(0, \"x\");\n-\n-\n-\n     x.matches(\"x\");\n-\n-\n-\n     x.rmatches(\"x\");\n-\n-\n-\n     x.match_indices(\"x\");\n-\n-\n-\n     x.rmatch_indices(\"x\");\n-\n-\n-\n     x.trim_left_matches(\"x\");\n-\n-\n-\n     x.trim_right_matches(\"x\");\n \n-\n-\n-\n     let h = HashSet::<String>::new();\n     h.contains(\"X\"); // should not warn\n }\n@@ -685,15 +515,11 @@ fn temporary_cstring() {\n     use std::ffi::CString;\n \n     CString::new(\"foo\").unwrap().as_ptr();\n-\n-\n-\n }\n \n fn iter_clone_collect() {\n     let v = [1,2,3,4,5];\n     let v2 : Vec<isize> = v.iter().cloned().collect();\n-\n     let v3 : HashSet<isize> = v.iter().cloned().collect();\n     let v4 : VecDeque<isize> = v.iter().cloned().collect();\n }"}, {"sha": "9c77d4dac87fbbf8134787e28079b81ba71293df", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 206, "deletions": 206, "changes": 412, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -62,53 +62,53 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:99:13\n-    |\n-99  |       let _ = opt.map(|x| x + 1)\n-    |  _____________^\n-100 | |\n-101 | |                .unwrap_or(0); // should lint even though this call is on a separate line\n-    | |____________________________^\n-    |\n-    = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n+  --> $DIR/methods.rs:97:13\n+   |\n+97 |       let _ = opt.map(|x| x + 1)\n+   |  _____________^\n+98 | |\n+99 | |                .unwrap_or(0); // should lint even though this call is on a separate line\n+   | |____________________________^\n+   |\n+   = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n note: lint level defined here\n-   --> $DIR/methods.rs:5:17\n-    |\n-5   | #![deny(clippy, clippy_pedantic)]\n-    |                 ^^^^^^^^^^^^^^^\n-    = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n+  --> $DIR/methods.rs:5:17\n+   |\n+5  | #![deny(clippy, clippy_pedantic)]\n+   |                 ^^^^^^^^^^^^^^^\n+   = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:103:13\n+   --> $DIR/methods.rs:101:13\n     |\n-103 |       let _ = opt.map(|x| {\n+101 |       let _ = opt.map(|x| {\n     |  _____________^\n-104 | |                         x + 1\n-105 | |                     }\n-106 | |               ).unwrap_or(0);\n+102 | |                         x + 1\n+103 | |                     }\n+104 | |               ).unwrap_or(0);\n     | |____________________________^\n     |\n     = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-   --> $DIR/methods.rs:107:13\n+   --> $DIR/methods.rs:105:13\n     |\n-107 |       let _ = opt.map(|x| x + 1)\n+105 |       let _ = opt.map(|x| x + 1)\n     |  _____________^\n-108 | |                .unwrap_or({\n-109 | |                     0\n-110 | |                 });\n+106 | |                .unwrap_or({\n+107 | |                     0\n+108 | |                 });\n     | |__________________^\n     |\n     = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:116:13\n+   --> $DIR/methods.rs:114:13\n     |\n-116 |       let _ = opt.map(|x| x + 1)\n+114 |       let _ = opt.map(|x| x + 1)\n     |  _____________^\n-117 | |\n-118 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n+115 | |\n+116 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n     | |____________________________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n@@ -120,33 +120,33 @@ note: lint level defined here\n     = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:120:13\n+   --> $DIR/methods.rs:118:13\n     |\n-120 |       let _ = opt.map(|x| {\n+118 |       let _ = opt.map(|x| {\n     |  _____________^\n-121 | |                         x + 1\n-122 | |                     }\n-123 | |               ).unwrap_or_else(|| 0);\n+119 | |                         x + 1\n+120 | |                     }\n+121 | |               ).unwrap_or_else(|| 0);\n     | |____________________________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-   --> $DIR/methods.rs:124:13\n+   --> $DIR/methods.rs:122:13\n     |\n-124 |       let _ = opt.map(|x| x + 1)\n+122 |       let _ = opt.map(|x| x + 1)\n     |  _____________^\n-125 | |                .unwrap_or_else(||\n-126 | |                     0\n-127 | |                 );\n+123 | |                .unwrap_or_else(||\n+124 | |                     0\n+125 | |                 );\n     | |_________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:196:13\n+   --> $DIR/methods.rs:194:13\n     |\n-196 |     let _ = v.iter().filter(|&x| *x < 0).next();\n+194 |     let _ = v.iter().filter(|&x| *x < 0).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(filter_next)] implied by #[deny(clippy)]\n@@ -158,21 +158,21 @@ note: lint level defined here\n     = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-   --> $DIR/methods.rs:201:13\n+   --> $DIR/methods.rs:197:13\n     |\n-201 |       let _ = v.iter().filter(|&x| {\n+197 |       let _ = v.iter().filter(|&x| {\n     |  _____________^\n-202 | |                                 *x < 0\n-203 | |                             }\n-204 | |                    ).next();\n+198 | |                                 *x < 0\n+199 | |                             }\n+200 | |                    ).next();\n     | |___________________________^\n     |\n     = note: #[deny(filter_next)] implied by #[deny(clippy)]\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:216:13\n+   --> $DIR/methods.rs:212:13\n     |\n-216 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n+212 |     let _ = v.iter().find(|&x| *x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n@@ -184,63 +184,63 @@ note: lint level defined here\n     = note: replace `find(|&x| *x < 0).is_some()` with `any(|&x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:221:13\n+   --> $DIR/methods.rs:215:13\n     |\n-221 |       let _ = v.iter().find(|&x| {\n+215 |       let _ = v.iter().find(|&x| {\n     |  _____________^\n-222 | |                               *x < 0\n-223 | |                           }\n-224 | |                    ).is_some();\n+216 | |                               *x < 0\n+217 | |                           }\n+218 | |                    ).is_some();\n     | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:227:13\n+   --> $DIR/methods.rs:221:13\n     |\n-227 |     let _ = v.iter().position(|&x| x < 0).is_some();\n+221 |     let _ = v.iter().position(|&x| x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n     = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:232:13\n+   --> $DIR/methods.rs:224:13\n     |\n-232 |       let _ = v.iter().position(|&x| {\n+224 |       let _ = v.iter().position(|&x| {\n     |  _____________^\n-233 | |                                   x < 0\n-234 | |                               }\n-235 | |                    ).is_some();\n+225 | |                                   x < 0\n+226 | |                               }\n+227 | |                    ).is_some();\n     | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:238:13\n+   --> $DIR/methods.rs:230:13\n     |\n-238 |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n+230 |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n     = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-   --> $DIR/methods.rs:243:13\n+   --> $DIR/methods.rs:233:13\n     |\n-243 |       let _ = v.iter().rposition(|&x| {\n+233 |       let _ = v.iter().rposition(|&x| {\n     |  _____________^\n-244 | |                                    x < 0\n-245 | |                                }\n-246 | |                    ).is_some();\n+234 | |                                    x < 0\n+235 | |                                }\n+236 | |                    ).is_some();\n     | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:278:5\n+   --> $DIR/methods.rs:268:5\n     |\n-278 |     with_constructor.unwrap_or(make());\n+268 |     with_constructor.unwrap_or(make());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_constructor.unwrap_or_else(make)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n@@ -251,97 +251,97 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: use of `unwrap_or` followed by a call to `new`\n-   --> $DIR/methods.rs:284:5\n+   --> $DIR/methods.rs:271:5\n     |\n-284 |     with_new.unwrap_or(Vec::new());\n+271 |     with_new.unwrap_or(Vec::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_new.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:290:5\n+   --> $DIR/methods.rs:274:5\n     |\n-290 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n+274 |     with_const_args.unwrap_or(Vec::with_capacity(12));\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_const_args.unwrap_or_else(|| Vec::with_capacity(12))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:296:5\n+   --> $DIR/methods.rs:277:5\n     |\n-296 |     with_err.unwrap_or(make());\n+277 |     with_err.unwrap_or(make());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err.unwrap_or_else(|_| make())`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:302:5\n+   --> $DIR/methods.rs:280:5\n     |\n-302 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n+280 |     with_err_args.unwrap_or(Vec::with_capacity(12));\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_err_args.unwrap_or_else(|_| Vec::with_capacity(12))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:308:5\n+   --> $DIR/methods.rs:283:5\n     |\n-308 |     with_default_trait.unwrap_or(Default::default());\n+283 |     with_default_trait.unwrap_or(Default::default());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_trait.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a call to `default`\n-   --> $DIR/methods.rs:314:5\n+   --> $DIR/methods.rs:286:5\n     |\n-314 |     with_default_type.unwrap_or(u64::default());\n+286 |     with_default_type.unwrap_or(u64::default());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_default_type.unwrap_or_default()`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:320:5\n+   --> $DIR/methods.rs:289:5\n     |\n-320 |     with_vec.unwrap_or(vec![]);\n+289 |     with_vec.unwrap_or(vec![]);\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `with_vec.unwrap_or_else(|| < [ _ ] > :: into_vec ( box [ $ ( $ x ) , * ] ))`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:326:5\n+   --> $DIR/methods.rs:294:5\n     |\n-326 |     without_default.unwrap_or(Foo::new());\n+294 |     without_default.unwrap_or(Foo::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `without_default.unwrap_or_else(Foo::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:332:5\n+   --> $DIR/methods.rs:297:5\n     |\n-332 |     map.entry(42).or_insert(String::new());\n+297 |     map.entry(42).or_insert(String::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `map.entry(42).or_insert_with(String::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `or_insert` followed by a function call\n-   --> $DIR/methods.rs:338:5\n+   --> $DIR/methods.rs:300:5\n     |\n-338 |     btree.entry(42).or_insert(String::new());\n+300 |     btree.entry(42).or_insert(String::new());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `btree.entry(42).or_insert_with(String::new)`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: use of `unwrap_or` followed by a function call\n-   --> $DIR/methods.rs:344:13\n+   --> $DIR/methods.rs:303:13\n     |\n-344 |     let _ = stringy.unwrap_or(\"\".to_owned());\n+303 |     let _ = stringy.unwrap_or(\"\".to_owned());\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `stringy.unwrap_or_else(|| \"\".to_owned())`\n     |\n     = note: #[deny(or_fun_call)] implied by #[deny(clippy)]\n \n error: called `.iter().nth()` on a Vec. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:358:23\n+   --> $DIR/methods.rs:314:23\n     |\n-358 |         let bad_vec = some_vec.iter().nth(3);\n+314 |         let bad_vec = some_vec.iter().nth(3);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n@@ -352,57 +352,57 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:360:26\n+   --> $DIR/methods.rs:315:26\n     |\n-360 |         let bad_slice = &some_vec[..].iter().nth(3);\n+315 |         let bad_slice = &some_vec[..].iter().nth(3);\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `.iter().nth()` on a slice. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:362:31\n+   --> $DIR/methods.rs:316:31\n     |\n-362 |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n+316 |         let bad_boxed_slice = boxed_slice.iter().nth(3);\n     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `.iter().nth()` on a VecDeque. Calling `.get()` is both faster and more readable\n-   --> $DIR/methods.rs:364:29\n+   --> $DIR/methods.rs:317:29\n     |\n-364 |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n+317 |         let bad_vec_deque = some_vec_deque.iter().nth(3);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `.iter_mut().nth()` on a Vec. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:370:23\n+   --> $DIR/methods.rs:322:23\n     |\n-370 |         let bad_vec = some_vec.iter_mut().nth(3);\n+322 |         let bad_vec = some_vec.iter_mut().nth(3);\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `.iter_mut().nth()` on a slice. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:374:26\n+   --> $DIR/methods.rs:325:26\n     |\n-374 |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n+325 |         let bad_slice = &some_vec[..].iter_mut().nth(3);\n     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `.iter_mut().nth()` on a VecDeque. Calling `.get_mut()` is both faster and more readable\n-   --> $DIR/methods.rs:378:29\n+   --> $DIR/methods.rs:328:29\n     |\n-378 |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n+328 |         let bad_vec_deque = some_vec_deque.iter_mut().nth(3);\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_nth)] implied by #[deny(clippy)]\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:392:13\n+   --> $DIR/methods.rs:340:13\n     |\n-392 |     let _ = some_vec.iter().skip(42).next();\n+340 |     let _ = some_vec.iter().skip(42).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_skip_next)] implied by #[deny(clippy)]\n@@ -413,33 +413,33 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:395:13\n+   --> $DIR/methods.rs:341:13\n     |\n-395 |     let _ = some_vec.iter().cycle().skip(42).next();\n+341 |     let _ = some_vec.iter().cycle().skip(42).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_skip_next)] implied by #[deny(clippy)]\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:398:13\n+   --> $DIR/methods.rs:342:13\n     |\n-398 |     let _ = (1..10).skip(10).next();\n+342 |     let _ = (1..10).skip(10).next();\n     |             ^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_skip_next)] implied by #[deny(clippy)]\n \n error: called `skip(x).next()` on an iterator. This is more succinctly expressed by calling `nth(x)`\n-   --> $DIR/methods.rs:401:14\n+   --> $DIR/methods.rs:343:14\n     |\n-401 |     let _ = &some_vec[..].iter().skip(3).next();\n+343 |     let _ = &some_vec[..].iter().skip(3).next();\n     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_skip_next)] implied by #[deny(clippy)]\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:429:17\n+   --> $DIR/methods.rs:369:17\n     |\n-429 |         let _ = boxed_slice.get(1).unwrap();\n+369 |         let _ = boxed_slice.get(1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&boxed_slice[1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n@@ -450,81 +450,81 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:433:17\n+   --> $DIR/methods.rs:370:17\n     |\n-433 |         let _ = some_slice.get(0).unwrap();\n+370 |         let _ = some_slice.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:437:17\n+   --> $DIR/methods.rs:371:17\n     |\n-437 |         let _ = some_vec.get(0).unwrap();\n+371 |         let _ = some_vec.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vec[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:441:17\n+   --> $DIR/methods.rs:372:17\n     |\n-441 |         let _ = some_vecdeque.get(0).unwrap();\n+372 |         let _ = some_vecdeque.get(0).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_vecdeque[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get().unwrap()` on a HashMap. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:445:17\n+   --> $DIR/methods.rs:373:17\n     |\n-445 |         let _ = some_hashmap.get(&1).unwrap();\n+373 |         let _ = some_hashmap.get(&1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_hashmap[&1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get().unwrap()` on a BTreeMap. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:449:17\n+   --> $DIR/methods.rs:374:17\n     |\n-449 |         let _ = some_btreemap.get(&1).unwrap();\n+374 |         let _ = some_btreemap.get(&1).unwrap();\n     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&some_btreemap[&1]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:458:10\n+   --> $DIR/methods.rs:379:10\n     |\n-458 |         *boxed_slice.get_mut(0).unwrap() = 1;\n+379 |         *boxed_slice.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut boxed_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get_mut().unwrap()` on a slice. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:462:10\n+   --> $DIR/methods.rs:380:10\n     |\n-462 |         *some_slice.get_mut(0).unwrap() = 1;\n+380 |         *some_slice.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_slice[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get_mut().unwrap()` on a Vec. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:466:10\n+   --> $DIR/methods.rs:381:10\n     |\n-466 |         *some_vec.get_mut(0).unwrap() = 1;\n+381 |         *some_vec.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vec[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: called `.get_mut().unwrap()` on a VecDeque. Using `[]` is more clear and more concise\n-   --> $DIR/methods.rs:470:10\n+   --> $DIR/methods.rs:382:10\n     |\n-470 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n+382 |         *some_vecdeque.get_mut(0).unwrap() = 1;\n     |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this `&mut some_vecdeque[0]`\n     |\n     = note: #[deny(get_unwrap)] implied by #[deny(clippy)]\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:488:13\n+   --> $DIR/methods.rs:396:13\n     |\n-488 |     let _ = opt.unwrap();\n+396 |     let _ = opt.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: #[deny(option_unwrap_used)] implied by #[deny(clippy_pedantic)]\n@@ -535,9 +535,9 @@ note: lint level defined here\n     |                 ^^^^^^^^^^^^^^^\n \n error: used unwrap() on a Result value. If you don't want to handle the Err case gracefully, consider using expect() to provide a better panic message\n-   --> $DIR/methods.rs:491:13\n+   --> $DIR/methods.rs:399:13\n     |\n-491 |     let _ = res.unwrap();\n+399 |     let _ = res.unwrap();\n     |             ^^^^^^^^^^^^\n     |\n     = note: #[deny(result_unwrap_used)] implied by #[deny(clippy_pedantic)]\n@@ -548,9 +548,9 @@ note: lint level defined here\n     |                 ^^^^^^^^^^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:493:5\n+   --> $DIR/methods.rs:401:5\n     |\n-493 |     res.ok().expect(\"disaster!\");\n+401 |     res.ok().expect(\"disaster!\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(ok_expect)] implied by #[deny(clippy)]\n@@ -561,41 +561,41 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:499:5\n+   --> $DIR/methods.rs:407:5\n     |\n-499 |     res3.ok().expect(\"whoof\");\n+407 |     res3.ok().expect(\"whoof\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(ok_expect)] implied by #[deny(clippy)]\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:501:5\n+   --> $DIR/methods.rs:409:5\n     |\n-501 |     res4.ok().expect(\"argh\");\n+409 |     res4.ok().expect(\"argh\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(ok_expect)] implied by #[deny(clippy)]\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:503:5\n+   --> $DIR/methods.rs:411:5\n     |\n-503 |     res5.ok().expect(\"oops\");\n+411 |     res5.ok().expect(\"oops\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(ok_expect)] implied by #[deny(clippy)]\n \n error: called `ok().expect()` on a Result value. You can call `expect` directly on the `Result`\n-   --> $DIR/methods.rs:505:5\n+   --> $DIR/methods.rs:413:5\n     |\n-505 |     res6.ok().expect(\"meh\");\n+413 |     res6.ok().expect(\"meh\");\n     |     ^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(ok_expect)] implied by #[deny(clippy)]\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:517:5\n+   --> $DIR/methods.rs:425:5\n     |\n-517 |     \"\".chars().next() == Some(' ');\n+425 |     \"\".chars().next() == Some(' ');\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `\"\".starts_with(' ')`\n     |\n     = note: #[deny(chars_next_cmp)] implied by #[deny(clippy)]\n@@ -606,17 +606,17 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: you should use the `starts_with` method\n-   --> $DIR/methods.rs:522:5\n+   --> $DIR/methods.rs:426:5\n     |\n-522 |     Some(' ') != \"\".chars().next();\n+426 |     Some(' ') != \"\".chars().next();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this `!\"\".starts_with(' ')`\n     |\n     = note: #[deny(chars_next_cmp)] implied by #[deny(clippy)]\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:534:5\n+   --> $DIR/methods.rs:435:5\n     |\n-534 |     s.extend(abc.chars());\n+435 |     s.extend(abc.chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(abc)`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n@@ -627,25 +627,25 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:540:5\n+   --> $DIR/methods.rs:438:5\n     |\n-540 |     s.extend(\"abc\".chars());\n+438 |     s.extend(\"abc\".chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(\"abc\")`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n \n error: calling `.extend(_.chars())`\n-   --> $DIR/methods.rs:546:5\n+   --> $DIR/methods.rs:441:5\n     |\n-546 |     s.extend(def.chars());\n+441 |     s.extend(def.chars());\n     |     ^^^^^^^^^^^^^^^^^^^^^ help: try this `s.push_str(&def)`\n     |\n     = note: #[deny(string_extend_chars)] implied by #[deny(clippy)]\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:560:5\n+   --> $DIR/methods.rs:452:5\n     |\n-560 |     42.clone();\n+452 |     42.clone();\n     |     ^^^^^^^^^^ help: try removing the `clone` call `42`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n@@ -656,33 +656,33 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:565:5\n+   --> $DIR/methods.rs:456:5\n     |\n-565 |     (&42).clone();\n+456 |     (&42).clone();\n     |     ^^^^^^^^^^^^^ help: try dereferencing it `*(&42)`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:571:5\n+   --> $DIR/methods.rs:460:5\n     |\n-571 |     t.clone();\n+460 |     t.clone();\n     |     ^^^^^^^^^ help: try removing the `clone` call `t`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n \n error: using `clone` on a `Copy` type\n-   --> $DIR/methods.rs:574:5\n+   --> $DIR/methods.rs:462:5\n     |\n-574 |     Some(t).clone();\n+462 |     Some(t).clone();\n     |     ^^^^^^^^^^^^^^^ help: try removing the `clone` call `Some(t)`\n     |\n     = note: #[deny(clone_on_copy)] implied by #[deny(clippy)]\n \n error: using `clone` on a double-reference; this will copy the reference instead of cloning the inner type\n-   --> $DIR/methods.rs:582:22\n+   --> $DIR/methods.rs:468:22\n     |\n-582 |     let z: &Vec<_> = y.clone();\n+468 |     let z: &Vec<_> = y.clone();\n     |                      ^^^^^^^^^ help: try dereferencing it `(*y).clone()`\n     |\n     = note: #[deny(clone_double_ref)] implied by #[deny(clippy)]\n@@ -693,9 +693,9 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:590:13\n+   --> $DIR/methods.rs:475:13\n     |\n-590 |     x.split(\"x\");\n+475 |     x.split(\"x\");\n     |     --------^^^- help: try using a char instead: `x.split('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n@@ -706,137 +706,137 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:614:16\n+   --> $DIR/methods.rs:492:16\n     |\n-614 |     x.contains(\"x\");\n+492 |     x.contains(\"x\");\n     |     -----------^^^- help: try using a char instead: `x.contains('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:618:19\n+   --> $DIR/methods.rs:493:19\n     |\n-618 |     x.starts_with(\"x\");\n+493 |     x.starts_with(\"x\");\n     |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:622:17\n+   --> $DIR/methods.rs:494:17\n     |\n-622 |     x.ends_with(\"x\");\n+494 |     x.ends_with(\"x\");\n     |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:626:12\n+   --> $DIR/methods.rs:495:12\n     |\n-626 |     x.find(\"x\");\n+495 |     x.find(\"x\");\n     |     -------^^^- help: try using a char instead: `x.find('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:630:13\n+   --> $DIR/methods.rs:496:13\n     |\n-630 |     x.rfind(\"x\");\n+496 |     x.rfind(\"x\");\n     |     --------^^^- help: try using a char instead: `x.rfind('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:634:14\n+   --> $DIR/methods.rs:497:14\n     |\n-634 |     x.rsplit(\"x\");\n+497 |     x.rsplit(\"x\");\n     |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:638:24\n+   --> $DIR/methods.rs:498:24\n     |\n-638 |     x.split_terminator(\"x\");\n+498 |     x.split_terminator(\"x\");\n     |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:642:25\n+   --> $DIR/methods.rs:499:25\n     |\n-642 |     x.rsplit_terminator(\"x\");\n+499 |     x.rsplit_terminator(\"x\");\n     |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:646:17\n+   --> $DIR/methods.rs:500:17\n     |\n-646 |     x.splitn(0, \"x\");\n+500 |     x.splitn(0, \"x\");\n     |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:650:18\n+   --> $DIR/methods.rs:501:18\n     |\n-650 |     x.rsplitn(0, \"x\");\n+501 |     x.rsplitn(0, \"x\");\n     |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:654:15\n+   --> $DIR/methods.rs:502:15\n     |\n-654 |     x.matches(\"x\");\n+502 |     x.matches(\"x\");\n     |     ----------^^^- help: try using a char instead: `x.matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:658:16\n+   --> $DIR/methods.rs:503:16\n     |\n-658 |     x.rmatches(\"x\");\n+503 |     x.rmatches(\"x\");\n     |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:662:21\n+   --> $DIR/methods.rs:504:21\n     |\n-662 |     x.match_indices(\"x\");\n+504 |     x.match_indices(\"x\");\n     |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:666:22\n+   --> $DIR/methods.rs:505:22\n     |\n-666 |     x.rmatch_indices(\"x\");\n+505 |     x.rmatch_indices(\"x\");\n     |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:670:25\n+   --> $DIR/methods.rs:506:25\n     |\n-670 |     x.trim_left_matches(\"x\");\n+506 |     x.trim_left_matches(\"x\");\n     |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: single-character string constant used as pattern\n-   --> $DIR/methods.rs:674:26\n+   --> $DIR/methods.rs:507:26\n     |\n-674 |     x.trim_right_matches(\"x\");\n+507 |     x.trim_right_matches(\"x\");\n     |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n     |\n     = note: #[deny(single_char_pattern)] implied by #[deny(clippy)]\n \n error: you are getting the inner pointer of a temporary `CString`\n-   --> $DIR/methods.rs:687:5\n+   --> $DIR/methods.rs:517:5\n     |\n-687 |     CString::new(\"foo\").unwrap().as_ptr();\n+517 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(temporary_cstring_as_ptr)] implied by #[deny(clippy)]\n@@ -847,15 +847,15 @@ note: lint level defined here\n     |         ^^^^^^\n     = note: that pointer will be invalid outside this expression\n help: assign the `CString` to a variable to extend its lifetime\n-   --> $DIR/methods.rs:687:5\n+   --> $DIR/methods.rs:517:5\n     |\n-687 |     CString::new(\"foo\").unwrap().as_ptr();\n+517 |     CString::new(\"foo\").unwrap().as_ptr();\n     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: called `cloned().collect()` on a slice to create a `Vec`. Calling `to_vec()` is both faster and more readable\n-   --> $DIR/methods.rs:695:27\n+   --> $DIR/methods.rs:522:27\n     |\n-695 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n+522 |     let v2 : Vec<isize> = v.iter().cloned().collect();\n     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = note: #[deny(iter_cloned_collect)] implied by #[deny(clippy)]"}, {"sha": "b938c822f95374fb9b03daf456a553b4cdf35fd3", "filename": "tests/ui/mut_mut.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -17,7 +17,6 @@ fn less_fun(x : *mut *mut u32) {\n \n macro_rules! mut_ptr {\n     ($p:expr) => { &mut $p }\n-\n }\n \n #[allow(unused_mut, unused_variables)]\n@@ -29,25 +28,15 @@ fn main() {\n \n     if fun(x) {\n         let y : &mut &mut u32 = &mut &mut 2;\n-\n-\n-\n         **y + **x;\n     }\n \n     if fun(x) {\n         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n-\n-\n-\n-\n-\n-\n         ***y + **x;\n     }\n \n     let mut z = mut_ptr!(&mut 3u32);\n-\n }\n \n fn issue939() {"}, {"sha": "82120f583efcea4ca1085d9c260cf55f08ed1a46", "filename": "tests/ui/mut_mut.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmut_mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fmut_mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmut_mut.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,9 +11,9 @@ note: lint level defined here\n    |         ^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:25:17\n+  --> $DIR/mut_mut.rs:24:17\n    |\n-25 |     let mut x = &mut &mut 1u32;\n+24 |     let mut x = &mut &mut 1u32;\n    |                 ^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n@@ -22,67 +22,67 @@ error: generally you want to avoid `&mut &mut _` if possible\n 19 |     ($p:expr) => { &mut $p }\n    |                    ^^^^^^^\n ...\n-49 |     let mut z = mut_ptr!(&mut 3u32);\n+39 |     let mut z = mut_ptr!(&mut 3u32);\n    |                 ------------------- in this macro invocation\n \n error: this expression mutably borrows a mutable reference. Consider reborrowing\n-  --> $DIR/mut_mut.rs:27:21\n+  --> $DIR/mut_mut.rs:26:21\n    |\n-27 |         let mut y = &mut x;\n+26 |         let mut y = &mut x;\n    |                     ^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:31:17\n+  --> $DIR/mut_mut.rs:30:17\n    |\n-31 |         let y : &mut &mut u32 = &mut &mut 2;\n+30 |         let y : &mut &mut u32 = &mut &mut 2;\n    |                 ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:31:33\n+  --> $DIR/mut_mut.rs:30:33\n    |\n-31 |         let y : &mut &mut u32 = &mut &mut 2;\n+30 |         let y : &mut &mut u32 = &mut &mut 2;\n    |                                 ^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:31:17\n+  --> $DIR/mut_mut.rs:30:17\n    |\n-31 |         let y : &mut &mut u32 = &mut &mut 2;\n+30 |         let y : &mut &mut u32 = &mut &mut 2;\n    |                 ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:17\n+  --> $DIR/mut_mut.rs:35:17\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                 ^^^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:22\n+  --> $DIR/mut_mut.rs:35:22\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                      ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:38\n+  --> $DIR/mut_mut.rs:35:38\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                                      ^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:17\n+  --> $DIR/mut_mut.rs:35:17\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                 ^^^^^^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:22\n+  --> $DIR/mut_mut.rs:35:22\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                      ^^^^^^^^^^^^^\n \n error: generally you want to avoid `&mut &mut _` if possible\n-  --> $DIR/mut_mut.rs:39:22\n+  --> $DIR/mut_mut.rs:35:22\n    |\n-39 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n+35 |         let y : &mut &mut &mut u32 = &mut &mut &mut 2;\n    |                      ^^^^^^^^^^^^^\n \n error: aborting due to 13 previous errors"}, {"sha": "d2b0e76f6e1b28bd72901068eec0a0936b634c20", "filename": "tests/ui/needless_bool.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -9,17 +9,8 @@ fn main() {\n     if x { true } else { true };\n     if x { false } else { false };\n     if x { true } else { false };\n-\n-\n-\n     if x { false } else { true };\n-\n-\n-\n     if x && y { false } else { true };\n-\n-\n-\n     if x { x } else { false }; // would also be questionable, but we don't catch this yet\n     bool_ret(x);\n     bool_ret2(x);\n@@ -32,43 +23,29 @@ fn main() {\n #[allow(if_same_then_else, needless_return)]\n fn bool_ret(x: bool) -> bool {\n     if x { return true } else { return true };\n-\n }\n \n #[allow(if_same_then_else, needless_return)]\n fn bool_ret2(x: bool) -> bool {\n     if x { return false } else { return false };\n-\n }\n \n #[allow(needless_return)]\n fn bool_ret3(x: bool) -> bool {\n     if x { return true } else { return false };\n-\n-\n-\n }\n \n #[allow(needless_return)]\n fn bool_ret5(x: bool, y: bool) -> bool {\n     if x && y { return true } else { return false };\n-\n-\n-\n }\n \n #[allow(needless_return)]\n fn bool_ret4(x: bool) -> bool {\n     if x { return false } else { return true };\n-\n-\n-\n }\n \n #[allow(needless_return)]\n fn bool_ret6(x: bool, y: bool) -> bool {\n     if x && y { return false } else { return true };\n-\n-\n-\n }"}, {"sha": "edf596c2ec9e23c02a72aa3b414f0e72b949a17d", "filename": "tests/ui/needless_bool.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_bool.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -23,51 +23,51 @@ error: this if-then-else expression returns a bool literal\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:15:5\n+  --> $DIR/needless_bool.rs:12:5\n    |\n-15 |     if x { false } else { true };\n+12 |     if x { false } else { true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:19:5\n+  --> $DIR/needless_bool.rs:13:5\n    |\n-19 |     if x && y { false } else { true };\n+13 |     if x && y { false } else { true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `!(x && y)`\n \n error: this if-then-else expression will always return true\n-  --> $DIR/needless_bool.rs:34:5\n+  --> $DIR/needless_bool.rs:25:5\n    |\n-34 |     if x { return true } else { return true };\n+25 |     if x { return true } else { return true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this if-then-else expression will always return false\n-  --> $DIR/needless_bool.rs:40:5\n+  --> $DIR/needless_bool.rs:30:5\n    |\n-40 |     if x { return false } else { return false };\n+30 |     if x { return false } else { return false };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:46:5\n+  --> $DIR/needless_bool.rs:35:5\n    |\n-46 |     if x { return true } else { return false };\n+35 |     if x { return true } else { return false };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:54:5\n+  --> $DIR/needless_bool.rs:40:5\n    |\n-54 |     if x && y { return true } else { return false };\n+40 |     if x && y { return true } else { return false };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return x && y`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:62:5\n+  --> $DIR/needless_bool.rs:45:5\n    |\n-62 |     if x { return false } else { return true };\n+45 |     if x { return false } else { return true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !x`\n \n error: this if-then-else expression returns a bool literal\n-  --> $DIR/needless_bool.rs:70:5\n+  --> $DIR/needless_bool.rs:50:5\n    |\n-70 |     if x && y { return false } else { return true };\n+50 |     if x && y { return false } else { return true };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: you can reduce it to `return !(x && y)`\n \n error: aborting due to 11 previous errors"}, {"sha": "d4c365ca5107eebba5ad37fd74d966617e611acf", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -9,59 +9,34 @@ fn test_end_of_fn() -> bool {\n         return true;\n     }\n     return true;\n-\n-\n-\n }\n \n fn test_no_semicolon() -> bool {\n     return true\n-\n-\n-\n }\n \n fn test_if_block() -> bool {\n     if true {\n         return true;\n-\n-\n-\n     } else {\n         return false;\n-\n-\n-\n     }\n }\n \n fn test_match(x: bool) -> bool {\n     match x {\n         true => return false,\n-\n-\n-\n-\n         false => {\n             return true;\n-\n-\n-\n         }\n     }\n }\n \n fn test_closure() {\n     let _ = || {\n         return true;\n-\n-\n-\n     };\n     let _ = || return true;\n-\n-\n-\n }\n \n fn main() {"}, {"sha": "f4e386281f775b3e3bcad54e2e7a587001e01c69", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,45 +11,45 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:18:5\n+  --> $DIR/needless_return.rs:15:5\n    |\n-18 |     return true\n+15 |     return true\n    |     ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:26:9\n+  --> $DIR/needless_return.rs:20:9\n    |\n-26 |         return true;\n+20 |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:31:9\n+  --> $DIR/needless_return.rs:22:9\n    |\n-31 |         return false;\n+22 |         return false;\n    |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:40:17\n+  --> $DIR/needless_return.rs:28:17\n    |\n-40 |         true => return false,\n+28 |         true => return false,\n    |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:46:13\n+  --> $DIR/needless_return.rs:30:13\n    |\n-46 |             return true;\n+30 |             return true;\n    |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:56:9\n+  --> $DIR/needless_return.rs:37:9\n    |\n-56 |         return true;\n+37 |         return true;\n    |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n-  --> $DIR/needless_return.rs:61:16\n+  --> $DIR/needless_return.rs:39:16\n    |\n-61 |     let _ = || return true;\n+39 |     let _ = || return true;\n    |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: aborting due to 8 previous errors"}, {"sha": "9abbd417803d6e8641bce4131323e9f11c7c8ae2", "filename": "tests/ui/neg_multiply.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -29,10 +29,8 @@ fn main() {\n \n     x * -1;\n \n-\n     -1 * x;\n \n-\n     -1 * -1; // should be ok\n \n     X * -1; // should be ok"}, {"sha": "e65f11da16dbc894b23181d8401d17d755030352", "filename": "tests/ui/neg_multiply.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneg_multiply.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fneg_multiply.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneg_multiply.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,9 +11,9 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^\n \n error: Negation by multiplying with -1\n-  --> $DIR/neg_multiply.rs:33:5\n+  --> $DIR/neg_multiply.rs:32:5\n    |\n-33 |     -1 * x;\n+32 |     -1 * x;\n    |     ^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "1662e8072afc2b929af300aa00f3db3f80b0493e", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,22 +6,14 @@\n \n pub struct Foo;\n \n-\n-\n-\n impl Foo {\n     pub fn new() -> Foo { Foo }\n-\n }\n \n pub struct Bar;\n \n-\n-\n-\n impl Bar {\n     pub fn new() -> Self { Bar }\n-\n }\n \n pub struct Ok;\n@@ -70,13 +62,6 @@ pub struct LtKo<'a> {\n \n impl<'c> LtKo<'c> {\n     pub fn new() -> LtKo<'c> { unimplemented!() }\n-\n-\n-\n-\n-\n-\n-\n     // FIXME: that suggestion is missing lifetimes\n }\n "}, {"sha": "24df4607b19ff8b1401718ad1e0d2c46ac8c8305", "filename": "tests/ui/new_without_default.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnew_without_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnew_without_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: you should consider deriving a `Default` implementation for `Foo`\n-  --> $DIR/new_without_default.rs:13:5\n+  --> $DIR/new_without_default.rs:10:5\n    |\n-13 |     pub fn new() -> Foo { Foo }\n+10 |     pub fn new() -> Foo { Foo }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -14,19 +14,19 @@ help: try this\n    | pub struct Foo;\n \n error: you should consider deriving a `Default` implementation for `Bar`\n-  --> $DIR/new_without_default.rs:23:5\n+  --> $DIR/new_without_default.rs:16:5\n    |\n-23 |     pub fn new() -> Self { Bar }\n+16 |     pub fn new() -> Self { Bar }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: try this\n    | #[derive(Default)]\n    | pub struct Bar;\n \n error: you should consider adding a `Default` implementation for `LtKo<'c>`\n-  --> $DIR/new_without_default.rs:72:5\n+  --> $DIR/new_without_default.rs:64:5\n    |\n-72 |     pub fn new() -> LtKo<'c> { unimplemented!() }\n+64 |     pub fn new() -> LtKo<'c> { unimplemented!() }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here"}, {"sha": "6963e9b92ed11bce612089562561e1f559cb4f99", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -63,60 +63,22 @@ fn main() {\n     unsafe { unsafe_fn() };\n \n     Tuple(get_number());\n-\n-\n     Struct { field: get_number() };\n-\n-\n     Struct { ..get_struct() };\n-\n-\n     Enum::Tuple(get_number());\n-\n-\n     Enum::Struct { field: get_number() };\n-\n-\n     5 + get_number();\n-\n-\n     *&get_number();\n-\n-\n     &get_number();\n-\n-\n     (5, 6, get_number());\n-\n-\n     box get_number();\n-\n-\n     get_number()..;\n-\n-\n     ..get_number();\n-\n-\n     5..get_number();\n-\n-\n     [42, get_number()];\n-\n-\n     [42, 55][get_number() as usize];\n-\n-\n     (42, get_number()).1;\n-\n-\n     [get_number(); 55];\n-\n-\n     [42; 55][get_number() as usize];\n-\n-\n     {get_number()};\n-\n-\n }"}, {"sha": "0427fbf91f5b0bae657bdf5358bc92b896059f1a", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -167,112 +167,112 @@ note: lint level defined here\n    |                    ^^^^^^^^^^^^^^^^^^^^^\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:68:5\n+  --> $DIR/no_effect.rs:66:5\n    |\n-68 |     Struct { field: get_number() };\n+66 |     Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:71:5\n+  --> $DIR/no_effect.rs:67:5\n    |\n-71 |     Struct { ..get_struct() };\n+67 |     Struct { ..get_struct() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_struct();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:74:5\n+  --> $DIR/no_effect.rs:68:5\n    |\n-74 |     Enum::Tuple(get_number());\n+68 |     Enum::Tuple(get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:77:5\n+  --> $DIR/no_effect.rs:69:5\n    |\n-77 |     Enum::Struct { field: get_number() };\n+69 |     Enum::Struct { field: get_number() };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:80:5\n+  --> $DIR/no_effect.rs:70:5\n    |\n-80 |     5 + get_number();\n+70 |     5 + get_number();\n    |     ^^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:83:5\n+  --> $DIR/no_effect.rs:71:5\n    |\n-83 |     *&get_number();\n+71 |     *&get_number();\n    |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:86:5\n+  --> $DIR/no_effect.rs:72:5\n    |\n-86 |     &get_number();\n+72 |     &get_number();\n    |     ^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:89:5\n+  --> $DIR/no_effect.rs:73:5\n    |\n-89 |     (5, 6, get_number());\n+73 |     (5, 6, get_number());\n    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `5;6;get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:92:5\n+  --> $DIR/no_effect.rs:74:5\n    |\n-92 |     box get_number();\n+74 |     box get_number();\n    |     ^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:95:5\n+  --> $DIR/no_effect.rs:75:5\n    |\n-95 |     get_number()..;\n+75 |     get_number()..;\n    |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-  --> $DIR/no_effect.rs:98:5\n+  --> $DIR/no_effect.rs:76:5\n    |\n-98 |     ..get_number();\n+76 |     ..get_number();\n    |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:101:5\n-    |\n-101 |     5..get_number();\n-    |     ^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n+  --> $DIR/no_effect.rs:77:5\n+   |\n+77 |     5..get_number();\n+   |     ^^^^^^^^^^^^^^^^ help: replace it with `5;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:104:5\n-    |\n-104 |     [42, get_number()];\n-    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n+  --> $DIR/no_effect.rs:78:5\n+   |\n+78 |     [42, get_number()];\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:107:5\n-    |\n-107 |     [42, 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42, 55];get_number() as usize;`\n+  --> $DIR/no_effect.rs:79:5\n+   |\n+79 |     [42, 55][get_number() as usize];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42, 55];get_number() as usize;`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:110:5\n-    |\n-110 |     (42, get_number()).1;\n-    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n+  --> $DIR/no_effect.rs:80:5\n+   |\n+80 |     (42, get_number()).1;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with `42;get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:113:5\n-    |\n-113 |     [get_number(); 55];\n-    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+  --> $DIR/no_effect.rs:81:5\n+   |\n+81 |     [get_number(); 55];\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:116:5\n-    |\n-116 |     [42; 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42; 55];get_number() as usize;`\n+  --> $DIR/no_effect.rs:82:5\n+   |\n+82 |     [42; 55][get_number() as usize];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with `[42; 55];get_number() as usize;`\n \n error: statement can be reduced\n-   --> $DIR/no_effect.rs:119:5\n-    |\n-119 |     {get_number()};\n-    |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n+  --> $DIR/no_effect.rs:83:5\n+   |\n+83 |     {get_number()};\n+   |     ^^^^^^^^^^^^^^^ help: replace it with `get_number();`\n \n error: aborting due to 44 previous errors\n "}, {"sha": "8f8c110b9da6f52f0f401e26baa1ed7ad079c63a", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,17 +1,6 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n #![deny(clippy,similar_names)]\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n #![allow(unused)]\n \n \n@@ -129,18 +118,15 @@ fn bla() {\n         }\n         {\n             let e: i32;\n-\n         }\n         {\n             let e: i32;\n-\n             let f: i32;\n \n         }\n         match 5 {\n             1 => println!(\"\"),\n             e => panic!(),\n-\n         }\n         match 5 {\n             1 => println!(\"\"),"}, {"sha": "63fc607b802a0271efee2b433aea7fc34ce3a4a6", "filename": "tests/ui/non_expressive_names.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnon_expressive_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fnon_expressive_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:18:9\n    |\n-29 |     let bpple: i32;\n+18 |     let bpple: i32;\n    |         ^^^^^\n    |\n note: lint level defined here\n@@ -10,107 +10,107 @@ note: lint level defined here\n 3  | #![deny(clippy,similar_names)]\n    |                ^^^^^^^^^^^^^\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:16:9\n    |\n-27 |     let apple: i32;\n+16 |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `b_pple`\n-  --> $DIR/non_expressive_names.rs:29:9\n+  --> $DIR/non_expressive_names.rs:18:9\n    |\n-29 |     let bpple: i32;\n+18 |     let bpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:31:9\n+  --> $DIR/non_expressive_names.rs:20:9\n    |\n-31 |     let cpple: i32;\n+20 |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:27:9\n+  --> $DIR/non_expressive_names.rs:16:9\n    |\n-27 |     let apple: i32;\n+16 |     let apple: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `c_pple`\n-  --> $DIR/non_expressive_names.rs:31:9\n+  --> $DIR/non_expressive_names.rs:20:9\n    |\n-31 |     let cpple: i32;\n+20 |     let cpple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:56:9\n+  --> $DIR/non_expressive_names.rs:45:9\n    |\n-56 |     let bluby: i32;\n+45 |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:55:9\n+  --> $DIR/non_expressive_names.rs:44:9\n    |\n-55 |     let blubx: i32;\n+44 |     let blubx: i32;\n    |         ^^^^^\n help: separate the discriminating character by an underscore like: `blub_y`\n-  --> $DIR/non_expressive_names.rs:56:9\n+  --> $DIR/non_expressive_names.rs:45:9\n    |\n-56 |     let bluby: i32;\n+45 |     let bluby: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:61:9\n+  --> $DIR/non_expressive_names.rs:50:9\n    |\n-61 |     let coke: i32;\n+50 |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:59:9\n+  --> $DIR/non_expressive_names.rs:48:9\n    |\n-59 |     let cake: i32;\n+48 |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:79:9\n+  --> $DIR/non_expressive_names.rs:68:9\n    |\n-79 |     let xyzeabc: i32;\n+68 |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:77:9\n+  --> $DIR/non_expressive_names.rs:66:9\n    |\n-77 |     let xyz1abc: i32;\n+66 |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:83:9\n+  --> $DIR/non_expressive_names.rs:72:9\n    |\n-83 |     let parsee: i32;\n+72 |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:81:9\n+  --> $DIR/non_expressive_names.rs:70:9\n    |\n-81 |     let parser: i32;\n+70 |     let parser: i32;\n    |         ^^^^^^\n help: separate the discriminating character by an underscore like: `parse_e`\n-  --> $DIR/non_expressive_names.rs:83:9\n+  --> $DIR/non_expressive_names.rs:72:9\n    |\n-83 |     let parsee: i32;\n+72 |     let parsee: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/non_expressive_names.rs:97:16\n+  --> $DIR/non_expressive_names.rs:86:16\n    |\n-97 |         bpple: sprang } = unimplemented!();\n+86 |         bpple: sprang } = unimplemented!();\n    |                ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/non_expressive_names.rs:96:22\n+  --> $DIR/non_expressive_names.rs:85:22\n    |\n-96 |     let Foo { apple: spring,\n+85 |     let Foo { apple: spring,\n    |                      ^^^^^^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:131:17\n+   --> $DIR/non_expressive_names.rs:120:17\n     |\n-131 |             let e: i32;\n+120 |             let e: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n@@ -121,25 +121,25 @@ note: lint level defined here\n     |         ^^^^^^\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:135:17\n+   --> $DIR/non_expressive_names.rs:123:17\n     |\n-135 |             let e: i32;\n+123 |             let e: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n \n error: 6th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:137:17\n+   --> $DIR/non_expressive_names.rs:124:17\n     |\n-137 |             let f: i32;\n+124 |             let f: i32;\n     |                 ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]\n \n error: 5th binding whose name is just one char\n-   --> $DIR/non_expressive_names.rs:142:13\n+   --> $DIR/non_expressive_names.rs:129:13\n     |\n-142 |             e => panic!(),\n+129 |             e => panic!(),\n     |             ^\n     |\n     = note: #[deny(many_single_char_names)] implied by #[deny(clippy)]"}, {"sha": "e8a55a552d4e1de3fc1826fd837c21350e33ebdf", "filename": "tests/ui/ok_if_let.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,7 +5,6 @@\n \n fn str_to_int(x: &str) -> i32 {\n     if let Some(y) = x.parse().ok() {\n-\n         y\n     } else {\n         0"}, {"sha": "bf58e1281cf2a83d9734d6385f00a46ee45f2482", "filename": "tests/ui/ok_if_let.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fok_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fok_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,11 +2,10 @@ error: Matching on `Some` with `ok()` is redundant\n   --> $DIR/ok_if_let.rs:7:5\n    |\n 7  | /     if let Some(y) = x.parse().ok() {\n-8  | |\n-9  | |         y\n-10 | |     } else {\n-11 | |         0\n-12 | |     }\n+8  | |         y\n+9  | |     } else {\n+10 | |         0\n+11 | |     }\n    | |_____^\n    |\n note: lint level defined here"}, {"sha": "aadbd8d693a26b3ecfeabf674d62d5581e06126a", "filename": "tests/ui/partialeq_ne_impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -9,7 +9,6 @@ struct Foo;\n impl PartialEq for Foo {\n     fn eq(&self, _: &Foo) -> bool { true }\n     fn ne(&self, _: &Foo) -> bool { false }\n-\n }\n \n fn main() {}"}, {"sha": "c37769d816e546941226d1f08921dcafdcef8c7a", "filename": "tests/ui/precedence.rs", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,34 +6,15 @@\n #[allow(eq_op)]\n fn main() {\n     1 << 2 + 3;\n-\n-\n     1 + 2 << 3;\n-\n-\n     4 >> 1 + 1;\n-\n-\n     1 + 3 >> 2;\n-\n-\n     1 ^ 1 - 1;\n-\n-\n     3 | 2 - 1;\n-\n-\n     3 & 5 - 2;\n-\n-\n-\n     -1i32.abs();\n-\n-\n     -1f32.abs();\n \n-\n-\n     // These should not trigger an error\n     let _ = (-1i32).abs();\n     let _ = (-1f32).abs();"}, {"sha": "6090be0ab0f341cf439a2a82410dc16fb9c6cae9", "filename": "tests/ui/precedence.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprecedence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprecedence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprecedence.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,51 +11,51 @@ note: lint level defined here\n   |        ^^^^^^^^^^\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:11:5\n-   |\n-11 |     1 + 2 << 3;\n-   |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n+ --> $DIR/precedence.rs:9:5\n+  |\n+9 |     1 + 2 << 3;\n+  |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 2) << 3`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:14:5\n+  --> $DIR/precedence.rs:10:5\n    |\n-14 |     4 >> 1 + 1;\n+10 |     4 >> 1 + 1;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression `4 >> (1 + 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:17:5\n+  --> $DIR/precedence.rs:11:5\n    |\n-17 |     1 + 3 >> 2;\n+11 |     1 + 3 >> 2;\n    |     ^^^^^^^^^^ help: consider parenthesizing your expression `(1 + 3) >> 2`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:20:5\n+  --> $DIR/precedence.rs:12:5\n    |\n-20 |     1 ^ 1 - 1;\n+12 |     1 ^ 1 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `1 ^ (1 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:23:5\n+  --> $DIR/precedence.rs:13:5\n    |\n-23 |     3 | 2 - 1;\n+13 |     3 | 2 - 1;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `3 | (2 - 1)`\n \n error: operator precedence can trip the unwary\n-  --> $DIR/precedence.rs:26:5\n+  --> $DIR/precedence.rs:14:5\n    |\n-26 |     3 & 5 - 2;\n+14 |     3 & 5 - 2;\n    |     ^^^^^^^^^ help: consider parenthesizing your expression `3 & (5 - 2)`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:30:5\n+  --> $DIR/precedence.rs:15:5\n    |\n-30 |     -1i32.abs();\n+15 |     -1i32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1i32.abs())`\n \n error: unary minus has lower precedence than method call\n-  --> $DIR/precedence.rs:33:5\n+  --> $DIR/precedence.rs:16:5\n    |\n-33 |     -1f32.abs();\n+16 |     -1f32.abs();\n    |     ^^^^^^^^^^^ help: consider adding parentheses to clarify your intent `-(1f32.abs())`\n \n error: aborting due to 9 previous errors"}, {"sha": "7a53fef480dcea79b8074234f4868d4985496da7", "filename": "tests/ui/print.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -10,7 +10,6 @@ struct Foo;\n impl Display for Foo {\n     fn fmt(&self, f: &mut Formatter) -> Result {\n         write!(f, \"{:?}\", 43.1415)\n-\n     }\n }\n \n@@ -29,12 +28,8 @@ fn main() {\n \n     print!(\"Hello {:?}\", \"World\");\n \n-\n-\n     print!(\"Hello {:#?}\", \"#orld\");\n \n-\n-\n     assert_eq!(42, 1337);\n \n     vec![1, 2];"}, {"sha": "e21a49a7477d809951976bda12d2456219cb7648", "filename": "tests/ui/print.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fprint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,9 +11,9 @@ note: lint level defined here\n    |                       ^^^^^^^^^\n \n error: use of `println!`\n-  --> $DIR/print.rs:25:5\n+  --> $DIR/print.rs:24:5\n    |\n-25 |     println!(\"Hello\");\n+24 |     println!(\"Hello\");\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -23,39 +23,39 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^\n \n error: use of `print!`\n-  --> $DIR/print.rs:26:5\n+  --> $DIR/print.rs:25:5\n    |\n-26 |     print!(\"Hello\");\n+25 |     print!(\"Hello\");\n    |     ^^^^^^^^^^^^^^^^\n \n error: use of `print!`\n-  --> $DIR/print.rs:28:5\n+  --> $DIR/print.rs:27:5\n    |\n-28 |     print!(\"Hello {}\", \"World\");\n+27 |     print!(\"Hello {}\", \"World\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `print!`\n-  --> $DIR/print.rs:30:5\n+  --> $DIR/print.rs:29:5\n    |\n-30 |     print!(\"Hello {:?}\", \"World\");\n+29 |     print!(\"Hello {:?}\", \"World\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `Debug`-based formatting\n-  --> $DIR/print.rs:30:26\n+  --> $DIR/print.rs:29:26\n    |\n-30 |     print!(\"Hello {:?}\", \"World\");\n+29 |     print!(\"Hello {:?}\", \"World\");\n    |                          ^^^^^^^\n \n error: use of `print!`\n-  --> $DIR/print.rs:34:5\n+  --> $DIR/print.rs:31:5\n    |\n-34 |     print!(\"Hello {:#?}\", \"#orld\");\n+31 |     print!(\"Hello {:#?}\", \"#orld\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of `Debug`-based formatting\n-  --> $DIR/print.rs:34:27\n+  --> $DIR/print.rs:31:27\n    |\n-34 |     print!(\"Hello {:#?}\", \"#orld\");\n+31 |     print!(\"Hello {:#?}\", \"#orld\");\n    |                           ^^^^^^^\n \n error: aborting due to 8 previous errors"}, {"sha": "30a8de4fd1c6acdbfca9e95703df0b118da927fb", "filename": "tests/ui/redundant_closure_call.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fredundant_closure_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fredundant_closure_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,9 +6,6 @@\n fn main() {\n \tlet a = (|| 42)();\n \n-\n-\n-\n \tlet mut i = 1;\n \tlet k = (|m| m+1)(i);\n \n@@ -22,4 +19,3 @@ fn main() {\n \n \ti = closure(4);\n }\n-"}, {"sha": "591a48a1a3825266a291532e826c90d435c60180", "filename": "tests/ui/redundant_closure_call.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fredundant_closure_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fredundant_closure_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_closure_call.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -1,7 +1,7 @@\n error: Closure called just once immediately after it was declared\n-  --> $DIR/redundant_closure_call.rs:18:2\n+  --> $DIR/redundant_closure_call.rs:15:2\n    |\n-18 | \\ti = closure();\n+15 | \\ti = closure();\n    | \\t^^^^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -11,9 +11,9 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: Closure called just once immediately after it was declared\n-  --> $DIR/redundant_closure_call.rs:21:2\n+  --> $DIR/redundant_closure_call.rs:18:2\n    |\n-21 | \\ti = closure(3);\n+18 | \\ti = closure(3);\n    | \\t^^^^^^^^^^^^^^\n \n error: Try not to call a closure in the expression where it is declared.\n@@ -23,15 +23,15 @@ error: Try not to call a closure in the expression where it is declared.\n   | \\t        ^^^^^^^^^ help: Try doing something like:  `42`\n \n error: Try not to call a closure in the expression where it is declared.\n-  --> $DIR/redundant_closure_call.rs:13:10\n+  --> $DIR/redundant_closure_call.rs:10:10\n    |\n-13 | \\tlet k = (|m| m+1)(i);\n+10 | \\tlet k = (|m| m+1)(i);\n    | \\t        ^^^^^^^^^^^^\n \n error: Try not to call a closure in the expression where it is declared.\n-  --> $DIR/redundant_closure_call.rs:15:6\n+  --> $DIR/redundant_closure_call.rs:12:6\n    |\n-15 | \\tk = (|a,b| a*b)(1,5);\n+12 | \\tk = (|a,b| a*b)(1,5);\n    | \\t    ^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "6928f16d10ac06f98626d6603c569818d3a566fd", "filename": "tests/ui/reference.rs", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -18,71 +18,38 @@ fn main() {\n \n     let b = *&a;\n \n-\n-\n-\n     let b = *&get_number();\n \n-\n-\n-\n     let b = *get_reference(&a);\n \n     let bytes : Vec<usize> = vec![1, 2, 3, 4];\n     let b = *&bytes[1..2][0];\n \n-\n-\n-\n     //This produces a suggestion of 'let b = (a);' which\n     //will trigger the 'unused_parens' lint\n     let b = *&(a);\n \n-\n-\n-\n     let b = *(&a);\n \n-\n-\n-\n     let b = *((&a));\n \n-\n-\n-\n     let b = *&&a;\n \n-\n-\n-\n     let b = **&aref;\n \n-\n-\n-\n     //This produces a suggestion of 'let b = *&a;' which\n     //will trigger the 'deref_addrof' lint again\n     let b = **&&a;\n \n-\n-\n-\n     {\n         let mut x = 10;\n         let y = *&mut x;\n-\n-\n-\n     }\n \n     {\n         //This produces a suggestion of 'let y = *&mut x' which\n         //will trigger the 'deref_addrof' lint again\n         let mut x = 10;\n         let y = **&mut &mut x;\n-\n-\n-\n     }\n }"}, {"sha": "b25f7737c790e826f8ba7ff564d4e8bd979bac3e", "filename": "tests/ui/reference.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Freference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Freference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freference.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,63 +11,63 @@ note: lint level defined here\n    |        ^^^^^^^^^^^^\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:24:13\n+  --> $DIR/reference.rs:21:13\n    |\n-24 |     let b = *&get_number();\n+21 |     let b = *&get_number();\n    |             ^^^^^^^^^^^^^^ help: try this `get_number()`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:32:13\n+  --> $DIR/reference.rs:26:13\n    |\n-32 |     let b = *&bytes[1..2][0];\n+26 |     let b = *&bytes[1..2][0];\n    |             ^^^^^^^^^^^^^^^^ help: try this `bytes[1..2][0]`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:39:13\n+  --> $DIR/reference.rs:30:13\n    |\n-39 |     let b = *&(a);\n+30 |     let b = *&(a);\n    |             ^^^^^ help: try this `(a)`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:44:13\n+  --> $DIR/reference.rs:32:13\n    |\n-44 |     let b = *(&a);\n+32 |     let b = *(&a);\n    |             ^^^^^ help: try this `a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:49:13\n+  --> $DIR/reference.rs:34:13\n    |\n-49 |     let b = *((&a));\n+34 |     let b = *((&a));\n    |             ^^^^^^^ help: try this `a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:54:13\n+  --> $DIR/reference.rs:36:13\n    |\n-54 |     let b = *&&a;\n+36 |     let b = *&&a;\n    |             ^^^^ help: try this `&a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:59:14\n+  --> $DIR/reference.rs:38:14\n    |\n-59 |     let b = **&aref;\n+38 |     let b = **&aref;\n    |              ^^^^^^ help: try this `aref`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:66:14\n+  --> $DIR/reference.rs:42:14\n    |\n-66 |     let b = **&&a;\n+42 |     let b = **&&a;\n    |              ^^^^ help: try this `&a`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:73:17\n+  --> $DIR/reference.rs:46:17\n    |\n-73 |         let y = *&mut x;\n+46 |         let y = *&mut x;\n    |                 ^^^^^^^ help: try this `x`\n \n error: immediately dereferencing a reference\n-  --> $DIR/reference.rs:83:18\n+  --> $DIR/reference.rs:53:18\n    |\n-83 |         let y = **&mut &mut x;\n+53 |         let y = **&mut &mut x;\n    |                  ^^^^^^^^^^^^ help: try this `&mut x`\n \n error: aborting due to 11 previous errors"}, {"sha": "154fef54cea9bf47c4fc9fb981f7e750f8ef2066", "filename": "tests/ui/regex.rs", "status": "modified", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -14,24 +14,16 @@ const NOT_A_REAL_REGEX : &'static str = \"foobar\";\n \n fn syntax_error() {\n     let pipe_in_wrong_position = Regex::new(\"|\");\n-\n     let pipe_in_wrong_position_builder = RegexBuilder::new(\"|\");\n-\n     let wrong_char_ranice = Regex::new(\"[z-a]\");\n-\n     let some_unicode = Regex::new(\"[\u00e9-\u00e8]\");\n \n-\n     let some_regex = Regex::new(OPENING_PAREN);\n \n-\n     let binary_pipe_in_wrong_position = BRegex::new(\"|\");\n-\n     let some_binary_regex = BRegex::new(OPENING_PAREN);\n-\n     let some_binary_regex_builder = BRegexBuilder::new(OPENING_PAREN);\n \n-\n     let closing_paren = \")\";\n     let not_linted = Regex::new(closing_paren);\n \n@@ -46,62 +38,38 @@ fn syntax_error() {\n \n     let set_error = RegexSet::new(&[\n         OPENING_PAREN,\n-\n         r\"[a-z]+\\.(com|org|net)\",\n     ]);\n     let bset_error = BRegexSet::new(&[\n         OPENING_PAREN,\n-\n         r\"[a-z]+\\.(com|org|net)\",\n     ]);\n }\n \n fn trivial_regex() {\n     let trivial_eq = Regex::new(\"^foobar$\");\n \n-\n-\n     let trivial_eq_builder = RegexBuilder::new(\"^foobar$\");\n \n-\n-\n     let trivial_starts_with = Regex::new(\"^foobar\");\n \n-\n-\n     let trivial_ends_with = Regex::new(\"foobar$\");\n \n-\n-\n     let trivial_contains = Regex::new(\"foobar\");\n \n-\n-\n     let trivial_contains = Regex::new(NOT_A_REAL_REGEX);\n \n-\n-\n     let trivial_backslash = Regex::new(\"a\\\\.b\");\n \n-\n-\n     // unlikely corner cases\n     let trivial_empty = Regex::new(\"\");\n \n-\n-\n     let trivial_empty = Regex::new(\"^\");\n \n-\n-\n     let trivial_empty = Regex::new(\"^$\");\n \n-\n-\n     let binary_trivial_empty = BRegex::new(\"^$\");\n \n-\n-\n     // non-trivial regexes\n     let non_trivial_dot = Regex::new(\"a.b\");\n     let non_trivial_dot_builder = RegexBuilder::new(\"a.b\");"}, {"sha": "ad9e7ba4c75a6561be906d0be813434e86835e12", "filename": "tests/ui/regex.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fregex.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fregex.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregex.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -7,81 +7,81 @@ error: regex syntax error: empty alternate\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error: empty alternate\n-  --> $DIR/regex.rs:18:60\n+  --> $DIR/regex.rs:17:60\n    |\n-18 |     let pipe_in_wrong_position_builder = RegexBuilder::new(\"|\");\n+17 |     let pipe_in_wrong_position_builder = RegexBuilder::new(\"|\");\n    |                                                            ^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error: invalid character class range\n-  --> $DIR/regex.rs:20:40\n+  --> $DIR/regex.rs:18:40\n    |\n-20 |     let wrong_char_ranice = Regex::new(\"[z-a]\");\n+18 |     let wrong_char_ranice = Regex::new(\"[z-a]\");\n    |                                        ^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error: invalid character class range\n-  --> $DIR/regex.rs:22:35\n+  --> $DIR/regex.rs:19:35\n    |\n-22 |     let some_unicode = Regex::new(\"[\u00e9-\u00e8]\");\n+19 |     let some_unicode = Regex::new(\"[\u00e9-\u00e8]\");\n    |                                   ^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error on position 0: unclosed parenthesis\n-  --> $DIR/regex.rs:25:33\n+  --> $DIR/regex.rs:21:33\n    |\n-25 |     let some_regex = Regex::new(OPENING_PAREN);\n+21 |     let some_regex = Regex::new(OPENING_PAREN);\n    |                                 ^^^^^^^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error: empty alternate\n-  --> $DIR/regex.rs:28:53\n+  --> $DIR/regex.rs:23:53\n    |\n-28 |     let binary_pipe_in_wrong_position = BRegex::new(\"|\");\n+23 |     let binary_pipe_in_wrong_position = BRegex::new(\"|\");\n    |                                                     ^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error on position 0: unclosed parenthesis\n-  --> $DIR/regex.rs:30:41\n+  --> $DIR/regex.rs:24:41\n    |\n-30 |     let some_binary_regex = BRegex::new(OPENING_PAREN);\n+24 |     let some_binary_regex = BRegex::new(OPENING_PAREN);\n    |                                         ^^^^^^^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error on position 0: unclosed parenthesis\n-  --> $DIR/regex.rs:32:56\n+  --> $DIR/regex.rs:25:56\n    |\n-32 |     let some_binary_regex_builder = BRegexBuilder::new(OPENING_PAREN);\n+25 |     let some_binary_regex_builder = BRegexBuilder::new(OPENING_PAREN);\n    |                                                        ^^^^^^^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error on position 0: unclosed parenthesis\n-  --> $DIR/regex.rs:48:9\n+  --> $DIR/regex.rs:40:9\n    |\n-48 |         OPENING_PAREN,\n+40 |         OPENING_PAREN,\n    |         ^^^^^^^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: regex syntax error on position 0: unclosed parenthesis\n-  --> $DIR/regex.rs:53:9\n+  --> $DIR/regex.rs:44:9\n    |\n-53 |         OPENING_PAREN,\n+44 |         OPENING_PAREN,\n    |         ^^^^^^^^^^^^^\n    |\n    = note: #[deny(invalid_regex)] on by default\n \n error: trivial regex\n-  --> $DIR/regex.rs:60:33\n+  --> $DIR/regex.rs:50:33\n    |\n-60 |     let trivial_eq = Regex::new(\"^foobar$\");\n+50 |     let trivial_eq = Regex::new(\"^foobar$\");\n    |                                 ^^^^^^^^^^\n    |\n note: lint level defined here\n@@ -92,84 +92,84 @@ note: lint level defined here\n    = help: consider using consider using `==` on `str`s\n \n error: trivial regex\n-  --> $DIR/regex.rs:64:48\n+  --> $DIR/regex.rs:52:48\n    |\n-64 |     let trivial_eq_builder = RegexBuilder::new(\"^foobar$\");\n+52 |     let trivial_eq_builder = RegexBuilder::new(\"^foobar$\");\n    |                                                ^^^^^^^^^^\n    |\n    = help: consider using consider using `==` on `str`s\n \n error: trivial regex\n-  --> $DIR/regex.rs:68:42\n+  --> $DIR/regex.rs:54:42\n    |\n-68 |     let trivial_starts_with = Regex::new(\"^foobar\");\n+54 |     let trivial_starts_with = Regex::new(\"^foobar\");\n    |                                          ^^^^^^^^^\n    |\n    = help: consider using consider using `str::starts_with`\n \n error: trivial regex\n-  --> $DIR/regex.rs:72:40\n+  --> $DIR/regex.rs:56:40\n    |\n-72 |     let trivial_ends_with = Regex::new(\"foobar$\");\n+56 |     let trivial_ends_with = Regex::new(\"foobar$\");\n    |                                        ^^^^^^^^^\n    |\n    = help: consider using consider using `str::ends_with`\n \n error: trivial regex\n-  --> $DIR/regex.rs:76:39\n+  --> $DIR/regex.rs:58:39\n    |\n-76 |     let trivial_contains = Regex::new(\"foobar\");\n+58 |     let trivial_contains = Regex::new(\"foobar\");\n    |                                       ^^^^^^^^\n    |\n    = help: consider using consider using `str::contains`\n \n error: trivial regex\n-  --> $DIR/regex.rs:80:39\n+  --> $DIR/regex.rs:60:39\n    |\n-80 |     let trivial_contains = Regex::new(NOT_A_REAL_REGEX);\n+60 |     let trivial_contains = Regex::new(NOT_A_REAL_REGEX);\n    |                                       ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using consider using `str::contains`\n \n error: trivial regex\n-  --> $DIR/regex.rs:84:40\n+  --> $DIR/regex.rs:62:40\n    |\n-84 |     let trivial_backslash = Regex::new(\"a//.b\");\n+62 |     let trivial_backslash = Regex::new(\"a//.b\");\n    |                                        ^^^^^^^\n    |\n    = help: consider using consider using `str::contains`\n \n error: trivial regex\n-  --> $DIR/regex.rs:89:36\n+  --> $DIR/regex.rs:65:36\n    |\n-89 |     let trivial_empty = Regex::new(\"\");\n+65 |     let trivial_empty = Regex::new(\"\");\n    |                                    ^^\n    |\n    = help: consider using the regex is unlikely to be useful as it is\n \n error: trivial regex\n-  --> $DIR/regex.rs:93:36\n+  --> $DIR/regex.rs:67:36\n    |\n-93 |     let trivial_empty = Regex::new(\"^\");\n+67 |     let trivial_empty = Regex::new(\"^\");\n    |                                    ^^^\n    |\n    = help: consider using the regex is unlikely to be useful as it is\n \n error: trivial regex\n-  --> $DIR/regex.rs:97:36\n+  --> $DIR/regex.rs:69:36\n    |\n-97 |     let trivial_empty = Regex::new(\"^$\");\n+69 |     let trivial_empty = Regex::new(\"^$\");\n    |                                    ^^^^\n    |\n    = help: consider using consider using `str::is_empty`\n \n error: trivial regex\n-   --> $DIR/regex.rs:101:44\n-    |\n-101 |     let binary_trivial_empty = BRegex::new(\"^$\");\n-    |                                            ^^^^\n-    |\n-    = help: consider using consider using `str::is_empty`\n+  --> $DIR/regex.rs:71:44\n+   |\n+71 |     let binary_trivial_empty = BRegex::new(\"^$\");\n+   |                                            ^^^^\n+   |\n+   = help: consider using consider using `str::is_empty`\n \n error: aborting due to 21 previous errors\n "}, {"sha": "8c4143b0dcf3af693ec3ff88dbb83bd92c421fe0", "filename": "tests/ui/serde.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -37,7 +37,6 @@ impl<'de> serde::de::Visitor<'de> for B {\n     }\n \n     fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n-\n         where E: serde::de::Error,\n     {\n         unimplemented!()"}, {"sha": "8b7daae99094adc579d3228d6e326dcb9e0fc963", "filename": "tests/ui/serde.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fserde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fserde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,11 +2,10 @@ error: you should not implement `visit_string` without also implementing `visit_\n   --> $DIR/serde.rs:39:5\n    |\n 39 | /     fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n-40 | |\n-41 | |         where E: serde::de::Error,\n-42 | |     {\n-43 | |         unimplemented!()\n-44 | |     }\n+40 | |         where E: serde::de::Error,\n+41 | |     {\n+42 | |         unimplemented!()\n+43 | |     }\n    | |_____^\n    |\n note: lint level defined here"}, {"sha": "c51bdcbe6930546f23ecd205dbcabeb85e4e10b7", "filename": "tests/ui/short_circuit_statement.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fshort_circuit_statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fshort_circuit_statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,17 +5,8 @@\n \n fn main() {\n     f() && g();\n-\n-\n-\n     f() || g();\n-\n-\n-\n     1 == 2 || g();\n-\n-\n-\n }\n \n fn f() -> bool {"}, {"sha": "60b7ca801ab3daa885f4933728fb9d138b895d4d", "filename": "tests/ui/short_circuit_statement.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fshort_circuit_statement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fshort_circuit_statement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshort_circuit_statement.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,16 +11,16 @@ note: lint level defined here\n   |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n-  --> $DIR/short_circuit_statement.rs:11:5\n-   |\n-11 |     f() || g();\n-   |     ^^^^^^^^^^^ help: replace it with `if !f() { g(); }`\n+ --> $DIR/short_circuit_statement.rs:8:5\n+  |\n+8 |     f() || g();\n+  |     ^^^^^^^^^^^ help: replace it with `if !f() { g(); }`\n \n error: boolean short circuit operator in statement may be clearer using an explicit test\n-  --> $DIR/short_circuit_statement.rs:15:5\n-   |\n-15 |     1 == 2 || g();\n-   |     ^^^^^^^^^^^^^^ help: replace it with `if !(1 == 2) { g(); }`\n+ --> $DIR/short_circuit_statement.rs:9:5\n+  |\n+9 |     1 == 2 || g();\n+  |     ^^^^^^^^^^^^^^ help: replace it with `if !(1 == 2) { g(); }`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b4aef1ba62cf6813d4e4b0f5dfe6e59d141a1c4d", "filename": "tests/ui/strings.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -49,9 +49,6 @@ fn both() {\n fn str_lit_as_bytes() {\n     let bs = \"hello there\".as_bytes();\n \n-\n-\n-\n     // no warning, because this cannot be written as a byte string literal:\n     let ubs = \"\u2603\".as_bytes();\n \n@@ -66,8 +63,5 @@ fn main() {\n     // the add is only caught for `String`\n     let mut x = 1;\n     ; x = x + 1;\n-\n-\n-\n     assert_eq!(2, x);\n }"}, {"sha": "197d52a8781e2745d9d489cd8ee87a7f473af88e", "filename": "tests/ui/strings.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fstrings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fstrings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstrings.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -65,9 +65,9 @@ note: lint level defined here\n    |        ^^^^^^^^^^^^^^^^^^^\n \n warning: manual implementation of an assign operation\n-  --> $DIR/strings.rs:68:7\n+  --> $DIR/strings.rs:65:7\n    |\n-68 |     ; x = x + 1;\n+65 |     ; x = x + 1;\n    |       ^^^^^^^^^ help: replace it with `x += 1`\n    |\n    = note: #[warn(assign_op_pattern)] on by default"}, {"sha": "0c23af966eb6a067798b00a273c670de4c77507b", "filename": "tests/ui/swap.rs", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -12,9 +12,6 @@ fn array() {\n     foo[0] = foo[1];\n     foo[1] = temp;\n \n-\n-\n-\n     foo.swap(0, 1);\n }\n \n@@ -24,9 +21,6 @@ fn slice() {\n     foo[0] = foo[1];\n     foo[1] = temp;\n \n-\n-\n-\n     foo.swap(0, 1);\n }\n \n@@ -36,9 +30,6 @@ fn vec() {\n     foo[0] = foo[1];\n     foo[1] = temp;\n \n-\n-\n-\n     foo.swap(0, 1);\n }\n \n@@ -53,32 +44,16 @@ fn main() {\n     a = b;\n     b = a;\n \n-\n-\n-\n-\n     ; let t = a;\n     a = b;\n     b = t;\n \n-\n-\n-\n-\n     let mut c = Foo(42);\n \n     c.0 = a;\n     a = c.0;\n \n-\n-\n-\n-\n     ; let t = c.0;\n     c.0 = a;\n     a = t;\n-\n-\n-\n-\n }"}, {"sha": "a6a0e8bbae936f93094edf79dfed3b26d356019a", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -14,54 +14,54 @@ note: lint level defined here\n    |         ^^^^^^\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:23:5\n+  --> $DIR/swap.rs:20:5\n    |\n-23 | /     let temp = foo[0];\n-24 | |     foo[0] = foo[1];\n-25 | |     foo[1] = temp;\n+20 | /     let temp = foo[0];\n+21 | |     foo[0] = foo[1];\n+22 | |     foo[1] = temp;\n    | |_________________^ help: try `foo.swap(0, 1)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n \n error: this looks like you are swapping elements of `foo` manually\n-  --> $DIR/swap.rs:35:5\n+  --> $DIR/swap.rs:29:5\n    |\n-35 | /     let temp = foo[0];\n-36 | |     foo[0] = foo[1];\n-37 | |     foo[1] = temp;\n+29 | /     let temp = foo[0];\n+30 | |     foo[0] = foo[1];\n+31 | |     foo[1] = temp;\n    | |_________________^ help: try `foo.swap(0, 1)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n \n error: this looks like you are swapping `a` and `b` manually\n-  --> $DIR/swap.rs:60:7\n+  --> $DIR/swap.rs:47:7\n    |\n-60 |       ; let t = a;\n+47 |       ; let t = a;\n    |  _______^\n-61 | |     a = b;\n-62 | |     b = t;\n+48 | |     a = b;\n+49 | |     b = t;\n    | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are swapping `c.0` and `a` manually\n-  --> $DIR/swap.rs:77:7\n+  --> $DIR/swap.rs:56:7\n    |\n-77 |       ; let t = c.0;\n+56 |       ; let t = c.0;\n    |  _______^\n-78 | |     c.0 = a;\n-79 | |     a = t;\n+57 | |     c.0 = a;\n+58 | |     a = t;\n    | |_________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `a` and `b`\n-  --> $DIR/swap.rs:53:5\n+  --> $DIR/swap.rs:44:5\n    |\n-53 | /     a = b;\n-54 | |     b = a;\n+44 | /     a = b;\n+45 | |     b = a;\n    | |_________^ help: try `std::mem::swap(&mut a, &mut b)`\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]\n@@ -73,10 +73,10 @@ note: lint level defined here\n    = note: or maybe you should use `std::mem::replace`?\n \n error: this looks like you are trying to swap `c.0` and `a`\n-  --> $DIR/swap.rs:70:5\n+  --> $DIR/swap.rs:53:5\n    |\n-70 | /     c.0 = a;\n-71 | |     a = c.0;\n+53 | /     c.0 = a;\n+54 | |     a = c.0;\n    | |___________^ help: try `std::mem::swap(&mut c.0, &mut a)`\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]"}, {"sha": "7df2f5c86b73f2f678fd357ef4f04e4617bde9bc", "filename": "tests/ui/toplevel_ref_arg.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftoplevel_ref_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftoplevel_ref_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -17,24 +17,12 @@ fn main() {\n \n   let ref x = 1;\n \n-\n-\n-\n   let ref y: (&_, u8) = (&1, 2);\n \n-\n-\n-\n   let ref z = 1 + 2;\n \n-\n-\n-\n   let ref mut z = 1 + 2;\n \n-\n-\n-\n   let (ref x, _) = (1,2); // okay, not top level\n   println!(\"The answer is {}.\", x);\n }"}, {"sha": "8e01e76897db3826751d3fa4a9a6a1993acbfe08", "filename": "tests/ui/toplevel_ref_arg.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftoplevel_ref_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftoplevel_ref_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftoplevel_ref_arg.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -20,25 +20,25 @@ error: `ref` on an entire `let` pattern is discouraged, take a reference with `&\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n-  --> $DIR/toplevel_ref_arg.rs:23:7\n+  --> $DIR/toplevel_ref_arg.rs:20:7\n    |\n-23 |   let ref y: (&_, u8) = (&1, 2);\n+20 |   let ref y: (&_, u8) = (&1, 2);\n    |   ----^^^^^--------------------- help: try `let y: &(&_, u8) = &(&1, 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n-  --> $DIR/toplevel_ref_arg.rs:28:7\n+  --> $DIR/toplevel_ref_arg.rs:22:7\n    |\n-28 |   let ref z = 1 + 2;\n+22 |   let ref z = 1 + 2;\n    |   ----^^^^^--------- help: try `let z = &(1 + 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]\n \n error: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead\n-  --> $DIR/toplevel_ref_arg.rs:33:7\n+  --> $DIR/toplevel_ref_arg.rs:24:7\n    |\n-33 |   let ref mut z = 1 + 2;\n+24 |   let ref mut z = 1 + 2;\n    |   ----^^^^^^^^^--------- help: try `let z = &mut (1 + 2);`\n    |\n    = note: #[deny(toplevel_ref_arg)] implied by #[deny(clippy)]"}, {"sha": "b70b846d32dc723b588619b806fdb5caddf84da7", "filename": "tests/ui/transmute.rs", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -21,67 +21,36 @@ fn my_vec() -> MyVec<i32> {\n unsafe fn _generic<'a, T, U: 'a>(t: &'a T) {\n     let _: &'a T = core::intrinsics::transmute(t);\n \n-\n     let _: &'a U = core::intrinsics::transmute(t);\n \n     let _: *const T = core::intrinsics::transmute(t);\n \n-\n-\n-\n     let _: *mut T = core::intrinsics::transmute(t);\n \n-\n-\n-\n     let _: *const U = core::intrinsics::transmute(t);\n-\n-\n-\n }\n \n #[deny(transmute_ptr_to_ref)]\n unsafe fn _ptr_to_ref<T, U>(p: *const T, m: *mut T, o: *const U, om: *mut U) {\n     let _: &T = std::mem::transmute(p);\n-\n-\n-\n     let _: &T = &*p;\n \n     let _: &mut T = std::mem::transmute(m);\n-\n-\n-\n     let _: &mut T = &mut *m;\n \n     let _: &T = std::mem::transmute(m);\n-\n-\n-\n     let _: &T = &*m;\n \n     let _: &mut T = std::mem::transmute(p as *mut T);\n-\n-\n-\n     let _ = &mut *(p as *mut T);\n \n     let _: &T = std::mem::transmute(o);\n-\n-\n-\n     let _: &T = &*(o as *const T);\n \n     let _: &mut T = std::mem::transmute(om);\n-\n-\n-\n     let _: &mut T = &mut *(om as *mut T);\n \n     let _: &T = std::mem::transmute(om);\n-\n-\n-\n     let _: &T = &*(om as *const T);\n }\n \n@@ -94,40 +63,26 @@ fn issue1231() {\n     let raw = 42 as *const i32;\n     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n \n-\n-\n-\n     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n \n-\n-\n-\n     type Bar<'a> = &'a u8;\n     let raw = 42 as *const i32;\n     unsafe { std::mem::transmute::<_, Bar>(raw) };\n-\n-\n-\n }\n \n #[deny(useless_transmute)]\n fn useless() {\n     unsafe {\n         let _: Vec<i32> = core::intrinsics::transmute(my_vec());\n \n-\n         let _: Vec<i32> = core::mem::transmute(my_vec());\n \n-\n         let _: Vec<i32> = std::intrinsics::transmute(my_vec());\n \n-\n         let _: Vec<i32> = std::mem::transmute(my_vec());\n \n-\n         let _: Vec<i32> = my_transmute(my_vec());\n \n-\n         let _: Vec<u32> = core::intrinsics::transmute(my_vec());\n         let _: Vec<u32> = core::mem::transmute(my_vec());\n         let _: Vec<u32> = std::intrinsics::transmute(my_vec());\n@@ -136,14 +91,10 @@ fn useless() {\n \n         let _: *const usize = std::mem::transmute(5_isize);\n \n-\n-\n         let _  = 5_isize as *const usize;\n \n         let _: *const usize = std::mem::transmute(1+1usize);\n \n-\n-\n         let _  = (1+1_usize) as *const usize;\n     }\n }\n@@ -159,15 +110,11 @@ fn crosspointer() {\n     unsafe {\n         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n \n-\n         let _: Usize = core::intrinsics::transmute(int_mut_ptr);\n \n-\n         let _: *const Usize = core::intrinsics::transmute(my_int());\n \n-\n         let _: *mut Usize = core::intrinsics::transmute(my_int());\n-\n     }\n }\n "}, {"sha": "b2bce16abe00b32dde3e15f9641006c445dbe510", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 77, "deletions": 77, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,171 +11,171 @@ note: lint level defined here\n    |        ^^^^^^^^^^^^^^^^^\n \n error: transmute from a reference to a pointer\n-  --> $DIR/transmute.rs:27:23\n+  --> $DIR/transmute.rs:26:23\n    |\n-27 |     let _: *const T = core::intrinsics::transmute(t);\n+26 |     let _: *const T = core::intrinsics::transmute(t);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T`\n \n error: transmute from a reference to a pointer\n-  --> $DIR/transmute.rs:32:21\n+  --> $DIR/transmute.rs:28:21\n    |\n-32 |     let _: *mut T = core::intrinsics::transmute(t);\n+28 |     let _: *mut T = core::intrinsics::transmute(t);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *mut T`\n \n error: transmute from a reference to a pointer\n-  --> $DIR/transmute.rs:37:23\n+  --> $DIR/transmute.rs:30:23\n    |\n-37 |     let _: *const U = core::intrinsics::transmute(t);\n+30 |     let _: *const U = core::intrinsics::transmute(t);\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *const U`\n \n error: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n-  --> $DIR/transmute.rs:45:17\n+  --> $DIR/transmute.rs:35:17\n    |\n-45 |     let _: &T = std::mem::transmute(p);\n+35 |     let _: &T = std::mem::transmute(p);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*p`\n    |\n note: lint level defined here\n-  --> $DIR/transmute.rs:43:8\n+  --> $DIR/transmute.rs:33:8\n    |\n-43 | #[deny(transmute_ptr_to_ref)]\n+33 | #[deny(transmute_ptr_to_ref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n-  --> $DIR/transmute.rs:51:21\n+  --> $DIR/transmute.rs:38:21\n    |\n-51 |     let _: &mut T = std::mem::transmute(m);\n+38 |     let _: &mut T = std::mem::transmute(m);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&T`)\n-  --> $DIR/transmute.rs:57:17\n+  --> $DIR/transmute.rs:41:17\n    |\n-57 |     let _: &T = std::mem::transmute(m);\n+41 |     let _: &T = std::mem::transmute(m);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*m`\n \n error: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n-  --> $DIR/transmute.rs:63:21\n+  --> $DIR/transmute.rs:44:21\n    |\n-63 |     let _: &mut T = std::mem::transmute(p as *mut T);\n+44 |     let _: &mut T = std::mem::transmute(p as *mut T);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(p as *mut T)`\n \n error: transmute from a pointer type (`*const U`) to a reference type (`&T`)\n-  --> $DIR/transmute.rs:69:17\n+  --> $DIR/transmute.rs:47:17\n    |\n-69 |     let _: &T = std::mem::transmute(o);\n+47 |     let _: &T = std::mem::transmute(o);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(o as *const T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&mut T`)\n-  --> $DIR/transmute.rs:75:21\n+  --> $DIR/transmute.rs:50:21\n    |\n-75 |     let _: &mut T = std::mem::transmute(om);\n+50 |     let _: &mut T = std::mem::transmute(om);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(om as *mut T)`\n \n error: transmute from a pointer type (`*mut U`) to a reference type (`&T`)\n-  --> $DIR/transmute.rs:81:17\n+  --> $DIR/transmute.rs:53:17\n    |\n-81 |     let _: &T = std::mem::transmute(om);\n+53 |     let _: &T = std::mem::transmute(om);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(om as *const T)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, u8>`)\n-  --> $DIR/transmute.rs:95:32\n+  --> $DIR/transmute.rs:64:32\n    |\n-95 |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n+64 |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<_>)`\n    |\n note: lint level defined here\n-  --> $DIR/transmute.rs:88:8\n+  --> $DIR/transmute.rs:57:8\n    |\n-88 | #[deny(transmute_ptr_to_ref)]\n+57 | #[deny(transmute_ptr_to_ref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, &u8>`)\n-   --> $DIR/transmute.rs:100:33\n-    |\n-100 |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n-    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<&_>)`\n+  --> $DIR/transmute.rs:66:33\n+   |\n+66 |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<&_>)`\n \n error: transmute from a pointer type (`*const i32`) to a reference type (`&u8`)\n-   --> $DIR/transmute.rs:107:14\n-    |\n-107 |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n-    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const u8)`\n+  --> $DIR/transmute.rs:70:14\n+   |\n+70 |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const u8)`\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n-   --> $DIR/transmute.rs:116:27\n-    |\n-116 |         let _: Vec<i32> = core::intrinsics::transmute(my_vec());\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-    |\n+  --> $DIR/transmute.rs:76:27\n+   |\n+76 |         let _: Vec<i32> = core::intrinsics::transmute(my_vec());\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n note: lint level defined here\n-   --> $DIR/transmute.rs:113:8\n-    |\n-113 | #[deny(useless_transmute)]\n-    |        ^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:73:8\n+   |\n+73 | #[deny(useless_transmute)]\n+   |        ^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n-   --> $DIR/transmute.rs:119:27\n-    |\n-119 |         let _: Vec<i32> = core::mem::transmute(my_vec());\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:78:27\n+   |\n+78 |         let _: Vec<i32> = core::mem::transmute(my_vec());\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n-   --> $DIR/transmute.rs:122:27\n-    |\n-122 |         let _: Vec<i32> = std::intrinsics::transmute(my_vec());\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:80:27\n+   |\n+80 |         let _: Vec<i32> = std::intrinsics::transmute(my_vec());\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n-   --> $DIR/transmute.rs:125:27\n-    |\n-125 |         let _: Vec<i32> = std::mem::transmute(my_vec());\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:82:27\n+   |\n+82 |         let _: Vec<i32> = std::mem::transmute(my_vec());\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`std::vec::Vec<i32>`) to itself\n-   --> $DIR/transmute.rs:128:27\n-    |\n-128 |         let _: Vec<i32> = my_transmute(my_vec());\n-    |                           ^^^^^^^^^^^^^^^^^^^^^^\n+  --> $DIR/transmute.rs:84:27\n+   |\n+84 |         let _: Vec<i32> = my_transmute(my_vec());\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from an integer to a pointer\n-   --> $DIR/transmute.rs:137:31\n-    |\n-137 |         let _: *const usize = std::mem::transmute(5_isize);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `5_isize as *const usize`\n+  --> $DIR/transmute.rs:92:31\n+   |\n+92 |         let _: *const usize = std::mem::transmute(5_isize);\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `5_isize as *const usize`\n \n error: transmute from an integer to a pointer\n-   --> $DIR/transmute.rs:143:31\n-    |\n-143 |         let _: *const usize = std::mem::transmute(1+1usize);\n-    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `(1+1usize) as *const usize`\n+  --> $DIR/transmute.rs:96:31\n+   |\n+96 |         let _: *const usize = std::mem::transmute(1+1usize);\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `(1+1usize) as *const usize`\n \n error: transmute from a type (`*const Usize`) to the type that it points to (`Usize`)\n-   --> $DIR/transmute.rs:160:24\n+   --> $DIR/transmute.rs:111:24\n     |\n-160 |         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n+111 |         let _: Usize = core::intrinsics::transmute(int_const_ptr);\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n note: lint level defined here\n-   --> $DIR/transmute.rs:153:8\n+   --> $DIR/transmute.rs:104:8\n     |\n-153 | #[deny(crosspointer_transmute)]\n+104 | #[deny(crosspointer_transmute)]\n     |        ^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`*mut Usize`) to the type that it points to (`Usize`)\n-   --> $DIR/transmute.rs:163:24\n+   --> $DIR/transmute.rs:113:24\n     |\n-163 |         let _: Usize = core::intrinsics::transmute(int_mut_ptr);\n+113 |         let _: Usize = core::intrinsics::transmute(int_mut_ptr);\n     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`Usize`) to a pointer to that type (`*const Usize`)\n-   --> $DIR/transmute.rs:166:31\n+   --> $DIR/transmute.rs:115:31\n     |\n-166 |         let _: *const Usize = core::intrinsics::transmute(my_int());\n+115 |         let _: *const Usize = core::intrinsics::transmute(my_int());\n     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: transmute from a type (`Usize`) to a pointer to that type (`*mut Usize`)\n-   --> $DIR/transmute.rs:169:29\n+   --> $DIR/transmute.rs:117:29\n     |\n-169 |         let _: *mut Usize = core::intrinsics::transmute(my_int());\n+117 |         let _: *mut Usize = core::intrinsics::transmute(my_int());\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 25 previous errors"}, {"sha": "f391b728ec5ee58e775aca6b7c6ee78fba02d10b", "filename": "tests/ui/transmute_32bit.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_32bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_32bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_32bit.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -7,14 +7,10 @@ fn main() {\n     unsafe {\n         let _: *const usize = std::mem::transmute(6.0f32);\n \n-\n         let _: *mut usize = std::mem::transmute(6.0f32);\n \n-\n         let _: *const usize = std::mem::transmute('x');\n \n-\n         let _: *mut usize = std::mem::transmute('x');\n-\n     }\n }"}, {"sha": "4caa9d1f30583368d1351ca7bc5a3d5e7dff72d8", "filename": "tests/ui/transmute_64bit.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_64bit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_64bit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -8,8 +8,6 @@ fn main() {\n     unsafe {\n         let _: *const usize = std::mem::transmute(6.0f64);\n \n-\n         let _: *mut usize = std::mem::transmute(6.0f64);\n-\n     }\n }"}, {"sha": "3d06348b147319e5358382edfae4260db0534244", "filename": "tests/ui/transmute_64bit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Ftransmute_64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_64bit.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,9 +11,9 @@ note: lint level defined here\n   |        ^^^^^^^^^^^^^^^\n \n error: transmute from a `f64` to a pointer\n-  --> $DIR/transmute_64bit.rs:12:29\n+  --> $DIR/transmute_64bit.rs:11:29\n    |\n-12 |         let _: *mut usize = std::mem::transmute(6.0f64);\n+11 |         let _: *mut usize = std::mem::transmute(6.0f64);\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "026057945395f5e1bf24f7700974d51371374a6d", "filename": "tests/ui/unicode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -4,7 +4,6 @@\n #[deny(zero_width_space)]\n fn zero() {\n     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n-\n     print!(\"This\\u{200B}is\\u{200B}fine\");\n }\n "}, {"sha": "62ada6fcb1c287c2bfd33e7329c03023a7f2b926", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -9,29 +9,29 @@ error: zero-width space detected\n           \"\"Here >/u{200B}< is a ZWS, and /u{200B}another\"\"\n \n error: non-nfc unicode sequence detected\n-  --> $DIR/unicode.rs:13:12\n+  --> $DIR/unicode.rs:12:12\n    |\n-13 |     print!(\"\u0300a\u0300h?\");\n+12 |     print!(\"\u0300a\u0300h?\");\n    |            ^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/unicode.rs:11:8\n+  --> $DIR/unicode.rs:10:8\n    |\n-11 | #[deny(unicode_not_nfc)]\n+10 | #[deny(unicode_not_nfc)]\n    |        ^^^^^^^^^^^^^^^\n    = help: Consider replacing the string with:\n            \"\"\u0300\u00e0h?\"\"\n \n error: literal non-ASCII character detected\n-  --> $DIR/unicode.rs:19:12\n+  --> $DIR/unicode.rs:18:12\n    |\n-19 |     print!(\"\u00dcben!\");\n+18 |     print!(\"\u00dcben!\");\n    |            ^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/unicode.rs:17:8\n+  --> $DIR/unicode.rs:16:8\n    |\n-17 | #[deny(non_ascii_literal)]\n+16 | #[deny(non_ascii_literal)]\n    |        ^^^^^^^^^^^^^^^^^\n    = help: Consider replacing the string with:\n            \"\"/u{dc}ben!\"\""}, {"sha": "98b9841c00a67452ec352367bb95e81550f3c138", "filename": "tests/ui/unsafe_removed_from_name.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -6,10 +6,8 @@\n \n use std::cell::{UnsafeCell as TotallySafeCell};\n \n-\n use std::cell::UnsafeCell as TotallySafeCellAgain;\n \n-\n // Shouldn't error\n use std::cell::{UnsafeCell as SuperDangerousUnsafeCell};\n use std::cell::{UnsafeCell as Dangerunsafe};\n@@ -24,7 +22,6 @@ mod mod_with_some_unsafe_things {\n \n use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n \n-\n // Shouldn't error\n use mod_with_some_unsafe_things::Safe as IPromiseItsSafeThisTime;\n use mod_with_some_unsafe_things::Unsafe as SuperUnsafeModThing;"}, {"sha": "de34d88e503da087385884aaa7fdb8cc57bca132", "filename": "tests/ui/unsafe_removed_from_name.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funsafe_removed_from_name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funsafe_removed_from_name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe_removed_from_name.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,15 +11,15 @@ note: lint level defined here\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: removed \"unsafe\" from the name of `UnsafeCell` in use as `TotallySafeCellAgain`\n-  --> $DIR/unsafe_removed_from_name.rs:10:1\n-   |\n-10 | use std::cell::UnsafeCell as TotallySafeCellAgain;\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+ --> $DIR/unsafe_removed_from_name.rs:9:1\n+  |\n+9 | use std::cell::UnsafeCell as TotallySafeCellAgain;\n+  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: removed \"unsafe\" from the name of `Unsafe` in use as `LieAboutModSafety`\n-  --> $DIR/unsafe_removed_from_name.rs:25:1\n+  --> $DIR/unsafe_removed_from_name.rs:23:1\n    |\n-25 | use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n+23 | use mod_with_some_unsafe_things::Unsafe as LieAboutModSafety;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors"}, {"sha": "0ee9069a17ce8a7ca733323c94d5643781867cad", "filename": "tests/ui/unused_io_amount.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -15,19 +15,15 @@ fn try_macro<T: io::Read + io::Write>(s: &mut T) -> io::Result<()> {\n \n fn question_mark<T: io::Read + io::Write>(s: &mut T) -> io::Result<()> {\n     s.write(b\"test\")?;\n-\n     let mut buf = [0u8; 4];\n     s.read(&mut buf)?;\n-\n     Ok(())\n }\n \n fn unwrap<T: io::Read + io::Write>(s: &mut T) {\n     s.write(b\"test\").unwrap();\n-\n     let mut buf = [0u8; 4];\n     s.read(&mut buf).unwrap();\n-\n }\n \n fn main() {"}, {"sha": "7a5643e831cadc313f2cd8c82793c5f75a9ba51c", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -25,25 +25,25 @@ error: handle written amount returned or use `Write::write_all` instead\n    = note: #[deny(unused_io_amount)] on by default\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:20:5\n+  --> $DIR/unused_io_amount.rs:19:5\n    |\n-20 |     s.read(&mut buf)?;\n+19 |     s.read(&mut buf)?;\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(unused_io_amount)] on by default\n \n error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:26:5\n+  --> $DIR/unused_io_amount.rs:24:5\n    |\n-26 |     s.write(b\"test\").unwrap();\n+24 |     s.write(b\"test\").unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(unused_io_amount)] on by default\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:29:5\n+  --> $DIR/unused_io_amount.rs:26:5\n    |\n-29 |     s.read(&mut buf).unwrap();\n+26 |     s.read(&mut buf).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: #[deny(unused_io_amount)] on by default"}, {"sha": "21d91bab6892d35a607d6327754d076190fe3605", "filename": "tests/ui/used_underscore_binding.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fused_underscore_binding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fused_underscore_binding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -20,11 +20,8 @@ fn prefix_underscore(_foo: u32) -> u32 {\n /// Test that we lint if we use a `_`-variable defined outside within a macro expansion\n fn in_macro(_foo: u32) {\n     println!(\"{}\", _foo);\n-\n     assert_eq!(_foo, _foo);\n \n-\n-\n     test_macro!() + 1;\n }\n "}, {"sha": "f532b4c9022af4fee62088a5765c593e761c4ce1", "filename": "tests/ui/used_underscore_binding.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fused_underscore_binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fused_underscore_binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fused_underscore_binding.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -17,21 +17,21 @@ error: used binding `_foo` which is prefixed with an underscore. A leading under\n    |                    ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:24:16\n+  --> $DIR/used_underscore_binding.rs:23:16\n    |\n-24 |     assert_eq!(_foo, _foo);\n+23 |     assert_eq!(_foo, _foo);\n    |                ^^^^\n \n error: used binding `_foo` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:24:22\n+  --> $DIR/used_underscore_binding.rs:23:22\n    |\n-24 |     assert_eq!(_foo, _foo);\n+23 |     assert_eq!(_foo, _foo);\n    |                      ^^^^\n \n error: used binding `_underscore_field` which is prefixed with an underscore. A leading underscore signals that a binding will not be used.\n-  --> $DIR/used_underscore_binding.rs:39:5\n+  --> $DIR/used_underscore_binding.rs:36:5\n    |\n-39 |     s._underscore_field += 1;\n+36 |     s._underscore_field += 1;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 5 previous errors"}, {"sha": "0e30048163f2ea634b494bde024e6569d8473c32", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -3,8 +3,6 @@\n #![deny(useless_attribute)]\n \n #[allow(dead_code)]\n-\n-\n extern crate clippy_lints;\n \n // don't lint on unused_import for `use` items"}, {"sha": "f86137622b611173cc465634356e1099fb36c7fa", "filename": "tests/ui/vec.rs", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -22,33 +22,18 @@ impl Line {\n \n fn main() {\n     on_slice(&vec![]);\n-\n-\n-\n     on_slice(&[]);\n \n     on_slice(&vec![1, 2]);\n-\n-\n-\n     on_slice(&[1, 2]);\n \n     on_slice(&vec ![1, 2]);\n-\n-\n-\n     on_slice(&[1, 2]);\n \n     on_slice(&vec!(1, 2));\n-\n-\n-\n     on_slice(&[1, 2]);\n \n     on_slice(&vec![1; 2]);\n-\n-\n-\n     on_slice(&[1; 2]);\n \n     on_vec(&vec![]);\n@@ -62,9 +47,6 @@ fn main() {\n     on_slice(&vec![2; line.length()]);\n \n     for a in vec![1, 2, 3] {\n-\n-\n-\n         println!(\"{:?}\", a);\n     }\n "}, {"sha": "5243d882baaf79c239ad8300be38e3999dd27d56", "filename": "tests/ui/vec.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fvec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fvec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -11,33 +11,33 @@ note: lint level defined here\n    |         ^^^^^^^^^^^\n \n error: useless use of `vec!`\n-  --> $DIR/vec.rs:30:14\n+  --> $DIR/vec.rs:27:14\n    |\n-30 |     on_slice(&vec![1, 2]);\n+27 |     on_slice(&vec![1, 2]);\n    |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n-  --> $DIR/vec.rs:36:14\n+  --> $DIR/vec.rs:30:14\n    |\n-36 |     on_slice(&vec ![1, 2]);\n+30 |     on_slice(&vec ![1, 2]);\n    |              ^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n-  --> $DIR/vec.rs:42:14\n+  --> $DIR/vec.rs:33:14\n    |\n-42 |     on_slice(&vec!(1, 2));\n+33 |     on_slice(&vec!(1, 2));\n    |              ^^^^^^^^^^^ help: you can use a slice directly `&[1, 2]`\n \n error: useless use of `vec!`\n-  --> $DIR/vec.rs:48:14\n+  --> $DIR/vec.rs:36:14\n    |\n-48 |     on_slice(&vec![1; 2]);\n+36 |     on_slice(&vec![1; 2]);\n    |              ^^^^^^^^^^^ help: you can use a slice directly `&[1; 2]`\n \n error: useless use of `vec!`\n-  --> $DIR/vec.rs:64:14\n+  --> $DIR/vec.rs:49:14\n    |\n-64 |     for a in vec![1, 2, 3] {\n+49 |     for a in vec![1, 2, 3] {\n    |              ^^^^^^^^^^^^^ help: you can use a slice directly `&[1, 2, 3]`\n \n error: aborting due to 6 previous errors"}, {"sha": "ddf1d6413cda6c0fbf00d2d18353624ed9fd7027", "filename": "tests/ui/while_loop.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwhile_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwhile_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -7,9 +7,6 @@\n fn main() {\n     let y = Some(true);\n     loop {\n-\n-\n-\n         if let Some(_x) = y {\n             let _v = 1;\n         } else {\n@@ -23,18 +20,12 @@ fn main() {\n         break;\n     }\n     loop {\n-\n-\n-\n         match y {\n             Some(_x) => true,\n             None => break\n         };\n     }\n     loop {\n-\n-\n-\n         let x = match y {\n             Some(x) => x,\n             None => break\n@@ -43,9 +34,6 @@ fn main() {\n         let _str = \"foo\";\n     }\n     loop {\n-\n-\n-\n         let x = match y {\n             Some(x) => x,\n             None => break,\n@@ -68,9 +56,6 @@ fn main() {\n \n     // #675, this used to have a wrong suggestion\n     loop {\n-\n-\n-\n         let (e, l) = match \"\".split_whitespace().next() {\n             Some(word) => (word.is_empty(), word.len()),\n             None => break\n@@ -81,26 +66,17 @@ fn main() {\n \n     let mut iter = 1..20;\n     while let Option::Some(x) = iter.next() {\n-\n-\n-\n         println!(\"{}\", x);\n     }\n \n     let mut iter = 1..20;\n     while let Some(x) = iter.next() {\n-\n-\n-\n         println!(\"{}\", x);\n     }\n \n     let mut iter = 1..20;\n     while let Some(_) = iter.next() {}\n \n-\n-\n-\n     let mut iter = 1..20;\n     while let None = iter.next() {} // this is fine (if nonsensical)\n \n@@ -140,9 +116,6 @@ fn main() {\n fn no_panic<T>(slice: &[T]) {\n     let mut iter = slice.iter();\n     loop {\n-\n-\n-\n         let _ = match iter.next() {\n             Some(ele) => ele,\n             None => break"}, {"sha": "a942693b469f6cff03c10d0476128746c363a4bc", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 54, "deletions": 61, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -2,12 +2,12 @@ error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:9:5\n    |\n 9  | /     loop {\n-10 | |\n-11 | |\n-12 | |\n-...  |\n-17 | |         }\n-18 | |     }\n+10 | |         if let Some(_x) = y {\n+11 | |             let _v = 1;\n+12 | |         } else {\n+13 | |             break\n+14 | |         }\n+15 | |     }\n    | |_____^ help: try `while let Some(_x) = y { .. }`\n    |\n note: lint level defined here\n@@ -17,62 +17,58 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:25:5\n+  --> $DIR/while_loop.rs:22:5\n    |\n-25 | /     loop {\n-26 | |\n-27 | |\n-28 | |\n-...  |\n-32 | |         };\n-33 | |     }\n+22 | /     loop {\n+23 | |         match y {\n+24 | |             Some(_x) => true,\n+25 | |             None => break\n+26 | |         };\n+27 | |     }\n    | |_____^ help: try `while let Some(_x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:34:5\n+  --> $DIR/while_loop.rs:28:5\n    |\n-34 | /     loop {\n-35 | |\n-36 | |\n-37 | |\n+28 | /     loop {\n+29 | |         let x = match y {\n+30 | |             Some(x) => x,\n+31 | |             None => break\n ...  |\n-43 | |         let _str = \"foo\";\n-44 | |     }\n+34 | |         let _str = \"foo\";\n+35 | |     }\n    | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:45:5\n+  --> $DIR/while_loop.rs:36:5\n    |\n-45 | /     loop {\n-46 | |\n-47 | |\n-48 | |\n+36 | /     loop {\n+37 | |         let x = match y {\n+38 | |             Some(x) => x,\n+39 | |             None => break,\n ...  |\n-54 | |         { let _b = \"foobar\"; }\n-55 | |     }\n+42 | |         { let _b = \"foobar\"; }\n+43 | |     }\n    | |_____^ help: try `while let Some(x) = y { .. }`\n \n error: this loop could be written as a `while let` loop\n-  --> $DIR/while_loop.rs:70:5\n+  --> $DIR/while_loop.rs:58:5\n    |\n-70 | /     loop {\n-71 | |\n-72 | |\n-73 | |\n+58 | /     loop {\n+59 | |         let (e, l) = match \"\".split_whitespace().next() {\n+60 | |             Some(word) => (word.is_empty(), word.len()),\n+61 | |             None => break\n ...  |\n-79 | |         let _ = (e, l);\n-80 | |     }\n+64 | |         let _ = (e, l);\n+65 | |     }\n    | |_____^ help: try `while let Some(word) = \"\".split_whitespace().next() { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:83:5\n+  --> $DIR/while_loop.rs:68:5\n    |\n-83 | /     while let Option::Some(x) = iter.next() {\n-84 | |\n-85 | |\n-86 | |\n-87 | |         println!(\"{}\", x);\n-88 | |     }\n+68 | /     while let Option::Some(x) = iter.next() {\n+69 | |         println!(\"{}\", x);\n+70 | |     }\n    | |_____^ help: try `for x in iter { .. }`\n    |\n note: lint level defined here\n@@ -82,38 +78,35 @@ note: lint level defined here\n    |                                     ^^^^^^^^^^^^^^^^^^^^^\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:91:5\n+  --> $DIR/while_loop.rs:73:5\n    |\n-91 | /     while let Some(x) = iter.next() {\n-92 | |\n-93 | |\n-94 | |\n-95 | |         println!(\"{}\", x);\n-96 | |     }\n+73 | /     while let Some(x) = iter.next() {\n+74 | |         println!(\"{}\", x);\n+75 | |     }\n    | |_____^ help: try `for x in iter { .. }`\n \n error: this loop could be written as a `for` loop\n-  --> $DIR/while_loop.rs:99:5\n+  --> $DIR/while_loop.rs:78:5\n    |\n-99 |     while let Some(_) = iter.next() {}\n+78 |     while let Some(_) = iter.next() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `for _ in iter { .. }`\n \n error: this loop could be written as a `while let` loop\n-   --> $DIR/while_loop.rs:142:5\n+   --> $DIR/while_loop.rs:118:5\n     |\n-142 | /     loop {\n-143 | |\n-144 | |\n-145 | |\n-...   |\n-150 | |         loop {}\n-151 | |     }\n+118 | /     loop {\n+119 | |         let _ = match iter.next() {\n+120 | |             Some(ele) => ele,\n+121 | |             None => break\n+122 | |         };\n+123 | |         loop {}\n+124 | |     }\n     | |_____^ help: try `while let Some(ele) = iter.next() { .. }`\n \n error: empty `loop {}` detected. You may want to either use `panic!()` or add `std::thread::sleep(..);` to the loop body.\n-   --> $DIR/while_loop.rs:150:9\n+   --> $DIR/while_loop.rs:123:9\n     |\n-150 |         loop {}\n+123 |         loop {}\n     |         ^^^^^^^\n     |\n note: lint level defined here"}, {"sha": "040615d067e1200b6701eb185c1f17ba6d057dd3", "filename": "tests/ui/wrong_macro_span.rs_", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwrong_macro_span.rs_", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fwrong_macro_span.rs_", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_macro_span.rs_?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -19,9 +19,6 @@ fn main() {\n             let t = &thingy;\n \n             match t.$idx { Foo::A(ref val) => { println!(\"42\"); }, _ => {} }\n-\n-\n-\n         }}\n     }\n "}, {"sha": "22253476c231ac870dbd682937485355889a2625", "filename": "tests/ui/zero_div_zero.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_div_zero.rs?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -5,13 +5,9 @@\n #[deny(zero_divided_by_zero)]\n fn main() {\n     let nan = 0.0 / 0.0;\n-\n     let f64_nan = 0.0 / 0.0f64;\n-\n     let other_f64_nan = 0.0f64 / 0.0;\n-\n     let one_more_f64_nan = 0.0f64/0.0f64;\n-\n     let zero = 0.0;\n     let other_zero = 0.0;\n     let other_nan = zero / other_zero; // fine - this lint doesn't propegate constants."}, {"sha": "4853c2dc70c8861348415073528ad6f62849e27e", "filename": "tests/ui/zero_div_zero.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fzero_div_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5bafd81f930ad9da15a580b3d3760b428a45b465/tests%2Fui%2Fzero_div_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fzero_div_zero.stderr?ref=5bafd81f930ad9da15a580b3d3760b428a45b465", "patch": "@@ -20,49 +20,49 @@ note: lint level defined here\n   = help: Consider using `std::f32::NAN` if you would like a constant representing NaN\n \n warning: equal expressions as operands to `/`\n- --> $DIR/zero_div_zero.rs:9:19\n+ --> $DIR/zero_div_zero.rs:8:19\n   |\n-9 |     let f64_nan = 0.0 / 0.0f64;\n+8 |     let f64_nan = 0.0 / 0.0f64;\n   |                   ^^^^^^^^^^^^\n   |\n   = note: #[warn(eq_op)] on by default\n \n error: constant division of 0.0 with 0.0 will always result in NaN\n- --> $DIR/zero_div_zero.rs:9:19\n+ --> $DIR/zero_div_zero.rs:8:19\n   |\n-9 |     let f64_nan = 0.0 / 0.0f64;\n+8 |     let f64_nan = 0.0 / 0.0f64;\n   |                   ^^^^^^^^^^^^\n   |\n   = help: Consider using `std::f64::NAN` if you would like a constant representing NaN\n \n warning: equal expressions as operands to `/`\n-  --> $DIR/zero_div_zero.rs:11:25\n-   |\n-11 |     let other_f64_nan = 0.0f64 / 0.0;\n-   |                         ^^^^^^^^^^^^\n-   |\n-   = note: #[warn(eq_op)] on by default\n+ --> $DIR/zero_div_zero.rs:9:25\n+  |\n+9 |     let other_f64_nan = 0.0f64 / 0.0;\n+  |                         ^^^^^^^^^^^^\n+  |\n+  = note: #[warn(eq_op)] on by default\n \n error: constant division of 0.0 with 0.0 will always result in NaN\n-  --> $DIR/zero_div_zero.rs:11:25\n-   |\n-11 |     let other_f64_nan = 0.0f64 / 0.0;\n-   |                         ^^^^^^^^^^^^\n-   |\n-   = help: Consider using `std::f64::NAN` if you would like a constant representing NaN\n+ --> $DIR/zero_div_zero.rs:9:25\n+  |\n+9 |     let other_f64_nan = 0.0f64 / 0.0;\n+  |                         ^^^^^^^^^^^^\n+  |\n+  = help: Consider using `std::f64::NAN` if you would like a constant representing NaN\n \n warning: equal expressions as operands to `/`\n-  --> $DIR/zero_div_zero.rs:13:28\n+  --> $DIR/zero_div_zero.rs:10:28\n    |\n-13 |     let one_more_f64_nan = 0.0f64/0.0f64;\n+10 |     let one_more_f64_nan = 0.0f64/0.0f64;\n    |                            ^^^^^^^^^^^^^\n    |\n    = note: #[warn(eq_op)] on by default\n \n error: constant division of 0.0 with 0.0 will always result in NaN\n-  --> $DIR/zero_div_zero.rs:13:28\n+  --> $DIR/zero_div_zero.rs:10:28\n    |\n-13 |     let one_more_f64_nan = 0.0f64/0.0f64;\n+10 |     let one_more_f64_nan = 0.0f64/0.0f64;\n    |                            ^^^^^^^^^^^^^\n    |\n    = help: Consider using `std::f64::NAN` if you would like a constant representing NaN"}]}