{"sha": "4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkZGEyYWQ1YjQ5Y2I2NGQyNDEzYzNhMGI1ZjE5ZTFiNjZlNWRiNjk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T10:46:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-21T10:46:18Z"}, "message": "support non-rlib extern files", "tree": {"sha": "d2c2807846641199ef487bac65838c4680ee2d6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2c2807846641199ef487bac65838c4680ee2d6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69", "html_url": "https://github.com/rust-lang/rust/commit/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbc7560ae2d44669ef6ba0f43014e10ce881180e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc7560ae2d44669ef6ba0f43014e10ce881180e", "html_url": "https://github.com/rust-lang/rust/commit/cbc7560ae2d44669ef6ba0f43014e10ce881180e"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "5731a9a591f9abc8aa772c94901f46fbbfba3872", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=4dda2ad5b49cb64d2413c3a0b5f19e1b66e5db69", "patch": "@@ -663,11 +663,16 @@ fn phase_cargo_runner(binary: &Path, binary_args: env::Args) {\n     let json_flag = \"--json\";\n     while let Some(arg) = args.next() {\n         if arg == extern_flag {\n+            cmd.arg(extern_flag); // always forward flag, but adjust filename\n             // `--extern` is always passed as a separate argument by cargo.\n             let next_arg = args.next().expect(\"`--extern` should be followed by a filename\");\n-            let next_arg = next_arg.strip_suffix(\".rlib\").expect(\"all extern filenames should end in `.rlib`\");\n-            cmd.arg(extern_flag);\n-            cmd.arg(format!(\"{}.rmeta\", next_arg));\n+            if let Some(next_lib) = next_arg.strip_suffix(\".rlib\") {\n+                // If this is an rlib, make it an rmeta.\n+                cmd.arg(format!(\"{}.rmeta\", next_lib));\n+            } else {\n+                // Some other extern file (e.g., a `.so`). Forward unchanged.\n+                cmd.arg(next_arg);\n+            }\n         } else if arg.starts_with(error_format_flag) {\n             let suffix = &arg[error_format_flag.len()..];\n             assert!(suffix.starts_with('='));"}]}