{"sha": "40340745a80904722323845b7f93d43af1c1f83a", "node_id": "C_kwDOAAsO6NoAKDQwMzQwNzQ1YTgwOTA0NzIyMzIzODQ1YjdmOTNkNDNhZjFjMWY4M2E", "commit": {"author": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-07-19T19:17:24Z"}, "committer": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-07-19T19:17:24Z"}, "message": "Use parens around [`needless_borrow`] field calls", "tree": {"sha": "107df8c0c7e11fad6816f248c6a3e714a7b6ae44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/107df8c0c7e11fad6816f248c6a3e714a7b6ae44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40340745a80904722323845b7f93d43af1c1f83a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40340745a80904722323845b7f93d43af1c1f83a", "html_url": "https://github.com/rust-lang/rust/commit/40340745a80904722323845b7f93d43af1c1f83a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40340745a80904722323845b7f93d43af1c1f83a/comments", "author": null, "committer": null, "parents": [{"sha": "e57c6d6f21fed530b250f54a47a6de8dd841a4f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e57c6d6f21fed530b250f54a47a6de8dd841a4f1", "html_url": "https://github.com/rust-lang/rust/commit/e57c6d6f21fed530b250f54a47a6de8dd841a4f1"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "a90f894a7b19cdbcdc422fbe2c1bca66a9cb70a6", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/40340745a80904722323845b7f93d43af1c1f83a/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40340745a80904722323845b7f93d43af1c1f83a/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=40340745a80904722323845b7f93d43af1c1f83a", "patch": "@@ -1028,9 +1028,10 @@ fn report<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, state: State, data\n             let mut app = Applicability::MachineApplicable;\n             let (snip, snip_is_macro) = snippet_with_context(cx, expr.span, data.span.ctxt(), \"..\", &mut app);\n             span_lint_hir_and_then(cx, NEEDLESS_BORROW, data.hir_id, data.span, state.msg, |diag| {\n+                let calls_field = matches!(expr.kind, ExprKind::Field(..)) && matches!(data.position, Position::Callee);\n                 let sugg = if !snip_is_macro\n-                    && expr.precedence().order() < data.position.precedence()\n                     && !has_enclosing_paren(&snip)\n+                    && (expr.precedence().order() < data.position.precedence() || calls_field)\n                 {\n                     format!(\"({})\", snip)\n                 } else {"}, {"sha": "bfd2725ecaaa874b9409502e5b72514663ad7cb8", "filename": "tests/ui/needless_borrow.fixed", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.fixed?ref=40340745a80904722323845b7f93d43af1c1f83a", "patch": "@@ -158,3 +158,28 @@ fn check_expect_suppression() {\n     #[expect(clippy::needless_borrow)]\n     let _ = x(&&a);\n }\n+\n+#[allow(dead_code)]\n+mod issue9160 {\n+    pub struct S<F> {\n+        f: F,\n+    }\n+\n+    impl<T, F> S<F>\n+    where\n+        F: Fn() -> T,\n+    {\n+        fn calls_field(&self) -> T {\n+            (self.f)()\n+        }\n+    }\n+\n+    impl<T, F> S<F>\n+    where\n+        F: FnMut() -> T,\n+    {\n+        fn calls_mut_field(&mut self) -> T {\n+            (self.f)()\n+        }\n+    }\n+}"}, {"sha": "c457d8c5471886f5491aba8bfc3c08f4a85d2621", "filename": "tests/ui/needless_borrow.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.rs?ref=40340745a80904722323845b7f93d43af1c1f83a", "patch": "@@ -158,3 +158,28 @@ fn check_expect_suppression() {\n     #[expect(clippy::needless_borrow)]\n     let _ = x(&&a);\n }\n+\n+#[allow(dead_code)]\n+mod issue9160 {\n+    pub struct S<F> {\n+        f: F,\n+    }\n+\n+    impl<T, F> S<F>\n+    where\n+        F: Fn() -> T,\n+    {\n+        fn calls_field(&self) -> T {\n+            (&self.f)()\n+        }\n+    }\n+\n+    impl<T, F> S<F>\n+    where\n+        F: FnMut() -> T,\n+    {\n+        fn calls_mut_field(&mut self) -> T {\n+            (&mut self.f)()\n+        }\n+    }\n+}"}, {"sha": "66588689d81851a8f81862bac08e1bf08ce95d58", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/40340745a80904722323845b7f93d43af1c1f83a/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=40340745a80904722323845b7f93d43af1c1f83a", "patch": "@@ -120,5 +120,17 @@ error: this expression creates a reference which is immediately dereferenced by\n LL |     (&&5).foo();\n    |     ^^^^^ help: change this to: `(&5)`\n \n-error: aborting due to 20 previous errors\n+error: this expression borrows a value the compiler would automatically borrow\n+  --> $DIR/needless_borrow.rs:173:13\n+   |\n+LL |             (&self.f)()\n+   |             ^^^^^^^^^ help: change this to: `(self.f)`\n+\n+error: this expression borrows a value the compiler would automatically borrow\n+  --> $DIR/needless_borrow.rs:182:13\n+   |\n+LL |             (&mut self.f)()\n+   |             ^^^^^^^^^^^^^ help: change this to: `(self.f)`\n+\n+error: aborting due to 22 previous errors\n "}]}