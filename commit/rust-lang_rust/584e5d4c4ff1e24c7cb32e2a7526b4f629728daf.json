{"sha": "584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "node_id": "C_kwDOAAsO6NoAKDU4NGU1ZDRjNGZmMWUyNGM3Y2IzMmUyYTc1MjZiNGY2Mjk3MjhkYWY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-29T05:46:25Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-08T03:47:59Z"}, "message": "Migrate PanicNonStr, RawPtrComparison, RawPtrToInt diagnostics", "tree": {"sha": "fc76f3b07c03170f4479484f8788e568acc1663b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc76f3b07c03170f4479484f8788e568acc1663b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "html_url": "https://github.com/rust-lang/rust/commit/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c48f4828131d7d326b8a4a91ae9931736deda26f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c48f4828131d7d326b8a4a91ae9931736deda26f", "html_url": "https://github.com/rust-lang/rust/commit/c48f4828131d7d326b8a4a91ae9931736deda26f"}], "stats": {"total": 64, "additions": 41, "deletions": 23}, "files": [{"sha": "20382a81f14df8d93f3d03d055adf3d7be31371d", "filename": "compiler/rustc_const_eval/src/errors.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ferrors.rs?ref=584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "patch": "@@ -39,3 +39,27 @@ pub(crate) struct StaticAccessErr {\n     #[help(const_eval::teach_help)]\n     pub teach: Option<()>,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[error(const_eval::raw_ptr_to_int)]\n+#[note]\n+#[note(const_eval::note2)]\n+pub(crate) struct RawPtrToIntErr {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(const_eval::raw_ptr_comparison)]\n+#[note]\n+pub(crate) struct RawPtrComparisonErr {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(const_eval::panic_non_str)]\n+pub(crate) struct PanicNonStrErr {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "181dbacdc820eec2cad274470221fb4f6db6cb45", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 6, "deletions": 23, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "patch": "@@ -22,7 +22,9 @@ use rustc_span::{BytePos, Pos, Span, Symbol};\n use rustc_trait_selection::traits::SelectionContext;\n \n use super::ConstCx;\n-use crate::errors::{NonConstOpErr, StaticAccessErr};\n+use crate::errors::{\n+    NonConstOpErr, PanicNonStrErr, RawPtrComparisonErr, RawPtrToIntErr, StaticAccessErr,\n+};\n use crate::util::{call_kind, CallDesugaringKind, CallKind};\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq)]\n@@ -642,10 +644,7 @@ impl<'tcx> NonConstOp<'tcx> for PanicNonStr {\n         ccx: &ConstCx<'_, 'tcx>,\n         span: Span,\n     ) -> DiagnosticBuilder<'tcx, ErrorGuaranteed> {\n-        ccx.tcx.sess.struct_span_err(\n-            span,\n-            \"argument to `panic!()` in a const context must have type `&str`\",\n-        )\n+        ccx.tcx.sess.create_err(PanicNonStrErr { span })\n     }\n }\n \n@@ -660,15 +659,7 @@ impl<'tcx> NonConstOp<'tcx> for RawPtrComparison {\n         ccx: &ConstCx<'_, 'tcx>,\n         span: Span,\n     ) -> DiagnosticBuilder<'tcx, ErrorGuaranteed> {\n-        let mut err = ccx\n-            .tcx\n-            .sess\n-            .struct_span_err(span, \"pointers cannot be reliably compared during const eval\");\n-        err.note(\n-            \"see issue #53020 <https://github.com/rust-lang/rust/issues/53020> \\\n-            for more information\",\n-        );\n-        err\n+        ccx.tcx.sess.create_err(RawPtrComparisonErr { span })\n     }\n }\n \n@@ -704,15 +695,7 @@ impl<'tcx> NonConstOp<'tcx> for RawPtrToIntCast {\n         ccx: &ConstCx<'_, 'tcx>,\n         span: Span,\n     ) -> DiagnosticBuilder<'tcx, ErrorGuaranteed> {\n-        let mut err = ccx\n-            .tcx\n-            .sess\n-            .struct_span_err(span, \"pointers cannot be cast to integers during const eval\");\n-        err.note(\"at compile-time, pointers do not have an integer value\");\n-        err.note(\n-            \"avoiding this restriction via `transmute`, `union`, or raw pointers leads to compile-time undefined behavior\",\n-        );\n-        err\n+        ccx.tcx.sess.create_err(RawPtrToIntErr { span })\n     }\n }\n "}, {"sha": "30de7d5a24f50e53dd29ed4e449c25d59823de77", "filename": "compiler/rustc_error_messages/locales/en-US/const_eval.ftl", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/584e5d4c4ff1e24c7cb32e2a7526b4f629728daf/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fconst_eval.ftl?ref=584e5d4c4ff1e24c7cb32e2a7526b4f629728daf", "patch": "@@ -15,3 +15,14 @@ const-eval-static-access =\n     .help = consider extracting the value of the `static` to a `const`, and referring to that\n     .teach-note = `static` and `const` variables can refer to other `const` variables. A `const` variable, however, cannot refer to a `static` variable.\n     .teach-help = To fix this, the value can be extracted to a `const` and then used.\n+\n+const-eval-raw-ptr-to-int =\n+    pointers cannot be cast to integers during const eval\n+    .note = at compile-time, pointers do not have an integer value\n+    .note2 = avoiding this restriction via `transmute`, `union`, or raw pointers leads to compile-time undefined behavior\n+\n+const-eval-raw-ptr-comparison =\n+    pointers cannot be reliably compared during const eval\n+    .note = see issue #53020 <https://github.com/rust-lang/rust/issues/53020> for more information\n+\n+const-eval-panic-non-str = argument to `panic!()` in a const context must have type `&str`"}]}