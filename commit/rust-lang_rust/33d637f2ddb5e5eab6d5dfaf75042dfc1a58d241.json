{"sha": "33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZDYzN2YyZGRiNWU1ZWFiNmQ1ZGZhZjc1MDQyZGZjMWE1OGQyNDE=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-01-17T15:59:02Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-01-17T15:59:51Z"}, "message": "Fix inference for shift operators\n\nFixes #2602.", "tree": {"sha": "52d96e64a1235e3b22d5ed8e213a7b616d115aba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52d96e64a1235e3b22d5ed8e213a7b616d115aba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "html_url": "https://github.com/rust-lang/rust/commit/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07dca1123dfaec527c6ba3164125309f5c4cc3db", "url": "https://api.github.com/repos/rust-lang/rust/commits/07dca1123dfaec527c6ba3164125309f5c4cc3db", "html_url": "https://github.com/rust-lang/rust/commit/07dca1123dfaec527c6ba3164125309f5c4cc3db"}], "stats": {"total": 40, "additions": 35, "deletions": 5}, "files": [{"sha": "31259a01de7218158d50aab6fdc0ad3ff9b22afb", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "patch": "@@ -386,11 +386,11 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                     let lhs_ty = self.infer_expr(*lhs, &lhs_expectation);\n                     // FIXME: find implementation of trait corresponding to operation\n                     // symbol and resolve associated `Output` type\n-                    let rhs_expectation = op::binary_op_rhs_expectation(*op, lhs_ty);\n+                    let rhs_expectation = op::binary_op_rhs_expectation(*op, lhs_ty.clone());\n                     let rhs_ty = self.infer_expr(*rhs, &Expectation::has_type(rhs_expectation));\n \n                     // FIXME: similar as above, return ty is often associated trait type\n-                    op::binary_op_return_ty(*op, rhs_ty)\n+                    op::binary_op_return_ty(*op, lhs_ty, rhs_ty)\n                 }\n                 _ => Ty::Unknown,\n             },"}, {"sha": "ae253ca048759453f60bd95e11ef86f2720fd4fa", "filename": "crates/ra_hir_ty/src/op.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fop.rs?ref=33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "patch": "@@ -1,13 +1,21 @@\n-//! FIXME: write short doc here\n-use hir_def::expr::{BinaryOp, CmpOp};\n+//! Helper functions for binary operator type inference.\n+use hir_def::expr::{ArithOp, BinaryOp, CmpOp};\n \n use super::{InferTy, Ty, TypeCtor};\n use crate::ApplicationTy;\n \n-pub(super) fn binary_op_return_ty(op: BinaryOp, rhs_ty: Ty) -> Ty {\n+pub(super) fn binary_op_return_ty(op: BinaryOp, lhs_ty: Ty, rhs_ty: Ty) -> Ty {\n     match op {\n         BinaryOp::LogicOp(_) | BinaryOp::CmpOp(_) => Ty::simple(TypeCtor::Bool),\n         BinaryOp::Assignment { .. } => Ty::unit(),\n+        BinaryOp::ArithOp(ArithOp::Shl) | BinaryOp::ArithOp(ArithOp::Shr) => match lhs_ty {\n+            Ty::Apply(ApplicationTy { ctor, .. }) => match ctor {\n+                TypeCtor::Int(..) | TypeCtor::Float(..) => lhs_ty,\n+                _ => Ty::Unknown,\n+            },\n+            Ty::Infer(InferTy::IntVar(..)) | Ty::Infer(InferTy::FloatVar(..)) => lhs_ty,\n+            _ => Ty::Unknown,\n+        },\n         BinaryOp::ArithOp(_) => match rhs_ty {\n             Ty::Apply(ApplicationTy { ctor, .. }) => match ctor {\n                 TypeCtor::Int(..) | TypeCtor::Float(..) => rhs_ty,\n@@ -36,6 +44,7 @@ pub(super) fn binary_op_rhs_expectation(op: BinaryOp, lhs_ty: Ty) -> Ty {\n                 _ => Ty::Unknown,\n             }\n         }\n+        BinaryOp::ArithOp(ArithOp::Shl) | BinaryOp::ArithOp(ArithOp::Shr) => Ty::Unknown,\n         BinaryOp::CmpOp(CmpOp::Ord { .. })\n         | BinaryOp::Assignment { op: Some(_) }\n         | BinaryOp::ArithOp(_) => match lhs_ty {"}, {"sha": "b7204ec0031f34c4c0d79a3c241aa90171c60d39", "filename": "crates/ra_hir_ty/src/tests/simple.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=33d637f2ddb5e5eab6d5dfaf75042dfc1a58d241", "patch": "@@ -613,6 +613,27 @@ fn test() -> bool {\n     );\n }\n \n+#[test]\n+fn infer_shift_op() {\n+    assert_snapshot!(\n+        infer(r#\"\n+fn test() {\n+    1u32 << 5u8;\n+    1u32 >> 5u8;\n+}\n+\"#),\n+        @r###\"\n+    [11; 48) '{     ...5u8; }': ()\n+    [17; 21) '1u32': u32\n+    [17; 28) '1u32 << 5u8': u32\n+    [25; 28) '5u8': u8\n+    [34; 38) '1u32': u32\n+    [34; 45) '1u32 >> 5u8': u32\n+    [42; 45) '5u8': u8\n+    \"###\n+    );\n+}\n+\n #[test]\n fn infer_field_autoderef() {\n     assert_snapshot!("}]}