{"sha": "5b1b2cac39d88e730d594f951ab6613eab5ee498", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMWIyY2FjMzlkODhlNzMwZDU5NGY5NTFhYjY2MTNlYWI1ZWU0OTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-03T11:10:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-03T11:10:55Z"}, "message": "Merge #2990\n\n2990: Use name only when searching for an import candidate r=me a=SomeoneToIgnore\n\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "fc8ccfb102a780c6789cb640482210db2d3dd2aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc8ccfb102a780c6789cb640482210db2d3dd2aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b1b2cac39d88e730d594f951ab6613eab5ee498", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeN/+/CRBK7hj4Ov3rIwAAdHIIAHNXkFWXn2Oph3GcU/QKNrTT\nYQ6JpTARfBHD1bciTUISYIenia3alay/wbMgq3ugZLMaKMMFBzn4UDudvS50H0n4\n0rlQHxqznzERcHWSJ/uAb5NA9TcRcyblBTIZgSQo04zmqKLVQsmcz9j3XYuyOF0Y\nKffxapilQjgfOgCzkV4LmcyEKNRHc+cHYRTY6af4iaoKytpemURfWSqlKhDXmhfo\nDb7mkwF14fQ3Iz0qXghi3RNG1l8aP5G5V7YFTN3qPYss0gshWCiB72iW5o/6AMWh\nDQI7P7lyY1otvblkazjEUZKn1dnX7FCrpCPecZDz74mUR3/Ss1MLqjz47vnPoyE=\n=BENU\n-----END PGP SIGNATURE-----\n", "payload": "tree fc8ccfb102a780c6789cb640482210db2d3dd2aa\nparent 52456c44901c8c38c8bcb742ebe305484af8f36f\nparent 01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580728255 +0000\ncommitter GitHub <noreply@github.com> 1580728255 +0000\n\nMerge #2990\n\n2990: Use name only when searching for an import candidate r=me a=SomeoneToIgnore\n\n\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b1b2cac39d88e730d594f951ab6613eab5ee498", "html_url": "https://github.com/rust-lang/rust/commit/5b1b2cac39d88e730d594f951ab6613eab5ee498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b1b2cac39d88e730d594f951ab6613eab5ee498/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52456c44901c8c38c8bcb742ebe305484af8f36f", "url": "https://api.github.com/repos/rust-lang/rust/commits/52456c44901c8c38c8bcb742ebe305484af8f36f", "html_url": "https://github.com/rust-lang/rust/commit/52456c44901c8c38c8bcb742ebe305484af8f36f"}, {"sha": "01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "html_url": "https://github.com/rust-lang/rust/commit/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "7fd1f0e7d55d4f4c8a38b74d5a1dd046d19513d8", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5b1b2cac39d88e730d594f951ab6613eab5ee498/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b1b2cac39d88e730d594f951ab6613eab5ee498/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=5b1b2cac39d88e730d594f951ab6613eab5ee498", "patch": "@@ -1,7 +1,7 @@\n use hir::{db::HirDatabase, ModPath};\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxKind::USE_ITEM,\n+    SyntaxKind::{NAME_REF, USE_ITEM},\n     SyntaxNode,\n };\n \n@@ -36,6 +36,8 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     if path_to_import_syntax.ancestors().find(|ancestor| ancestor.kind() == USE_ITEM).is_some() {\n         return None;\n     }\n+    let name_to_import =\n+        path_to_import_syntax.descendants().find(|child| child.kind() == NAME_REF)?;\n \n     let module = path_to_import_syntax.ancestors().find_map(ast::Module::cast);\n     let position = match module.and_then(|it| it.item_list()) {\n@@ -52,7 +54,7 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     }\n \n     let proposed_imports = imports_locator\n-        .find_imports(&path_to_import_syntax.to_string())\n+        .find_imports(&name_to_import.to_string())\n         .into_iter()\n         .filter_map(|module_def| module_with_name_to_import.find_use_path(ctx.db, module_def))\n         .filter(|use_path| !use_path.segments.is_empty())\n@@ -121,21 +123,29 @@ mod tests {\n             r\"\n             use PubMod::PubStruct1;\n \n-            PubStruct2<|>\n+            struct Test {\n+                test: Pub<|>Struct2<u8>,\n+            }\n \n             pub mod PubMod {\n                 pub struct PubStruct1;\n-                pub struct PubStruct2;\n+                pub struct PubStruct2<T> {\n+                    _t: T,\n+                }\n             }\n             \",\n             r\"\n             use PubMod::{PubStruct2, PubStruct1};\n \n-            PubStruct2<|>\n+            struct Test {\n+                test: Pub<|>Struct2<u8>,\n+            }\n \n             pub mod PubMod {\n                 pub struct PubStruct1;\n-                pub struct PubStruct2;\n+                pub struct PubStruct2<T> {\n+                    _t: T,\n+                }\n             }\n             \",\n         );"}]}