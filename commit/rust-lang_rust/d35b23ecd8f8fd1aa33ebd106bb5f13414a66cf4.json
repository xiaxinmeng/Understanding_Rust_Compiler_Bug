{"sha": "d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "node_id": "C_kwDOAAsO6NoAKGQzNWIyM2VjZDhmOGZkMWFhMzNlYmQxMDZiYjVmMTM0MTRhNjZjZjQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-07T03:08:04Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-07T03:08:04Z"}, "message": "Normalize generator-local types with unevaluated constants", "tree": {"sha": "484ea6877dae0bcf06fbba5e7b8dcdbd2575df17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/484ea6877dae0bcf06fbba5e7b8dcdbd2575df17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "html_url": "https://github.com/rust-lang/rust/commit/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfa4ac66c194046f631ce076c75516ecfdeb77ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfa4ac66c194046f631ce076c75516ecfdeb77ee", "html_url": "https://github.com/rust-lang/rust/commit/cfa4ac66c194046f631ce076c75516ecfdeb77ee"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "08247e6f22af161113f92ddbc0d823e3c9e937d9", "filename": "compiler/rustc_mir_transform/src/generator.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fgenerator.rs?ref=d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "patch": "@@ -726,9 +726,13 @@ fn sanitize_witness<'tcx>(\n     saved_locals: &GeneratorSavedLocals,\n ) {\n     let did = body.source.def_id();\n-    let allowed_upvars = tcx.erase_regions(upvars);\n+    let param_env = tcx.param_env(did);\n+\n+    let allowed_upvars = tcx.normalize_erasing_regions(param_env, upvars);\n     let allowed = match witness.kind() {\n-        &ty::GeneratorWitness(s) => tcx.erase_late_bound_regions(s),\n+        &ty::GeneratorWitness(interior_tys) => {\n+            tcx.normalize_erasing_late_bound_regions(param_env, interior_tys)\n+        }\n         _ => {\n             tcx.sess.delay_span_bug(\n                 body.span,\n@@ -738,8 +742,6 @@ fn sanitize_witness<'tcx>(\n         }\n     };\n \n-    let param_env = tcx.param_env(did);\n-\n     for (local, decl) in body.local_decls.iter_enumerated() {\n         // Ignore locals which are internal or not saved between yields.\n         if !saved_locals.contains(local) || decl.internal {"}, {"sha": "86ba7582d383327760ec9d01ce2c5af6f601a806", "filename": "src/test/ui/async-await/interior-with-const-generic-expr.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4/src%2Ftest%2Fui%2Fasync-await%2Finterior-with-const-generic-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4/src%2Ftest%2Fui%2Fasync-await%2Finterior-with-const-generic-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Finterior-with-const-generic-expr.rs?ref=d35b23ecd8f8fd1aa33ebd106bb5f13414a66cf4", "patch": "@@ -0,0 +1,26 @@\n+// edition:2018\n+// run-pass\n+\n+#![allow(incomplete_features)]\n+#![feature(generic_const_exprs)]\n+#![allow(unused)]\n+\n+fn main() {\n+    let x = test();\n+}\n+\n+fn concat<const A: usize, const B: usize>(a: [f32; A], b: [f32; B]) -> [f32; A + B] {\n+    todo!()\n+}\n+\n+async fn reverse<const A: usize>(x: [f32; A]) -> [f32; A] {\n+    todo!()\n+}\n+\n+async fn test() {\n+    let a = [0.0];\n+    let b = [1.0, 2.0];\n+    let ab = concat(a,b);\n+    let ba = reverse(ab).await;\n+    println!(\"{:?}\", ba);\n+}"}]}