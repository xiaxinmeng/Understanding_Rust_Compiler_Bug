{"sha": "f3b5ec2318914ae5a74d06e47b6f567f7dfc3623", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYjVlYzIzMTg5MTRhZTVhNzRkMDZlNDdiNmY1NjdmN2RmYzM2MjM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-02-11T13:49:50Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2014-02-11T13:49:50Z"}, "message": "Correct span for self and ExprStruct", "tree": {"sha": "30cb7d6e0424a6f279fcba113fc99eebc50a9c30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30cb7d6e0424a6f279fcba113fc99eebc50a9c30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623", "html_url": "https://github.com/rust-lang/rust/commit/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd4979ad0427aca01e500d0d26350525e9e17f2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4979ad0427aca01e500d0d26350525e9e17f2d", "html_url": "https://github.com/rust-lang/rust/commit/fd4979ad0427aca01e500d0d26350525e9e17f2d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "4bef7dc5bb5edd12f9fa0dc3afc690bebfa150b4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3b5ec2318914ae5a74d06e47b6f567f7dfc3623/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f3b5ec2318914ae5a74d06e47b6f567f7dfc3623", "patch": "@@ -1799,7 +1799,7 @@ impl Parser {\n         } else if self.eat_keyword(keywords::Self) {\n             let path = ast_util::ident_to_path(mk_sp(lo, hi), special_idents::self_);\n             ex = ExprPath(path);\n-            hi = self.span.hi;\n+            hi = self.last_span.hi;\n         } else if self.eat_keyword(keywords::If) {\n             return self.parse_if_expr();\n         } else if self.eat_keyword(keywords::For) {\n@@ -1934,7 +1934,7 @@ impl Parser {\n                                          &[token::COMMA], &[token::RBRACE]);\n                     }\n \n-                    hi = pth.span.hi;\n+                    hi = self.span.hi;\n                     self.expect(&token::RBRACE);\n                     ex = ExprStruct(pth, fields, base);\n                     return self.mk_expr(lo, hi, ex);"}]}