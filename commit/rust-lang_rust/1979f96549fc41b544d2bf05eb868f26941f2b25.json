{"sha": "1979f96549fc41b544d2bf05eb868f26941f2b25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NzlmOTY1NDlmYzQxYjU0NGQyYmYwNWViODY4ZjI2OTQxZjJiMjU=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-16T10:23:33Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2017-03-29T00:41:08Z"}, "message": "Move `syntax::ext::hygiene` to `syntax_pos::hygiene`.", "tree": {"sha": "ba5fe39527a03514c9e1eb1299a966956ce374c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba5fe39527a03514c9e1eb1299a966956ce374c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1979f96549fc41b544d2bf05eb868f26941f2b25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1979f96549fc41b544d2bf05eb868f26941f2b25", "html_url": "https://github.com/rust-lang/rust/commit/1979f96549fc41b544d2bf05eb868f26941f2b25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1979f96549fc41b544d2bf05eb868f26941f2b25/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07a34293faeb10757944ce2fa9d552cc2b189583", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a34293faeb10757944ce2fa9d552cc2b189583", "html_url": "https://github.com/rust-lang/rust/commit/07a34293faeb10757944ce2fa9d552cc2b189583"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "afdb9059ea7c012ccf21de861bf492fcb59b35d9", "filename": "src/librustc/hir/map/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fdef_collector.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -92,7 +92,7 @@ impl<'a> DefCollector<'a> {\n     fn visit_macro_invoc(&mut self, id: NodeId, const_expr: bool) {\n         if let Some(ref mut visit) = self.visit_macro_invoc {\n             visit(MacroInvocationData {\n-                mark: Mark::from_placeholder_id(id),\n+                mark: id.placeholder_to_mark(),\n                 const_expr: const_expr,\n                 def_index: self.parent_def.unwrap(),\n             })"}, {"sha": "a15431afc164b66e14a5cab7e2bd1a598263e3cd", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -680,7 +680,7 @@ pub struct BuildReducedGraphVisitor<'a, 'b: 'a> {\n \n impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n     fn visit_invoc(&mut self, id: ast::NodeId) -> &'b InvocationData<'b> {\n-        let mark = Mark::from_placeholder_id(id);\n+        let mark = id.placeholder_to_mark();\n         self.resolver.current_module.unresolved_invocations.borrow_mut().insert(mark);\n         let invocation = self.resolver.invocations[&mark];\n         invocation.module.set(self.resolver.current_module);"}, {"sha": "7e2b225193f6d70bd3f1823fea3d658828cca983", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -20,7 +20,7 @@ pub use util::ThinVec;\n use syntax_pos::{mk_sp, BytePos, Span, DUMMY_SP, ExpnId};\n use codemap::{respan, Spanned};\n use abi::Abi;\n-use ext::hygiene::SyntaxContext;\n+use ext::hygiene::{Mark, SyntaxContext};\n use print::pprust;\n use ptr::P;\n use rustc_data_structures::indexed_vec;\n@@ -256,6 +256,14 @@ impl NodeId {\n     pub fn as_u32(&self) -> u32 {\n         self.0\n     }\n+\n+    pub fn placeholder_from_mark(mark: Mark) -> Self {\n+        NodeId(mark.as_u32())\n+    }\n+\n+    pub fn placeholder_to_mark(self) -> Mark {\n+        Mark::from_u32(self.0)\n+    }\n }\n \n impl fmt::Display for NodeId {"}, {"sha": "e258c51a3295fcad9eb99ac80c019e5e47e680b6", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use ast::{self, Block, Ident, PatKind, Path};\n+use ast::{self, Block, Ident, NodeId, PatKind, Path};\n use ast::{MacStmtStyle, StmtKind, ItemKind};\n use attr::{self, HasAttrs};\n use codemap::{ExpnInfo, NameAndSpan, MacroBang, MacroAttribute};\n@@ -321,7 +321,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         while let Some(expansions) = expansions.pop() {\n             for (mark, expansion) in expansions.into_iter().rev() {\n                 let derives = derives.remove(&mark).unwrap_or_else(Vec::new);\n-                placeholder_expander.add(mark.as_placeholder_id(), expansion, derives);\n+                placeholder_expander.add(NodeId::placeholder_from_mark(mark), expansion, derives);\n             }\n         }\n \n@@ -703,7 +703,7 @@ impl<'a, 'b> InvocationCollector<'a, 'b> {\n                 ..self.cx.current_expansion.clone()\n             },\n         });\n-        placeholder(expansion_kind, mark.as_placeholder_id())\n+        placeholder(expansion_kind, NodeId::placeholder_from_mark(mark))\n     }\n \n     fn collect_bang(&mut self, mac: ast::Mac, span: Span, kind: ExpansionKind) -> Expansion {"}, {"sha": "4fb138d506a8e60eef95a4eba651584d3f88371c", "filename": "src/libsyntax/ext/placeholders.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fext%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Fext%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fplaceholders.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use ast;\n+use ast::{self, NodeId};\n use codemap::{DUMMY_SP, dummy_spanned};\n use ext::base::ExtCtxt;\n use ext::expand::{Expansion, ExpansionKind};\n@@ -88,7 +88,7 @@ impl<'a, 'b> PlaceholderExpander<'a, 'b> {\n         let mut expansion = expansion.fold_with(self);\n         if let Expansion::Items(mut items) = expansion {\n             for derive in derives {\n-                match self.remove(derive.as_placeholder_id()) {\n+                match self.remove(NodeId::placeholder_from_mark(derive)) {\n                     Expansion::Items(derived_items) => items.extend(derived_items),\n                     _ => unreachable!(),\n                 }"}, {"sha": "6c975f3fc40218399393e6b1f6561621f3367f05", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -136,12 +136,12 @@ pub mod print {\n }\n \n pub mod ext {\n+    pub use syntax_pos::hygiene;\n     pub mod base;\n     pub mod build;\n     pub mod derive;\n     pub mod expand;\n     pub mod placeholders;\n-    pub mod hygiene;\n     pub mod quote;\n     pub mod source_util;\n "}, {"sha": "feebbcd6f03b69e67b169be193061b839235fda8", "filename": "src/libsyntax_pos/hygiene.rs", "status": "renamed", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -15,7 +15,6 @@\n //! and definition contexts*. J. Funct. Program. 22, 2 (March 2012), 181-216.\n //! DOI=10.1017/S0956796812000093 http://dx.doi.org/10.1017/S0956796812000093\n \n-use ast::NodeId;\n use std::cell::RefCell;\n use std::collections::HashMap;\n use std::fmt;\n@@ -47,17 +46,13 @@ impl Mark {\n         Mark(0)\n     }\n \n-    pub fn from_placeholder_id(id: NodeId) -> Self {\n-        Mark(id.as_u32())\n-    }\n-\n-    pub fn as_placeholder_id(self) -> NodeId {\n-        NodeId::from_u32(self.0)\n-    }\n-\n     pub fn as_u32(self) -> u32 {\n         self.0\n     }\n+\n+    pub fn from_u32(raw: u32) -> Mark {\n+        Mark(raw)\n+    }\n }\n \n struct HygieneData {", "previous_filename": "src/libsyntax/ext/hygiene.rs"}, {"sha": "1c9a05dadd15fa01370a30779ea817216da3354e", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1979f96549fc41b544d2bf05eb868f26941f2b25/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=1979f96549fc41b544d2bf05eb868f26941f2b25", "patch": "@@ -23,6 +23,7 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n+#![feature(const_fn)]\n #![feature(custom_attribute)]\n #![allow(unused_attributes)]\n #![feature(rustc_private)]\n@@ -41,6 +42,8 @@ use serialize::{Encodable, Decodable, Encoder, Decoder};\n extern crate serialize;\n extern crate serialize as rustc_serialize; // used by deriving\n \n+pub mod hygiene;\n+\n pub type FileName = String;\n \n /// Spans represent a region of code, used for error reporting. Positions in spans"}]}