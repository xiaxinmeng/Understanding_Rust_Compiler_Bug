{"sha": "ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjMjUzNWU5Y2VmOGE2MGM5ZWYxOWE1MGFjOTI4YzRiNWQ0Yjg3YmY=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T09:59:41Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2021-08-10T10:37:10Z"}, "message": "impl gen hash for enums", "tree": {"sha": "41563f3e15ba133fabe48aabbd436681fb8953ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41563f3e15ba133fabe48aabbd436681fb8953ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "html_url": "https://github.com/rust-lang/rust/commit/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65254547298588e2c9304b65366b6e8139e4243", "url": "https://api.github.com/repos/rust-lang/rust/commits/e65254547298588e2c9304b65366b6e8139e4243", "html_url": "https://github.com/rust-lang/rust/commit/e65254547298588e2c9304b65366b6e8139e4243"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "1cd9ab222c5fe31fef120be89f7ded0aa7510c34", "filename": "crates/ide_assists/src/handlers/replace_derive_with_manual_impl.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_derive_with_manual_impl.rs?ref=ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "patch": "@@ -366,6 +366,33 @@ impl Default for Foo {\n         Self {  }\n     }\n }\n+\"#,\n+        )\n+    }\n+\n+    #[test]\n+    fn add_custom_impl_hash_enum() {\n+        check_assist(\n+            replace_derive_with_manual_impl,\n+            r#\"\n+//- minicore: hash\n+#[derive(Has$0h)]\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\"#,\n+            r#\"\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\n+impl core::hash::Hash for Foo {\n+    $0fn hash<H: core::hash::Hasher>(&self, state: &mut H) {\n+        core::mem::discriminant(self).hash(state);\n+    }\n+}\n \"#,\n         )\n     }"}, {"sha": "2908f62dd30dfb4dbdaed29ba3ec6d79e95e26bf", "filename": "crates/ide_assists/src/utils/gen_trait_fn_body.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Futils%2Fgen_trait_fn_body.rs?ref=ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "patch": "@@ -18,6 +18,7 @@ pub(crate) fn gen_trait_fn_body(\n     match trait_path.segment()?.name_ref()?.text().as_str() {\n         \"Debug\" => gen_debug_impl(adt, func),\n         \"Default\" => gen_default_impl(adt, func),\n+        \"Hash\" => gen_hash_impl(adt, func),\n         _ => None,\n     }\n }\n@@ -151,3 +152,49 @@ fn gen_default_impl(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n         }\n     }\n }\n+\n+/// Generate a `Hash` impl based on the fields and members of the target type.\n+fn gen_hash_impl(adt: &ast::Adt, func: &ast::Fn) -> Option<()> {\n+    let body = match adt {\n+        // `Hash` cannot be derived for unions, so no default impl can be provided.\n+        ast::Adt::Union(_) => return None,\n+\n+        // => std::mem::discriminant(self).hash(state);\n+        ast::Adt::Enum(_) => {\n+            let root = make::ext::ident_path(\"core\");\n+            let submodule = make::ext::ident_path(\"mem\");\n+            let fn_name = make::ext::ident_path(\"discriminant\");\n+            let fn_name = make::path_concat(submodule, fn_name);\n+            let fn_name = make::expr_path(make::path_concat(root, fn_name));\n+\n+            let arg = make::expr_path(make::ext::ident_path(\"self\"));\n+            let fn_call = make::expr_call(fn_name, make::arg_list(Some(arg)));\n+\n+            let method = make::name_ref(\"hash\");\n+            let arg = make::expr_path(make::ext::ident_path(\"state\"));\n+            let expr = make::expr_method_call(fn_call, method, make::arg_list(Some(arg)));\n+            let stmt = make::expr_stmt(expr);\n+\n+            make::block_expr(Some(stmt.into()), None).indent(ast::edit::IndentLevel(1))\n+        }\n+        ast::Adt::Struct(strukt) => match strukt.field_list() {\n+            // => self.<field>.hash(state);*\n+            Some(ast::FieldList::RecordFieldList(field_list)) => {\n+                // let mut stmts = vec![];\n+                for field in field_list.fields() {}\n+                todo!();\n+            }\n+\n+            // => self.<field_index>.hash(state);*\n+            Some(ast::FieldList::TupleFieldList(field_list)) => {\n+                todo!();\n+            }\n+\n+            // No fields in the body means there's nothing to hash.\n+            None => make::ext::empty_block_expr(),\n+        },\n+    };\n+\n+    ted::replace(func.body()?.syntax(), body.clone_for_update().syntax());\n+    Some(())\n+}"}, {"sha": "fcc1a169202e4fbd1cfb1e5b7fa2abceecbae038", "filename": "crates/test_utils/src/minicore.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Fminicore.rs?ref=ec2535e9cef8a60c9ef19a50ac928c4b5d4b87bf", "patch": "@@ -25,6 +25,7 @@\n //!     iterator: option\n //!     iterators: iterator, fn\n //!     default: sized\n+//!     hash:\n //!     clone: sized\n //!     copy: clone\n //!     from: sized\n@@ -87,6 +88,16 @@ pub mod default {\n }\n // endregion:default\n \n+// region:hash\n+pub mod hash {\n+    pub trait Hasher {}\n+\n+    pub trait Hash {\n+        fn hash<H: Hasher>(&self, state: &mut H);\n+    }\n+}\n+// endregion:hash\n+\n // region:clone\n pub mod clone {\n     #[lang = \"clone\"]"}]}