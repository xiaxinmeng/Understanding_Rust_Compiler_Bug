{"sha": "ee132c8d07b2de26e2d078c39980a93045759920", "node_id": "C_kwDOAAsO6NoAKGVlMTMyYzhkMDdiMmRlMjZlMmQwNzhjMzk5ODBhOTMwNDU3NTk5MjA", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-20T03:43:35Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-20T09:23:53Z"}, "message": "Bless stderr files after rustfmt", "tree": {"sha": "9f4aabd40b97ae3872cddee86783da9fb02c18e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4aabd40b97ae3872cddee86783da9fb02c18e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee132c8d07b2de26e2d078c39980a93045759920", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmKwPKkACgkQ+boUO5X/\nbYLi5RAAp7bccOzb8jESCRReofqcOjGxp5CSrzaVu9lPC5a5HLHmAzMj/JDNNcG7\nHteOHdi1f5/yYE/OU4t+jkCOKnuXQvebPvksinYfkwjcl7cnDqdIfVipe2srqnUL\nOOh61kkvnBbn5l9YWAu1lnlbknKVdyTvn/IH/WyrsICZWOACV+pBmo4GMo2SAqcH\nlsx8pD7Hh/nYVU4bEvjfarYgn7j0P4h1Z+hsmvL4T/4W+k8A83MLb76EYLkAe5Pk\nJ1nYxnKUmS+7ptqPobwpZcQtYYWlNsFxoC+oEPYnrLnQpp85aTMn2lfRmbctef4P\nbLmG3dE0ODbyH6DAvUWycR845dJiTGq7g6rNCyCgqm4f3h79vM8fF/cguqV2RriX\nFEYFlvd7I+2HYs3ErhDKURAvnVXCcvu/2Tedamxo9Q9EnFWD6L5nQevpy3xXmrQx\n17hW3bhKDb9Pt6x1MRRyPx3E0VJbVkedWS6rBmfqj/icjUA4zM7lcrnsMJQcaExA\nEWtIKGR4xNc6NpjH86YEMLIkAaoSeyVtkkQC32gXxlP8RJznjaoq4Iqn9gsiz5zK\nT9ow3QiIYMmSDNQ4KopST1Dky7Jf0BTtxlJVSL1nDLJNPWvUhMsS5g0bJQ42JsYo\nYecTzM8IW9mnbqT9jcM3pKREt8hx5zhea8mb9Cfyn6nUOylA7MQ=\n=MYqE\n-----END PGP SIGNATURE-----", "payload": "tree 9f4aabd40b97ae3872cddee86783da9fb02c18e4\nparent 66e8751afce516a2ee9fb3324e755f7ad0c42629\nauthor David Tolnay <dtolnay@gmail.com> 1655696615 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1655717033 -0700\n\nBless stderr files after rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee132c8d07b2de26e2d078c39980a93045759920", "html_url": "https://github.com/rust-lang/rust/commit/ee132c8d07b2de26e2d078c39980a93045759920", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee132c8d07b2de26e2d078c39980a93045759920/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66e8751afce516a2ee9fb3324e755f7ad0c42629", "url": "https://api.github.com/repos/rust-lang/rust/commits/66e8751afce516a2ee9fb3324e755f7ad0c42629", "html_url": "https://github.com/rust-lang/rust/commit/66e8751afce516a2ee9fb3324e755f7ad0c42629"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "b096775e61d31c77635d52bdedebce4aec493cd7", "filename": "tests/fail/abort-terminator.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fabort-terminator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fabort-terminator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fabort-terminator.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -3,8 +3,10 @@ note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n error: abnormal termination: the program aborted execution\n   --> $DIR/abort-terminator.rs:LL:CC\n    |\n-LL | extern \"C\" fn panic_abort() { panic!() }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the program aborted execution\n+LL | / extern \"C\" fn panic_abort() {\n+LL | |     panic!()\n+LL | | }\n+   | |_^ the program aborted execution\n    |\n    = note: inside `panic_abort` at $DIR/abort-terminator.rs:LL:CC\n note: inside `main` at $DIR/abort-terminator.rs:LL:CC"}, {"sha": "f197bc7917850e442b13d79bf25f65f65f2132e8", "filename": "tests/fail/alloc/global_system_mixup.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Falloc%2Fglobal_system_mixup.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -12,7 +12,7 @@ LL |         FREE();\n note: inside `main` at $DIR/global_system_mixup.rs:LL:CC\n   --> $DIR/global_system_mixup.rs:LL:CC\n    |\n-LL |     unsafe { System.deallocate(ptr, l); }\n+LL |         System.deallocate(ptr, l);\n    | ^\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "37e1aafec2c013841b00ebaf44ba8ca4d9411d35", "filename": "tests/fail/intrinsics/simd-div-by-zero.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fsimd-div-by-zero.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: dividing by zero\n   --> $DIR/simd-div-by-zero.rs:LL:CC\n    |\n-LL |     simd_div(x, y);\n-   |     ^^^^^^^^^^^^^^ dividing by zero\n+LL |         simd_div(x, y);\n+   |         ^^^^^^^^^^^^^^ dividing by zero\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "b5e8e378a0ab0ec3e380e63a2d9bbc676332bb42", "filename": "tests/fail/intrinsics/simd-div-overflow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fsimd-div-overflow.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: overflow in signed division (dividing MIN by -1)\n   --> $DIR/simd-div-overflow.rs:LL:CC\n    |\n-LL |     simd_div(x, y);\n-   |     ^^^^^^^^^^^^^^ overflow in signed division (dividing MIN by -1)\n+LL |         simd_div(x, y);\n+   |         ^^^^^^^^^^^^^^ overflow in signed division (dividing MIN by -1)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "cfe272d90a1fc2c53906a24e7b1b1d5f6d08488e", "filename": "tests/fail/intrinsics/simd-float-to-int.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fsimd-float-to-int.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -11,8 +11,8 @@ LL | implement! { f32 }\n note: inside `main` at $DIR/simd-float-to-int.rs:LL:CC\n   --> $DIR/simd-float-to-int.rs:LL:CC\n    |\n-LL |     let _x : i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked();\n-   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         let _x: i32x2 = f32x2::from_array([f32::MAX, f32::MIN]).to_int_unchecked();\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `implement` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace"}, {"sha": "0464e67f80c65b3e887d8bbccf0cac6509015cb0", "filename": "tests/fail/intrinsics/simd-gather.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fsimd-gather.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -11,8 +11,8 @@ LL |         unsafe { intrinsics::simd_gather(or, ptrs, enable.to_int()) }\n note: inside `main` at $DIR/simd-gather.rs:LL:CC\n   --> $DIR/simd-gather.rs:LL:CC\n    |\n-LL |     let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n-   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL |         let _result = Simd::gather_select_unchecked(&vec, Mask::splat(true), idxs, Simd::splat(0));\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n note: some details are omitted, run with `MIRIFLAGS=-Zmiri-backtrace=full` for a verbose backtrace\n "}, {"sha": "15c39500d4cb01c1cee29b2723382326d1c1c99e", "filename": "tests/fail/intrinsics/simd-reduce-invalid-bool.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ee132c8d07b2de26e2d078c39980a93045759920/tests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fintrinsics%2Fsimd-reduce-invalid-bool.stderr?ref=ee132c8d07b2de26e2d078c39980a93045759920", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: each element of a SIMD mask must be all-0-bits or all-1-bits\n   --> $DIR/simd-reduce-invalid-bool.rs:LL:CC\n    |\n-LL |     simd_reduce_any(x);\n-   |     ^^^^^^^^^^^^^^^^^^ each element of a SIMD mask must be all-0-bits or all-1-bits\n+LL |         simd_reduce_any(x);\n+   |         ^^^^^^^^^^^^^^^^^^ each element of a SIMD mask must be all-0-bits or all-1-bits\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}]}