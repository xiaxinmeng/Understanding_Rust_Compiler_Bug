{"sha": "fc83427066f0370aa13e0fd425b36eeddb90f4fa", "node_id": "C_kwDOAAsO6NoAKGZjODM0MjcwNjZmMDM3MGFhMTNlMGZkNDI1YjM2ZWVkZGI5MGY0ZmE", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-07T17:01:17Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-10-07T17:23:12Z"}, "message": "Fix test", "tree": {"sha": "9cdaeb0fa7fe103625bc66f2039cfb6403673c91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cdaeb0fa7fe103625bc66f2039cfb6403673c91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc83427066f0370aa13e0fd425b36eeddb90f4fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc83427066f0370aa13e0fd425b36eeddb90f4fa", "html_url": "https://github.com/rust-lang/rust/commit/fc83427066f0370aa13e0fd425b36eeddb90f4fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc83427066f0370aa13e0fd425b36eeddb90f4fa/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "242348343bac8215f942b8d3306643d68bfe8f28", "url": "https://api.github.com/repos/rust-lang/rust/commits/242348343bac8215f942b8d3306643d68bfe8f28", "html_url": "https://github.com/rust-lang/rust/commit/242348343bac8215f942b8d3306643d68bfe8f28"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "c03feb433128cd25ed40d77dccd3a97aae258c77", "filename": "src/test/mir-opt/inline/asm-unwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc83427066f0370aa13e0fd425b36eeddb90f4fa/src%2Ftest%2Fmir-opt%2Finline%2Fasm-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc83427066f0370aa13e0fd425b36eeddb90f4fa/src%2Ftest%2Fmir-opt%2Finline%2Fasm-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fasm-unwind.rs?ref=fc83427066f0370aa13e0fd425b36eeddb90f4fa", "patch": "@@ -1,6 +1,7 @@\n // Tests inlining of `may_unwind` inline assembly.\n //\n // ignore-wasm32-bare compiled with panic=abort by default\n+// needs-asm-support\n #![feature(asm_unwind)]\n \n struct D;"}, {"sha": "57072fc0ad392366342ea2c9779d472e8c832024", "filename": "src/test/mir-opt/inline/asm_unwind.main.Inline.diff", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fc83427066f0370aa13e0fd425b36eeddb90f4fa/src%2Ftest%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/fc83427066f0370aa13e0fd425b36eeddb90f4fa/src%2Ftest%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fasm_unwind.main.Inline.diff?ref=fc83427066f0370aa13e0fd425b36eeddb90f4fa", "patch": "@@ -4,10 +4,10 @@\n   fn main() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/asm-unwind.rs:+0:15: +0:15\n       let _1: ();                          // in scope 0 at $DIR/asm-unwind.rs:+1:5: +1:10\n-+     scope 1 (inlined foo) {              // at $DIR/asm-unwind.rs:20:5: 20:10\n-+         let _2: D;                       // in scope 1 at $DIR/asm-unwind.rs:14:9: 14:11\n++     scope 1 (inlined foo) {              // at $DIR/asm-unwind.rs:21:5: 21:10\n++         let _2: D;                       // in scope 1 at $DIR/asm-unwind.rs:15:9: 15:11\n +         scope 2 {\n-+             debug _d => _2;              // in scope 2 at $DIR/asm-unwind.rs:14:9: 14:11\n++             debug _d => _2;              // in scope 2 at $DIR/asm-unwind.rs:15:9: 15:11\n +             scope 3 {\n +             }\n +         }\n@@ -17,29 +17,29 @@\n           StorageLive(_1);                 // scope 0 at $DIR/asm-unwind.rs:+1:5: +1:10\n -         _1 = foo() -> bb1;               // scope 0 at $DIR/asm-unwind.rs:+1:5: +1:10\n -                                          // mir::Constant\n--                                          // + span: $DIR/asm-unwind.rs:20:5: 20:8\n+-                                          // + span: $DIR/asm-unwind.rs:21:5: 21:8\n -                                          // + literal: Const { ty: fn() {foo}, val: Value(<ZST>) }\n-+         StorageLive(_2);                 // scope 1 at $DIR/asm-unwind.rs:14:9: 14:11\n-+         asm!(\"\", options(MAY_UNWIND)) -> [return: bb1, unwind: bb3]; // scope 3 at $DIR/asm-unwind.rs:15:14: 15:54\n++         StorageLive(_2);                 // scope 1 at $DIR/asm-unwind.rs:15:9: 15:11\n++         asm!(\"\", options(MAY_UNWIND)) -> [return: bb1, unwind: bb3]; // scope 3 at $DIR/asm-unwind.rs:16:14: 16:54\n       }\n   \n       bb1: {\n-+         drop(_2) -> bb2;                 // scope 1 at $DIR/asm-unwind.rs:16:1: 16:2\n++         drop(_2) -> bb2;                 // scope 1 at $DIR/asm-unwind.rs:17:1: 17:2\n +     }\n + \n +     bb2: {\n-+         StorageDead(_2);                 // scope 1 at $DIR/asm-unwind.rs:16:1: 16:2\n++         StorageDead(_2);                 // scope 1 at $DIR/asm-unwind.rs:17:1: 17:2\n           StorageDead(_1);                 // scope 0 at $DIR/asm-unwind.rs:+1:10: +1:11\n           _0 = const ();                   // scope 0 at $DIR/asm-unwind.rs:+0:15: +2:2\n           return;                          // scope 0 at $DIR/asm-unwind.rs:+2:2: +2:2\n +     }\n + \n +     bb3 (cleanup): {\n-+         drop(_2) -> bb4;                 // scope 1 at $DIR/asm-unwind.rs:16:1: 16:2\n++         drop(_2) -> bb4;                 // scope 1 at $DIR/asm-unwind.rs:17:1: 17:2\n +     }\n + \n +     bb4 (cleanup): {\n-+         resume;                          // scope 1 at $DIR/asm-unwind.rs:13:1: 16:2\n++         resume;                          // scope 1 at $DIR/asm-unwind.rs:14:1: 17:2\n       }\n   }\n   "}]}