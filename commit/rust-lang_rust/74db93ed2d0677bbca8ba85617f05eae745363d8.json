{"sha": "74db93ed2d0677bbca8ba85617f05eae745363d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZGI5M2VkMmQwNjc3YmJjYThiYTg1NjE3ZjA1ZWFlNzQ1MzYzZDg=", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2020-10-31T20:16:14Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2021-03-23T00:02:09Z"}, "message": "Preserve signed zero on roundtrip\n\nThis commit removes the previous mechanism of differentiating\nbetween \"Debug\" and \"Display\" formattings for the sign of -0 so as\nto comply with the IEEE 754 standard's requirements on external\ncharacter sequences preserving various attributes of a floating\npoint representation.\n\nIn addition, numerous tests are fixed.", "tree": {"sha": "75be2048eef663446a8c6b32264c4a59c9e9f1d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75be2048eef663446a8c6b32264c4a59c9e9f1d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74db93ed2d0677bbca8ba85617f05eae745363d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74db93ed2d0677bbca8ba85617f05eae745363d8", "html_url": "https://github.com/rust-lang/rust/commit/74db93ed2d0677bbca8ba85617f05eae745363d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74db93ed2d0677bbca8ba85617f05eae745363d8/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "588cc644ad6d6d6419dcd48651ae451557cdc100", "url": "https://api.github.com/repos/rust-lang/rust/commits/588cc644ad6d6d6419dcd48651ae451557cdc100", "html_url": "https://github.com/rust-lang/rust/commit/588cc644ad6d6d6419dcd48651ae451557cdc100"}], "stats": {"total": 302, "additions": 102, "deletions": 200}, "files": [{"sha": "ade3bc2d334b0440c46bb234fc6237828dda4fda", "filename": "library/alloc/tests/fmt.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Falloc%2Ftests%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Falloc%2Ftests%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Ffmt.rs?ref=74db93ed2d0677bbca8ba85617f05eae745363d8", "patch": "@@ -154,8 +154,7 @@ fn test_format_macro_interface() {\n     t!(format!(\"{:+10.3e}\", -1.2345e6f64), \"  -1.234e6\");\n \n     // Float edge cases\n-    t!(format!(\"{}\", -0.0), \"0\");\n-    t!(format!(\"{:?}\", -0.0), \"-0.0\");\n+    t!(format!(\"{}\", -0.0), \"-0\");\n     t!(format!(\"{:?}\", 0.0), \"0.0\");\n \n     // sign aware zero padding"}, {"sha": "ece3cde00158074feaaa79348a0e40a4cf51e3dd", "filename": "library/core/src/fmt/float.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Fsrc%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Fsrc%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Ffloat.rs?ref=74db93ed2d0677bbca8ba85617f05eae745363d8", "patch": "@@ -54,21 +54,14 @@ where\n }\n \n // Common code of floating point Debug and Display.\n-fn float_to_decimal_common<T>(\n-    fmt: &mut Formatter<'_>,\n-    num: &T,\n-    negative_zero: bool,\n-    min_precision: usize,\n-) -> Result\n+fn float_to_decimal_common<T>(fmt: &mut Formatter<'_>, num: &T, min_precision: usize) -> Result\n where\n     T: flt2dec::DecodableFloat,\n {\n     let force_sign = fmt.sign_plus();\n-    let sign = match (force_sign, negative_zero) {\n-        (false, false) => flt2dec::Sign::Minus,\n-        (false, true) => flt2dec::Sign::MinusRaw,\n-        (true, false) => flt2dec::Sign::MinusPlus,\n-        (true, true) => flt2dec::Sign::MinusPlusRaw,\n+    let sign = match force_sign {\n+        false => flt2dec::Sign::Minus,\n+        true => flt2dec::Sign::MinusPlus,\n     };\n \n     if let Some(precision) = fmt.precision {\n@@ -156,14 +149,14 @@ macro_rules! floating {\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Debug for $ty {\n             fn fmt(&self, fmt: &mut Formatter<'_>) -> Result {\n-                float_to_decimal_common(fmt, self, true, 1)\n+                float_to_decimal_common(fmt, self, 1)\n             }\n         }\n \n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Display for $ty {\n             fn fmt(&self, fmt: &mut Formatter<'_>) -> Result {\n-                float_to_decimal_common(fmt, self, false, 0)\n+                float_to_decimal_common(fmt, self, 0)\n             }\n         }\n "}, {"sha": "93bdf5040e08b52f54e31365aa2e05e9d61bed6a", "filename": "library/core/src/num/flt2dec/mod.rs", "status": "modified", "additions": 6, "deletions": 26, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Fsrc%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Fsrc%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fflt2dec%2Fmod.rs?ref=74db93ed2d0677bbca8ba85617f05eae745363d8", "patch": "@@ -399,45 +399,25 @@ fn digits_to_exp_str<'a>(\n /// Sign formatting options.\n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n pub enum Sign {\n-    /// Prints `-` only for the negative non-zero values.\n-    Minus, // -inf -1  0  0  1  inf nan\n-    /// Prints `-` only for any negative values (including the negative zero).\n-    MinusRaw, // -inf -1 -0  0  1  inf nan\n-    /// Prints `-` for the negative non-zero values, or `+` otherwise.\n-    MinusPlus, // -inf -1 +0 +0 +1 +inf nan\n-    /// Prints `-` for any negative values (including the negative zero), or `+` otherwise.\n-    MinusPlusRaw, // -inf -1 -0 +0 +1 +inf nan\n+    /// Prints `-` for any negative value.\n+    Minus, // -inf -1 -0  0  1  inf nan\n+    /// Prints `-` for any negative value, or `+` otherwise.\n+    MinusPlus, // -inf -1 -0 +0 +1 +inf nan\n }\n \n /// Returns the static byte string corresponding to the sign to be formatted.\n /// It can be either `\"\"`, `\"+\"` or `\"-\"`.\n fn determine_sign(sign: Sign, decoded: &FullDecoded, negative: bool) -> &'static str {\n     match (*decoded, sign) {\n         (FullDecoded::Nan, _) => \"\",\n-        (FullDecoded::Zero, Sign::Minus) => \"\",\n-        (FullDecoded::Zero, Sign::MinusRaw) => {\n+        (_, Sign::Minus) => {\n             if negative {\n                 \"-\"\n             } else {\n                 \"\"\n             }\n         }\n-        (FullDecoded::Zero, Sign::MinusPlus) => \"+\",\n-        (FullDecoded::Zero, Sign::MinusPlusRaw) => {\n-            if negative {\n-                \"-\"\n-            } else {\n-                \"+\"\n-            }\n-        }\n-        (_, Sign::Minus | Sign::MinusRaw) => {\n-            if negative {\n-                \"-\"\n-            } else {\n-                \"\"\n-            }\n-        }\n-        (_, Sign::MinusPlus | Sign::MinusPlusRaw) => {\n+        (_, Sign::MinusPlus) => {\n             if negative {\n                 \"-\"\n             } else {"}, {"sha": "960a7ca5ff5086cacc2089e8ea7a7d86513c52d6", "filename": "library/core/tests/num/flt2dec/mod.rs", "status": "modified", "additions": 88, "deletions": 158, "changes": 246, "blob_url": "https://github.com/rust-lang/rust/blob/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74db93ed2d0677bbca8ba85617f05eae745363d8/library%2Fcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fflt2dec%2Fmod.rs?ref=74db93ed2d0677bbca8ba85617f05eae745363d8", "patch": "@@ -514,51 +514,38 @@ where\n     let f = &mut f_;\n \n     assert_eq!(to_string(f, 0.0, Minus, 0), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 0), \"0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 0), \"0\");\n     assert_eq!(to_string(f, 0.0, MinusPlus, 0), \"+0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0), \"+0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 0), \"0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 0), \"-0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"+0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"-0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 1), \"0.0\");\n     assert_eq!(to_string(f, 0.0, Minus, 1), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 1), \"0.0\");\n     assert_eq!(to_string(f, 0.0, MinusPlus, 1), \"+0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1), \"+0.0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 8), \"0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 8), \"-0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"+0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, Minus, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"-0.00000000\");\n \n     assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 0), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0), \"inf\");\n     assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 0), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 0), \"+inf\");\n     assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 1), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 64), \"NaN\");\n     assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 1), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 64), \"-inf\");\n \n     assert_eq!(to_string(f, 3.14, Minus, 0), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 0), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, Minus, 0), \"3.14\");\n     assert_eq!(to_string(f, 3.14, MinusPlus, 0), \"+3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0), \"+3.14\");\n     assert_eq!(to_string(f, -3.14, Minus, 0), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 0), \"-3.14\");\n+    assert_eq!(to_string(f, -3.14, Minus, 0), \"-3.14\");\n     assert_eq!(to_string(f, -3.14, MinusPlus, 0), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0), \"-3.14\");\n     assert_eq!(to_string(f, 3.14, Minus, 1), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 2), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 3), \"+3.140\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, 3.14, Minus, 2), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n     assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 8), \"-3.14000000\");\n     assert_eq!(to_string(f, -3.14, MinusPlus, 8), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8), \"-3.14000000\");\n \n     assert_eq!(to_string(f, 7.5e-11, Minus, 0), \"0.000000000075\");\n     assert_eq!(to_string(f, 7.5e-11, Minus, 3), \"0.000000000075\");\n@@ -615,68 +602,48 @@ where\n     let f = &mut f_;\n \n     assert_eq!(to_string(f, 0.0, Minus, (-4, 16), false), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, (-4, 16), false), \"0\");\n+    assert_eq!(to_string(f, 0.0, Minus, (-4, 16), false), \"0\");\n     assert_eq!(to_string(f, 0.0, MinusPlus, (-4, 16), false), \"+0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, (-4, 16), false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, Minus, (-4, 16), false), \"0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, (-4, 16), false), \"-0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, (-4, 16), false), \"+0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, (-4, 16), false), \"-0\");\n+    assert_eq!(to_string(f, -0.0, Minus, (-4, 16), false), \"-0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, (-4, 16), false), \"-0\");\n     assert_eq!(to_string(f, 0.0, Minus, (0, 0), true), \"0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, (0, 0), false), \"0e0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, (-9, -5), true), \"+0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, (5, 9), false), \"+0e0\");\n-    assert_eq!(to_string(f, -0.0, Minus, (0, 0), true), \"0E0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, (0, 0), false), \"-0e0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, (-9, -5), true), \"+0E0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, (5, 9), false), \"-0e0\");\n+    assert_eq!(to_string(f, 0.0, Minus, (0, 0), false), \"0e0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, (5, 9), false), \"+0e0\");\n+    assert_eq!(to_string(f, -0.0, Minus, (0, 0), true), \"-0E0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, (5, 9), false), \"-0e0\");\n \n     assert_eq!(to_string(f, 1.0 / 0.0, Minus, (-4, 16), false), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, (-4, 16), true), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, (-4, 16), false), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, (-4, 16), true), \"+inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, (-4, 16), true), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, (-4, 16), true), \"+inf\");\n     assert_eq!(to_string(f, 0.0 / 0.0, Minus, (0, 0), false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, (0, 0), true), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, (-9, -5), false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, (5, 9), true), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, (0, 0), true), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, (5, 9), true), \"NaN\");\n     assert_eq!(to_string(f, -1.0 / 0.0, Minus, (0, 0), false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, (0, 0), true), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, (-9, -5), false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, (5, 9), true), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, (0, 0), true), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, (5, 9), true), \"-inf\");\n \n     assert_eq!(to_string(f, 3.14, Minus, (-4, 16), false), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, (-4, 16), false), \"3.14\");\n     assert_eq!(to_string(f, 3.14, MinusPlus, (-4, 16), false), \"+3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, (-4, 16), false), \"+3.14\");\n     assert_eq!(to_string(f, -3.14, Minus, (-4, 16), false), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, (-4, 16), false), \"-3.14\");\n     assert_eq!(to_string(f, -3.14, MinusPlus, (-4, 16), false), \"-3.14\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, (-4, 16), false), \"-3.14\");\n     assert_eq!(to_string(f, 3.14, Minus, (0, 0), true), \"3.14E0\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, (0, 0), false), \"3.14e0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, (-9, -5), true), \"+3.14E0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, (5, 9), false), \"+3.14e0\");\n+    assert_eq!(to_string(f, 3.14, Minus, (0, 0), false), \"3.14e0\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, (5, 9), false), \"+3.14e0\");\n     assert_eq!(to_string(f, -3.14, Minus, (0, 0), true), \"-3.14E0\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, (0, 0), false), \"-3.14e0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, (-9, -5), true), \"-3.14E0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, (5, 9), false), \"-3.14e0\");\n+    assert_eq!(to_string(f, -3.14, Minus, (0, 0), false), \"-3.14e0\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, (5, 9), false), \"-3.14e0\");\n \n     assert_eq!(to_string(f, 0.1, Minus, (-4, 16), false), \"0.1\");\n-    assert_eq!(to_string(f, 0.1, MinusRaw, (-4, 16), false), \"0.1\");\n+    assert_eq!(to_string(f, 0.1, Minus, (-4, 16), false), \"0.1\");\n     assert_eq!(to_string(f, 0.1, MinusPlus, (-4, 16), false), \"+0.1\");\n-    assert_eq!(to_string(f, 0.1, MinusPlusRaw, (-4, 16), false), \"+0.1\");\n     assert_eq!(to_string(f, -0.1, Minus, (-4, 16), false), \"-0.1\");\n-    assert_eq!(to_string(f, -0.1, MinusRaw, (-4, 16), false), \"-0.1\");\n     assert_eq!(to_string(f, -0.1, MinusPlus, (-4, 16), false), \"-0.1\");\n-    assert_eq!(to_string(f, -0.1, MinusPlusRaw, (-4, 16), false), \"-0.1\");\n     assert_eq!(to_string(f, 0.1, Minus, (0, 0), true), \"1E-1\");\n-    assert_eq!(to_string(f, 0.1, MinusRaw, (0, 0), false), \"1e-1\");\n-    assert_eq!(to_string(f, 0.1, MinusPlus, (-9, -5), true), \"+1E-1\");\n-    assert_eq!(to_string(f, 0.1, MinusPlusRaw, (5, 9), false), \"+1e-1\");\n+    assert_eq!(to_string(f, 0.1, Minus, (0, 0), false), \"1e-1\");\n+    assert_eq!(to_string(f, 0.1, MinusPlus, (5, 9), false), \"+1e-1\");\n     assert_eq!(to_string(f, -0.1, Minus, (0, 0), true), \"-1E-1\");\n-    assert_eq!(to_string(f, -0.1, MinusRaw, (0, 0), false), \"-1e-1\");\n-    assert_eq!(to_string(f, -0.1, MinusPlus, (-9, -5), true), \"-1E-1\");\n-    assert_eq!(to_string(f, -0.1, MinusPlusRaw, (5, 9), false), \"-1e-1\");\n+    assert_eq!(to_string(f, -0.1, Minus, (0, 0), false), \"-1e-1\");\n+    assert_eq!(to_string(f, -0.1, MinusPlus, (5, 9), false), \"-1e-1\");\n \n     assert_eq!(to_string(f, 7.5e-11, Minus, (-4, 16), false), \"7.5e-11\");\n     assert_eq!(to_string(f, 7.5e-11, Minus, (-11, 10), false), \"0.000000000075\");\n@@ -734,68 +701,51 @@ where\n     let f = &mut f_;\n \n     assert_eq!(to_string(f, 0.0, Minus, 1, true), \"0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 1, false), \"0e0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 1, true), \"+0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1, false), \"+0e0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 1, true), \"0E0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 1, false), \"-0e0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 1, true), \"+0E0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 1, false), \"-0e0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 1, false), \"0e0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 1, false), \"+0e0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 1, true), \"-0E0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 1, false), \"-0e0\");\n     assert_eq!(to_string(f, 0.0, Minus, 2, true), \"0.0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 2, false), \"0.0e0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlus, 2, true), \"+0.0E0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 2, false), \"+0.0e0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 8, true), \"0.0000000E0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 8, false), \"-0.0000000e0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 8, true), \"+0.0000000E0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8, false), \"-0.0000000e0\");\n+    assert_eq!(to_string(f, 0.0, Minus, 2, false), \"0.0e0\");\n+    assert_eq!(to_string(f, 0.0, MinusPlus, 2, false), \"+0.0e0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 8, false), \"-0.0000000e0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 8, false), \"-0.0000000e0\");\n \n     assert_eq!(to_string(f, 1.0 / 0.0, Minus, 1, false), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 1, true), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 1, false), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 1, true), \"+inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 1, true), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 1, true), \"+inf\");\n     assert_eq!(to_string(f, 0.0 / 0.0, Minus, 8, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 8, true), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8, false), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 8, true), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 8, true), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8, true), \"NaN\");\n     assert_eq!(to_string(f, -1.0 / 0.0, Minus, 64, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 64, true), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 64, false), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64, true), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 64, true), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 64, true), \"-inf\");\n \n     assert_eq!(to_string(f, 3.14, Minus, 1, true), \"3E0\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 1, false), \"3e0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 1, true), \"+3E0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 1, false), \"+3e0\");\n+    assert_eq!(to_string(f, 3.14, Minus, 1, false), \"3e0\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 1, false), \"+3e0\");\n     assert_eq!(to_string(f, -3.14, Minus, 2, true), \"-3.1E0\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 2, false), \"-3.1e0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 2, true), \"-3.1E0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 2, false), \"-3.1e0\");\n+    assert_eq!(to_string(f, -3.14, Minus, 2, false), \"-3.1e0\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 2, false), \"-3.1e0\");\n     assert_eq!(to_string(f, 3.14, Minus, 3, true), \"3.14E0\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 3, false), \"3.14e0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 3, true), \"+3.14E0\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 3, false), \"+3.14e0\");\n+    assert_eq!(to_string(f, 3.14, Minus, 3, false), \"3.14e0\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 3, false), \"+3.14e0\");\n     assert_eq!(to_string(f, -3.14, Minus, 4, true), \"-3.140E0\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 4, false), \"-3.140e0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlus, 4, true), \"-3.140E0\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 4, false), \"-3.140e0\");\n+    assert_eq!(to_string(f, -3.14, Minus, 4, false), \"-3.140e0\");\n+    assert_eq!(to_string(f, -3.14, MinusPlus, 4, false), \"-3.140e0\");\n \n     assert_eq!(to_string(f, 0.195, Minus, 1, false), \"2e-1\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 1, true), \"2E-1\");\n-    assert_eq!(to_string(f, 0.195, MinusPlus, 1, false), \"+2e-1\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 1, true), \"+2E-1\");\n+    assert_eq!(to_string(f, 0.195, Minus, 1, true), \"2E-1\");\n+    assert_eq!(to_string(f, 0.195, MinusPlus, 1, true), \"+2E-1\");\n     assert_eq!(to_string(f, -0.195, Minus, 2, false), \"-2.0e-1\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 2, true), \"-2.0E-1\");\n-    assert_eq!(to_string(f, -0.195, MinusPlus, 2, false), \"-2.0e-1\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 2, true), \"-2.0E-1\");\n+    assert_eq!(to_string(f, -0.195, Minus, 2, true), \"-2.0E-1\");\n+    assert_eq!(to_string(f, -0.195, MinusPlus, 2, true), \"-2.0E-1\");\n     assert_eq!(to_string(f, 0.195, Minus, 3, false), \"1.95e-1\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 3, true), \"1.95E-1\");\n-    assert_eq!(to_string(f, 0.195, MinusPlus, 3, false), \"+1.95e-1\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 3, true), \"+1.95E-1\");\n+    assert_eq!(to_string(f, 0.195, Minus, 3, true), \"1.95E-1\");\n+    assert_eq!(to_string(f, 0.195, MinusPlus, 3, true), \"+1.95E-1\");\n     assert_eq!(to_string(f, -0.195, Minus, 4, false), \"-1.950e-1\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 4, true), \"-1.950E-1\");\n-    assert_eq!(to_string(f, -0.195, MinusPlus, 4, false), \"-1.950e-1\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 4, true), \"-1.950E-1\");\n+    assert_eq!(to_string(f, -0.195, Minus, 4, true), \"-1.950E-1\");\n+    assert_eq!(to_string(f, -0.195, MinusPlus, 4, true), \"-1.950E-1\");\n \n     assert_eq!(to_string(f, 9.5, Minus, 1, false), \"1e1\");\n     assert_eq!(to_string(f, 9.5, Minus, 2, false), \"9.5e0\");\n@@ -1007,68 +957,48 @@ where\n     let f = &mut f_;\n \n     assert_eq!(to_string(f, 0.0, Minus, 0), \"0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 0), \"0\");\n     assert_eq!(to_string(f, 0.0, MinusPlus, 0), \"+0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 0), \"+0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 0), \"0\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 0), \"-0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"+0\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, Minus, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 0), \"-0\");\n     assert_eq!(to_string(f, 0.0, Minus, 1), \"0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusRaw, 1), \"0.0\");\n     assert_eq!(to_string(f, 0.0, MinusPlus, 1), \"+0.0\");\n-    assert_eq!(to_string(f, 0.0, MinusPlusRaw, 1), \"+0.0\");\n-    assert_eq!(to_string(f, -0.0, Minus, 8), \"0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusRaw, 8), \"-0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"+0.00000000\");\n-    assert_eq!(to_string(f, -0.0, MinusPlusRaw, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, Minus, 8), \"-0.00000000\");\n+    assert_eq!(to_string(f, -0.0, MinusPlus, 8), \"-0.00000000\");\n \n     assert_eq!(to_string(f, 1.0 / 0.0, Minus, 0), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusRaw, 1), \"inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 8), \"+inf\");\n-    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlusRaw, 64), \"+inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, Minus, 1), \"inf\");\n+    assert_eq!(to_string(f, 1.0 / 0.0, MinusPlus, 64), \"+inf\");\n     assert_eq!(to_string(f, 0.0 / 0.0, Minus, 0), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusRaw, 1), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 8), \"NaN\");\n-    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlusRaw, 64), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, Minus, 1), \"NaN\");\n+    assert_eq!(to_string(f, 0.0 / 0.0, MinusPlus, 64), \"NaN\");\n     assert_eq!(to_string(f, -1.0 / 0.0, Minus, 0), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusRaw, 1), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 8), \"-inf\");\n-    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlusRaw, 64), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, Minus, 1), \"-inf\");\n+    assert_eq!(to_string(f, -1.0 / 0.0, MinusPlus, 64), \"-inf\");\n \n     assert_eq!(to_string(f, 3.14, Minus, 0), \"3\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 0), \"3\");\n+    assert_eq!(to_string(f, 3.14, Minus, 0), \"3\");\n     assert_eq!(to_string(f, 3.14, MinusPlus, 0), \"+3\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 0), \"+3\");\n     assert_eq!(to_string(f, -3.14, Minus, 0), \"-3\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 0), \"-3\");\n+    assert_eq!(to_string(f, -3.14, Minus, 0), \"-3\");\n     assert_eq!(to_string(f, -3.14, MinusPlus, 0), \"-3\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 0), \"-3\");\n     assert_eq!(to_string(f, 3.14, Minus, 1), \"3.1\");\n-    assert_eq!(to_string(f, 3.14, MinusRaw, 2), \"3.14\");\n-    assert_eq!(to_string(f, 3.14, MinusPlus, 3), \"+3.140\");\n-    assert_eq!(to_string(f, 3.14, MinusPlusRaw, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, 3.14, Minus, 2), \"3.14\");\n+    assert_eq!(to_string(f, 3.14, MinusPlus, 4), \"+3.1400\");\n+    assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n     assert_eq!(to_string(f, -3.14, Minus, 8), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusRaw, 8), \"-3.14000000\");\n     assert_eq!(to_string(f, -3.14, MinusPlus, 8), \"-3.14000000\");\n-    assert_eq!(to_string(f, -3.14, MinusPlusRaw, 8), \"-3.14000000\");\n \n     assert_eq!(to_string(f, 0.195, Minus, 0), \"0\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 0), \"0\");\n     assert_eq!(to_string(f, 0.195, MinusPlus, 0), \"+0\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 0), \"+0\");\n     assert_eq!(to_string(f, -0.195, Minus, 0), \"-0\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 0), \"-0\");\n+    assert_eq!(to_string(f, -0.195, Minus, 0), \"-0\");\n     assert_eq!(to_string(f, -0.195, MinusPlus, 0), \"-0\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 0), \"-0\");\n     assert_eq!(to_string(f, 0.195, Minus, 1), \"0.2\");\n-    assert_eq!(to_string(f, 0.195, MinusRaw, 2), \"0.20\");\n-    assert_eq!(to_string(f, 0.195, MinusPlus, 3), \"+0.195\");\n-    assert_eq!(to_string(f, 0.195, MinusPlusRaw, 4), \"+0.1950\");\n+    assert_eq!(to_string(f, 0.195, Minus, 2), \"0.20\");\n+    assert_eq!(to_string(f, 0.195, MinusPlus, 4), \"+0.1950\");\n     assert_eq!(to_string(f, -0.195, Minus, 5), \"-0.19500\");\n-    assert_eq!(to_string(f, -0.195, MinusRaw, 6), \"-0.195000\");\n-    assert_eq!(to_string(f, -0.195, MinusPlus, 7), \"-0.1950000\");\n-    assert_eq!(to_string(f, -0.195, MinusPlusRaw, 8), \"-0.19500000\");\n+    assert_eq!(to_string(f, -0.195, Minus, 6), \"-0.195000\");\n+    assert_eq!(to_string(f, -0.195, MinusPlus, 8), \"-0.19500000\");\n \n     assert_eq!(to_string(f, 999.5, Minus, 0), \"1000\");\n     assert_eq!(to_string(f, 999.5, Minus, 1), \"999.5\");"}, {"sha": "3a50ed224b552aacb0bc5576249b129fe0bbf4ee", "filename": "src/test/mir-opt/funky_arms.float_to_exponential_common.ConstProp.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74db93ed2d0677bbca8ba85617f05eae745363d8/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/74db93ed2d0677bbca8ba85617f05eae745363d8/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Ffunky_arms.float_to_exponential_common.ConstProp.diff?ref=74db93ed2d0677bbca8ba85617f05eae745363d8", "patch": "@@ -51,7 +51,7 @@\n       }\n   \n       bb2: {\n-          discriminant(_6) = 2;            // scope 1 at $DIR/funky_arms.rs:21:17: 21:41\n+          discriminant(_6) = 1;            // scope 1 at $DIR/funky_arms.rs:21:17: 21:41\n           goto -> bb4;                     // scope 1 at $DIR/funky_arms.rs:19:16: 22:6\n       }\n   "}]}