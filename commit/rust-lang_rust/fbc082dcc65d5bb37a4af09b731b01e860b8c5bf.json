{"sha": "fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYzA4MmRjYzY1ZDViYjM3YTRhZjA5YjczMWIwMWU4NjBiOGM1YmY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-26T17:51:14Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-06T20:24:48Z"}, "message": "move auxiliary builds to a test-relative `aux`\n\nInstead of finding aux-build files in `auxiliary`, we now search for an\n`aux` directory relative to the test. So if your test is\n`compile-fail/foo.rs`, we would look in `compile-fail/aux`.  Similarly,\nwe ignore the `aux` directory when searching for tets.", "tree": {"sha": "0ba4a400b7d8863f55a892ee6deeaa7733d7ac18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ba4a400b7d8863f55a892ee6deeaa7733d7ac18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "html_url": "https://github.com/rust-lang/rust/commit/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77ae7591a88a87f901cfd1e6a8a9e77a944a49b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ae7591a88a87f901cfd1e6a8a9e77a944a49b4", "html_url": "https://github.com/rust-lang/rust/commit/77ae7591a88a87f901cfd1e6a8a9e77a944a49b4"}], "stats": {"total": 9685, "additions": 9641, "deletions": 44}, "files": [{"sha": "49b8e43836e5227540e192fef1ccc863a4660b08", "filename": "src/test/codegen-units/item-collection/aux/cgu_export_trait_method.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_export_trait_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_export_trait_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_export_trait_method.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Trait : Sized {\n+    fn without_self() -> u32;\n+    fn without_self_default() -> u32 { 0 }\n+\n+    fn with_default_impl(self) -> Self { self }\n+    fn with_default_impl_generic<T>(self, x: T) -> (Self, T) { (self, x) }\n+\n+    fn without_default_impl(x: u32) -> (Self, u32);\n+    fn without_default_impl_generic<T>(x: T) -> (Self, T);\n+}\n+\n+impl Trait for char {\n+    fn without_self() -> u32 { 2 }\n+    fn without_default_impl(x: u32) -> (Self, u32) { ('c', x) }\n+    fn without_default_impl_generic<T>(x: T) -> (Self, T) { ('c', x) }\n+}\n+\n+impl Trait for u32 {\n+    fn without_self() -> u32 { 1 }\n+    fn without_default_impl(x: u32) -> (Self, u32) { (0, x) }\n+    fn without_default_impl_generic<T>(x: T) -> (Self, T) { (0, x) }\n+}"}, {"sha": "944d85db508062ee56e99d84f1d4537aef54ff02", "filename": "src/test/codegen-units/item-collection/aux/cgu_extern_closures.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_extern_closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_extern_closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_extern_closures.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#[inline]\n+pub fn inlined_fn(x: i32, y: i32) -> i32 {\n+\n+    let closure = |a, b| { a + b };\n+\n+    closure(x, y)\n+}\n+\n+pub fn inlined_fn_generic<T>(x: i32, y: i32, z: T) -> (i32, T) {\n+\n+    let closure = |a, b| { a + b };\n+\n+    (closure(x, y), z)\n+}\n+\n+pub fn non_inlined_fn(x: i32, y: i32) -> i32 {\n+\n+    let closure = |a, b| { a + b };\n+\n+    closure(x, y)\n+}"}, {"sha": "04c68748eca0e2029f0fcdeb7cf57ba33acefbe1", "filename": "src/test/codegen-units/item-collection/aux/cgu_generic_function.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_generic_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_generic_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Faux%2Fcgu_generic_function.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+struct Struct(u32);\n+\n+#[inline(never)]\n+pub fn foo<T>(x: T) -> (T, u32, i8) {\n+    let (x, Struct(y)) = bar(x);\n+    (x, y, 2)\n+}\n+\n+#[inline(never)]\n+fn bar<T>(x: T) -> (T, Struct) {\n+    let _ = not_exported_and_not_generic(0);\n+    (x, Struct(1))\n+}\n+\n+// These should not contribute to the codegen items of other crates.\n+#[inline(never)]\n+pub fn exported_but_not_generic(x: i32) -> i64 {\n+    x as i64\n+}\n+\n+#[inline(never)]\n+fn not_exported_and_not_generic(x: u32) -> u64 {\n+    x as u64\n+}\n+"}, {"sha": "e4ba9fae41246cb0e19b79c591a28d03825abb0b", "filename": "src/test/codegen-units/partitioning/aux/cgu_explicit_inlining.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_explicit_inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_explicit_inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_explicit_inlining.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#[inline]\n+pub fn inlined() {}\n+\n+#[inline(always)]\n+pub fn always_inlined() {}\n+\n+#[inline(never)]\n+pub fn never_inlined() {}"}, {"sha": "049bdb46579eea767ae139473ee7372c469bff00", "filename": "src/test/codegen-units/partitioning/aux/cgu_extern_drop_glue.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_extern_drop_glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_extern_drop_glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_extern_drop_glue.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct Struct(pub u32);\n+\n+impl Drop for Struct {\n+    fn drop(&mut self) {}\n+}"}, {"sha": "04c68748eca0e2029f0fcdeb7cf57ba33acefbe1", "filename": "src/test/codegen-units/partitioning/aux/cgu_generic_function.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_generic_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_generic_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Faux%2Fcgu_generic_function.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+struct Struct(u32);\n+\n+#[inline(never)]\n+pub fn foo<T>(x: T) -> (T, u32, i8) {\n+    let (x, Struct(y)) = bar(x);\n+    (x, y, 2)\n+}\n+\n+#[inline(never)]\n+fn bar<T>(x: T) -> (T, Struct) {\n+    let _ = not_exported_and_not_generic(0);\n+    (x, Struct(1))\n+}\n+\n+// These should not contribute to the codegen items of other crates.\n+#[inline(never)]\n+pub fn exported_but_not_generic(x: i32) -> i64 {\n+    x as i64\n+}\n+\n+#[inline(never)]\n+fn not_exported_and_not_generic(x: u32) -> u64 {\n+    x as u64\n+}\n+"}, {"sha": "bab3721a313328b0c067ceb84b7af36ad262a3ee", "filename": "src/test/compile-fail-fulldeps/aux/attr_plugin_test.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fattr_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fattr_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fattr_plugin_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::feature_gate::AttributeType;\n+use rustc_plugin::Registry;\n+\n+\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_attribute(\"foo\".to_owned(), AttributeType::Normal);\n+    reg.register_attribute(\"bar\".to_owned(), AttributeType::CrateLevel);\n+    reg.register_attribute(\"baz\".to_owned(), AttributeType::Whitelisted);\n+}"}, {"sha": "a424517da12f0c2dbda6a5b4e45eb48400faf65f", "filename": "src/test/compile-fail-fulldeps/aux/lint_for_crate.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_for_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private)]\n+#![feature(box_syntax)]\n+\n+#[macro_use] extern crate rustc;\n+extern crate rustc_plugin;\n+extern crate syntax;\n+\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+use rustc::hir;\n+use syntax::attr;\n+\n+declare_lint!(CRATE_NOT_OKAY, Warn, \"crate not marked with #![crate_okay]\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(CRATE_NOT_OKAY)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_crate(&mut self, cx: &LateContext, krate: &hir::Crate) {\n+        if !attr::contains_name(&krate.attrs, \"crate_okay\") {\n+            cx.span_lint(CRATE_NOT_OKAY, krate.span,\n+                         \"crate is not marked with #![crate_okay]\");\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_late_lint_pass(box Pass as LateLintPassObject);\n+}"}, {"sha": "1e9a77724a8ebdfd46a5eabcc407b98f34ee46ac", "filename": "src/test/compile-fail-fulldeps/aux/lint_group_plugin_test.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_group_plugin_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+// Load rustc as a plugin to get macros\n+#[macro_use]\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc::hir;\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+\n+declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n+\n+declare_lint!(PLEASE_LINT, Warn, \"Warn about items named 'pleaselintme'\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(TEST_LINT, PLEASE_LINT)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n+        match &*it.name.as_str() {\n+            \"lintme\" => cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\"),\n+            \"pleaselintme\" => cx.span_lint(PLEASE_LINT, it.span, \"item is named 'pleaselintme'\"),\n+            _ => {}\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_late_lint_pass(box Pass as LateLintPassObject);\n+    reg.register_lint_group(\"lint_me\", vec![TEST_LINT, PLEASE_LINT]);\n+}"}, {"sha": "8ea131da338cb1bd61f60fac56e32fe166a8beb6", "filename": "src/test/compile-fail-fulldeps/aux/lint_plugin_test.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Flint_plugin_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+extern crate syntax;\n+\n+// Load rustc as a plugin to get macros\n+#[macro_use]\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n+                  EarlyLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+use syntax::ast;\n+declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(TEST_LINT)\n+    }\n+}\n+\n+impl EarlyLintPass for Pass {\n+    fn check_item(&mut self, cx: &EarlyContext, it: &ast::Item) {\n+        if it.ident.name.as_str() == \"lintme\" {\n+            cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\");\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_early_lint_pass(box Pass as EarlyLintPassObject);\n+}"}, {"sha": "9e693fcc56440fdee349c02e96b290ca71ead35d", "filename": "src/test/compile-fail-fulldeps/aux/macro_crate_MacroRulesTT.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_MacroRulesTT.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_MacroRulesTT.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_MacroRulesTT.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::parse::token;\n+use syntax::ext::base::MacroRulesTT;\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_syntax_extension(token::intern(\"bogus\"), MacroRulesTT);\n+}"}, {"sha": "3516f566e8a1ffda8f157786da1479d6def7eb47", "filename": "src/test/compile-fail-fulldeps/aux/macro_crate_test.rs", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_crate_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,141 @@\n+// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, quote, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast::{self, TokenTree, Item, MetaItem, ImplItem, TraitItem, ItemKind};\n+use syntax::codemap::Span;\n+use syntax::ext::base::*;\n+use syntax::parse::{self, token};\n+use syntax::ptr::P;\n+use rustc_plugin::Registry;\n+\n+#[macro_export]\n+macro_rules! exported_macro { () => (2) }\n+macro_rules! unexported_macro { () => (3) }\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"make_a_1\", expand_make_a_1);\n+    reg.register_macro(\"identity\", expand_identity);\n+    reg.register_syntax_extension(\n+        token::intern(\"into_multi_foo\"),\n+        // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n+        MultiModifier(Box::new(expand_into_foo_multi)));\n+    reg.register_syntax_extension(\n+        token::intern(\"duplicate\"),\n+        // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n+        MultiDecorator(Box::new(expand_duplicate)));\n+}\n+\n+fn expand_make_a_1(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])\n+                   -> Box<MacResult+'static> {\n+    if !tts.is_empty() {\n+        cx.span_fatal(sp, \"make_a_1 takes no arguments\");\n+    }\n+    MacEager::expr(quote_expr!(cx, 1))\n+}\n+\n+// See Issue #15750\n+fn expand_identity(cx: &mut ExtCtxt, _span: Span, tts: &[TokenTree])\n+                   -> Box<MacResult+'static> {\n+    // Parse an expression and emit it unchanged.\n+    let mut parser = parse::new_parser_from_tts(cx.parse_sess(),\n+        cx.cfg(), tts.to_vec());\n+    let expr = parser.parse_expr().unwrap();\n+    MacEager::expr(quote_expr!(&mut *cx, $expr))\n+}\n+\n+fn expand_into_foo_multi(cx: &mut ExtCtxt,\n+                         sp: Span,\n+                         attr: &MetaItem,\n+                         it: Annotatable) -> Annotatable {\n+    match it {\n+        Annotatable::Item(it) => {\n+            Annotatable::Item(P(Item {\n+                attrs: it.attrs.clone(),\n+                ..(*quote_item!(cx, enum Foo2 { Bar2, Baz2 }).unwrap()).clone()\n+            }))\n+        }\n+        Annotatable::ImplItem(it) => {\n+            quote_item!(cx, impl X { fn foo(&self) -> i32 { 42 } }).unwrap().and_then(|i| {\n+                match i.node {\n+                    ItemKind::Impl(_, _, _, _, _, mut items) => {\n+                        Annotatable::ImplItem(P(items.pop().expect(\"impl method not found\")))\n+                    }\n+                    _ => unreachable!(\"impl parsed to something other than impl\")\n+                }\n+            })\n+        }\n+        Annotatable::TraitItem(it) => {\n+            quote_item!(cx, trait X { fn foo(&self) -> i32 { 0 } }).unwrap().and_then(|i| {\n+                match i.node {\n+                    ItemKind::Trait(_, _, _, mut items) => {\n+                        Annotatable::TraitItem(P(items.pop().expect(\"trait method not found\")))\n+                    }\n+                    _ => unreachable!(\"trait parsed to something other than trait\")\n+                }\n+            })\n+        }\n+    }\n+}\n+\n+// Create a duplicate of the annotatable, based on the MetaItem\n+fn expand_duplicate(cx: &mut ExtCtxt,\n+                    sp: Span,\n+                    mi: &MetaItem,\n+                    it: &Annotatable,\n+                    push: &mut FnMut(Annotatable))\n+{\n+    let copy_name = match mi.node {\n+        ast::MetaItemKind::List(_, ref xs) => {\n+            if let ast::MetaItemKind::Word(ref w) = xs[0].node {\n+                token::str_to_ident(&w)\n+            } else {\n+                cx.span_err(mi.span, \"Expected word\");\n+                return;\n+            }\n+        }\n+        _ => {\n+            cx.span_err(mi.span, \"Expected list\");\n+            return;\n+        }\n+    };\n+\n+    // Duplicate the item but replace its ident by the MetaItem\n+    match it.clone() {\n+        Annotatable::Item(it) => {\n+            let mut new_it = (*it).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::Item(P(new_it)));\n+        }\n+        Annotatable::ImplItem(it) => {\n+            let mut new_it = (*it).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::ImplItem(P(new_it)));\n+        }\n+        Annotatable::TraitItem(tt) => {\n+            let mut new_it = (*tt).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::TraitItem(P(new_it)));\n+        }\n+    }\n+}\n+\n+pub fn foo() {}"}, {"sha": "aaeccc6e89883865bdbdb5607523f9d6ce369f0c", "filename": "src/test/compile-fail-fulldeps/aux/macro_reexport_1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fmacro_reexport_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#[macro_export]\n+macro_rules! reexported {\n+    () => ( 3 )\n+}"}, {"sha": "ae1568b2f88e1c7f819985534bedcb7b39f5ece9", "filename": "src/test/compile-fail-fulldeps/aux/rlib_crate_test.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Frlib_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Frlib_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Frlib_crate_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![feature(plugin_registrar, rustc_private)]\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(_: &mut Registry) {}"}, {"sha": "7024c9dad7c11acb37fe157e021eaf19732eb4b5", "filename": "src/test/compile-fail-fulldeps/aux/use_from_trait_xc.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Faux%2Fuse_from_trait_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+pub use self::sub::{Bar, Baz};\n+\n+pub trait Trait {\n+    fn foo(&self);\n+    type Assoc;\n+    const CONST: u32;\n+}\n+\n+struct Foo;\n+\n+impl Foo {\n+    pub fn new() {}\n+\n+    pub const C: u32 = 0;\n+}\n+\n+mod sub {\n+    pub struct Bar;\n+\n+    impl Bar {\n+        pub fn new() {}\n+    }\n+\n+    pub enum Baz {}\n+\n+    impl Baz {\n+        pub fn new() {}\n+    }\n+}"}, {"sha": "568b247ecdbf326a0a14a3c287b26c18adfb3064", "filename": "src/test/compile-fail/aux/allocator-dylib.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"dylib\"]\n+\n+pub fn foo() {}"}, {"sha": "0d76c0e5eb8d14088c8044ca390cf8ae19a1a5fa", "filename": "src/test/compile-fail/aux/allocator-dylib2.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator-dylib2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}\n+"}, {"sha": "b24784838d00bb39fe94a9cbf2ebb36ed5dfbc1e", "filename": "src/test/compile-fail/aux/allocator1.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(allocator)]\n+#![allocator]\n+#![crate_type = \"rlib\"]\n+#![no_std]"}, {"sha": "b24784838d00bb39fe94a9cbf2ebb36ed5dfbc1e", "filename": "src/test/compile-fail/aux/allocator2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(allocator)]\n+#![allocator]\n+#![crate_type = \"rlib\"]\n+#![no_std]"}, {"sha": "d3eb1f6f7abacf5cbcc190c9f70f2bd1b3830d88", "filename": "src/test/compile-fail/aux/allocator3.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fallocator3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(allocator)]\n+#![no_std]\n+#![allocator]\n+#![crate_type = \"rlib\"]\n+\n+extern crate needs_allocator;\n+"}, {"sha": "4ba0ccdba9bf744ceb064b22c2240bdabf7efeac", "filename": "src/test/compile-fail/aux/ambig_impl_2_lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fambig_impl_2_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fambig_impl_2_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fambig_impl_2_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait me {\n+    fn me(&self) -> usize;\n+}\n+impl me for usize { fn me(&self) -> usize { *self } }"}, {"sha": "08a13fd8bcc9ab47cedd21cb844ad22c56b85da7", "filename": "src/test/compile-fail/aux/cci_class.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+      meows : usize,\n+\n+      pub how_hungry : isize,\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize) -> cat  {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y\n+        }\n+    }\n+}"}, {"sha": "7fe608f1634c2d91574d2aa66ece0d0ded301f93", "filename": "src/test/compile-fail/aux/cci_class_5.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class_5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class_5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcci_class_5.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+        meows : usize,\n+        pub how_hungry : isize,\n+    }\n+\n+    impl cat {\n+        fn nap(&self) {}\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize) -> cat {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y\n+        }\n+    }\n+}"}, {"sha": "18162c5f756b8ed3644b742c22726d7eebf95973", "filename": "src/test/compile-fail/aux/changing-crates-a1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"a\"]\n+\n+pub fn foo<T>() {}"}, {"sha": "28eae023d684b6186682116279b3965266e74323", "filename": "src/test/compile-fail/aux/changing-crates-a2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-a2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"a\"]\n+\n+pub fn foo<T>() { println!(\"hello!\"); }"}, {"sha": "7b1190fc085802ce00142236eec74bbbb979b127", "filename": "src/test/compile-fail/aux/changing-crates-b.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fchanging-crates-b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"b\"]\n+\n+extern crate a;\n+\n+pub fn foo() { a::foo::<isize>(); }"}, {"sha": "d3d389c6a8bd52da51a2579ea7bf4c6408ee2c69", "filename": "src/test/compile-fail/aux/coherence_copy_like_lib.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_copy_like_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_copy_like_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_copy_like_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(fundamental)]\n+\n+pub trait MyCopy { }\n+impl MyCopy for i32 { }\n+\n+pub struct MyStruct<T>(T);\n+\n+#[fundamental]\n+pub struct MyFundamentalStruct<T>(T);"}, {"sha": "0458636a401ef5be00402a224e8dd09c6673ae5d", "filename": "src/test/compile-fail/aux/coherence_inherent_cc_lib.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_inherent_cc_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_inherent_cc_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_inherent_cc_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// See coherence_inherent_cc.rs\n+\n+pub trait TheTrait {\n+    fn the_fn(&self);\n+}\n+\n+pub struct TheStruct;\n+\n+impl TheTrait for TheStruct {\n+    fn the_fn(&self) {}\n+}"}, {"sha": "daa123849e4e797d539db3433a7908c97f18887f", "filename": "src/test/compile-fail/aux/coherence_lib.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Remote {\n+    fn foo(&self) { }\n+}\n+\n+pub trait Remote1<T> {\n+    fn foo(&self, t: T) { }\n+}\n+\n+pub trait Remote2<T, U> {\n+    fn foo(&self, t: T, u: U) { }\n+}\n+\n+pub struct Pair<T,U>(T,U);"}, {"sha": "b22d12300c7d1297a05884baba7349503dc7923a", "filename": "src/test/compile-fail/aux/coherence_orphan_lib.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_orphan_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_orphan_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcoherence_orphan_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait TheTrait<T> {\n+    fn the_fn(&self);\n+}"}, {"sha": "b0d5a6b12727b16225778adc037b0943931a7cc2", "filename": "src/test/compile-fail/aux/const_fn_lib.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fconst_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fconst_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fconst_fn_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Crate that exports a const fn. Used for testing cross-crate.\n+\n+#![crate_type=\"rlib\"]\n+#![feature(const_fn)]\n+\n+pub const fn foo() -> usize { 22 } //~ ERROR const fn is unstable"}, {"sha": "70f7cac94de6c10a4897c328d70be5d980025ce9", "filename": "src/test/compile-fail/aux/crate_a1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo;\n+\n+pub trait Bar{}\n+\n+pub fn bar() -> Box<Bar> {\n+    unimplemented!()\n+}\n+\n+\n+pub fn try_foo(x: Foo){}\n+pub fn try_bar(x: Box<Bar>){}"}, {"sha": "d801f25ba2ee087901d82c8360d790ae7e285c3e", "filename": "src/test/compile-fail/aux/crate_a2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcrate_a2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo;\n+\n+pub trait Bar{}\n+\n+pub fn bar() -> Box<Bar> {\n+    unimplemented!()\n+}"}, {"sha": "050f2fe732935e84799dc479f30d95e7b664b2b7", "filename": "src/test/compile-fail/aux/crateresolve1-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C extra-filename=-1\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 10 }"}, {"sha": "d19b3bafba5075a49fe327811b8f93fd78b15746", "filename": "src/test/compile-fail/aux/crateresolve1-2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C extra-filename=-2\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 20 }"}, {"sha": "c5096ac49a885189b29c3f793096d2d46644848a", "filename": "src/test/compile-fail/aux/crateresolve1-3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fcrateresolve1-3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-C extra-filename=-3\n+#![crate_name = \"crateresolve1\"]\n+#![crate_type = \"lib\"]\n+\n+pub fn f() -> isize { 30 }"}, {"sha": "4bd8ecacb96b3ddcb5e86e42654dd18cfe6c0fa9", "filename": "src/test/compile-fail/aux/default_ty_param_cross_crate_crate.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fdefault_ty_param_cross_crate_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fdefault_ty_param_cross_crate_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fdefault_ty_param_cross_crate_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+#![crate_name = \"default_param_test\"]\n+#![feature(default_type_parameter_fallback)]\n+\n+use std::marker::PhantomData;\n+\n+pub struct Foo<A, B>(PhantomData<(A, B)>);\n+\n+pub fn bleh<A=i32, X=char>() -> Foo<A, X> { Foo(PhantomData) }\n+"}, {"sha": "ff872efb7bdb1049f44ecad65feb2ae398a59f9c", "filename": "src/test/compile-fail/aux/deprecation-lint.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fdeprecation-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fdeprecation-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fdeprecation-lint.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,90 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(deprecated)]\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub fn deprecated() {}\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub fn deprecated_text() {}\n+\n+pub struct MethodTester;\n+\n+impl MethodTester {\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    pub fn method_deprecated(&self) {}\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    pub fn method_deprecated_text(&self) {}\n+}\n+\n+pub trait Trait {\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    fn trait_deprecated(&self) {}\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    fn trait_deprecated_text(&self) {}\n+}\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub trait DeprecatedTrait { fn dummy(&self) { } }\n+\n+impl Trait for MethodTester {}\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub struct DeprecatedStruct {\n+    pub i: isize\n+}\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub struct DeprecatedUnitStruct;\n+\n+pub enum Enum {\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    DeprecatedVariant,\n+}\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub struct DeprecatedTupleStruct(pub isize);\n+\n+pub struct Stable {\n+    #[deprecated(since = \"1.0.0\", note = \"text\")]\n+    pub override2: u8,\n+}\n+\n+pub struct Stable2(pub u8, pub u8, #[deprecated(since = \"1.0.0\", note = \"text\")] pub u8);\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub struct Deprecated {\n+    pub inherit: u8,\n+}\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub struct Deprecated2(pub u8,\n+                       pub u8,\n+                       pub u8);\n+\n+#[deprecated(since = \"1.0.0\", note = \"text\")]\n+pub mod deprecated_mod {\n+    pub fn deprecated() {}\n+}\n+\n+#[macro_export]\n+macro_rules! macro_test {\n+    () => (deprecated());\n+}\n+\n+#[macro_export]\n+macro_rules! macro_test_arg {\n+    ($func:expr) => ($func);\n+}\n+\n+#[macro_export]\n+macro_rules! macro_test_arg_nested {\n+    ($func:ident) => (macro_test_arg!($func()));\n+}"}, {"sha": "22f65c2b0d8f86470130de485c70d5f33d514e99", "filename": "src/test/compile-fail/aux/empty-struct.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fempty-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fempty-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fempty-struct.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct XEmpty1 {}\n+pub struct XEmpty2;\n+\n+pub enum XE {\n+    XEmpty3 {},\n+    XEmpty4,\n+}"}, {"sha": "044bb606b40e224b15a0dd6766a72f4e1fec9155", "filename": "src/test/compile-fail/aux/go_trait.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fgo_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fgo_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fgo_trait.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(specialization)]\n+\n+// Common code used for tests that model the Fn/FnMut/FnOnce hierarchy.\n+\n+pub trait Go {\n+    fn go(&self, arg: isize);\n+}\n+\n+pub fn go<G:Go>(this: &G, arg: isize) {\n+    this.go(arg)\n+}\n+\n+pub trait GoMut {\n+    fn go_mut(&mut self, arg: isize);\n+}\n+\n+pub fn go_mut<G:GoMut>(this: &mut G, arg: isize) {\n+    this.go_mut(arg)\n+}\n+\n+pub trait GoOnce {\n+    fn go_once(self, arg: isize);\n+}\n+\n+pub fn go_once<G:GoOnce>(this: G, arg: isize) {\n+    this.go_once(arg)\n+}\n+\n+impl<G> GoMut for G\n+    where G : Go\n+{\n+    default fn go_mut(&mut self, arg: isize) {\n+        go(&*self, arg)\n+    }\n+}\n+\n+impl<G> GoOnce for G\n+    where G : GoMut\n+{\n+    default fn go_once(mut self, arg: isize) {\n+        go_mut(&mut self, arg)\n+    }\n+}"}, {"sha": "0b1aee68f44927b2ec1a9625b0b3f2d5a8ce1ef8", "filename": "src/test/compile-fail/aux/inherited_stability.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Finherited_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Finherited_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Finherited_stability.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![crate_name=\"inherited_stability\"]\n+#![crate_type = \"lib\"]\n+#![unstable(feature = \"test_feature\", issue = \"0\")]\n+#![feature(staged_api)]\n+\n+pub fn unstable() {}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub fn stable() {}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub mod stable_mod {\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub fn unstable() {}\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn stable() {}\n+}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub mod unstable_mod {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    pub fn deprecated() {}\n+\n+    pub fn unstable() {}\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub trait Stable {\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    fn unstable(&self);\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    fn stable(&self);\n+}\n+\n+impl Stable for usize {\n+    fn unstable(&self) {}\n+    fn stable(&self) {}\n+}\n+\n+pub enum Unstable {\n+    UnstableVariant,\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    StableVariant\n+}"}, {"sha": "a4cd487eb6515afacb7a56fd1a825f4d8a6b9bb5", "filename": "src/test/compile-fail/aux/internal_unstable.rs", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Finternal_unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Finternal_unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Finternal_unstable.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,102 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(staged_api, allow_internal_unstable)]\n+#![stable(feature = \"stable\", since = \"1.0.0\")]\n+\n+#[unstable(feature = \"function\", issue = \"0\")]\n+pub fn unstable() {}\n+\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+pub struct Foo {\n+    #[unstable(feature = \"struct_field\", issue = \"0\")]\n+    pub x: u8\n+}\n+\n+impl Foo {\n+    #[unstable(feature = \"method\", issue = \"0\")]\n+    pub fn method(&self) {}\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+pub struct Bar {\n+    #[unstable(feature = \"struct2_field\", issue = \"0\")]\n+    pub x: u8\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n+#[macro_export]\n+macro_rules! call_unstable_allow {\n+    () => { $crate::unstable() }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n+#[macro_export]\n+macro_rules! construct_unstable_allow {\n+    ($e: expr) => {\n+        $crate::Foo { x: $e }\n+    }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n+#[macro_export]\n+macro_rules! call_method_allow {\n+    ($e: expr) => { $e.method() }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n+#[macro_export]\n+macro_rules! access_field_allow {\n+    ($e: expr) => { $e.x }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[allow_internal_unstable]\n+#[macro_export]\n+macro_rules! pass_through_allow {\n+    ($e: expr) => { $e }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! call_unstable_noallow {\n+    () => { $crate::unstable() }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! construct_unstable_noallow {\n+    ($e: expr) => {\n+        $crate::Foo { x: $e }\n+    }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! call_method_noallow {\n+    ($e: expr) => { $e.method() }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! access_field_noallow {\n+    ($e: expr) => { $e.x }\n+}\n+\n+#[stable(feature = \"stable\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! pass_through_noallow {\n+    ($e: expr) => { $e }\n+}"}, {"sha": "76c5cdafd7cf1b9f7d54bea6e244a773bfadd884", "filename": "src/test/compile-fail/aux/issue-19163.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-19163.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-19163.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-19163.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#[macro_export]\n+macro_rules! mywrite {\n+    ($dst:expr, $($arg:tt)*) => ($dst.write_fmt(format_args!($($arg)*)))\n+}"}, {"sha": "fae0fe16a266c4e5c3bdc7de5576a93bca2c0480", "filename": "src/test/compile-fail/aux/issue-21221-3.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// testing whether the lookup mechanism picks up types\n+// defined in the outside crate\n+\n+#![crate_type=\"lib\"]\n+\n+pub mod outer {\n+    // should suggest this\n+    pub trait OuterTrait {}\n+\n+    // should not suggest this since the module is private\n+    mod private_module {\n+        pub trait OuterTrait {}\n+    }\n+\n+    // should not suggest since the trait is private\n+    pub mod public_module {\n+        trait OuterTrait {}\n+    }\n+}"}, {"sha": "fffe060ee24a54261b3822e33b5d8a52327268b3", "filename": "src/test/compile-fail/aux/issue-21221-4.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-21221-4.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// testing whether the lookup mechanism picks up types\n+// defined in the outside crate\n+\n+#![crate_type=\"lib\"]\n+\n+mod foo {\n+    // should not be suggested => foo is private\n+    pub trait T {}\n+}\n+\n+// should be suggested\n+pub use foo::T;"}, {"sha": "361f1ea5509344a8cbff05f7bd46c762c2423c12", "filename": "src/test/compile-fail/aux/issue-29181.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-29181.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-29181.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-29181.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub mod foo {\n+    pub use super::*;\n+}"}, {"sha": "8d44e8d1016169a8c50a9c96d09017f6cdc16ebd", "filename": "src/test/compile-fail/aux/issue-30535.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-30535.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-30535.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue-30535.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub enum Foo {\n+    FooV { data: () }\n+}"}, {"sha": "18f78750b15fc4df1b1050f8a6235d7021e7f82e", "filename": "src/test/compile-fail/aux/issue_11680.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_11680.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_11680.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_11680.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar(isize)\n+}\n+\n+pub mod test {\n+    enum Foo {\n+        Bar(isize)\n+    }\n+}"}, {"sha": "a0234c1185a9789f8e449952538dba150886f0fa", "filename": "src/test/compile-fail/aux/issue_12612_1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_12612_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_12612_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_12612_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod bar {\n+    pub fn foo() {}\n+}"}, {"sha": "b3b04b4a5ac13534824b834bff6100ab2d5c2193", "filename": "src/test/compile-fail/aux/issue_16725.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_16725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_16725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_16725.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern {\n+    fn bar();\n+}"}, {"sha": "3901d73382fcfa2df3c5fcf5e6367d0d29b5e678", "filename": "src/test/compile-fail/aux/issue_17718_const_privacy.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_17718_const_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_17718_const_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_17718_const_privacy.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use foo::FOO2;\n+\n+pub const FOO: usize = 3;\n+const BAR: usize = 3;\n+\n+mod foo {\n+    pub const FOO2: usize = 3;\n+}"}, {"sha": "afdbf78aa8292ccf956343c257260e8b43ef9f12", "filename": "src/test/compile-fail/aux/issue_21202.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_21202.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_21202.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_21202.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod A {\n+    pub struct Foo;\n+    impl Foo {\n+        fn foo(&self) { }\n+    }\n+}"}, {"sha": "f60311a9400b3d0acbfc22d2026a4e4ad478b0da", "filename": "src/test/compile-fail/aux/issue_30123_aux.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_30123_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_30123_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_30123_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::marker::PhantomData;\n+\n+pub struct Directed;\n+pub struct Undirected;\n+\n+pub struct Graph<N, E, Ty = Directed> {\n+    nodes: Vec<PhantomData<N>>,\n+    edges: Vec<PhantomData<E>>,\n+    ty: PhantomData<Ty>,\n+}\n+\n+\n+impl<N, E> Graph<N, E, Directed> {\n+    pub fn new() -> Self {\n+        Graph{nodes: Vec::new(), edges: Vec::new(), ty: PhantomData}\n+    }\n+}\n+\n+impl<N, E> Graph<N, E, Undirected> {\n+    pub fn new_undirected() -> Self {\n+        Graph{nodes: Vec::new(), edges: Vec::new(), ty: PhantomData}\n+    }\n+}"}, {"sha": "6472c08c222965b6a6ba1a4e411747d3b26bc0ee", "filename": "src/test/compile-fail/aux/issue_3907.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_3907.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_3907.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_3907.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+    fn bar();\n+}"}, {"sha": "5c878b1e667d9f61128c7f92cd90e6a1bca13e79", "filename": "src/test/compile-fail/aux/issue_5844_aux.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_5844_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_5844_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fissue_5844_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(libc)]\n+\n+extern crate libc;\n+\n+extern \"C\" {\n+    pub fn rand() -> libc::c_int;\n+}"}, {"sha": "95f8b39c48745670db95b4248af6eab597806c18", "filename": "src/test/compile-fail/aux/lifetime_bound_will_change_warning_lib.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flifetime_bound_will_change_warning_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flifetime_bound_will_change_warning_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Flifetime_bound_will_change_warning_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+// Helper for testing that we get suitable warnings when lifetime\n+// bound change will cause breakage.\n+\n+pub fn just_ref(x: &Fn()) {\n+}\n+\n+pub fn ref_obj(x: &Box<Fn()>) {\n+    // this will change to &Box<Fn()+'static>...\n+}"}, {"sha": "0553b4a49b7aed9fc08ea927a9ea56fd6e041426", "filename": "src/test/compile-fail/aux/lint_output_format.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_output_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_output_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Flint_output_format.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"lint_output_format\"]\n+#![crate_type = \"lib\"]\n+#![feature(staged_api)]\n+#![unstable(feature = \"test_feature\", issue = \"0\")]\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub fn foo() -> usize {\n+    20\n+}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub fn bar() -> usize {\n+    40\n+}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub fn baz() -> usize {\n+    30\n+}"}, {"sha": "3100aba4b72be3cfa027c52d61feec6bb0f67470", "filename": "src/test/compile-fail/aux/lint_stability.rs", "status": "added", "additions": 179, "deletions": 0, "changes": 179, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,179 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![crate_name=\"lint_stability\"]\n+#![crate_type = \"lib\"]\n+#![feature(staged_api)]\n+#![stable(feature = \"lint_stability\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub fn deprecated() {}\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub fn deprecated_text() {}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub fn deprecated_unstable() {}\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub fn deprecated_unstable_text() {}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub fn unstable() {}\n+#[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+pub fn unstable_text() {}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub fn stable() {}\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub fn stable_text() {}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct MethodTester;\n+\n+impl MethodTester {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    pub fn method_deprecated(&self) {}\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    pub fn method_deprecated_text(&self) {}\n+\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    pub fn method_deprecated_unstable(&self) {}\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    pub fn method_deprecated_unstable_text(&self) {}\n+\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub fn method_unstable(&self) {}\n+    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    pub fn method_unstable_text(&self) {}\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn method_stable(&self) {}\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub fn method_stable_text(&self) {}\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+pub trait Trait {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    fn trait_deprecated(&self) {}\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    fn trait_deprecated_text(&self) {}\n+\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    fn trait_deprecated_unstable(&self) {}\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    fn trait_deprecated_unstable_text(&self) {}\n+\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    fn trait_unstable(&self) {}\n+    #[unstable(feature = \"test_feature\", reason = \"text\", issue = \"0\")]\n+    fn trait_unstable_text(&self) {}\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    fn trait_stable(&self) {}\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    fn trait_stable_text(&self) {}\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+impl Trait for MethodTester {}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub trait UnstableTrait { fn dummy(&self) { } }\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub trait DeprecatedTrait {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")] fn dummy(&self) { }\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedStruct {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+}\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedUnstableStruct {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+}\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub struct UnstableStruct {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+}\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct StableStruct {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")] pub i: isize\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedUnitStruct;\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedUnstableUnitStruct;\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub struct UnstableUnitStruct;\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct StableUnitStruct;\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+pub enum Enum {\n+    #[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    DeprecatedVariant,\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    DeprecatedUnstableVariant,\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    UnstableVariant,\n+\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    StableVariant,\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct DeprecatedUnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub struct UnstableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct StableTupleStruct(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub isize);\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! macro_test {\n+    () => (deprecated());\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! macro_test_arg {\n+    ($func:expr) => ($func);\n+}\n+\n+#[stable(feature = \"test_feature\", since = \"1.0.0\")]\n+#[macro_export]\n+macro_rules! macro_test_arg_nested {\n+    ($func:ident) => (macro_test_arg!($func()));\n+}"}, {"sha": "8c6b98ab5104195e027c2bfa49803fce7293722f", "filename": "src/test/compile-fail/aux/lint_stability_fields.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Flint_stability_fields.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(staged_api)]\n+#![stable(feature = \"rust1\", since = \"1.0.0\")]\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct Stable {\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub inherit: u8, // it's a lie (stable doesn't inherit)\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub override1: u8,\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub override2: u8,\n+}\n+\n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+pub struct Stable2(#[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n+                   #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8,\n+                   #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                   #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8);\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub struct Unstable {\n+    pub inherit: u8,\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub override1: u8,\n+    #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub override2: u8,\n+}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+pub struct Unstable2(pub u8,\n+                     #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n+                     #[unstable(feature = \"test_feature\", issue = \"0\")]\n+                     #[rustc_deprecated(since = \"1.0.0\", reason = \"text\")] pub u8);\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct Deprecated {\n+    pub inherit: u8,\n+    #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    pub override1: u8,\n+    #[unstable(feature = \"test_feature\", issue = \"0\")]\n+    pub override2: u8,\n+}\n+\n+#[unstable(feature = \"test_feature\", issue = \"0\")]\n+#[rustc_deprecated(since = \"1.0.0\", reason = \"text\")]\n+pub struct Deprecated2(pub u8,\n+                       #[stable(feature = \"rust1\", since = \"1.0.0\")] pub u8,\n+                       #[unstable(feature = \"test_feature\", issue = \"0\")] pub u8);"}, {"sha": "2661b1f4eb49b7a93d03ca34e2563991eb2e37c3", "filename": "src/test/compile-fail/aux/lint_unused_extern_crate.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_unused_extern_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Flint_unused_extern_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Flint_unused_extern_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo() {}"}, {"sha": "4f75e2b5d75651e05095f0fa6d2b0046c297363d", "filename": "src/test/compile-fail/aux/macro_crate_nonterminal.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_crate_nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_crate_nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_crate_nonterminal.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn increment(x: usize) -> usize {\n+    x + 1\n+}\n+\n+#[macro_export]\n+macro_rules! increment {\n+    ($x:expr) => ($crate::increment($x))\n+}\n+\n+pub fn check_local() {\n+    assert_eq!(increment!(3), 4);\n+}"}, {"sha": "910fcd2e3671d55321f570f364cd4046bfc0e753", "filename": "src/test/compile-fail/aux/macro_non_reexport_2.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_non_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_non_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_non_reexport_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+\n+// Since we load a serialized macro with all its attributes, accidentally\n+// re-exporting a `#[macro_export] macro_rules!` is something of a concern!\n+//\n+// We avoid it at the moment only because of the order in which we do things.\n+\n+#[macro_use] #[no_link]\n+extern crate macro_reexport_1;"}, {"sha": "aaeccc6e89883865bdbdb5607523f9d6ce369f0c", "filename": "src/test/compile-fail/aux/macro_reexport_1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fmacro_reexport_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#[macro_export]\n+macro_rules! reexported {\n+    () => ( 3 )\n+}"}, {"sha": "3bf39b788db6e1e2b6b8c3f9728c1485916cb5ad", "filename": "src/test/compile-fail/aux/namespaced_enums.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fnamespaced_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fnamespaced_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fnamespaced_enums.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub enum Foo {\n+    A,\n+    B(isize),\n+    C { a: isize },\n+}\n+\n+impl Foo {\n+    pub fn foo() {}\n+    pub fn bar(&self) {}\n+}"}, {"sha": "51003160427327b04f0eca23382699cda4c254a0", "filename": "src/test/compile-fail/aux/needs_allocator.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fneeds_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fneeds_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fneeds_allocator.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(needs_allocator)]\n+#![no_std]\n+#![needs_allocator]\n+#![crate_type = \"rlib\"]"}, {"sha": "20cebb9be1746e027ac155dcd6da3b5cf4898960", "filename": "src/test/compile-fail/aux/no_method_suggested_traits.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fno_method_suggested_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fno_method_suggested_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fno_method_suggested_traits.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use reexport::Reexported;\n+\n+pub struct Foo;\n+pub enum Bar { X }\n+\n+pub mod foo {\n+    pub trait PubPub {\n+        fn method(&self) {}\n+\n+        fn method3(&self) {}\n+    }\n+\n+    impl PubPub for u32 {}\n+    impl PubPub for i32 {}\n+}\n+pub mod bar {\n+    trait PubPriv {\n+        fn method(&self);\n+    }\n+}\n+mod qux {\n+    pub trait PrivPub {\n+        fn method(&self);\n+    }\n+}\n+mod quz {\n+    trait PrivPriv {\n+        fn method(&self);\n+    }\n+}\n+\n+mod reexport {\n+    pub trait Reexported {\n+        fn method(&self);\n+    }\n+}"}, {"sha": "5ae8e0d298e53b046fb7e0203c6e5f51cac3505e", "filename": "src/test/compile-fail/aux/noexporttypelib.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fnoexporttypelib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fnoexporttypelib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fnoexporttypelib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub type oint = Option<isize>;\n+pub fn foo() -> oint { Some(3) }"}, {"sha": "cf3e9903b5ad001e2bef688a792cfe8c5e630d07", "filename": "src/test/compile-fail/aux/orphan_check_diagnostics.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Forphan_check_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Forphan_check_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Forphan_check_diagnostics.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait RemoteTrait { fn dummy(&self) { } }"}, {"sha": "141b6bdd604fe0aff9701ff9f32c7a31683af341", "filename": "src/test/compile-fail/aux/privacy_tuple_struct.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fprivacy_tuple_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fprivacy_tuple_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fprivacy_tuple_struct.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct A(());\n+pub struct B(isize);\n+pub struct C(pub isize, isize);\n+pub struct D(pub isize);"}, {"sha": "37ee10c8d37333ec6e64793919ab8a1f504e14ca", "filename": "src/test/compile-fail/aux/private_trait_xc.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fprivate_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fprivate_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fprivate_trait_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo {}"}, {"sha": "4419a5ae83cfab169c5929a24660335bed6bdce7", "filename": "src/test/compile-fail/aux/pub_static_array.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fpub_static_array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fpub_static_array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fpub_static_array.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub static ARRAY: &'static [u8] = &[1];"}, {"sha": "f49ac4fc8e401557b30b2ab3d2d03ba8f97be038", "filename": "src/test/compile-fail/aux/rbmtp_cross_crate_lib.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Frbmtp_cross_crate_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Frbmtp_cross_crate_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Frbmtp_cross_crate_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,42 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Check that method bounds declared on traits/impls in a cross-crate\n+// scenario work. This is the library portion of the test.\n+\n+pub enum MaybeOwned<'a> {\n+    Owned(isize),\n+    Borrowed(&'a isize)\n+}\n+\n+pub struct Inv<'a> { // invariant w/r/t 'a\n+    x: &'a mut &'a isize\n+}\n+\n+// I encountered a bug at some point with encoding the IntoMaybeOwned\n+// trait, so I'll use that as the template for this test.\n+pub trait IntoMaybeOwned<'a> {\n+    fn into_maybe_owned(self) -> MaybeOwned<'a>;\n+\n+    // Note: without this `into_inv` method, the trait is\n+    // contravariant w/r/t `'a`, since if you look strictly at the\n+    // interface, it only returns `'a`. This complicates the\n+    // downstream test since it wants invariance to force an error.\n+    // Hence we add this method.\n+    fn into_inv(self) -> Inv<'a>;\n+\n+    fn bigger_region<'b:'a>(self, b: Inv<'b>);\n+}\n+\n+impl<'a> IntoMaybeOwned<'a> for Inv<'a> {\n+    fn into_maybe_owned(self) -> MaybeOwned<'a> { panic!() }\n+    fn into_inv(self) -> Inv<'a> { panic!() }\n+    fn bigger_region<'b:'a>(self, b: Inv<'b>) { panic!() }\n+}"}, {"sha": "22c13f69af96db0f3ff30c13b2c55ec4508c324f", "filename": "src/test/compile-fail/aux/stability_attribute_issue.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_attribute_issue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_attribute_issue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_attribute_issue.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(staged_api)]\n+#![stable(feature = \"foo\", since = \"1.2.0\")]\n+\n+\n+#[unstable(feature = \"foo\", issue = \"1\")]\n+pub fn unstable() {}\n+\n+#[unstable(feature = \"foo\", reason = \"message\", issue = \"2\")]\n+pub fn unstable_msg() {}"}, {"sha": "c839993b047ec8cfc8235e9c4c3eb1286327192b", "filename": "src/test/compile-fail/aux/stability_cfg1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![cfg_attr(foo, experimental)]\n+#![cfg_attr(not(foo), stable(feature = \"test_feature\", since = \"1.0.0\"))]\n+#![feature(staged_api)]"}, {"sha": "c1e2b1d1bfe12af2a81e560bd788a96256cec919", "filename": "src/test/compile-fail/aux/stability_cfg2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstability_cfg2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:--cfg foo\n+\n+#![cfg_attr(foo, unstable(feature = \"test_feature\", issue = \"0\"))]\n+#![cfg_attr(not(foo), stable(feature = \"test_feature\", since = \"1.0.0\"))]\n+#![feature(staged_api)]"}, {"sha": "859f38e809f917c4c32eaea6ef7f6cdbc0c1f0be", "filename": "src/test/compile-fail/aux/static_priv_by_default.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstatic_priv_by_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstatic_priv_by_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstatic_priv_by_default.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+static private: isize = 0;\n+pub static public: isize = 0;\n+\n+pub struct A(());\n+\n+impl A {\n+    fn foo() {}\n+}\n+\n+mod foo {\n+    pub static a: isize = 0;\n+    pub fn b() {}\n+    pub struct c;\n+    pub enum d {}\n+    pub type e = isize;\n+\n+    pub struct A(());\n+\n+    impl A {\n+        fn foo() {}\n+    }\n+\n+    // these are public so the parent can reexport them.\n+    pub static reexported_a: isize = 0;\n+    pub fn reexported_b() {}\n+    pub struct reexported_c;\n+    pub enum reexported_d {}\n+    pub type reexported_e = isize;\n+}\n+\n+pub mod bar {\n+    pub use foo::reexported_a as e;\n+    pub use foo::reexported_b as f;\n+    pub use foo::reexported_c as g;\n+    pub use foo::reexported_d as h;\n+    pub use foo::reexported_e as i;\n+}\n+\n+pub static a: isize = 0;\n+pub fn b() {}\n+pub struct c;\n+pub enum d {}\n+pub type e = isize;\n+\n+static j: isize = 0;\n+fn k() {}\n+struct l;\n+enum m {}\n+type n = isize;"}, {"sha": "5fea97da03ee38f5cdf2107610c6d979d8f31338", "filename": "src/test/compile-fail/aux/struct_field_privacy.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_field_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_field_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_field_privacy.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct A {\n+    a: isize,\n+    pub b: isize,\n+}\n+\n+pub struct B {\n+    pub a: isize,\n+    b: isize,\n+}"}, {"sha": "40868fa3f706e8fca58c5a1b42ca94f8be59a0ba", "filename": "src/test/compile-fail/aux/struct_variant_privacy.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_variant_privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_variant_privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fstruct_variant_privacy.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Bar {\n+    Baz { a: isize }\n+}"}, {"sha": "31a97f695f06cdbfcf20cd27edf87cb961020bb0", "filename": "src/test/compile-fail/aux/svh-a-base.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-base.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "5339fc8295c6f57f56cfd7820e41cdb3d88be0fc", "filename": "src/test/compile-fail/aux/svh-a-change-lit.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-lit.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    0\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "2a5d9446f879ac65f8d8a4dff31c9616e89c7993", "filename": "src/test/compile-fail/aux/svh-a-change-significant-cfg.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-significant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-significant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-significant-cfg.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+#[cfg(some_flag)]\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+#[cfg(not(some_flag))]\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "61f2f2803ab1891dc586ab781cea0158d513b8ed", "filename": "src/test/compile-fail/aux/svh-a-change-trait-bound.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-trait-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-trait-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-trait-bound.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:V>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "270ce95be2bb62d70a0366920373362fb5a8e2ae", "filename": "src/test/compile-fail/aux/svh-a-change-type-arg.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-arg.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: i32) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "de4cc85a7dc4746bc238bbf344b797eb212de426", "filename": "src/test/compile-fail/aux/svh-a-change-type-ret.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-ret.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> i64 {\n+    3\n+}\n+\n+pub fn an_unused_name() -> i32 {\n+    4\n+}"}, {"sha": "62f7986f1c3bd729b67c8f50677d01395f20914e", "filename": "src/test/compile-fail/aux/svh-a-change-type-static.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-a-change-type-static.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+#![feature(core)]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : i32 = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "b8946fdc99553bbfbfa4fdc908e25a16cbd67dd2", "filename": "src/test/compile-fail/aux/svh-b.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! This is a client of the `a` crate defined in \"svn-a-base.rs\".  The\n+//! rpass and cfail tests (such as \"run-pass/svh-add-comment.rs\") use\n+//! it by swapping in a different object code library crate built from\n+//! some variant of \"svn-a-base.rs\", and then we are checking if the\n+//! compiler properly ignores or accepts the change, based on whether\n+//! the change could affect the downstream crate content or not\n+//! (#14132).\n+\n+#![crate_name = \"b\"]\n+\n+extern crate a;\n+\n+pub fn foo() { assert_eq!(a::foo::<()>(0), 3); }"}, {"sha": "6bd3ddab06c72426877cec82686ff2a69112ef3b", "filename": "src/test/compile-fail/aux/svh-uta-base.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-base.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the upstream crate.\n+\n+#![crate_name = \"uta\"]\n+\n+mod traits {\n+    pub trait TraitA { fn val(&self) -> isize { 2 } }\n+    pub trait TraitB { fn val(&self) -> isize { 3 } }\n+}\n+\n+impl traits::TraitA for () {}\n+impl traits::TraitB for () {}\n+\n+pub fn foo<T>(_: isize) -> isize {\n+    use traits::TraitA;\n+    let v = ();\n+    v.val()\n+}"}, {"sha": "e863416817735b1a0de7a2a089aca9aea064ccd0", "filename": "src/test/compile-fail/aux/svh-uta-change-use-trait.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-change-use-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-change-use-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-uta-change-use-trait.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the upstream crate.\n+\n+#![crate_name = \"uta\"]\n+\n+mod traits {\n+    pub trait TraitA { fn val(&self) -> isize { 2 } }\n+    pub trait TraitB { fn val(&self) -> isize { 3 } }\n+}\n+\n+impl traits::TraitA for () {}\n+impl traits::TraitB for () {}\n+\n+pub fn foo<T>(_: isize) -> isize {\n+    use traits::TraitB;\n+    let v = ();\n+    v.val()\n+}"}, {"sha": "eb3da985242be45b8b7ac34a7505b6da878a4c57", "filename": "src/test/compile-fail/aux/svh-utb.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-utb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-utb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fsvh-utb.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the downstream crate.\n+\n+#![crate_name = \"utb\"]\n+\n+extern crate uta;\n+\n+pub fn foo() { assert_eq!(uta::foo::<()>(0), 3); }"}, {"sha": "2e425ac96c55f9de510c0358e93105c48424d3ba", "filename": "src/test/compile-fail/aux/tdticc_coherence_lib.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftdticc_coherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftdticc_coherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftdticc_coherence_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(optin_builtin_traits, core)]\n+#![crate_type = \"rlib\"]\n+\n+pub trait DefaultedTrait { }\n+impl DefaultedTrait for .. { }\n+\n+pub struct Something<T> { t: T }"}, {"sha": "29cb0bc176a257dd03d6d088368f0b73a6608e6a", "filename": "src/test/compile-fail/aux/trait_bounds_on_structs_and_enums_xc.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_bounds_on_structs_and_enums_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_bounds_on_structs_and_enums_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_bounds_on_structs_and_enums_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Trait {\n+    fn dummy(&self) { }\n+}\n+\n+pub struct Foo<T:Trait> {\n+    pub x: T,\n+}\n+\n+pub enum Bar<T:Trait> {\n+    ABar(isize),\n+    BBar(T),\n+    CBar(usize),\n+}"}, {"sha": "c3ecbb014dc6b0aac1dfa9e077383a15e86b79cd", "filename": "src/test/compile-fail/aux/trait_impl_conflict.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_impl_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_impl_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_impl_conflict.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+}\n+\n+impl Foo for isize {\n+}"}, {"sha": "585a756fd0767a795d84f8969d50231f256819c4", "filename": "src/test/compile-fail/aux/trait_safety_lib.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_safety_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_safety_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_safety_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simple smoke test that unsafe traits can be compiled etc.\n+\n+pub unsafe trait Foo {\n+    fn foo(&self) -> isize;\n+}\n+\n+unsafe impl Foo for isize {\n+    fn foo(&self) -> isize { *self }\n+}"}, {"sha": "0fa2d3459f433f9395fb4b89b695c93d65c566a2", "filename": "src/test/compile-fail/aux/trait_superkinds_in_metadata.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_superkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_superkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftrait_superkinds_in_metadata.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test library crate for cross-crate usages of traits inheriting\n+// from the builtin kinds. Mostly tests metadata correctness.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait RequiresShare : Sync { }\n+pub trait RequiresRequiresShareAndSend : RequiresShare + Send { }\n+pub trait RequiresCopy : Copy { }"}, {"sha": "060960f0dbc88cd40b16ede1144175c463a0bfdb", "filename": "src/test/compile-fail/aux/two_macros.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftwo_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Ftwo_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Ftwo_macros.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_export]\n+macro_rules! macro_one { () => (\"one\") }\n+\n+#[macro_export]\n+macro_rules! macro_two { () => (\"two\") }"}, {"sha": "8ca85f20ab2f67e405e73429b664228c296fae44", "filename": "src/test/compile-fail/aux/unreachable_variant.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Funreachable_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Funreachable_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Funreachable_variant.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod super_sekrit {\n+    pub enum sooper_sekrit {\n+        quux, baz\n+    }\n+}"}, {"sha": "7024c9dad7c11acb37fe157e021eaf19732eb4b5", "filename": "src/test/compile-fail/aux/use_from_trait_xc.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fuse_from_trait_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fuse_from_trait_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fuse_from_trait_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+pub use self::sub::{Bar, Baz};\n+\n+pub trait Trait {\n+    fn foo(&self);\n+    type Assoc;\n+    const CONST: u32;\n+}\n+\n+struct Foo;\n+\n+impl Foo {\n+    pub fn new() {}\n+\n+    pub const C: u32 = 0;\n+}\n+\n+mod sub {\n+    pub struct Bar;\n+\n+    impl Bar {\n+        pub fn new() {}\n+    }\n+\n+    pub enum Baz {}\n+\n+    impl Baz {\n+        pub fn new() {}\n+    }\n+}"}, {"sha": "d7fd2968495243697084ac438629d7d0e265d799", "filename": "src/test/compile-fail/aux/variant-namespacing.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fvariant-namespacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fvariant-namespacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fvariant-namespacing.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub enum XE {\n+    XStruct { a: u8 },\n+    XTuple(u8),\n+    XUnit,\n+}"}, {"sha": "6434e62b6f7035556b32e317d8f5e4d1356a9f03", "filename": "src/test/compile-fail/aux/weak-lang-items.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fweak-lang-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fweak-lang-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fweak-lang-items.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+// This aux-file will require the eh_personality function to be codegen'd, but\n+// it hasn't been defined just yet. Make sure we don't explode.\n+\n+#![no_std]\n+#![crate_type = \"rlib\"]\n+\n+struct A;\n+\n+impl core::ops::Drop for A {\n+    fn drop(&mut self) {}\n+}\n+\n+pub fn foo() {\n+    let _a = A;\n+    panic!(\"wut\");\n+}\n+\n+mod std {\n+    pub use core::{option, fmt};\n+}"}, {"sha": "5e7bc61943be57efb922d751d3f0cefd1c39fb7d", "filename": "src/test/compile-fail/aux/xc_private_method_lib.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fxc_private_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fxc_private_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fxc_private_method_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub struct Struct {\n+    pub x: isize\n+}\n+\n+impl Struct {\n+    fn static_meth_struct() -> Struct {\n+        Struct { x: 1 }\n+    }\n+\n+    fn meth_struct(&self) -> isize {\n+        self.x\n+    }\n+}\n+\n+pub enum Enum {\n+    Variant1(isize),\n+    Variant2(isize)\n+}\n+\n+impl Enum {\n+    fn static_meth_enum() -> Enum {\n+        Enum::Variant2(10)\n+    }\n+\n+    fn meth_enum(&self) -> isize {\n+        match *self {\n+            Enum::Variant1(x) |\n+            Enum::Variant2(x) => x\n+        }\n+    }\n+}"}, {"sha": "7a69be2b06c7cf2438a8f3c61fd2013871a76845", "filename": "src/test/compile-fail/aux/xcrate_unit_struct.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fxcrate_unit_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Faux%2Fxcrate_unit_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Faux%2Fxcrate_unit_struct.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+// used by the rpass test\n+\n+#[derive(Copy, Clone)]\n+pub struct Struct;\n+\n+#[derive(Copy, Clone)]\n+pub enum Unit {\n+    UnitVariant,\n+    Argument(Struct)\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct TupleStruct(pub usize, pub &'static str);\n+\n+// used by the cfail test\n+\n+#[derive(Copy, Clone)]\n+pub struct StructWithFields {\n+    foo: isize,\n+}\n+\n+#[derive(Copy, Clone)]\n+pub enum EnumWithVariants {\n+    EnumVariant,\n+    EnumVariantArg(isize)\n+}"}, {"sha": "b1c88ce6ce55c796d731e41b910353d7b3bbf2fa", "filename": "src/test/compile-fail/privacy/restricted/aux/pub_restricted.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Faux%2Fpub_restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Faux%2Fpub_restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Frestricted%2Faux%2Fpub_restricted.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(pub_restricted)]\n+\n+pub(crate) struct Crate;\n+#[derive(Default)]\n+pub struct Universe {\n+    pub x: i32,\n+    pub(crate) y: i32\n+}\n+\n+impl Universe {\n+    pub fn f(&self) {}\n+    pub(crate) fn g(&self) {}\n+}"}, {"sha": "f4bc72305a026feabbef14c3cd464cc9e45f57ea", "filename": "src/test/debuginfo/aux/cross_crate_debuginfo_type_uniquing.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_debuginfo_type_uniquing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_debuginfo_type_uniquing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_debuginfo_type_uniquing.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+#![crate_type = \"rlib\"]\n+// compile-flags:-g\n+\n+struct S1;\n+\n+impl S1 {\n+    fn f(&mut self) { }\n+}\n+\n+\n+struct S2;\n+\n+impl S2 {\n+    fn f(&mut self) { }\n+}"}, {"sha": "9b6b6221bda38ce17be49d6c3f56c3b7b3c540b3", "filename": "src/test/debuginfo/aux/cross_crate_spans.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Faux%2Fcross_crate_spans.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+#![allow(unused_variables)]\n+#![feature(omit_gdb_pretty_printer_section)]\n+#![omit_gdb_pretty_printer_section]\n+\n+// no-prefer-dynamic\n+// compile-flags:-g\n+\n+pub fn generic_function<T: Clone>(val: T) -> (T, T) {\n+    let result = (val.clone(), val.clone());\n+    let a_variable: u32 = 123456789;\n+    let another_variable: f64 = 123456789.5;\n+    zzz();\n+    result\n+}\n+\n+#[inline(never)]\n+fn zzz() {()}"}, {"sha": "d0566a1e0914bff0230151abd5be41fdf5953419", "filename": "src/test/debuginfo/aux/issue13213aux.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fissue13213aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Fdebuginfo%2Faux%2Fissue13213aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Faux%2Fissue13213aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+// compile-flags:-g\n+\n+pub use private::P;\n+\n+#[derive(Copy, Clone)]\n+pub struct S {\n+    p: P,\n+}\n+\n+mod private {\n+    #[derive(Copy, Clone)]\n+    pub struct P {\n+        p: i32,\n+    }\n+    pub const THREE: P = P { p: 3 };\n+}\n+\n+pub static A: S = S { p: private::THREE };"}, {"sha": "5f0ef4de491e0c5a5a2b89dc91b4524e05611da1", "filename": "src/test/run-pass-fulldeps/aux/custom_derive_plugin.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,78 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax)]\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+extern crate syntax_ext;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast;\n+use syntax::codemap::Span;\n+use syntax::ext::base::{MultiDecorator, ExtCtxt, Annotatable};\n+use syntax::ext::build::AstBuilder;\n+use syntax::parse::token;\n+use syntax::ptr::P;\n+use syntax_ext::deriving::generic::{cs_fold, TraitDef, MethodDef, combine_substructure};\n+use syntax_ext::deriving::generic::ty::{Literal, LifetimeBounds, Path, borrowed_explicit_self};\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_syntax_extension(\n+        token::intern(\"derive_TotalSum\"),\n+        MultiDecorator(box expand));\n+}\n+\n+fn expand(cx: &mut ExtCtxt,\n+          span: Span,\n+          mitem: &ast::MetaItem,\n+          item: &Annotatable,\n+          push: &mut FnMut(Annotatable)) {\n+    let trait_def = TraitDef {\n+        span: span,\n+        attributes: vec![],\n+        path: Path::new(vec![\"TotalSum\"]),\n+        additional_bounds: vec![],\n+        generics: LifetimeBounds::empty(),\n+        associated_types: vec![],\n+        is_unsafe: false,\n+        methods: vec![\n+            MethodDef {\n+                name: \"total_sum\",\n+                generics: LifetimeBounds::empty(),\n+                explicit_self: borrowed_explicit_self(),\n+                args: vec![],\n+                ret_ty: Literal(Path::new_local(\"isize\")),\n+                attributes: vec![],\n+                is_unsafe: false,\n+                combine_substructure: combine_substructure(box |cx, span, substr| {\n+                    let zero = cx.expr_isize(span, 0);\n+                    cs_fold(false,\n+                            |cx, span, subexpr, field, _| {\n+                                cx.expr_binary(span, ast::BinOpKind::Add, subexpr,\n+                                    cx.expr_method_call(span, field,\n+                                        token::str_to_ident(\"total_sum\"), vec![]))\n+                            },\n+                            zero,\n+                            box |cx, span, _, _| { cx.span_bug(span, \"wtf??\"); },\n+                            cx, span, substr)\n+                }),\n+            },\n+        ],\n+    };\n+\n+    trait_def.expand(cx, mitem, item, push)\n+}"}, {"sha": "2878674f0ea61fbb0e80140be2dd3025bad995a8", "filename": "src/test/run-pass-fulldeps/aux/custom_derive_plugin_attr.rs", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fcustom_derive_plugin_attr.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,91 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax)]\n+#![feature(rustc_private)]\n+\n+extern crate syntax;\n+extern crate syntax_ext;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast;\n+use syntax::attr::AttrMetaMethods;\n+use syntax::codemap::Span;\n+use syntax::ext::base::{MultiDecorator, ExtCtxt, Annotatable};\n+use syntax::ext::build::AstBuilder;\n+use syntax::parse::token;\n+use syntax::ptr::P;\n+use syntax_ext::deriving::generic::{cs_fold, TraitDef, MethodDef, combine_substructure};\n+use syntax_ext::deriving::generic::{Substructure, Struct, EnumMatching};\n+use syntax_ext::deriving::generic::ty::{Literal, LifetimeBounds, Path, borrowed_explicit_self};\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_syntax_extension(\n+        token::intern(\"derive_TotalSum\"),\n+        MultiDecorator(box expand));\n+}\n+\n+fn expand(cx: &mut ExtCtxt,\n+          span: Span,\n+          mitem: &ast::MetaItem,\n+          item: &Annotatable,\n+          push: &mut FnMut(Annotatable)) {\n+    let trait_def = TraitDef {\n+        span: span,\n+        attributes: vec![],\n+        path: Path::new(vec![\"TotalSum\"]),\n+        additional_bounds: vec![],\n+        generics: LifetimeBounds::empty(),\n+        associated_types: vec![],\n+        is_unsafe: false,\n+        methods: vec![\n+            MethodDef {\n+                name: \"total_sum\",\n+                generics: LifetimeBounds::empty(),\n+                explicit_self: borrowed_explicit_self(),\n+                args: vec![],\n+                ret_ty: Literal(Path::new_local(\"isize\")),\n+                attributes: vec![],\n+                is_unsafe: false,\n+                combine_substructure: combine_substructure(Box::new(totalsum_substructure)),\n+            },\n+        ],\n+    };\n+\n+    trait_def.expand(cx, mitem, item, push)\n+}\n+\n+// Mostly copied from syntax::ext::deriving::hash\n+/// Defines how the implementation for `trace()` is to be generated\n+fn totalsum_substructure(cx: &mut ExtCtxt, trait_span: Span,\n+                         substr: &Substructure) -> P<ast::Expr> {\n+    let fields = match *substr.fields {\n+        Struct(_, ref fs) | EnumMatching(_, _, ref fs) => fs,\n+        _ => cx.span_bug(trait_span, \"impossible substructure\")\n+    };\n+\n+    fields.iter().fold(cx.expr_isize(trait_span, 0), |acc, ref item| {\n+        if item.attrs.iter().find(|a| a.check_name(\"ignore\")).is_some() {\n+            acc\n+        } else {\n+            cx.expr_binary(item.span, ast::BinOpKind::Add, acc,\n+                           cx.expr_method_call(item.span,\n+                                               item.self_.clone(),\n+                                               substr.method_ident,\n+                                               Vec::new()))\n+        }\n+    })\n+}"}, {"sha": "b5234af937b0c08b65385d94606ab902503a9b50", "filename": "src/test/run-pass-fulldeps/aux/dummy_mir_pass.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fdummy_mir_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fdummy_mir_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fdummy_mir_pass.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private)]\n+#![feature(box_syntax)]\n+\n+#[macro_use] extern crate rustc;\n+extern crate rustc_plugin;\n+extern crate rustc_const_math;\n+extern crate syntax;\n+\n+use rustc::mir::transform::{self, MirPass};\n+use rustc::mir::repr::{Mir, Literal};\n+use rustc::mir::visit::MutVisitor;\n+use rustc::ty;\n+use rustc::middle::const_val::ConstVal;\n+use rustc_const_math::ConstInt;\n+use rustc_plugin::Registry;\n+\n+use syntax::ast::NodeId;\n+\n+struct Pass;\n+\n+impl transform::Pass for Pass {}\n+impl<'tcx> MirPass<'tcx> for Pass {\n+    fn run_pass(&mut self, _: &ty::TyCtxt<'tcx>, _: NodeId, mir: &mut Mir<'tcx>) {\n+        Visitor.visit_mir(mir)\n+    }\n+}\n+\n+struct Visitor;\n+\n+impl<'tcx> MutVisitor<'tcx> for Visitor {\n+    fn visit_literal(&mut self, literal: &mut Literal<'tcx>) {\n+        if let Literal::Value { ref mut value } = *literal {\n+            if let ConstVal::Integral(ConstInt::I32(ref mut i @ 11)) = *value {\n+                *i = 42;\n+            }\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_mir_pass(box Pass);\n+}"}, {"sha": "858d7269cd87400a8d68a46414136fff22323b6f", "filename": "src/test/run-pass-fulldeps/aux/issue-13560-1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"dylib\"]"}, {"sha": "8e46acca1244fbfeea75bb9b612b415ec60ce3e3", "filename": "src/test/run-pass-fulldeps/aux/issue-13560-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]"}, {"sha": "c0539aa1b6e20c2f41f1319d78eb37e5246df36e", "filename": "src/test/run-pass-fulldeps/aux/issue-13560-3.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-13560-3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+\n+#[macro_use] #[no_link] extern crate issue_13560_1 as t1;\n+#[macro_use] extern crate issue_13560_2 as t2;"}, {"sha": "0e3041c11748ba2b575f4c6b8a6d9c13205808ac", "filename": "src/test/run-pass-fulldeps/aux/issue-16822.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-16822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-16822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-16822.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+use std::cell::RefCell;\n+\n+pub struct Window<Data>{\n+    pub data: RefCell<Data>\n+}\n+\n+impl<Data:  Update> Window<Data> {\n+    pub fn update(&self, e: i32) {\n+        match e {\n+            1 => self.data.borrow_mut().update(),\n+            _ => {}\n+        }\n+    }\n+}\n+\n+pub trait Update {\n+    fn update(&mut self);\n+}"}, {"sha": "718b046e1e477d68970132f4108800109de5b380", "filename": "src/test/run-pass-fulldeps/aux/issue-18502.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-18502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-18502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue-18502.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+struct Foo;\n+// This is the ICE trigger\n+struct Formatter;\n+\n+trait Show {\n+    fn fmt(&self);\n+}\n+\n+impl Show for Foo {\n+    fn fmt(&self) {}\n+}\n+\n+fn bar<T>(f: extern \"Rust\" fn(&T), t: &T) { }\n+\n+// ICE requirement: this has to be marked as inline\n+#[inline]\n+pub fn baz() {\n+    bar(Show::fmt, &Foo);\n+}"}, {"sha": "25a75c2d2952e406bb94478833e2839259063a3c", "filename": "src/test/run-pass-fulldeps/aux/issue_16723_multiple_items_syntax_ext.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue_16723_multiple_items_syntax_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue_16723_multiple_items_syntax_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fissue_16723_multiple_items_syntax_ext.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, quote, rustc_private)]\n+#![crate_type = \"dylib\"]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast;\n+use syntax::codemap;\n+use syntax::ext::base::{ExtCtxt, MacResult, MacEager};\n+use syntax::util::small_vector::SmallVector;\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"multiple_items\", expand)\n+}\n+\n+fn expand(cx: &mut ExtCtxt, _: codemap::Span, _: &[ast::TokenTree]) -> Box<MacResult+'static> {\n+    MacEager::items(SmallVector::many(vec![\n+        quote_item!(cx, struct Struct1;).unwrap(),\n+        quote_item!(cx, struct Struct2;).unwrap()\n+    ]))\n+}"}, {"sha": "09a2e8ecd876d4c5d074873068896c944a57f75a", "filename": "src/test/run-pass-fulldeps/aux/linkage-visibility.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flinkage-visibility.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_private)]\n+\n+// We're testing linkage visibility; the compiler warns us, but we want to\n+// do the runtime check that these functions aren't exported.\n+#![allow(private_no_mangle_fns)]\n+\n+extern crate rustc_back;\n+\n+use rustc_back::dynamic_lib::DynamicLibrary;\n+\n+#[no_mangle]\n+pub fn foo() { bar(); }\n+\n+pub fn foo2<T>() {\n+    fn bar2() {\n+        bar();\n+    }\n+    bar2();\n+}\n+\n+#[no_mangle]\n+fn bar() { }\n+\n+#[allow(dead_code)]\n+#[no_mangle]\n+fn baz() { }\n+\n+pub fn test() {\n+    let lib = DynamicLibrary::open(None).unwrap();\n+    unsafe {\n+        assert!(lib.symbol::<isize>(\"foo\").is_ok());\n+        assert!(lib.symbol::<isize>(\"baz\").is_err());\n+        assert!(lib.symbol::<isize>(\"bar\").is_err());\n+    }\n+}"}, {"sha": "a424517da12f0c2dbda6a5b4e45eb48400faf65f", "filename": "src/test/run-pass-fulldeps/aux/lint_for_crate.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_for_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_for_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_for_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,47 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private)]\n+#![feature(box_syntax)]\n+\n+#[macro_use] extern crate rustc;\n+extern crate rustc_plugin;\n+extern crate syntax;\n+\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+use rustc::hir;\n+use syntax::attr;\n+\n+declare_lint!(CRATE_NOT_OKAY, Warn, \"crate not marked with #![crate_okay]\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(CRATE_NOT_OKAY)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_crate(&mut self, cx: &LateContext, krate: &hir::Crate) {\n+        if !attr::contains_name(&krate.attrs, \"crate_okay\") {\n+            cx.span_lint(CRATE_NOT_OKAY, krate.span,\n+                         \"crate is not marked with #![crate_okay]\");\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_late_lint_pass(box Pass as LateLintPassObject);\n+}"}, {"sha": "1e9a77724a8ebdfd46a5eabcc407b98f34ee46ac", "filename": "src/test/run-pass-fulldeps/aux/lint_group_plugin_test.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_group_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_group_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_group_plugin_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+// Load rustc as a plugin to get macros\n+#[macro_use]\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc::hir;\n+use rustc::lint::{LateContext, LintContext, LintPass, LateLintPass, LateLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+\n+declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n+\n+declare_lint!(PLEASE_LINT, Warn, \"Warn about items named 'pleaselintme'\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(TEST_LINT, PLEASE_LINT)\n+    }\n+}\n+\n+impl LateLintPass for Pass {\n+    fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n+        match &*it.name.as_str() {\n+            \"lintme\" => cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\"),\n+            \"pleaselintme\" => cx.span_lint(PLEASE_LINT, it.span, \"item is named 'pleaselintme'\"),\n+            _ => {}\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_late_lint_pass(box Pass as LateLintPassObject);\n+    reg.register_lint_group(\"lint_me\", vec![TEST_LINT, PLEASE_LINT]);\n+}"}, {"sha": "8ea131da338cb1bd61f60fac56e32fe166a8beb6", "filename": "src/test/run-pass-fulldeps/aux/lint_plugin_test.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_plugin_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_plugin_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flint_plugin_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+extern crate syntax;\n+\n+// Load rustc as a plugin to get macros\n+#[macro_use]\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc::lint::{EarlyContext, LintContext, LintPass, EarlyLintPass,\n+                  EarlyLintPassObject, LintArray};\n+use rustc_plugin::Registry;\n+use syntax::ast;\n+declare_lint!(TEST_LINT, Warn, \"Warn about items named 'lintme'\");\n+\n+struct Pass;\n+\n+impl LintPass for Pass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(TEST_LINT)\n+    }\n+}\n+\n+impl EarlyLintPass for Pass {\n+    fn check_item(&mut self, cx: &EarlyContext, it: &ast::Item) {\n+        if it.ident.name.as_str() == \"lintme\" {\n+            cx.span_lint(TEST_LINT, it.span, \"item is named 'lintme'\");\n+        }\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_early_lint_pass(box Pass as EarlyLintPassObject);\n+}"}, {"sha": "59cfdd1e04a03cc890875a9a799f2985ab022a16", "filename": "src/test/run-pass-fulldeps/aux/llvm_pass_plugin.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fllvm_pass_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fllvm_pass_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fllvm_pass_plugin.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(rustc_private)]\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    // This pass is built in to LLVM.\n+    //\n+    // Normally, we would name a pass that was registered through\n+    // C++ static object constructors in the same .so file as the\n+    // plugin registrar.\n+    reg.register_llvm_pass(\"gvn\");\n+}"}, {"sha": "db26b10fc67cbf24442d3ea5bb78871234c7a03a", "filename": "src/test/run-pass-fulldeps/aux/logging_right_crate.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flogging_right_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flogging_right_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flogging_right_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_private)]\n+\n+#[macro_use] extern crate log;\n+\n+pub fn foo<T>() {\n+    fn death() -> isize { panic!() }\n+    debug!(\"{}\", (||{ death() })());\n+}"}, {"sha": "78c03bac33f27bc31b581707770ff7b55d0f829f", "filename": "src/test/run-pass-fulldeps/aux/lto-syntax-extension-lib.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+\n+pub fn foo() {}"}, {"sha": "9cf0d756f40ba101ef30c251e20945be2f266ff8", "filename": "src/test/run-pass-fulldeps/aux/lto-syntax-extension-plugin.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Flto-syntax-extension-plugin.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(rustc_private)]\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(_reg: &mut Registry) {}"}, {"sha": "3516f566e8a1ffda8f157786da1479d6def7eb47", "filename": "src/test/run-pass-fulldeps/aux/macro_crate_test.rs", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fmacro_crate_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,141 @@\n+// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, quote, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast::{self, TokenTree, Item, MetaItem, ImplItem, TraitItem, ItemKind};\n+use syntax::codemap::Span;\n+use syntax::ext::base::*;\n+use syntax::parse::{self, token};\n+use syntax::ptr::P;\n+use rustc_plugin::Registry;\n+\n+#[macro_export]\n+macro_rules! exported_macro { () => (2) }\n+macro_rules! unexported_macro { () => (3) }\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"make_a_1\", expand_make_a_1);\n+    reg.register_macro(\"identity\", expand_identity);\n+    reg.register_syntax_extension(\n+        token::intern(\"into_multi_foo\"),\n+        // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n+        MultiModifier(Box::new(expand_into_foo_multi)));\n+    reg.register_syntax_extension(\n+        token::intern(\"duplicate\"),\n+        // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n+        MultiDecorator(Box::new(expand_duplicate)));\n+}\n+\n+fn expand_make_a_1(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])\n+                   -> Box<MacResult+'static> {\n+    if !tts.is_empty() {\n+        cx.span_fatal(sp, \"make_a_1 takes no arguments\");\n+    }\n+    MacEager::expr(quote_expr!(cx, 1))\n+}\n+\n+// See Issue #15750\n+fn expand_identity(cx: &mut ExtCtxt, _span: Span, tts: &[TokenTree])\n+                   -> Box<MacResult+'static> {\n+    // Parse an expression and emit it unchanged.\n+    let mut parser = parse::new_parser_from_tts(cx.parse_sess(),\n+        cx.cfg(), tts.to_vec());\n+    let expr = parser.parse_expr().unwrap();\n+    MacEager::expr(quote_expr!(&mut *cx, $expr))\n+}\n+\n+fn expand_into_foo_multi(cx: &mut ExtCtxt,\n+                         sp: Span,\n+                         attr: &MetaItem,\n+                         it: Annotatable) -> Annotatable {\n+    match it {\n+        Annotatable::Item(it) => {\n+            Annotatable::Item(P(Item {\n+                attrs: it.attrs.clone(),\n+                ..(*quote_item!(cx, enum Foo2 { Bar2, Baz2 }).unwrap()).clone()\n+            }))\n+        }\n+        Annotatable::ImplItem(it) => {\n+            quote_item!(cx, impl X { fn foo(&self) -> i32 { 42 } }).unwrap().and_then(|i| {\n+                match i.node {\n+                    ItemKind::Impl(_, _, _, _, _, mut items) => {\n+                        Annotatable::ImplItem(P(items.pop().expect(\"impl method not found\")))\n+                    }\n+                    _ => unreachable!(\"impl parsed to something other than impl\")\n+                }\n+            })\n+        }\n+        Annotatable::TraitItem(it) => {\n+            quote_item!(cx, trait X { fn foo(&self) -> i32 { 0 } }).unwrap().and_then(|i| {\n+                match i.node {\n+                    ItemKind::Trait(_, _, _, mut items) => {\n+                        Annotatable::TraitItem(P(items.pop().expect(\"trait method not found\")))\n+                    }\n+                    _ => unreachable!(\"trait parsed to something other than trait\")\n+                }\n+            })\n+        }\n+    }\n+}\n+\n+// Create a duplicate of the annotatable, based on the MetaItem\n+fn expand_duplicate(cx: &mut ExtCtxt,\n+                    sp: Span,\n+                    mi: &MetaItem,\n+                    it: &Annotatable,\n+                    push: &mut FnMut(Annotatable))\n+{\n+    let copy_name = match mi.node {\n+        ast::MetaItemKind::List(_, ref xs) => {\n+            if let ast::MetaItemKind::Word(ref w) = xs[0].node {\n+                token::str_to_ident(&w)\n+            } else {\n+                cx.span_err(mi.span, \"Expected word\");\n+                return;\n+            }\n+        }\n+        _ => {\n+            cx.span_err(mi.span, \"Expected list\");\n+            return;\n+        }\n+    };\n+\n+    // Duplicate the item but replace its ident by the MetaItem\n+    match it.clone() {\n+        Annotatable::Item(it) => {\n+            let mut new_it = (*it).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::Item(P(new_it)));\n+        }\n+        Annotatable::ImplItem(it) => {\n+            let mut new_it = (*it).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::ImplItem(P(new_it)));\n+        }\n+        Annotatable::TraitItem(tt) => {\n+            let mut new_it = (*tt).clone();\n+            new_it.attrs.clear();\n+            new_it.ident = copy_name;\n+            push(Annotatable::TraitItem(P(new_it)));\n+        }\n+    }\n+}\n+\n+pub fn foo() {}"}, {"sha": "f6e80266a15f51f679b09f1f2e227f8072a79062", "filename": "src/test/run-pass-fulldeps/aux/plugin_args.rs", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_args.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,52 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use std::borrow::ToOwned;\n+use syntax::ast;\n+use syntax::codemap::Span;\n+use syntax::ext::build::AstBuilder;\n+use syntax::ext::base::{TTMacroExpander, ExtCtxt, MacResult, MacEager, NormalTT};\n+use syntax::parse::token;\n+use syntax::print::pprust;\n+use syntax::ptr::P;\n+use rustc_plugin::Registry;\n+\n+struct Expander {\n+    args: Vec<P<ast::MetaItem>>,\n+}\n+\n+impl TTMacroExpander for Expander {\n+    fn expand<'cx>(&self,\n+                   ecx: &'cx mut ExtCtxt,\n+                   sp: Span,\n+                   _: &[ast::TokenTree]) -> Box<MacResult+'cx> {\n+        let args = self.args.iter().map(|i| pprust::meta_item_to_string(&*i))\n+            .collect::<Vec<_>>().join(\", \");\n+        let interned = token::intern_and_get_ident(&args[..]);\n+        MacEager::expr(ecx.expr_str(sp, interned))\n+    }\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    let args = reg.args().clone();\n+    reg.register_syntax_extension(token::intern(\"plugin_args\"),\n+        // FIXME (#22405): Replace `Box::new` with `box` here when/if possible.\n+        NormalTT(Box::new(Expander { args: args, }), None, false));\n+}"}, {"sha": "f56983c14b1bc88e560746d0b7c483bea01f1a67", "filename": "src/test/run-pass-fulldeps/aux/plugin_crate_outlive_expansion_phase.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_crate_outlive_expansion_phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_crate_outlive_expansion_phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_crate_outlive_expansion_phase.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar)]\n+#![feature(box_syntax, rustc_private)]\n+\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use std::any::Any;\n+use std::cell::RefCell;\n+use rustc_plugin::Registry;\n+\n+struct Foo {\n+    foo: isize\n+}\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {}\n+}\n+\n+#[plugin_registrar]\n+pub fn registrar(_: &mut Registry) {\n+    thread_local!(static FOO: RefCell<Option<Box<Any+Send>>> = RefCell::new(None));\n+    FOO.with(|s| *s.borrow_mut() = Some(box Foo { foo: 10 } as Box<Any+Send>));\n+}"}, {"sha": "8b5ff7cf07c6951d6caad3844edaaffaa167b4d7", "filename": "src/test/run-pass-fulldeps/aux/plugin_with_plugin_lib.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_with_plugin_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_with_plugin_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fplugin_with_plugin_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![feature(plugin_registrar, rustc_private)]\n+#![deny(plugin_as_library)] // should have no effect in a plugin crate\n+\n+extern crate macro_crate_test;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(_: &mut Registry) { }"}, {"sha": "713a7d1e811a2c891281f4ab3a763e0fd44c7a87", "filename": "src/test/run-pass-fulldeps/aux/procedural_mbe_matching.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fprocedural_mbe_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fprocedural_mbe_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fprocedural_mbe_matching.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,70 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![crate_type=\"dylib\"]\n+#![feature(plugin_registrar, quote, rustc_private)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::codemap::Span;\n+use syntax::parse::token::{self, str_to_ident, NtExpr, NtPat};\n+use syntax::ast::{TokenTree, Pat};\n+use syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\n+use syntax::ext::build::AstBuilder;\n+use syntax::ext::tt::macro_parser::{MatchedSeq, MatchedNonterminal};\n+use syntax::ext::tt::macro_parser::{Success, Failure, Error};\n+use syntax::ptr::P;\n+use rustc_plugin::Registry;\n+\n+fn expand_mbe_matches(cx: &mut ExtCtxt, sp: Span, args: &[TokenTree])\n+        -> Box<MacResult + 'static> {\n+\n+    let mbe_matcher = quote_matcher!(cx, $matched:expr, $($pat:pat)|+);\n+\n+    let mac_expr = match TokenTree::parse(cx, &mbe_matcher[..], args) {\n+        Success(map) => {\n+            match (&*map[&str_to_ident(\"matched\").name], &*map[&str_to_ident(\"pat\").name]) {\n+                (&MatchedNonterminal(NtExpr(ref matched_expr)),\n+                 &MatchedSeq(ref pats, seq_sp)) => {\n+                    let pats: Vec<P<Pat>> = pats.iter().map(|pat_nt|\n+                        if let &MatchedNonterminal(NtPat(ref pat)) = &**pat_nt {\n+                            pat.clone()\n+                        } else {\n+                            unreachable!()\n+                        }\n+                    ).collect();\n+                    let arm = cx.arm(seq_sp, pats, cx.expr_bool(seq_sp, true));\n+\n+                    quote_expr!(cx,\n+                        match $matched_expr {\n+                            $arm\n+                            _ => false\n+                        }\n+                    )\n+                }\n+                _ => unreachable!()\n+            }\n+        }\n+        Failure(_, s) | Error(_, s) => {\n+            panic!(\"expected Success, but got Error/Failure: {}\", s);\n+        }\n+    };\n+\n+    MacEager::expr(mac_expr)\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"matches\", expand_mbe_matches);\n+}"}, {"sha": "839ece49c3eb5d4c90cf2fea1321e2c98af91890", "filename": "src/test/run-pass-fulldeps/aux/roman_numerals.rs", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Froman_numerals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Froman_numerals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Froman_numerals.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,79 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![crate_type=\"dylib\"]\n+#![feature(plugin_registrar, rustc_private)]\n+#![feature(slice_patterns)]\n+\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::codemap::Span;\n+use syntax::ast::TokenTree;\n+use syntax::parse::token;\n+use syntax::ext::base::{ExtCtxt, MacResult, DummyResult, MacEager};\n+use syntax::ext::build::AstBuilder;  // trait for expr_usize\n+use rustc_plugin::Registry;\n+\n+// WARNING WARNING WARNING WARNING WARNING\n+// =======================================\n+//\n+// This code also appears in src/doc/guide-plugin.md. Please keep\n+// the two copies in sync!  FIXME: have rustdoc read this file\n+\n+fn expand_rn(cx: &mut ExtCtxt, sp: Span, args: &[TokenTree])\n+        -> Box<MacResult + 'static> {\n+\n+    static NUMERALS: &'static [(&'static str, usize)] = &[\n+        (\"M\", 1000), (\"CM\", 900), (\"D\", 500), (\"CD\", 400),\n+        (\"C\",  100), (\"XC\",  90), (\"L\",  50), (\"XL\",  40),\n+        (\"X\",   10), (\"IX\",   9), (\"V\",   5), (\"IV\",   4),\n+        (\"I\",    1)];\n+\n+    if args.len() != 1 {\n+        cx.span_err(\n+            sp,\n+            &format!(\"argument should be a single identifier, but got {} arguments\", args.len()));\n+        return DummyResult::any(sp);\n+    }\n+\n+    let text = match args[0] {\n+        TokenTree::Token(_, token::Ident(s)) => s.to_string(),\n+        _ => {\n+            cx.span_err(sp, \"argument should be a single identifier\");\n+            return DummyResult::any(sp);\n+        }\n+    };\n+\n+    let mut text = &*text;\n+    let mut total = 0;\n+    while !text.is_empty() {\n+        match NUMERALS.iter().find(|&&(rn, _)| text.starts_with(rn)) {\n+            Some(&(rn, val)) => {\n+                total += val;\n+                text = &text[rn.len()..];\n+            }\n+            None => {\n+                cx.span_err(sp, \"invalid Roman numeral\");\n+                return DummyResult::any(sp);\n+            }\n+        }\n+    }\n+\n+    MacEager::expr(cx.expr_usize(sp, total))\n+}\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"rn\", expand_rn);\n+}"}, {"sha": "fadeb02440533aa00a36138359526b307ddab95b", "filename": "src/test/run-pass-fulldeps/aux/syntax_extension_with_dll_deps_1.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![crate_type = \"dylib\"]\n+\n+pub fn the_answer() -> isize {\n+    2\n+}"}, {"sha": "7281698a7fb3491f2f132130b98394f7c2c0a7ce", "filename": "src/test/run-pass-fulldeps/aux/syntax_extension_with_dll_deps_2.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Faux%2Fsyntax_extension_with_dll_deps_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// force-host\n+\n+#![crate_type = \"dylib\"]\n+#![feature(plugin_registrar, quote, rustc_private)]\n+\n+extern crate syntax_extension_with_dll_deps_1 as other;\n+extern crate syntax;\n+extern crate rustc;\n+extern crate rustc_plugin;\n+\n+use syntax::ast::{TokenTree, Item, MetaItem};\n+use syntax::codemap::Span;\n+use syntax::ext::base::*;\n+use rustc_plugin::Registry;\n+\n+#[plugin_registrar]\n+pub fn plugin_registrar(reg: &mut Registry) {\n+    reg.register_macro(\"foo\", expand_foo);\n+}\n+\n+fn expand_foo(cx: &mut ExtCtxt, sp: Span, tts: &[TokenTree])\n+              -> Box<MacResult+'static> {\n+    let answer = other::the_answer();\n+    MacEager::expr(quote_expr!(cx, $answer))\n+}"}, {"sha": "a1d21db8f4d5d976ec3945ddc40a837852e046cb", "filename": "src/test/run-pass/aux/allocator-dummy.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fallocator-dummy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fallocator-dummy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fallocator-dummy.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(allocator, core_intrinsics, libc)]\n+#![allocator]\n+#![crate_type = \"rlib\"]\n+#![no_std]\n+\n+extern crate libc;\n+\n+pub static mut HITS: usize = 0;\n+\n+#[no_mangle]\n+pub extern fn __rust_allocate(size: usize, align: usize) -> *mut u8 {\n+    unsafe {\n+        HITS += 1;\n+        libc::malloc(size as libc::size_t) as *mut u8\n+    }\n+}\n+\n+#[no_mangle]\n+pub extern fn __rust_deallocate(ptr: *mut u8, old_size: usize, align: usize) {\n+    unsafe {\n+        HITS += 1;\n+        libc::free(ptr as *mut _)\n+    }\n+}\n+\n+#[no_mangle]\n+pub extern fn __rust_reallocate(ptr: *mut u8, old_size: usize, size: usize,\n+                                align: usize) -> *mut u8 {\n+    unsafe {\n+        libc::realloc(ptr as *mut _, size as libc::size_t) as *mut u8\n+    }\n+}\n+\n+#[no_mangle]\n+pub extern fn __rust_reallocate_inplace(ptr: *mut u8, old_size: usize,\n+                                        size: usize, align: usize) -> usize {\n+    unsafe { core::intrinsics::abort() }\n+}\n+\n+#[no_mangle]\n+pub extern fn __rust_usable_size(size: usize, align: usize) -> usize {\n+    unsafe { core::intrinsics::abort() }\n+}"}, {"sha": "197fb9a6d018c488ae9e81522666859c4e32d58a", "filename": "src/test/run-pass/aux/anon-extern-mod-cross-crate-1.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fanon-extern-mod-cross-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fanon-extern-mod-cross-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fanon-extern-mod-cross-crate-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"anonexternmod\"]\n+#![feature(libc)]\n+\n+extern crate libc;\n+\n+#[link(name=\"rust_test_helpers\")]\n+extern {\n+    pub fn rust_get_test_int() -> libc::intptr_t;\n+}"}, {"sha": "9d93d9689e737c94cd369ff800b2b06d51ba6687", "filename": "src/test/run-pass/aux/anon_trait_static_method_lib.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fanon_trait_static_method_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fanon_trait_static_method_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fanon_trait_static_method_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo {\n+    pub x: isize\n+}\n+\n+impl Foo {\n+    pub fn new() -> Foo {\n+        Foo { x: 3 }\n+    }\n+}"}, {"sha": "1fd8fee0117c5c31b287405a19faa33526a258f3", "filename": "src/test/run-pass/aux/associated-const-cc-lib.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fassociated-const-cc-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fassociated-const-cc-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fassociated-const-cc-lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts)]\n+\n+#![crate_type=\"lib\"]\n+\n+// These items are for testing that associated consts work cross-crate.\n+pub trait Foo {\n+    const BAR: usize;\n+}\n+\n+pub struct FooNoDefault;\n+\n+impl Foo for FooNoDefault {\n+    const BAR: usize = 0;\n+}\n+\n+// These test that defaults and default resolution work cross-crate.\n+pub trait FooDefault {\n+    const BAR: usize = 1;\n+}\n+\n+pub struct FooOverwriteDefault;\n+\n+impl FooDefault for FooOverwriteDefault {\n+    const BAR: usize = 2;\n+}\n+\n+pub struct FooUseDefault;\n+\n+impl FooDefault for FooUseDefault {}\n+\n+// Test inherent impls.\n+pub struct InherentBar;\n+\n+impl InherentBar {\n+    pub const BAR: usize = 3;\n+}"}, {"sha": "175e8730cbcd3f8ccbed893ace5b4d98dd8d1641", "filename": "src/test/run-pass/aux/associated-types-cc-lib.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fassociated-types-cc-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fassociated-types-cc-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fassociated-types-cc-lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Helper for test issue-18048, which tests associated types in a\n+// cross-crate scenario.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Bar: Sized {\n+    type T;\n+\n+    fn get(x: Option<Self>) -> <Self as Bar>::T;\n+}\n+\n+impl Bar for isize {\n+    type T = usize;\n+\n+    fn get(_: Option<isize>) -> usize { 22 }\n+}"}, {"sha": "6601e7240a780df3321e032d4a55d34ef6c4f04b", "filename": "src/test/run-pass/aux/augmented_assignments.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Faugmented_assignments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Faugmented_assignments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Faugmented_assignments.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::AddAssign;\n+\n+pub struct Int(pub i32);\n+\n+impl AddAssign<i32> for Int {\n+    fn add_assign(&mut self, _: i32) {\n+    }\n+}"}, {"sha": "f129b4b77bb9fca5937b16de164527e36c6ef5c1", "filename": "src/test/run-pass/aux/blind-item-mixed-crate-use-item-foo.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub const X: () = ();"}, {"sha": "91fa912455109d658c09344263de1903c4830f44", "filename": "src/test/run-pass/aux/blind-item-mixed-crate-use-item-foo2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fblind-item-mixed-crate-use-item-foo2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub const Y: () = ();"}, {"sha": "9c90510a8573e7bb5dab27678bc5c84d2a537b16", "filename": "src/test/run-pass/aux/cci_borrow_lib.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_borrow_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_borrow_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_borrow_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo(x: &usize) -> usize {\n+    *x\n+}"}, {"sha": "b38e955231e4a7e5e7985736d4cda9ad1edb609c", "filename": "src/test/run-pass/aux/cci_capture_clause.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_capture_clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_capture_clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_capture_clause.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::thread;\n+use std::sync::mpsc::{Receiver, channel};\n+\n+pub fn foo<T:'static + Send + Clone>(x: T) -> Receiver<T> {\n+    let (tx, rx) = channel();\n+    thread::spawn(move|| {\n+        tx.send(x.clone());\n+    });\n+    rx\n+}"}, {"sha": "08a13fd8bcc9ab47cedd21cb844ad22c56b85da7", "filename": "src/test/run-pass/aux/cci_class.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+      meows : usize,\n+\n+      pub how_hungry : isize,\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize) -> cat  {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y\n+        }\n+    }\n+}"}, {"sha": "7d147832f09437f40d12ec428220de0884462ab6", "filename": "src/test/run-pass/aux/cci_class_2.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+      meows : usize,\n+\n+      pub how_hungry : isize,\n+\n+    }\n+\n+    impl cat {\n+        pub fn speak(&self) {}\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize) -> cat {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y\n+        }\n+    }\n+}"}, {"sha": "ec1bf108dcb007145909d00f1fdac1ab3c652967", "filename": "src/test/run-pass/aux/cci_class_3.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+        meows : usize,\n+\n+        pub how_hungry : isize,\n+    }\n+\n+    impl cat {\n+        pub fn speak(&mut self) { self.meows += 1; }\n+        pub fn meow_count(&mut self) -> usize { self.meows }\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize) -> cat {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y\n+        }\n+    }\n+}"}, {"sha": "300cc31632e40e7375004841fd67d642746dd285", "filename": "src/test/run-pass/aux/cci_class_4.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_4.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+    pub struct cat {\n+        meows : usize,\n+\n+        pub how_hungry : isize,\n+        pub name : String,\n+    }\n+\n+    impl cat {\n+        pub fn speak(&mut self) { self.meow(); }\n+\n+        pub fn eat(&mut self) -> bool {\n+            if self.how_hungry > 0 {\n+                println!(\"OM NOM NOM\");\n+                self.how_hungry -= 2;\n+                return true;\n+            } else {\n+                println!(\"Not hungry!\");\n+                return false;\n+            }\n+        }\n+    }\n+\n+    impl cat {\n+        pub fn meow(&mut self) {\n+            println!(\"Meow\");\n+            self.meows += 1;\n+            if self.meows % 5 == 0 {\n+                self.how_hungry += 1;\n+            }\n+        }\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize, in_name: String) -> cat {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y,\n+            name: in_name\n+        }\n+    }\n+}"}, {"sha": "c902a6c7dca89dbbe8fe8f79427c1c35d1ecee78", "filename": "src/test/run-pass/aux/cci_class_6.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_6.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitties {\n+\n+    pub struct cat<U> {\n+        info : Vec<U> ,\n+        meows : usize,\n+\n+        pub how_hungry : isize,\n+    }\n+\n+    impl<U> cat<U> {\n+        pub fn speak<T>(&mut self, stuff: Vec<T> ) {\n+            self.meows += stuff.len();\n+        }\n+\n+        pub fn meow_count(&mut self) -> usize { self.meows }\n+    }\n+\n+    pub fn cat<U>(in_x : usize, in_y : isize, in_info: Vec<U> ) -> cat<U> {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y,\n+            info: in_info\n+        }\n+    }\n+}"}, {"sha": "f54a39d61ef3ed0dd53bdfc2efb389e2f3e8ea54", "filename": "src/test/run-pass/aux/cci_class_cast.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_cast.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,60 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod kitty {\n+    use std::fmt;\n+\n+    pub struct cat {\n+      meows : usize,\n+      pub how_hungry : isize,\n+      pub name : String,\n+    }\n+\n+    impl fmt::Display for cat {\n+        fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+            write!(f, \"{}\", self.name)\n+        }\n+    }\n+\n+    impl cat {\n+        fn meow(&mut self) {\n+            println!(\"Meow\");\n+            self.meows += 1;\n+            if self.meows % 5 == 0 {\n+                self.how_hungry += 1;\n+            }\n+        }\n+\n+    }\n+\n+    impl cat {\n+        pub fn speak(&mut self) { self.meow(); }\n+\n+        pub fn eat(&mut self) -> bool {\n+            if self.how_hungry > 0 {\n+                println!(\"OM NOM NOM\");\n+                self.how_hungry -= 2;\n+                return true;\n+            }\n+            else {\n+                println!(\"Not hungry!\");\n+                return false;\n+            }\n+        }\n+    }\n+\n+    pub fn cat(in_x : usize, in_y : isize, in_name: String) -> cat {\n+        cat {\n+            meows: in_x,\n+            how_hungry: in_y,\n+            name: in_name\n+        }\n+    }\n+}"}, {"sha": "7ca3d7c4ac99042a25921536fb1ef64b48006106", "filename": "src/test/run-pass/aux/cci_class_trait.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_class_trait.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod animals {\n+    pub trait noisy {\n+        fn speak(&mut self);\n+    }\n+}"}, {"sha": "ee8290050f91babafb87664c20cd087fa1262b58", "filename": "src/test/run-pass/aux/cci_const.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_const.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub extern fn bar() {\n+}\n+\n+pub const foopy: &'static str = \"hi there\";\n+pub const uint_val: usize = 12;\n+pub const uint_expr: usize = (1 << uint_val) - 1;"}, {"sha": "76fe9fe5aa40a6a73b8c8f7dd8a90c12b75fead0", "filename": "src/test/run-pass/aux/cci_const_block.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_const_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_const_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_const_block.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub static BLOCK_FN_DEF: fn(usize) -> usize = {\n+    fn foo(a: usize) -> usize {\n+        a + 10\n+    }\n+    foo\n+};"}, {"sha": "d8921f4e09a8a0bd2fb79cea5f2e547a482cb537", "filename": "src/test/run-pass/aux/cci_impl_lib.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_impl_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_impl_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_impl_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"cci_impl_lib\"]\n+\n+pub trait uint_helpers {\n+    fn to<F>(&self, v: usize, f: F) where F: FnMut(usize);\n+}\n+\n+impl uint_helpers for usize {\n+    #[inline]\n+    fn to<F>(&self, v: usize, mut f: F) where F: FnMut(usize) {\n+        let mut i = *self;\n+        while i < v {\n+            f(i);\n+            i += 1;\n+        }\n+    }\n+}"}, {"sha": "b6e69d29f70cd48dc45a44ea0542361c69890183", "filename": "src/test/run-pass/aux/cci_intrinsic.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_intrinsic.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(intrinsics)]\n+\n+pub mod rusti {\n+    extern \"rust-intrinsic\" {\n+        pub fn atomic_xchg<T>(dst: *mut T, src: T) -> T;\n+    }\n+}\n+\n+#[inline(always)]\n+pub fn atomic_xchg(dst: *mut isize, src: isize) -> isize {\n+    unsafe {\n+        rusti::atomic_xchg(dst, src)\n+    }\n+}"}, {"sha": "07d03b4c7590ff9d66d6e9d2fd8beff8245759dc", "filename": "src/test/run-pass/aux/cci_iter_lib.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_iter_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_iter_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_iter_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"cci_iter_lib\"]\n+\n+#[inline]\n+pub fn iter<T, F>(v: &[T], mut f: F) where F: FnMut(&T) {\n+    let mut i = 0;\n+    let n = v.len();\n+    while i < n {\n+        f(&v[i]);\n+        i += 1;\n+    }\n+}"}, {"sha": "8c1a283a72d77b98e3909af7c7e858e104c9b262", "filename": "src/test/run-pass/aux/cci_nested_lib.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_nested_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_nested_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_nested_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,63 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unknown_features)]\n+#![feature(box_syntax)]\n+\n+use std::cell::RefCell;\n+\n+pub struct Entry<A,B> {\n+    key: A,\n+    value: B\n+}\n+\n+pub struct alist<A,B> {\n+    eq_fn: extern \"Rust\" fn(A,A) -> bool,\n+    data: Box<RefCell<Vec<Entry<A,B>>>>,\n+}\n+\n+pub fn alist_add<A:'static,B:'static>(lst: &alist<A,B>, k: A, v: B) {\n+    let mut data = lst.data.borrow_mut();\n+    (*data).push(Entry{key:k, value:v});\n+}\n+\n+pub fn alist_get<A:Clone + 'static,\n+                 B:Clone + 'static>(\n+                 lst: &alist<A,B>,\n+                 k: A)\n+                 -> B {\n+    let eq_fn = lst.eq_fn;\n+    let data = lst.data.borrow();\n+    for entry in &(*data) {\n+        if eq_fn(entry.key.clone(), k.clone()) {\n+            return entry.value.clone();\n+        }\n+    }\n+    panic!();\n+}\n+\n+#[inline]\n+pub fn new_int_alist<B:'static>() -> alist<isize, B> {\n+    fn eq_int(a: isize, b: isize) -> bool { a == b }\n+    return alist {\n+        eq_fn: eq_int,\n+        data: box RefCell::new(Vec::new()),\n+    };\n+}\n+\n+#[inline]\n+pub fn new_int_alist_2<B:'static>() -> alist<isize, B> {\n+    #[inline]\n+    fn eq_int(a: isize, b: isize) -> bool { a == b }\n+    return alist {\n+        eq_fn: eq_int,\n+        data: box RefCell::new(Vec::new()),\n+    };\n+}"}, {"sha": "4c6f808c6192040a0fcc3e84ab4d9ecee1b47d5f", "filename": "src/test/run-pass/aux/cci_no_inline_lib.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_no_inline_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcci_no_inline_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcci_no_inline_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"cci_no_inline_lib\"]\n+\n+\n+// same as cci_iter_lib, more-or-less, but not marked inline\n+pub fn iter<F>(v: Vec<usize> , mut f: F) where F: FnMut(usize) {\n+    let mut i = 0;\n+    let n = v.len();\n+    while i < n {\n+        f(v[i]);\n+        i += 1;\n+    }\n+}"}, {"sha": "b5b4390657b4f18d648421a75cf7286dbd28dd72", "filename": "src/test/run-pass/aux/cfg_inner_static.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcfg_inner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcfg_inner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcfg_inner_static.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// this used to just ICE on compiling\n+pub fn foo() {\n+    if cfg!(foo) {\n+        static a: isize = 3;\n+        a\n+    } else { 3 };\n+}"}, {"sha": "7c88d3d37e3a3524c5fb57510e4a3f7981c6d441", "filename": "src/test/run-pass/aux/cgu_test.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+// compile-flags: --crate-type=lib\n+\n+pub fn id<T>(t: T) -> T {\n+  t\n+}"}, {"sha": "0f0d1cd87e1f84cc294e15e22d4bae4dd287b22e", "filename": "src/test/run-pass/aux/cgu_test_a.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+// compile-flags: -Ccodegen-units=2 --crate-type=lib\n+\n+extern crate cgu_test;\n+\n+pub mod a {\n+    pub fn a() {\n+        ::cgu_test::id(0);\n+    }\n+}\n+pub mod b {\n+    pub fn a() {\n+        ::cgu_test::id(0);\n+    }\n+}"}, {"sha": "0f0d1cd87e1f84cc294e15e22d4bae4dd287b22e", "filename": "src/test/run-pass/aux/cgu_test_b.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcgu_test_b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+// compile-flags: -Ccodegen-units=2 --crate-type=lib\n+\n+extern crate cgu_test;\n+\n+pub mod a {\n+    pub fn a() {\n+        ::cgu_test::id(0);\n+    }\n+}\n+pub mod b {\n+    pub fn a() {\n+        ::cgu_test::id(0);\n+    }\n+}"}, {"sha": "c0d81cd8e1bad335e807e7346044895240f3e662", "filename": "src/test/run-pass/aux/check_static_recursion_foreign_helper.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcheck_static_recursion_foreign_helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcheck_static_recursion_foreign_helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcheck_static_recursion_foreign_helper.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Helper definition for test/run-pass/check-static-recursion-foreign.rs.\n+\n+#![feature(libc)]\n+\n+#[crate_id = \"check_static_recursion_foreign_helper\"]\n+#[crate_type = \"lib\"]\n+\n+extern crate libc;\n+\n+#[no_mangle]\n+pub static test_static: libc::c_int = 0;"}, {"sha": "d3d389c6a8bd52da51a2579ea7bf4c6408ee2c69", "filename": "src/test/run-pass/aux/coherence_copy_like_lib.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_copy_like_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_copy_like_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_copy_like_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+#![feature(fundamental)]\n+\n+pub trait MyCopy { }\n+impl MyCopy for i32 { }\n+\n+pub struct MyStruct<T>(T);\n+\n+#[fundamental]\n+pub struct MyFundamentalStruct<T>(T);"}, {"sha": "daa123849e4e797d539db3433a7908c97f18887f", "filename": "src/test/run-pass/aux/coherence_lib.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcoherence_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Remote {\n+    fn foo(&self) { }\n+}\n+\n+pub trait Remote1<T> {\n+    fn foo(&self, t: T) { }\n+}\n+\n+pub trait Remote2<T, U> {\n+    fn foo(&self, t: T, u: U) { }\n+}\n+\n+pub struct Pair<T,U>(T,U);"}, {"sha": "b0d5a6b12727b16225778adc037b0943931a7cc2", "filename": "src/test/run-pass/aux/const_fn_lib.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fconst_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fconst_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fconst_fn_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Crate that exports a const fn. Used for testing cross-crate.\n+\n+#![crate_type=\"rlib\"]\n+#![feature(const_fn)]\n+\n+pub const fn foo() -> usize { 22 } //~ ERROR const fn is unstable"}, {"sha": "0028b51f9d1ee8d6cfc0b56c2944336c70e78afa", "filename": "src/test/run-pass/aux/crate-attributes-using-cfg_attr.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcrate-attributes-using-cfg_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcrate-attributes-using-cfg_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcrate-attributes-using-cfg_attr.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+// compile-flags: --cfg foo\n+\n+#![cfg_attr(foo, crate_type=\"lib\")]\n+\n+pub fn foo() {}"}, {"sha": "f3d5bf2d65eeea578bc6b75980c963570f96c84f", "filename": "src/test/run-pass/aux/crate-method-reexport-grrrrrrr2.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcrate-method-reexport-grrrrrrr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fcrate-method-reexport-grrrrrrr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fcrate-method-reexport-grrrrrrr2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"crate_method_reexport_grrrrrrr2\"]\n+\n+pub use name_pool::add;\n+\n+pub mod name_pool {\n+    pub type name_pool = ();\n+\n+    pub trait add {\n+        fn add(&self, s: String);\n+    }\n+\n+    impl add for name_pool {\n+        fn add(&self, _s: String) {\n+        }\n+    }\n+}\n+\n+pub mod rust {\n+    pub use name_pool::add;\n+\n+    pub type rt = Box<()>;\n+\n+    pub trait cx {\n+        fn cx(&self);\n+    }\n+\n+    impl cx for rt {\n+        fn cx(&self) {\n+        }\n+    }\n+}"}, {"sha": "fe852e5d8eaee4c95df68851587fde0643bb912e", "filename": "src/test/run-pass/aux/default_type_params_xc.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fdefault_type_params_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fdefault_type_params_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fdefault_type_params_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Heap;\n+\n+pub struct FakeHeap;\n+\n+pub struct FakeVec<T, A = FakeHeap> { pub f: Option<(T,A)> }"}, {"sha": "f083e10bfdb3262554bc098d30eb9edb5a26dfad", "filename": "src/test/run-pass/aux/derive-no-std.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fderive-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fderive-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fderive-no-std.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![no_std]\n+\n+// Issue #16803\n+\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Default, Copy)]\n+pub struct Foo {\n+    pub x: u32,\n+}\n+\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub enum Bar {\n+    Qux,\n+    Quux(u32),\n+}\n+\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub enum Void {}\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub struct Empty;\n+#[derive(Clone, Hash, PartialEq, Eq, PartialOrd, Ord,\n+         Debug, Copy)]\n+pub struct AlsoEmpty {}\n+"}, {"sha": "22f65c2b0d8f86470130de485c70d5f33d514e99", "filename": "src/test/run-pass/aux/empty-struct.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fempty-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fempty-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fempty-struct.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct XEmpty1 {}\n+pub struct XEmpty2;\n+\n+pub enum XE {\n+    XEmpty3 {},\n+    XEmpty4,\n+}"}, {"sha": "dafa66d9286d2f5292c85dabea10bf9593e13c32", "filename": "src/test/run-pass/aux/explicit_self_xcrate.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fexplicit_self_xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fexplicit_self_xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fexplicit_self_xcrate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+    #[inline(always)]\n+    fn f(&self);\n+}\n+\n+pub struct Bar {\n+    pub x: String\n+}\n+\n+impl Foo for Bar {\n+    #[inline(always)]\n+    fn f(&self) {\n+        println!(\"{}\", (*self).x);\n+    }\n+}"}, {"sha": "fc2e328f68657e65c58f724a1fef960d62dd688b", "filename": "src/test/run-pass/aux/extern-crosscrate-source.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern-crosscrate-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern-crosscrate-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fextern-crosscrate-source.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,41 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"externcallback\"]\n+#![crate_type = \"lib\"]\n+#![feature(libc)]\n+\n+extern crate libc;\n+\n+pub mod rustrt {\n+    extern crate libc;\n+\n+    #[link(name = \"rust_test_helpers\")]\n+    extern {\n+        pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n+                             data: libc::uintptr_t)\n+                             -> libc::uintptr_t;\n+    }\n+}\n+\n+pub fn fact(n: libc::uintptr_t) -> libc::uintptr_t {\n+    unsafe {\n+        println!(\"n = {}\", n);\n+        rustrt::rust_dbg_call(cb, n)\n+    }\n+}\n+\n+pub extern fn cb(data: libc::uintptr_t) -> libc::uintptr_t {\n+    if data == 1 {\n+        data\n+    } else {\n+        fact(data - 1) * data\n+    }\n+}"}, {"sha": "500c455136b511ad3239728778d3b26f8c9545eb", "filename": "src/test/run-pass/aux/extern-take-value.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern-take-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern-take-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fextern-take-value.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub extern fn f() -> i32 { 1 }\n+pub extern fn g() -> i32 { 2 }\n+\n+pub fn get_f() -> extern fn() -> i32 { f }\n+pub fn get_g() -> extern fn() -> i32 { g }"}, {"sha": "55a4226c6632da8685dd5c58fd556c6469e79834", "filename": "src/test/run-pass/aux/extern_calling_convention.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern_calling_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern_calling_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fextern_calling_convention.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2013-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Make sure Rust generates the correct calling convention for extern\n+// functions.\n+\n+#[inline(never)]\n+#[cfg(target_arch = \"x86_64\")]\n+pub extern \"win64\" fn foo(a: isize, b: isize, c: isize, d: isize) {\n+    assert_eq!(a, 1);\n+    assert_eq!(b, 2);\n+    assert_eq!(c, 3);\n+    assert_eq!(d, 4);\n+\n+    println!(\"a: {}, b: {}, c: {}, d: {}\",\n+             a, b, c, d)\n+}\n+\n+#[inline(never)]\n+#[cfg(not(target_arch = \"x86_64\"))]\n+pub extern fn foo(a: isize, b: isize, c: isize, d: isize) {\n+    assert_eq!(a, 1);\n+    assert_eq!(b, 2);\n+    assert_eq!(c, 3);\n+    assert_eq!(d, 4);\n+\n+    println!(\"a: {}, b: {}, c: {}, d: {}\",\n+             a, b, c, d)\n+}"}, {"sha": "0fb6adfcda19fa0032c737bd9c7fde7f8121eb9f", "filename": "src/test/run-pass/aux/extern_mod_ordering_lib.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern_mod_ordering_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fextern_mod_ordering_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fextern_mod_ordering_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub mod extern_mod_ordering_lib {\n+    pub fn f() {}\n+}"}, {"sha": "1f944b6ed32f04a1dc1f42a413fb108951a64a04", "filename": "src/test/run-pass/aux/fat_drop.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ffat_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ffat_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Ffat_drop.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub static mut DROPPED: bool = false;\n+\n+pub struct S {\n+    _unsized: [u8]\n+}\n+\n+impl Drop for S {\n+    fn drop(&mut self) {\n+        unsafe {\n+            DROPPED = true;\n+        }\n+    }\n+}"}, {"sha": "5d380ea6a5aca14875a9adbf6543731303e8b7ea", "filename": "src/test/run-pass/aux/fn-abi.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ffn-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ffn-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Ffn-abi.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle]\n+pub extern fn foo() {}"}, {"sha": "460d0a0088ce2918813c5374d8558d63a99409fd", "filename": "src/test/run-pass/aux/foreign_lib.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fforeign_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"foreign_lib\"]\n+\n+#![feature(libc)]\n+\n+pub mod rustrt {\n+    extern crate libc;\n+\n+    #[link(name = \"rust_test_helpers\")]\n+    extern {\n+        pub fn rust_get_test_int() -> libc::intptr_t;\n+    }\n+}\n+\n+pub mod rustrt2 {\n+    extern crate libc;\n+\n+    extern {\n+        pub fn rust_get_test_int() -> libc::intptr_t;\n+    }\n+}\n+\n+pub mod rustrt3 {\n+    // Different type, but same ABI (on all supported platforms).\n+    // Ensures that we don't ICE or trigger LLVM asserts when\n+    // importing the same symbol under different types.\n+    // See https://github.com/rust-lang/rust/issues/32740.\n+    extern {\n+        pub fn rust_get_test_int() -> *const u8;\n+    }\n+}\n+\n+pub fn local_uses() {\n+    unsafe {\n+        let x = rustrt::rust_get_test_int();\n+        assert_eq!(x, rustrt2::rust_get_test_int());\n+        assert_eq!(x as *const _, rustrt3::rust_get_test_int());\n+    }\n+}"}, {"sha": "044bb606b40e224b15a0dd6766a72f4e1fec9155", "filename": "src/test/run-pass/aux/go_trait.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fgo_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fgo_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fgo_trait.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(specialization)]\n+\n+// Common code used for tests that model the Fn/FnMut/FnOnce hierarchy.\n+\n+pub trait Go {\n+    fn go(&self, arg: isize);\n+}\n+\n+pub fn go<G:Go>(this: &G, arg: isize) {\n+    this.go(arg)\n+}\n+\n+pub trait GoMut {\n+    fn go_mut(&mut self, arg: isize);\n+}\n+\n+pub fn go_mut<G:GoMut>(this: &mut G, arg: isize) {\n+    this.go_mut(arg)\n+}\n+\n+pub trait GoOnce {\n+    fn go_once(self, arg: isize);\n+}\n+\n+pub fn go_once<G:GoOnce>(this: G, arg: isize) {\n+    this.go_once(arg)\n+}\n+\n+impl<G> GoMut for G\n+    where G : Go\n+{\n+    default fn go_mut(&mut self, arg: isize) {\n+        go(&*self, arg)\n+    }\n+}\n+\n+impl<G> GoOnce for G\n+    where G : GoMut\n+{\n+    default fn go_once(mut self, arg: isize) {\n+        go_mut(&mut self, arg)\n+    }\n+}"}, {"sha": "44e62b99a96d151ec9de6145e1cf96f8f6134033", "filename": "src/test/run-pass/aux/i8.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fi8.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// A crate named after a built-in type.\n+\n+pub struct Test;"}, {"sha": "ad3cdedf7eafebca8c7234ccdc29ea606708d3d1", "filename": "src/test/run-pass/aux/impl_privacy_xc_1.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct Fish {\n+    pub x: isize\n+}\n+\n+impl Fish {\n+    pub fn swim(&self) {}\n+}"}, {"sha": "c3212b0fc6d22da10f0e422af95a3c793f6389ad", "filename": "src/test/run-pass/aux/impl_privacy_xc_2.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fimpl_privacy_xc_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct Fish {\n+    pub x: isize\n+}\n+\n+mod unexported {\n+    use super::Fish;\n+    impl PartialEq for Fish {\n+        fn eq(&self, _: &Fish) -> bool { true }\n+        fn ne(&self, _: &Fish) -> bool { false }\n+    }\n+}"}, {"sha": "dd1fdc2e4981f8903def8db742b4f9be0df56452", "filename": "src/test/run-pass/aux/inline_dtor.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Finline_dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Finline_dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Finline_dtor.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"inline_dtor\"]\n+\n+pub struct Foo;\n+\n+impl Drop for Foo {\n+    #[inline]\n+    fn drop(&mut self) {}\n+}"}, {"sha": "0d15c13a4ef1e936322f9c64d9f947db9e2d348c", "filename": "src/test/run-pass/aux/inner_static.rs", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Finner_static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Finner_static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Finner_static.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,61 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct A<T> { pub v: T }\n+pub struct B<T> { pub v: T }\n+\n+pub mod test {\n+    pub struct A<T> { pub v: T }\n+\n+    impl<T> A<T> {\n+        pub fn foo(&self) -> isize {\n+            static a: isize = 5;\n+            return a\n+        }\n+\n+        pub fn bar(&self) -> isize {\n+            static a: isize = 6;\n+            return a;\n+        }\n+    }\n+}\n+\n+impl<T> A<T> {\n+    pub fn foo(&self) -> isize {\n+        static a: isize = 1;\n+        return a\n+    }\n+\n+    pub fn bar(&self) -> isize {\n+        static a: isize = 2;\n+        return a;\n+    }\n+}\n+\n+impl<T> B<T> {\n+    pub fn foo(&self) -> isize {\n+        static a: isize = 3;\n+        return a\n+    }\n+\n+    pub fn bar(&self) -> isize {\n+        static a: isize = 4;\n+        return a;\n+    }\n+}\n+\n+pub fn foo() -> isize {\n+    let a = A { v: () };\n+    let b = B { v: () };\n+    let c = test::A { v: () };\n+    return a.foo() + a.bar() +\n+           b.foo() + b.bar() +\n+           c.foo() + c.bar();\n+}"}, {"sha": "b231efa0fece4c3a6f82bcc029349254e5743079", "filename": "src/test/run-pass/aux/iss.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fiss.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fiss.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fiss.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"issue6919_3\"]\n+\n+// part of issue-6919.rs\n+\n+pub struct C<K> where K: FnOnce() {\n+    pub k: K,\n+}\n+\n+fn no_op() { }\n+pub const D : C<fn()> = C {\n+    k: no_op as fn()\n+};"}, {"sha": "a21deb44fcc834e7023a866f042686fb1f40f40a", "filename": "src/test/run-pass/aux/issue-10028.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-10028.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-10028.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-10028.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unsafe_no_drop_flag)]\n+\n+#[unsafe_no_drop_flag]\n+pub struct ZeroLengthThingWithDestructor;\n+impl Drop for ZeroLengthThingWithDestructor {\n+    fn drop(&mut self) {}\n+}\n+impl ZeroLengthThingWithDestructor {\n+    pub fn new() -> ZeroLengthThingWithDestructor {\n+        ZeroLengthThingWithDestructor\n+    }\n+}"}, {"sha": "15b72b37781e76406e15a1abd605f2f1434c9cf9", "filename": "src/test/run-pass/aux/issue-11224.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11224.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11224.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11224.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(dead_code)]\n+\n+mod inner {\n+    pub trait Trait {\n+        fn f(&self) { f(); }\n+    }\n+\n+    impl Trait for isize {}\n+\n+    fn f() {}\n+}\n+\n+pub fn foo() {\n+    let a = &1isize as &inner::Trait;\n+    a.f();\n+}"}, {"sha": "e1ec15be9279f1301b3bc501106cb0593b63b6aa", "filename": "src/test/run-pass/aux/issue-11225-1.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod inner {\n+    pub trait Trait {\n+        fn f(&self) { f(); }\n+        fn f_ufcs(&self) { f_ufcs(); }\n+    }\n+\n+    impl Trait for isize {}\n+\n+    fn f() {}\n+    fn f_ufcs() {}\n+}\n+\n+pub fn foo<T: inner::Trait>(t: T) {\n+    t.f();\n+}\n+pub fn foo_ufcs<T: inner::Trait>(t: T) {\n+    T::f_ufcs(&t);\n+}"}, {"sha": "25110edda270634ddc4784ddda9b2aab71a1e05d", "filename": "src/test/run-pass/aux/issue-11225-2.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use inner::Trait;\n+\n+mod inner {\n+    pub struct Foo;\n+    pub trait Trait {\n+        fn f(&self);\n+        fn f_ufcs(&self);\n+    }\n+\n+    impl Trait for Foo {\n+        fn f(&self) { }\n+        fn f_ufcs(&self) { }\n+    }\n+}\n+\n+pub trait Outer {\n+    fn foo<T: Trait>(&self, t: T) { t.f(); }\n+    fn foo_ufcs<T: Trait>(&self, t: T) { T::f(&t); }\n+}\n+\n+impl Outer for isize {}\n+\n+pub fn foo<T: Outer>(t: T) {\n+    t.foo(inner::Foo);\n+}\n+pub fn foo_ufcs<T: Outer>(t: T) {\n+    T::foo_ufcs(&t, inner::Foo)\n+}"}, {"sha": "d48fb68ba0ffd5a42c87287498282226ccf86462", "filename": "src/test/run-pass/aux/issue-11225-3.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11225-3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait PrivateTrait {\n+    fn private_trait_method(&self);\n+    fn private_trait_method_ufcs(&self);\n+}\n+\n+struct PrivateStruct;\n+\n+impl PrivateStruct {\n+    fn private_inherent_method(&self) { }\n+    fn private_inherent_method_ufcs(&self) { }\n+}\n+\n+impl PrivateTrait for PrivateStruct {\n+    fn private_trait_method(&self) { }\n+    fn private_trait_method_ufcs(&self) { }\n+}\n+\n+#[inline]\n+pub fn public_inlinable_function() {\n+    PrivateStruct.private_trait_method();\n+    PrivateStruct.private_inherent_method();\n+}\n+\n+#[inline]\n+pub fn public_inlinable_function_ufcs() {\n+    PrivateStruct::private_trait_method(&PrivateStruct);\n+    PrivateStruct::private_inherent_method(&PrivateStruct);\n+}"}, {"sha": "c5dc3439f2f8d78ef407b820232c1637e64b9fc1", "filename": "src/test/run-pass/aux/issue-11508.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11508.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11508.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11508.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Closed01<F>(pub F);\n+\n+pub trait Bar { fn new() -> Self; }\n+\n+impl<T: Bar> Bar for Closed01<T> {\n+    fn new() -> Closed01<T> { Closed01(Bar::new()) }\n+}\n+impl Bar for f32 { fn new() -> f32 { 1.0 } }\n+\n+pub fn random<T: Bar>() -> T { Bar::new() }"}, {"sha": "21ef99e3c3d95c7a562254d3c3e90cbc5894ef0a", "filename": "src/test/run-pass/aux/issue-11529.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-11529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-11529.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct A<'a>(pub &'a isize);"}, {"sha": "ea22258f67d6b7e577200d283cd4847ee753f477", "filename": "src/test/run-pass/aux/issue-12133-dylib.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]"}, {"sha": "fa5722ae6a31ba51392d1f986b1dc866c6b06321", "filename": "src/test/run-pass/aux/issue-12133-dylib2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-dylib2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"dylib\"]\n+\n+extern crate issue_12133_rlib as a;\n+extern crate issue_12133_dylib as b;"}, {"sha": "8e46acca1244fbfeea75bb9b612b415ec60ce3e3", "filename": "src/test/run-pass/aux/issue-12133-rlib.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-rlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-rlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-12133-rlib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]"}, {"sha": "9f2bd5d0e93927317ad3c25c21c1572a0b1ad548", "filename": "src/test/run-pass/aux/issue-12660-aux.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12660-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-12660-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-12660-aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+#![crate_name=\"issue12660aux\"]\n+\n+pub use my_mod::{MyStruct, my_fn};\n+\n+mod my_mod {\n+    pub struct MyStruct;\n+\n+    pub fn my_fn(my_struct: MyStruct) {\n+    }\n+}"}, {"sha": "e373421fabfaca1cba11a77d2595fcd4ec23152a", "filename": "src/test/run-pass/aux/issue-13620-1.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo {\n+    pub foo: extern fn()\n+}\n+\n+extern fn the_foo() {}\n+\n+pub const FOO: Foo = Foo {\n+    foo: the_foo\n+};"}, {"sha": "554170bc130377b51268fdbc3ee2098ad36de73e", "filename": "src/test/run-pass/aux/issue-13620-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-13620-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate issue_13620_1 as crate1;\n+\n+pub static FOO2: crate1::Foo = crate1::FOO;"}, {"sha": "941b67eb2da6c944db37dbb9b7bcfaadb070f35e", "filename": "src/test/run-pass/aux/issue-13872-1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub enum A { B }"}, {"sha": "bb51417528aef724fb5fcf913109218820046203", "filename": "src/test/run-pass/aux/issue-13872-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate issue_13872_1 as foo;\n+\n+pub use foo::A::B;"}, {"sha": "e20618f1ec076d2aab145666b1e30ef905990e48", "filename": "src/test/run-pass/aux/issue-13872-3.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-13872-3.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate issue_13872_2 as bar;\n+\n+use bar::B;\n+\n+pub fn foo() {\n+    match B {\n+        B => {}\n+    }\n+}"}, {"sha": "78c03bac33f27bc31b581707770ff7b55d0f829f", "filename": "src/test/run-pass/aux/issue-14344-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+\n+pub fn foo() {}"}, {"sha": "9df35e50adba9ce73eeafa60bb761789190fc636", "filename": "src/test/run-pass/aux/issue-14344-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-14344-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate issue_14344_1;\n+\n+pub fn bar() {}"}, {"sha": "a48088609f982ca7565fccde0828912430998f4c", "filename": "src/test/run-pass/aux/issue-14421.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14421.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14421.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-14421.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+#![deny(warnings)]\n+#![allow(dead_code)]\n+\n+pub use src::aliases::B;\n+pub use src::hidden_core::make;\n+\n+mod src {\n+    pub mod aliases {\n+        use super::hidden_core::A;\n+        pub type B = A<f32>;\n+    }\n+\n+    pub mod hidden_core {\n+        use super::aliases::B;\n+\n+        pub struct A<T> { t: T }\n+\n+        pub fn make() -> B { A { t: 1.0 } }\n+\n+        impl<T> A<T> {\n+            pub fn foo(&mut self) { println!(\"called foo\"); }\n+        }\n+    }\n+}"}, {"sha": "32af6d9255e5bd959ff36375cee78111ee38a514", "filename": "src/test/run-pass/aux/issue-14422.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14422.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-14422.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-14422.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+#![deny(warnings)]\n+\n+pub use src::aliases::B;\n+pub use src::hidden_core::make;\n+\n+mod src {\n+    pub mod aliases {\n+        use super::hidden_core::A;\n+        pub type B = A;\n+    }\n+\n+    pub mod hidden_core {\n+        use super::aliases::B;\n+\n+        #[derive(Copy, Clone)]\n+        pub struct A;\n+\n+        pub fn make() -> B { A }\n+\n+        impl A {\n+            pub fn foo(&mut self) { println!(\"called foo\"); }\n+        }\n+    }\n+}"}, {"sha": "76243d3bcedb05d2a54bb1ef290b1efea5e41b79", "filename": "src/test/run-pass/aux/issue-15562.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-15562.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-15562.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-15562.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+extern {\n+    pub fn transmute();\n+}"}, {"sha": "b590160a0c2ab5d8c1c467660a26dbc4818081a8", "filename": "src/test/run-pass/aux/issue-16643.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-16643.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-16643.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-16643.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub struct TreeBuilder<H> { pub h: H }\n+\n+impl<H> TreeBuilder<H> {\n+    pub fn process_token(&mut self) {\n+        match self {\n+            _ => for _y in self.by_ref() {}\n+        }\n+    }\n+}\n+\n+impl<H> Iterator for TreeBuilder<H> {\n+    type Item = H;\n+\n+    fn next(&mut self) -> Option<H> {\n+        None\n+    }\n+}"}, {"sha": "fb55a077005eb8d9662a02f4e24f1b2f67900784", "filename": "src/test/run-pass/aux/issue-17662.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-17662.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-17662.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-17662.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Foo<'a, T> {\n+    fn foo(&'a self) -> T;\n+}\n+\n+pub fn foo<'a, T>(x: &'a Foo<'a, T>) -> T {\n+    let x: &'a Foo<T> = x;\n+    //            ^ the lifetime parameter of Foo is left to be inferred.\n+    x.foo()\n+    // ^ encoding this method call in metadata triggers an ICE.\n+}"}, {"sha": "373fc04217540d3d3ec3665ba6cbcc8310758cce", "filename": "src/test/run-pass/aux/issue-17718-aux.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-17718-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-17718-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-17718-aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_fn)]\n+\n+use std::sync::atomic;\n+\n+pub const C1: usize = 1;\n+pub const C2: atomic::AtomicUsize = atomic::AtomicUsize::new(0);\n+pub const C3: fn() = foo;\n+pub const C4: usize = C1 * C1 + C1 / C1;\n+pub const C5: &'static usize = &C4;\n+\n+pub static S1: usize = 3;\n+pub static S2: atomic::AtomicUsize = atomic::AtomicUsize::new(0);\n+\n+fn foo() {}"}, {"sha": "af3bc20378c393119dbafdc6c88dd2b3c9dce4fc", "filename": "src/test/run-pass/aux/issue-18501.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18501.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18501.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-18501.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+struct Foo;\n+\n+trait Tr {\n+    fn tr(&self);\n+}\n+\n+impl Tr for Foo {\n+    fn tr(&self) {}\n+}\n+\n+fn take_method<T>(f: fn(&T), t: &T) {}\n+\n+#[inline]\n+pub fn pass_method() {\n+    take_method(Tr::tr, &Foo);\n+}"}, {"sha": "2a5e07a32855efb26d999dd83a50ea67b2d1173b", "filename": "src/test/run-pass/aux/issue-18514.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18514.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18514.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-18514.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"rlib\"]\n+\n+pub trait Tr {\n+    fn tr(&self);\n+}\n+\n+pub struct St<V>(pub Vec<V>);\n+\n+impl<V> Tr for St<V> {\n+    fn tr(&self) {\n+        match self {\n+            &St(ref v) => {\n+                v.iter();\n+            }\n+        }\n+    }\n+}"}, {"sha": "a29dcc00cddf8ed0272758a9ea2bd8a45910ccdb", "filename": "src/test/run-pass/aux/issue-18711.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18711.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18711.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-18711.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(unboxed_closures)]\n+#![crate_type = \"rlib\"]\n+\n+pub fn inner<F>(f: F) -> F {\n+    (move || f)()\n+}"}, {"sha": "4315e27797f1eafb76e7e5f2da3e217d1a7bfd1e", "filename": "src/test/run-pass/aux/issue-18913-1.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![crate_name = \"foo\"]\n+\n+pub fn foo() -> i32 { 0 }"}, {"sha": "dcdeaec48f552936cb156534752350c781e6cffd", "filename": "src/test/run-pass/aux/issue-18913-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-18913-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![crate_name = \"foo\"]\n+\n+pub fn foo() -> i32 { 1 }"}, {"sha": "fc61b78d8a7eea983b004031246e47e04e68f5c5", "filename": "src/test/run-pass/aux/issue-19340-1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-19340-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-19340-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-19340-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub enum Homura {\n+    Madoka { name: String },\n+}"}, {"sha": "cfebc4abaaa6150d0c8689c82c5bb7368812b278", "filename": "src/test/run-pass/aux/issue-2380.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2380.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2380.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-2380.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"a\"]\n+#![crate_type = \"lib\"]\n+\n+#![allow(unknown_features)]\n+#![feature(box_syntax)]\n+\n+pub trait i<T>\n+{\n+    fn dummy(&self, t: T) -> T { panic!() }\n+}\n+\n+pub fn f<T>() -> Box<i<T>+'static> {\n+    impl<T> i<T> for () { }\n+\n+    box () as Box<i<T>+'static>\n+}"}, {"sha": "8c414193bd6281185efdc23fe0d02df9868aa693", "filename": "src/test/run-pass/aux/issue-2414-a.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"a\"]\n+#![crate_type = \"lib\"]\n+\n+type t1 = usize;\n+\n+trait foo {\n+    fn foo(&self);\n+}\n+\n+impl foo for String {\n+    fn foo(&self) {}\n+}"}, {"sha": "b1c95bcb4300fc1e23b97d9dffa6a5c381b99c66", "filename": "src/test/run-pass/aux/issue-2414-b.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-2414-b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+#![crate_name=\"b\"]\n+#![crate_type = \"lib\"]\n+\n+extern crate a;"}, {"sha": "1ec29501b763cddd8a1c1e2b24bc22a5785b61cc", "filename": "src/test/run-pass/aux/issue-25185-1.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![feature(linked_from)]\n+\n+#![crate_type = \"rlib\"]\n+\n+#[link(name = \"rust_test_helpers\", kind = \"static\")]\n+#[linked_from = \"rust_test_helpers\"]\n+extern {\n+    pub fn rust_dbg_extern_identity_u32(u: u32) -> u32;\n+}"}, {"sha": "00b5277d6c00e852e3682969f7c68c62e4cc4f60", "filename": "src/test/run-pass/aux/issue-25185-2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-25185-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate issue_25185_1;\n+\n+pub use issue_25185_1::rust_dbg_extern_identity_u32;"}, {"sha": "3d777d01d502733a3c8bd539faff6d8d011a30a0", "filename": "src/test/run-pass/aux/issue-2526.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-2526.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"issue_2526\"]\n+#![crate_type = \"lib\"]\n+\n+use std::marker;\n+\n+pub struct arc_destruct<T: Sync> {\n+    _data: isize,\n+    _marker: marker::PhantomData<T>\n+}\n+\n+impl<T: Sync> Drop for arc_destruct<T> {\n+    fn drop(&mut self) {}\n+}\n+\n+fn arc_destruct<T: Sync>(data: isize) -> arc_destruct<T> {\n+    arc_destruct {\n+        _data: data,\n+        _marker: marker::PhantomData\n+    }\n+}\n+\n+fn arc<T: Sync>(_data: T) -> arc_destruct<T> {\n+    arc_destruct(0)\n+}\n+\n+fn init() -> arc_destruct<context_res> {\n+    arc(context_res())\n+}\n+\n+pub struct context_res {\n+    ctx : isize,\n+}\n+\n+impl Drop for context_res {\n+    fn drop(&mut self) {}\n+}\n+\n+fn context_res() -> context_res {\n+    context_res {\n+        ctx: 0\n+    }\n+}\n+\n+pub type context = arc_destruct<context_res>;"}, {"sha": "e358cde15737dbbfb57fded1ac601ff1324f879a", "filename": "src/test/run-pass/aux/issue-25467.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25467.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-25467.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-25467.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub trait Trait {\n+    // the issue is sensitive to interning order - so use names\n+    // unlikely to appear in libstd.\n+    type Issue25467FooT;\n+    type Issue25467BarT;\n+}\n+\n+pub type Object = Option<Box<Trait<Issue25467FooT=(),Issue25467BarT=()>>>;"}, {"sha": "604a3e69a21767909233a369c61149385b64a07a", "filename": "src/test/run-pass/aux/issue-2631-a.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2631-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-2631-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-2631-a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"req\"]\n+#![crate_type = \"lib\"]\n+\n+use std::cell::RefCell;\n+use std::collections::HashMap;\n+use std::rc::Rc;\n+\n+pub type header_map = HashMap<String, Rc<RefCell<Vec<Rc<String>>>>>;\n+\n+// the unused ty param is necessary so this gets monomorphized\n+pub fn request<T>(req: &header_map) {\n+  let data = req[&\"METHOD\".to_string()].clone();\n+  let _x = data.borrow().clone()[0].clone();\n+}"}, {"sha": "825c449702154b9307ba718f2b56e6032456e7a4", "filename": "src/test/run-pass/aux/issue-29485.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-29485.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-29485.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-29485.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"a\"]\n+#![crate_type = \"lib\"]\n+\n+pub struct X(pub u8);\n+\n+impl Drop for X {\n+    fn drop(&mut self) {\n+        assert_eq!(self.0, 1)\n+    }\n+}\n+\n+pub fn f(x: &mut X, g: fn()) {\n+    x.0 = 1;\n+    g();\n+    x.0 = 0;\n+}"}, {"sha": "b6199f59ebe0638c9e82c3bc27ae0c129ac2104b", "filename": "src/test/run-pass/aux/issue-3012-1.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-3012-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-3012-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-3012-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"socketlib\"]\n+#![crate_type = \"lib\"]\n+#![feature(libc)]\n+\n+pub mod socket {\n+    extern crate libc;\n+\n+    pub struct socket_handle {\n+        sockfd: libc::c_int,\n+    }\n+\n+    impl Drop for socket_handle {\n+        fn drop(&mut self) {\n+            /* c::close(self.sockfd); */\n+        }\n+    }\n+\n+    pub fn socket_handle(x: libc::c_int) -> socket_handle {\n+        socket_handle {\n+            sockfd: x\n+        }\n+    }\n+}"}, {"sha": "50a31630df31897f0bca65d89af33f83ec2941b5", "filename": "src/test/run-pass/aux/issue-31702-1.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Copy)]\n+pub struct U256(pub [u64; 4]);\n+\n+impl Clone for U256 {\n+    fn clone(&self) -> U256 {\n+        *self\n+    }\n+}\n+\n+impl U256 {\n+    pub fn new(value: u64) -> U256 {\n+        let mut ret = [0; 4];\n+        ret[0] = value;\n+        U256(ret)\n+    }\n+}"}, {"sha": "c5b1bc6dfb08da2e08d18080a6c53dab1728b61c", "filename": "src/test/run-pass/aux/issue-31702-2.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-31702-2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -g\n+\n+extern crate issue_31702_1;\n+\n+use std::collections::HashMap;\n+use issue_31702_1::U256;\n+\n+pub struct Ethash {\n+    engine_params: for<'a> fn() -> Option<&'a Vec<u8>>,\n+    u256_params: HashMap<String, U256>,\n+}\n+\n+impl Ethash {\n+    pub fn u256_param(&mut self, name: &str) -> U256 {\n+        let engine = self.engine_params;\n+        *self.u256_params.entry(name.to_owned()).or_insert_with(|| {\n+            engine().map_or(U256::new(0u64), |_a| loop {})\n+        })\n+    }\n+}"}, {"sha": "a7c1633784d81cf813ff762534a03304ebed7368", "filename": "src/test/run-pass/aux/issue-4208-cc.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-4208-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-4208-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-4208-cc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"numeric\"]\n+#![crate_type = \"lib\"]\n+\n+pub trait Trig<T> {\n+    fn sin(&self) -> T;\n+}\n+\n+pub fn sin<T:Trig<R>, R>(theta: &T) -> R { theta.sin() }\n+\n+pub trait Angle<T>: Trig<T> {}"}, {"sha": "29feeaa7d92855e66553907614370018efcc3694", "filename": "src/test/run-pass/aux/issue-4545.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-4545.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-4545.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-4545.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct S<T>(Option<T>);\n+pub fn mk<T>() -> S<T> { S(None) }"}, {"sha": "cea227e050f836e76606c2fd8a20d584da9a4571", "filename": "src/test/run-pass/aux/issue-5518.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-5518.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-5518.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-5518.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait A<'a, T> {\n+    fn f(&mut self) -> &'a mut T;\n+    fn p() -> T;\n+}"}, {"sha": "82bd2b6420437f46357c755f7b47fd7a5da42802", "filename": "src/test/run-pass/aux/issue-5521.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-5521.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-5521.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-5521.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+use std::collections::HashMap;\n+\n+pub type map = Box<HashMap<usize, usize>>;"}, {"sha": "18b464bd924e9b8e8a579f8f1035619527040c34", "filename": "src/test/run-pass/aux/issue-7178.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-7178.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-7178.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-7178.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo<'a, A:'a>(&'a A);\n+\n+impl<'a, A> Foo<'a, A> {\n+    pub fn new(a: &'a A) -> Foo<'a, A> {\n+        Foo(a)\n+    }\n+}"}, {"sha": "e197e84442b10d23b7585f61d06ebfe2594ce2de", "filename": "src/test/run-pass/aux/issue-7899.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-7899.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-7899.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-7899.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct V2<T>(pub T, pub T);"}, {"sha": "8f328699ae0aadb7aaefac767b1d24aaa6baf49e", "filename": "src/test/run-pass/aux/issue-8044.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-8044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-8044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-8044.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct BTree<V> {\n+    pub node: TreeItem<V>,\n+}\n+\n+pub enum TreeItem<V> {\n+    TreeLeaf { value: V },\n+}\n+\n+pub fn leaf<V>(value: V) -> TreeItem<V> {\n+    TreeItem::TreeLeaf { value: value }\n+}\n+\n+fn main() {\n+    BTree::<isize> { node: leaf(1) };\n+}"}, {"sha": "91167e8e32b14db41e4181ad5c7f9dcb8cee6d1c", "filename": "src/test/run-pass/aux/issue-8259.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-8259.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub enum Foo<'a> {\n+    A,\n+    B(&'a str),\n+}"}, {"sha": "5eb48985bf90d82b4780fe924c6c2562f664edd1", "filename": "src/test/run-pass/aux/issue-9906.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-9906.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-9906.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-9906.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use other::FooBar;\n+pub use other::foo;\n+\n+mod other {\n+    pub struct FooBar{value: isize}\n+    impl FooBar{\n+        pub fn new(val: isize) -> FooBar {\n+            FooBar{value: val}\n+        }\n+    }\n+\n+    pub fn foo(){\n+        1+1;\n+    }\n+}"}, {"sha": "d04d761e112560250daea6293025e02eb8863201", "filename": "src/test/run-pass/aux/issue-9968.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-9968.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue-9968.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue-9968.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use internal::core::{Trait, Struct};\n+\n+mod internal {\n+    pub mod core {\n+        pub struct Struct;\n+        impl Struct {\n+            pub fn init() -> Struct {\n+                Struct\n+            }\n+        }\n+\n+        pub trait Trait {\n+            fn test(&self) {\n+                private();\n+            }\n+        }\n+\n+        impl Trait for Struct {}\n+\n+        fn private() { }\n+    }\n+}"}, {"sha": "4cb846b51868fc9d62ded630170e5a3e62d817af", "filename": "src/test/run-pass/aux/issue13507.rs", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue13507.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue13507.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue13507.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,99 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(core)]\n+\n+pub mod testtypes {\n+    use std::any::TypeId;\n+\n+    pub fn type_ids() -> Vec<TypeId> {\n+        vec![\n+            TypeId::of::<FooBool>(),\n+            TypeId::of::<FooInt>(),\n+            TypeId::of::<FooUint>(),\n+            TypeId::of::<FooFloat>(),\n+            TypeId::of::<FooStr>(),\n+            TypeId::of::<FooArray>(),\n+            TypeId::of::<FooSlice>(),\n+            TypeId::of::<FooBox>(),\n+            TypeId::of::<FooPtr>(),\n+            TypeId::of::<FooRef>(),\n+            TypeId::of::<FooFnPtr>(),\n+            TypeId::of::<FooNil>(),\n+            TypeId::of::<FooTuple>(),\n+            TypeId::of::<FooTrait>(),\n+            TypeId::of::<FooStruct>(),\n+            TypeId::of::<FooEnum>()\n+        ]\n+    }\n+\n+    // Tests TyBool\n+    pub type FooBool = bool;\n+\n+    // Tests TyChar\n+    pub type FooChar = char;\n+\n+    // Tests TyInt (does not test all variants of IntTy)\n+    pub type FooInt = isize;\n+\n+    // Tests TyUint (does not test all variants of UintTy)\n+    pub type FooUint = usize;\n+\n+    // Tests TyFloat (does not test all variants of FloatTy)\n+    pub type FooFloat = f64;\n+\n+    // Tests TyStr\n+    pub type FooStr = str;\n+\n+    // Tests TyArray\n+    pub type FooArray = [u8; 1];\n+\n+    // Tests TySlice\n+    pub type FooSlice = [u8];\n+\n+    // Tests TyBox (of u8)\n+    pub type FooBox = Box<u8>;\n+\n+    // Tests TyRawPtr\n+    pub type FooPtr = *const u8;\n+\n+    // Tests TyRef\n+    pub type FooRef = &'static u8;\n+\n+    // Tests TyFnPtr\n+    pub type FooFnPtr = fn(u8) -> bool;\n+\n+    // Tests TyTrait\n+    pub trait FooTrait {\n+        fn foo_method(&self) -> usize;\n+    }\n+\n+    // Tests TyStruct\n+    pub struct FooStruct {\n+        pub pub_foo_field: usize,\n+        foo_field: usize\n+    }\n+\n+    // Tests TyEnum\n+    pub enum FooEnum {\n+        VarA(usize),\n+        VarB(usize, usize)\n+    }\n+\n+    // Tests TyTuple\n+    pub type FooNil = ();\n+    pub type FooTuple = (u8, i8, bool);\n+\n+    // Skipping TyParam\n+\n+    // Skipping TyInfer\n+\n+    // Skipping TyError\n+}"}, {"sha": "b311ee35674672fe5f22f323ddf98a5c0b2bed7a", "filename": "src/test/run-pass/aux/issue2170lib.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue2170lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue2170lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue2170lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn foo(_x: i32) {\n+}\n+\n+pub struct rsrc {\n+  x: i32,\n+}\n+\n+impl Drop for rsrc {\n+    fn drop(&mut self) {\n+        foo(self.x);\n+    }\n+}\n+\n+pub fn rsrc(x: i32) -> rsrc {\n+    rsrc {\n+        x: x\n+    }\n+}"}, {"sha": "f0f1af2e3a3da9478255989cfede9ecbc0fc9ba1", "filename": "src/test/run-pass/aux/issue_10031_aux.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_10031_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_10031_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_10031_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Wrap<A>(pub A);"}, {"sha": "a0234c1185a9789f8e449952538dba150886f0fa", "filename": "src/test/run-pass/aux/issue_12612_1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod bar {\n+    pub fn foo() {}\n+}"}, {"sha": "b4ae4374b2e58001196decbb9e3cc814eb30f5f8", "filename": "src/test/run-pass/aux/issue_12612_2.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_12612_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn baz() {}"}, {"sha": "12894ad72e1a4cea4f5d4a4ce1a91d576f0f97e3", "filename": "src/test/run-pass/aux/issue_19293.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_19293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_19293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_19293.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo (pub isize);\n+pub enum MyEnum {\n+    Foo(Foo),\n+}"}, {"sha": "4ce7e3079e330a0a82f8b445076d55bf51ff4c92", "filename": "src/test/run-pass/aux/issue_20389.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_20389.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_20389.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_20389.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait T {\n+    type C;\n+    fn dummy(&self) { }\n+}"}, {"sha": "6bd1e7335ad3a319ebe9a1c66f29abced38b59bf", "filename": "src/test/run-pass/aux/issue_2316_a.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum cat {\n+  tabby, calico, tortoiseshell\n+}"}, {"sha": "8a212f6e5a9c5050b055fa29cd6fd0cd9e87f992", "filename": "src/test/run-pass/aux/issue_2316_b.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_2316_b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(unused_imports)]\n+\n+extern crate issue_2316_a;\n+\n+pub mod cloth {\n+    use issue_2316_a::*;\n+\n+    pub enum fabric {\n+        gingham, flannel, calico\n+    }\n+}"}, {"sha": "5f55476427fe2fd7bdfeed380210e33a26353f03", "filename": "src/test/run-pass/aux/issue_2472_b.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2472_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2472_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_2472_b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub struct S(pub ());\n+\n+impl S {\n+    pub fn foo(&self) { }\n+}\n+\n+pub trait T {\n+    fn bar(&self);\n+}\n+\n+impl T for S {\n+    fn bar(&self) { }\n+}"}, {"sha": "44bea136a7c3b3468d2653199572f214fb78e191", "filename": "src/test/run-pass/aux/issue_2723_a.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2723_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_2723_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_2723_a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub unsafe fn f(xs: Vec<isize> ) {\n+    xs.iter().map(|_x| { unsafe fn q() { panic!(); } }).collect::<Vec<()>>();\n+}"}, {"sha": "320e0ceed0f461e089bcb370e4080756f5b71394", "filename": "src/test/run-pass/aux/issue_3136_a.rc", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rc", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rc?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub mod issue_3136_a;"}, {"sha": "55de208cc905a002cc9f8cde6bb63651e3d93545", "filename": "src/test/run-pass/aux/issue_3136_a.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_3136_a.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait x {\n+    fn use_x<T>(&self);\n+}\n+struct y(());\n+impl x for y {\n+    fn use_x<T>(&self) {\n+        struct foo { //~ ERROR quux\n+            i: ()\n+        }\n+        fn new_foo<T>(i: ()) -> foo {\n+            foo { i: i }\n+        }\n+    }\n+}"}, {"sha": "5c306be69c42935cb656df5484c5a94f7b18411f", "filename": "src/test/run-pass/aux/issue_3979_traits.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3979_traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_3979_traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_3979_traits.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"issue_3979_traits\"]\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait Positioned {\n+  fn SetX(&mut self, isize);\n+  fn X(&self) -> isize;\n+}\n+\n+pub trait Movable: Positioned {\n+  fn translate(&mut self, dx: isize) {\n+    let x = self.X() + dx;\n+    self.SetX(x);\n+  }\n+}"}, {"sha": "40e01c1474a60cea9a88a240335a72d9c96d70fa", "filename": "src/test/run-pass/aux/issue_8401.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_8401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_8401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_8401.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// for this issue, this code must be built in a library\n+\n+use std::mem;\n+\n+trait A {\n+    fn dummy(&self) { }\n+}\n+struct B;\n+impl A for B {}\n+\n+fn bar<T>(_: &mut A, _: &T) {}\n+\n+fn foo<T>(t: &T) {\n+    let mut b = B;\n+    bar(&mut b as &mut A, t)\n+}"}, {"sha": "8c2546e76cfd4675eda28c4f2988955d3da15586", "filename": "src/test/run-pass/aux/issue_9123.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_9123.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+pub trait X {\n+    fn x() {\n+        fn f() { }\n+        f();\n+    }\n+    fn dummy(&self) { }\n+}"}, {"sha": "486eb8fd6f6b8b1c1178babe3f78f658818b2c86", "filename": "src/test/run-pass/aux/issue_9155.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_9155.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo<T>(T);\n+\n+impl<T> Foo<T> {\n+    pub fn new(t: T) -> Foo<T> {\n+        Foo(t)\n+    }\n+}"}, {"sha": "8ff85cc359d4f7bd3499daae67e7a831eef39a6d", "filename": "src/test/run-pass/aux/issue_9188.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fissue_9188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fissue_9188.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn foo<T>() -> &'static isize {\n+    if false {\n+        static a: isize = 4;\n+        return &a;\n+    } else {\n+        static a: isize = 5;\n+        return &a;\n+    }\n+}\n+\n+pub fn bar() -> &'static isize {\n+    foo::<isize>()\n+}"}, {"sha": "82f182c04bd3899f716a96867e3a5da393c1dba3", "filename": "src/test/run-pass/aux/kinds_in_metadata.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fkinds_in_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fkinds_in_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fkinds_in_metadata.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/* Any copyright is dedicated to the Public Domain.\n+ * http://creativecommons.org/publicdomain/zero/1.0/ */\n+\n+// Tests that metadata serialization works for the `Copy` kind.\n+\n+#![crate_type=\"lib\"]\n+\n+pub fn f<T:Copy>() {}"}, {"sha": "ca4046d81636a2a1bc9e1749f99432ee28b9c2ce", "filename": "src/test/run-pass/aux/linkage1.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Flinkage1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Flinkage1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Flinkage1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle]\n+pub static foo: isize = 3;\n+\n+pub fn bar() {}"}, {"sha": "4f55ac4f65fd48ee9e56f8164fc8b73dcba93419", "filename": "src/test/run-pass/aux/macro_crate_def_only.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_def_only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_def_only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_def_only.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[macro_export]\n+macro_rules! make_a_5 {\n+    () => (5)\n+}"}, {"sha": "4f75e2b5d75651e05095f0fa6d2b0046c297363d", "filename": "src/test/run-pass/aux/macro_crate_nonterminal.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_crate_nonterminal.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn increment(x: usize) -> usize {\n+    x + 1\n+}\n+\n+#[macro_export]\n+macro_rules! increment {\n+    ($x:expr) => ($crate::increment($x))\n+}\n+\n+pub fn check_local() {\n+    assert_eq!(increment!(3), 4);\n+}"}, {"sha": "84e944f69b98ee406dfec98baea4aaf10a1db92d", "filename": "src/test/run-pass/aux/macro_export_inner_module.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_export_inner_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_export_inner_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_export_inner_module.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod inner {\n+    #[macro_export]\n+    macro_rules! foo {\n+        () => (1)\n+    }\n+}"}, {"sha": "aaeccc6e89883865bdbdb5607523f9d6ce369f0c", "filename": "src/test/run-pass/aux/macro_reexport_1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#[macro_export]\n+macro_rules! reexported {\n+    () => ( 3 )\n+}"}, {"sha": "3918be88d867684e1d27b1a3eee7248da595e024", "filename": "src/test/run-pass/aux/macro_reexport_2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#![feature(macro_reexport)]\n+\n+#[macro_reexport(reexported)]\n+#[macro_use] #[no_link]\n+extern crate macro_reexport_1;"}, {"sha": "1d3dc26b0b4cb6beb04a03699bac8ec8709f0e54", "filename": "src/test/run-pass/aux/macro_reexport_2_no_use.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2_no_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2_no_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_reexport_2_no_use.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"dylib\"]\n+#![feature(macro_reexport)]\n+\n+#[macro_reexport(reexported)]\n+#[no_link]\n+extern crate macro_reexport_1;"}, {"sha": "fd2e52bb35503f13ac538a66f7cd6827b15db506", "filename": "src/test/run-pass/aux/macro_with_super_1.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_with_super_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmacro_with_super_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmacro_with_super_1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#[macro_export]\n+macro_rules! declare {\n+    () => (\n+        pub fn aaa() {}\n+\n+        pub mod bbb {\n+            use super::aaa;\n+\n+            pub fn ccc() {\n+                aaa();\n+            }\n+        }\n+    )\n+}"}, {"sha": "348b71faf0cdbd39632ff5ab9c98a677571b6d6c", "filename": "src/test/run-pass/aux/method_self_arg1.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#![allow(unknown_features)]\n+#![feature(box_syntax)]\n+\n+static mut COUNT: u64 = 1;\n+\n+pub fn get_count() -> u64 { unsafe { COUNT } }\n+\n+#[derive(Copy, Clone)]\n+pub struct Foo;\n+\n+impl Foo {\n+    pub fn foo(self, x: &Foo) {\n+        unsafe { COUNT *= 2; }\n+        // Test internal call.\n+        Foo::bar(&self);\n+        Foo::bar(x);\n+\n+        Foo::baz(self);\n+        Foo::baz(*x);\n+\n+        Foo::qux(box self);\n+        Foo::qux(box *x);\n+    }\n+\n+    pub fn bar(&self) {\n+        unsafe { COUNT *= 3; }\n+    }\n+\n+    pub fn baz(self) {\n+        unsafe { COUNT *= 5; }\n+    }\n+\n+    pub fn qux(self: Box<Foo>) {\n+        unsafe { COUNT *= 7; }\n+    }\n+}"}, {"sha": "b67ec1b9bfc655e8014e923abbacc7f28d0df50d", "filename": "src/test/run-pass/aux/method_self_arg2.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmethod_self_arg2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,65 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type = \"lib\"]\n+\n+#![allow(unknown_features)]\n+#![feature(box_syntax)]\n+\n+static mut COUNT: u64 = 1;\n+\n+pub fn get_count() -> u64 { unsafe { COUNT } }\n+\n+#[derive(Copy, Clone)]\n+pub struct Foo;\n+\n+impl Foo {\n+    pub fn run_trait(self) {\n+        unsafe { COUNT *= 17; }\n+        // Test internal call.\n+        Bar::foo1(&self);\n+        Bar::foo2(self);\n+        Bar::foo3(box self);\n+\n+        Bar::bar1(&self);\n+        Bar::bar2(self);\n+        Bar::bar3(box self);\n+    }\n+}\n+\n+pub trait Bar : Sized {\n+    fn foo1(&self);\n+    fn foo2(self);\n+    fn foo3(self: Box<Self>);\n+\n+    fn bar1(&self) {\n+        unsafe { COUNT *= 7; }\n+    }\n+    fn bar2(self) {\n+        unsafe { COUNT *= 11; }\n+    }\n+    fn bar3(self: Box<Self>) {\n+        unsafe { COUNT *= 13; }\n+    }\n+}\n+\n+impl Bar for Foo {\n+    fn foo1(&self) {\n+        unsafe { COUNT *= 2; }\n+    }\n+\n+    fn foo2(self) {\n+        unsafe { COUNT *= 3; }\n+    }\n+\n+    fn foo3(self: Box<Foo>) {\n+        unsafe { COUNT *= 5; }\n+    }\n+}"}, {"sha": "4cad98004d7e46563064ac716a2020289261461c", "filename": "src/test/run-pass/aux/mir_external_refs.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmir_external_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmir_external_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmir_external_refs.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub struct S(pub u8);\n+\n+impl S {\n+    pub fn hey() -> u8 { 24 }\n+}\n+\n+pub trait X {\n+    fn hoy(&self) -> u8 { 25 }\n+}\n+\n+impl X for S {}\n+\n+pub enum E {\n+    U(u8)\n+}\n+\n+pub fn regular_fn() -> u8 { 12 }"}, {"sha": "f95be3f4a1d057def76337564ffd0e2f876c653f", "filename": "src/test/run-pass/aux/moves_based_on_type_lib.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmoves_based_on_type_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmoves_based_on_type_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmoves_based_on_type_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub struct S {\n+    x: isize,\n+}\n+\n+impl Drop for S {\n+    fn drop(&mut self) {\n+        println!(\"goodbye\");\n+    }\n+}\n+\n+pub fn f() {\n+    let x = S { x: 1 };\n+    let y = x;\n+    let _z = y;\n+}"}, {"sha": "71fb9a519489b0bee1f3c3d68a430dab2ce7a85f", "filename": "src/test/run-pass/aux/msvc-data-only-lib.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmsvc-data-only-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fmsvc-data-only-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fmsvc-data-only-lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+\n+pub static FOO: i32 = 42;"}, {"sha": "b7bde4a74a553b05c13e38788fdcf94a4db24e7c", "filename": "src/test/run-pass/aux/namespaced_enum_emulate_flat.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enum_emulate_flat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enum_emulate_flat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enum_emulate_flat.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use Foo::*;\n+\n+pub enum Foo {\n+    A,\n+    B(isize),\n+    C { a: isize },\n+}\n+\n+impl Foo {\n+    pub fn foo() {}\n+}\n+\n+pub mod nest {\n+    pub use self::Bar::*;\n+\n+    pub enum Bar {\n+        D,\n+        E(isize),\n+        F { a: isize },\n+    }\n+\n+    impl Bar {\n+        pub fn foo() {}\n+    }\n+}"}, {"sha": "3bf39b788db6e1e2b6b8c3f9728c1485916cb5ad", "filename": "src/test/run-pass/aux/namespaced_enums.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fnamespaced_enums.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub enum Foo {\n+    A,\n+    B(isize),\n+    C { a: isize },\n+}\n+\n+impl Foo {\n+    pub fn foo() {}\n+    pub fn bar(&self) {}\n+}"}, {"sha": "63639c4cdb3c921eafff3fde33a11bbc7aca58d1", "filename": "src/test/run-pass/aux/nested_item.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnested_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnested_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fnested_item.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// original problem\n+pub fn foo<T>() -> isize {\n+    {\n+        static foo: isize = 2;\n+        foo\n+    }\n+}\n+\n+// issue 8134\n+struct Foo;\n+impl Foo {\n+    pub fn foo<T>(&self) {\n+        static X: usize = 1;\n+    }\n+}\n+\n+// issue 8134\n+pub struct Parser<T>(T);\n+impl<T: std::iter::Iterator<Item=char>> Parser<T> {\n+    fn in_doctype(&mut self) {\n+        static DOCTYPEPattern: [char; 6] = ['O', 'C', 'T', 'Y', 'P', 'E'];\n+    }\n+}\n+\n+struct Bar;\n+impl Foo {\n+    pub fn bar<T>(&self) {\n+        static X: usize = 1;\n+    }\n+}"}, {"sha": "be3414b7ad2c0ab39be4334b3634cc887dda9e89", "filename": "src/test/run-pass/aux/newtype_struct_xc.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnewtype_struct_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fnewtype_struct_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fnewtype_struct_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub struct Au(pub isize);"}, {"sha": "3c8cba13ae73d07296407009850cd94adca716ed", "filename": "src/test/run-pass/aux/overloaded_autoderef_xc.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Foverloaded_autoderef_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Foverloaded_autoderef_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Foverloaded_autoderef_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,40 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::Deref;\n+\n+struct DerefWithHelper<H, T> {\n+    pub helper: H,\n+    pub value: Option<T>\n+}\n+\n+trait Helper<T> {\n+    fn helper_borrow(&self) -> &T;\n+}\n+\n+impl<T> Helper<T> for Option<T> {\n+    fn helper_borrow(&self) -> &T {\n+        self.as_ref().unwrap()\n+    }\n+}\n+\n+impl<T, H: Helper<T>> Deref for DerefWithHelper<H, T> {\n+    type Target = T;\n+\n+    fn deref(&self) -> &T {\n+        self.helper.helper_borrow()\n+    }\n+}\n+\n+// Test cross-crate autoderef + vtable.\n+pub fn check<T: PartialEq>(x: T, y: T) -> bool {\n+    let d: DerefWithHelper<Option<T>, T> = DerefWithHelper { helper: Some(x), value: None };\n+    d.eq(&y)\n+}"}, {"sha": "86f5f93e3cf08d56745114631b2abb4251c46a2c", "filename": "src/test/run-pass/aux/packed.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fpacked.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[repr(packed)]\n+pub struct S {\n+    a: u8,\n+    b: u32\n+}"}, {"sha": "19cdede5518a4e620f162c7482694f6b45ab9a38", "filename": "src/test/run-pass/aux/priv-impl-prim-ty.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpriv-impl-prim-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpriv-impl-prim-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fpriv-impl-prim-ty.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait A {\n+    fn frob(&self);\n+}\n+\n+impl A for isize { fn frob(&self) {} }\n+\n+pub fn frob<T:A>(t: T) {\n+    t.frob();\n+}"}, {"sha": "fd97f210a551419d954808670eafc1509ed0a91e", "filename": "src/test/run-pass/aux/privacy_reexport.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fprivacy_reexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fprivacy_reexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fprivacy_reexport.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub extern crate core;\n+pub use foo as bar;\n+\n+pub mod foo {\n+    pub fn frob() {}\n+}"}, {"sha": "e4890f4fe2d8722b16cfd9f6f2ed4aaf314594c7", "filename": "src/test/run-pass/aux/pub_use_mods_xcrate.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_mods_xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_mods_xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_mods_xcrate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod a {\n+    pub use a::b::c;\n+\n+    pub mod b {\n+        pub mod c {\n+            fn f(){}\n+            fn g(){}\n+        }\n+    }\n+}"}, {"sha": "41aafd64cb3f488fd8f9f514e83054420c86f3b9", "filename": "src/test/run-pass/aux/pub_use_xcrate1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate1.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo {\n+    pub name: isize\n+}"}, {"sha": "d59d7f2a6136c87b6b489a93215776d9f3f833b2", "filename": "src/test/run-pass/aux/pub_use_xcrate2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fpub_use_xcrate2.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate pub_use_xcrate1;\n+\n+pub use pub_use_xcrate1::Foo;"}, {"sha": "7ec2bb9394cc3724c2eb17e3b1420dc8a52d8fb6", "filename": "src/test/run-pass/aux/reachable-unnameable-items.rs", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freachable-unnameable-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freachable-unnameable-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Freachable-unnameable-items.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,116 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use inner_private_module::*;\n+\n+mod inner_private_module {\n+    pub struct Unnameable1;\n+    pub struct Unnameable2;\n+    #[derive(Clone, Copy)]\n+    pub struct Unnameable3;\n+    pub struct Unnameable4;\n+    pub struct Unnameable5;\n+    pub struct Unnameable6;\n+    pub struct Unnameable7;\n+    #[derive(Default)]\n+    pub struct Unnameable8;\n+    pub enum UnnameableEnum {\n+        NameableVariant\n+    }\n+    pub trait UnnameableTrait {\n+        type Alias: Default;\n+    }\n+\n+    impl Unnameable1 {\n+        pub fn method_of_unnameable_type1(&self) -> &'static str {\n+            \"Hello1\"\n+        }\n+    }\n+    impl Unnameable2 {\n+        pub fn method_of_unnameable_type2(&self) -> &'static str {\n+            \"Hello2\"\n+        }\n+    }\n+    impl Unnameable3 {\n+        pub fn method_of_unnameable_type3(&self) -> &'static str {\n+            \"Hello3\"\n+        }\n+    }\n+    impl Unnameable4 {\n+        pub fn method_of_unnameable_type4(&self) -> &'static str {\n+            \"Hello4\"\n+        }\n+    }\n+    impl Unnameable5 {\n+        pub fn method_of_unnameable_type5(&self) -> &'static str {\n+            \"Hello5\"\n+        }\n+    }\n+    impl Unnameable6 {\n+        pub fn method_of_unnameable_type6(&self) -> &'static str {\n+            \"Hello6\"\n+        }\n+    }\n+    impl Unnameable7 {\n+        pub fn method_of_unnameable_type7(&self) -> &'static str {\n+            \"Hello7\"\n+        }\n+    }\n+    impl Unnameable8 {\n+        pub fn method_of_unnameable_type8(&self) -> &'static str {\n+            \"Hello8\"\n+        }\n+    }\n+    impl UnnameableEnum {\n+        pub fn method_of_unnameable_enum(&self) -> &'static str {\n+            \"HelloEnum\"\n+        }\n+    }\n+}\n+\n+pub fn function_returning_unnameable_type() -> Unnameable1 {\n+    Unnameable1\n+}\n+\n+pub const CONSTANT_OF_UNNAMEABLE_TYPE: Unnameable2 =\n+                                            Unnameable2;\n+\n+pub fn function_accepting_unnameable_type(_: Option<Unnameable3>) {}\n+\n+pub type AliasOfUnnameableType = Unnameable4;\n+\n+impl Unnameable1 {\n+    pub fn inherent_method_returning_unnameable_type(&self) -> Unnameable5 {\n+        Unnameable5\n+    }\n+}\n+\n+pub trait Tr {\n+    fn trait_method_returning_unnameable_type(&self) -> Unnameable6 {\n+        Unnameable6\n+    }\n+}\n+impl Tr for Unnameable1 {}\n+\n+pub use inner_private_module::UnnameableEnum::NameableVariant;\n+\n+pub struct Struct {\n+    pub field_of_unnameable_type: Unnameable7\n+}\n+\n+pub static STATIC: Struct = Struct { field_of_unnameable_type: Unnameable7 } ;\n+\n+impl UnnameableTrait for AliasOfUnnameableType {\n+    type Alias = Unnameable8;\n+}\n+\n+pub fn generic_function<T: UnnameableTrait>() -> T::Alias {\n+    Default::default()\n+}"}, {"sha": "9d5464e652651194c9c72d2a23af9dbafee9ca8c", "filename": "src/test/run-pass/aux/reexport-should-still-link.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freexport-should-still-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freexport-should-still-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Freexport-should-still-link.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use foo::bar;\n+\n+mod foo {\n+    pub fn bar() {}\n+}"}, {"sha": "cc4db1a9581698afb6790a3c631ca645b8421668", "filename": "src/test/run-pass/aux/reexported_static_methods.rs", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freexported_static_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Freexported_static_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Freexported_static_methods.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub use sub_foo::Foo;\n+pub use self::Bar as Baz;\n+pub use sub_foo::Boz;\n+pub use sub_foo::Bort;\n+\n+pub trait Bar {\n+    fn bar() -> Self;\n+}\n+\n+impl Bar for isize {\n+    fn bar() -> isize { 84 }\n+}\n+\n+pub mod sub_foo {\n+    pub trait Foo {\n+        fn foo() -> Self;\n+    }\n+\n+    impl Foo for isize {\n+        fn foo() -> isize { 42 }\n+    }\n+\n+    pub struct Boz {\n+        unused_str: String\n+    }\n+\n+    impl Boz {\n+        pub fn boz(i: isize) -> bool {\n+            i > 0\n+        }\n+    }\n+\n+    pub enum Bort {\n+        Bort1,\n+        Bort2\n+    }\n+\n+    impl Bort {\n+        pub fn bort() -> String {\n+            \"bort()\".to_string()\n+        }\n+    }\n+}"}, {"sha": "72f1f73a81b81b81fbcbaf4c09feb1670b8300d0", "filename": "src/test/run-pass/aux/sepcomp-extern-lib.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp-extern-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp-extern-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp-extern-lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[no_mangle]\n+pub extern \"C\" fn foo() -> usize {\n+    1234\n+}"}, {"sha": "c57d161d8f574b7016dc21fa6c0520248340d1eb", "filename": "src/test/run-pass/aux/sepcomp_cci_lib.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_cci_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_cci_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_cci_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[inline]\n+pub fn cci_fn() -> usize {\n+    1200\n+}\n+\n+pub const CCI_CONST: usize = 34;"}, {"sha": "9aa16fb2694574c9f373d61fed16ece770d409db", "filename": "src/test/run-pass/aux/sepcomp_lib.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsepcomp_lib.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=3 --crate-type=rlib,dylib\n+\n+pub mod a {\n+    pub fn one() -> usize {\n+        1\n+    }\n+}\n+\n+pub mod b {\n+    pub fn two() -> usize {\n+        2\n+    }\n+}\n+\n+pub mod c {\n+    use a::one;\n+    use b::two;\n+    pub fn three() -> usize {\n+        one() + two()\n+    }\n+}"}, {"sha": "2ccdb4e086447f642b43c9f8debcece691047524", "filename": "src/test/run-pass/aux/static-function-pointer-aux.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic-function-pointer-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic-function-pointer-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstatic-function-pointer-aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub fn f(x: isize) -> isize { -x }\n+\n+pub static F: fn(isize) -> isize = f;\n+pub static mut MutF: fn(isize) -> isize = f;"}, {"sha": "b8fd59bf7037df002c7fd0131cfa3d51261933cd", "filename": "src/test/run-pass/aux/static-methods-crate.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic-methods-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic-methods-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstatic-methods-crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"static_methods_crate\"]\n+#![crate_type = \"lib\"]\n+\n+pub trait read: Sized {\n+    fn readMaybe(s: String) -> Option<Self>;\n+}\n+\n+impl read for isize {\n+    fn readMaybe(s: String) -> Option<isize> {\n+        s.parse().ok()\n+    }\n+}\n+\n+impl read for bool {\n+    fn readMaybe(s: String) -> Option<bool> {\n+        match &*s {\n+          \"true\" => Some(true),\n+          \"false\" => Some(false),\n+          _ => None\n+        }\n+    }\n+}\n+\n+pub fn read<T:read>(s: String) -> T {\n+    match read::readMaybe(s) {\n+      Some(x) => x,\n+      _ => panic!(\"read panicked!\")\n+    }\n+}"}, {"sha": "2193e12bceb2816fd2073e1689abdb78430444da", "filename": "src/test/run-pass/aux/static_fn_inline_xc_aux.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_inline_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_inline_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_inline_xc_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+pub mod num {\n+    pub trait Num2 {\n+        fn from_int2(n: isize) -> Self;\n+    }\n+}\n+\n+pub mod f64 {\n+    impl ::num::Num2 for f64 {\n+        #[inline]\n+        fn from_int2(n: isize) -> f64 { return n as f64;  }\n+    }\n+}"}, {"sha": "44e875fbe3c0519a7fa0f42532a234db3f825842", "filename": "src/test/run-pass/aux/static_fn_trait_xc_aux.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_trait_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_trait_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstatic_fn_trait_xc_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub mod num {\n+    pub trait Num2 {\n+        fn from_int2(n: isize) -> Self;\n+    }\n+}\n+\n+pub mod f64 {\n+    impl ::num::Num2 for f64 {\n+        fn from_int2(n: isize) -> f64 { return n as f64;  }\n+    }\n+}"}, {"sha": "9d677e3dc46071255caabb08793bfd8a6dc524df", "filename": "src/test/run-pass/aux/static_mut_xc.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_mut_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstatic_mut_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstatic_mut_xc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub static mut a: isize = 3;"}, {"sha": "26941b726d4c04425405ff299a0557cf8d8cd5c7", "filename": "src/test/run-pass/aux/struct_destructuring_cross_crate.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstruct_destructuring_cross_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstruct_destructuring_cross_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstruct_destructuring_cross_crate.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_type=\"lib\"]\n+\n+pub struct S {\n+    pub x: isize,\n+    pub y: isize,\n+}"}, {"sha": "201f028b6b658acc981dbb5eca0f04ac44f75854", "filename": "src/test/run-pass/aux/struct_variant_xc_aux.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstruct_variant_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fstruct_variant_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fstruct_variant_xc_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name=\"struct_variant_xc_aux\"]\n+#![crate_type = \"lib\"]\n+\n+#[derive(Copy, Clone)]\n+pub enum Enum {\n+    Variant(u8),\n+    StructVariant { arg: u8 }\n+}"}, {"sha": "31a97f695f06cdbfcf20cd27edf87cb961020bb0", "filename": "src/test/run-pass/aux/svh-a-base.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-base.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "22e40822eecfc8b52055dbeece2d9b99e58e88e4", "filename": "src/test/run-pass/aux/svh-a-comment.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-comment.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    // a comment does not affect the svh\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "3d8a728967a4a64bcc274b11818dedc1690d5a2f", "filename": "src/test/run-pass/aux/svh-a-doc.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-doc.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+// Adding some documentation does not affect the svh.\n+\n+/// foo always returns three.\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "41d7eb7b18645f3ee181fee3406ec62aaea899fd", "filename": "src/test/run-pass/aux/svh-a-macro.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-macro.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    // a macro invocation in a function body does not affect the svh,\n+    // as long as it yields the same code.\n+    three!()\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "31a97f695f06cdbfcf20cd27edf87cb961020bb0", "filename": "src/test/run-pass/aux/svh-a-no-change.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-no-change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-no-change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-no-change.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "e405c337abe4aeb7ef7214625a275c5fc4931b75", "filename": "src/test/run-pass/aux/svh-a-redundant-cfg.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-redundant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-redundant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-redundant-cfg.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+// cfg attribute does not affect the svh, as long as it yields the same code.\n+#[cfg(not(an_unused_name))]\n+pub fn foo<T:U>(_: isize) -> isize {\n+    3\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "9ef788c98427392bfa95bf1156149d7df9a99232", "filename": "src/test/run-pass/aux/svh-a-whitespace.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-whitespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-whitespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-a-whitespace.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! The `svh-a-*.rs` files are all deviations from the base file\n+//! svh-a-base.rs with some difference (usually in `fn foo`) that\n+//! should not affect the strict version hash (SVH) computation\n+//! (#14132).\n+\n+#![crate_name = \"a\"]\n+\n+macro_rules! three {\n+    () => { 3 }\n+}\n+\n+pub trait U {}\n+pub trait V {}\n+impl U for () {}\n+impl V for () {}\n+\n+static A_CONSTANT : isize = 2;\n+\n+pub fn foo<T:U>(_: isize) -> isize {\n+\n+    3\n+\n+}\n+\n+pub fn an_unused_name() -> isize {\n+    4\n+}"}, {"sha": "b8946fdc99553bbfbfa4fdc908e25a16cbd67dd2", "filename": "src/test/run-pass/aux/svh-b.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fsvh-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fsvh-b.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! This is a client of the `a` crate defined in \"svn-a-base.rs\".  The\n+//! rpass and cfail tests (such as \"run-pass/svh-add-comment.rs\") use\n+//! it by swapping in a different object code library crate built from\n+//! some variant of \"svn-a-base.rs\", and then we are checking if the\n+//! compiler properly ignores or accepts the change, based on whether\n+//! the change could affect the downstream crate content or not\n+//! (#14132).\n+\n+#![crate_name = \"b\"]\n+\n+extern crate a;\n+\n+pub fn foo() { assert_eq!(a::foo::<()>(0), 3); }"}, {"sha": "d1971a5e1aea40403f0a486d23d25285de263685", "filename": "src/test/run-pass/aux/thread-local-extern-static.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fthread-local-extern-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Fthread-local-extern-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Fthread-local-extern-static.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(thread_local)]\n+#![feature(cfg_target_thread_local)]\n+#![crate_type = \"lib\"]\n+\n+#[no_mangle]\n+#[cfg_attr(target_thread_local, thread_local)]\n+pub static FOO: u32 = 3;"}, {"sha": "c1168a912dc6846d8085012f5873109143771318", "filename": "src/test/run-pass/aux/trait_default_method_xc_aux.rs", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ftrait_default_method_xc_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbc082dcc65d5bb37a4af09b731b01e860b8c5bf/src%2Ftest%2Frun-pass%2Faux%2Ftrait_default_method_xc_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faux%2Ftrait_default_method_xc_aux.rs?ref=fbc082dcc65d5bb37a4af09b731b01e860b8c5bf", "patch": "@@ -0,0 +1,50 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Something { pub x: isize }\n+\n+pub trait A {\n+    fn f(&self) -> isize;\n+    fn g(&self) -> isize { 10 }\n+    fn h(&self) -> isize { 11 }\n+    fn lurr(x: &Self, y: &Self) -> isize { x.g() + y.h() }\n+}\n+\n+\n+impl A for isize {\n+    fn f(&self) -> isize { 10 }\n+}\n+\n+impl A for Something {\n+    fn f(&self) -> isize { 10 }\n+}\n+\n+pub trait B<T> {\n+    fn thing<U>(&self, x: T, y: U) -> (T, U) { (x, y) }\n+    fn staticthing<U>(_z: &Self, x: T, y: U) -> (T, U) { (x, y) }\n+}\n+\n+impl<T> B<T> for isize { }\n+impl B<f64> for bool { }\n+\n+\n+\n+pub trait TestEquality {\n+    fn test_eq(&self, rhs: &Self) -> bool;\n+    fn test_neq(&self, rhs: &Self) -> bool {\n+        !self.test_eq(rhs)\n+    }\n+}\n+\n+impl TestEquality for isize {\n+    fn test_eq(&self, rhs: &isize) -> bool {\n+        *self == *rhs\n+    }\n+}"}]}