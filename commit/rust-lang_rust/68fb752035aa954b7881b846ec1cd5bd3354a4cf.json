{"sha": "68fb752035aa954b7881b846ec1cd5bd3354a4cf", "node_id": "C_kwDOAAsO6NoAKDY4ZmI3NTIwMzVhYTk1NGI3ODgxYjg0NmVjMWNkNWJkMzM1NGE0Y2Y", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-12T20:20:45Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-14T20:27:38Z"}, "message": "Do not fetch HIR to check target features.", "tree": {"sha": "97986ceacf220e2e956248cdea3496c440c2bfc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97986ceacf220e2e956248cdea3496c440c2bfc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68fb752035aa954b7881b846ec1cd5bd3354a4cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68fb752035aa954b7881b846ec1cd5bd3354a4cf", "html_url": "https://github.com/rust-lang/rust/commit/68fb752035aa954b7881b846ec1cd5bd3354a4cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68fb752035aa954b7881b846ec1cd5bd3354a4cf/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49e7f6a2e62670704ec52e10f7639c17afe4f8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49e7f6a2e62670704ec52e10f7639c17afe4f8e", "html_url": "https://github.com/rust-lang/rust/commit/e49e7f6a2e62670704ec52e10f7639c17afe4f8e"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "a6afbad5b2402062e9a236c5cfdfca39e803f567", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/68fb752035aa954b7881b846ec1cd5bd3354a4cf/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68fb752035aa954b7881b846ec1cd5bd3354a4cf/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=68fb752035aa954b7881b846ec1cd5bd3354a4cf", "patch": "@@ -3,12 +3,12 @@ use rustc_attr::InstructionSetAttr;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n-use rustc_hir as hir;\n+use rustc_hir::def::DefKind;\n use rustc_hir::def_id::DefId;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_middle::ty::query::Providers;\n-use rustc_middle::ty::TyCtxt;\n+use rustc_middle::ty::{DefIdTree, TyCtxt};\n use rustc_session::parse::feature_err;\n use rustc_session::Session;\n use rustc_span::symbol::sym;\n@@ -440,12 +440,9 @@ fn asm_target_features(tcx: TyCtxt<'_>, did: DefId) -> &FxHashSet<Symbol> {\n /// Checks the function annotated with `#[target_feature]` is not a safe\n /// trait method implementation, reporting an error if it is.\n pub fn check_target_feature_trait_unsafe(tcx: TyCtxt<'_>, id: LocalDefId, attr_span: Span) {\n-    let hir_id = tcx.hir().local_def_id_to_hir_id(id);\n-    let node = tcx.hir().get(hir_id);\n-    if let hir::Node::ImplItem(hir::ImplItem { kind: hir::ImplItemKind::Fn(..), .. }) = node {\n-        let parent_id = tcx.hir().get_parent_item(hir_id);\n-        let parent_item = tcx.hir().expect_item(parent_id.def_id);\n-        if let hir::ItemKind::Impl(hir::Impl { of_trait: Some(_), .. }) = parent_item.kind {\n+    if let DefKind::AssocFn = tcx.def_kind(id) {\n+        let parent_id = tcx.local_parent(id);\n+        if let DefKind::Impl { of_trait: true } = tcx.def_kind(parent_id) {\n             tcx.sess\n                 .struct_span_err(\n                     attr_span,"}]}