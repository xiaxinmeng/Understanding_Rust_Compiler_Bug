{"sha": "eae5d77995488ffc316a7ff8344c4eaa81d67932", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhZTVkNzc5OTU0ODhmZmMzMTZhN2ZmODM0NGM0ZWFhODFkNjc5MzI=", "commit": {"author": {"name": "Tomasz R\u00f3\u017ca\u0144ski", "email": "rosto@tlen.pl", "date": "2019-08-22T13:09:03Z"}, "committer": {"name": "Tomasz R\u00f3\u017ca\u0144ski", "email": "rosto@tlen.pl", "date": "2019-08-22T13:09:03Z"}, "message": "Change variables names to be more consistent.\n\nChanged all instances of `c_str` into `cstr` in the documentation examples. This is also consistent with the module source code.", "tree": {"sha": "bb63aed9ca7ed8f19ee69cdc404b66d976de4916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb63aed9ca7ed8f19ee69cdc404b66d976de4916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eae5d77995488ffc316a7ff8344c4eaa81d67932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eae5d77995488ffc316a7ff8344c4eaa81d67932", "html_url": "https://github.com/rust-lang/rust/commit/eae5d77995488ffc316a7ff8344c4eaa81d67932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eae5d77995488ffc316a7ff8344c4eaa81d67932/comments", "author": {"login": "tomasz-rozanski", "id": 11074159, "node_id": "MDQ6VXNlcjExMDc0MTU5", "avatar_url": "https://avatars.githubusercontent.com/u/11074159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasz-rozanski", "html_url": "https://github.com/tomasz-rozanski", "followers_url": "https://api.github.com/users/tomasz-rozanski/followers", "following_url": "https://api.github.com/users/tomasz-rozanski/following{/other_user}", "gists_url": "https://api.github.com/users/tomasz-rozanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasz-rozanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasz-rozanski/subscriptions", "organizations_url": "https://api.github.com/users/tomasz-rozanski/orgs", "repos_url": "https://api.github.com/users/tomasz-rozanski/repos", "events_url": "https://api.github.com/users/tomasz-rozanski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasz-rozanski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tomasz-rozanski", "id": 11074159, "node_id": "MDQ6VXNlcjExMDc0MTU5", "avatar_url": "https://avatars.githubusercontent.com/u/11074159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomasz-rozanski", "html_url": "https://github.com/tomasz-rozanski", "followers_url": "https://api.github.com/users/tomasz-rozanski/followers", "following_url": "https://api.github.com/users/tomasz-rozanski/following{/other_user}", "gists_url": "https://api.github.com/users/tomasz-rozanski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomasz-rozanski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomasz-rozanski/subscriptions", "organizations_url": "https://api.github.com/users/tomasz-rozanski/orgs", "repos_url": "https://api.github.com/users/tomasz-rozanski/repos", "events_url": "https://api.github.com/users/tomasz-rozanski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomasz-rozanski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdedd268d2d1f6e9fb376d368bb40564441474cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdedd268d2d1f6e9fb376d368bb40564441474cb", "html_url": "https://github.com/rust-lang/rust/commit/cdedd268d2d1f6e9fb376d368bb40564441474cb"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "65f4e0cafe09e321503233608cd1eb8352f00c91", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/eae5d77995488ffc316a7ff8344c4eaa81d67932/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eae5d77995488ffc316a7ff8344c4eaa81d67932/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=eae5d77995488ffc316a7ff8344c4eaa81d67932", "patch": "@@ -572,8 +572,8 @@ impl CString {\n     /// use std::ffi::{CString, CStr};\n     ///\n     /// let c_string = CString::new(b\"foo\".to_vec()).expect(\"CString::new failed\");\n-    /// let c_str = c_string.as_c_str();\n-    /// assert_eq!(c_str,\n+    /// let cstr = c_string.as_c_str();\n+    /// assert_eq!(cstr,\n     ///            CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\"));\n     /// ```\n     #[inline]\n@@ -994,17 +994,17 @@ impl CStr {\n     /// ```\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"hello\");\n-    /// assert!(c_str.is_err());\n+    /// let cstr = CStr::from_bytes_with_nul(b\"hello\");\n+    /// assert!(cstr.is_err());\n     /// ```\n     ///\n     /// Creating a `CStr` with an interior nul byte is an error:\n     ///\n     /// ```\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"he\\0llo\\0\");\n-    /// assert!(c_str.is_err());\n+    /// let cstr = CStr::from_bytes_with_nul(b\"he\\0llo\\0\");\n+    /// assert!(cstr.is_err());\n     /// ```\n     #[stable(feature = \"cstr_from_bytes\", since = \"1.10.0\")]\n     pub fn from_bytes_with_nul(bytes: &[u8])\n@@ -1111,8 +1111,8 @@ impl CStr {\n     /// ```\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n-    /// assert_eq!(c_str.to_bytes(), b\"foo\");\n+    /// let cstr = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n+    /// assert_eq!(cstr.to_bytes(), b\"foo\");\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1137,8 +1137,8 @@ impl CStr {\n     /// ```\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n-    /// assert_eq!(c_str.to_bytes_with_nul(), b\"foo\\0\");\n+    /// let cstr = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n+    /// assert_eq!(cstr.to_bytes_with_nul(), b\"foo\\0\");\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1164,8 +1164,8 @@ impl CStr {\n     /// ```\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n-    /// assert_eq!(c_str.to_str(), Ok(\"foo\"));\n+    /// let cstr = CStr::from_bytes_with_nul(b\"foo\\0\").expect(\"CStr::from_bytes_with_nul failed\");\n+    /// assert_eq!(cstr.to_str(), Ok(\"foo\"));\n     /// ```\n     #[stable(feature = \"cstr_to_str\", since = \"1.4.0\")]\n     pub fn to_str(&self) -> Result<&str, str::Utf8Error> {\n@@ -1205,9 +1205,9 @@ impl CStr {\n     /// use std::borrow::Cow;\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"Hello World\\0\")\n+    /// let cstr = CStr::from_bytes_with_nul(b\"Hello World\\0\")\n     ///                  .expect(\"CStr::from_bytes_with_nul failed\");\n-    /// assert_eq!(c_str.to_string_lossy(), Cow::Borrowed(\"Hello World\"));\n+    /// assert_eq!(cstr.to_string_lossy(), Cow::Borrowed(\"Hello World\"));\n     /// ```\n     ///\n     /// Calling `to_string_lossy` on a `CStr` containing invalid UTF-8:\n@@ -1216,10 +1216,10 @@ impl CStr {\n     /// use std::borrow::Cow;\n     /// use std::ffi::CStr;\n     ///\n-    /// let c_str = CStr::from_bytes_with_nul(b\"Hello \\xF0\\x90\\x80World\\0\")\n+    /// let cstr = CStr::from_bytes_with_nul(b\"Hello \\xF0\\x90\\x80World\\0\")\n     ///                  .expect(\"CStr::from_bytes_with_nul failed\");\n     /// assert_eq!(\n-    ///     c_str.to_string_lossy(),\n+    ///     cstr.to_string_lossy(),\n     ///     Cow::Owned(String::from(\"Hello \ufffdWorld\")) as Cow<'_, str>\n     /// );\n     /// ```"}]}