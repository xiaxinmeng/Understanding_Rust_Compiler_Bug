{"sha": "56068b1b671f6490c1be9ea3834784e89a0a4ba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MDY4YjFiNjcxZjY0OTBjMWJlOWVhMzgzNDc4NGU4OWEwYTRiYTc=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T10:57:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T10:57:33Z"}, "message": "Fix ICE #1969", "tree": {"sha": "648776b7a5a2015d9fff5ae34984c4379b6c80d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/648776b7a5a2015d9fff5ae34984c4379b6c80d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56068b1b671f6490c1be9ea3834784e89a0a4ba7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmavKkACgkQpp+NIls6\n19k7KQ/8D5ldp+mKDpQ9xuJL9m8ph7zDCkRu3NaIP+QZK2uS3P1HV5/Ebqmyr7Fs\ngWNohFV0FC6SVVoNmbsyfsm9QOXLiSfcaURzR3BfY2BkBR0BaUx5IHBNqziR+4BM\nKB5uADpcq8y+fxoWON/crFJs8zFYldoO9VIaIXM1kuipxcEMQ/0X14yip8BcSUOd\ng1/W3oBnIvVr4MCrDp77LW9seHMNcDPXIxOyRRz2/0Sv5qSt5QS+mBwFhkvblI6X\nVN6pFr5xSFgWrImlQTKmwIgDwd+K/wnDG3fHDjd7k4fCeZ/ssaAeRlQsHDCN38kq\n7+Hdlgs3UcMsDlBGBK9cggUc4t/pHydUDZK4cOxS17NsjsHkNzqtL37iCktdzBh7\njuhVs9XS/VhmVMq7Z/0I3WCQKwq/It/L5ujf4+Ew+awM0mbduCSAZSGj7UFIHx9Q\ncs1gijKWfRXZ8BlG2qI4/hAfjdSbdNt/+9Sh/6PSA83xpsQFh4XOsjSASVHdHpj5\nEaymD8L4xoZg5PYhWpoedJVhH6ZX1X7EdnksecoZzGNuTinkFq41N6i5wQXemae3\nSQNpZqGTDIciYDXsfsgy+W95QqRyJgDTqjTUXLZMyAOdhDSV+VDntWKSb6fCedPp\nnQ5xnA0nWRebWfjdJ5JOvyBABFO3fOz1VN5WMBD08OjLLlVAOcg=\n=45Wo\n-----END PGP SIGNATURE-----", "payload": "tree 648776b7a5a2015d9fff5ae34984c4379b6c80d7\nparent f1847f7a986716b0146e4f319f6f5fec8943500f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503313053 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503313053 +0200\n\nFix ICE #1969\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56068b1b671f6490c1be9ea3834784e89a0a4ba7", "html_url": "https://github.com/rust-lang/rust/commit/56068b1b671f6490c1be9ea3834784e89a0a4ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56068b1b671f6490c1be9ea3834784e89a0a4ba7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1847f7a986716b0146e4f319f6f5fec8943500f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1847f7a986716b0146e4f319f6f5fec8943500f", "html_url": "https://github.com/rust-lang/rust/commit/f1847f7a986716b0146e4f319f6f5fec8943500f"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "9d9bf38c39748915e4575851cfbcb3ce1e9147cb", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56068b1b671f6490c1be9ea3834784e89a0a4ba7/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56068b1b671f6490c1be9ea3834784e89a0a4ba7/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=56068b1b671f6490c1be9ea3834784e89a0a4ba7", "patch": "@@ -1,6 +1,7 @@\n use rustc::hir::intravisit;\n use rustc::hir;\n use rustc::lint::*;\n+use rustc::ty;\n use std::collections::HashSet;\n use syntax::ast;\n use syntax::abi::Abi;\n@@ -150,9 +151,11 @@ impl<'a, 'tcx> Functions {\n                 .collect::<HashSet<_>>();\n \n             if !raw_ptrs.is_empty() {\n+                let tables = cx.tcx.body_tables(body.id());\n                 let mut v = DerefVisitor {\n                     cx: cx,\n                     ptrs: raw_ptrs,\n+                    tables,\n                 };\n \n                 hir::intravisit::walk_expr(&mut v, expr);\n@@ -172,13 +175,14 @@ fn raw_ptr_arg(arg: &hir::Arg, ty: &hir::Ty) -> Option<hir::def_id::DefId> {\n struct DerefVisitor<'a, 'tcx: 'a> {\n     cx: &'a LateContext<'a, 'tcx>,\n     ptrs: HashSet<hir::def_id::DefId>,\n+    tables: &'a ty::TypeckTables<'tcx>,\n }\n \n impl<'a, 'tcx> hir::intravisit::Visitor<'tcx> for DerefVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, expr: &'tcx hir::Expr) {\n         match expr.node {\n             hir::ExprCall(ref f, ref args) => {\n-                let ty = self.cx.tables.expr_ty(f);\n+                let ty = self.tables.expr_ty(f);\n \n                 if type_is_unsafe_function(self.cx, ty) {\n                     for arg in args {\n@@ -187,7 +191,7 @@ impl<'a, 'tcx> hir::intravisit::Visitor<'tcx> for DerefVisitor<'a, 'tcx> {\n                 }\n             },\n             hir::ExprMethodCall(_, _, ref args) => {\n-                let def_id = self.cx.tables.type_dependent_defs()[expr.hir_id].def_id();\n+                let def_id = self.tables.type_dependent_defs()[expr.hir_id].def_id();\n                 let base_type = self.cx.tcx.type_of(def_id);\n \n                 if type_is_unsafe_function(self.cx, base_type) {"}, {"sha": "8e8ed032c1fe4638c7297ae33d69e94f9019c503", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56068b1b671f6490c1be9ea3834784e89a0a4ba7/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56068b1b671f6490c1be9ea3834784e89a0a4ba7/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=56068b1b671f6490c1be9ea3834784e89a0a4ba7", "patch": "@@ -30,7 +30,7 @@ struct ClippyCompilerCalls {\n \n impl ClippyCompilerCalls {\n     fn new(run_lints: bool) -> Self {\n-        ClippyCompilerCalls {\n+        Self {\n             default: RustcDefaultCalls,\n             run_lints: run_lints,\n         }"}, {"sha": "23a002a5cdee54ffcfde9e49b3f8b6e2689cb395", "filename": "tests/run-pass/ice-1969.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/56068b1b671f6490c1be9ea3834784e89a0a4ba7/tests%2Frun-pass%2Fice-1969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56068b1b671f6490c1be9ea3834784e89a0a4ba7/tests%2Frun-pass%2Fice-1969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-1969.rs?ref=56068b1b671f6490c1be9ea3834784e89a0a4ba7", "patch": "@@ -0,0 +1,13 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+#![allow(clippy)]\n+\n+fn main() { }\n+\n+pub trait Convert {\n+    type Action: From<*const f64>;\n+\n+    fn convert(val: *const f64) -> Self::Action {\n+        val.into()\n+    }\n+}"}]}