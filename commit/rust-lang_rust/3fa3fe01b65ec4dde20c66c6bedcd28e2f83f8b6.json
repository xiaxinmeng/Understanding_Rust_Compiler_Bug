{"sha": "3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYTNmZTAxYjY1ZWM0ZGRlMjBjNjZjNmJlZGNkMjhlMmY4M2Y4YjY=", "commit": {"author": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-09-20T18:42:49Z"}, "committer": {"name": "scalexm", "email": "martin.alex32@hotmail.fr", "date": "2017-09-20T18:48:06Z"}, "message": "Fix ICE", "tree": {"sha": "1eb75438d9833dee61d34237ae7c25e9758f7891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1eb75438d9833dee61d34237ae7c25e9758f7891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "html_url": "https://github.com/rust-lang/rust/commit/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7964aebe516bc7e4f06f7128ebb39ad5576a1a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7964aebe516bc7e4f06f7128ebb39ad5576a1a7", "html_url": "https://github.com/rust-lang/rust/commit/f7964aebe516bc7e4f06f7128ebb39ad5576a1a7"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "b4cb39a034b4fd9cec750009ac3b871a8372b42d", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -570,6 +570,8 @@ define_dep_nodes!( <'tcx>\n     [] MissingExternCrateItem(CrateNum),\n     [] UsedCrateSource(CrateNum),\n     [] PostorderCnums,\n+    [] HasCloneClosures(CrateNum),\n+    [] HasCopyClosures(CrateNum),\n \n     [] Freevars(DefId),\n     [] MaybeUnusedTraitImport(DefId),"}, {"sha": "00f0672822fc119a5feea7945fff7bb6d908044b", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -2087,10 +2087,10 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                 let trait_id = obligation.predicate.def_id();\n                 let copy_closures =\n                     Some(trait_id) == self.tcx().lang_items().copy_trait() &&\n-                    self.tcx().sess.features.borrow().copy_closures;\n+                    self.tcx().has_copy_closures(def_id.krate);\n                 let clone_closures =\n                     Some(trait_id) == self.tcx().lang_items().clone_trait() &&\n-                    self.tcx().sess.features.borrow().clone_closures;\n+                    self.tcx().has_clone_closures(def_id.krate);\n \n                 if copy_closures || clone_closures {\n                     Where(ty::Binder(substs.upvar_tys(def_id, self.tcx()).collect()))"}, {"sha": "4a309ee0eb02b7c4bab7ed5c054d1cc1ee616d85", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -2247,4 +2247,12 @@ pub fn provide(providers: &mut ty::maps::Providers) {\n         assert_eq!(cnum, LOCAL_CRATE);\n         tcx.output_filenames.clone()\n     };\n+    providers.has_copy_closures = |tcx, cnum| {\n+        assert_eq!(cnum, LOCAL_CRATE);\n+        tcx.sess.features.borrow().copy_closures\n+    };\n+    providers.has_clone_closures = |tcx, cnum| {\n+        assert_eq!(cnum, LOCAL_CRATE);\n+        tcx.sess.features.borrow().clone_closures\n+    };\n }"}, {"sha": "c8520c5be2df5eef5a7e50387b705cb02db3b677", "filename": "src/librustc/ty/maps/config.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fconfig.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -490,3 +490,15 @@ impl<'tcx> QueryDescription for queries::output_filenames<'tcx> {\n         format!(\"output_filenames\")\n     }\n }\n+\n+impl<'tcx> QueryDescription for queries::has_clone_closures<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"seeing if the crate has enabled `Clone` closures\")\n+    }\n+}\n+\n+impl<'tcx> QueryDescription for queries::has_copy_closures<'tcx> {\n+    fn describe(_tcx: TyCtxt, _: CrateNum) -> String {\n+        format!(\"seeing if the crate has enabled `Copy` closures\")\n+    }\n+}"}, {"sha": "313a831f6b0eb8632736a50df29a4a327f827f0e", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -326,6 +326,9 @@ define_maps! { <'tcx>\n     [] fn compile_codegen_unit: CompileCodegenUnit(InternedString) -> Stats,\n     [] fn output_filenames: output_filenames_node(CrateNum)\n         -> Arc<OutputFilenames>,\n+\n+    [] fn has_copy_closures: HasCopyClosures(CrateNum) -> bool,\n+    [] fn has_clone_closures: HasCloneClosures(CrateNum) -> bool,\n }\n \n //////////////////////////////////////////////////////////////////////"}, {"sha": "9e47e96aee4ef4a1ff995a22474e193737bdf013", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -218,6 +218,16 @@ impl CrateMetadata {\n         attr::contains_name(&attrs, \"no_builtins\")\n     }\n \n+     pub fn has_copy_closures(&self) -> bool {\n+        let attrs = self.get_item_attrs(CRATE_DEF_INDEX);\n+        attr::contains_feature_attr(&attrs, \"copy_closures\")\n+    }\n+\n+    pub fn has_clone_closures(&self) -> bool {\n+        let attrs = self.get_item_attrs(CRATE_DEF_INDEX);\n+        attr::contains_feature_attr(&attrs, \"clone_closures\")\n+    }\n+\n     pub fn panic_strategy(&self) -> PanicStrategy {\n         self.root.panic_strategy.clone()\n     }"}, {"sha": "f785d7bd40763452708384a28bb1ec74415d01ae", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -231,6 +231,9 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n     }\n \n     used_crate_source => { Rc::new(cdata.source.clone()) }\n+\n+    has_copy_closures => { cdata.has_copy_closures() }\n+    has_clone_closures => { cdata.has_clone_closures() }\n }\n \n pub fn provide_local<'tcx>(providers: &mut Providers<'tcx>) {"}, {"sha": "b1f796084df826e6881f4667c968e5dcc1b5e9f5", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=3fa3fe01b65ec4dde20c66c6bedcd28e2f83f8b6", "patch": "@@ -500,6 +500,20 @@ pub fn first_attr_value_str_by_name(attrs: &[Attribute], name: &str) -> Option<S\n         .and_then(|at| at.value_str())\n }\n \n+/// Check if `attrs` contains an attribute like `#![feature(feature_name)]`.\n+/// This will not perform any \"sanity checks\" on the form of the attributes.\n+pub fn contains_feature_attr(attrs: &[Attribute], feature_name: &str) -> bool {\n+    attrs.iter().any(|item| {\n+        item.check_name(\"feature\") &&\n+        item.meta_item_list().map(|list| {\n+            list.iter().any(|mi| {\n+                mi.word().map(|w| w.name() == feature_name)\n+                         .unwrap_or(false)\n+            })\n+        }).unwrap_or(false)\n+    })\n+}\n+\n /* Higher-level applications */\n \n pub fn find_crate_name(attrs: &[Attribute]) -> Option<Symbol> {"}]}