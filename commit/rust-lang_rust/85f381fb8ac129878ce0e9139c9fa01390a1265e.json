{"sha": "85f381fb8ac129878ce0e9139c9fa01390a1265e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZjM4MWZiOGFjMTI5ODc4Y2UwZTkxMzljOWZhMDEzOTBhMTI2NWU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-14T00:52:33Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-14T22:32:23Z"}, "message": "restructure, temporarily working around what looks like an LLVM bug", "tree": {"sha": "ea74f8b768d81478b708afc513e9cb5bda3224ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea74f8b768d81478b708afc513e9cb5bda3224ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85f381fb8ac129878ce0e9139c9fa01390a1265e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85f381fb8ac129878ce0e9139c9fa01390a1265e", "html_url": "https://github.com/rust-lang/rust/commit/85f381fb8ac129878ce0e9139c9fa01390a1265e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85f381fb8ac129878ce0e9139c9fa01390a1265e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaaa3c30bf132a3f67ac0a925853e5a2f6f6baf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaaa3c30bf132a3f67ac0a925853e5a2f6f6baf7", "html_url": "https://github.com/rust-lang/rust/commit/eaaa3c30bf132a3f67ac0a925853e5a2f6f6baf7"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "f94250e229c62610ae69009acee66ab12fcca9e3", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/85f381fb8ac129878ce0e9139c9fa01390a1265e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f381fb8ac129878ce0e9139c9fa01390a1265e/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=85f381fb8ac129878ce0e9139c9fa01390a1265e", "patch": "@@ -187,6 +187,7 @@ fn bad_expr_word_table() -> hashmap<str, ()> {\n     words.insert(\"const\", ());\n     words.insert(\"log\", ());\n     words.insert(\"log_err\", ());\n+    words.insert(\"sendfn\", ());\n     words.insert(\"tag\", ());\n     words.insert(\"obj\", ());\n     words.insert(\"copy\", ());\n@@ -1348,12 +1349,40 @@ fn parse_capture_clause(p: parser) -> @ast::capture {\n     ret @spanned(lo, hi, {is_send: is_send, copies: copies, moves: moves});\n }\n \n+fn select_proto(p: parser, kw: fn_kw, is_send: bool) -> ast::proto {\n+    ret alt (kw, is_send) {\n+      (fn_kw_fn., true) { ast::proto_bare }\n+      (fn_kw_fn_at., true) { ast::proto_send }\n+      (fn_kw_lambda., true) { ast::proto_send }\n+      (fn_kw_block., true) { p.fatal(\"block cannot be declared sendable\") }\n+      (fn_kw_fn., false) { ast::proto_bare }\n+      (fn_kw_fn_at., false) { ast::proto_shared(ast::sugar_normal) }\n+      (fn_kw_lambda., false) { ast::proto_shared(ast::sugar_sexy) }\n+      (fn_kw_block., false) { ast::proto_block }\n+    };\n+}\n+\n fn parse_fn_expr(p: parser, kw: fn_kw) -> @ast::expr {\n     let lo = p.get_last_lo_pos();\n     let captures = parse_capture_clause(p);\n+    let is_send = captures.node.is_send;\n+    let proto = select_proto(p, kw, is_send);\n     let decl = parse_fn_decl(p, ast::impure_fn, ast::il_normal);\n     let body = parse_block(p);\n-    let proto = alt (kw, captures.node.is_send) {\n+    let _fn = {decl: decl, proto: proto, body: body};\n+    ret mk_expr(p, lo, body.span.hi, ast::expr_fn(_fn, captures));\n+}\n+\n+/*\n+** This version triggers an LLVM bug: **\n+\n+fn parse_fn_expr(p: parser, kw: fn_kw) -> @ast::expr {\n+    let lo = p.get_last_lo_pos();\n+    let captures = parse_capture_clause(p);\n+    let is_send = captures.node.is_send;\n+    //let proto = select_proto(p, kw, is_send);\n+    log_err (kw, captures, is_send);\n+    let proto = alt (kw, is_send) {\n       (fn_kw_fn., true) { ast::proto_bare }\n       (fn_kw_fn_at., true) { ast::proto_send }\n       (fn_kw_lambda., true) { ast::proto_send }\n@@ -1363,9 +1392,14 @@ fn parse_fn_expr(p: parser, kw: fn_kw) -> @ast::expr {\n       (fn_kw_lambda., false) { ast::proto_shared(ast::sugar_sexy) }\n       (fn_kw_block., false) { ast::proto_block }\n     };\n-    let _fn = {decl: decl, proto: proto, body: body};\n-    ret mk_expr(p, lo, body.span.hi, ast::expr_fn(_fn, captures));\n+    fail \"foo\";\n+    //let decl = parse_fn_decl(p, ast::impure_fn, ast::il_normal);\n+    //let body = parse_block(p);\n+    //let _fn = {decl: decl, proto: proto, body: body};\n+    //ret mk_expr(p, lo, body.span.hi, ast::expr_fn(_fn, captures));\n }\n+*/\n+\n \n fn parse_fn_block_expr(p: parser) -> @ast::expr {\n     let lo = p.get_last_lo_pos();"}]}