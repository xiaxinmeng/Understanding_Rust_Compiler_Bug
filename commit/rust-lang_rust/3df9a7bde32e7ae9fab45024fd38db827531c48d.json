{"sha": "3df9a7bde32e7ae9fab45024fd38db827531c48d", "node_id": "C_kwDOAAsO6NoAKDNkZjlhN2JkZTMyZTdhZTlmYWI0NTAyNGZkMzhkYjgyNzUzMWM0OGQ", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-12T11:44:52Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-12T11:44:52Z"}, "message": "Shorten `COMPARE_PACKED` => `CP` where it is not important\n\nwhy can't I _ it :'(", "tree": {"sha": "cf7b7bb35df897561e0663e5702cceb93977a30f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf7b7bb35df897561e0663e5702cceb93977a30f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df9a7bde32e7ae9fab45024fd38db827531c48d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df9a7bde32e7ae9fab45024fd38db827531c48d", "html_url": "https://github.com/rust-lang/rust/commit/3df9a7bde32e7ae9fab45024fd38db827531c48d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df9a7bde32e7ae9fab45024fd38db827531c48d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f408202c3a99fb8d4798996287211240dab39f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f408202c3a99fb8d4798996287211240dab39f4", "html_url": "https://github.com/rust-lang/rust/commit/8f408202c3a99fb8d4798996287211240dab39f4"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "edf429abfe9919a90c88028fefae6649a444c4c5", "filename": "compiler/rustc_data_structures/src/tagged_ptr/copy.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3df9a7bde32e7ae9fab45024fd38db827531c48d/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df9a7bde32e7ae9fab45024fd38db827531c48d/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fcopy.rs?ref=3df9a7bde32e7ae9fab45024fd38db827531c48d", "patch": "@@ -24,15 +24,15 @@ where\n     tag_ghost: PhantomData<T>,\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> Copy for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> Copy for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n     P: Copy,\n {\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> Clone for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> Clone for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -46,7 +46,7 @@ where\n // We pack the tag into the *upper* bits of the pointer to ease retrieval of the\n // value; a left shift is a multiplication and those are embeddable in\n // instruction encoding.\n-impl<P, T, const COMPARE_PACKED: bool> CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -126,7 +126,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> Deref for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> Deref for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -141,7 +141,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> DerefMut for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> DerefMut for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer + DerefMut,\n     T: Tag,\n@@ -155,7 +155,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> fmt::Debug for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> fmt::Debug for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer + fmt::Debug,\n     T: Tag + fmt::Debug,\n@@ -194,7 +194,7 @@ where\n     }\n }\n \n-impl<P, T, HCX, const COMPARE_PACKED: bool> HashStable<HCX> for CopyTaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, HCX, const CP: bool> HashStable<HCX> for CopyTaggedPtr<P, T, CP>\n where\n     P: Pointer + HashStable<HCX>,\n     T: Tag + HashStable<HCX>,"}, {"sha": "a722a0f1f3215c04a714dfb8d784241b00c5514b", "filename": "compiler/rustc_data_structures/src/tagged_ptr/drop.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3df9a7bde32e7ae9fab45024fd38db827531c48d/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df9a7bde32e7ae9fab45024fd38db827531c48d/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Ftagged_ptr%2Fdrop.rs?ref=3df9a7bde32e7ae9fab45024fd38db827531c48d", "patch": "@@ -17,7 +17,7 @@ where\n     raw: CopyTaggedPtr<P, T, COMPARE_PACKED>,\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> Clone for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> Clone for TaggedPtr<P, T, CP>\n where\n     P: Pointer + Clone,\n     T: Tag,\n@@ -32,7 +32,7 @@ where\n // We pack the tag into the *upper* bits of the pointer to ease retrieval of the\n // value; a right shift is a multiplication and those are embeddable in\n // instruction encoding.\n-impl<P, T, const COMPARE_PACKED: bool> TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> TaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -46,7 +46,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> std::ops::Deref for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> std::ops::Deref for TaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -57,7 +57,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> std::ops::DerefMut for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> std::ops::DerefMut for TaggedPtr<P, T, CP>\n where\n     P: Pointer + std::ops::DerefMut,\n     T: Tag,\n@@ -67,7 +67,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> Drop for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> Drop for TaggedPtr<P, T, CP>\n where\n     P: Pointer,\n     T: Tag,\n@@ -80,7 +80,7 @@ where\n     }\n }\n \n-impl<P, T, const COMPARE_PACKED: bool> fmt::Debug for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, const CP: bool> fmt::Debug for TaggedPtr<P, T, CP>\n where\n     P: Pointer + fmt::Debug,\n     T: Tag + fmt::Debug,\n@@ -119,7 +119,7 @@ where\n     }\n }\n \n-impl<P, T, HCX, const COMPARE_PACKED: bool> HashStable<HCX> for TaggedPtr<P, T, COMPARE_PACKED>\n+impl<P, T, HCX, const CP: bool> HashStable<HCX> for TaggedPtr<P, T, CP>\n where\n     P: Pointer + HashStable<HCX>,\n     T: Tag + HashStable<HCX>,"}]}