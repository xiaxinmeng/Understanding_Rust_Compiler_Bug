{"sha": "711e736262a5ef0c738a8bdfba55501bcfbe19a2", "node_id": "C_kwDOAAsO6NoAKDcxMWU3MzYyNjJhNWVmMGM3MzhhOGJkZmJhNTU1MDFiY2ZiZTE5YTI", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-04T10:10:02Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-04T10:10:02Z"}, "message": "fold substs", "tree": {"sha": "33e35eceb4221c0bf072099bf2fbf23001c55c20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33e35eceb4221c0bf072099bf2fbf23001c55c20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/711e736262a5ef0c738a8bdfba55501bcfbe19a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/711e736262a5ef0c738a8bdfba55501bcfbe19a2", "html_url": "https://github.com/rust-lang/rust/commit/711e736262a5ef0c738a8bdfba55501bcfbe19a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/711e736262a5ef0c738a8bdfba55501bcfbe19a2/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd", "html_url": "https://github.com/rust-lang/rust/commit/4e8fb743ccbec27344b2dd42de7057f41d4ebfdd"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "c723df83905dacaf50f0d42949c8be983c5a08e5", "filename": "compiler/rustc_middle/src/ty/subst.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/711e736262a5ef0c738a8bdfba55501bcfbe19a2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/711e736262a5ef0c738a8bdfba55501bcfbe19a2/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsubst.rs?ref=711e736262a5ef0c738a8bdfba55501bcfbe19a2", "patch": "@@ -396,15 +396,7 @@ impl<'tcx> TypeFoldable<'tcx> for SubstsRef<'tcx> {\n                 }\n             }\n             0 => Ok(self),\n-            _ => {\n-                let params: SmallVec<[_; 8]> =\n-                    self.iter().map(|k| k.try_fold_with(folder)).collect::<Result<_, _>>()?;\n-                if params[..] == self[..] {\n-                    Ok(self)\n-                } else {\n-                    Ok(folder.tcx().intern_substs(&params))\n-                }\n-            }\n+            _ => ty::util::fold_list(self, folder, |tcx, v| tcx.intern_substs(v)),\n         }\n     }\n "}]}