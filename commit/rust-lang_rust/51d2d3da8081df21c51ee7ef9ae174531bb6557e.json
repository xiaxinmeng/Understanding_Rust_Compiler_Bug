{"sha": "51d2d3da8081df21c51ee7ef9ae174531bb6557e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZDJkM2RhODA4MWRmMjFjNTFlZTdlZjlhZTE3NDUzMWJiNjU1N2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-12T22:35:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-12T22:35:32Z"}, "message": "Auto merge of #34133 - m-decoster:master, r=GuillaumeGomez\n\nAdd explanations for E0503 and E0508.\n\n(cannot use `..` because it was mutably borrowed, cannot move out of type `..`, a non-copy fixed-size array)\n\nPart of #32777.", "tree": {"sha": "c4e8d57c6805f126188bfe301d1920468b91f883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4e8d57c6805f126188bfe301d1920468b91f883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51d2d3da8081df21c51ee7ef9ae174531bb6557e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51d2d3da8081df21c51ee7ef9ae174531bb6557e", "html_url": "https://github.com/rust-lang/rust/commit/51d2d3da8081df21c51ee7ef9ae174531bb6557e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51d2d3da8081df21c51ee7ef9ae174531bb6557e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abc57aba059e97eb6a49c151ea3c8644b0b48457", "url": "https://api.github.com/repos/rust-lang/rust/commits/abc57aba059e97eb6a49c151ea3c8644b0b48457", "html_url": "https://github.com/rust-lang/rust/commit/abc57aba059e97eb6a49c151ea3c8644b0b48457"}, {"sha": "e06fbe159ca008992df2849831aa17feb12d5442", "url": "https://api.github.com/repos/rust-lang/rust/commits/e06fbe159ca008992df2849831aa17feb12d5442", "html_url": "https://github.com/rust-lang/rust/commit/e06fbe159ca008992df2849831aa17feb12d5442"}], "stats": {"total": 102, "additions": 100, "deletions": 2}, "files": [{"sha": "400ae186010e3fb15d594615c6b5dc4705e9b395", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 100, "deletions": 2, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/51d2d3da8081df21c51ee7ef9ae174531bb6557e/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51d2d3da8081df21c51ee7ef9ae174531bb6557e/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=51d2d3da8081df21c51ee7ef9ae174531bb6557e", "patch": "@@ -532,6 +532,62 @@ For more information on the rust ownership system, take a look at\n https://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n \"##,\n \n+E0503: r##\"\n+A value was used after it was mutably borrowed.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+fn main() {\n+    let mut value = 3;\n+    // Create a mutable borrow of `value`. This borrow\n+    // lives until the end of this function.\n+    let _borrow = &mut value;\n+    let _sum = value + 1; // error: cannot use `value` because\n+                          //        it was mutably borrowed\n+}\n+```\n+\n+In this example, `value` is mutably borrowed by `borrow` and cannot be\n+used to calculate `sum`. This is not possible because this would violate\n+Rust's mutability rules.\n+\n+You can fix this error by limiting the scope of the borrow:\n+\n+```\n+fn main() {\n+    let mut value = 3;\n+    // By creating a new block, you can limit the scope\n+    // of the reference.\n+    {\n+        let _borrow = &mut value; // Use `_borrow` inside this block.\n+    }\n+    // The block has ended and with it the borrow.\n+    // You can now use `value` again.\n+    let _sum = value + 1;\n+}\n+```\n+\n+Or by cloning `value` before borrowing it:\n+\n+```\n+fn main() {\n+    let mut value = 3;\n+    // We clone `value`, creating a copy.\n+    let value_cloned = value.clone();\n+    // The mutable borrow is a reference to `value` and\n+    // not to `value_cloned`...\n+    let _borrow = &mut value;\n+    // ... which means we can still use `value_cloned`,\n+    let _sum = value_cloned + 1;\n+    // even though the borrow only ends here.\n+}\n+```\n+\n+You can find more information about borrowing in the rust-book:\n+http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+\"##,\n+\n E0504: r##\"\n This error occurs when an attempt is made to move a borrowed variable into a\n closure.\n@@ -914,6 +970,50 @@ You can find more information about borrowing in the rust-book:\n http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n \"##,\n \n+E0508: r##\"\n+A value was moved out of a non-copy fixed-size array.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    let _value = array[0]; // error: cannot move out of type `[NonCopy; 1]`,\n+                           //        a non-copy fixed-size array\n+}\n+```\n+\n+The first element was moved out of the array, but this is not\n+possible because `NonCopy` does not implement the `Copy` trait.\n+\n+Consider borrowing the element instead of moving it:\n+\n+```\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    let _value = &array[0]; // Borrowing is allowed, unlike moving.\n+}\n+```\n+\n+Alternatively, if your type implements `Clone` and you need to own the value,\n+consider borrowing and then cloning:\n+\n+```\n+#[derive(Clone)]\n+struct NonCopy;\n+\n+fn main() {\n+    let array = [NonCopy; 1];\n+    // Now you can clone the array element.\n+    let _value = array[0].clone();\n+}\n+```\n+\"##,\n+\n E0509: r##\"\n This error occurs when an attempt is made to move out of a value whose type\n implements the `Drop` trait.\n@@ -1014,7 +1114,5 @@ fn main() {\n register_diagnostics! {\n     E0385, // {} in an aliasable location\n     E0388, // {} in a static location\n-    E0503, // cannot use `..` because it was mutably borrowed\n-    E0508, // cannot move out of type `..`, a non-copy fixed-size array\n     E0524, // two closures require unique access to `..` at the same time\n }"}]}