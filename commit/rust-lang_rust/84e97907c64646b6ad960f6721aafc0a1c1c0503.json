{"sha": "84e97907c64646b6ad960f6721aafc0a1c1c0503", "node_id": "C_kwDOAAsO6NoAKDg0ZTk3OTA3YzY0NjQ2YjZhZDk2MGY2NzIxYWFmYzBhMWMxYzA1MDM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-11-23T16:39:51Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-11-25T10:59:08Z"}, "message": "add comment", "tree": {"sha": "312307d66a85c60811d845492df28723374245dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/312307d66a85c60811d845492df28723374245dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84e97907c64646b6ad960f6721aafc0a1c1c0503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84e97907c64646b6ad960f6721aafc0a1c1c0503", "html_url": "https://github.com/rust-lang/rust/commit/84e97907c64646b6ad960f6721aafc0a1c1c0503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84e97907c64646b6ad960f6721aafc0a1c1c0503/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31431ccda9bbedccb09381d05700b8171eae3ae7", "url": "https://api.github.com/repos/rust-lang/rust/commits/31431ccda9bbedccb09381d05700b8171eae3ae7", "html_url": "https://github.com/rust-lang/rust/commit/31431ccda9bbedccb09381d05700b8171eae3ae7"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "ec69864c951d4df347bb0befaf12df9587561fae", "filename": "compiler/rustc_middle/src/traits/select.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/84e97907c64646b6ad960f6721aafc0a1c1c0503/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84e97907c64646b6ad960f6721aafc0a1c1c0503/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fselect.rs?ref=84e97907c64646b6ad960f6721aafc0a1c1c0503", "patch": "@@ -105,6 +105,12 @@ pub type EvaluationCache<'tcx> = Cache<\n /// parameter environment.\n #[derive(PartialEq, Eq, Debug, Clone, TypeFoldable, TypeVisitable)]\n pub enum SelectionCandidate<'tcx> {\n+    /// A builtin implementation for some specific traits, used in cases\n+    /// where we cannot rely an ordinary library implementations.\n+    ///\n+    /// The most notable examples are `sized`, `Copy` and `Clone`. This is also\n+    /// used for the `DiscriminantKind` and `Pointee` trait, both of which have\n+    /// an associated type.\n     BuiltinCandidate {\n         /// `false` if there are no *further* obligations.\n         has_nested: bool,"}]}