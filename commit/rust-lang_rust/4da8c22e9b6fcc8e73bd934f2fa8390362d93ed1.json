{"sha": "4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYThjMjJlOWI2ZmNjOGU3M2JkOTM0ZjJmYTgzOTAzNjJkOTNlZDE=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-04-29T02:59:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-29T02:59:24Z"}, "message": "Rollup merge of #84531 - Smittyvb:foo-not-feature, r=Mark-Simulacrum\n\nIgnore commented out lines when finding features\n\nThis fixes #76246, where commented out lines were being detected as features by `tidy`, by ignoring those lines when looking for features. It's still not perfect, since it can be fooled by things like:\n```rust\n/*\n#[unstable(feature = \"foo\", issue = \"1234\")]\n*/\n```\nBut luckily that never happens in `rustc`, so `foo` now ceases to appear in the unstable book.", "tree": {"sha": "8923e5ac114e7bd21ab735678e2c44e9f2883e6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8923e5ac114e7bd21ab735678e2c44e9f2883e6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgiiEMCRBK7hj4Ov3rIwAAdb8IAFN6bfCOwWoQ06D2+zdbQb2W\ngr/MMm3WLDU0QrahH7v6ge/3s40+nkkSKIwlrELWd1DI7y8OYlp+0zgvq+j6UoYN\nDkIUwmsa70/NEmcYAzu4fnOSRgTFSqm5/7MyU/nWtAofn6ZzzN8xHNw/xKOiiVxm\nVkJT5AWZtKf5qvoaxE+ovskFrhmhCrSNeOsvxhL23d5g+W/DVTemf7/ZCZI4N5BG\nGXHERbFBX7CLmM7MxcWnxeOrOY9GkiT2QYR8IdFSZaOfL4tZ0hQlQjyLi6apPuJP\nvdAF0c+XYWoEfVfW+btzo666o/E5W6FVWaH3fwbv2zmjpJAgI9KQd4cqrzf6exw=\n=zERz\n-----END PGP SIGNATURE-----\n", "payload": "tree 8923e5ac114e7bd21ab735678e2c44e9f2883e6d\nparent dbfe0e9855996baecfbab4a717b0c6060aa090ee\nparent a7e23f42cff3de644baa9203bf8bc4f15f8ed853\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1619665164 -0400\ncommitter GitHub <noreply@github.com> 1619665164 -0400\n\nRollup merge of #84531 - Smittyvb:foo-not-feature, r=Mark-Simulacrum\n\nIgnore commented out lines when finding features\n\nThis fixes #76246, where commented out lines were being detected as features by `tidy`, by ignoring those lines when looking for features. It's still not perfect, since it can be fooled by things like:\n```rust\n/*\n#[unstable(feature = \"foo\", issue = \"1234\")]\n*/\n```\nBut luckily that never happens in `rustc`, so `foo` now ceases to appear in the unstable book.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1", "html_url": "https://github.com/rust-lang/rust/commit/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbfe0e9855996baecfbab4a717b0c6060aa090ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbfe0e9855996baecfbab4a717b0c6060aa090ee", "html_url": "https://github.com/rust-lang/rust/commit/dbfe0e9855996baecfbab4a717b0c6060aa090ee"}, {"sha": "a7e23f42cff3de644baa9203bf8bc4f15f8ed853", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e23f42cff3de644baa9203bf8bc4f15f8ed853", "html_url": "https://github.com/rust-lang/rust/commit/a7e23f42cff3de644baa9203bf8bc4f15f8ed853"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "b14b5aeb57236672600b9d1e3c864f5affa1643a", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=4da8c22e9b6fcc8e73bd934f2fa8390362d93ed1", "patch": "@@ -423,6 +423,15 @@ fn map_lib_features(\n                         continue;\n                     }};\n                 }\n+\n+                lazy_static::lazy_static! {\n+                    static ref COMMENT_LINE: Regex = Regex::new(r\"^\\s*//\").unwrap();\n+                }\n+                // exclude commented out lines\n+                if COMMENT_LINE.is_match(line) {\n+                    continue;\n+                }\n+\n                 if let Some((ref name, ref mut f)) = becoming_feature {\n                     if f.tracking_issue.is_none() {\n                         f.tracking_issue = find_attr_val(line, \"issue\").and_then(handle_issue_none);"}]}