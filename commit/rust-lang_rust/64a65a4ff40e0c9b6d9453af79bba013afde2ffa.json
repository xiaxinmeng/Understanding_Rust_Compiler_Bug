{"sha": "64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0YTY1YTRmZjQwZTBjOWI2ZDk0NTNhZjc5YmJhMDEzYWZkZTJmZmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T21:53:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T21:53:03Z"}, "message": "trait items", "tree": {"sha": "9b8b488b35fae3f5497f86d67c18ed5fd63d5c7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b8b488b35fae3f5497f86d67c18ed5fd63d5c7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "html_url": "https://github.com/rust-lang/rust/commit/64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb854ccdae6f1f12b60441e5c3b283bdc81fb0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fb854ccdae6f1f12b60441e5c3b283bdc81fb0a", "html_url": "https://github.com/rust-lang/rust/commit/2fb854ccdae6f1f12b60441e5c3b283bdc81fb0a"}], "stats": {"total": 125, "additions": 120, "deletions": 5}, "files": [{"sha": "b11949b4940f67913bb29c1ad57b0dd536b278f0", "filename": "src/grammar/items/consts.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fconsts.rs?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -14,7 +14,8 @@ fn const_or_static(p: &mut Parser, kw: SyntaxKind) {\n     p.eat(MUT_KW); // TODO: validator to forbid const mut\n     name(p);\n     types::ascription(p);\n-    p.expect(EQ);\n-    expressions::expr(p);\n+    if p.eat(EQ) {\n+        expressions::expr(p);\n+    }\n     p.expect(SEMI);\n }"}, {"sha": "824f1296c7b7f6e3db20fa1f9baec1af3777ed91", "filename": "src/grammar/items/mod.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Fmod.rs?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -240,7 +240,11 @@ fn fn_item(p: &mut Parser) {\n     // fn foo<T>() where T: Copy {}\n     type_params::where_clause(p);\n \n-    expressions::block(p);\n+    // test fn_decl\n+    // trait T { fn foo(); }\n+    if !p.eat(SEMI) {\n+        expressions::block(p);\n+    }\n }\n \n // test type_item\n@@ -255,12 +259,17 @@ fn type_item(p: &mut Parser) {\n     // type Result<T> = ();\n     type_params::type_param_list(p);\n \n+    if p.at(COLON) {\n+        type_params::bounds(p);\n+    }\n+\n     // test type_item_where_clause\n     // type Foo where Foo: Copy = ();\n     type_params::where_clause(p);\n \n-    p.expect(EQ);\n-    types::type_(p);\n+    if p.eat(EQ) {\n+        types::type_(p);\n+    }\n     p.expect(SEMI);\n }\n "}, {"sha": "0b9fb2b0b2af94e944b668855e857bb2584de8d4", "filename": "src/grammar/items/traits.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/src%2Fgrammar%2Fitems%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fitems%2Ftraits.rs?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -12,6 +12,16 @@ pub(super) fn trait_item(p: &mut Parser) {\n     }\n     type_params::where_clause(p);\n     p.expect(L_CURLY);\n+    // test trait_item_items\n+    // impl F {\n+    //     type A: Clone;\n+    //     const B: i32;\n+    //     fn foo() {}\n+    //     fn bar(&self);\n+    // }\n+    while !p.at(EOF) && !p.at(R_CURLY) {\n+        item_or_macro(p, true);\n+    }\n     p.expect(R_CURLY);\n }\n "}, {"sha": "a5ec3239f8fe2a060fbfbce7f86f192ae72a0f5a", "filename": "tests/data/parser/inline/0090_trait_item_items.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.rs?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -0,0 +1,6 @@\n+impl F {\n+    type A: Clone;\n+    const B: i32;\n+    fn foo() {}\n+    fn bar(&self);\n+}"}, {"sha": "2350bbe8268a64a67452996fb3e24ebb899b4a24", "filename": "tests/data/parser/inline/0090_trait_item_items.txt", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0090_trait_item_items.txt?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -0,0 +1,67 @@\n+FILE@[0; 83)\n+  IMPL_ITEM@[0; 82)\n+    IMPL_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    PATH_TYPE@[5; 6)\n+      PATH@[5; 6)\n+        PATH_SEGMENT@[5; 6)\n+          NAME_REF@[5; 6)\n+            IDENT@[5; 6) \"F\"\n+    WHITESPACE@[6; 7)\n+    L_CURLY@[7; 8)\n+    WHITESPACE@[8; 13)\n+    TYPE_ITEM@[13; 27)\n+      TYPE_KW@[13; 17)\n+      WHITESPACE@[17; 18)\n+      NAME@[18; 19)\n+        IDENT@[18; 19) \"A\"\n+      COLON@[19; 20)\n+      WHITESPACE@[20; 21)\n+      PATH@[21; 26)\n+        PATH_SEGMENT@[21; 26)\n+          NAME_REF@[21; 26)\n+            IDENT@[21; 26) \"Clone\"\n+      SEMI@[26; 27)\n+    WHITESPACE@[27; 32)\n+    CONST_ITEM@[32; 45)\n+      CONST_KW@[32; 37)\n+      WHITESPACE@[37; 38)\n+      NAME@[38; 39)\n+        IDENT@[38; 39) \"B\"\n+      COLON@[39; 40)\n+      WHITESPACE@[40; 41)\n+      PATH_TYPE@[41; 44)\n+        PATH@[41; 44)\n+          PATH_SEGMENT@[41; 44)\n+            NAME_REF@[41; 44)\n+              IDENT@[41; 44) \"i32\"\n+      SEMI@[44; 45)\n+    WHITESPACE@[45; 50)\n+    FN_ITEM@[50; 61)\n+      FN_KW@[50; 52)\n+      WHITESPACE@[52; 53)\n+      NAME@[53; 56)\n+        IDENT@[53; 56) \"foo\"\n+      PARAM_LIST@[56; 58)\n+        L_PAREN@[56; 57)\n+        R_PAREN@[57; 58)\n+      WHITESPACE@[58; 59)\n+      BLOCK_EXPR@[59; 61)\n+        L_CURLY@[59; 60)\n+        R_CURLY@[60; 61)\n+    WHITESPACE@[61; 66)\n+    FN_ITEM@[66; 80)\n+      FN_KW@[66; 68)\n+      WHITESPACE@[68; 69)\n+      NAME@[69; 72)\n+        IDENT@[69; 72) \"bar\"\n+      PARAM_LIST@[72; 79)\n+        L_PAREN@[72; 73)\n+        SELF_PARAM@[73; 78)\n+          AMP@[73; 74)\n+          SELF_KW@[74; 78)\n+        R_PAREN@[78; 79)\n+      SEMI@[79; 80)\n+    WHITESPACE@[80; 81)\n+    R_CURLY@[81; 82)\n+  WHITESPACE@[82; 83)"}, {"sha": "c9f74f7f5c842d196c401bfea78ebfeadbdd5386", "filename": "tests/data/parser/inline/0091_fn_decl.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.rs?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -0,0 +1 @@\n+trait T { fn foo(); }"}, {"sha": "e5e5bfc0851d69d55732497c871f62e49eed775c", "filename": "tests/data/parser/inline/0091_fn_decl.txt", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt", "raw_url": "https://github.com/rust-lang/rust/raw/64a65a4ff40e0c9b6d9453af79bba013afde2ffa/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0091_fn_decl.txt?ref=64a65a4ff40e0c9b6d9453af79bba013afde2ffa", "patch": "@@ -0,0 +1,21 @@\n+FILE@[0; 22)\n+  TRAIT_ITEM@[0; 21)\n+    TRAIT_KW@[0; 5)\n+    WHITESPACE@[5; 6)\n+    NAME@[6; 7)\n+      IDENT@[6; 7) \"T\"\n+    WHITESPACE@[7; 8)\n+    L_CURLY@[8; 9)\n+    WHITESPACE@[9; 10)\n+    FN_ITEM@[10; 19)\n+      FN_KW@[10; 12)\n+      WHITESPACE@[12; 13)\n+      NAME@[13; 16)\n+        IDENT@[13; 16) \"foo\"\n+      PARAM_LIST@[16; 18)\n+        L_PAREN@[16; 17)\n+        R_PAREN@[17; 18)\n+      SEMI@[18; 19)\n+    WHITESPACE@[19; 20)\n+    R_CURLY@[20; 21)\n+  WHITESPACE@[21; 22)"}]}