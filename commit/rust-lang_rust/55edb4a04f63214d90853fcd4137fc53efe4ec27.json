{"sha": "55edb4a04f63214d90853fcd4137fc53efe4ec27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZWRiNGEwNGY2MzIxNGQ5MDg1M2ZjZDQxMzdmYzUzZWZlNGVjMjc=", "commit": {"author": {"name": "Austin Seipp", "email": "as@hacks.yi.org", "date": "2012-01-10T01:32:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-10T03:27:06Z"}, "message": "Replace all occurrences of 'when' with 'if' in documentation and tutorial.\n\nAlso update the naturaldocs keywords file.\n\nCloses #1396", "tree": {"sha": "d5ca8f3e97885c58e0b5adf06d4f6eee10a4ad4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5ca8f3e97885c58e0b5adf06d4f6eee10a4ad4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55edb4a04f63214d90853fcd4137fc53efe4ec27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55edb4a04f63214d90853fcd4137fc53efe4ec27", "html_url": "https://github.com/rust-lang/rust/commit/55edb4a04f63214d90853fcd4137fc53efe4ec27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55edb4a04f63214d90853fcd4137fc53efe4ec27/comments", "author": null, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "070b1c833375f9b76645e1254c31074e96116619", "url": "https://api.github.com/repos/rust-lang/rust/commits/070b1c833375f9b76645e1254c31074e96116619", "html_url": "https://github.com/rust-lang/rust/commit/070b1c833375f9b76645e1254c31074e96116619"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "de138eb2a105b735d3243d9c53d069301254722d", "filename": "doc/keywords.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Fkeywords.txt", "raw_url": "https://github.com/rust-lang/rust/raw/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Fkeywords.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fkeywords.txt?ref=55edb4a04f63214d90853fcd4137fc53efe4ec27", "patch": "@@ -17,4 +17,4 @@ self str syntax\n tag true type\n u16 u32 u64 u8 uint unchecked unsafe use\n vec\n-when while with\n+while with"}, {"sha": "0ed7748c1f9e387cdb2f7588a3abd6fc5fa010f0", "filename": "doc/rust.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=55edb4a04f63214d90853fcd4137fc53efe4ec27", "patch": "@@ -3331,12 +3331,12 @@ let message = alt x @{\n \n Finally, alt patterns can accept @emph{pattern guards} to further refine the\n criteria for matching a case. Pattern guards appear after the pattern and\n-consist of a bool-typed expression following the @emph{when} keyword. A pattern\n+consist of a bool-typed expression following the @emph{if} keyword. A pattern\n guard may refer to the variables bound within the pattern they follow.\n \n @example\n let message = alt maybe_digit @{\n-  some(x) when x < 10 @{ process_digit(x) @}\n+  some(x) if x < 10 @{ process_digit(x) @}\n   some(x) @{ process_other(x) @}\n @}\n @end example"}, {"sha": "fc89218b75152fe74bb393b3a19fceb2db5fdb4a", "filename": "doc/tutorial/control.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Ftutorial%2Fcontrol.md", "raw_url": "https://github.com/rust-lang/rust/raw/55edb4a04f63214d90853fcd4137fc53efe4ec27/doc%2Ftutorial%2Fcontrol.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fcontrol.md?ref=55edb4a04f63214d90853fcd4137fc53efe4ec27", "patch": "@@ -67,7 +67,7 @@ that `(float, float)` is a tuple of two floats:\n \n     fn angle(vec: (float, float)) -> float {\n         alt vec {\n-          (0f, y) when y < 0f { 1.5 * std::math::pi }\n+          (0f, y) if y < 0f { 1.5 * std::math::pi }\n           (0f, y) { 0.5 * std::math::pi }\n           (x, y) { std::math::atan(y / x) }\n         }"}]}