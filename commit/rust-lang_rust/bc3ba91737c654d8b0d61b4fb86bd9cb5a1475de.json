{"sha": "bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjM2JhOTE3MzdjNjU0ZDhiMGQ2MWI0ZmI4NmJkOWNiNWExNDc1ZGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T08:20:06Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-05-24T18:49:38Z"}, "message": "Printing a fn definition needs to know nothing about its ZST's value", "tree": {"sha": "b0a5b111c43f7d2ab9f032b394b5d5fe812e668d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a5b111c43f7d2ab9f032b394b5d5fe812e668d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de", "html_url": "https://github.com/rust-lang/rust/commit/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09a996b0a66e48a02f31d58dfce22a328969791d", "url": "https://api.github.com/repos/rust-lang/rust/commits/09a996b0a66e48a02f31d58dfce22a328969791d", "html_url": "https://github.com/rust-lang/rust/commit/09a996b0a66e48a02f31d58dfce22a328969791d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3b9cda509b984ae1d0be3cfec5f13222f6ddd6cf", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=bc3ba91737c654d8b0d61b4fb86bd9cb5a1475de", "patch": "@@ -1916,7 +1916,7 @@ pub fn print_miri_value<W: Write>(value: Value, ty: Ty, f: &mut W) -> fmt::Resul\n         },\n         (Value::Scalar(Scalar::Bits { bits, .. }), &TyChar) =>\n             write!(f, \"{:?}\", ::std::char::from_u32(bits as u32).unwrap()),\n-        (Value::Scalar(Scalar::Bits { .. }), &TyFnDef(did, _)) =>\n+        (_, &TyFnDef(did, _)) =>\n             write!(f, \"{}\", item_path_str(did)),\n         (Value::ScalarPair(Scalar::Ptr(ptr), Scalar::Bits { bits: len, .. }),\n          &TyRef(_, &ty::TyS { sty: TyStr, .. }, _)) => {"}]}