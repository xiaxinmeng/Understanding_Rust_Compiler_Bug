{"sha": "c9a0be27ac798936c2ff40d2875c696e48b34e62", "node_id": "C_kwDOAAsO6NoAKGM5YTBiZTI3YWM3OTg5MzZjMmZmNDBkMjg3NWM2OTZlNDhiMzRlNjI", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-03T07:17:48Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-29T12:01:46Z"}, "message": "Change ABI order in is_stable", "tree": {"sha": "3a95ecd1f599d23c82e5bf629ca37f972cc39f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a95ecd1f599d23c82e5bf629ca37f972cc39f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9a0be27ac798936c2ff40d2875c696e48b34e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9a0be27ac798936c2ff40d2875c696e48b34e62", "html_url": "https://github.com/rust-lang/rust/commit/c9a0be27ac798936c2ff40d2875c696e48b34e62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9a0be27ac798936c2ff40d2875c696e48b34e62/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de492a3894819e13b0afcb330658ede2d3061ec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/de492a3894819e13b0afcb330658ede2d3061ec5", "html_url": "https://github.com/rust-lang/rust/commit/de492a3894819e13b0afcb330658ede2d3061ec5"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "eb3f66ac308dd0080a00a980634059cff7207c47", "filename": "compiler/rustc_target/src/spec/abi.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c9a0be27ac798936c2ff40d2875c696e48b34e62/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9a0be27ac798936c2ff40d2875c696e48b34e62/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fabi.rs?ref=c9a0be27ac798936c2ff40d2875c696e48b34e62", "patch": "@@ -148,10 +148,9 @@ pub fn is_enabled(\n pub fn is_stable(name: &str) -> Result<(), AbiDisabled> {\n     match name {\n         // Stable\n-        \"Rust\" | \"C\" | \"cdecl\" | \"stdcall\" | \"fastcall\" | \"aapcs\" | \"win64\" | \"sysv64\"\n-        | \"system\" | \"efiapi\" | \"C-unwind\" | \"cdecl-unwind\" | \"stdcall-unwind\"\n-        | \"fastcall-unwind\" | \"aapcs-unwind\" | \"win64-unwind\" | \"sysv64-unwind\"\n-        | \"system-unwind\" => Ok(()),\n+        \"Rust\" | \"C\" | \"C-unwind\" | \"cdecl\" | \"cdecl-unwind\" | \"stdcall\" | \"stdcall-unwind\"\n+        | \"fastcall\" | \"fastcall-unwind\" | \"aapcs\" | \"aapcs-unwind\" | \"win64\" | \"win64-unwind\"\n+        | \"sysv64\" | \"sysv64-unwind\" | \"system\" | \"system-unwind\" | \"efiapi\" => Ok(()),\n         \"rust-intrinsic\" => Err(AbiDisabled::Unstable {\n             feature: sym::intrinsics,\n             explain: \"intrinsics are subject to change\",\n@@ -164,10 +163,18 @@ pub fn is_stable(name: &str) -> Result<(), AbiDisabled> {\n             feature: sym::abi_vectorcall,\n             explain: \"vectorcall is experimental and subject to change\",\n         }),\n+        \"vectorcall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_vectorcall,\n+            explain: \"vectorcall-unwind ABI is experimental and subject to change\",\n+        }),\n         \"thiscall\" => Err(AbiDisabled::Unstable {\n             feature: sym::abi_thiscall,\n             explain: \"thiscall is experimental and subject to change\",\n         }),\n+        \"thiscall-unwind\" => Err(AbiDisabled::Unstable {\n+            feature: sym::abi_thiscall,\n+            explain: \"thiscall-unwind ABI is experimental and subject to change\",\n+        }),\n         \"rust-call\" => Err(AbiDisabled::Unstable {\n             feature: sym::unboxed_closures,\n             explain: \"rust-call ABI is subject to change\",\n@@ -204,14 +211,6 @@ pub fn is_stable(name: &str) -> Result<(), AbiDisabled> {\n             feature: sym::abi_c_cmse_nonsecure_call,\n             explain: \"C-cmse-nonsecure-call ABI is experimental and subject to change\",\n         }),\n-        \"thiscall-unwind\" => Err(AbiDisabled::Unstable {\n-            feature: sym::abi_thiscall,\n-            explain: \"thiscall-unwind ABI is experimental and subject to change\",\n-        }),\n-        \"vectorcall-unwind\" => Err(AbiDisabled::Unstable {\n-            feature: sym::abi_vectorcall,\n-            explain: \"vectorcall-unwind ABI is experimental and subject to change\",\n-        }),\n         \"wasm\" => Err(AbiDisabled::Unstable {\n             feature: sym::wasm_abi,\n             explain: \"wasm ABI is experimental and subject to change\","}]}