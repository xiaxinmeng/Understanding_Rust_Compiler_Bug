{"sha": "e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "node_id": "C_kwDOAAsO6NoAKGU5OWY2ZmVlNDQxZGZhNzFkNThiMzdhMTAzNjZiZjhjNWM5ZDUyYWM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-24T19:22:01Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-09-25T23:03:15Z"}, "message": "Only lower async fn body if it actually has a body", "tree": {"sha": "b0a5cfe5ae035c3601e8c6ae3fc5a19e7a2fda26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a5cfe5ae035c3601e8c6ae3fc5a19e7a2fda26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "html_url": "https://github.com/rust-lang/rust/commit/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "730ead80479d98de5cc1b555c558b5b0176fded8", "url": "https://api.github.com/repos/rust-lang/rust/commits/730ead80479d98de5cc1b555c558b5b0176fded8", "html_url": "https://github.com/rust-lang/rust/commit/730ead80479d98de5cc1b555c558b5b0176fded8"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "d9b18d68e537f3b2250da035f28030fade1f8cf9", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99f6fee441dfa71d58b37a10366bf8c5c9d52ac/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=e99f6fee441dfa71d58b37a10366bf8c5c9d52ac", "patch": "@@ -1055,9 +1055,9 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         asyncness: Async,\n         body: Option<&Block>,\n     ) -> hir::BodyId {\n-        let closure_id = match asyncness {\n-            Async::Yes { closure_id, .. } => closure_id,\n-            Async::No => return self.lower_fn_body_block(span, decl, body),\n+        let (closure_id, body) = match (asyncness, body) {\n+            (Async::Yes { closure_id, .. }, Some(body)) => (closure_id, body),\n+            _ => return self.lower_fn_body_block(span, decl, body),\n         };\n \n         self.lower_body(|this| {\n@@ -1199,16 +1199,15 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 parameters.push(new_parameter);\n             }\n \n-            let body_span = body.map_or(span, |b| b.span);\n             let async_expr = this.make_async_expr(\n                 CaptureBy::Value,\n                 closure_id,\n                 None,\n-                body_span,\n+                body.span,\n                 hir::AsyncGeneratorKind::Fn,\n                 |this| {\n                     // Create a block from the user's function body:\n-                    let user_body = this.lower_block_expr_opt(body_span, body);\n+                    let user_body = this.lower_block_expr(body);\n \n                     // Transform into `drop-temps { <user-body> }`, an expression:\n                     let desugared_span =\n@@ -1240,7 +1239,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n \n             (\n                 this.arena.alloc_from_iter(parameters),\n-                this.expr(body_span, async_expr, AttrVec::new()),\n+                this.expr(body.span, async_expr, AttrVec::new()),\n             )\n         })\n     }"}]}