{"sha": "63dc7da703759dd53536dd18a42ff65f39a2f9b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZGM3ZGE3MDM3NTlkZDUzNTM2ZGQxOGE0MmZmNjVmMzlhMmY5YjQ=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-09T13:44:18Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-06-09T13:44:57Z"}, "message": "Use char byte calculation using existing iterator", "tree": {"sha": "30aa9276af2a5809654ca43b5fb87f0475b66516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30aa9276af2a5809654ca43b5fb87f0475b66516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63dc7da703759dd53536dd18a42ff65f39a2f9b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63dc7da703759dd53536dd18a42ff65f39a2f9b4", "html_url": "https://github.com/rust-lang/rust/commit/63dc7da703759dd53536dd18a42ff65f39a2f9b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63dc7da703759dd53536dd18a42ff65f39a2f9b4/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "735ac057bb94d179c81afcd0f3e63bc6e6856734", "url": "https://api.github.com/repos/rust-lang/rust/commits/735ac057bb94d179c81afcd0f3e63bc6e6856734", "html_url": "https://github.com/rust-lang/rust/commit/735ac057bb94d179c81afcd0f3e63bc6e6856734"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "e816aa0271cf6b5020682f7947184fafb90dd4b4", "filename": "src/libsyntax/parse/unescape.rs", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/63dc7da703759dd53536dd18a42ff65f39a2f9b4/src%2Flibsyntax%2Fparse%2Funescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63dc7da703759dd53536dd18a42ff65f39a2f9b4/src%2Flibsyntax%2Fparse%2Funescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Funescape.rs?ref=63dc7da703759dd53536dd18a42ff65f39a2f9b4", "patch": "@@ -287,24 +287,26 @@ fn unescape_raw_str_or_byte_str<F>(literal_text: &str, mode: Mode, callback: &mu\n where\n     F: FnMut(Range<usize>, Result<char, EscapeError>),\n {\n-    let mut byte_offset: usize = 0;\n+    assert!(mode.in_double_quotes());\n+    let initial_len = literal_text.len();\n \n-    let mut chars = literal_text.chars().peekable();\n+    let mut chars = literal_text.chars();\n     while let Some(curr) = chars.next() {\n-        let (result, scanned) = match (curr, chars.peek()) {\n+        let start = initial_len - chars.as_str().len() - curr.len_utf8();\n+\n+        let result = match (curr, chars.clone().next()) {\n             ('\\r', Some('\\n')) => {\n                 chars.next();\n-                (Ok('\\n'), [Some('\\r'), Some('\\n')])\n+                Ok('\\n')\n             },\n-            ('\\r', _) =>\n-                (Err(EscapeError::BareCarriageReturn), [Some('\\r'), None]),\n+            ('\\r', _) => Err(EscapeError::BareCarriageReturn),\n             (c, _) if mode.is_bytes() && !c.is_ascii() =>\n-                (Err(EscapeError::NonAsciiCharInByteString), [Some(c), None]),\n-            (c, _) => (Ok(c), [Some(c), None]),\n+                Err(EscapeError::NonAsciiCharInByteString),\n+            (c, _) => Ok(c),\n         };\n-        let len_utf8: usize = scanned.iter().filter_map(|&x| x).map(char::len_utf8).sum();\n-        callback(byte_offset..(byte_offset + len_utf8), result);\n-        byte_offset += len_utf8;\n+        let end = initial_len - chars.as_str().len();\n+\n+        callback(start..end, result);\n     }\n }\n "}]}