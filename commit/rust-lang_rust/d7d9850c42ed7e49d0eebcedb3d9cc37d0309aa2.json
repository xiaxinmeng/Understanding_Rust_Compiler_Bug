{"sha": "d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZDk4NTBjNDJlZDdlNDlkMGVlYmNlZGIzZDljYzM3ZDAzMDlhYTI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-18T09:13:46Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-02-19T03:52:40Z"}, "message": "Do not inspect code for issues or todos when not required", "tree": {"sha": "dfb189da963fcb252e7770753f108ad951625b40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfb189da963fcb252e7770753f108ad951625b40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "html_url": "https://github.com/rust-lang/rust/commit/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80bf3da17d010cf8ac3e2e9e500d3c1f2d231d7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/80bf3da17d010cf8ac3e2e9e500d3c1f2d231d7d", "html_url": "https://github.com/rust-lang/rust/commit/80bf3da17d010cf8ac3e2e9e500d3c1f2d231d7d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fc04c1331972e3c9c5b777d92e78c84b5123efc3", "filename": "rustfmt-core/src/issues.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2/rustfmt-core%2Fsrc%2Fissues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2/rustfmt-core%2Fsrc%2Fissues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustfmt-core%2Fsrc%2Fissues.rs?ref=d7d9850c42ed7e49d0eebcedb3d9cc37d0309aa2", "patch": "@@ -93,9 +93,17 @@ impl BadIssueSeeker {\n         }\n     }\n \n+    fn is_disabled(&self) -> bool {\n+        !is_enabled(self.report_todo) && !is_enabled(self.report_fixme)\n+    }\n+\n     // Check whether or not the current char is conclusive evidence for an\n     // unnumbered TO-DO or FIX-ME.\n     pub fn inspect(&mut self, c: char) -> Option<Issue> {\n+        if self.is_disabled() {\n+            return None;\n+        }\n+\n         match self.state {\n             Seeking::Issue {\n                 todo_idx,"}]}