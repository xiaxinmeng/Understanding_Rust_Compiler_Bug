{"sha": "72667b58b8b262055c3f0a7146974c7a22d83b37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNjY3YjU4YjhiMjYyMDU1YzNmMGE3MTQ2OTc0YzdhMjJkODNiMzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-18T07:16:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-18T07:16:35Z"}, "message": "Auto merge of #1346 - RalfJung:dyn-layout-test, r=RalfJung\n\nTest that we enforce dynamic layout properties (not just static ones of sized prefix)", "tree": {"sha": "e0212bfc38c4b87c1da1ca34119120ed2bc8a108", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0212bfc38c4b87c1da1ca34119120ed2bc8a108"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72667b58b8b262055c3f0a7146974c7a22d83b37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72667b58b8b262055c3f0a7146974c7a22d83b37", "html_url": "https://github.com/rust-lang/rust/commit/72667b58b8b262055c3f0a7146974c7a22d83b37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72667b58b8b262055c3f0a7146974c7a22d83b37/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "216e686cc6f441a35f2bb3b12257b65381d6c663", "url": "https://api.github.com/repos/rust-lang/rust/commits/216e686cc6f441a35f2bb3b12257b65381d6c663", "html_url": "https://github.com/rust-lang/rust/commit/216e686cc6f441a35f2bb3b12257b65381d6c663"}, {"sha": "0345ee42da3a206e92cecd42b0b472b82552af95", "url": "https://api.github.com/repos/rust-lang/rust/commits/0345ee42da3a206e92cecd42b0b472b82552af95", "html_url": "https://github.com/rust-lang/rust/commit/0345ee42da3a206e92cecd42b0b472b82552af95"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "39a091387c6c26948a490e330fab6dc7d08f5ff2", "filename": "tests/compile-fail/dangling_pointers/dyn_size.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Fdangling_pointers%2Fdyn_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Fdangling_pointers%2Fdyn_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fdyn_size.rs?ref=72667b58b8b262055c3f0a7146974c7a22d83b37", "patch": "@@ -0,0 +1,13 @@\n+// should find the bug even without these, but gets masked by optimizations\n+// compile-flags: -Zmiri-disable-validation -Zmiri-disable-stacked-borrows -Zmir-opt-level=0\n+\n+struct SliceWithHead(u8, [u8]);\n+\n+fn main() {\n+    let buf = [0u32; 1];\n+    // We craft a wide pointer `*const SliceWithHead` such that the unsized tail is only partially allocated.\n+    // That should be UB, as the reference is not fully dereferencable.\n+    let ptr: *const SliceWithHead = unsafe { std::mem::transmute((&buf, 4usize)) };\n+    // Re-borrow that. This should be UB.\n+    let _ptr = unsafe { &*ptr }; //~ ERROR pointer must be in-bounds at offset 5\n+}"}, {"sha": "aa293a5d2167b57a9d5919513c77dfce661ac5e8", "filename": "tests/compile-fail/unaligned_pointers/dyn_alignment.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Funaligned_pointers%2Fdyn_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Funaligned_pointers%2Fdyn_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Fdyn_alignment.rs?ref=72667b58b8b262055c3f0a7146974c7a22d83b37", "patch": "@@ -0,0 +1,19 @@\n+// should find the bug even without these, but gets masked by optimizations\n+// compile-flags: -Zmiri-disable-validation -Zmiri-disable-stacked-borrows -Zmir-opt-level=0\n+\n+#[repr(align(256))]\n+#[derive(Debug)]\n+struct MuchAlign;\n+\n+fn main() {\n+    let buf = [0u32; 256];\n+    // `buf` is sufficiently aligned for `layout.align` on a `dyn Debug`, but not\n+    // for the actual alignment required by `MuchAlign`.\n+    // We craft a wide reference `&dyn Debug` with the vtable for `MuchAlign`. That should be UB,\n+    // as the reference is not aligned to its dynamic alignment requirements.\n+    let mut ptr = &MuchAlign as &dyn std::fmt::Debug;\n+    // Overwrite the data part of `ptr` so it points to `buf`.\n+    unsafe { (&mut ptr as *mut _ as *mut *const u8).write(&buf as *const _ as *const u8); }\n+    // Re-borrow that. This should be UB.\n+    let _ptr = &*ptr; //~ ERROR accessing memory with alignment 4, but alignment 256 is required\n+}"}, {"sha": "8ff19a2b4386527e5b083e6e8dbf8b2b79ca3ad0", "filename": "tests/compile-fail/validity/nonzero.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Fvalidity%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72667b58b8b262055c3f0a7146974c7a22d83b37/tests%2Fcompile-fail%2Fvalidity%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fvalidity%2Fnonzero.rs?ref=72667b58b8b262055c3f0a7146974c7a22d83b37", "patch": "@@ -1,4 +1,5 @@\n-// compile-flags: -Zmir-opt-level=1\n+// gets masked by optimizations\n+// compile-flags: -Zmir-opt-level=0\n #![feature(rustc_attrs)]\n #![allow(unused_attributes)]\n "}]}