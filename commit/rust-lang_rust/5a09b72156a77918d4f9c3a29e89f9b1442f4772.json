{"sha": "5a09b72156a77918d4f9c3a29e89f9b1442f4772", "node_id": "C_kwDOAAsO6NoAKDVhMDliNzIxNTZhNzc5MThkNGY5YzNhMjllODlmOWIxNDQyZjQ3NzI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-10T08:13:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-10T08:13:42Z"}, "message": "Rollup merge of #102853 - cjgillot:skip-opaque-cast, r=jackh726\n\nSkip chained OpaqueCast when building captures.\n\nFixes https://github.com/rust-lang/rust/issues/102089", "tree": {"sha": "99559ce556dd9b6d2870d53a9bc17572b34c36b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99559ce556dd9b6d2870d53a9bc17572b34c36b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a09b72156a77918d4f9c3a29e89f9b1442f4772", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjQ9Q2CRBK7hj4Ov3rIwAA3QcIAFAN9y8higTYbpfUXv471YDx\nx7ACNfNcKNLBuECoreJLX3fBVJDYvRRO4hMfpFp25Dbqu8Q00yVTvKek2/7Uj55G\niWwAvsuAiYtO8uoJ6puyaWho4+JIcRlCHL4SM3GzxrexpRzSnwVg0T932R7mHdTO\nvUJvQjcAnNWcgCnT/z7LUpA6WoXhBXsmSEaBpS4AJEXYnDWfRBw8VnJaZfoHZm7k\nmiKU3Wmjc0cPrlQRdP87Qylpc48U34m5tHM46y6kGsftenyE4EMXC2iN02HI+F1d\n3v1pbJprp8MzMppkbezIU1EZJaAhednJ4s6QAs/B6uHWWaTUG4chLPLpofaJKx4=\n=GQGL\n-----END PGP SIGNATURE-----\n", "payload": "tree 99559ce556dd9b6d2870d53a9bc17572b34c36b9\nparent 302bf31826cdbbbe9a8ed9e0c4c7149d9010bfdd\nparent e828ce53b9c9fdcf40d78aed75caf866309a621e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665389622 +0530\ncommitter GitHub <noreply@github.com> 1665389622 +0530\n\nRollup merge of #102853 - cjgillot:skip-opaque-cast, r=jackh726\n\nSkip chained OpaqueCast when building captures.\n\nFixes https://github.com/rust-lang/rust/issues/102089\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a09b72156a77918d4f9c3a29e89f9b1442f4772", "html_url": "https://github.com/rust-lang/rust/commit/5a09b72156a77918d4f9c3a29e89f9b1442f4772", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a09b72156a77918d4f9c3a29e89f9b1442f4772/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "302bf31826cdbbbe9a8ed9e0c4c7149d9010bfdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/302bf31826cdbbbe9a8ed9e0c4c7149d9010bfdd", "html_url": "https://github.com/rust-lang/rust/commit/302bf31826cdbbbe9a8ed9e0c4c7149d9010bfdd"}, {"sha": "e828ce53b9c9fdcf40d78aed75caf866309a621e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e828ce53b9c9fdcf40d78aed75caf866309a621e", "html_url": "https://github.com/rust-lang/rust/commit/e828ce53b9c9fdcf40d78aed75caf866309a621e"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "396782d45d2891277e0d233afc149db6a693d35f", "filename": "compiler/rustc_mir_build/src/build/expr/as_place.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5a09b72156a77918d4f9c3a29e89f9b1442f4772/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a09b72156a77918d4f9c3a29e89f9b1442f4772/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_place.rs?ref=5a09b72156a77918d4f9c3a29e89f9b1442f4772", "patch": "@@ -17,6 +17,7 @@ use rustc_target::abi::VariantIdx;\n \n use rustc_index::vec::Idx;\n \n+use std::assert_matches::assert_matches;\n use std::iter;\n \n /// The \"outermost\" place that holds this value.\n@@ -232,22 +233,20 @@ fn strip_prefix<'tcx>(\n     projections: Vec<PlaceElem<'tcx>>,\n     prefix_projections: &[HirProjection<'tcx>],\n ) -> impl Iterator<Item = PlaceElem<'tcx>> {\n-    let mut iter = projections.into_iter();\n-    let mut next = || match iter.next()? {\n+    let mut iter = projections\n+        .into_iter()\n         // Filter out opaque casts, they are unnecessary in the prefix.\n-        ProjectionElem::OpaqueCast(..) => iter.next(),\n-        other => Some(other),\n-    };\n+        .filter(|elem| !matches!(elem, ProjectionElem::OpaqueCast(..)));\n     for projection in prefix_projections {\n         match projection.kind {\n             HirProjectionKind::Deref => {\n-                assert!(matches!(next(), Some(ProjectionElem::Deref)));\n+                assert_matches!(iter.next(), Some(ProjectionElem::Deref));\n             }\n             HirProjectionKind::Field(..) => {\n                 if base_ty.is_enum() {\n-                    assert!(matches!(next(), Some(ProjectionElem::Downcast(..))));\n+                    assert_matches!(iter.next(), Some(ProjectionElem::Downcast(..)));\n                 }\n-                assert!(matches!(next(), Some(ProjectionElem::Field(..))));\n+                assert_matches!(iter.next(), Some(ProjectionElem::Field(..)));\n             }\n             HirProjectionKind::Index | HirProjectionKind::Subslice => {\n                 bug!(\"unexpected projection kind: {:?}\", projection);"}, {"sha": "b53bd3d0710a6ad15c242d60d1d0633203aa3773", "filename": "compiler/rustc_mir_build/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a09b72156a77918d4f9c3a29e89f9b1442f4772/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a09b72156a77918d4f9c3a29e89f9b1442f4772/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Flib.rs?ref=5a09b72156a77918d4f9c3a29e89f9b1442f4772", "patch": "@@ -2,6 +2,7 @@\n //!\n //! This crate also contains the match exhaustiveness and usefulness checking.\n #![allow(rustc::potential_query_instability)]\n+#![feature(assert_matches)]\n #![feature(box_patterns)]\n #![feature(control_flow_enum)]\n #![feature(if_let_guard)]"}, {"sha": "043bf06a1f521633faa266f71d3dc9c5d3704458", "filename": "src/test/ui/closures/issue-102089-multiple-opaque-cast.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a09b72156a77918d4f9c3a29e89f9b1442f4772/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a09b72156a77918d4f9c3a29e89f9b1442f4772/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fissue-102089-multiple-opaque-cast.rs?ref=5a09b72156a77918d4f9c3a29e89f9b1442f4772", "patch": "@@ -0,0 +1,17 @@\n+// edition:2021\n+// check-pass\n+\n+pub struct Example<'a, T> {\n+  a: T,\n+  b: &'a T,\n+}\n+\n+impl<'a, T> Example<'a, T> {\n+  pub fn error_trying_to_destructure_self_in_closure(self) {\n+    let closure = || {\n+      let Self { a, b } = self;\n+    };\n+  }\n+}\n+\n+fn main() {}"}]}