{"sha": "f9fa3fe65f561001535b069ed1f55c202758588c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmEzZmU2NWY1NjEwMDE1MzViMDY5ZWQxZjU1YzIwMjc1ODU4OGM=", "commit": {"author": {"name": "Arpad Borsos", "email": "arpad.borsos@googlemail.com", "date": "2020-12-20T09:00:32Z"}, "committer": {"name": "Arpad Borsos", "email": "arpad.borsos@googlemail.com", "date": "2020-12-20T09:43:26Z"}, "message": "add an attribute to inner doctest fn", "tree": {"sha": "7c62bf23309c4483e4decb23a420f7741a7975a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c62bf23309c4483e4decb23a420f7741a7975a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9fa3fe65f561001535b069ed1f55c202758588c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fa3fe65f561001535b069ed1f55c202758588c", "html_url": "https://github.com/rust-lang/rust/commit/f9fa3fe65f561001535b069ed1f55c202758588c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9fa3fe65f561001535b069ed1f55c202758588c/comments", "author": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Swatinem", "id": 580492, "node_id": "MDQ6VXNlcjU4MDQ5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/580492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Swatinem", "html_url": "https://github.com/Swatinem", "followers_url": "https://api.github.com/users/Swatinem/followers", "following_url": "https://api.github.com/users/Swatinem/following{/other_user}", "gists_url": "https://api.github.com/users/Swatinem/gists{/gist_id}", "starred_url": "https://api.github.com/users/Swatinem/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Swatinem/subscriptions", "organizations_url": "https://api.github.com/users/Swatinem/orgs", "repos_url": "https://api.github.com/users/Swatinem/repos", "events_url": "https://api.github.com/users/Swatinem/events{/privacy}", "received_events_url": "https://api.github.com/users/Swatinem/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "830ceaa41908bd428e36b1a804dd93c9a257aea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/830ceaa41908bd428e36b1a804dd93c9a257aea8", "html_url": "https://github.com/rust-lang/rust/commit/830ceaa41908bd428e36b1a804dd93c9a257aea8"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "7313c761eae8c7a66e397c1d4dcc51340f031c49", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f9fa3fe65f561001535b069ed1f55c202758588c/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fa3fe65f561001535b069ed1f55c202758588c/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=f9fa3fe65f561001535b069ed1f55c202758588c", "patch": "@@ -551,17 +551,18 @@ crate fn make_test(\n         } else {\n             \"_inner\".into()\n         };\n+        let inner_attr = if test_id.is_some() { \"#[allow(non_snake_case)] \" } else { \"\" };\n         let (main_pre, main_post) = if returns_result {\n             (\n                 format!(\n-                    \"fn main() {{ fn {}() -> Result<(), impl core::fmt::Debug> {{\\n\",\n-                    inner_fn_name\n+                    \"fn main() {{ {}fn {}() -> Result<(), impl core::fmt::Debug> {{\\n\",\n+                    inner_attr, inner_fn_name\n                 ),\n                 format!(\"\\n}}; {}().unwrap() }}\", inner_fn_name),\n             )\n         } else if test_id.is_some() {\n             (\n-                format!(\"fn main() {{ fn {}() {{\\n\", inner_fn_name),\n+                format!(\"fn main() {{ {}fn {}() {{\\n\", inner_attr, inner_fn_name),\n                 format!(\"\\n}}; {}() }}\", inner_fn_name),\n             )\n         } else {"}, {"sha": "1aea85e99708a349e6e691460be3c666d02f012b", "filename": "src/librustdoc/doctest/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f9fa3fe65f561001535b069ed1f55c202758588c/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fa3fe65f561001535b069ed1f55c202758588c/src%2Flibrustdoc%2Fdoctest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest%2Ftests.rs?ref=f9fa3fe65f561001535b069ed1f55c202758588c", "patch": "@@ -304,11 +304,11 @@ fn make_test_named_wrapper() {\n     let opts = TestOptions::default();\n     let input = \"assert_eq!(2+2, 4);\";\n     let expected = \"#![allow(unused)]\n-fn main() { fn _doctest_main_some_unique_name() {\n+fn main() { #[allow(non_snake_case)] fn _doctest_main__some_unique_name() {\n assert_eq!(2+2, 4);\n-}; _doctest_main_some_unique_name() }\"\n+}; _doctest_main__some_unique_name() }\"\n         .to_string();\n     let (output, len, _) =\n-        make_test(input, None, false, &opts, DEFAULT_EDITION, Some(\"some_unique_name\"));\n+        make_test(input, None, false, &opts, DEFAULT_EDITION, Some(\"_some_unique_name\"));\n     assert_eq!((output, len), (expected, 2));\n }"}]}