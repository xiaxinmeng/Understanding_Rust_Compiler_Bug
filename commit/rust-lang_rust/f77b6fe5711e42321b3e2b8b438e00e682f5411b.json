{"sha": "f77b6fe5711e42321b3e2b8b438e00e682f5411b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3N2I2ZmU1NzExZTQyMzIxYjNlMmI4YjQzOGUwMGU2ODJmNTQxMWI=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-07-01T17:05:51Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2020-07-01T17:05:56Z"}, "message": "Review fix", "tree": {"sha": "6cd018dc72ca970bf0f21dc9e78e136402f49762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cd018dc72ca970bf0f21dc9e78e136402f49762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f77b6fe5711e42321b3e2b8b438e00e682f5411b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f77b6fe5711e42321b3e2b8b438e00e682f5411b", "html_url": "https://github.com/rust-lang/rust/commit/f77b6fe5711e42321b3e2b8b438e00e682f5411b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f77b6fe5711e42321b3e2b8b438e00e682f5411b/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5427d3bf7c38df0c37597272bf34c6710cab3c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/5427d3bf7c38df0c37597272bf34c6710cab3c52", "html_url": "https://github.com/rust-lang/rust/commit/5427d3bf7c38df0c37597272bf34c6710cab3c52"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f94a51feca3b8571d8efe772ad410578480c83bf", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f77b6fe5711e42321b3e2b8b438e00e682f5411b/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f77b6fe5711e42321b3e2b8b438e00e682f5411b/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=f77b6fe5711e42321b3e2b8b438e00e682f5411b", "patch": "@@ -294,7 +294,7 @@ pub trait PrettyPrinter<'tcx>:\n                             true,\n                         ));\n                     }\n-                    (ExternCrateSource::Path, LOCAL_CRATE) if self.tcx().sess.rust_2018() => {\n+                    (ExternCrateSource::Path, LOCAL_CRATE) => {\n                         debug!(\"try_print_visible_def_path: def_id={:?}\", def_id);\n                         return Ok((self.path_crate(cnum)?, true));\n                     }"}]}