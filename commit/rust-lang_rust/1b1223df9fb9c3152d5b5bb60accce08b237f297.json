{"sha": "1b1223df9fb9c3152d5b5bb60accce08b237f297", "node_id": "C_kwDOAAsO6NoAKDFiMTIyM2RmOWZiOWMzMTUyZDViNWJiNjBhY2NjZTA4YjIzN2YyOTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-11T16:59:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-11T16:59:49Z"}, "message": "Rollup merge of #102685 - nbdd0121:unwind, r=m-ou-se\n\nInterpret EH actions properly\n\nThe EH actions stored in the LSDA follows the format of GCC except table (even for LLVM-generated code). An missing action in the table is the encoding for `Terminate`, see https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/libsupc%2B%2B/eh_personality.cc#L522-L526.\n\nThe currently code interprets it as `None`, as a workaround for #35011, an issue that seems to occur in LLVM 3.7 and not after 3.9. These are very old versions of LLVM and we don't support them anymore, so remove this workaround and interpret them properly.\n\nNote that LLVM currently does not emit any `Terminate` actions, but GCC does. Although GCC backend currently doesn't do unwinding, removing it preemptively would prevent future developers from wasting time to figure out what's wrong.\n\n``@rustbot`` label: +T-compiler", "tree": {"sha": "8c87f92ea2696550fbc2764da921c9dfae30fb40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c87f92ea2696550fbc2764da921c9dfae30fb40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b1223df9fb9c3152d5b5bb60accce08b237f297", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjRaEFCRBK7hj4Ov3rIwAAAA0IAIZsRRCrB1aBUhDyfHmStSOa\nwviOnZp2D3aE+LYJfiWQuIu3FBtukwCo5EkP8904GO0fNL9NwyZf31JDCwkKa+Oq\n5HRsRotZ8NgyNqxY2cUq1l/3X5Ctj1lesVFRlCZY9ZLyL2XRxpBhdU/U/uRXDRgz\nOVlWHCFrYh7daif9/UOhXfnpqXrKNy4bKDKlH0L94cfbxkMFFT/G8KZVYWuj942q\nzuhp+yOaXUJ/VeIVkGLEgimY3cAVaHbVpfcd6yNoZE8sG9Nrl63C38nAW6zPDNkX\naNYQBXevnMOcqzTGbLeyKQR3s9U8++OFLFBNU/lowKlCMhKpKKzFky+stAj9IG8=\n=Dhij\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c87f92ea2696550fbc2764da921c9dfae30fb40\nparent 24722e8d5bba76eeaa8006d568658fbd92fd402c\nparent 8bda13367e4987937ddc2ba9bbe01b5f7a4cce3e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665507589 +0200\ncommitter GitHub <noreply@github.com> 1665507589 +0200\n\nRollup merge of #102685 - nbdd0121:unwind, r=m-ou-se\n\nInterpret EH actions properly\n\nThe EH actions stored in the LSDA follows the format of GCC except table (even for LLVM-generated code). An missing action in the table is the encoding for `Terminate`, see https://github.com/gcc-mirror/gcc/blob/master/libstdc%2B%2B-v3/libsupc%2B%2B/eh_personality.cc#L522-L526.\n\nThe currently code interprets it as `None`, as a workaround for #35011, an issue that seems to occur in LLVM 3.7 and not after 3.9. These are very old versions of LLVM and we don't support them anymore, so remove this workaround and interpret them properly.\n\nNote that LLVM currently does not emit any `Terminate` actions, but GCC does. Although GCC backend currently doesn't do unwinding, removing it preemptively would prevent future developers from wasting time to figure out what's wrong.\n\n``@rustbot`` label: +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1223df9fb9c3152d5b5bb60accce08b237f297", "html_url": "https://github.com/rust-lang/rust/commit/1b1223df9fb9c3152d5b5bb60accce08b237f297", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b1223df9fb9c3152d5b5bb60accce08b237f297/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24722e8d5bba76eeaa8006d568658fbd92fd402c", "url": "https://api.github.com/repos/rust-lang/rust/commits/24722e8d5bba76eeaa8006d568658fbd92fd402c", "html_url": "https://github.com/rust-lang/rust/commit/24722e8d5bba76eeaa8006d568658fbd92fd402c"}, {"sha": "8bda13367e4987937ddc2ba9bbe01b5f7a4cce3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bda13367e4987937ddc2ba9bbe01b5f7a4cce3e", "html_url": "https://github.com/rust-lang/rust/commit/8bda13367e4987937ddc2ba9bbe01b5f7a4cce3e"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "27b50c13b77ca1235ef7ab81b47e9b10dc2db672", "filename": "library/std/src/personality/dwarf/eh.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1b1223df9fb9c3152d5b5bb60accce08b237f297/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b1223df9fb9c3152d5b5bb60accce08b237f297/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpersonality%2Fdwarf%2Feh.rs?ref=1b1223df9fb9c3152d5b5bb60accce08b237f297", "patch": "@@ -98,9 +98,8 @@ pub unsafe fn find_eh_action(lsda: *const u8, context: &EHContext<'_>) -> Result\n                 }\n             }\n         }\n-        // Ip is not present in the table.  This should not happen... but it does: issue #35011.\n-        // So rather than returning EHAction::Terminate, we do this.\n-        Ok(EHAction::None)\n+        // Ip is not present in the table. This indicates a nounwind call.\n+        Ok(EHAction::Terminate)\n     } else {\n         // SjLj version:\n         // The \"IP\" is an index into the call-site table, with two exceptions:"}]}