{"sha": "30f84c4d1755de683e565a03f269878796f71bdf", "node_id": "C_kwDOAAsO6NoAKDMwZjg0YzRkMTc1NWRlNjgzZTU2NWEwM2YyNjk4Nzg3OTZmNzFiZGY", "commit": {"author": {"name": "Eval EXEC", "email": "execvy@gmail.com", "date": "2023-06-09T08:11:23Z"}, "committer": {"name": "Eval EXEC", "email": "execvy@gmail.com", "date": "2023-06-09T12:41:18Z"}, "message": "Improve document of `unsafe_code` lint\n\nSigned-off-by: Eval EXEC <execvy@gmail.com>", "tree": {"sha": "814652feb18647e5b45796db1e83da5a1faba5b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/814652feb18647e5b45796db1e83da5a1faba5b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30f84c4d1755de683e565a03f269878796f71bdf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEES0U85w8mRgRBcbrODwJywNOskfcFAmSDHe4ACgkQDwJywNOs\nkffg2w/9H+Jj1miro5b4kZEX3BzexvYg+v+j/1EwQETnGavUmGbDLiGtQmIdazHQ\njFO4iySHkMzGMHQfg3j/UI//Q74xQ7ckiMnpOrJD6aW843L66Qz5ijatDN4ihk1D\nUPiYvJXJ9QzlYg3t0zEk38wt4BrDErgCxv6Dwa0bagKY5NqfidMb2oGLPDXxoZcZ\nX/cEatNb7TvhBxHLcMSZw+8uaYfj/3zEukGEmoejNBATow8qU3hm0fYxGw55GhOM\ngzuA+Qa/6lAiWgkQuJgD2w9AUPzN69ZCLBY6VeMqXyUAwereRko/sJJW4GYrRS3B\nL5Bpbo2qahwD4RlP/gHbQmfXXMURunPuQu4SWNR1cvB5KEQ6gOLQJ9ik1oCS2IAe\nzalQiARupPb2+PaqmxZsFWu6xTxziF6mhjNvb/bQH7WNtY65tRBcfNNz+HbqmjJC\nEvSEr70QQTwCpQIVlgz2J9F6urNGWIwmVxwIMM6vQu5sml2utwUxQ9kOQZmW5AVR\n16TcGyXqxGcCuSI4pLsUqRf/2v2gT1xSWXQfsIgSYN8vbYKfcYl8X42p9SAozCgE\nkVtTf+kEa4AglL4IXoERKGI6HtovQf4l4JY/hLVRbbXWg47V1y4Cj0fAhh4eG3hK\nJafjDIBrH1OExgLPIXXLF8CwMGnIqL4jgGzqxLYpSuDDTY7/mow=\n=s4CV\n-----END PGP SIGNATURE-----", "payload": "tree 814652feb18647e5b45796db1e83da5a1faba5b6\nparent 9c843d9fa322596c7d525c78fa89731ecf7afbfe\nauthor Eval EXEC <execvy@gmail.com> 1686298283 +0800\ncommitter Eval EXEC <execvy@gmail.com> 1686314478 +0800\n\nImprove document of `unsafe_code` lint\n\nSigned-off-by: Eval EXEC <execvy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30f84c4d1755de683e565a03f269878796f71bdf", "html_url": "https://github.com/rust-lang/rust/commit/30f84c4d1755de683e565a03f269878796f71bdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30f84c4d1755de683e565a03f269878796f71bdf/comments", "author": {"login": "eval-exec", "id": 46400566, "node_id": "MDQ6VXNlcjQ2NDAwNTY2", "avatar_url": "https://avatars.githubusercontent.com/u/46400566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eval-exec", "html_url": "https://github.com/eval-exec", "followers_url": "https://api.github.com/users/eval-exec/followers", "following_url": "https://api.github.com/users/eval-exec/following{/other_user}", "gists_url": "https://api.github.com/users/eval-exec/gists{/gist_id}", "starred_url": "https://api.github.com/users/eval-exec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eval-exec/subscriptions", "organizations_url": "https://api.github.com/users/eval-exec/orgs", "repos_url": "https://api.github.com/users/eval-exec/repos", "events_url": "https://api.github.com/users/eval-exec/events{/privacy}", "received_events_url": "https://api.github.com/users/eval-exec/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eval-exec", "id": 46400566, "node_id": "MDQ6VXNlcjQ2NDAwNTY2", "avatar_url": "https://avatars.githubusercontent.com/u/46400566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eval-exec", "html_url": "https://github.com/eval-exec", "followers_url": "https://api.github.com/users/eval-exec/followers", "following_url": "https://api.github.com/users/eval-exec/following{/other_user}", "gists_url": "https://api.github.com/users/eval-exec/gists{/gist_id}", "starred_url": "https://api.github.com/users/eval-exec/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eval-exec/subscriptions", "organizations_url": "https://api.github.com/users/eval-exec/orgs", "repos_url": "https://api.github.com/users/eval-exec/repos", "events_url": "https://api.github.com/users/eval-exec/events{/privacy}", "received_events_url": "https://api.github.com/users/eval-exec/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c843d9fa322596c7d525c78fa89731ecf7afbfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c843d9fa322596c7d525c78fa89731ecf7afbfe", "html_url": "https://github.com/rust-lang/rust/commit/9c843d9fa322596c7d525c78fa89731ecf7afbfe"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "ff2989112af1a9ee949a5507d312662f4161ad48", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/30f84c4d1755de683e565a03f269878796f71bdf/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30f84c4d1755de683e565a03f269878796f71bdf/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=30f84c4d1755de683e565a03f269878796f71bdf", "patch": "@@ -286,7 +286,9 @@ impl<'tcx> LateLintPass<'tcx> for NonShorthandFieldPatterns {\n }\n \n declare_lint! {\n-    /// The `unsafe_code` lint catches usage of `unsafe` code.\n+    /// The `unsafe_code` lint catches usage of `unsafe` code and other\n+    /// potentially unsound constructs like `no_mangle`, `export_name`,\n+    /// and `link_section`.\n     ///\n     /// ### Example\n     ///\n@@ -297,17 +299,29 @@ declare_lint! {\n     ///\n     ///     }\n     /// }\n+    ///\n+    /// #[no_mangle]\n+    /// fn func_0() { }\n+    ///\n+    /// #[export_name = \"exported_symbol_name\"]\n+    /// pub fn name_in_rust() { }\n+    ///\n+    /// #[no_mangle]\n+    /// #[link_section = \".example_section\"]\n+    /// pub static VAR1: u32 = 1;\n     /// ```\n     ///\n     /// {{produces}}\n     ///\n     /// ### Explanation\n     ///\n-    /// This lint is intended to restrict the usage of `unsafe`, which can be\n-    /// difficult to use correctly.\n+    /// This lint is intended to restrict the usage of `unsafe` blocks and other\n+    /// constructs (including, but not limited to `no_mangle`, `link_section`\n+    /// and `export_name` attributes) wrong usage of which causes undefined\n+    /// behavior.\n     UNSAFE_CODE,\n     Allow,\n-    \"usage of `unsafe` code\"\n+    \"usage of `unsafe` code and other potentially unsound constructs\"\n }\n \n declare_lint_pass!(UnsafeCode => [UNSAFE_CODE]);"}]}