{"sha": "e5474113bec0a7b72201c1254e40fbaa378c6f30", "node_id": "C_kwDOAAsO6NoAKGU1NDc0MTEzYmVjMGE3YjcyMjAxYzEyNTRlNDBmYmFhMzc4YzZmMzA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-05T09:49:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-05T09:49:40Z"}, "message": "Auto merge of #9797 - trevarj:print-config, r=xFrednet\n\nAdd allow-print-in-tests config\n\nAdd a config, allow-print-in-tests, that can be set in clippy.toml which allows the usage of `[e]print[ln]!` macros in tests.\n\nCloses #9795\n\n---\n\nchangelog: Enhancement: [print_stdout], [print_stderr]: Can now be enabled in test with the `allow-print-in-tests` config value", "tree": {"sha": "dcc813b29b2a400fff7521864abd3a016d4bce92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcc813b29b2a400fff7521864abd3a016d4bce92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5474113bec0a7b72201c1254e40fbaa378c6f30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5474113bec0a7b72201c1254e40fbaa378c6f30", "html_url": "https://github.com/rust-lang/rust/commit/e5474113bec0a7b72201c1254e40fbaa378c6f30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5474113bec0a7b72201c1254e40fbaa378c6f30/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e0de8cedc0dc714f31bcf51145a2ffaf64bc33a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e0de8cedc0dc714f31bcf51145a2ffaf64bc33a", "html_url": "https://github.com/rust-lang/rust/commit/9e0de8cedc0dc714f31bcf51145a2ffaf64bc33a"}, {"sha": "ddcfff6d9a33fd8ee95f715055e8ea3e691cc1f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddcfff6d9a33fd8ee95f715055e8ea3e691cc1f2", "html_url": "https://github.com/rust-lang/rust/commit/ddcfff6d9a33fd8ee95f715055e8ea3e691cc1f2"}], "stats": {"total": 64, "additions": 61, "deletions": 3}, "files": [{"sha": "4949a1b778f0b66641952e99cf7959fb63c75b6b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -876,13 +876,14 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::<only_used_in_recursion::OnlyUsedInRecursion>::default());\n     let allow_dbg_in_tests = conf.allow_dbg_in_tests;\n     store.register_late_pass(move |_| Box::new(dbg_macro::DbgMacro::new(allow_dbg_in_tests)));\n+    let allow_print_in_tests = conf.allow_print_in_tests;\n+    store.register_late_pass(move |_| Box::new(write::Write::new(allow_print_in_tests)));\n     let cargo_ignore_publish = conf.cargo_ignore_publish;\n     store.register_late_pass(move |_| {\n         Box::new(cargo::Cargo {\n             ignore_publish: cargo_ignore_publish,\n         })\n     });\n-    store.register_late_pass(|_| Box::<write::Write>::default());\n     store.register_early_pass(|| Box::new(crate_in_macro_def::CrateInMacroDef));\n     store.register_early_pass(|| Box::new(empty_structs_with_brackets::EmptyStructsWithBrackets));\n     store.register_late_pass(|_| Box::new(unnecessary_owned_empty_strings::UnnecessaryOwnedEmptyStrings));"}, {"sha": "0cf49ca6d429bf8d04449e86e46280bdcfd26b1b", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -389,6 +389,10 @@ define_Conf! {\n     ///\n     /// Whether `dbg!` should be allowed in test functions\n     (allow_dbg_in_tests: bool = false),\n+    /// Lint: PRINT_STDOUT, PRINT_STDERR.\n+    ///\n+    /// Whether print macros (ex. `println!`) should be allowed in test functions\n+    (allow_print_in_tests: bool = false),\n     /// Lint: RESULT_LARGE_ERR.\n     ///\n     /// The maximum size of the `Err`-variant in a `Result` returned from a function"}, {"sha": "6b321765bc082d8c1912bd1413e9dfdbee71e059", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -1,6 +1,7 @@\n use clippy_utils::diagnostics::{span_lint, span_lint_and_then};\n use clippy_utils::macros::{root_macro_call_first_node, FormatArgsExpn, MacroCall};\n use clippy_utils::source::{expand_past_previous_comma, snippet_opt};\n+use clippy_utils::{is_in_cfg_test, is_in_test_function};\n use rustc_ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, HirIdMap, Impl, Item, ItemKind};\n@@ -232,6 +233,16 @@ declare_clippy_lint! {\n #[derive(Default)]\n pub struct Write {\n     in_debug_impl: bool,\n+    allow_print_in_tests: bool,\n+}\n+\n+impl Write {\n+    pub fn new(allow_print_in_tests: bool) -> Self {\n+        Self {\n+            allow_print_in_tests,\n+            ..Default::default()\n+        }\n+    }\n }\n \n impl_lint_pass!(Write => [\n@@ -271,13 +282,15 @@ impl<'tcx> LateLintPass<'tcx> for Write {\n             .as_ref()\n             .map_or(false, |crate_name| crate_name == \"build_script_build\");\n \n+        let allowed_in_tests = self.allow_print_in_tests\n+            && (is_in_test_function(cx.tcx, expr.hir_id) || is_in_cfg_test(cx.tcx, expr.hir_id));\n         match diag_name {\n-            sym::print_macro | sym::println_macro => {\n+            sym::print_macro | sym::println_macro if !allowed_in_tests => {\n                 if !is_build_script {\n                     span_lint(cx, PRINT_STDOUT, macro_call.span, &format!(\"use of `{name}!`\"));\n                 }\n             },\n-            sym::eprint_macro | sym::eprintln_macro => {\n+            sym::eprint_macro | sym::eprintln_macro if !allowed_in_tests => {\n                 span_lint(cx, PRINT_STDERR, macro_call.span, &format!(\"use of `{name}!`\"));\n             },\n             sym::write_macro | sym::writeln_macro => {},"}, {"sha": "40b1dda5b2ea7896464b582b9edc7470606a2ddb", "filename": "tests/ui-toml/print_macro/clippy.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fprint_macro%2Fclippy.toml?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -0,0 +1 @@\n+allow-print-in-tests = true"}, {"sha": "5aefb6a6b4d467031c25d37ca0599ba5b4cb23a0", "filename": "tests/ui-toml/print_macro/print_macro.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.rs?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -0,0 +1,20 @@\n+// compile-flags: --test\n+#![warn(clippy::print_stdout)]\n+#![warn(clippy::print_stderr)]\n+\n+fn foo(n: u32) {\n+    print!(\"{n}\");\n+    eprint!(\"{n}\");\n+}\n+\n+#[test]\n+pub fn foo1() {\n+    print!(\"{}\", 1);\n+    eprint!(\"{}\", 1);\n+}\n+\n+#[cfg(test)]\n+fn foo3() {\n+    print!(\"{}\", 1);\n+    eprint!(\"{}\", 1);\n+}"}, {"sha": "d4b1ae84fd7dca431c88afbab3f7d197c357bae8", "filename": "tests/ui-toml/print_macro/print_macro.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fprint_macro%2Fprint_macro.stderr?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -0,0 +1,18 @@\n+error: use of `print!`\n+  --> $DIR/print_macro.rs:6:5\n+   |\n+LL |     print!(\"{n}\");\n+   |     ^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::print-stdout` implied by `-D warnings`\n+\n+error: use of `eprint!`\n+  --> $DIR/print_macro.rs:7:5\n+   |\n+LL |     eprint!(\"{n}\");\n+   |     ^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::print-stderr` implied by `-D warnings`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "f91d285c2e0eefcc3d06aea471a6f5b59a14caa2", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5474113bec0a7b72201c1254e40fbaa378c6f30/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=e5474113bec0a7b72201c1254e40fbaa378c6f30", "patch": "@@ -1,6 +1,7 @@\n error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of\n            allow-dbg-in-tests\n            allow-expect-in-tests\n+           allow-print-in-tests\n            allow-unwrap-in-tests\n            allowed-scripts\n            arithmetic-side-effects-allowed"}]}