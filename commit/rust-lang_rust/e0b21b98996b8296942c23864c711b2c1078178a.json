{"sha": "e0b21b98996b8296942c23864c711b2c1078178a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYjIxYjk4OTk2YjgyOTY5NDJjMjM4NjRjNzExYjJjMTA3ODE3OGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-04T17:38:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-05T09:36:38Z"}, "message": "submodules works with module sources", "tree": {"sha": "36894d961e8b79458bd06b882c8b059198d768ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36894d961e8b79458bd06b882c8b059198d768ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0b21b98996b8296942c23864c711b2c1078178a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0b21b98996b8296942c23864c711b2c1078178a", "html_url": "https://github.com/rust-lang/rust/commit/e0b21b98996b8296942c23864c711b2c1078178a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0b21b98996b8296942c23864c711b2c1078178a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88a15d10d543c09ef66a9f105c3dcdb5011abbee", "url": "https://api.github.com/repos/rust-lang/rust/commits/88a15d10d543c09ef66a9f105c3dcdb5011abbee", "html_url": "https://github.com/rust-lang/rust/commit/88a15d10d543c09ef66a9f105c3dcdb5011abbee"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "775949a88a8d316ffd46baa38184b333a916261e", "filename": "crates/ra_analysis/src/descriptors/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e0b21b98996b8296942c23864c711b2c1078178a/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0b21b98996b8296942c23864c711b2c1078178a/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmod.rs?ref=e0b21b98996b8296942c23864c711b2c1078178a", "patch": "@@ -11,7 +11,7 @@ use ra_syntax::{\n use crate::{\n     db::SyntaxDatabase,\n     descriptors::function::{resolve_local_name, FnId, FnScopes},\n-    descriptors::module::{ModuleId, ModuleScope, ModuleTree},\n+    descriptors::module::{ModuleId, ModuleScope, ModuleTree, ModuleSource},\n     input::SourceRootId,\n     syntax_ptr::LocalSyntaxPtr,\n     Cancelable, FileId,\n@@ -23,7 +23,7 @@ salsa::query_group! {\n             type ModuleTreeQuery;\n             use fn module::imp::module_tree;\n         }\n-        fn submodules(file_id: FileId) -> Cancelable<Arc<Vec<SmolStr>>> {\n+        fn submodules(source: ModuleSource) -> Cancelable<Arc<Vec<module::imp::Submodule>>> {\n             type SubmodulesQuery;\n             use fn module::imp::submodules;\n         }"}, {"sha": "b9cd81739415a73b8225ee8f8c3d04b16063a689", "filename": "crates/ra_analysis/src/descriptors/module/imp.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e0b21b98996b8296942c23864c711b2c1078178a/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0b21b98996b8296942c23864c711b2c1078178a/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fimp.rs?ref=e0b21b98996b8296942c23864c711b2c1078178a", "patch": "@@ -19,14 +19,25 @@ use super::{\n     ModuleTree, Problem,\n };\n \n+#[derive(Clone, Hash, PartialEq, Eq, Debug)]\n+pub(crate) struct Submodule {\n+    name: SmolStr\n+}\n+\n pub(crate) fn submodules(\n     db: &impl DescriptorDatabase,\n-    file_id: FileId,\n-) -> Cancelable<Arc<Vec<SmolStr>>> {\n+    source: ModuleSource,\n+) -> Cancelable<Arc<Vec<Submodule>>> {\n     db::check_canceled(db)?;\n+    let file_id = match source {\n+        ModuleSource::File(it) => it,\n+        _ => unimplemented!(),\n+    };\n     let file = db.file_syntax(file_id);\n     let root = file.ast();\n-    let submodules = modules(root).map(|(name, _)| name).collect();\n+    let submodules = modules(root)\n+        .map(|(name, _)| Submodule { name })\n+        .collect();\n     Ok(Arc::new(submodules))\n }\n \n@@ -66,11 +77,6 @@ pub(crate) fn module_tree(\n     Ok(Arc::new(res))\n }\n \n-#[derive(Clone, Hash, PartialEq, Eq, Debug)]\n-pub struct Submodule {\n-    pub name: SmolStr,\n-}\n-\n fn create_module_tree<'a>(\n     db: &impl DescriptorDatabase,\n     source_root: SourceRootId,\n@@ -118,10 +124,11 @@ fn build_subtree(\n         parent,\n         children: Vec::new(),\n     });\n-    for name in db.submodules(file_id)?.iter() {\n-        let (points_to, problem) = resolve_submodule(file_id, name, &source_root.file_resolver);\n+    for sub in db.submodules(ModuleSource::File(file_id))?.iter() {\n+        let name = sub.name.clone();\n+        let (points_to, problem) = resolve_submodule(file_id, &name, &source_root.file_resolver);\n         let link = tree.push_link(LinkData {\n-            name: name.clone(),\n+            name,\n             owner: id,\n             points_to: Vec::new(),\n             problem: None,"}]}