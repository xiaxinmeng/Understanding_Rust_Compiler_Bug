{"sha": "31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZDJiM2I5Y2I3NWEwOWM5MzY1NWIzODM3N2VkNWY0MTQ0ZWJhZjA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-06T20:26:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-06T20:26:52Z"}, "message": "Merge #8386\n\n8386: Avoid O(n\u00b2) when constructing AttrSourceMap r=jonas-schievink a=jonas-schievink\n\nBrings https://github.com/rust-analyzer/rust-analyzer/issues/8377 down to 2.52s on my machine. Not quite back to where it was before, so I'll leave that issue open for now.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "19614f79db1cb180c05bbdb725e85381c7846682", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19614f79db1cb180c05bbdb725e85381c7846682"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbMQMCRBK7hj4Ov3rIwAAdHIIADS0Xgmw/HEpdCaquL0aPoZb\nXsk6+9032eC7s4Uahs1JOgxjZUotVubYmLR8gTjofRjKikE8XiPFMXU+eUrfacFv\nMQgtvDJiOsqPxVmZWKCMGS/z54rsLUsybtMYDShShx6aelmEZ9+dYyEVnQ+COm7G\nefiKtEuX+vYpIuX817d/r+ehBApYf1K0yyzXLUbgGfol9JwBzx3CJnrdoWYH8cZK\nJlaMC5ITvX9rTq3U/Q3S/3OhjeUqe5wK18qqiTvMm1At1DXOv83Sl8yivHMjaGei\nz2F20AeGidef2yurr1EbTk9daivpHFRerqEUltywzUoAt5HdvqnkNYXk/YDIhko=\n=jvxT\n-----END PGP SIGNATURE-----\n", "payload": "tree 19614f79db1cb180c05bbdb725e85381c7846682\nparent 1643d1534b92eef1cf55631aba3ca9289c3cea72\nparent 035d84558cb777806d8c02234051843194459aee\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617740812 +0000\ncommitter GitHub <noreply@github.com> 1617740812 +0000\n\nMerge #8386\n\n8386: Avoid O(n\u00b2) when constructing AttrSourceMap r=jonas-schievink a=jonas-schievink\n\nBrings https://github.com/rust-analyzer/rust-analyzer/issues/8377 down to 2.52s on my machine. Not quite back to where it was before, so I'll leave that issue open for now.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "html_url": "https://github.com/rust-lang/rust/commit/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1643d1534b92eef1cf55631aba3ca9289c3cea72", "url": "https://api.github.com/repos/rust-lang/rust/commits/1643d1534b92eef1cf55631aba3ca9289c3cea72", "html_url": "https://github.com/rust-lang/rust/commit/1643d1534b92eef1cf55631aba3ca9289c3cea72"}, {"sha": "035d84558cb777806d8c02234051843194459aee", "url": "https://api.github.com/repos/rust-lang/rust/commits/035d84558cb777806d8c02234051843194459aee", "html_url": "https://github.com/rust-lang/rust/commit/035d84558cb777806d8c02234051843194459aee"}], "stats": {"total": 84, "additions": 74, "deletions": 10}, "files": [{"sha": "d9df7564d249ac96f76c8437d509040b3744ee77", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 48, "deletions": 9, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "patch": "@@ -16,7 +16,7 @@ use mbe::ast_to_token_tree;\n use smallvec::{smallvec, SmallVec};\n use syntax::{\n     ast::{self, AstNode, AttrsOwner},\n-    match_ast, AstToken, SmolStr, SyntaxNode, TextRange, TextSize,\n+    match_ast, AstPtr, AstToken, SmolStr, SyntaxNode, TextRange, TextSize,\n };\n use tt::Subtree;\n \n@@ -403,21 +403,27 @@ impl AttrsWithOwner {\n                 return AttrSourceMap { attrs };\n             }\n             AttrDefId::FieldId(id) => {\n-                id.parent.child_source(db).map(|source| match &source[id.local_id] {\n-                    Either::Left(field) => ast::AttrsOwnerNode::new(field.clone()),\n-                    Either::Right(field) => ast::AttrsOwnerNode::new(field.clone()),\n-                })\n+                let map = db.fields_attrs_source_map(id.parent);\n+                let file_id = id.parent.file_id(db);\n+                let root = db.parse_or_expand(file_id).unwrap();\n+                let owner = match &map[id.local_id] {\n+                    Either::Left(it) => ast::AttrsOwnerNode::new(it.to_node(&root)),\n+                    Either::Right(it) => ast::AttrsOwnerNode::new(it.to_node(&root)),\n+                };\n+                InFile::new(file_id, owner)\n             }\n             AttrDefId::AdtId(adt) => match adt {\n                 AdtId::StructId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n                 AdtId::UnionId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n                 AdtId::EnumId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n             },\n             AttrDefId::FunctionId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n-            AttrDefId::EnumVariantId(id) => id\n-                .parent\n-                .child_source(db)\n-                .map(|source| ast::AttrsOwnerNode::new(source[id.local_id].clone())),\n+            AttrDefId::EnumVariantId(id) => {\n+                let map = db.variants_attrs_source_map(id.parent);\n+                let file_id = id.parent.lookup(db).id.file_id();\n+                let root = db.parse_or_expand(file_id).unwrap();\n+                InFile::new(file_id, ast::AttrsOwnerNode::new(map[id.local_id].to_node(&root)))\n+            }\n             AttrDefId::StaticId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n             AttrDefId::ConstId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n             AttrDefId::TraitId(id) => id.lookup(db).source(db).map(ast::AttrsOwnerNode::new),\n@@ -746,3 +752,36 @@ fn collect_attrs(\n \n     attrs.into_iter().map(|(_, attr)| attr)\n }\n+\n+pub(crate) fn variants_attrs_source_map(\n+    db: &dyn DefDatabase,\n+    def: EnumId,\n+) -> Arc<ArenaMap<LocalEnumVariantId, AstPtr<ast::Variant>>> {\n+    let mut res = ArenaMap::default();\n+    let child_source = def.child_source(db);\n+\n+    for (idx, variant) in child_source.value.iter() {\n+        res.insert(idx, AstPtr::new(variant));\n+    }\n+\n+    Arc::new(res)\n+}\n+\n+pub(crate) fn fields_attrs_source_map(\n+    db: &dyn DefDatabase,\n+    def: VariantId,\n+) -> Arc<ArenaMap<LocalFieldId, Either<AstPtr<ast::TupleField>, AstPtr<ast::RecordField>>>> {\n+    let mut res = ArenaMap::default();\n+    let child_source = def.child_source(db);\n+\n+    for (idx, variant) in child_source.value.iter() {\n+        res.insert(\n+            idx,\n+            variant\n+                .as_ref()\n+                .either(|l| Either::Left(AstPtr::new(l)), |r| Either::Right(AstPtr::new(r))),\n+        );\n+    }\n+\n+    Arc::new(res)\n+}"}, {"sha": "7eadc8e0d65e199c20dd9c05f73c7d07da097492", "filename": "crates/hir_def/src/db.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fdb.rs?ref=31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "patch": "@@ -2,9 +2,10 @@\n use std::sync::Arc;\n \n use base_db::{salsa, CrateId, SourceDatabase, Upcast};\n+use either::Either;\n use hir_expand::{db::AstDatabase, HirFileId};\n use la_arena::ArenaMap;\n-use syntax::SmolStr;\n+use syntax::{ast, AstPtr, SmolStr};\n \n use crate::{\n     adt::{EnumData, StructData},\n@@ -122,6 +123,18 @@ pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n     #[salsa::invoke(Attrs::fields_attrs_query)]\n     fn fields_attrs(&self, def: VariantId) -> Arc<ArenaMap<LocalFieldId, Attrs>>;\n \n+    #[salsa::invoke(crate::attr::variants_attrs_source_map)]\n+    fn variants_attrs_source_map(\n+        &self,\n+        def: EnumId,\n+    ) -> Arc<ArenaMap<LocalEnumVariantId, AstPtr<ast::Variant>>>;\n+\n+    #[salsa::invoke(crate::attr::fields_attrs_source_map)]\n+    fn fields_attrs_source_map(\n+        &self,\n+        def: VariantId,\n+    ) -> Arc<ArenaMap<LocalFieldId, Either<AstPtr<ast::TupleField>, AstPtr<ast::RecordField>>>>;\n+\n     #[salsa::invoke(AttrsWithOwner::attrs_query)]\n     fn attrs(&self, def: AttrDefId) -> AttrsWithOwner;\n "}, {"sha": "e2af0e51481283f9c97d3f10b9dc26e20b809306", "filename": "crates/hir_def/src/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fhir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flib.rs?ref=31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "patch": "@@ -453,6 +453,14 @@ impl VariantId {\n             }\n         }\n     }\n+\n+    pub fn file_id(self, db: &dyn db::DefDatabase) -> HirFileId {\n+        match self {\n+            VariantId::EnumVariantId(it) => it.parent.lookup(db).id.file_id(),\n+            VariantId::StructId(it) => it.lookup(db).id.file_id(),\n+            VariantId::UnionId(it) => it.lookup(db).id.file_id(),\n+        }\n+    }\n }\n \n trait Intern {"}, {"sha": "6c67425d7559c15e384ccb5452b57d5c2abe67c8", "filename": "crates/ide_db/src/apply_change.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d2b3b9cb75a09c93655b38377ed5f4144ebaf0/crates%2Fide_db%2Fsrc%2Fapply_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fapply_change.rs?ref=31d2b3b9cb75a09c93655b38377ed5f4144ebaf0", "patch": "@@ -152,6 +152,10 @@ impl RootDatabase {\n             hir::db::FileItemTreeQuery\n             hir::db::BlockDefMapQuery\n             hir::db::CrateDefMapQueryQuery\n+            hir::db::FieldsAttrsQuery\n+            hir::db::VariantsAttrsQuery\n+            hir::db::FieldsAttrsSourceMapQuery\n+            hir::db::VariantsAttrsSourceMapQuery\n             hir::db::StructDataQuery\n             hir::db::UnionDataQuery\n             hir::db::EnumDataQuery"}]}