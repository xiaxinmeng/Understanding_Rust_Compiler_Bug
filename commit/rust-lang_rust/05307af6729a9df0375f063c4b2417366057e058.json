{"sha": "05307af6729a9df0375f063c4b2417366057e058", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1MzA3YWY2NzI5YTlkZjAzNzVmMDYzYzRiMjQxNzM2NjA1N2UwNTg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-23T09:22:16Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-23T09:22:16Z"}, "message": "Remove some unnecessary patches\n\ncc #337", "tree": {"sha": "47ff55cef90799c5fa222c38279c2f4499969351", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47ff55cef90799c5fa222c38279c2f4499969351"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05307af6729a9df0375f063c4b2417366057e058", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05307af6729a9df0375f063c4b2417366057e058", "html_url": "https://github.com/rust-lang/rust/commit/05307af6729a9df0375f063c4b2417366057e058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05307af6729a9df0375f063c4b2417366057e058/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd15051f5af4ce0a37f577a5062ac9505f2dc6c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5", "html_url": "https://github.com/rust-lang/rust/commit/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5"}], "stats": {"total": 82, "additions": 0, "deletions": 82}, "files": [{"sha": "46712718decfa3cdb3ac841b7cdcfe2f2e2cf7e2", "filename": "patches/0011-Workaround-for-libstd-crash.patch", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5/patches%2F0011-Workaround-for-libstd-crash.patch", "raw_url": "https://github.com/rust-lang/rust/raw/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5/patches%2F0011-Workaround-for-libstd-crash.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0011-Workaround-for-libstd-crash.patch?ref=dd15051f5af4ce0a37f577a5062ac9505f2dc6c5", "patch": "@@ -1,25 +0,0 @@\n-From 2bc2ef06e118c6fba0626c0e9bf24fed873405b2 Mon Sep 17 00:00:00 2001\n-From: bjorn3 <bjorn3@users.noreply.github.com>\n-Date: Sat, 29 Dec 2018 12:37:34 +0100\n-Subject: [PATCH] Workaround for libstd crash\n-\n-I think this is related to the use of TLS inside those functions\n----\n- src/libstd/rt.rs | 2 +-\n- 1 file changed, 1 insertions(+), 1 deletions(-)\n-\n-diff --git a/src/libstd/rt.rs b/src/libstd/rt.rs\n-index 5ddb66b..6a0d0b5 100644\n---- a/src/libstd/rt.rs\n-+++ b/src/libstd/rt.rs\n-@@ -51,7 +51,7 @@ fn lang_start_internal(main: &(dyn Fn() -> i32 + Sync + ::panic::RefUnwindSafe),\n-         #[cfg(not(feature = \"backtrace\"))]\n-         let exit_code = panic::catch_unwind(move || main());\n-\n--        sys_common::cleanup();\n-+        //sys_common::cleanup();\n-         exit_code.unwrap_or(101) as isize\n-     }\n- }\n---\n-2.17.2 (Apple Git-113)"}, {"sha": "ca28fe2fd7043ebcd843c5dd68d92fb7bfff4492", "filename": "patches/0014-Don-t-use-OS-TLS.patch", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5/patches%2F0014-Don-t-use-OS-TLS.patch", "raw_url": "https://github.com/rust-lang/rust/raw/dd15051f5af4ce0a37f577a5062ac9505f2dc6c5/patches%2F0014-Don-t-use-OS-TLS.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0014-Don-t-use-OS-TLS.patch?ref=dd15051f5af4ce0a37f577a5062ac9505f2dc6c5", "patch": "@@ -1,57 +0,0 @@\n-From 9e8b8114de61ecdbf39f7582d7a3280ef2bfd339 Mon Sep 17 00:00:00 2001\n-From: bjorn3 <bjorn3@users.noreply.github.com>\n-Date: Sun, 23 Jun 2019 10:37:53 +0200\n-Subject: [PATCH] Don't use OS TLS\n-\n----\n- src/libstd/thread/local.rs | 4 ++--\n- src/libstd/thread/mod.rs   | 1 -\n- 2 files changed, 2 insertions(+), 3 deletions(-)\n-\n-diff --git a/src/libstd/thread/local.rs b/src/libstd/thread/local.rs\n-index 9b355aa..a074aa5 100644\n---- a/src/libstd/thread/local.rs\n-+++ b/src/libstd/thread/local.rs\n-@@ -154,10 +154,10 @@ macro_rules! __thread_local_inner {\n-             fn __init() -> $t { $init }\n- \n-             unsafe fn __getit() -> $crate::option::Option<&'static $t> {\n--                #[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n-                 static __KEY: $crate::thread::__StaticLocalKeyInner<$t> =\n-                     $crate::thread::__StaticLocalKeyInner::new();\n- \n-+                /*\n-                 #[thread_local]\n-                 #[cfg(all(\n-                     target_thread_local,\n-@@ -172,6 +172,7 @@ macro_rules! __thread_local_inner {\n-                 ))]\n-                 static __KEY: $crate::thread::__OsLocalKeyInner<$t> =\n-                     $crate::thread::__OsLocalKeyInner::new();\n-+                */\n- \n-                 __KEY.get(__init)\n-             }\n-@@ -320,7 +321,6 @@ mod lazy {\n- /// On some platforms like wasm32 there's no threads, so no need to generate\n- /// thread locals and we can instead just use plain statics!\n- #[doc(hidden)]\n--#[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n- pub mod statik {\n-     use super::lazy::LazyKeyInner;\n-     use crate::fmt;\n-diff --git a/src/libstd/thread/mod.rs b/src/libstd/thread/mod.rs\n-index 35de4f4..f142646 100644\n---- a/src/libstd/thread/mod.rs\n-+++ b/src/libstd/thread/mod.rs\n-@@ -195,7 +195,6 @@ pub use self::local::{LocalKey, AccessError};\n- // where available, but both are needed.\n- \n- #[unstable(feature = \"libstd_thread_internals\", issue = \"0\")]\n--#[cfg(all(target_arch = \"wasm32\", not(target_feature = \"atomics\")))]\n- #[doc(hidden)] pub use self::local::statik::Key as __StaticLocalKeyInner;\n- #[unstable(feature = \"libstd_thread_internals\", issue = \"0\")]\n- #[cfg(target_thread_local)]\n--- \n-2.20.1 (Apple Git-117)\n-"}]}