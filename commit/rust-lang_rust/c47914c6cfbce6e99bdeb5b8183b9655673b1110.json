{"sha": "c47914c6cfbce6e99bdeb5b8183b9655673b1110", "node_id": "C_kwDOAAsO6NoAKGM0NzkxNGM2Y2ZiY2U2ZTk5YmRlYjViODE4M2I5NjU1NjczYjExMTA", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2022-08-10T08:29:23Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2022-08-10T08:29:23Z"}, "message": "Fixes tests", "tree": {"sha": "e48b777ceb72a7d9d8d87738dce7017034880e4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e48b777ceb72a7d9d8d87738dce7017034880e4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c47914c6cfbce6e99bdeb5b8183b9655673b1110", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c47914c6cfbce6e99bdeb5b8183b9655673b1110", "html_url": "https://github.com/rust-lang/rust/commit/c47914c6cfbce6e99bdeb5b8183b9655673b1110", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c47914c6cfbce6e99bdeb5b8183b9655673b1110/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23e17cd5819a21731122b4dc4975170e0efc4ca2", "url": "https://api.github.com/repos/rust-lang/rust/commits/23e17cd5819a21731122b4dc4975170e0efc4ca2", "html_url": "https://github.com/rust-lang/rust/commit/23e17cd5819a21731122b4dc4975170e0efc4ca2"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "457e43925c635367f615391ffc04cb06e99df9d9", "filename": "crates/hir-def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -885,7 +885,7 @@ macro_rules! m {\n     ($t:ty) => ( fn bar() -> $ t {} )\n }\n \n-fn bar() -> & 'a Baz<u8> {}\n+fn bar() -> &'a Baz<u8> {}\n \n fn bar() -> extern \"Rust\"fn() -> Ret {}\n \"#]],\n@@ -1578,7 +1578,7 @@ macro_rules !register_methods {\n             ($$($val: expr), *) = > {\n                 struct Foo;\n                 impl Foo {\n-                    $(fn $method()-> & 'static[u32] {\n+                    $(fn $method()-> &'static[u32] {\n                         &[$$($$val), *]\n                     }\n                     )*\n@@ -1591,21 +1591,21 @@ macro_rules !implement_methods {\n     ($($val: expr), *) = > {\n         struct Foo;\n         impl Foo {\n-            fn alpha()-> & 'static[u32] {\n+            fn alpha()-> &'static[u32] {\n                 &[$($val), *]\n             }\n-            fn beta()-> & 'static[u32] {\n+            fn beta()-> &'static[u32] {\n                 &[$($val), *]\n             }\n         }\n     }\n }\n struct Foo;\n impl Foo {\n-    fn alpha() -> & 'static[u32] {\n+    fn alpha() -> &'static[u32] {\n         &[1, 2, 3]\n     }\n-    fn beta() -> & 'static[u32] {\n+    fn beta() -> &'static[u32] {\n         &[1, 2, 3]\n     }\n }"}, {"sha": "d2505e7cafe53657ba29f6d0c140d442ee0f9799", "filename": "crates/hir-def/src/macro_expansion_tests/mbe/regression.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fregression.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -166,7 +166,7 @@ macro_rules! int_base {\n     }\n }\n #[stable(feature = \"rust1\", since = \"1.0.0\")] impl fmt::Binary for isize {\n-    fn fmt(&self , f: &mut fmt::Formatter< '_>) -> fmt::Result {\n+    fn fmt(&self , f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         Binary.fmt_int(*self as usize, f)\n     }\n }\n@@ -724,7 +724,7 @@ macro_rules! delegate_impl {\n         }\n     }\n }\n-impl <> Data for & 'amut G where G: Data {}\n+impl <> Data for &'amut G where G: Data {}\n \"##]],\n     );\n }"}, {"sha": "b8d2ca687c9e0ef201948ae804217ee01306472b", "filename": "crates/hir-def/src/macro_expansion_tests/mbe/tt_conversion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Ftt_conversion.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -78,7 +78,7 @@ m!(static bar: &'static str = \"hello\";);\n macro_rules! m {\n     ($($t:tt)*) => { $($t)*}\n }\n-static bar: & 'static str = \"hello\";\n+static bar: &'static str = \"hello\";\n \"#]],\n     );\n }"}, {"sha": "029821e5e87f696ab6e57430dc497327c010a7d6", "filename": "crates/hir-def/src/macro_expansion_tests/proc_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fmacro_expansion_tests%2Fproc_macros.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -87,7 +87,7 @@ fn foo() { bar.; blub }\n fn foo() { bar.; blub }\n \n fn foo() {\n-    bar. ;\n+    bar.;\n     blub\n }\"##]],\n     );"}, {"sha": "893e6fe4b82408da9ef765eabfc3b90c9bca641e", "filename": "crates/hir-expand/src/fixup.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fhir-expand%2Fsrc%2Ffixup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Ffixup.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -468,7 +468,7 @@ fn foo() {\n }\n \"#,\n             expect![[r#\"\n-fn foo () {a . __ra_fixup}\n+fn foo () {a .__ra_fixup}\n \"#]],\n         )\n     }\n@@ -478,11 +478,11 @@ fn foo () {a . __ra_fixup}\n         check(\n             r#\"\n fn foo() {\n-    a. ;\n+    a.;\n }\n \"#,\n             expect![[r#\"\n-fn foo () {a . __ra_fixup ;}\n+fn foo () {a .__ra_fixup ;}\n \"#]],\n         )\n     }\n@@ -492,12 +492,12 @@ fn foo () {a . __ra_fixup ;}\n         check(\n             r#\"\n fn foo() {\n-    a. ;\n+    a.;\n     bar();\n }\n \"#,\n             expect![[r#\"\n-fn foo () {a . __ra_fixup ; bar () ;}\n+fn foo () {a .__ra_fixup ; bar () ;}\n \"#]],\n         )\n     }\n@@ -525,7 +525,7 @@ fn foo() {\n }\n \"#,\n             expect![[r#\"\n-fn foo () {let x = a . __ra_fixup ;}\n+fn foo () {let x = a .__ra_fixup ;}\n \"#]],\n         )\n     }\n@@ -541,7 +541,7 @@ fn foo() {\n }\n \"#,\n             expect![[r#\"\n-fn foo () {a . b ; bar () ;}\n+fn foo () {a .b ; bar () ;}\n \"#]],\n         )\n     }"}, {"sha": "62cf5ab4f37a187546e5359ffc71d7e0a9e09713", "filename": "crates/ide-assists/src/handlers/add_missing_impl_members.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_impl_members.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -944,7 +944,7 @@ foo!();\n struct Foo(usize);\n \n impl FooB for Foo {\n-    $0fn foo< 'lt>(& 'lt self){}\n+    $0fn foo<'lt>(&'lt self){}\n }\n \"#,\n         )"}, {"sha": "6339d56d01791dcfc359bd53f74a0dccad8fb59b", "filename": "crates/proc-macro-srv/src/tests/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c47914c6cfbce6e99bdeb5b8183b9655673b1110/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Ftests%2Fmod.rs?ref=c47914c6cfbce6e99bdeb5b8183b9655673b1110", "patch": "@@ -19,7 +19,7 @@ fn test_derive_error() {\n         expect![[r##\"\n             SUBTREE $\n               IDENT   compile_error 4294967295\n-              PUNCH   ! [alone] 4294967295\n+              PUNCH   ! [joint] 4294967295\n               SUBTREE () 4294967295\n                 LITERAL \"#[derive(DeriveError)] struct S ;\" 4294967295\n               PUNCH   ; [alone] 4294967295\"##]],\n@@ -109,7 +109,7 @@ fn test_fn_like_macro_clone_literals() {\n               PUNCH   , [alone] 4294967295\n               LITERAL 2_u32 4294967295\n               PUNCH   , [alone] 4294967295\n-              PUNCH   - [alone] 4294967295\n+              PUNCH   - [joint] 4294967295\n               LITERAL 4i64 4294967295\n               PUNCH   , [alone] 4294967295\n               LITERAL 3.14f32 4294967295\n@@ -130,7 +130,7 @@ fn test_attr_macro() {\n         expect![[r##\"\n             SUBTREE $\n               IDENT   compile_error 4294967295\n-              PUNCH   ! [alone] 4294967295\n+              PUNCH   ! [joint] 4294967295\n               SUBTREE () 4294967295\n                 LITERAL \"#[attr_error(some arguments)] mod m {}\" 4294967295\n               PUNCH   ; [alone] 4294967295\"##]],"}]}