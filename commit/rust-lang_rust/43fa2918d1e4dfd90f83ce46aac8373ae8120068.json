{"sha": "43fa2918d1e4dfd90f83ce46aac8373ae8120068", "node_id": "C_kwDOAAsO6NoAKDQzZmEyOTE4ZDFlNGRmZDkwZjgzY2U0NmFhYzgzNzNhZTgxMjAwNjg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-17T21:33:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-17T21:33:21Z"}, "message": "Rollup merge of #104508 - compiler-errors:dyn-return, r=oli-obk\n\nCheck `dyn*` return type correctly\n\nIn `check_fn`, if the declared return type is `dyn Trait`, then we check the return type separately to produce better diagnostics, because this is never valid -- however, when `dyn*` was introduced, this check was never adjusted to only account for *unsized* `dyn Trait` and not *sized* `dyn* Trait`.\n\nFixes #104501", "tree": {"sha": "450ccfac1cd4b1b2c6a8224466d104984702229a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/450ccfac1cd4b1b2c6a8224466d104984702229a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43fa2918d1e4dfd90f83ce46aac8373ae8120068", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjdqihCRBK7hj4Ov3rIwAAlTIIACwcV0gTR9fwU+3gfziu9+8X\nh5AIElDf3roHtl4cQsO1nmBKxqJzzHW6Z26sRHqM6so7EjW0zO5AIJo/fUZVKIl7\nzcUNGSryB2Xh0aI/SLKyJCYhMBeirSVwSWwIkf0GOG6+FBLWtr7MHkd+8Si9VwtA\nue9F/zCESA5MIYG4wJAtdtnugZ9fvfBtPGTiNhxKu3/WvxCkvooGxaWUsS1/gskl\nGMcNNJw/dZt/o9vg1OTKs0LN05wpfvbhk0ojZEHRiQcXPEsHtpj1ryvWndJ6YsYL\nUYdjaxU5SJ54DyLVLVp8IFG/YEgp126IlwOkWmzrGC6ZlgYaLjwXYbIOMp5p6f4=\n=1FIV\n-----END PGP SIGNATURE-----\n", "payload": "tree 450ccfac1cd4b1b2c6a8224466d104984702229a\nparent 68a8109ddbb44fdfdd455036d2e53a8bf3545d4e\nparent 75afb22331daececeba38a3efb0134348d6c14d9\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668720801 +0100\ncommitter GitHub <noreply@github.com> 1668720801 +0100\n\nRollup merge of #104508 - compiler-errors:dyn-return, r=oli-obk\n\nCheck `dyn*` return type correctly\n\nIn `check_fn`, if the declared return type is `dyn Trait`, then we check the return type separately to produce better diagnostics, because this is never valid -- however, when `dyn*` was introduced, this check was never adjusted to only account for *unsized* `dyn Trait` and not *sized* `dyn* Trait`.\n\nFixes #104501\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43fa2918d1e4dfd90f83ce46aac8373ae8120068", "html_url": "https://github.com/rust-lang/rust/commit/43fa2918d1e4dfd90f83ce46aac8373ae8120068", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43fa2918d1e4dfd90f83ce46aac8373ae8120068/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68a8109ddbb44fdfdd455036d2e53a8bf3545d4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/68a8109ddbb44fdfdd455036d2e53a8bf3545d4e", "html_url": "https://github.com/rust-lang/rust/commit/68a8109ddbb44fdfdd455036d2e53a8bf3545d4e"}, {"sha": "75afb22331daececeba38a3efb0134348d6c14d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/75afb22331daececeba38a3efb0134348d6c14d9", "html_url": "https://github.com/rust-lang/rust/commit/75afb22331daececeba38a3efb0134348d6c14d9"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "b9e90e47e508bdecbb522fc62d077893bfc8ff59", "filename": "compiler/rustc_hir_typeck/src/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43fa2918d1e4dfd90f83ce46aac8373ae8120068/compiler%2Frustc_hir_typeck%2Fsrc%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fa2918d1e4dfd90f83ce46aac8373ae8120068/compiler%2Frustc_hir_typeck%2Fsrc%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fcheck.rs?ref=43fa2918d1e4dfd90f83ce46aac8373ae8120068", "patch": "@@ -102,7 +102,7 @@ pub(super) fn check_fn<'a, 'tcx>(\n \n     inherited.typeck_results.borrow_mut().liberated_fn_sigs_mut().insert(fn_id, fn_sig);\n \n-    if let ty::Dynamic(..) = declared_ret_ty.kind() {\n+    if let ty::Dynamic(_, _, ty::Dyn) = declared_ret_ty.kind() {\n         // FIXME: We need to verify that the return type is `Sized` after the return expression has\n         // been evaluated so that we have types available for all the nodes being returned, but that\n         // requires the coerced evaluated type to be stored. Moving `check_return_expr` before this"}, {"sha": "fa3d8d7d5064cc2a893fb2554ecbff4fb7e97a1d", "filename": "src/test/ui/dyn-star/return.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/43fa2918d1e4dfd90f83ce46aac8373ae8120068/src%2Ftest%2Fui%2Fdyn-star%2Freturn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43fa2918d1e4dfd90f83ce46aac8373ae8120068/src%2Ftest%2Fui%2Fdyn-star%2Freturn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Freturn.rs?ref=43fa2918d1e4dfd90f83ce46aac8373ae8120068", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+\n+#![feature(dyn_star)]\n+//~^ WARN the feature `dyn_star` is incomplete and may not be safe to use and/or cause compiler crashes\n+\n+fn _foo() -> dyn* Unpin {\n+    4usize\n+}\n+\n+fn main() {}"}, {"sha": "e000351a68f541d7057fbb4bc49708ef5722b0e2", "filename": "src/test/ui/dyn-star/return.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/43fa2918d1e4dfd90f83ce46aac8373ae8120068/src%2Ftest%2Fui%2Fdyn-star%2Freturn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/43fa2918d1e4dfd90f83ce46aac8373ae8120068/src%2Ftest%2Fui%2Fdyn-star%2Freturn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdyn-star%2Freturn.stderr?ref=43fa2918d1e4dfd90f83ce46aac8373ae8120068", "patch": "@@ -0,0 +1,11 @@\n+warning: the feature `dyn_star` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/return.rs:3:12\n+   |\n+LL | #![feature(dyn_star)]\n+   |            ^^^^^^^^\n+   |\n+   = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+warning: 1 warning emitted\n+"}]}