{"sha": "84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YTU2ZWQ3Y2RiYTNkMDc1MWI3YTk1ZDA5MjEwZjI2YmQzZTQ0YzY=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-31T23:27:39Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-05-31T23:28:13Z"}, "message": "Teach the compiler to understand yield and join, as well as using task as a type name.", "tree": {"sha": "efbb445bb0cd1172c769b2ce22cee35ee87827f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efbb445bb0cd1172c769b2ce22cee35ee87827f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "html_url": "https://github.com/rust-lang/rust/commit/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/comments", "author": null, "committer": null, "parents": [{"sha": "9daa00bf83644b6218552f73bab021b624d5f568", "url": "https://api.github.com/repos/rust-lang/rust/commits/9daa00bf83644b6218552f73bab021b624d5f568", "html_url": "https://github.com/rust-lang/rust/commit/9daa00bf83644b6218552f73bab021b624d5f568"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "a27de4b969ffbcb22df12c71f5792ea943d4c279", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -321,6 +321,7 @@ tag ty_ {\n     ty_str;\n     ty_box(mt);\n     ty_vec(mt);\n+    ty_task;\n     ty_port(@ty);\n     ty_chan(@ty);\n     ty_tup(vec[mt]);"}, {"sha": "9ad6b51632a07c9b4930ec46a4507adbc80a674e", "filename": "src/comp/front/creader.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fcreader.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -106,6 +106,7 @@ fn parse_ty(@pstate st, str_def sd) -> ty::t {\n         case ('p') { ret ty::mk_param(st.tcx, parse_int(st) as uint); }\n         case ('@') { ret ty::mk_box(st.tcx, parse_mt(st, sd)); }\n         case ('V') { ret ty::mk_vec(st.tcx, parse_mt(st, sd)); }\n+        case ('a') { ret ty::mk_task(st.tcx); }\n         case ('P') { ret ty::mk_port(st.tcx, parse_ty(st, sd)); }\n         case ('C') { ret ty::mk_chan(st.tcx, parse_ty(st, sd)); }\n         case ('T') {"}, {"sha": "ecfd881a613e9d18cb22748a0d0f8282728a1af5", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -208,7 +208,6 @@ fn bad_expr_word_table() -> std::map::hashmap[str, ()] {\n     words.insert(\"const\", ());\n     words.insert(\"log\", ());\n     words.insert(\"log_err\", ());\n-    words.insert(\"yield\", ());\n     words.insert(\"tag\", ());\n     words.insert(\"obj\", ());\n     ret words;\n@@ -482,6 +481,7 @@ fn parse_ty(&parser p) -> @ast::ty {\n     else if (eat_word(p, \"float\")) { t = ast::ty_float; }\n     else if (eat_word(p, \"str\")) { t = ast::ty_str; }\n     else if (eat_word(p, \"char\")) { t = ast::ty_char; }\n+    else if (eat_word(p, \"task\")) { t = ast::ty_task; }\n     else if (eat_word(p, \"i8\")) { t = ast::ty_machine(common::ty_i8); }\n     else if (eat_word(p, \"i16\")) { t = ast::ty_machine(common::ty_i16); }\n     else if (eat_word(p, \"i32\")) { t = ast::ty_machine(common::ty_i32); }"}, {"sha": "7dd1c5d28cbafda2b6649ed5c83a7f7a41296925", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -772,6 +772,7 @@ fn fold_ty(&ctxt cx, ty_fold fld, t ty_0) -> t {\n         case (ty_str)           { /* no-op */ }\n         case (ty_type)          { /* no-op */ }\n         case (ty_native)        { /* no-op */ }\n+        case (ty_task)          { /* no-op */ }\n         case (ty_box(?tm)) {\n             ty = copy_cname(cx, mk_box(cx, rec(ty=fold_ty(cx, fld, tm.ty),\n                                                mut=tm.mut)), ty);"}, {"sha": "589105867bdb2a7bae4c290eb101ed4dfd4a5e91", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -284,7 +284,7 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n         case (ast::ty_vec(?mt)) {\n             typ = ty::mk_vec(tcx, ast_mt_to_mt(tcx, getter, mt));\n         }\n-\n+        case (ast::ty_task) { typ = ty::mk_task(tcx); }\n         case (ast::ty_port(?t)) {\n             typ = ty::mk_port(tcx, ast_ty_to_ty(tcx, getter, t));\n         }"}, {"sha": "1cec06cd9f8f9ff66b4c21e3e4989d723bed3641", "filename": "src/comp/middle/walk.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84a56ed7cdba3d0751b7a95d09210f26bd3e44c6/src%2Fcomp%2Fmiddle%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fwalk.rs?ref=84a56ed7cdba3d0751b7a95d09210f26bd3e44c6", "patch": "@@ -154,6 +154,7 @@ fn walk_ty(&ast_visitor v, @ast::ty t) {\n         case (ast::ty_str) {}\n         case (ast::ty_box(?mt)) { walk_ty(v, mt.ty); }\n         case (ast::ty_vec(?mt)) { walk_ty(v, mt.ty); }\n+        case (ast::ty_task) {}\n         case (ast::ty_port(?t)) { walk_ty(v, t); }\n         case (ast::ty_chan(?t)) { walk_ty(v, t); }\n         case (ast::ty_tup(?mts)) {"}]}