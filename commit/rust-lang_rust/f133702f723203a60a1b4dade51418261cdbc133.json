{"sha": "f133702f723203a60a1b4dade51418261cdbc133", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMzM3MDJmNzIzMjAzYTYwYTFiNGRhZGU1MTQxODI2MWNkYmMxMzM=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-20T18:27:23Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-20T18:27:23Z"}, "message": "Merge #574\n\n574: refactor completions to use TextEdit instead of InsertText r=matklad a=gfreezy\n\n1. migrate from `insertText` to `TextEdit` from `CompleteItem`\r\n2. use `insta` to test completions\n\nCo-authored-by: gfreezy <gfreezy@gmail.com>", "tree": {"sha": "4d6d38d2e6185bb39b08ccfd5b89cdb5740d5ef8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d6d38d2e6185bb39b08ccfd5b89cdb5740d5ef8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f133702f723203a60a1b4dade51418261cdbc133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f133702f723203a60a1b4dade51418261cdbc133", "html_url": "https://github.com/rust-lang/rust/commit/f133702f723203a60a1b4dade51418261cdbc133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f133702f723203a60a1b4dade51418261cdbc133/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "b89f8b6b4929ec09be4f9b13f87ad56b3235bd39", "url": "https://api.github.com/repos/rust-lang/rust/commits/b89f8b6b4929ec09be4f9b13f87ad56b3235bd39", "html_url": "https://github.com/rust-lang/rust/commit/b89f8b6b4929ec09be4f9b13f87ad56b3235bd39"}, {"sha": "fd8db14c2fcec7801edbdbb8e7f4d4c982a3da09", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8db14c2fcec7801edbdbb8e7f4d4c982a3da09", "html_url": "https://github.com/rust-lang/rust/commit/fd8db14c2fcec7801edbdbb8e7f4d4c982a3da09"}], "stats": {"total": 2524, "additions": 2206, "deletions": 318}, "files": [{"sha": "855f5d9640fba99e7d7592bb9d1275ebcae1acc8", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -19,7 +19,7 @@ use crate::{\n     },\n };\n \n-pub use crate::completion::completion_item::{CompletionItem, InsertText, CompletionItemKind};\n+pub use crate::completion::completion_item::{CompletionItem, CompletionItemKind, InsertTextFormat};\n \n /// Main entry point for completion. We run completion as a two-phase process.\n ///\n@@ -60,15 +60,3 @@ pub(crate) fn completions(db: &db::RootDatabase, position: FilePosition) -> Opti\n \n     Some(acc)\n }\n-\n-#[cfg(test)]\n-fn check_completion(code: &str, expected_completions: &str, kind: CompletionKind) {\n-    use crate::mock_analysis::{single_file_with_position, analysis_and_position};\n-    let (analysis, position) = if code.contains(\"//-\") {\n-        analysis_and_position(code)\n-    } else {\n-        single_file_with_position(code)\n-    };\n-    let completions = completions(&analysis.db, position).unwrap();\n-    completions.assert_match(expected_completions, kind);\n-}"}, {"sha": "32fd497be9baec1b003c378d8476b71e04b2bc16", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 27, "deletions": 18, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -1,6 +1,7 @@\n use hir::{Ty, Def};\n \n-use crate::completion::{CompletionContext, Completions, CompletionKind, CompletionItem, CompletionItemKind};\n+use crate::completion::{CompletionContext, Completions, CompletionItem, CompletionItemKind};\n+use crate::completion::completion_item::CompletionKind;\n \n /// Complete dot accesses, i.e. fields or methods (currently only fields).\n pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -32,6 +33,7 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty)\n                         for field in s.fields(ctx.db) {\n                             CompletionItem::new(\n                                 CompletionKind::Reference,\n+                                ctx.source_range(),\n                                 field.name().to_string(),\n                             )\n                             .kind(CompletionItemKind::Field)\n@@ -45,9 +47,13 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty)\n             }\n             Ty::Tuple(fields) => {\n                 for (i, _ty) in fields.iter().enumerate() {\n-                    CompletionItem::new(CompletionKind::Reference, i.to_string())\n-                        .kind(CompletionItemKind::Field)\n-                        .add_to(acc);\n+                    CompletionItem::new(\n+                        CompletionKind::Reference,\n+                        ctx.source_range(),\n+                        i.to_string(),\n+                    )\n+                    .kind(CompletionItemKind::Field)\n+                    .add_to(acc);\n                 }\n             }\n             _ => {}\n@@ -59,10 +65,14 @@ fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty\n     receiver.iterate_methods(ctx.db, |func| {\n         let sig = func.signature(ctx.db);\n         if sig.has_self_param() {\n-            CompletionItem::new(CompletionKind::Reference, sig.name().to_string())\n-                .from_function(ctx, func)\n-                .kind(CompletionItemKind::Method)\n-                .add_to(acc);\n+            CompletionItem::new(\n+                CompletionKind::Reference,\n+                ctx.source_range(),\n+                sig.name().to_string(),\n+            )\n+            .from_function(ctx, func)\n+            .kind(CompletionItemKind::Method)\n+            .add_to(acc);\n         }\n         None::<()>\n     });\n@@ -71,27 +81,29 @@ fn complete_methods(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty\n #[cfg(test)]\n mod tests {\n     use crate::completion::*;\n+    use crate::completion::completion_item::check_completion;\n \n-    fn check_ref_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Reference);\n+    fn check_ref_completion(name: &str, code: &str) {\n+        check_completion(name, code, CompletionKind::Reference);\n     }\n \n     #[test]\n     fn test_struct_field_completion() {\n         check_ref_completion(\n+            \"struct_field_completion\",\n             r\"\n             struct A { the_field: u32 }\n             fn foo(a: A) {\n                a.<|>\n             }\n             \",\n-            r#\"the_field \"u32\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_struct_field_completion_self() {\n         check_ref_completion(\n+            \"struct_field_completion_self\",\n             r\"\n             struct A { the_field: (u32,) }\n             impl A {\n@@ -100,14 +112,13 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"the_field \"(u32,)\"\n-               foo \"foo($0)\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_struct_field_completion_autoderef() {\n         check_ref_completion(\n+            \"struct_field_completion_autoderef\",\n             r\"\n             struct A { the_field: (u32, i32) }\n             impl A {\n@@ -116,27 +127,26 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"the_field \"(u32, i32)\"\n-               foo \"foo($0)\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_no_struct_field_completion_for_method_call() {\n         check_ref_completion(\n+            \"no_struct_field_completion_for_method_call\",\n             r\"\n             struct A { the_field: u32 }\n             fn foo(a: A) {\n                a.<|>()\n             }\n             \",\n-            r#\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_method_completion() {\n         check_ref_completion(\n+            \"method_completion\",\n             r\"\n             struct A {}\n             impl A {\n@@ -146,13 +156,13 @@ mod tests {\n                a.<|>\n             }\n             \",\n-            r#\"the_method \"the_method($0)\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_no_non_self_method() {\n         check_ref_completion(\n+            \"no_non_self_method\",\n             r\"\n             struct A {}\n             impl A {\n@@ -162,7 +172,6 @@ mod tests {\n                a.<|>\n             }\n             \",\n-            r#\"\"#,\n         );\n     }\n }"}, {"sha": "8d4df4ea15c2c0fee8196572db6913a068934499", "filename": "crates/ra_ide_api/src/completion/complete_fn_param.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -34,7 +34,7 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n             }\n         })\n         .for_each(|(label, lookup)| {\n-            CompletionItem::new(CompletionKind::Magic, label)\n+            CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label)\n                 .lookup_by(lookup)\n                 .add_to(acc)\n         });\n@@ -56,38 +56,40 @@ pub(super) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n #[cfg(test)]\n mod tests {\n     use crate::completion::*;\n+    use crate::completion::completion_item::check_completion;\n \n-    fn check_magic_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Magic);\n+    fn check_magic_completion(name: &str, code: &str) {\n+        check_completion(name, code, CompletionKind::Magic);\n     }\n \n     #[test]\n     fn test_param_completion_last_param() {\n         check_magic_completion(\n+            \"param_completion_last_param\",\n             r\"\n             fn foo(file_id: FileId) {}\n             fn bar(file_id: FileId) {}\n             fn baz(file<|>) {}\n             \",\n-            r#\"file_id \"file_id: FileId\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_param_completion_nth_param() {\n         check_magic_completion(\n+            \"param_completion_nth_param\",\n             r\"\n             fn foo(file_id: FileId) {}\n             fn bar(file_id: FileId) {}\n             fn baz(file<|>, x: i32) {}\n             \",\n-            r#\"file_id \"file_id: FileId\"\"#,\n         );\n     }\n \n     #[test]\n     fn test_param_completion_trait_param() {\n         check_magic_completion(\n+            \"param_completion_trait_param\",\n             r\"\n             pub(crate) trait SourceRoot {\n                 pub fn contains(&self, file_id: FileId) -> bool;\n@@ -96,7 +98,6 @@ mod tests {\n                 pub fn syntax(&self, file<|>)\n             }\n             \",\n-            r#\"file_id \"file_id: FileId\"\"#,\n         );\n     }\n }"}, {"sha": "10ae01bc598441e52fe5798c4a5c53fd198191a8", "filename": "crates/ra_ide_api/src/completion/complete_keyword.rs", "status": "modified", "additions": 47, "deletions": 118, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -9,38 +9,36 @@ use crate::completion::{CompletionContext, CompletionItem, Completions, Completi\n \n pub(super) fn complete_use_tree_keyword(acc: &mut Completions, ctx: &CompletionContext) {\n     // complete keyword \"crate\" in use stmt\n+    let source_range = ctx.source_range();\n     match (ctx.use_item_syntax.as_ref(), ctx.path_prefix.as_ref()) {\n         (Some(_), None) => {\n-            CompletionItem::new(CompletionKind::Keyword, \"crate\")\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"crate\")\n                 .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"crate\")\n-                .snippet(\"crate::\")\n+                .insert_text(\"crate::\")\n                 .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"self\")\n                 .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"self\")\n                 .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"super\")\n                 .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"super\")\n+                .insert_text(\"super::\")\n                 .add_to(acc);\n         }\n         (Some(_), Some(_)) => {\n-            CompletionItem::new(CompletionKind::Keyword, \"self\")\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"self\")\n                 .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"self\")\n                 .add_to(acc);\n-            CompletionItem::new(CompletionKind::Keyword, \"super\")\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"super\")\n                 .kind(CompletionItemKind::Keyword)\n-                .lookup_by(\"super\")\n+                .insert_text(\"super::\")\n                 .add_to(acc);\n         }\n         _ => {}\n     }\n }\n \n-fn keyword(kw: &str, snippet: &str) -> CompletionItem {\n-    CompletionItem::new(CompletionKind::Keyword, kw)\n+fn keyword(ctx: &CompletionContext, kw: &str, snippet: &str) -> CompletionItem {\n+    CompletionItem::new(CompletionKind::Keyword, ctx.source_range(), kw)\n         .kind(CompletionItemKind::Keyword)\n         .snippet(snippet)\n         .build()\n@@ -55,25 +53,25 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         Some(it) => it,\n         None => return,\n     };\n-    acc.add(keyword(\"if\", \"if $0 {}\"));\n-    acc.add(keyword(\"match\", \"match $0 {}\"));\n-    acc.add(keyword(\"while\", \"while $0 {}\"));\n-    acc.add(keyword(\"loop\", \"loop {$0}\"));\n+    acc.add(keyword(ctx, \"if\", \"if $0 {}\"));\n+    acc.add(keyword(ctx, \"match\", \"match $0 {}\"));\n+    acc.add(keyword(ctx, \"while\", \"while $0 {}\"));\n+    acc.add(keyword(ctx, \"loop\", \"loop {$0}\"));\n \n     if ctx.after_if {\n-        acc.add(keyword(\"else\", \"else {$0}\"));\n-        acc.add(keyword(\"else if\", \"else if $0 {}\"));\n+        acc.add(keyword(ctx, \"else\", \"else {$0}\"));\n+        acc.add(keyword(ctx, \"else if\", \"else if $0 {}\"));\n     }\n     if is_in_loop_body(ctx.leaf) {\n         if ctx.can_be_stmt {\n-            acc.add(keyword(\"continue\", \"continue;\"));\n-            acc.add(keyword(\"break\", \"break;\"));\n+            acc.add(keyword(ctx, \"continue\", \"continue;\"));\n+            acc.add(keyword(ctx, \"break\", \"break;\"));\n         } else {\n-            acc.add(keyword(\"continue\", \"continue\"));\n-            acc.add(keyword(\"break\", \"break\"));\n+            acc.add(keyword(ctx, \"continue\", \"continue\"));\n+            acc.add(keyword(ctx, \"break\", \"break\"));\n         }\n     }\n-    acc.add_all(complete_return(fn_def, ctx.can_be_stmt));\n+    acc.add_all(complete_return(ctx, fn_def, ctx.can_be_stmt));\n }\n \n fn is_in_loop_body(leaf: &SyntaxNode) -> bool {\n@@ -95,170 +93,129 @@ fn is_in_loop_body(leaf: &SyntaxNode) -> bool {\n     false\n }\n \n-fn complete_return(fn_def: &ast::FnDef, can_be_stmt: bool) -> Option<CompletionItem> {\n+fn complete_return(\n+    ctx: &CompletionContext,\n+    fn_def: &ast::FnDef,\n+    can_be_stmt: bool,\n+) -> Option<CompletionItem> {\n     let snip = match (can_be_stmt, fn_def.ret_type().is_some()) {\n         (true, true) => \"return $0;\",\n         (true, false) => \"return;\",\n         (false, true) => \"return $0\",\n         (false, false) => \"return\",\n     };\n-    Some(keyword(\"return\", snip))\n+    Some(keyword(ctx, \"return\", snip))\n }\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{CompletionKind, check_completion};\n-    fn check_keyword_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Keyword);\n+    use crate::completion::CompletionKind;\n+    use crate::completion::completion_item::check_completion;\n+\n+    fn check_keyword_completion(name: &str, code: &str) {\n+        check_completion(name, code, CompletionKind::Keyword);\n     }\n \n     #[test]\n     fn completes_keywords_in_use_stmt() {\n         check_keyword_completion(\n+            \"keywords_in_use_stmt1\",\n             r\"\n             use <|>\n             \",\n-            r#\"\n-            crate \"crate\" \"crate::\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n         );\n \n         check_keyword_completion(\n+            \"keywords_in_use_stmt2\",\n             r\"\n             use a::<|>\n             \",\n-            r#\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n         );\n \n         check_keyword_completion(\n+            \"keywords_in_use_stmt3\",\n             r\"\n             use a::{b, <|>}\n             \",\n-            r#\"\n-            self \"self\"\n-            super \"super\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn completes_various_keywords_in_function() {\n         check_keyword_completion(\n+            \"keywords_in_function1\",\n             r\"\n             fn quux() {\n                 <|>\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return;\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn completes_else_after_if() {\n         check_keyword_completion(\n+            \"keywords_in_function2\",\n             r\"\n             fn quux() {\n                 if true {\n                     ()\n                 } <|>\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            else \"else {$0}\"\n-            else if \"else if $0 {}\"\n-            return \"return;\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn test_completion_return_value() {\n         check_keyword_completion(\n+            \"keywords_in_function3\",\n             r\"\n             fn quux() -> i32 {\n                 <|>\n                 92\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return $0;\"\n-            \"#,\n         );\n         check_keyword_completion(\n+            \"keywords_in_function4\",\n             r\"\n             fn quux() {\n                 <|>\n                 92\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return;\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn dont_add_semi_after_return_if_not_a_statement() {\n         check_keyword_completion(\n+            \"dont_add_semi_after_return_if_not_a_statement\",\n             r\"\n             fn quux() -> i32 {\n                 match () {\n                     () => <|>\n                 }\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return $0\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn last_return_in_block_has_semi() {\n         check_keyword_completion(\n+            \"last_return_in_block_has_semi1\",\n             r\"\n             fn quux() -> i32 {\n                 if condition {\n                     <|>\n                 }\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return $0;\"\n-            \"#,\n         );\n         check_keyword_completion(\n+            \"last_return_in_block_has_semi2\",\n             r\"\n             fn quux() -> i32 {\n                 if condition {\n@@ -268,54 +225,35 @@ mod tests {\n                 x\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return $0;\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn completes_break_and_continue_in_loops() {\n         check_keyword_completion(\n+            \"completes_break_and_continue_in_loops1\",\n             r\"\n             fn quux() -> i32 {\n                 loop { <|> }\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            continue \"continue;\"\n-            break \"break;\"\n-            return \"return $0;\"\n-            \"#,\n         );\n+\n         // No completion: lambda isolates control flow\n         check_keyword_completion(\n+            \"completes_break_and_continue_in_loops2\",\n             r\"\n             fn quux() -> i32 {\n                 loop { || { <|> } }\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            return \"return $0;\"\n-            \"#,\n         );\n     }\n \n     #[test]\n     fn no_semi_after_break_continue_in_expr() {\n         check_keyword_completion(\n+            \"no_semi_after_break_continue_in_expr\",\n             r\"\n             fn f() {\n                 loop {\n@@ -325,15 +263,6 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"\n-            if \"if $0 {}\"\n-            match \"match $0 {}\"\n-            while \"while $0 {}\"\n-            loop \"loop {$0}\"\n-            continue \"continue\"\n-            break \"break\"\n-            return \"return\"\n-            \"#,\n         )\n     }\n }"}, {"sha": "804954ee16ce8e2fcfca2df835a5ebfd94ca8f4b", "filename": "crates/ra_ide_api/src/completion/complete_path.rs", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -15,18 +15,26 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n         hir::Def::Module(module) => {\n             let module_scope = module.scope(ctx.db);\n             for (name, res) in module_scope.entries() {\n-                CompletionItem::new(CompletionKind::Reference, name.to_string())\n-                    .from_resolution(ctx, res)\n-                    .add_to(acc);\n+                CompletionItem::new(\n+                    CompletionKind::Reference,\n+                    ctx.source_range(),\n+                    name.to_string(),\n+                )\n+                .from_resolution(ctx, res)\n+                .add_to(acc);\n             }\n         }\n         hir::Def::Enum(e) => {\n             e.variants(ctx.db)\n                 .into_iter()\n                 .for_each(|(variant_name, _variant)| {\n-                    CompletionItem::new(CompletionKind::Reference, variant_name.to_string())\n-                        .kind(CompletionItemKind::EnumVariant)\n-                        .add_to(acc)\n+                    CompletionItem::new(\n+                        CompletionKind::Reference,\n+                        ctx.source_range(),\n+                        variant_name.to_string(),\n+                    )\n+                    .kind(CompletionItemKind::EnumVariant)\n+                    .add_to(acc)\n                 });\n         }\n         _ => return,\n@@ -35,7 +43,8 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) {\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{CompletionKind, check_completion};\n+    use crate::completion::CompletionKind;\n+    use crate::completion::completion_item::check_completion;\n \n     fn check_reference_completion(code: &str, expected_completions: &str) {\n         check_completion(code, expected_completions, CompletionKind::Reference);\n@@ -44,48 +53,49 @@ mod tests {\n     #[test]\n     fn completes_use_item_starting_with_self() {\n         check_reference_completion(\n+            \"use_item_starting_with_self\",\n             r\"\n             use self::m::<|>;\n \n             mod m {\n                 struct Bar;\n             }\n             \",\n-            \"Bar\",\n         );\n     }\n \n     #[test]\n     fn completes_use_item_starting_with_crate() {\n         check_reference_completion(\n+            \"use_item_starting_with_crate\",\n             \"\n             //- /lib.rs\n             mod foo;\n             struct Spam;\n             //- /foo.rs\n             use crate::Sp<|>\n             \",\n-            \"Spam;foo\",\n         );\n     }\n \n     #[test]\n     fn completes_nested_use_tree() {\n         check_reference_completion(\n+            \"nested_use_tree\",\n             \"\n             //- /lib.rs\n             mod foo;\n             struct Spam;\n             //- /foo.rs\n             use crate::{Sp<|>};\n             \",\n-            \"Spam;foo\",\n         );\n     }\n \n     #[test]\n     fn completes_deeply_nested_use_tree() {\n         check_reference_completion(\n+            \"deeply_nested_use_tree\",\n             \"\n             //- /lib.rs\n             mod foo;\n@@ -97,45 +107,44 @@ mod tests {\n             //- /foo.rs\n             use crate::{bar::{baz::Sp<|>}};\n             \",\n-            \"Spam\",\n         );\n     }\n \n     #[test]\n     fn completes_enum_variant() {\n         check_reference_completion(\n+            \"reference_completion\",\n             \"\n             //- /lib.rs\n             enum E { Foo, Bar(i32) }\n             fn foo() { let _ = E::<|> }\n             \",\n-            \"Foo;Bar\",\n         );\n     }\n \n     #[test]\n     fn dont_render_function_parens_in_use_item() {\n         check_reference_completion(\n+            \"dont_render_function_parens_in_use_item\",\n             \"\n             //- /lib.rs\n             mod m { pub fn foo() {} }\n             use crate::m::f<|>;\n             \",\n-            \"foo\",\n         )\n     }\n \n     #[test]\n     fn dont_render_function_parens_if_already_call() {\n         check_reference_completion(\n+            \"dont_render_function_parens_if_already_call\",\n             \"\n             //- /lib.rs\n             fn frobnicate() {}\n             fn main() {\n                 frob<|>();\n             }\n             \",\n-            \"main;frobnicate\",\n         )\n     }\n }"}, {"sha": "20fc77f06e2897cb248514246f6b8737dd07f2c0", "filename": "crates/ra_ide_api/src/completion/complete_scope.rs", "status": "modified", "additions": 36, "deletions": 26, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -1,6 +1,5 @@\n use rustc_hash::FxHashSet;\n-use ra_syntax::{AstNode, TextUnit};\n-\n+use ra_syntax::ast::AstNode;\n use crate::completion::{CompletionItem, CompletionItemKind, Completions, CompletionKind, CompletionContext};\n \n pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n@@ -13,7 +12,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n     };\n     if let Some(function) = &ctx.function {\n         let scopes = function.scopes(ctx.db);\n-        complete_fn(acc, &scopes, ctx.offset);\n+        complete_fn(acc, &scopes, ctx);\n     }\n \n     let module_scope = module.scope(ctx.db);\n@@ -30,50 +29,64 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) {\n             }\n         })\n         .for_each(|(name, res)| {\n-            CompletionItem::new(CompletionKind::Reference, name.to_string())\n-                .from_resolution(ctx, res)\n-                .add_to(acc)\n+            CompletionItem::new(\n+                CompletionKind::Reference,\n+                ctx.source_range(),\n+                name.to_string(),\n+            )\n+            .from_resolution(ctx, res)\n+            .add_to(acc)\n         });\n }\n \n-fn complete_fn(acc: &mut Completions, scopes: &hir::ScopesWithSyntaxMapping, offset: TextUnit) {\n+fn complete_fn(\n+    acc: &mut Completions,\n+    scopes: &hir::ScopesWithSyntaxMapping,\n+    ctx: &CompletionContext,\n+) {\n     let mut shadowed = FxHashSet::default();\n     scopes\n-        .scope_chain_for_offset(offset)\n+        .scope_chain_for_offset(ctx.offset)\n         .flat_map(|scope| scopes.scopes.entries(scope).iter())\n         .filter(|entry| shadowed.insert(entry.name()))\n         .for_each(|entry| {\n-            CompletionItem::new(CompletionKind::Reference, entry.name().to_string())\n-                .kind(CompletionItemKind::Binding)\n-                .add_to(acc)\n+            CompletionItem::new(\n+                CompletionKind::Reference,\n+                ctx.source_range(),\n+                entry.name().to_string(),\n+            )\n+            .kind(CompletionItemKind::Binding)\n+            .add_to(acc)\n         });\n }\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{CompletionKind, check_completion};\n+    use crate::completion::CompletionKind;\n+    use crate::completion::completion_item::check_completion;\n \n-    fn check_reference_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Reference);\n+    fn check_reference_completion(name: &str, code: &str) {\n+        check_completion(name, code, CompletionKind::Reference);\n     }\n \n     #[test]\n     fn completes_bindings_from_let() {\n         check_reference_completion(\n+            \"bindings_from_let\",\n             r\"\n             fn quux(x: i32) {\n                 let y = 92;\n                 1 + <|>;\n                 let z = ();\n             }\n             \",\n-            r#\"y;x;quux \"quux($0)\"\"#,\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_if_let() {\n         check_reference_completion(\n+            \"bindings_from_if_let\",\n             r\"\n             fn quux() {\n                 if let Some(x) = foo() {\n@@ -85,66 +98,66 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"b;a;quux \"quux()$0\"\"#,\n         );\n     }\n \n     #[test]\n     fn completes_bindings_from_for() {\n         check_reference_completion(\n+            \"bindings_from_for\",\n             r\"\n             fn quux() {\n                 for x in &[1, 2, 3] {\n                     <|>\n                 }\n             }\n             \",\n-            r#\"x;quux \"quux()$0\"\"#,\n         );\n     }\n \n     #[test]\n     fn completes_module_items() {\n         check_reference_completion(\n+            \"module_items\",\n             r\"\n             struct Foo;\n             enum Baz {}\n             fn quux() {\n                 <|>\n             }\n             \",\n-            r#\"quux \"quux()$0\";Foo;Baz\"#,\n         );\n     }\n \n     #[test]\n     fn completes_module_items_in_nested_modules() {\n         check_reference_completion(\n+            \"module_items_in_nested_modules\",\n             r\"\n             struct Foo;\n             mod m {\n                 struct Bar;\n                 fn quux() { <|> }\n             }\n             \",\n-            r#\"quux \"quux()$0\";Bar\"#,\n         );\n     }\n \n     #[test]\n     fn completes_return_type() {\n         check_reference_completion(\n+            \"return_type\",\n             r\"\n             struct Foo;\n             fn x() -> <|>\n             \",\n-            r#\"Foo;x \"x()$0\"\"#,\n         )\n     }\n \n     #[test]\n     fn dont_show_both_completions_for_shadowing() {\n         check_reference_completion(\n+            \"dont_show_both_completions_for_shadowing\",\n             r\"\n             fn foo() -> {\n                 let bar = 92;\n@@ -154,32 +167,29 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"bar;foo \"foo()$0\"\"#,\n         )\n     }\n \n     #[test]\n     fn completes_self_in_methods() {\n-        check_reference_completion(r\"impl S { fn foo(&self) { <|> } }\", \"self\")\n+        check_reference_completion(\"self_in_methods\", r\"impl S { fn foo(&self) { <|> } }\")\n     }\n \n     #[test]\n     fn inserts_parens_for_function_calls() {\n         check_reference_completion(\n+            \"inserts_parens_for_function_calls1\",\n             r\"\n             fn no_args() {}\n             fn main() { no_<|> }\n             \",\n-            r#\"no_args \"no_args()$0\"\n-               main \"main()$0\"\"#,\n         );\n         check_reference_completion(\n+            \"inserts_parens_for_function_calls2\",\n             r\"\n             fn with_args(x: i32, y: String) {}\n             fn main() { with_<|> }\n             \",\n-            r#\"main \"main()$0\"\n-               with_args \"with_args($0)\"\"#,\n         );\n     }\n }"}, {"sha": "d3344b865b33d5aca730f8ada8c1abe69fe9366f", "filename": "crates/ra_ide_api/src/completion/complete_snippet.rs", "status": "modified", "additions": 13, "deletions": 24, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -1,7 +1,7 @@\n use crate::completion::{CompletionItem, Completions, CompletionKind, CompletionItemKind, CompletionContext, completion_item::Builder};\n \n-fn snippet(label: &str, snippet: &str) -> Builder {\n-    CompletionItem::new(CompletionKind::Snippet, label)\n+fn snippet(ctx: &CompletionContext, label: &str, snippet: &str) -> Builder {\n+    CompletionItem::new(CompletionKind::Snippet, ctx.source_range(), label)\n         .snippet(snippet)\n         .kind(CompletionItemKind::Snippet)\n }\n@@ -10,15 +10,16 @@ pub(super) fn complete_expr_snippet(acc: &mut Completions, ctx: &CompletionConte\n     if !(ctx.is_trivial_path && ctx.function_syntax.is_some()) {\n         return;\n     }\n-    snippet(\"pd\", \"eprintln!(\\\"$0 = {:?}\\\", $0);\").add_to(acc);\n-    snippet(\"ppd\", \"eprintln!(\\\"$0 = {:#?}\\\", $0);\").add_to(acc);\n+    snippet(ctx, \"pd\", \"eprintln!(\\\"$0 = {:?}\\\", $0);\").add_to(acc);\n+    snippet(ctx, \"ppd\", \"eprintln!(\\\"$0 = {:#?}\\\", $0);\").add_to(acc);\n }\n \n pub(super) fn complete_item_snippet(acc: &mut Completions, ctx: &CompletionContext) {\n     if !ctx.is_new_item {\n         return;\n     }\n     snippet(\n+        ctx,\n         \"Test function\",\n         \"\\\n #[test]\n@@ -29,45 +30,33 @@ fn ${1:feature}() {\n     .lookup_by(\"tfn\")\n     .add_to(acc);\n \n-    snippet(\"pub(crate)\", \"pub(crate) $0\").add_to(acc);\n+    snippet(ctx, \"pub(crate)\", \"pub(crate) $0\").add_to(acc);\n }\n \n #[cfg(test)]\n mod tests {\n-    use crate::completion::{CompletionKind, check_completion};\n-    fn check_snippet_completion(code: &str, expected_completions: &str) {\n-        check_completion(code, expected_completions, CompletionKind::Snippet);\n+    use crate::completion::CompletionKind;\n+    use crate::completion::completion_item::check_completion;\n+\n+    fn check_snippet_completion(name: &str, code: &str) {\n+        check_completion(name, code, CompletionKind::Snippet);\n     }\n \n     #[test]\n     fn completes_snippets_in_expressions() {\n-        check_snippet_completion(\n-            r\"fn foo(x: i32) { <|> }\",\n-            r##\"\n-            pd \"eprintln!(\\\"$0 = {:?}\\\", $0);\"\n-            ppd \"eprintln!(\\\"$0 = {:#?}\\\", $0);\"\n-            \"##,\n-        );\n+        check_snippet_completion(\"snippets_in_expressions\", r\"fn foo(x: i32) { <|> }\");\n     }\n \n     #[test]\n     fn completes_snippets_in_items() {\n-        // check_snippet_completion(r\"\n-        //     <|>\n-        //     \",\n-        //     r##\"[CompletionItem { label: \"Test function\", lookup: None, snippet: Some(\"#[test]\\nfn test_${1:feature}() {\\n$0\\n}\"##,\n-        // );\n         check_snippet_completion(\n+            \"snippets_in_items\",\n             r\"\n             #[cfg(test)]\n             mod tests {\n                 <|>\n             }\n             \",\n-            r##\"\n-            tfn \"Test function\" \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\"\n-            pub(crate) \"pub(crate) $0\"\n-            \"##,\n         );\n     }\n }"}, {"sha": "b09c66c18d2553e8b30807cb4497febbb02fba23", "filename": "crates/ra_ide_api/src/completion/completion_context.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -12,7 +12,7 @@ use crate::{db, FilePosition};\n /// `CompletionContext` is created early during completion to figure out, where\n /// exactly is the cursor, syntax-wise.\n #[derive(Debug)]\n-pub(super) struct CompletionContext<'a> {\n+pub(crate) struct CompletionContext<'a> {\n     pub(super) db: &'a db::RootDatabase,\n     pub(super) offset: TextUnit,\n     pub(super) leaf: &'a SyntaxNode,\n@@ -65,6 +65,17 @@ impl<'a> CompletionContext<'a> {\n         Some(ctx)\n     }\n \n+    // The range of the identifier that is being completed.\n+    // This is purely advisory and can be used, for example, to highlight this range in the editor.\n+    // Clients are expected to ignore this field.\n+    pub(crate) fn source_range(&self) -> TextRange {\n+        match self.leaf.kind() {\n+            // workaroud when completion is triggered by trigger characters.\n+            DOT | COLONCOLON => TextRange::from_to(self.offset, self.offset),\n+            _ => self.leaf.range(),\n+        }\n+    }\n+\n     fn fill(&mut self, original_file: &'a SourceFile, offset: TextUnit) {\n         // Insert a fake ident to get a valid parse tree. We will use this file\n         // to determine context, though the original_file will be used for"}, {"sha": "f46d9e5812560e060cf8f148b1a94297d36c1be7", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 85, "deletions": 80, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -1,6 +1,8 @@\n use hir::PerNs;\n \n-use crate::completion::CompletionContext;\n+use crate::completion::completion_context::CompletionContext;\n+use ra_syntax::TextRange;\n+use ra_text_edit::TextEdit;\n \n /// `CompletionItem` describes a single completion variant in the editor pop-up.\n /// It is basically a POD with various properties. To construct a\n@@ -11,15 +13,13 @@ pub struct CompletionItem {\n     /// completion.\n     completion_kind: CompletionKind,\n     label: String,\n+    kind: Option<CompletionItemKind>,\n     detail: Option<String>,\n     lookup: Option<String>,\n-    snippet: Option<String>,\n-    kind: Option<CompletionItemKind>,\n-}\n-\n-pub enum InsertText {\n-    PlainText { text: String },\n-    Snippet { text: String },\n+    insert_text: Option<String>,\n+    insert_text_format: InsertTextFormat,\n+    source_range: TextRange,\n+    text_edit: Option<TextEdit>,\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq)]\n@@ -40,7 +40,7 @@ pub enum CompletionItemKind {\n     Method,\n }\n \n-#[derive(Debug, PartialEq, Eq)]\n+#[derive(Debug, PartialEq, Eq, Copy, Clone)]\n pub(crate) enum CompletionKind {\n     /// Parser-based keyword completion.\n     Keyword,\n@@ -51,16 +51,29 @@ pub(crate) enum CompletionKind {\n     Snippet,\n }\n \n+#[derive(Debug, PartialEq, Eq, Copy, Clone)]\n+pub enum InsertTextFormat {\n+    PlainText,\n+    Snippet,\n+}\n+\n impl CompletionItem {\n-    pub(crate) fn new(completion_kind: CompletionKind, label: impl Into<String>) -> Builder {\n+    pub(crate) fn new(\n+        completion_kind: CompletionKind,\n+        replace_range: TextRange,\n+        label: impl Into<String>,\n+    ) -> Builder {\n         let label = label.into();\n         Builder {\n+            source_range: replace_range,\n             completion_kind,\n             label,\n+            insert_text: None,\n+            insert_text_format: InsertTextFormat::PlainText,\n             detail: None,\n             lookup: None,\n-            snippet: None,\n             kind: None,\n+            text_edit: None,\n         }\n     }\n     /// What user sees in pop-up in the UI.\n@@ -78,30 +91,39 @@ impl CompletionItem {\n             .map(|it| it.as_str())\n             .unwrap_or(self.label())\n     }\n-    /// What is inserted.\n-    pub fn insert_text(&self) -> InsertText {\n-        match &self.snippet {\n-            None => InsertText::PlainText {\n-                text: self.label.clone(),\n-            },\n-            Some(it) => InsertText::Snippet { text: it.clone() },\n+\n+    pub fn insert_text_format(&self) -> InsertTextFormat {\n+        self.insert_text_format.clone()\n+    }\n+    pub fn insert_text(&self) -> String {\n+        match &self.insert_text {\n+            Some(t) => t.clone(),\n+            None => self.label.clone(),\n         }\n     }\n-\n     pub fn kind(&self) -> Option<CompletionItemKind> {\n         self.kind\n     }\n+    pub fn take_text_edit(&mut self) -> Option<TextEdit> {\n+        self.text_edit.take()\n+    }\n+    pub fn source_range(&self) -> TextRange {\n+        self.source_range\n+    }\n }\n \n /// A helper to make `CompletionItem`s.\n #[must_use]\n pub(crate) struct Builder {\n+    source_range: TextRange,\n     completion_kind: CompletionKind,\n     label: String,\n+    insert_text: Option<String>,\n+    insert_text_format: InsertTextFormat,\n     detail: Option<String>,\n     lookup: Option<String>,\n-    snippet: Option<String>,\n     kind: Option<CompletionItemKind>,\n+    text_edit: Option<TextEdit>,\n }\n \n impl Builder {\n@@ -111,27 +133,44 @@ impl Builder {\n \n     pub(crate) fn build(self) -> CompletionItem {\n         CompletionItem {\n+            source_range: self.source_range,\n             label: self.label,\n             detail: self.detail,\n+            insert_text_format: self.insert_text_format,\n             lookup: self.lookup,\n-            snippet: self.snippet,\n             kind: self.kind,\n             completion_kind: self.completion_kind,\n+            text_edit: self.text_edit,\n+            insert_text: self.insert_text,\n         }\n     }\n     pub(crate) fn lookup_by(mut self, lookup: impl Into<String>) -> Builder {\n         self.lookup = Some(lookup.into());\n         self\n     }\n-    pub(crate) fn snippet(mut self, snippet: impl Into<String>) -> Builder {\n-        self.snippet = Some(snippet.into());\n+    pub(crate) fn insert_text(mut self, insert_text: impl Into<String>) -> Builder {\n+        self.insert_text = Some(insert_text.into());\n+        self\n+    }\n+    #[allow(unused)]\n+    pub(crate) fn insert_text_format(mut self, insert_text_format: InsertTextFormat) -> Builder {\n+        self.insert_text_format = insert_text_format;\n         self\n     }\n+    pub(crate) fn snippet(mut self, snippet: impl Into<String>) -> Builder {\n+        self.insert_text_format = InsertTextFormat::Snippet;\n+        self.insert_text(snippet)\n+    }\n     pub(crate) fn kind(mut self, kind: CompletionItemKind) -> Builder {\n         self.kind = Some(kind);\n         self\n     }\n     #[allow(unused)]\n+    pub(crate) fn text_edit(mut self, edit: TextEdit) -> Builder {\n+        self.text_edit = Some(edit);\n+        self\n+    }\n+    #[allow(unused)]\n     pub(crate) fn detail(self, detail: impl Into<String>) -> Builder {\n         self.set_detail(Some(detail))\n     }\n@@ -192,17 +231,18 @@ impl Builder {\n         // If not an import, add parenthesis automatically.\n         if ctx.use_item_syntax.is_none() && !ctx.is_call {\n             if function.signature(ctx.db).params().is_empty() {\n-                self.snippet = Some(format!(\"{}()$0\", self.label));\n+                self.insert_text = Some(format!(\"{}()$0\", self.label));\n             } else {\n-                self.snippet = Some(format!(\"{}($0)\", self.label));\n+                self.insert_text = Some(format!(\"{}($0)\", self.label));\n             }\n+            self.insert_text_format = InsertTextFormat::Snippet;\n         }\n         self.kind = Some(CompletionItemKind::Function);\n         self\n     }\n }\n \n-impl Into<CompletionItem> for Builder {\n+impl<'a> Into<CompletionItem> for Builder {\n     fn into(self) -> CompletionItem {\n         self.build()\n     }\n@@ -225,64 +265,29 @@ impl Completions {\n     {\n         items.into_iter().for_each(|item| self.add(item.into()))\n     }\n-\n-    #[cfg(test)]\n-    pub(crate) fn assert_match(&self, expected: &str, kind: CompletionKind) {\n-        let expected = normalize(expected);\n-        let actual = self.debug_render(kind);\n-        test_utils::assert_eq_text!(expected.as_str(), actual.as_str(),);\n-\n-        /// Normalize the textual representation of `Completions`:\n-        /// replace `;` with newlines, normalize whitespace\n-        fn normalize(expected: &str) -> String {\n-            use ra_syntax::{tokenize, TextUnit, TextRange, SyntaxKind::SEMI};\n-            let mut res = String::new();\n-            for line in expected.trim().lines() {\n-                let line = line.trim();\n-                let mut start_offset: TextUnit = 0.into();\n-                // Yep, we use rust tokenize in completion tests :-)\n-                for token in tokenize(line) {\n-                    let range = TextRange::offset_len(start_offset, token.len);\n-                    start_offset += token.len;\n-                    if token.kind == SEMI {\n-                        res.push('\\n');\n-                    } else {\n-                        res.push_str(&line[range]);\n-                    }\n-                }\n-\n-                res.push('\\n');\n-            }\n-            res\n-        }\n-    }\n-\n-    #[cfg(test)]\n-    fn debug_render(&self, kind: CompletionKind) -> String {\n-        let mut res = String::new();\n-        for c in self.buf.iter() {\n-            if c.completion_kind == kind {\n-                if let Some(lookup) = &c.lookup {\n-                    res.push_str(lookup);\n-                    res.push_str(&format!(\" {:?}\", c.label));\n-                } else {\n-                    res.push_str(&c.label);\n-                }\n-                if let Some(detail) = &c.detail {\n-                    res.push_str(&format!(\" {:?}\", detail));\n-                }\n-                if let Some(snippet) = &c.snippet {\n-                    res.push_str(&format!(\" {:?}\", snippet));\n-                }\n-                res.push('\\n');\n-            }\n-        }\n-        res\n-    }\n }\n \n impl Into<Vec<CompletionItem>> for Completions {\n     fn into(self) -> Vec<CompletionItem> {\n         self.buf\n     }\n }\n+\n+#[cfg(test)]\n+pub(crate) fn check_completion(test_name: &str, code: &str, kind: CompletionKind) {\n+    use crate::mock_analysis::{single_file_with_position, analysis_and_position};\n+    use crate::completion::completions;\n+    use insta::assert_debug_snapshot_matches;\n+    let (analysis, position) = if code.contains(\"//-\") {\n+        analysis_and_position(code)\n+    } else {\n+        single_file_with_position(code)\n+    };\n+    let completions = completions(&analysis.db, position).unwrap();\n+    let completion_items: Vec<CompletionItem> = completions.into();\n+    let kind_completions: Vec<CompletionItem> = completion_items\n+        .into_iter()\n+        .filter(|c| c.completion_kind == kind)\n+        .collect();\n+    assert_debug_snapshot_matches!(test_name, kind_completions);\n+}"}, {"sha": "132048d9c4a5f6e58900d14daf983db9645bb128", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_for.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_for.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T04:00:48.241096+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"x\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"quux\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"quux()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    }\n+]"}, {"sha": "e7b628f19f92c52d9804b4afc7b7aff543ee2463", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_if_let.snap", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_if_let.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,47 @@\n+Created: 2019-01-20T04:00:48.242456+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"b\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [213; 231),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"a\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [213; 231),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"quux\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"quux()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [213; 231),\n+        text_edit: None\n+    }\n+]"}, {"sha": "403fe0c4c8222764286d805f9805836e82caf836", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__bindings_from_let.snap", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__bindings_from_let.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,47 @@\n+Created: 2019-01-20T04:00:48.243016+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"y\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [78; 79),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"x\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [78; 79),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"quux\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"quux($0)\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [78; 79),\n+        text_edit: None\n+    }\n+]"}, {"sha": "413960191bcf167c9d94bb11f60a75285d8ef247", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_break_and_continue_in_loops1.snap", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops1.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,111 @@\n+Created: 2019-01-20T04:00:48.206357+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"continue\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"continue;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"break\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"break;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [54; 56),\n+        text_edit: None\n+    }\n+]"}, {"sha": "dc2fc95e321179c5d5a6c2892754b2124f89a805", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completes_break_and_continue_in_loops2.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completes_break_and_continue_in_loops2.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.217822+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [59; 61),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [59; 61),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [59; 61),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [59; 61),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [59; 61),\n+        text_edit: None\n+    }\n+]"}, {"sha": "60b5a7424b92c62280ca2060cfa1fdd96ddacb06", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__completion_postfix.snap", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completion_postfix.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completion_postfix.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__completion_postfix.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,102 @@\n+Created: 2019-01-19T13:50:41.824939+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"not\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text_format: Snippet,\n+        text_edit: Some(\n+            AtomTextEdit {\n+                delete: [78; 78),\n+                insert: \"!not\"\n+            }\n+        ),\n+        additional_text_edits: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 78),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"if\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text_format: Snippet,\n+        text_edit: Some(\n+            AtomTextEdit {\n+                delete: [78; 78),\n+                insert: \"if bar {$0}\"\n+            }\n+        ),\n+        additional_text_edits: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 78),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"match\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text_format: Snippet,\n+        text_edit: Some(\n+            AtomTextEdit {\n+                delete: [78; 78),\n+                insert: \"match bar {\\n${1:_} => {$0\\\\},\\n}\"\n+            }\n+        ),\n+        additional_text_edits: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 78),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    },\n+    CompletionItem {\n+        completion_kind: Postfix,\n+        label: \"while\",\n+        kind: None,\n+        detail: None,\n+        lookup: None,\n+        insert_text_format: Snippet,\n+        text_edit: Some(\n+            AtomTextEdit {\n+                delete: [78; 78),\n+                insert: \"while bar {\\n$0\\n}\"\n+            }\n+        ),\n+        additional_text_edits: Some(\n+            TextEdit {\n+                atoms: [\n+                    AtomTextEdit {\n+                        delete: [72; 78),\n+                        insert: \"\"\n+                    }\n+                ]\n+            }\n+        )\n+    }\n+]"}, {"sha": "26ca189338beada167f8cddb151de9a4921a8348", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__deeply_nested_use_tree.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__deeply_nested_use_tree.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.217724+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Spam\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [23; 25),\n+        text_edit: None\n+    }\n+]"}, {"sha": "f5ae8c29f6b6e8830cc5390f1b2181f4e724740b", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_add_semi_after_return_if_not_a_statement.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_add_semi_after_return_if_not_a_statement.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.208392+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [84; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [84; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [84; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [84; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [84; 102),\n+        text_edit: None\n+    }\n+]"}, {"sha": "88c9287fd1b1a4e6693d7e6526fcddcfaa511946", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_render_function_parens_if_already_call.snap", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_if_already_call.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,32 @@\n+Created: 2019-01-20T04:00:48.239872+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"main\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [35; 39),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"frobnicate\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [35; 39),\n+        text_edit: None\n+    }\n+]"}, {"sha": "33286e68ba8f62eccca6bb01700d693d64cd6038", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_render_function_parens_in_use_item.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_render_function_parens_in_use_item.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.239894+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [40; 41),\n+        text_edit: None\n+    }\n+]"}, {"sha": "2db0eb7558bcf6173b44b2a8c227dcf0bcb43a0d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__dont_show_both_completions_for_shadowing.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__dont_show_both_completions_for_shadowing.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T04:00:48.248606+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"bar\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [108; 146),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"foo()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [108; 146),\n+        text_edit: None\n+    }\n+]"}, {"sha": "7ae216cd269c100cc9180b38104048d51bb1415f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__inserts_parens_for_function_calls1.snap", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls1.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,36 @@\n+Created: 2019-01-20T04:00:48.249349+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"no_args\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"no_args()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [53; 56),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"main\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"main()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [53; 56),\n+        text_edit: None\n+    }\n+]"}, {"sha": "231d75d7a4256c9652894d28d71ba495c87c3f41", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__inserts_parens_for_function_calls2.snap", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__inserts_parens_for_function_calls2.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,36 @@\n+Created: 2019-01-20T04:00:48.255317+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"main\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"main()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [72; 77),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"with_args\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"with_args($0)\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [72; 77),\n+        text_edit: None\n+    }\n+]"}, {"sha": "4d309b20e3fe88560d1911c99fc5379a06bba082", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function1.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function1.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.207728+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 54),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 54),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 54),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 54),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 54),\n+        text_edit: None\n+    }\n+]"}, {"sha": "0f1e66ac3c636cd8eee2781604ebf5e031b20287", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function2.snap", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function2.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,111 @@\n+Created: 2019-01-20T04:00:48.207381+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"else\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"else {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"else if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"else if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [91; 105),\n+        text_edit: None\n+    }\n+]"}, {"sha": "25c29dc18ce4929352dd27298b3928f25bfeb7b0", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function3.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function3.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.211090+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [31; 65),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [31; 65),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [31; 65),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [31; 65),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [31; 65),\n+        text_edit: None\n+    }\n+]"}, {"sha": "7e43be4b0ece85f3c0d3f2c17d101c431fbb85f2", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_function4.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_function4.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.218272+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 58),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 58),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 58),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 58),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [24; 58),\n+        text_edit: None\n+    }\n+]"}, {"sha": "7ed890b74ab74de3d767435685728df474ea1770", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt1.snap", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt1.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,49 @@\n+Created: 2019-01-20T04:00:48.207433+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"crate\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"crate::\"\n+        ),\n+        insert_text_format: PlainText,\n+        source_range: [16; 30),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"self\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [16; 30),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"super\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"super::\"\n+        ),\n+        insert_text_format: PlainText,\n+        source_range: [16; 30),\n+        text_edit: None\n+    }\n+]"}, {"sha": "4d4c7af500aaafde482e961d21e7686d4ae6c7fc", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt2.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt2.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T09:26:20.872623+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"self\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [20; 20),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"super\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"super::\"\n+        ),\n+        insert_text_format: PlainText,\n+        source_range: [20; 20),\n+        text_edit: None\n+    }\n+]"}, {"sha": "66ab20f4196ee85b723cb7d35d84aad52794029f", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__keywords_in_use_stmt3.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__keywords_in_use_stmt3.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T04:00:48.217815+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"self\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [23; 24),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"super\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"super::\"\n+        ),\n+        insert_text_format: PlainText,\n+        source_range: [23; 24),\n+        text_edit: None\n+    }\n+]"}, {"sha": "2dc47e9b1f6d61fc27dad6f415c94dd00e4c09a2", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__last_return_in_block_has_semi1.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi1.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.208669+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    }\n+]"}, {"sha": "59e11c585e0821d7aea450825502c7e693578ff3", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__last_return_in_block_has_semi2.snap", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__last_return_in_block_has_semi2.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,81 @@\n+Created: 2019-01-20T04:00:48.221138+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return $0;\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [62; 100),\n+        text_edit: None\n+    }\n+]"}, {"sha": "966148a362728adc5bab56ad230852df1a9d0079", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__method_completion.snap", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__method_completion.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__method_completion.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__method_completion.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,21 @@\n+Created: 2019-01-20T09:26:20.868112+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"the_method\",\n+        kind: Some(\n+            Method\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"the_method($0)\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [144; 144),\n+        text_edit: None\n+    }\n+]"}, {"sha": "9ebb8a3579f86f3c71063ee38643d200425e9ac9", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items.snap", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,47 @@\n+Created: 2019-01-20T04:00:48.243581+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"quux\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"quux()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [72; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Foo\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [72; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Baz\",\n+        kind: Some(\n+            Enum\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [72; 102),\n+        text_edit: None\n+    }\n+]"}, {"sha": "9b7aa05400757e6e76464d685d8f6901dc697376", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__module_items_in_nested_modules.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__module_items_in_nested_modules.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T04:00:48.244757+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"quux\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"quux()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [100; 102),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Bar\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [100; 102),\n+        text_edit: None\n+    }\n+]"}, {"sha": "555f7acc67146dbdc06799ea5e77a6c46c2e53a8", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__nested_use_tree.snap", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__nested_use_tree.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,32 @@\n+Created: 2019-01-20T04:00:48.222109+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Spam\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [12; 14),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Module\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [12; 14),\n+        text_edit: None\n+    }\n+]"}, {"sha": "417b692dcaa7e25c0e952af543c3ff6f7f706864", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__no_non_self_method.snap", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_non_self_method.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_non_self_method.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_non_self_method.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,5 @@\n+Created: 2019-01-19T11:34:11.702251+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[]"}, {"sha": "fd56a6c8c0b73e4b0bacaf054be360b8c34b362b", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__no_semi_after_break_continue_in_expr.snap", "status": "added", "additions": 111, "deletions": 0, "changes": 111, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_semi_after_break_continue_in_expr.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,111 @@\n+Created: 2019-01-20T04:00:48.209867+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"if\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"if $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"match\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"match $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"while\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"while $0 {}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"loop\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"loop {$0}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"continue\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"continue\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"break\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"break\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Keyword,\n+        label: \"return\",\n+        kind: Some(\n+            Keyword\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"return\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [106; 108),\n+        text_edit: None\n+    }\n+]"}, {"sha": "0948c9fe60e33aa94e3f6f28c7fd53102f68a03b", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__no_struct_field_completion_for_method_call.snap", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_struct_field_completion_for_method_call.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_struct_field_completion_for_method_call.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__no_struct_field_completion_for_method_call.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,5 @@\n+Created: 2019-01-19T11:34:11.702201+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[]"}, {"sha": "e0e5929ffb512ef7fad9f6356c97fefa1aa29a33", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__param_completion_last_param.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_last_param.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_last_param.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_last_param.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.203211+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Magic,\n+        label: \"file_id: FileId\",\n+        kind: None,\n+        detail: None,\n+        lookup: Some(\n+            \"file_id\"\n+        ),\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [98; 102),\n+        text_edit: None\n+    }\n+]"}, {"sha": "2899cf98e540a5282399f4bfe8f2a11b67e4e256", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__param_completion_nth_param.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_nth_param.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_nth_param.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_nth_param.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.203236+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Magic,\n+        label: \"file_id: FileId\",\n+        kind: None,\n+        detail: None,\n+        lookup: Some(\n+            \"file_id\"\n+        ),\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [98; 102),\n+        text_edit: None\n+    }\n+]"}, {"sha": "8a4d9ef635b38a7fd7e62fa985698433909de708", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__param_completion_trait_param.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_trait_param.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_trait_param.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__param_completion_trait_param.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.206552+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Magic,\n+        label: \"file_id: FileId\",\n+        kind: None,\n+        detail: None,\n+        lookup: Some(\n+            \"file_id\"\n+        ),\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [269; 273),\n+        text_edit: None\n+    }\n+]"}, {"sha": "632d9bbc7283d7a41775ddc77229eabe0038b7ed", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__reference_completion.snap", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__reference_completion.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__reference_completion.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__reference_completion.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,32 @@\n+Created: 2019-01-20T09:26:20.899262+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Foo\",\n+        kind: Some(\n+            EnumVariant\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [47; 47),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Bar\",\n+        kind: Some(\n+            EnumVariant\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [47; 47),\n+        text_edit: None\n+    }\n+]"}, {"sha": "6bef3ed95cc94d76012597916b05617776aefe34", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__return_type.snap", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__return_type.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,34 @@\n+Created: 2019-01-20T04:00:48.245820+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Foo\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [46; 60),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"x\",\n+        kind: Some(\n+            Function\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"x()$0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [46; 60),\n+        text_edit: None\n+    }\n+]"}, {"sha": "56bfe1b0d657100e169e91856d3cd9f3e425605d", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__self_in_methods.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__self_in_methods.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T04:00:48.244260+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"self\",\n+        kind: Some(\n+            Binding\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [24; 26),\n+        text_edit: None\n+    }\n+]"}, {"sha": "648d7f1899f5d425e01160ab8b3a62533bb624df", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__snippets_in_expressions.snap", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_expressions.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,36 @@\n+Created: 2019-01-20T04:00:48.252281+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Snippet,\n+        label: \"pd\",\n+        kind: Some(\n+            Snippet\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"eprintln!(\\\"$0 = {:?}\\\", $0);\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [16; 18),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Snippet,\n+        label: \"ppd\",\n+        kind: Some(\n+            Snippet\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"eprintln!(\\\"$0 = {:#?}\\\", $0);\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [16; 18),\n+        text_edit: None\n+    }\n+]"}, {"sha": "f5d0140eaff8547e08769b12190145a51a8863c9", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__snippets_in_items.snap", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__snippets_in_items.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,38 @@\n+Created: 2019-01-20T04:00:48.253073+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Snippet,\n+        label: \"Test function\",\n+        kind: Some(\n+            Snippet\n+        ),\n+        detail: None,\n+        lookup: Some(\n+            \"tfn\"\n+        ),\n+        insert_text: Some(\n+            \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [49; 79),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Snippet,\n+        label: \"pub(crate)\",\n+        kind: Some(\n+            Snippet\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"pub(crate) $0\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [49; 79),\n+        text_edit: None\n+    }\n+]"}, {"sha": "c88ddbc671a43453c59848a47d9076f0adba6970", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_field_completion.snap", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,21 @@\n+Created: 2019-01-20T09:26:20.868146+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"the_field\",\n+        kind: Some(\n+            Field\n+        ),\n+        detail: Some(\n+            \"u32\"\n+        ),\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [85; 85),\n+        text_edit: None\n+    }\n+]"}, {"sha": "f310f523df923036d5c5c3f6e7667080881b896e", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_field_completion_autoderef.snap", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_autoderef.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_autoderef.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_autoderef.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,36 @@\n+Created: 2019-01-20T09:26:20.868561+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"the_field\",\n+        kind: Some(\n+            Field\n+        ),\n+        detail: Some(\n+            \"(u32, i32)\"\n+        ),\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [126; 126),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Method\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"foo($0)\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [126; 126),\n+        text_edit: None\n+    }\n+]"}, {"sha": "4eae65128de9794e4b121c2130b80d7f0bb1a737", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__struct_field_completion_self.snap", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_self.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_self.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__struct_field_completion_self.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,36 @@\n+Created: 2019-01-20T09:26:20.868333+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"the_field\",\n+        kind: Some(\n+            Field\n+        ),\n+        detail: Some(\n+            \"(u32,)\"\n+        ),\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [121; 121),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Method\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: Some(\n+            \"foo($0)\"\n+        ),\n+        insert_text_format: Snippet,\n+        source_range: [121; 121),\n+        text_edit: None\n+    }\n+]"}, {"sha": "29f7f86f1ed151e2268bd7af9e282fa8bf92eae1", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__use_item_starting_with_crate.snap", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_crate.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,32 @@\n+Created: 2019-01-20T04:00:48.223130+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Spam\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [11; 13),\n+        text_edit: None\n+    },\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"foo\",\n+        kind: Some(\n+            Module\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [11; 13),\n+        text_edit: None\n+    }\n+]"}, {"sha": "1a3bd803419f254e63e662bfd00749989c19fcd4", "filename": "crates/ra_ide_api/src/completion/snapshots/completion_item__use_item_starting_with_self.snap", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fsnapshots%2Fcompletion_item__use_item_starting_with_self.snap?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -0,0 +1,19 @@\n+Created: 2019-01-20T09:26:20.899584+00:00\n+Creator: insta@0.1.4\n+Source: crates/ra_ide_api/src/completion/completion_item.rs\n+\n+[\n+    CompletionItem {\n+        completion_kind: Reference,\n+        label: \"Bar\",\n+        kind: Some(\n+            Struct\n+        ),\n+        detail: None,\n+        lookup: None,\n+        insert_text: None,\n+        insert_text_format: PlainText,\n+        source_range: [26; 26),\n+        text_edit: None\n+    }\n+]"}, {"sha": "a09a8f92678a740f483a667f37bbe8ce650bd10a", "filename": "crates/ra_ide_api/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_ide_api%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Flib.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -43,7 +43,7 @@ use crate::{\n };\n \n pub use crate::{\n-    completion::{CompletionItem, CompletionItemKind, InsertText},\n+    completion::{CompletionItem, CompletionItemKind, InsertTextFormat},\n     runnables::{Runnable, RunnableKind},\n     navigation_target::NavigationTarget,\n };"}, {"sha": "23b226fac7e3df790637ab5e0c3d9ae25c5fcbe5", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -1,13 +1,13 @@\n use lsp_types::{\n-    self, CreateFile, DocumentChangeOperation, DocumentChanges, InsertTextFormat, Location, LocationLink,\n+    self, CreateFile, DocumentChangeOperation, DocumentChanges, Location, LocationLink,\n     Position, Range, RenameFile, ResourceOp, SymbolKind, TextDocumentEdit, TextDocumentIdentifier,\n     TextDocumentItem, TextDocumentPositionParams, Url, VersionedTextDocumentIdentifier,\n     WorkspaceEdit,\n };\n use ra_ide_api::{\n     CompletionItem, CompletionItemKind, FileId, FilePosition, FileRange, FileSystemEdit,\n-    InsertText, NavigationTarget, SourceChange, SourceFileEdit, RangeInfo,\n-    LineCol, LineIndex, translate_offset_with_edit\n+    NavigationTarget, SourceChange, SourceFileEdit, RangeInfo,\n+    LineCol, LineIndex, translate_offset_with_edit, InsertTextFormat\n };\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n@@ -74,27 +74,33 @@ impl Conv for CompletionItemKind {\n     }\n }\n \n-impl Conv for CompletionItem {\n+impl ConvWith for CompletionItem {\n+    type Ctx = LineIndex;\n     type Output = ::lsp_types::CompletionItem;\n \n-    fn conv(self) -> <Self as Conv>::Output {\n-        let mut res = ::lsp_types::CompletionItem {\n+    fn conv_with(mut self, ctx: &LineIndex) -> ::lsp_types::CompletionItem {\n+        let atom_text_edit = AtomTextEdit::replace(self.source_range(), self.insert_text());\n+        let text_edit = (&atom_text_edit).conv_with(ctx);\n+        let additional_text_edits = if let Some(edit) = self.take_text_edit() {\n+            Some(edit.conv_with(ctx))\n+        } else {\n+            None\n+        };\n+\n+        let mut res = lsp_types::CompletionItem {\n             label: self.label().to_string(),\n             detail: self.detail().map(|it| it.to_string()),\n             filter_text: Some(self.lookup().to_string()),\n             kind: self.kind().map(|it| it.conv()),\n+            text_edit: Some(text_edit),\n+            additional_text_edits,\n             ..Default::default()\n         };\n-        match self.insert_text() {\n-            InsertText::PlainText { text } => {\n-                res.insert_text = Some(text);\n-                res.insert_text_format = Some(InsertTextFormat::PlainText);\n-            }\n-            InsertText::Snippet { text } => {\n-                res.insert_text = Some(text);\n-                res.insert_text_format = Some(InsertTextFormat::Snippet);\n-            }\n-        }\n+        res.insert_text_format = Some(match self.insert_text_format() {\n+            InsertTextFormat::Snippet => lsp_types::InsertTextFormat::Snippet,\n+            InsertTextFormat::PlainText => lsp_types::InsertTextFormat::PlainText,\n+        });\n+\n         res\n     }\n }"}, {"sha": "497f819bebc397b159db184818ec0bc1385f0236", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f133702f723203a60a1b4dade51418261cdbc133/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=f133702f723203a60a1b4dade51418261cdbc133", "patch": "@@ -340,7 +340,11 @@ pub fn handle_completion(\n         None => return Ok(None),\n         Some(items) => items,\n     };\n-    let items = items.into_iter().map(|item| item.conv()).collect();\n+    let line_index = world.analysis().file_line_index(position.file_id);\n+    let items = items\n+        .into_iter()\n+        .map(|item| item.conv_with(&line_index))\n+        .collect();\n \n     Ok(Some(req::CompletionResponse::Array(items)))\n }"}]}