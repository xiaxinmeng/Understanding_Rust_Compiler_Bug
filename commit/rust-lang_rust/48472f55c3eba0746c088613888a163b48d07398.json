{"sha": "48472f55c3eba0746c088613888a163b48d07398", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NDcyZjU1YzNlYmEwNzQ2YzA4ODYxMzg4OGExNjNiNDhkMDczOTg=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-21T12:04:47Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-03-21T12:04:47Z"}, "message": "Merge #1010\n\n1010: Change enableCargoWatchOnStartup to have three states r=matklad a=vipentti\n\nThis fixes #1005.\r\n\r\nDefaults to `ask` which prompts users each time whether to start `cargo watch`\r\nor not. `enabled` always starts `cargo watch` and `disabled` does not.\n\nCo-authored-by: Ville Penttinen <villem.penttinen@gmail.com>", "tree": {"sha": "acc588e7538f0b682232d7d47a1d7b68ab95b993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acc588e7538f0b682232d7d47a1d7b68ab95b993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48472f55c3eba0746c088613888a163b48d07398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48472f55c3eba0746c088613888a163b48d07398", "html_url": "https://github.com/rust-lang/rust/commit/48472f55c3eba0746c088613888a163b48d07398", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48472f55c3eba0746c088613888a163b48d07398/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "aa0cc0c6096ca8ba80ef225c813fe30310ba6c33", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0cc0c6096ca8ba80ef225c813fe30310ba6c33", "html_url": "https://github.com/rust-lang/rust/commit/aa0cc0c6096ca8ba80ef225c813fe30310ba6c33"}, {"sha": "5c3e9c716e11a0b795d484403289fe9940b7efda", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3e9c716e11a0b795d484403289fe9940b7efda", "html_url": "https://github.com/rust-lang/rust/commit/5c3e9c716e11a0b795d484403289fe9940b7efda"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "facb633d9ad292fbf6a10c63d55cc5cb26fa3cfd", "filename": "editors/code/package.json", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=48472f55c3eba0746c088613888a163b48d07398", "patch": "@@ -169,9 +169,19 @@\n                     \"description\": \"Path to ra_lsp_server executable\"\n                 },\n                 \"rust-analyzer.enableCargoWatchOnStartup\": {\n-                    \"type\": \"boolean\",\n-                    \"default\": \"true\",\n-                    \"description\": \"When enabled, ask the user whether to run `cargo watch` on startup\"\n+                    \"type\": \"string\",\n+                    \"default\": \"ask\",\n+                    \"enum\": [\n+                        \"ask\",\n+                        \"enabled\",\n+                        \"disabled\"\n+                    ],\n+                    \"enumDescriptions\": [\n+                        \"Asks each time whether to run `cargo watch`\",\n+                        \"`cargo watch` is always started\",\n+                        \"Don't start `cargo watch`\"\n+                    ],\n+                    \"description\": \"Whether to run `cargo watch` on startup\"\n                 },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\","}, {"sha": "420635f41fd86fdc8817534fd9ef348a82a78aee", "filename": "editors/code/src/commands/runnables.ts", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "raw_url": "https://github.com/rust-lang/rust/raw/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Frunnables.ts?ref=48472f55c3eba0746c088613888a163b48d07398", "patch": "@@ -153,22 +153,25 @@ export const autoCargoWatchTask: vscode.Task = {\n  * that, when accepted, allow us to `cargo install cargo-watch` and then run it.\n  */\n export async function interactivelyStartCargoWatch() {\n-    if (!Server.config.enableCargoWatchOnStartup) {\n+    if (Server.config.enableCargoWatchOnStartup === 'disabled') {\n         return;\n     }\n \n-    const execPromise = util.promisify(child_process.exec);\n-\n-    const watch = await vscode.window.showInformationMessage(\n-        'Start watching changes with cargo? (Executes `cargo watch`, provides inline diagnostics)',\n-        'yes',\n-        'no'\n-    );\n-    if (watch === 'no') {\n-        return;\n+    if (Server.config.enableCargoWatchOnStartup === 'ask') {\n+        const watch = await vscode.window.showInformationMessage(\n+            'Start watching changes with cargo? (Executes `cargo watch`, provides inline diagnostics)',\n+            'yes',\n+            'no'\n+        );\n+        if (watch === 'no') {\n+            return;\n+        }\n     }\n \n+    const execPromise = util.promisify(child_process.exec);\n+\n     const { stderr } = await execPromise('cargo watch --version').catch(e => e);\n+\n     if (stderr.includes('no such subcommand: `watch`')) {\n         const msg =\n             'The `cargo-watch` subcommand is not installed. Install? (takes ~1-2 minutes)';"}, {"sha": "42058906845e8fcfb926539677f6e972a0953ea0", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/48472f55c3eba0746c088613888a163b48d07398/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=48472f55c3eba0746c088613888a163b48d07398", "patch": "@@ -4,12 +4,14 @@ import { Server } from './server';\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n \n+export type CargoWatchOptions = 'ask' | 'enabled' | 'disabled';\n+\n export class Config {\n     public highlightingOn = true;\n     public enableEnhancedTyping = true;\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n     public showWorkspaceLoadedNotification = true;\n-    public enableCargoWatchOnStartup = true;\n+    public enableCargoWatchOnStartup: CargoWatchOptions = 'ask';\n \n     private prevEnhancedTyping: null | boolean = null;\n \n@@ -71,9 +73,9 @@ export class Config {\n         }\n \n         if (config.has('enableCargoWatchOnStartup')) {\n-            this.enableCargoWatchOnStartup = config.get<boolean>(\n+            this.enableCargoWatchOnStartup = config.get<CargoWatchOptions>(\n                 'enableCargoWatchOnStartup',\n-                true\n+                'ask'\n             );\n         }\n     }"}]}