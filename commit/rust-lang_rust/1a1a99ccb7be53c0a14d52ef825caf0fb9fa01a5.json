{"sha": "1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhMWE5OWNjYjdiZTUzYzBhMTRkNTJlZjgyNWNhZjBmYjlmYTAxYTU=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2020-11-29T20:27:01Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2020-11-29T20:27:14Z"}, "message": "Change \"non-unsafe\" to \"safe\" in UnsafeCell docs", "tree": {"sha": "ce88174e77db21edf6284a27c43085ab22412650", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce88174e77db21edf6284a27c43085ab22412650"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5", "html_url": "https://github.com/rust-lang/rust/commit/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9db1f42fa2ac096771ff956d89bcc148842859b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9db1f42fa2ac096771ff956d89bcc148842859b6", "html_url": "https://github.com/rust-lang/rust/commit/9db1f42fa2ac096771ff956d89bcc148842859b6"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cec40aebd74f83abd944bf2bd62d7bb109ef5ea5", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=1a1a99ccb7be53c0a14d52ef825caf0fb9fa01a5", "patch": "@@ -1580,7 +1580,7 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n /// `&UnsafeCell<_>` reference); there is no magic whatsoever when dealing with _exclusive_\n /// accesses (_e.g._, through an `&mut UnsafeCell<_>`): neither the cell nor the wrapped value\n /// may be aliased for the duration of that `&mut` borrow.\n-/// This is showcased by the [`.get_mut()`] accessor, which is a non-`unsafe` getter that yields\n+/// This is showcased by the [`.get_mut()`] accessor, which is a _safe_ getter that yields\n /// a `&mut T`.\n ///\n /// [`.get_mut()`]: `UnsafeCell::get_mut`"}]}