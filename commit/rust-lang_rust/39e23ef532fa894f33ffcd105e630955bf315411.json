{"sha": "39e23ef532fa894f33ffcd105e630955bf315411", "node_id": "C_kwDOAAsO6NoAKDM5ZTIzZWY1MzJmYTg5NGYzM2ZmY2QxMDVlNjMwOTU1YmYzMTU0MTE", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-13T11:38:52Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-13T11:39:14Z"}, "message": "impl reviewer feedback\n\n- remove unused (pun intentional) `continue`\n- improve wording with assoc items in general", "tree": {"sha": "40c580984b4338e564ede6191fd47bde1960f3bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40c580984b4338e564ede6191fd47bde1960f3bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39e23ef532fa894f33ffcd105e630955bf315411", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmQ36hwACgkQZ6vxb7Ds\n2HD9pA//QhGDnd21GH8Nz8mD+/7bMmXPQGPGemJQvNcIy0PoIyalxzUDJpvDr1ZA\n41p7QsrxePn9UvxYnSDhDePdRB57KS/b3vDtxl5rwacq5c9hiemTUUzv+Rf59Gl8\ns1pBe6qvL6fchTDvOxfabCjwIwp6WQfSIwDxKaLHRMVSw3UJ4dAQFWtpu3vnxPGA\nzfzY4UFk09IY74fw11iezT3HKeTERgY9s+c6kVHMBge/S0FybIkp8bFQaMoSfzTz\n6D/gUDvvx/D8L/s5QdMr5bQtf5p0hV0ongcHwirZDaAYmNnV2hi+R8ccTlMIUueP\n/wLi7BxYKcjvkvjaX+c6+efxFggBHagF2/nJKiyLMldxmPYdOKOm7dI6cJJ18vIP\ni0cu0nuC+mAgRMUy1+J/tCbc1vA315AfPkAXPl0yMVPTDtidVW9j0ne19lfX8coX\nlEfF3BpQGuFOghRZ0pWMp5LUFk+yQIIkMySfAudTO93vMihzINN6f1h3f7U7JbAc\nfuF7CFoRnjYodjA5LvAuO3RpPUPIskoW+aTBhWCpRRJ32t+khHeUJAfy4M+4z93l\n+jr/DIXkUoILVllcOdT+TN/AmwIV1rURpGvYpJG0+wVXBMZ6EQJ4YbaiZiYzixs+\nTj+nGGB2HNS94bkUx5yuilk7qVJ1eZE7Ie5q8NORSFTOtSEO1TQ=\n=+O3q\n-----END PGP SIGNATURE-----", "payload": "tree 40c580984b4338e564ede6191fd47bde1960f3bb\nparent c41dcac8e869160184fc2d80f643bc74601a45ef\nauthor Ezra Shaw <ezrasure@outlook.com> 1681385932 +1200\ncommitter Ezra Shaw <ezrasure@outlook.com> 1681385954 +1200\n\nimpl reviewer feedback\n\n- remove unused (pun intentional) `continue`\n- improve wording with assoc items in general\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39e23ef532fa894f33ffcd105e630955bf315411", "html_url": "https://github.com/rust-lang/rust/commit/39e23ef532fa894f33ffcd105e630955bf315411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39e23ef532fa894f33ffcd105e630955bf315411/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c41dcac8e869160184fc2d80f643bc74601a45ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/c41dcac8e869160184fc2d80f643bc74601a45ef", "html_url": "https://github.com/rust-lang/rust/commit/c41dcac8e869160184fc2d80f643bc74601a45ef"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "5cfe691df17a14882baf66f212694bc0e112207f", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/39e23ef532fa894f33ffcd105e630955bf315411/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e23ef532fa894f33ffcd105e630955bf315411/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=39e23ef532fa894f33ffcd105e630955bf315411", "patch": "@@ -700,6 +700,13 @@ impl<'tcx> DeadVisitor<'tcx> {\n             .collect();\n \n         let descr = tcx.def_descr(first_id.to_def_id());\n+        // `impl` blocks are \"batched\" and (unlike other batching) might\n+        // contain different kinds of associated items.\n+        let descr = if dead_codes.iter().any(|did| tcx.def_descr(did.to_def_id()) != descr) {\n+            \"associated item\"\n+        } else {\n+            descr\n+        };\n         let num = dead_codes.len();\n         let multiple = num > 6;\n         let name_list = names.into();\n@@ -842,16 +849,9 @@ fn check_mod_deathness(tcx: TyCtxt<'_>, module: LocalDefId) {\n         if let hir::ItemKind::Impl(impl_item) = tcx.hir().item(item).kind {\n             let mut dead_items = Vec::new();\n             for item in impl_item.items {\n-                match item.kind {\n-                    hir::AssocItemKind::Const | hir::AssocItemKind::Type => {\n-                        visitor.check_definition(item.id.owner_id.def_id)\n-                    }\n-                    hir::AssocItemKind::Fn { .. } => {\n-                        let did = item.id.owner_id.def_id;\n-                        if !visitor.is_live_code(did) {\n-                            dead_items.push(did)\n-                        }\n-                    }\n+                let did = item.id.owner_id.def_id;\n+                if !visitor.is_live_code(did) {\n+                    dead_items.push(did)\n                 }\n             }\n             visitor.warn_multiple_dead_codes(\n@@ -860,7 +860,6 @@ fn check_mod_deathness(tcx: TyCtxt<'_>, module: LocalDefId) {\n                 Some(item.owner_id.def_id),\n                 false,\n             );\n-            continue;\n         }\n \n         if !live_symbols.contains(&item.owner_id.def_id) {"}, {"sha": "b111f4b9463c70ad4d6acd964d0ec33ddd96a5c2", "filename": "tests/ui/lint/dead-code/unused-assoc-fns.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/39e23ef532fa894f33ffcd105e630955bf315411/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39e23ef532fa894f33ffcd105e630955bf315411/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.rs?ref=39e23ef532fa894f33ffcd105e630955bf315411", "patch": "@@ -1,19 +1,29 @@\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n #![deny(unused)]\n \n struct Foo;\n \n impl Foo {\n     fn one() {}\n-    //~^ ERROR associated functions `one`, `two`, and `three` are never used [dead_code]\n+    //~^ ERROR associated items `one`, `two`, `CONSTANT`, `Type`, and `three` are never used [dead_code]\n \n     fn two(&self) {}\n \n-    // seperation between functions\n+    // seperation between items\n     // ...\n     // ...\n \n     fn used() {}\n \n+    const CONSTANT: usize = 5;\n+\n+    // more seperation\n+    // ...\n+    // ...\n+\n+    type Type = usize;\n+\n     fn three(&self) {\n         Foo::one();\n         // ..."}, {"sha": "6344a70ea3aee9ccccfe9c9cde40dbc8eeb51a9e", "filename": "tests/ui/lint/dead-code/unused-assoc-fns.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/39e23ef532fa894f33ffcd105e630955bf315411/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/39e23ef532fa894f33ffcd105e630955bf315411/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdead-code%2Funused-assoc-fns.stderr?ref=39e23ef532fa894f33ffcd105e630955bf315411", "patch": "@@ -1,19 +1,25 @@\n-error: associated functions `one`, `two`, and `three` are never used\n-  --> $DIR/unused-assoc-fns.rs:6:8\n+error: associated items `one`, `two`, `CONSTANT`, `Type`, and `three` are never used\n+  --> $DIR/unused-assoc-fns.rs:8:8\n    |\n LL | impl Foo {\n-   | -------- associated functions in this implementation\n+   | -------- associated items in this implementation\n LL |     fn one() {}\n    |        ^^^\n ...\n LL |     fn two(&self) {}\n    |        ^^^\n ...\n+LL |     const CONSTANT: usize = 5;\n+   |           ^^^^^^^^\n+...\n+LL |     type Type = usize;\n+   |          ^^^^\n+LL |\n LL |     fn three(&self) {\n    |        ^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/unused-assoc-fns.rs:1:9\n+  --> $DIR/unused-assoc-fns.rs:3:9\n    |\n LL | #![deny(unused)]\n    |         ^^^^^^"}]}