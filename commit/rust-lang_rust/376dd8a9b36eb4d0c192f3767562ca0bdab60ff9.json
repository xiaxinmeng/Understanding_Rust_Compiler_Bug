{"sha": "376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "node_id": "C_kwDOAAsO6NoAKDM3NmRkOGE5YjM2ZWI0ZDBjMTkyZjM3Njc1NjJjYTBiZGFiNjBmZjk", "commit": {"author": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2023-01-03T02:31:18Z"}, "committer": {"name": "DebugSteven", "email": "debugsteven@gmail.com", "date": "2023-01-03T02:31:18Z"}, "message": "use cargo_metadata to get x version", "tree": {"sha": "bb8c2219eb6db03363c406b047f559b21c4e8961", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8c2219eb6db03363c406b047f559b21c4e8961"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "html_url": "https://github.com/rust-lang/rust/commit/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/comments", "author": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9ca6636e108cb4380d38a45c5ebb1d485079210", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9ca6636e108cb4380d38a45c5ebb1d485079210", "html_url": "https://github.com/rust-lang/rust/commit/e9ca6636e108cb4380d38a45c5ebb1d485079210"}], "stats": {"total": 40, "additions": 11, "deletions": 29}, "files": [{"sha": "4cb64882cb7e35f2c05a7a392621eb7965f55738", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "patch": "@@ -5310,7 +5310,6 @@ dependencies = [\n  \"miropt-test-tools\",\n  \"regex\",\n  \"semver\",\n- \"serde_json\",\n  \"termcolor\",\n  \"walkdir\",\n ]"}, {"sha": "5f5ae3a65efa81c34498c40c6de57fd59ddd81af", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "patch": "@@ -12,7 +12,6 @@ lazy_static = \"1\"\n walkdir = \"2\"\n ignore = \"0.4.18\"\n semver = \"1.0.14\"\n-serde_json = \"1.0.91\"\n termcolor = \"1.1.3\"\n \n [[bin]]"}, {"sha": "7bb8ddc6949ef9f61254d2a0dcd065a26443ed02", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "patch": "@@ -107,7 +107,7 @@ fn main() {\n         check!(alphabetical, &compiler_path);\n         check!(alphabetical, &library_path);\n \n-        check!(x_version);\n+        check!(x_version, &root_path, &cargo);\n \n         let collected = {\n             drain_handles(&mut handles);"}, {"sha": "070a751b05183c2a540725ec216cb98fb20d261e", "filename": "src/tools/tidy/src/x_version.rs", "status": "modified", "additions": 10, "deletions": 26, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "raw_url": "https://github.com/rust-lang/rust/raw/376dd8a9b36eb4d0c192f3767562ca0bdab60ff9/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs?ref=376dd8a9b36eb4d0c192f3767562ca0bdab60ff9", "patch": "@@ -1,9 +1,9 @@\n use semver::Version;\n-use serde_json::Value;\n use std::io::ErrorKind;\n+use std::path::Path;\n use std::process::{Command, Stdio};\n \n-pub fn check(bad: &mut bool) {\n+pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n     let result = Command::new(\"x\").arg(\"--wrapper-version\").stdout(Stdio::piped()).spawn();\n     // This runs the command inside a temporary directory.\n     // This allows us to compare output of result to see if `--wrapper-version` is not a recognized argument to x.\n@@ -35,7 +35,7 @@ pub fn check(bad: &mut bool) {\n         let version = String::from_utf8_lossy(&output.stdout);\n         let version = Version::parse(version.trim_end()).unwrap();\n \n-        if let Some(expected) = get_x_wrapper_version() {\n+        if let Some(expected) = get_x_wrapper_version(root, cargo) {\n             if version < expected {\n                 return tidy_error!(\n                     bad,\n@@ -54,27 +54,11 @@ pub fn check(bad: &mut bool) {\n }\n \n // Parse latest version out of `x` Cargo.toml\n-fn get_x_wrapper_version() -> Option<Version> {\n-    let cmd = Command::new(\"cargo\")\n-        .arg(\"metadata\")\n-        .args([\"--no-deps\", \"--format-version\", \"1\", \"--manifest-path\", \"src/tools/x/Cargo.toml\"])\n-        .stdout(Stdio::piped())\n-        .spawn();\n-\n-    let child = match cmd {\n-        Ok(child) => child,\n-        Err(e) => {\n-            println!(\"failed to get version of `x`: {}\", e);\n-            return None;\n-        }\n-    };\n-\n-    let cargo_output = child.wait_with_output().unwrap();\n-    let cargo_output_str =\n-        String::from_utf8(cargo_output.stdout).expect(\"Unable to parse `src/tools/x/Cargo.toml`\");\n-\n-    let v: Value = serde_json::from_str(&cargo_output_str).unwrap();\n-    let vesrion_str = &v[\"packages\"][0][\"version\"].as_str()?;\n-\n-    Some(Version::parse(vesrion_str).unwrap())\n+fn get_x_wrapper_version(root: &Path, cargo: &Path) -> Option<Version> {\n+    let mut cmd = cargo_metadata::MetadataCommand::new();\n+    cmd.cargo_path(cargo)\n+        .manifest_path(root.join(\"src/tools/x/Cargo.toml\"))\n+        .features(cargo_metadata::CargoOpt::AllFeatures);\n+    let mut metadata = t!(cmd.exec());\n+    metadata.packages.pop().map(|x| x.version)\n }"}]}