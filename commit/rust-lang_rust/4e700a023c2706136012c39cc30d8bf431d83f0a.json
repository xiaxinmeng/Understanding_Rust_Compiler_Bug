{"sha": "4e700a023c2706136012c39cc30d8bf431d83f0a", "node_id": "C_kwDOAAsO6NoAKDRlNzAwYTAyM2MyNzA2MTM2MDEyYzM5Y2MzMGQ4YmY0MzFkODNmMGE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-07T04:17:38Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-03-22T00:01:53Z"}, "message": "Split `Parser::bump_with` into inlined and non-inlined halves.\n\nThe call site within `Parser::bump` is hot.\n\nAlso add an inline annotation to `Parser::next_tok`. It was already\nbeing inlined by the compiler; this just makes sure that continues.", "tree": {"sha": "829d658a060f1c42459742e08f02b9c1a04f22de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/829d658a060f1c42459742e08f02b9c1a04f22de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e700a023c2706136012c39cc30d8bf431d83f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e700a023c2706136012c39cc30d8bf431d83f0a", "html_url": "https://github.com/rust-lang/rust/commit/4e700a023c2706136012c39cc30d8bf431d83f0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e700a023c2706136012c39cc30d8bf431d83f0a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bfe40d11c3630254504fb73eeccfca28d50df52", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bfe40d11c3630254504fb73eeccfca28d50df52", "html_url": "https://github.com/rust-lang/rust/commit/1bfe40d11c3630254504fb73eeccfca28d50df52"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "5c773410891b777df63a3b17c09ba605448003f2", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e700a023c2706136012c39cc30d8bf431d83f0a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e700a023c2706136012c39cc30d8bf431d83f0a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=4e700a023c2706136012c39cc30d8bf431d83f0a", "patch": "@@ -463,6 +463,7 @@ impl<'a> Parser<'a> {\n         parser\n     }\n \n+    #[inline]\n     fn next_tok(&mut self, fallback_span: Span) -> (Token, Spacing) {\n         loop {\n             let (mut next, spacing) = if self.desugar_doc_comments {\n@@ -998,7 +999,13 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Advance the parser by one token using provided token as the next one.\n-    fn bump_with(&mut self, (next_token, next_spacing): (Token, Spacing)) {\n+    fn bump_with(&mut self, next: (Token, Spacing)) {\n+        self.inlined_bump_with(next)\n+    }\n+\n+    /// This always-inlined version should only be used on hot code paths.\n+    #[inline(always)]\n+    fn inlined_bump_with(&mut self, (next_token, next_spacing): (Token, Spacing)) {\n         // Bumping after EOF is a bad sign, usually an infinite loop.\n         if self.prev_token.kind == TokenKind::Eof {\n             let msg = \"attempted to bump the parser past EOF (may be stuck in a loop)\";\n@@ -1016,7 +1023,7 @@ impl<'a> Parser<'a> {\n     /// Advance the parser by one token.\n     pub fn bump(&mut self) {\n         let next_token = self.next_tok(self.token.span);\n-        self.bump_with(next_token);\n+        self.inlined_bump_with(next_token);\n     }\n \n     /// Look-ahead `dist` tokens of `self.token` and get access to that token there."}]}