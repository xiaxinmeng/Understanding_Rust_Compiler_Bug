{"sha": "3a3b40a55430756436cb9a0602d4449a5177be69", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhM2I0MGE1NTQzMDc1NjQzNmNiOWEwNjAyZDQ0NDlhNTE3N2JlNjk=", "commit": {"author": {"name": "BGluth", "email": "gluthb@gmail.com", "date": "2020-06-10T17:11:47Z"}, "committer": {"name": "BGluth", "email": "gluthb@gmail.com", "date": "2020-06-21T19:27:16Z"}, "message": "Created goto Self enum variant test", "tree": {"sha": "f30903ac3d6830080b69bfef51feadbc240cf3f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f30903ac3d6830080b69bfef51feadbc240cf3f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a3b40a55430756436cb9a0602d4449a5177be69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3b40a55430756436cb9a0602d4449a5177be69", "html_url": "https://github.com/rust-lang/rust/commit/3a3b40a55430756436cb9a0602d4449a5177be69", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a3b40a55430756436cb9a0602d4449a5177be69/comments", "author": {"login": "BGluth", "id": 7939279, "node_id": "MDQ6VXNlcjc5MzkyNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/7939279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGluth", "html_url": "https://github.com/BGluth", "followers_url": "https://api.github.com/users/BGluth/followers", "following_url": "https://api.github.com/users/BGluth/following{/other_user}", "gists_url": "https://api.github.com/users/BGluth/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGluth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGluth/subscriptions", "organizations_url": "https://api.github.com/users/BGluth/orgs", "repos_url": "https://api.github.com/users/BGluth/repos", "events_url": "https://api.github.com/users/BGluth/events{/privacy}", "received_events_url": "https://api.github.com/users/BGluth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BGluth", "id": 7939279, "node_id": "MDQ6VXNlcjc5MzkyNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/7939279?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BGluth", "html_url": "https://github.com/BGluth", "followers_url": "https://api.github.com/users/BGluth/followers", "following_url": "https://api.github.com/users/BGluth/following{/other_user}", "gists_url": "https://api.github.com/users/BGluth/gists{/gist_id}", "starred_url": "https://api.github.com/users/BGluth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BGluth/subscriptions", "organizations_url": "https://api.github.com/users/BGluth/orgs", "repos_url": "https://api.github.com/users/BGluth/repos", "events_url": "https://api.github.com/users/BGluth/events{/privacy}", "received_events_url": "https://api.github.com/users/BGluth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3370c81525c89c4f3229180f83520de29b7ee8a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/3370c81525c89c4f3229180f83520de29b7ee8a0", "html_url": "https://github.com/rust-lang/rust/commit/3370c81525c89c4f3229180f83520de29b7ee8a0"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "450ce0ba7517489035063914193cf3ae3b395bc3", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/3a3b40a55430756436cb9a0602d4449a5177be69/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3b40a55430756436cb9a0602d4449a5177be69/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=3a3b40a55430756436cb9a0602d4449a5177be69", "patch": "@@ -908,4 +908,84 @@ mod tests {\n             \"x: i32|x\",\n         );\n     }\n+\n+    #[test]\n+    fn goto_def_for_enum_variant_self_pattern_const() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            enum Foo {\n+                Bar,\n+            }\n+            impl Foo {\n+                fn baz(self) {\n+                    match self {\n+                        Self::Bar<|> => {}\n+                    }\n+                }\n+            }\n+            \",\n+            \"Bar ENUM_VARIANT FileId(1) 15..18 15..18\",\n+            \"Bar|Bar\",\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_enum_variant_self_pattern_record() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            enum Foo {\n+                Bar { val: i32 },\n+            }\n+            impl Foo {\n+                fn baz(self) -> i32 {\n+                    match self {\n+                        Self::Bar<|> { val } => {}\n+                    }\n+                }\n+            }\n+            \",\n+            \"Bar ENUM_VARIANT FileId(1) 15..31 15..18\",\n+            \"Bar { val: i32 }|Bar\",\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_enum_variant_self_expr_const() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            enum Foo {\n+                Bar,\n+            }\n+            impl Foo {\n+                fn baz(self) {\n+                    Self::Bar<|>;\n+                }\n+            }\n+            \",\n+            \"Bar ENUM_VARIANT FileId(1) 15..18 15..18\",\n+            \"Bar|Bar\",\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_def_for_enum_variant_self_expr_record() {\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            enum Foo {\n+                Bar { val: i32 },\n+            }\n+            impl Foo {\n+                fn baz(self) {\n+                    Self::Bar<|> {val: 4};\n+                }\n+            }\n+            \",\n+            \"Bar ENUM_VARIANT FileId(1) 15..31 15..18\",\n+            \"Bar { val: i32 }|Bar\",\n+        );\n+    }\n }"}]}