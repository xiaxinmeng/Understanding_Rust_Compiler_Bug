{"sha": "9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliY2FmYTI4YWE3YmVhZGFmZDA5OTRmMDlhZDI1YjBkZmMyM2Y0NmU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-10-30T17:30:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-10-30T17:30:35Z"}, "message": "Merge pull request #3881 from vertexclique/incoming\n\nRemoving iter::TimesIx", "tree": {"sha": "445f88483bdd948c91495c59d3934705ab5e85cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/445f88483bdd948c91495c59d3934705ab5e85cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "html_url": "https://github.com/rust-lang/rust/commit/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd76050e511ba367145b7debaac44687b9cdf9f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd76050e511ba367145b7debaac44687b9cdf9f1", "html_url": "https://github.com/rust-lang/rust/commit/dd76050e511ba367145b7debaac44687b9cdf9f1"}, {"sha": "f938714be165cd3a783ee76608298e4f32a1edb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f938714be165cd3a783ee76608298e4f32a1edb0", "html_url": "https://github.com/rust-lang/rust/commit/f938714be165cd3a783ee76608298e4f32a1edb0"}], "stats": {"total": 34, "additions": 0, "deletions": 34}, "files": [{"sha": "a25231c88505a080fc1838311c3b57617e004d9e", "filename": "src/libcore/int-template.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fint-template.rs?ref=9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "patch": "@@ -98,23 +98,6 @@ impl T: iter::Times {\n     }\n }\n \n-impl T: iter::TimesIx {\n-    #[inline(always)]\n-    /// Like `times`, but provides an index\n-    pure fn timesi(it: fn(uint) -> bool) {\n-        let slf = self as uint;\n-        if slf < 0u {\n-            fail fmt!(\"The .timesi method expects a nonnegative number, \\\n-                       but found %?\", self);\n-        }\n-        let mut i = 0u;\n-        while i < slf {\n-            if !it(i) { break }\n-            i += 1u;\n-        }\n-    }\n-}\n-\n /**\n  * Parse a buffer of bytes\n  *"}, {"sha": "bb28d0ef4fbacac5d2e78714e28e6c9eaec116ca", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "patch": "@@ -34,10 +34,6 @@ pub trait Times {\n     pure fn times(it: fn() -> bool);\n }\n \n-pub trait TimesIx{\n-    pure fn timesi(it: fn(uint) -> bool);\n-}\n-\n pub trait CopyableIter<A:Copy> {\n     pure fn filter_to_vec(pred: fn(a: A) -> bool) -> ~[A];\n     pure fn map_to_vec<B>(op: fn(v: A) -> B) -> ~[B];"}, {"sha": "bdce82f4dd330d0e1a14c47d3c64b794df23ace3", "filename": "src/libcore/uint-template.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fuint-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bcafa28aa7beadafd0994f09ad25b0dfc23f46e/src%2Flibcore%2Fuint-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fuint-template.rs?ref=9bcafa28aa7beadafd0994f09ad25b0dfc23f46e", "patch": "@@ -88,19 +88,6 @@ impl T: iter::Times {\n     }\n }\n \n-impl T: iter::TimesIx {\n-    #[inline(always)]\n-    /// Like `times`, but with an index, `eachi`-style.\n-    pure fn timesi(it: fn(uint) -> bool) {\n-        let slf = self as uint;\n-        let mut i = 0u;\n-        while i < slf {\n-            if !it(i) { break }\n-            i += 1u;\n-        }\n-    }\n-}\n-\n /**\n  * Parse a buffer of bytes\n  *"}]}