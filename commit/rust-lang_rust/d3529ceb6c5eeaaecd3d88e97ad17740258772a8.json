{"sha": "d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "node_id": "C_kwDOAAsO6NoAKGQzNTI5Y2ViNmM1ZWVhYWVjZDNkODhlOTdhZDE3NzQwMjU4NzcyYTg", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-09-15T11:53:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-09-15T11:53:20Z"}, "message": "Correctly handle parens", "tree": {"sha": "12b8d1f34d5cb8f59267626f2653cfa1ed4073d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12b8d1f34d5cb8f59267626f2653cfa1ed4073d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "html_url": "https://github.com/rust-lang/rust/commit/d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3529ceb6c5eeaaecd3d88e97ad17740258772a8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a528f68e79f464f47fd41dd503bbb14e8f34a8ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/a528f68e79f464f47fd41dd503bbb14e8f34a8ea", "html_url": "https://github.com/rust-lang/rust/commit/a528f68e79f464f47fd41dd503bbb14e8f34a8ea"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "e7a26cb346ee6a2e26a33877f9208f23716cc00b", "filename": "src/librustdoc/theme.rs", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d3529ceb6c5eeaaecd3d88e97ad17740258772a8/src%2Flibrustdoc%2Ftheme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3529ceb6c5eeaaecd3d88e97ad17740258772a8/src%2Flibrustdoc%2Ftheme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme.rs?ref=d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "patch": "@@ -17,19 +17,31 @@ pub(crate) struct CssPath {\n }\n \n /// When encountering a `\"` or a `'`, returns the whole string, including the quote characters.\n-fn get_string(iter: &mut Peekable<Chars<'_>>, string_start: char) -> String {\n-    let mut s = String::with_capacity(2);\n-\n-    s.push(string_start);\n+fn get_string(iter: &mut Peekable<Chars<'_>>, string_start: char, buffer: &mut String) {\n+    buffer.push(string_start);\n     while let Some(c) = iter.next() {\n-        s.push(c);\n+        buffer.push(c);\n         if c == '\\\\' {\n             iter.next();\n         } else if c == string_start {\n             break;\n         }\n     }\n-    s\n+}\n+\n+fn get_inside_paren(\n+    iter: &mut Peekable<Chars<'_>>,\n+    paren_start: char,\n+    paren_end: char,\n+    buffer: &mut String,\n+) {\n+    buffer.push(paren_start);\n+    while let Some(c) = iter.next() {\n+        handle_common_chars(c, buffer, iter);\n+        if c == paren_end {\n+            break;\n+        }\n+    }\n }\n \n /// Skips a `/*` comment.\n@@ -52,9 +64,11 @@ fn skip_line_comment(iter: &mut Peekable<Chars<'_>>) {\n \n fn handle_common_chars(c: char, buffer: &mut String, iter: &mut Peekable<Chars<'_>>) {\n     match c {\n-        '\"' | '\\'' => buffer.push_str(&get_string(iter, c)),\n+        '\"' | '\\'' => get_string(iter, c, buffer),\n         '/' if iter.peek() == Some(&'*') => skip_comment(iter),\n         '/' if iter.peek() == Some(&'/') => skip_line_comment(iter),\n+        '(' => get_inside_paren(iter, c, ')', buffer),\n+        '[' => get_inside_paren(iter, c, ']', buffer),\n         _ => buffer.push(c),\n     }\n }"}, {"sha": "08a174d27d35740f6e1aa6de553dc28d3957162b", "filename": "src/librustdoc/theme/tests.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d3529ceb6c5eeaaecd3d88e97ad17740258772a8/src%2Flibrustdoc%2Ftheme%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3529ceb6c5eeaaecd3d88e97ad17740258772a8/src%2Flibrustdoc%2Ftheme%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme%2Ftests.rs?ref=d3529ceb6c5eeaaecd3d88e97ad17740258772a8", "patch": "@@ -138,7 +138,6 @@ fn test_media() {\n     assert!(p.children.get(\"a:hover\").is_some());\n     assert!(p.children.get(\"b\").is_some());\n \n-    eprintln!(\"{:?}\", paths);\n     let p = paths.get(\"@media (max-width:1001px)\");\n     assert!(p.is_some());\n     let p = p.unwrap();\n@@ -169,3 +168,20 @@ fn test_css_variables() {\n     get_differences(&other, &against, &mut ret);\n     assert_eq!(ret, vec![\"  Missing CSS variable `--b` in `:root`\".to_owned()]);\n }\n+\n+#[test]\n+fn test_weird_rule_value() {\n+    let x = r#\"\n+a[text=(\"a\")] {\n+    b: url({;}.png);\n+    c: #fff\n+}\n+\"#;\n+\n+    let paths = load_css_paths(&x).unwrap();\n+    let p = paths.get(\"a[text=(\\\"a\\\")]\");\n+    assert!(p.is_some());\n+    let p = p.unwrap();\n+    assert_eq!(p.rules.get(\"b\"), Some(&\"url({;}.png)\".to_owned()));\n+    assert_eq!(p.rules.get(\"c\"), Some(&\"#fff\".to_owned()));\n+}"}]}