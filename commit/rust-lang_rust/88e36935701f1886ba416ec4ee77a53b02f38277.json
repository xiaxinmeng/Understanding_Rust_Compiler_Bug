{"sha": "88e36935701f1886ba416ec4ee77a53b02f38277", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZTM2OTM1NzAxZjE4ODZiYTQxNmVjNGVlNzdhNTNiMDJmMzgyNzc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T00:29:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T00:29:30Z"}, "message": "Rollup merge of #76304 - CDirkx:const-ip, r=ecstatic-morse\n\nMake delegation methods of `std::net::IpAddr` unstably const\n\nMake the following methods of `std::net::IpAddr` unstable const under the `const_ip` feature:\n - `is_unspecified`\n - `is_loopback`\n - `is_global`\n - `is_multicast`\n\nAlso adds a test for these methods in a const context.\n\nPossible because these methods delegate to the inner `Ipv4Addr` or `Ipv6Addr`, which were made const ([PR#76205](https://github.com/rust-lang/rust/pull/76142) and [PR#76206](https://github.com/rust-lang/rust/pull/76206)), and the recent stabilization of const control flow.\n\nPart of #76205\n\nr? @ecstatic-morse", "tree": {"sha": "3aceaf36523da6e6386b7083f9a9874a14f00ec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3aceaf36523da6e6386b7083f9a9874a14f00ec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88e36935701f1886ba416ec4ee77a53b02f38277", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbTnqCRBK7hj4Ov3rIwAAdHIIAGMtyUorziDkcxqnj3LUl6us\n6a57CUxJuiAOxAd7QdaINOTOAr9ugThrBZOiY5CsJhUvSI02Uz2IdYTOxfoEtMRZ\n5m654d95x5Qu+96YqVSlxNnlaku8vzRPAe88v0C86Pw3AcvolXzt9CONWt5fMG3R\nXBeeNQjdJhNIGQxPAvMmStDRaE0ljtTFL/IVYrOx+jaXn1olrxhczZeXYx0m7efW\nPiEadvF6+GXUyTdxDxq5iTM1/IO/EXsz0c1wQYD1ywx+/ZX4OPpTvN/bpNtcGJ6Y\nWu9Kr9jQVa7OrdUjOhJSrGyKcw38tqrvv14r12yR3xgWp9LIL+AEBRkK2yP2+gg=\n=i7HC\n-----END PGP SIGNATURE-----\n", "payload": "tree 3aceaf36523da6e6386b7083f9a9874a14f00ec5\nparent 15efed4e6fe7a6040cb8b04c03db5dd72c9531d9\nparent 947536fca06e6dc6c3a3dd4ff1f66fc5080e9cbb\nauthor Jonas Schievink <jonasschievink@gmail.com> 1600993770 +0200\ncommitter GitHub <noreply@github.com> 1600993770 +0200\n\nRollup merge of #76304 - CDirkx:const-ip, r=ecstatic-morse\n\nMake delegation methods of `std::net::IpAddr` unstably const\n\nMake the following methods of `std::net::IpAddr` unstable const under the `const_ip` feature:\n - `is_unspecified`\n - `is_loopback`\n - `is_global`\n - `is_multicast`\n\nAlso adds a test for these methods in a const context.\n\nPossible because these methods delegate to the inner `Ipv4Addr` or `Ipv6Addr`, which were made const ([PR#76205](https://github.com/rust-lang/rust/pull/76142) and [PR#76206](https://github.com/rust-lang/rust/pull/76206)), and the recent stabilization of const control flow.\n\nPart of #76205\n\nr? @ecstatic-morse\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88e36935701f1886ba416ec4ee77a53b02f38277", "html_url": "https://github.com/rust-lang/rust/commit/88e36935701f1886ba416ec4ee77a53b02f38277", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88e36935701f1886ba416ec4ee77a53b02f38277/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15efed4e6fe7a6040cb8b04c03db5dd72c9531d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/15efed4e6fe7a6040cb8b04c03db5dd72c9531d9", "html_url": "https://github.com/rust-lang/rust/commit/15efed4e6fe7a6040cb8b04c03db5dd72c9531d9"}, {"sha": "947536fca06e6dc6c3a3dd4ff1f66fc5080e9cbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/947536fca06e6dc6c3a3dd4ff1f66fc5080e9cbb", "html_url": "https://github.com/rust-lang/rust/commit/947536fca06e6dc6c3a3dd4ff1f66fc5080e9cbb"}], "stats": {"total": 35, "additions": 30, "deletions": 5}, "files": [{"sha": "ac0075ad129c5778e0fe27ace2057edfac1366f1", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=88e36935701f1886ba416ec4ee77a53b02f38277", "patch": "@@ -238,6 +238,7 @@\n #![feature(const_cstr_unchecked)]\n #![feature(const_fn_transmute)]\n #![feature(const_fn)]\n+#![feature(const_ip)]\n #![feature(const_ipv6)]\n #![feature(const_raw_ptr_deref)]\n #![feature(const_ipv4)]"}, {"sha": "f01a7b72a655959da76a24b202535e0ad63fee37", "filename": "library/std/src/net/ip.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip.rs?ref=88e36935701f1886ba416ec4ee77a53b02f38277", "patch": "@@ -148,8 +148,9 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(0, 0, 0, 0)).is_unspecified(), true);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0)).is_unspecified(), true);\n     /// ```\n+    #[rustc_const_unstable(feature = \"const_ip\", issue = \"76205\")]\n     #[stable(feature = \"ip_shared\", since = \"1.12.0\")]\n-    pub fn is_unspecified(&self) -> bool {\n+    pub const fn is_unspecified(&self) -> bool {\n         match self {\n             IpAddr::V4(ip) => ip.is_unspecified(),\n             IpAddr::V6(ip) => ip.is_unspecified(),\n@@ -169,8 +170,9 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(127, 0, 0, 1)).is_loopback(), true);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0, 0, 0, 0, 0, 0, 0, 0x1)).is_loopback(), true);\n     /// ```\n+    #[rustc_const_unstable(feature = \"const_ip\", issue = \"76205\")]\n     #[stable(feature = \"ip_shared\", since = \"1.12.0\")]\n-    pub fn is_loopback(&self) -> bool {\n+    pub const fn is_loopback(&self) -> bool {\n         match self {\n             IpAddr::V4(ip) => ip.is_loopback(),\n             IpAddr::V6(ip) => ip.is_loopback(),\n@@ -192,7 +194,8 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(80, 9, 12, 3)).is_global(), true);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0, 0, 0x1c9, 0, 0, 0xafc8, 0, 0x1)).is_global(), true);\n     /// ```\n-    pub fn is_global(&self) -> bool {\n+    #[rustc_const_unstable(feature = \"const_ip\", issue = \"76205\")]\n+    pub const fn is_global(&self) -> bool {\n         match self {\n             IpAddr::V4(ip) => ip.is_global(),\n             IpAddr::V6(ip) => ip.is_global(),\n@@ -212,8 +215,9 @@ impl IpAddr {\n     /// assert_eq!(IpAddr::V4(Ipv4Addr::new(224, 254, 0, 0)).is_multicast(), true);\n     /// assert_eq!(IpAddr::V6(Ipv6Addr::new(0xff00, 0, 0, 0, 0, 0, 0, 0)).is_multicast(), true);\n     /// ```\n+    #[rustc_const_unstable(feature = \"const_ip\", issue = \"76205\")]\n     #[stable(feature = \"ip_shared\", since = \"1.12.0\")]\n-    pub fn is_multicast(&self) -> bool {\n+    pub const fn is_multicast(&self) -> bool {\n         match self {\n             IpAddr::V4(ip) => ip.is_multicast(),\n             IpAddr::V6(ip) => ip.is_multicast(),\n@@ -238,7 +242,8 @@ impl IpAddr {\n     ///     true\n     /// );\n     /// ```\n-    pub fn is_documentation(&self) -> bool {\n+    #[rustc_const_unstable(feature = \"const_ip\", issue = \"76205\")]\n+    pub const fn is_documentation(&self) -> bool {\n         match self {\n             IpAddr::V4(ip) => ip.is_documentation(),\n             IpAddr::V6(ip) => ip.is_documentation(),"}, {"sha": "d9fbdd1b5e7945732835493c49b63a674788963d", "filename": "library/std/src/net/ip/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88e36935701f1886ba416ec4ee77a53b02f38277/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Fip%2Ftests.rs?ref=88e36935701f1886ba416ec4ee77a53b02f38277", "patch": "@@ -918,3 +918,22 @@ fn ipv6_const() {\n     const IP_V4: Option<Ipv4Addr> = IP_ADDRESS.to_ipv4();\n     assert_eq!(IP_V4.unwrap(), Ipv4Addr::new(0, 0, 0, 1));\n }\n+\n+#[test]\n+fn ip_const() {\n+    // test that the methods of `IpAddr` are usable in a const context\n+\n+    const IP_ADDRESS: IpAddr = IpAddr::V4(Ipv4Addr::LOCALHOST);\n+\n+    const IS_UNSPECIFIED: bool = IP_ADDRESS.is_unspecified();\n+    assert!(!IS_UNSPECIFIED);\n+\n+    const IS_LOOPBACK: bool = IP_ADDRESS.is_loopback();\n+    assert!(IS_LOOPBACK);\n+\n+    const IS_GLOBAL: bool = IP_ADDRESS.is_global();\n+    assert!(!IS_GLOBAL);\n+\n+    const IS_MULTICAST: bool = IP_ADDRESS.is_multicast();\n+    assert!(!IS_MULTICAST);\n+}"}]}