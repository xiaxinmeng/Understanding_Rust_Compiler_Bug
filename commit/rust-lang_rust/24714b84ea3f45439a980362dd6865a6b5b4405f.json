{"sha": "24714b84ea3f45439a980362dd6865a6b5b4405f", "node_id": "C_kwDOAAsO6NoAKDI0NzE0Yjg0ZWEzZjQ1NDM5YTk4MDM2MmRkNjg2NWE2YjViNDQwNWY", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-12T17:51:10Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-11-02T23:17:24Z"}, "message": "rustdoc: remove unneeded Box from ItemKind", "tree": {"sha": "249e756c0d8a915ded71df761a1d2ca197153003", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/249e756c0d8a915ded71df761a1d2ca197153003"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24714b84ea3f45439a980362dd6865a6b5b4405f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24714b84ea3f45439a980362dd6865a6b5b4405f", "html_url": "https://github.com/rust-lang/rust/commit/24714b84ea3f45439a980362dd6865a6b5b4405f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24714b84ea3f45439a980362dd6865a6b5b4405f/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03968a802c50decefd663692906397b44a95d8f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/03968a802c50decefd663692906397b44a95d8f6", "html_url": "https://github.com/rust-lang/rust/commit/03968a802c50decefd663692906397b44a95d8f6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c3d80315a4f12deb216ef8df8e7d97e7da633d9f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=24714b84ea3f45439a980362dd6865a6b5b4405f", "patch": "@@ -1080,7 +1080,7 @@ fn clean_trait_item<'tcx>(trait_item: &hir::TraitItem<'tcx>, cx: &mut DocContext\n             hir::TraitItemKind::Type(bounds, None) => {\n                 let generics = enter_impl_trait(cx, |cx| clean_generics(trait_item.generics, cx));\n                 let bounds = bounds.iter().filter_map(|x| clean_generic_bound(x, cx)).collect();\n-                TyAssocTypeItem(Box::new(generics), bounds)\n+                TyAssocTypeItem(generics, bounds)\n             }\n         };\n         Item::from_def_id_and_parts(local_did, Some(trait_item.ident.name), inner, cx)\n@@ -1297,7 +1297,7 @@ pub(crate) fn clean_middle_assoc_item<'tcx>(\n                         bounds,\n                     )\n                 } else {\n-                    TyAssocTypeItem(Box::new(generics), bounds)\n+                    TyAssocTypeItem(generics, bounds)\n                 }\n             } else {\n                 // FIXME: when could this happen? Associated items in inherent impls?"}, {"sha": "8b71274bbabde96b7a10a8348014ab80dfd43431", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=24714b84ea3f45439a980362dd6865a6b5b4405f", "patch": "@@ -795,7 +795,7 @@ pub(crate) enum ItemKind {\n     /// A required associated type in a trait declaration.\n     ///\n     /// The bounds may be non-empty if there is a `where` clause.\n-    TyAssocTypeItem(Box<Generics>, Vec<GenericBound>),\n+    TyAssocTypeItem(Generics, Vec<GenericBound>),\n     /// An associated type in a trait impl or a provided one in a trait declaration.\n     AssocTypeItem(Box<Typedef>, Vec<GenericBound>),\n     /// An item that has been stripped by a rustdoc pass"}, {"sha": "4889ac25acb84ccc7f91b6ad23706a779eadc583", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24714b84ea3f45439a980362dd6865a6b5b4405f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=24714b84ea3f45439a980362dd6865a6b5b4405f", "patch": "@@ -284,7 +284,7 @@ fn from_clean_item(item: clean::Item, tcx: TyCtxt<'_>) -> ItemEnum {\n             ItemEnum::AssocConst { type_: ty.into_tcx(tcx), default: Some(default.expr(tcx)) }\n         }\n         TyAssocTypeItem(g, b) => ItemEnum::AssocType {\n-            generics: (*g).into_tcx(tcx),\n+            generics: g.into_tcx(tcx),\n             bounds: b.into_tcx(tcx),\n             default: None,\n         },"}]}