{"sha": "e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MzQxOTBjMjRkMmE1YWNhNWI2MmMyYjFhYjdlNjEzNjAxN2EyNWM=", "commit": {"author": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-03-21T17:05:12Z"}, "committer": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-03-21T23:04:48Z"}, "message": "Refactor parser fuzz testing", "tree": {"sha": "106ca91f918767cdee896d879ece4930410b6ea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/106ca91f918767cdee896d879ece4930410b6ea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "html_url": "https://github.com/rust-lang/rust/commit/e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/comments", "author": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51323a852a8979a71c21725b3b2771224132b85f", "url": "https://api.github.com/repos/rust-lang/rust/commits/51323a852a8979a71c21725b3b2771224132b85f", "html_url": "https://github.com/rust-lang/rust/commit/51323a852a8979a71c21725b3b2771224132b85f"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "c54d12813e9dca952e3d339d16ae5552af34b40e", "filename": "crates/ra_syntax/fuzz/Cargo.toml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ffuzz%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ffuzz%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ffuzz%2FCargo.toml?ref=e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "patch": "@@ -4,14 +4,14 @@ name = \"ra_syntax-fuzz\"\n version = \"0.0.1\"\n authors = [\"rust-analyzer developers\"]\n publish = false\n+edition = \"2018\"\n \n [package.metadata]\n cargo-fuzz = true\n \n-[dependencies.ra_syntax]\n-path = \"..\"\n-[dependencies.libfuzzer-sys]\n-git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\"\n+[dependencies]\n+ra_syntax = { path = \"..\" }\n+libfuzzer-sys = { git = \"https://github.com/rust-fuzz/libfuzzer-sys.git\" }\n \n # Prevent this from interfering with workspaces\n [workspace]"}, {"sha": "76a8b08d009352099bdde7a8612df32984ae6d24", "filename": "crates/ra_syntax/fuzz/fuzz_targets/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ffuzz%2Ffuzz_targets%2Fparser.rs?ref=e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "patch": "@@ -1,9 +1,9 @@\n #![no_main]\n-#[macro_use] extern crate libfuzzer_sys;\n-extern crate ra_syntax;\n+use libfuzzer_sys::fuzz_target;\n+use ra_syntax::fuzz::check_parser;\n \n fuzz_target!(|data: &[u8]| {\n     if let Ok(text) = std::str::from_utf8(data) {\n-        ra_syntax::check_fuzz_invariants(text)\n+        check_parser(text)\n     }\n });"}, {"sha": "03f453a6ef21b0f3937ec4690624bce77faf9f7b", "filename": "crates/ra_syntax/src/fuzz.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs?ref=e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "patch": "@@ -0,0 +1,12 @@\n+use crate::{SourceFile, validation, AstNode};\n+\n+fn check_file_invariants(file: &SourceFile) {\n+    let root = file.syntax();\n+    validation::validate_block_structure(root);\n+    let _ = file.errors();\n+}\n+\n+pub fn check_parser(text: &str) {\n+    let file = SourceFile::parse(text);\n+    check_file_invariants(&file);\n+}"}, {"sha": "4f30204404fdab40d9fdfb47f9c0f1ba9a9cdc92", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "patch": "@@ -29,6 +29,8 @@ mod ptr;\n \n pub mod algo;\n pub mod ast;\n+#[doc(hidden)]\n+pub mod fuzz;\n \n pub use rowan::{SmolStr, TextRange, TextUnit};\n pub use ra_parser::SyntaxKind;\n@@ -83,13 +85,6 @@ impl SourceFile {\n     }\n }\n \n-pub fn check_fuzz_invariants(text: &str) {\n-    let file = SourceFile::parse(text);\n-    let root = file.syntax();\n-    validation::validate_block_structure(root);\n-    let _ = file.errors();\n-}\n-\n /// This test does not assert anything and instead just shows off the crate's\n /// API.\n #[test]"}, {"sha": "3de4a65af60f772acd8c022dda7b987fa2450b92", "filename": "crates/ra_syntax/tests/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e734190c24d2a5aca5b62c2b1ab7e6136017a25c/crates%2Fra_syntax%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Ftest.rs?ref=e734190c24d2a5aca5b62c2b1ab7e6136017a25c", "patch": "@@ -8,7 +8,7 @@ use std::{\n };\n \n use test_utils::{project_dir, dir_tests, read_text, collect_tests};\n-use ra_syntax::{SourceFile, AstNode, check_fuzz_invariants};\n+use ra_syntax::{SourceFile, AstNode, fuzz};\n \n #[test]\n fn lexer_tests() {\n@@ -47,7 +47,7 @@ fn parser_tests() {\n #[test]\n fn parser_fuzz_tests() {\n     for (_, text) in collect_tests(&test_data_dir(), &[\"parser/fuzz-failures\"]) {\n-        check_fuzz_invariants(&text)\n+        fuzz::check_parser(&text)\n     }\n }\n "}]}