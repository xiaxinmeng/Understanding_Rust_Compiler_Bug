{"sha": "b5cce742787315bbd974a08718a3020cb1fe3eaf", "node_id": "C_kwDOAAsO6NoAKGI1Y2NlNzQyNzg3MzE1YmJkOTc0YTA4NzE4YTMwMjBjYjFmZTNlYWY", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-17T15:40:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:09:22Z"}, "message": "rename get_global_alloc to try_get_global_alloc", "tree": {"sha": "54c9c1a2ac34a3a927daada097a4f6534577a96e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54c9c1a2ac34a3a927daada097a4f6534577a96e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5cce742787315bbd974a08718a3020cb1fe3eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5cce742787315bbd974a08718a3020cb1fe3eaf", "html_url": "https://github.com/rust-lang/rust/commit/b5cce742787315bbd974a08718a3020cb1fe3eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5cce742787315bbd974a08718a3020cb1fe3eaf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c77e2b9224f063659e50732938052690fc73264", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c77e2b9224f063659e50732938052690fc73264", "html_url": "https://github.com/rust-lang/rust/commit/1c77e2b9224f063659e50732938052690fc73264"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a1508d7c72b424985efb78ad47ac7d072069e93b", "filename": "src/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5cce742787315bbd974a08718a3020cb1fe3eaf/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5cce742787315bbd974a08718a3020cb1fe3eaf/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=b5cce742787315bbd974a08718a3020cb1fe3eaf", "patch": "@@ -362,7 +362,7 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n         let (data_id, alloc, section_name) = match todo_item {\n             TodoItem::Alloc(alloc_id) => {\n                 //println!(\"alloc_id {}\", alloc_id);\n-                let alloc = match tcx.get_global_alloc(alloc_id).unwrap() {\n+                let alloc = match tcx.global_alloc(alloc_id) {\n                     GlobalAlloc::Memory(alloc) => alloc,\n                     GlobalAlloc::Function(_) | GlobalAlloc::Static(_) | GlobalAlloc::Vtable(..) => {\n                         unreachable!()"}]}