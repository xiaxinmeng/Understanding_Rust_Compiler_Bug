{"sha": "6041ed077556bf26bb429ba8bdff8708aff70d14", "node_id": "C_kwDOAAsO6NoAKDYwNDFlZDA3NzU1NmJmMjZiYjQyOWJhOGJkZmY4NzA4YWZmNzBkMTQ", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-02T18:27:46Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-08-04T14:26:55Z"}, "message": "No need to check binders to ignore on new_named_lifetime_with_res's LifetimeRes::Param", "tree": {"sha": "e74aa25850539b2a488083f20fd7b1817e2324df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e74aa25850539b2a488083f20fd7b1817e2324df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6041ed077556bf26bb429ba8bdff8708aff70d14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmLr1y8ACgkQgTGiTgx5\n76+Jeg/+NV4mZjXfLOx69xrj2z3VnfnZewzwtC5Dkvoil6+Q6AaPU82i/joaYAQf\neupCXYpNVrcjTf7ft95UavFpFYEmiEdJfPnuDCPSFxBHLmMrY5jq6zM4Y0pVjQiJ\nF/29BUIcFCLDC8xGZG5YtrLCRPlNKsGKB+3aM8G5IyAizcZtIawTM5IA9Bh5B/g8\nTg/C8yXgs/3Fz9l3mHF6vQOPq8BgqrnKk1gqdB8gYhX5NJJiluzADinGx5/lI0hq\nbAOYrcDQ3r5doUObDMsfP262Z3J5LaZtvcftbM62REZDTbOOrtvvlJjeEMSJFhle\nNdK7mL+fhXs2U8UAQwB4MSJXETh8Jma4epenFQjhtFSmpG6GkfrlD8zgc9evzvMb\nQWkN5c/ISaoaeC/asSdBNfQvvy9ics0G41rQZcZ5vI1F6bKAn7z0RgWhtxBzJmbo\nmWUYmAdqQ6J4nYhesKf716JPDPpIOFHZvpEOnDMOo8NaVh1P2U15TMU4tEb+0SUp\nOORSeOnIf+vB6EYl+7lX8iLa2jsdv/eZfTd5PscxRnRkInjA/F6aZ5b5mDAq2uQm\nYQkAUakeZNPEpBljENMK8KHVRTLT99KelH5YsgsHA87F0S8n2Iy+vMjZuzWPsbqQ\npZGOpagPQ9u/ybA6npiY6mDBokzFPFWhQzxV9gMsbx3TEtxZFwg=\n=A0vq\n-----END PGP SIGNATURE-----", "payload": "tree e74aa25850539b2a488083f20fd7b1817e2324df\nparent d9e6364755e7c332a904d23d2d8704e46f9bae79\nauthor Santiago Pastorino <spastorino@gmail.com> 1659464866 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1659623215 -0300\n\nNo need to check binders to ignore on new_named_lifetime_with_res's LifetimeRes::Param\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6041ed077556bf26bb429ba8bdff8708aff70d14", "html_url": "https://github.com/rust-lang/rust/commit/6041ed077556bf26bb429ba8bdff8708aff70d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6041ed077556bf26bb429ba8bdff8708aff70d14/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9e6364755e7c332a904d23d2d8704e46f9bae79", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e6364755e7c332a904d23d2d8704e46f9bae79", "html_url": "https://github.com/rust-lang/rust/commit/d9e6364755e7c332a904d23d2d8704e46f9bae79"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "0ee2ffd271e0176b4eb9239e04229f67cdafe1bf", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6041ed077556bf26bb429ba8bdff8708aff70d14/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6041ed077556bf26bb429ba8bdff8708aff70d14/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=6041ed077556bf26bb429ba8bdff8708aff70d14", "patch": "@@ -1907,16 +1907,11 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         debug!(?self.captured_lifetimes);\n \n         let name = match res {\n-            LifetimeRes::Param { mut param, binder } => {\n+            LifetimeRes::Param { mut param, .. } => {\n                 let p_name = ParamName::Plain(ident);\n                 if let Some(mut captured_lifetimes) = self.captured_lifetimes.take() {\n-                    if !captured_lifetimes.binders_to_ignore.contains(&binder) {\n-                        match captured_lifetimes.captures.entry(param) {\n-                            Entry::Occupied(o) => param = self.local_def_id(o.get().1),\n-                            Entry::Vacant(_) => {\n-                                panic!(\"Lifetime {:?} should have a def_id at this point\", id);\n-                            }\n-                        }\n+                    if let Entry::Occupied(o) = captured_lifetimes.captures.entry(param) {\n+                        param = self.local_def_id(o.get().1);\n                     }\n \n                     self.captured_lifetimes = Some(captured_lifetimes);"}]}