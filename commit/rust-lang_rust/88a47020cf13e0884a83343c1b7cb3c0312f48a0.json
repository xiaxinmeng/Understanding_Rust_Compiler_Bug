{"sha": "88a47020cf13e0884a83343c1b7cb3c0312f48a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YTQ3MDIwY2YxM2UwODg0YTgzMzQzYzFiN2NiM2MwMzEyZjQ4YTA=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-16T16:45:55Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-16T16:45:55Z"}, "message": "Updating sio tests.", "tree": {"sha": "91d1f0bb208828ccb6be3a09044c833764cccb51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91d1f0bb208828ccb6be3a09044c833764cccb51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88a47020cf13e0884a83343c1b7cb3c0312f48a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88a47020cf13e0884a83343c1b7cb3c0312f48a0", "html_url": "https://github.com/rust-lang/rust/commit/88a47020cf13e0884a83343c1b7cb3c0312f48a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88a47020cf13e0884a83343c1b7cb3c0312f48a0/comments", "author": null, "committer": null, "parents": [{"sha": "cf2def46c120d8d6ef8a98571a39bef478c8c2a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf2def46c120d8d6ef8a98571a39bef478c8c2a9", "html_url": "https://github.com/rust-lang/rust/commit/cf2def46c120d8d6ef8a98571a39bef478c8c2a9"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "83be5daf3d014716269f2eff8090392cb595dd9e", "filename": "src/lib/aio.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Flib%2Faio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Flib%2Faio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Faio.rs?ref=88a47020cf13e0884a83343c1b7cb3c0312f48a0", "patch": "@@ -130,7 +130,6 @@ fn request_task(c: _chan[ctx]) {\n     let req: request;\n     while (true) {\n         req = p.recv();\n-        log_err req;\n         alt req {\n           quit. {\n             log \"got quit message\";"}, {"sha": "01978590d313800a81faa6a2fdfb0f5becad6153", "filename": "src/test/run-pass/sio-read.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-read.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-read.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-read.rs?ref=88a47020cf13e0884a83343c1b7cb3c0312f48a0", "patch": "@@ -1,13 +1,13 @@\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3\n-\n use std;\n import std::sio;\n import std::task;\n import std::str;\n+import std::net;\n \n-fn connectTask(cx: sio::ctx, ip: str, portnum: int) {\n+fn connectTask(cx: sio::ctx, ip: net::ip_addr, portnum: int) {\n   let client: sio::client;\n   client = sio::connect_to(cx, ip, portnum);\n   let data = sio::read(client);\n@@ -16,11 +16,14 @@ fn connectTask(cx: sio::ctx, ip: str, portnum: int) {\n \n fn main() {\n   let cx: sio::ctx = sio::new();\n-  let srv: sio::server = sio::create_server(cx, \"0.0.0.0\", 9090);\n-  let child: task = spawn connectTask(cx, \"127.0.0.1\", 9090);\n+  let srv: sio::server = sio::create_server(cx,\n+                                            net::parse_addr(\"0.0.0.0\"), 9090);\n+  let child = task::_spawn(bind connectTask(cx,\n+                                            net::parse_addr(\"127.0.0.1\"),\n+                                            9090));\n   let client: sio::client = sio::accept_from(srv);\n   sio::write_data(client, str::bytes(\"hello, world\\n\"));\n-  task::join(child);\n+  task::join_id(child);\n   sio::close_client(client);\n   sio::close_server(srv);\n   sio::destroy(cx);"}, {"sha": "815b769f4e64f6fb86c5f9fe28f9b1d30f174e2e", "filename": "src/test/run-pass/sio-srv.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-srv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-srv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-srv.rs?ref=88a47020cf13e0884a83343c1b7cb3c0312f48a0", "patch": "@@ -1,13 +1,14 @@\n-xfail-stage1\n-xfail-stage2\n-xfail-stage3\n-\n+// xfail-stage1\n+// xfail-stage2\n+// xfail-stage3\n use std;\n import std::sio;\n+import std::net;\n \n fn main() {\n   let cx: sio::ctx = sio::new();\n-  let srv: sio::server = sio::create_server(cx, \"127.0.0.1\", 9090);\n+  let srv: sio::server = sio::create_server(cx, net::parse_addr(\"127.0.0.1\"),\n+                                            9090);\n   sio::close_server(srv);\n   sio::destroy(cx);\n }"}, {"sha": "4274d54d869d7288139c87a65f383d248b86e7a6", "filename": "src/test/run-pass/sio-write.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88a47020cf13e0884a83343c1b7cb3c0312f48a0/src%2Ftest%2Frun-pass%2Fsio-write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsio-write.rs?ref=88a47020cf13e0884a83343c1b7cb3c0312f48a0", "patch": "@@ -1,25 +1,27 @@\n // xfail-stage1\n // xfail-stage2\n // xfail-stage3\n-\n use std;\n import std::sio;\n import std::task;\n import std::str;\n+import std::net;\n \n-fn connectTask(cx: sio::ctx, ip: str, portnum: int) {\n+fn connectTask(cx: sio::ctx, ip: net::ip_addr, portnum: int) {\n   let client: sio::client;\n   client = sio::connect_to(cx, ip, portnum);\n   sio::close_client(client);\n }\n \n fn main() {\n   let cx: sio::ctx = sio::new();\n-  let srv: sio::server = sio::create_server(cx, \"0.0.0.0\", 9090);\n-  let child: task = spawn connectTask(cx, \"127.0.0.1\", 9090);\n+  let srv: sio::server = sio::create_server(cx, net::parse_addr(\"0.0.0.0\"),\n+                                            9090);\n+  let child = task::_spawn(bind connectTask(cx, net::parse_addr(\"127.0.0.1\"),\n+                                            9090));\n   let client: sio::client = sio::accept_from(srv);\n   sio::write_data(client, str::bytes(\"hello, world\\n\"));\n-  task::join(child);\n+  task::join_id(child);\n   sio::close_client(client);\n   sio::close_server(srv);\n   sio::destroy(cx);"}]}