{"sha": "58a04f06cb6522040af4d9352c3a25dd66547acc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTA0ZjA2Y2I2NTIyMDQwYWY0ZDkzNTJjM2EyNWRkNjY1NDdhY2M=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-25T16:48:57Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-27T09:44:55Z"}, "message": "Propitiate tidy", "tree": {"sha": "627945065a6e3e6923360258b207750a5c91e4a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/627945065a6e3e6923360258b207750a5c91e4a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a04f06cb6522040af4d9352c3a25dd66547acc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a04f06cb6522040af4d9352c3a25dd66547acc", "html_url": "https://github.com/rust-lang/rust/commit/58a04f06cb6522040af4d9352c3a25dd66547acc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a04f06cb6522040af4d9352c3a25dd66547acc/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3683f51352311dc5adb3788239bdb498f002f850", "url": "https://api.github.com/repos/rust-lang/rust/commits/3683f51352311dc5adb3788239bdb498f002f850", "html_url": "https://github.com/rust-lang/rust/commit/3683f51352311dc5adb3788239bdb498f002f850"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "433f6685d1ff1d43e77242cc503a84930394f1b0", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/58a04f06cb6522040af4d9352c3a25dd66547acc/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a04f06cb6522040af4d9352c3a25dd66547acc/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=58a04f06cb6522040af4d9352c3a25dd66547acc", "patch": "@@ -3229,7 +3229,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             Some(ret) => ret,\n             None => return Vec::new()\n         };\n-        let expect_args = self.fudge_inference_if_ok(&RegionVariableOrigin::Coercion(call_span), || {\n+        let origin = RegionVariableOrigin::Coercion(call_span);\n+        let expect_args = self.fudge_inference_if_ok(&origin, || {\n             // Attempt to apply a subtyping relationship between the formal\n             // return type (likely containing type variables if the function\n             // is polymorphic) and the expected return type."}]}