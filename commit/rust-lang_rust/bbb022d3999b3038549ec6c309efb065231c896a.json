{"sha": "bbb022d3999b3038549ec6c309efb065231c896a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYjAyMmQzOTk5YjMwMzg1NDllYzZjMzA5ZWZiMDY1MjMxYzg5NmE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-14T16:48:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-14T16:48:58Z"}, "message": "Merge #2245\n\n2245: Even if jemalloc feature is used do not use it on msvc r=matklad a=kjeremy\n\nFixes #2233\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>", "tree": {"sha": "6fea34f9b60123fad4e5b01e843f19d25c280df1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fea34f9b60123fad4e5b01e843f19d25c280df1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbb022d3999b3038549ec6c309efb065231c896a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdzYV6CRBK7hj4Ov3rIwAAdHIIAJXgpepsYZfYlcZ3T4q22km3\nXmq+3echyihPPbN12IEi6GLt8oFgq156AcaUO3uDoY5yHCZLC9PrqJ4d2gi7lPAC\nO7LfMa/JAOMMycqyKYd9vXNViF69HAwXqEEa8u3QpD8JIpI0qY0zdf7mR37/+olr\ntNzw4QFyaIfMPz7JDU58x7hb2lIxSBAZdQiTlFy/+/zK9ow/5k/7vjn9J5ESWlVd\n5f6KVnFbxhxOS31CeobiSFc5QHYvRgGIvrU+Jq4BXTFHUHmfZ1h70MUiwbdjUnhn\n2F4/FvXx6P+spadHj8+lHy5cCmxEdumdzxq323suNxnBOJWMxmVOq1pV2QgJSO4=\n=mhjn\n-----END PGP SIGNATURE-----\n", "payload": "tree 6fea34f9b60123fad4e5b01e843f19d25c280df1\nparent f2c64ba15d3ef87f731f17d90c873383d5f3e432\nparent fc9c2915c74ac120a9b52c9003f768a9a4e30a55\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573750138 +0000\ncommitter GitHub <noreply@github.com> 1573750138 +0000\n\nMerge #2245\n\n2245: Even if jemalloc feature is used do not use it on msvc r=matklad a=kjeremy\n\nFixes #2233\n\nCo-authored-by: kjeremy <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbb022d3999b3038549ec6c309efb065231c896a", "html_url": "https://github.com/rust-lang/rust/commit/bbb022d3999b3038549ec6c309efb065231c896a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbb022d3999b3038549ec6c309efb065231c896a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2c64ba15d3ef87f731f17d90c873383d5f3e432", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c64ba15d3ef87f731f17d90c873383d5f3e432", "html_url": "https://github.com/rust-lang/rust/commit/f2c64ba15d3ef87f731f17d90c873383d5f3e432"}, {"sha": "fc9c2915c74ac120a9b52c9003f768a9a4e30a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9c2915c74ac120a9b52c9003f768a9a4e30a55", "html_url": "https://github.com/rust-lang/rust/commit/fc9c2915c74ac120a9b52c9003f768a9a4e30a55"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "bb241258cfcc110b4156ba9703317877558154d1", "filename": "crates/ra_prof/Cargo.toml", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2FCargo.toml?ref=bbb022d3999b3038549ec6c309efb065231c896a", "patch": "@@ -1,17 +1,19 @@\n-[package]\n-edition = \"2018\"\n-name = \"ra_prof\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n-\n-[dependencies]\n-once_cell = \"1.0.1\"\n-itertools = \"0.8.0\"\n-backtrace = \"0.3.28\"\n-jemallocator = { version = \"0.3.2\", optional = true }\n-jemalloc-ctl = { version = \"0.3.2\", optional = true }\n-\n-[features]\n-jemalloc = [ \"jemallocator\", \"jemalloc-ctl\" ]\n-cpu_profiler = []\n+[package]\r\n+edition = \"2018\"\r\n+name = \"ra_prof\"\r\n+version = \"0.1.0\"\r\n+authors = [\"rust-analyzer developers\"]\r\n+publish = false\r\n+\r\n+[dependencies]\r\n+once_cell = \"1.0.1\"\r\n+itertools = \"0.8.0\"\r\n+backtrace = \"0.3.28\"\r\n+\r\n+[target.'cfg(not(target_env = \"msvc\"))'.dependencies]\r\n+jemallocator = { version = \"0.3.2\", optional = true }\r\n+jemalloc-ctl = { version = \"0.3.2\", optional = true }\r\n+\r\n+[features]\r\n+jemalloc = [ \"jemallocator\", \"jemalloc-ctl\" ]\r\n+cpu_profiler = []\r"}, {"sha": "845b2221c8f189e5bdee691f5d64e1de1fbe7752", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=bbb022d3999b3038549ec6c309efb065231c896a", "patch": "@@ -24,7 +24,7 @@ pub use crate::memory_usage::{Bytes, MemoryUsage};\n \n // We use jemalloc mainly to get heap usage statistics, actual performance\n // difference is not measures.\n-#[cfg(feature = \"jemalloc\")]\n+#[cfg(all(feature = \"jemalloc\", not(target_env = \"msvc\")))]\n #[global_allocator]\n static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;\n "}, {"sha": "9768f656c4266f7c4de698f40b7a8df330fe9b51", "filename": "crates/ra_prof/src/memory_usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbb022d3999b3038549ec6c309efb065231c896a/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fmemory_usage.rs?ref=bbb022d3999b3038549ec6c309efb065231c896a", "patch": "@@ -8,7 +8,7 @@ pub struct MemoryUsage {\n }\n \n impl MemoryUsage {\n-    #[cfg(feature = \"jemalloc\")]\n+    #[cfg(all(feature = \"jemalloc\", not(target_env = \"msvc\")))]\n     pub fn current() -> MemoryUsage {\n         jemalloc_ctl::epoch::advance().unwrap();\n         MemoryUsage {\n@@ -17,7 +17,7 @@ impl MemoryUsage {\n         }\n     }\n \n-    #[cfg(not(feature = \"jemalloc\"))]\n+    #[cfg(any(not(feature = \"jemalloc\"), target_env = \"msvc\"))]\n     pub fn current() -> MemoryUsage {\n         MemoryUsage { allocated: Bytes(0), resident: Bytes(0) }\n     }"}]}