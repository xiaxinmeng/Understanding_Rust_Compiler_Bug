{"sha": "2f6cf36b326d5045872785782cdd0c121a3198ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNmNmMzZiMzI2ZDUwNDU4NzI3ODU3ODJjZGQwYzEyMWEzMTk4ZWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-27T21:01:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-27T21:01:00Z"}, "message": "Rollup merge of #62043 - Centril:remove-fnbox, r=cramertj\n\nRemove `FnBox`\n\nRemove `FnBox` since we now have `Box<dyn FnOnce>`.\n\nCloses https://github.com/rust-lang/rust/issues/28796.\n\nr? @cramertj", "tree": {"sha": "40fe74655b94ca276ddeda29a233ec47281bec44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40fe74655b94ca276ddeda29a233ec47281bec44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f6cf36b326d5045872785782cdd0c121a3198ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdFS6MCRBK7hj4Ov3rIwAAdHIIAKLz6Q6E0danyqQph7+CHCmR\nkGb8fktg4eWuHtowrf0+nlGe6xc0s6XDhz4gEGOQ5P7sWVJEV9ev83OI2Xh/CPYp\n1HrHds3weRkawOPVnGkqC5L+wMlSjk8zBCKoklgQeKQEfz5XCvr7H1GX1JxLygZP\nBAkwJkIo5MYyZHKs0HTof0cEksiVQLrKHmACp5JEntV4VBD+43W9jISOLxGELKgg\nLaL8tl6o3W2sbQoB+Ti8UsVmxwH4+XSLCvxzmQAbGy39B0QyHaI6PSkyrOgLU5P8\nsc5cbt0rs6x/1gryhIocgZYptRcxRLGGeONPuyKTZ/rgwIF+NNwSYp23BNmSGl8=\n=9jMj\n-----END PGP SIGNATURE-----\n", "payload": "tree 40fe74655b94ca276ddeda29a233ec47281bec44\nparent 7ddfae74b1e22b4de71f0fe839577b985c545a64\nparent a99a7b7f35e3b30862058cc28ed4b0cf51638cf4\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1561669260 +0200\ncommitter GitHub <noreply@github.com> 1561669260 +0200\n\nRollup merge of #62043 - Centril:remove-fnbox, r=cramertj\n\nRemove `FnBox`\n\nRemove `FnBox` since we now have `Box<dyn FnOnce>`.\n\nCloses https://github.com/rust-lang/rust/issues/28796.\n\nr? @cramertj\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f6cf36b326d5045872785782cdd0c121a3198ec", "html_url": "https://github.com/rust-lang/rust/commit/2f6cf36b326d5045872785782cdd0c121a3198ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f6cf36b326d5045872785782cdd0c121a3198ec/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ddfae74b1e22b4de71f0fe839577b985c545a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ddfae74b1e22b4de71f0fe839577b985c545a64", "html_url": "https://github.com/rust-lang/rust/commit/7ddfae74b1e22b4de71f0fe839577b985c545a64"}, {"sha": "a99a7b7f35e3b30862058cc28ed4b0cf51638cf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a99a7b7f35e3b30862058cc28ed4b0cf51638cf4", "html_url": "https://github.com/rust-lang/rust/commit/a99a7b7f35e3b30862058cc28ed4b0cf51638cf4"}], "stats": {"total": 129, "additions": 1, "deletions": 128}, "files": [{"sha": "343084b7db5016f9fef3ea74be335ea3d4ded529", "filename": "src/doc/unstable-book/src/language-features/unsized-locals.md", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funsized-locals.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funsized-locals.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funsized-locals.md?ref=2f6cf36b326d5045872785782cdd0c121a3198ec", "patch": "@@ -117,9 +117,7 @@ fn main () {\n }\n ```\n \n-One of the objectives of this feature is to allow `Box<dyn FnOnce>`, instead of `Box<dyn FnBox>` in the future. See [#28796] for details.\n-\n-[#28796]: https://github.com/rust-lang/rust/issues/28796\n+One of the objectives of this feature is to allow `Box<dyn FnOnce>`.\n \n ## Variable length arrays\n "}, {"sha": "97e32cc0acb121ef319d51fa79275dbd5e2073ba", "filename": "src/doc/unstable-book/src/library-features/fnbox.md", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7ddfae74b1e22b4de71f0fe839577b985c545a64/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md", "raw_url": "https://github.com/rust-lang/rust/raw/7ddfae74b1e22b4de71f0fe839577b985c545a64/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Ffnbox.md?ref=7ddfae74b1e22b4de71f0fe839577b985c545a64", "patch": "@@ -1,32 +0,0 @@\n-# `fnbox`\n-\n-The tracking issue for this feature is [#28796]\n-\n-[#28796]: https://github.com/rust-lang/rust/issues/28796\n-\n-------------------------\n-\n-This had been a temporary alternative to the following impls:\n-\n-```rust,ignore\n-impl<A, F> FnOnce for Box<F> where F: FnOnce<A> + ?Sized {}\n-impl<A, F> FnMut for Box<F> where F: FnMut<A> + ?Sized {}\n-impl<A, F> Fn for Box<F> where F: Fn<A> + ?Sized {}\n-```\n-\n-The impls are parallel to these (relatively old) impls:\n-\n-```rust,ignore\n-impl<A, F> FnOnce for &mut F where F: FnMut<A> + ?Sized {}\n-impl<A, F> FnMut for &mut F where F: FnMut<A> + ?Sized {}\n-impl<A, F> Fn for &mut F where F: Fn<A> + ?Sized {}\n-impl<A, F> FnOnce for &F where F: Fn<A> + ?Sized {}\n-impl<A, F> FnMut for &F where F: Fn<A> + ?Sized {}\n-impl<A, F> Fn for &F where F: Fn<A> + ?Sized {}\n-```\n-\n-Before the introduction of [`unsized_locals`][unsized_locals], we had been unable to provide the former impls. That means, unlike `&dyn Fn()` or `&mut dyn FnMut()` we could not use `Box<dyn FnOnce()>` at that time.\n-\n-[unsized_locals]: ../language-features/unsized-locals.md\n-\n-`FnBox()` is an alternative approach to `Box<dyn FnBox()>` is delegated to `FnBox::call_box` which doesn't need unsized locals. As we now have `Box<dyn FnOnce()>` working, the `fnbox` feature is going to be removed."}, {"sha": "9109a730cce2dd92a269166ef6e295c30191ada8", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=2f6cf36b326d5045872785782cdd0c121a3198ec", "patch": "@@ -761,85 +761,6 @@ impl<A, F: Fn<A> + ?Sized> Fn<A> for Box<F> {\n     }\n }\n \n-/// `FnBox` is deprecated and will be removed.\n-/// `Box<dyn FnOnce()>` can be called directly, since Rust 1.35.0.\n-///\n-/// `FnBox` is a version of the `FnOnce` intended for use with boxed\n-/// closure objects. The idea was that where one would normally store a\n-/// `Box<dyn FnOnce()>` in a data structure, you whould use\n-/// `Box<dyn FnBox()>`. The two traits behave essentially the same, except\n-/// that a `FnBox` closure can only be called if it is boxed.\n-///\n-/// # Examples\n-///\n-/// Here is a snippet of code which creates a hashmap full of boxed\n-/// once closures and then removes them one by one, calling each\n-/// closure as it is removed. Note that the type of the closures\n-/// stored in the map is `Box<dyn FnBox() -> i32>` and not `Box<dyn FnOnce()\n-/// -> i32>`.\n-///\n-/// ```\n-/// #![feature(fnbox)]\n-/// #![allow(deprecated)]\n-///\n-/// use std::boxed::FnBox;\n-/// use std::collections::HashMap;\n-///\n-/// fn make_map() -> HashMap<i32, Box<dyn FnBox() -> i32>> {\n-///     let mut map: HashMap<i32, Box<dyn FnBox() -> i32>> = HashMap::new();\n-///     map.insert(1, Box::new(|| 22));\n-///     map.insert(2, Box::new(|| 44));\n-///     map\n-/// }\n-///\n-/// fn main() {\n-///     let mut map = make_map();\n-///     for i in &[1, 2] {\n-///         let f = map.remove(&i).unwrap();\n-///         assert_eq!(f(), i * 22);\n-///     }\n-/// }\n-/// ```\n-///\n-/// In Rust 1.35.0 or later, use `FnOnce`, `FnMut`, or `Fn` instead:\n-///\n-/// ```\n-/// use std::collections::HashMap;\n-///\n-/// fn make_map() -> HashMap<i32, Box<dyn FnOnce() -> i32>> {\n-///     let mut map: HashMap<i32, Box<dyn FnOnce() -> i32>> = HashMap::new();\n-///     map.insert(1, Box::new(|| 22));\n-///     map.insert(2, Box::new(|| 44));\n-///     map\n-/// }\n-///\n-/// fn main() {\n-///     let mut map = make_map();\n-///     for i in &[1, 2] {\n-///         let f = map.remove(&i).unwrap();\n-///         assert_eq!(f(), i * 22);\n-///     }\n-/// }\n-/// ```\n-#[rustc_paren_sugar]\n-#[unstable(feature = \"fnbox\", issue = \"28796\")]\n-#[rustc_deprecated(reason = \"use `FnOnce`, `FnMut`, or `Fn` instead\", since = \"1.37.0\")]\n-pub trait FnBox<A>: FnOnce<A> {\n-    /// Performs the call operation.\n-    fn call_box(self: Box<Self>, args: A) -> Self::Output;\n-}\n-\n-#[unstable(feature = \"fnbox\", issue = \"28796\")]\n-#[rustc_deprecated(reason = \"use `FnOnce`, `FnMut`, or `Fn` instead\", since = \"1.37.0\")]\n-#[allow(deprecated, deprecated_in_future)]\n-impl<A, F> FnBox<A> for F\n-    where F: FnOnce<A>\n-{\n-    fn call_box(self: Box<F>, args: A) -> F::Output {\n-        self.call_once(args)\n-    }\n-}\n-\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Box<U>> for Box<T> {}\n "}, {"sha": "60e06139eba99c205bfc83501f4c0f72641cd5a5", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f6cf36b326d5045872785782cdd0c121a3198ec/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=2f6cf36b326d5045872785782cdd0c121a3198ec", "patch": "@@ -262,7 +262,6 @@\n #![feature(exhaustive_patterns)]\n #![feature(external_doc)]\n #![feature(fn_traits)]\n-#![feature(fnbox)]\n #![feature(generator_trait)]\n #![feature(hash_raw_entry)]\n #![feature(hashmap_internals)]"}, {"sha": "74a4dd5d8515b3825743b6b1f1f971a58cae4093", "filename": "src/test/run-pass/unsized-locals/fnbox-compat.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7ddfae74b1e22b4de71f0fe839577b985c545a64/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ddfae74b1e22b4de71f0fe839577b985c545a64/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized-locals%2Ffnbox-compat.rs?ref=7ddfae74b1e22b4de71f0fe839577b985c545a64", "patch": "@@ -1,13 +0,0 @@\n-#![feature(fnbox)]\n-#![allow(deprecated, deprecated_in_future)]\n-\n-use std::boxed::FnBox;\n-\n-fn call_it<T>(f: Box<dyn FnBox() -> T>) -> T {\n-    f()\n-}\n-\n-fn main() {\n-    let s = \"hello\".to_owned();\n-    assert_eq!(&call_it(Box::new(|| s)) as &str, \"hello\");\n-}"}]}