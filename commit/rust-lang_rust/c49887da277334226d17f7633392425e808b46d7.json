{"sha": "c49887da277334226d17f7633392425e808b46d7", "node_id": "C_kwDOAAsO6NoAKGM0OTg4N2RhMjc3MzM0MjI2ZDE3Zjc2MzMzOTI0MjVlODA4YjQ2ZDc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:10:58Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-01T09:10:58Z"}, "message": "Add comment about futex_wait timeout.", "tree": {"sha": "94b25df6d009b5b76e0469284c1b41374afa0ceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94b25df6d009b5b76e0469284c1b41374afa0ceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c49887da277334226d17f7633392425e808b46d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c49887da277334226d17f7633392425e808b46d7", "html_url": "https://github.com/rust-lang/rust/commit/c49887da277334226d17f7633392425e808b46d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c49887da277334226d17f7633392425e808b46d7/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9ae3fe68fc4477350476acb649b817a80bfd973", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9ae3fe68fc4477350476acb649b817a80bfd973", "html_url": "https://github.com/rust-lang/rust/commit/c9ae3fe68fc4477350476acb649b817a80bfd973"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "c61d948fb601dbbff54a9ec3799ca1a1662ea264", "filename": "library/std/src/sys/unix/futex.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c49887da277334226d17f7633392425e808b46d7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c49887da277334226d17f7633392425e808b46d7/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffutex.rs?ref=c49887da277334226d17f7633392425e808b46d7", "patch": "@@ -14,6 +14,8 @@ pub fn futex_wait(futex: &AtomicI32, expected: i32, timeout: Option<Duration>) -\n     use crate::sync::atomic::Ordering::Relaxed;\n \n     // Calculate the timeout as an absolute timespec.\n+    //\n+    // Overflows are rounded up to an infinite timeout (None).\n     let timespec =\n         timeout.and_then(|d| Some(Timespec::now(libc::CLOCK_MONOTONIC).checked_add_duration(&d)?));\n "}]}