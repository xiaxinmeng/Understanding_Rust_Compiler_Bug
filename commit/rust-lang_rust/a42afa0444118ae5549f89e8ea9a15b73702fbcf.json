{"sha": "a42afa0444118ae5549f89e8ea9a15b73702fbcf", "node_id": "C_kwDOAAsO6NoAKGE0MmFmYTA0NDQxMThhZTU1NDlmODllOGVhOWExNWI3MzcwMmZiY2Y", "commit": {"author": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2022-09-05T15:52:08Z"}, "committer": {"name": "Rejyr", "email": "jerrylwang123@gmail.com", "date": "2023-01-09T22:07:25Z"}, "message": "migrate: `traits.rs`", "tree": {"sha": "2df4b077eef030c20cdc0f6f9cb12927dab2cb5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2df4b077eef030c20cdc0f6f9cb12927dab2cb5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a42afa0444118ae5549f89e8ea9a15b73702fbcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a42afa0444118ae5549f89e8ea9a15b73702fbcf", "html_url": "https://github.com/rust-lang/rust/commit/a42afa0444118ae5549f89e8ea9a15b73702fbcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a42afa0444118ae5549f89e8ea9a15b73702fbcf/comments", "author": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rejyr", "id": 88239847, "node_id": "MDQ6VXNlcjg4MjM5ODQ3", "avatar_url": "https://avatars.githubusercontent.com/u/88239847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rejyr", "html_url": "https://github.com/Rejyr", "followers_url": "https://api.github.com/users/Rejyr/followers", "following_url": "https://api.github.com/users/Rejyr/following{/other_user}", "gists_url": "https://api.github.com/users/Rejyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rejyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rejyr/subscriptions", "organizations_url": "https://api.github.com/users/Rejyr/orgs", "repos_url": "https://api.github.com/users/Rejyr/repos", "events_url": "https://api.github.com/users/Rejyr/events{/privacy}", "received_events_url": "https://api.github.com/users/Rejyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5ae9d019c263a37b1d47fab91b057ec9b8d7c45", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5ae9d019c263a37b1d47fab91b057ec9b8d7c45", "html_url": "https://github.com/rust-lang/rust/commit/e5ae9d019c263a37b1d47fab91b057ec9b8d7c45"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "691cc8667e33a16fb0386e079b3a4b369cca797a", "filename": "compiler/rustc_lint/src/lints.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a42afa0444118ae5549f89e8ea9a15b73702fbcf/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a42afa0444118ae5549f89e8ea9a15b73702fbcf/compiler%2Frustc_lint%2Fsrc%2Flints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flints.rs?ref=a42afa0444118ae5549f89e8ea9a15b73702fbcf", "patch": "@@ -1,11 +1,39 @@\n use rustc_errors::{fluent, AddSubdiagnostic, Applicability, DecorateLint, EmissionGuarantee};\n use rustc_hir::def_id::DefId;\n use rustc_macros::{LintDiagnostic, SessionSubdiagnostic};\n-use rustc_middle::ty::Ty;\n+use rustc_middle::ty::{Predicate, Ty, TyCtxt};\n use rustc_span::{Span, Symbol};\n \n use crate::LateContext;\n \n+pub struct DropTraitConstraintsDiag<'a> {\n+    pub predicate: Predicate<'a>,\n+    pub tcx: TyCtxt<'a>,\n+    pub def_id: DefId,\n+}\n+\n+impl<'a, G: EmissionGuarantee> DecorateLint<'_, G> for DropTraitConstraintsDiag<'a> {\n+    fn decorate_lint(self, diag: rustc_errors::LintDiagnosticBuilder<'_, G>) {\n+        let mut diag = diag.build(fluent::lint_drop_trait_constraints);\n+        diag.set_arg(\"predicate\", self.predicate);\n+        diag.set_arg(\"needs_drop\", self.tcx.def_path_str(self.def_id));\n+        diag.emit();\n+    }\n+}\n+\n+pub struct DropGlue<'a> {\n+    pub tcx: TyCtxt<'a>,\n+    pub def_id: DefId,\n+}\n+\n+impl<'a, G: EmissionGuarantee> DecorateLint<'_, G> for DropGlue<'a> {\n+    fn decorate_lint(self, diag: rustc_errors::LintDiagnosticBuilder<'_, G>) {\n+        let mut diag = diag.build(fluent::lint_drop_glue);\n+        diag.set_arg(\"needs_drop\", self.tcx.def_path_str(self.def_id));\n+        diag.emit();\n+    }\n+}\n+\n #[derive(LintDiagnostic)]\n #[diag(lint_range_endpoint_out_of_range)]\n pub struct RangeEndpointOutOfRange<'a> {"}, {"sha": "2e778cf0d0fe07bf958f5fd1ee144a747a633367", "filename": "compiler/rustc_lint/src/traits.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a42afa0444118ae5549f89e8ea9a15b73702fbcf/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a42afa0444118ae5549f89e8ea9a15b73702fbcf/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftraits.rs?ref=a42afa0444118ae5549f89e8ea9a15b73702fbcf", "patch": "@@ -1,7 +1,9 @@\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n+use crate::lints::{DropGlue, DropTraitConstraintsDiag};\n use crate::LateContext;\n use crate::LateLintPass;\n use crate::LintContext;\n-use rustc_errors::fluent;\n use rustc_hir as hir;\n use rustc_span::symbol::sym;\n \n@@ -101,17 +103,13 @@ impl<'tcx> LateLintPass<'tcx> for DropTraitConstraints {\n                 if trait_predicate.trait_ref.self_ty().is_impl_trait() {\n                     continue;\n                 }\n-                let Some(needs_drop) = cx.tcx.get_diagnostic_item(sym::needs_drop) else {\n-                    continue;\n+                let Some(def_id) = cx.tcx.get_diagnostic_item(sym::needs_drop) else {\n+                    return\n                 };\n-                cx.struct_span_lint(\n+                cx.emit_spanned_lint(\n                     DROP_BOUNDS,\n                     span,\n-                    fluent::lint_drop_trait_constraints,\n-                    |lint| {\n-                        lint.set_arg(\"predicate\", predicate)\n-                            .set_arg(\"needs_drop\", cx.tcx.def_path_str(needs_drop))\n-                    },\n+                    DropTraitConstraintsDiag { predicate, tcx: cx.tcx, def_id },\n                 );\n             }\n         }\n@@ -123,12 +121,11 @@ impl<'tcx> LateLintPass<'tcx> for DropTraitConstraints {\n         };\n         for bound in &bounds[..] {\n             let def_id = bound.trait_ref.trait_def_id();\n-            if cx.tcx.lang_items().drop_trait() == def_id\n-                && let Some(needs_drop) = cx.tcx.get_diagnostic_item(sym::needs_drop)\n-            {\n-                cx.struct_span_lint(DYN_DROP, bound.span, fluent::lint_drop_glue, |lint| {\n-                    lint.set_arg(\"needs_drop\", cx.tcx.def_path_str(needs_drop))\n-                });\n+            if cx.tcx.lang_items().drop_trait() == def_id {\n+                let Some(def_id) = cx.tcx.get_diagnostic_item(sym::needs_drop) else {\n+                    return\n+                };\n+                cx.emit_spanned_lint(DYN_DROP, bound.span, DropGlue { tcx: cx.tcx, def_id });\n             }\n         }\n     }"}]}