{"sha": "c5232615b6669431b70720d25f68b5c1bc9662e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MjMyNjE1YjY2Njk0MzFiNzA3MjBkMjVmNjhiNWMxYmM5NjYyZTI=", "commit": {"author": {"name": "Alfie John", "email": "alfiej@fastmail.fm", "date": "2014-11-15T23:17:36Z"}, "committer": {"name": "Alfie John", "email": "alfiej@fastmail.fm", "date": "2014-11-15T23:17:36Z"}, "message": "doc: small grammar fix", "tree": {"sha": "d57cd74516283cd8540997797473f96e026e94bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d57cd74516283cd8540997797473f96e026e94bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5232615b6669431b70720d25f68b5c1bc9662e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5232615b6669431b70720d25f68b5c1bc9662e2", "html_url": "https://github.com/rust-lang/rust/commit/c5232615b6669431b70720d25f68b5c1bc9662e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5232615b6669431b70720d25f68b5c1bc9662e2/comments", "author": null, "committer": null, "parents": [{"sha": "7e43f419cb98c9035d30e5cf0e0be7944dbc0371", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e43f419cb98c9035d30e5cf0e0be7944dbc0371", "html_url": "https://github.com/rust-lang/rust/commit/7e43f419cb98c9035d30e5cf0e0be7944dbc0371"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "e57953db3a256fd2463ad6a04d3015dccd830c96", "filename": "src/doc/complement-design-faq.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c5232615b6669431b70720d25f68b5c1bc9662e2/src%2Fdoc%2Fcomplement-design-faq.md", "raw_url": "https://github.com/rust-lang/rust/raw/c5232615b6669431b70720d25f68b5c1bc9662e2/src%2Fdoc%2Fcomplement-design-faq.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fcomplement-design-faq.md?ref=c5232615b6669431b70720d25f68b5c1bc9662e2", "patch": "@@ -95,7 +95,7 @@ code should need to run is a stack.\n `match` being exhaustive has some useful properties. First, if every\n possibility is covered by the `match`, adding further variants to the `enum`\n in the future will prompt a compilation failure, rather than runtime panic.\n-Second, it makes cost explicit. In general, only safe way to have a\n+Second, it makes cost explicit. In general, the only safe way to have a\n non-exhaustive match would be to panic the task if nothing is matched, though\n it could fall through if the type of the `match` expression is `()`. This sort\n of hidden cost and special casing is against the language's philosophy. It's"}]}