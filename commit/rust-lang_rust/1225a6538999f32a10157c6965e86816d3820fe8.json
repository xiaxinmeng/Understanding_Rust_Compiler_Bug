{"sha": "1225a6538999f32a10157c6965e86816d3820fe8", "node_id": "C_kwDOAAsO6NoAKDEyMjVhNjUzODk5OWYzMmExMDE1N2M2OTY1ZTg2ODE2ZDM4MjBmZTg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-11-12T20:03:20Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-14T18:26:09Z"}, "message": "drive-by: Fix path spans", "tree": {"sha": "5348de4bc71dd744ad1995f094438dca448c3b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5348de4bc71dd744ad1995f094438dca448c3b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1225a6538999f32a10157c6965e86816d3820fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1225a6538999f32a10157c6965e86816d3820fe8", "html_url": "https://github.com/rust-lang/rust/commit/1225a6538999f32a10157c6965e86816d3820fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1225a6538999f32a10157c6965e86816d3820fe8/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae60015e764fa0ba8e56c58373166a1c5d267e8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae60015e764fa0ba8e56c58373166a1c5d267e8e", "html_url": "https://github.com/rust-lang/rust/commit/ae60015e764fa0ba8e56c58373166a1c5d267e8e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8ee31e4b498af42b1f5bf32f55759cb8928e2428", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1225a6538999f32a10157c6965e86816d3820fe8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1225a6538999f32a10157c6965e86816d3820fe8/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=1225a6538999f32a10157c6965e86816d3820fe8", "patch": "@@ -2302,7 +2302,7 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                                 )\n                             };\n                             let mut suggestions = vec![(\n-                                trait_path_segment.ident.span.shrink_to_lo(),\n+                                path.span.shrink_to_lo(),\n                                 format!(\"<{} as \", self.tcx.type_of(impl_def_id))\n                             )];\n                             if let Some(generic_arg) = trait_path_segment.args {"}, {"sha": "fc025a3fca2bfc47b4df9629ee8145e907878550", "filename": "src/test/ui/error-codes/E0790.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1225a6538999f32a10157c6965e86816d3820fe8/src%2Ftest%2Fui%2Ferror-codes%2FE0790.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1225a6538999f32a10157c6965e86816d3820fe8/src%2Ftest%2Fui%2Ferror-codes%2FE0790.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0790.stderr?ref=1225a6538999f32a10157c6965e86816d3820fe8", "patch": "@@ -37,8 +37,8 @@ LL |     inner::MyTrait::my_fn();\n    |\n help: use the fully-qualified path to the only available implementation\n    |\n-LL |     inner::<MyStruct as MyTrait>::my_fn();\n-   |            ++++++++++++        +\n+LL |     <MyStruct as inner::MyTrait>::my_fn();\n+   |     ++++++++++++               +\n \n error[E0790]: cannot refer to the associated constant on trait without specifying the corresponding `impl` type\n   --> $DIR/E0790.rs:30:13\n@@ -51,8 +51,8 @@ LL |     let _ = inner::MyTrait::MY_ASSOC_CONST;\n    |\n help: use the fully-qualified path to the only available implementation\n    |\n-LL |     let _ = inner::<MyStruct as MyTrait>::MY_ASSOC_CONST;\n-   |                    ++++++++++++        +\n+LL |     let _ = <MyStruct as inner::MyTrait>::MY_ASSOC_CONST;\n+   |             ++++++++++++               +\n \n error[E0790]: cannot call associated function on trait without specifying the corresponding `impl` type\n   --> $DIR/E0790.rs:50:5"}, {"sha": "575ace2374ee64ec15c33701d40fffab44285bce", "filename": "src/test/ui/traits/static-method-generic-inference.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1225a6538999f32a10157c6965e86816d3820fe8/src%2Ftest%2Fui%2Ftraits%2Fstatic-method-generic-inference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1225a6538999f32a10157c6965e86816d3820fe8/src%2Ftest%2Fui%2Ftraits%2Fstatic-method-generic-inference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fstatic-method-generic-inference.stderr?ref=1225a6538999f32a10157c6965e86816d3820fe8", "patch": "@@ -9,8 +9,8 @@ LL |     let _f: base::Foo = base::HasNew::new();\n    |\n help: use the fully-qualified path to the only available implementation\n    |\n-LL |     let _f: base::Foo = base::<Foo as HasNew>::new();\n-   |                               +++++++       +\n+LL |     let _f: base::Foo = <Foo as base::HasNew>::new();\n+   |                         +++++++             +\n \n error: aborting due to previous error\n "}]}