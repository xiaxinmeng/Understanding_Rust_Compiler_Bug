{"sha": "3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkMzY3MGJjNjVhMDdmMWQ0ZGNhY2E4ZDA5NjVkM2YwYmEwNDAxMDE=", "commit": {"author": {"name": "Kelvin Ly", "email": "kelvin.ly1618@gmail.com", "date": "2015-01-05T04:35:29Z"}, "committer": {"name": "Kelvin Ly", "email": "kelvin.ly1618@gmail.com", "date": "2015-01-05T04:35:29Z"}, "message": "Added fix to LLDB formatter", "tree": {"sha": "538d7201a62f827d42ede5c1b0c0a259a902a935", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/538d7201a62f827d42ede5c1b0c0a259a902a935"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "html_url": "https://github.com/rust-lang/rust/commit/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101/comments", "author": {"login": "cactorium", "id": 1513183, "node_id": "MDQ6VXNlcjE1MTMxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1513183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cactorium", "html_url": "https://github.com/cactorium", "followers_url": "https://api.github.com/users/cactorium/followers", "following_url": "https://api.github.com/users/cactorium/following{/other_user}", "gists_url": "https://api.github.com/users/cactorium/gists{/gist_id}", "starred_url": "https://api.github.com/users/cactorium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cactorium/subscriptions", "organizations_url": "https://api.github.com/users/cactorium/orgs", "repos_url": "https://api.github.com/users/cactorium/repos", "events_url": "https://api.github.com/users/cactorium/events{/privacy}", "received_events_url": "https://api.github.com/users/cactorium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cactorium", "id": 1513183, "node_id": "MDQ6VXNlcjE1MTMxODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1513183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cactorium", "html_url": "https://github.com/cactorium", "followers_url": "https://api.github.com/users/cactorium/followers", "following_url": "https://api.github.com/users/cactorium/following{/other_user}", "gists_url": "https://api.github.com/users/cactorium/gists{/gist_id}", "starred_url": "https://api.github.com/users/cactorium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cactorium/subscriptions", "organizations_url": "https://api.github.com/users/cactorium/orgs", "repos_url": "https://api.github.com/users/cactorium/repos", "events_url": "https://api.github.com/users/cactorium/events{/privacy}", "received_events_url": "https://api.github.com/users/cactorium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d009a761827e45045e9570535694c7ed61a85c36", "url": "https://api.github.com/repos/rust-lang/rust/commits/d009a761827e45045e9570535694c7ed61a85c36", "html_url": "https://github.com/rust-lang/rust/commit/d009a761827e45045e9570535694c7ed61a85c36"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "6e9aa6e80ce8cf734acf4ad8d7479a9324d86028", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "patch": "@@ -62,10 +62,10 @@ def rust_pretty_printer_lookup_function(val):\n         assert first_variant_name.startswith(\"RUST$ENCODED$ENUM$\")\n         # This is a space-optimized enum\n         last_separator_index = first_variant_name.rfind(\"$\")\n-        start_index = len(\"RUST$ENCODED$ENUM\")\n-        disr_field_indices = first_variant_name[start_index + 1 :\n-                                              last_separator_index]\n-        disr_field_indices = [int(index) for index in disr_field_indices.split(\"$\")]\n+        start_index = len(\"RUST$ENCODED$ENUM$\")\n+        disr_field_indices = first_variant_name[start_index :\n+                                              last_separator_index].split(\"$\")\n+        disr_field_indices = [int(index) for index in disr_field_indices]\n \n         sole_variant_val = val[enum_members[0]]\n         discriminant = sole_variant_val"}, {"sha": "b9bb3ec4fe9191b08ba01f590dac2c4d569b33fb", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/3d3670bc65a07f1d4dcaca8d0965d3f0ba040101/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=3d3670bc65a07f1d4dcaca8d0965d3f0ba040101", "patch": "@@ -79,11 +79,11 @@ def print_struct_val_starting_from(field_start_index, val, internal_dict):\n   has_field_names = type_has_field_names(t)\n \n   if has_field_names:\n-      template = \"%(type_name)s {\\n%(body)s\\n}\"\n-      separator = \", \\n\"\n+    template = \"%(type_name)s {\\n%(body)s\\n}\"\n+    separator = \", \\n\"\n   else:\n-      template = \"%(type_name)s(%(body)s)\"\n-      separator = \", \"\n+    template = \"%(type_name)s(%(body)s)\"\n+    separator = \", \"\n \n   if type_name.startswith(\"(\"):\n     # this is a tuple, so don't print the type name\n@@ -125,20 +125,20 @@ def print_enum_val(val, internal_dict):\n       if last_separator_index == -1:\n         return \"<invalid enum encoding: %s>\" % first_variant_name\n \n-      second_last_separator_index = first_variant_name.rfind(\"$\", 0, last_separator_index)\n-      if second_last_separator_index == -1:\n-        return \"<invalid enum encoding: %s>\" % first_variant_name\n+      start_index = len(\"RUST$ENCODED$ENUM$\")\n \n-      # Extract index of the discriminator field\n+      # Extract indices of the discriminator field\n       try:\n-        disr_field_index = first_variant_name[second_last_separator_index + 1 :\n-                                              last_separator_index]\n-        disr_field_index = int(disr_field_index)\n+        disr_field_indices = first_variant_name[start_index :\n+                                              last_separator_index].split(\"$\")\n+        disr_field_indices = [int(index) for index in dis_field_indices]\n       except:\n         return \"<invalid enum encoding: %s>\" % first_variant_name\n \n       # Read the discriminant\n-      disr_val = val.GetChildAtIndex(0).GetChildAtIndex(disr_field_index)\n+      disr_val = val.GetChildAtIndex(0)\n+      for index in disr_field_indices:\n+        disr_val = disr_val.GetChildAtIndex(disr_field_index)\n \n       # If the discriminant field is a fat pointer we have to consider the\n       # first word as the true discriminant"}]}