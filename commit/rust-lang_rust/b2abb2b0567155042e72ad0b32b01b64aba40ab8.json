{"sha": "b2abb2b0567155042e72ad0b32b01b64aba40ab8", "node_id": "C_kwDOAAsO6NoAKGIyYWJiMmIwNTY3MTU1MDQyZTcyYWQwYjMyYjAxYjY0YWJhNDBhYjg", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-05-27T11:38:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-27T11:38:31Z"}, "message": "Rollup merge of #111966 - saethlin:inline-slice-tryfrom, r=thomcc\n\nAdd #[inline] to array TryFrom impls\n\nI was looking into https://github.com/rust-lang/rust/issues/111959 and I realized we don't have these. They seem like an uncontroversial addition.\n\nIMO this PR does not fix that issue. I think the bad codegen is being caused by some underlying deeper problem but this change might cause the MIR inliner to paper over it in this specific case.\n\nr? `@thomcc`", "tree": {"sha": "aae64ba8a7d35ce74d4b6e914d019ec64897ed28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae64ba8a7d35ce74d4b6e914d019ec64897ed28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2abb2b0567155042e72ad0b32b01b64aba40ab8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkceu3CRBK7hj4Ov3rIwAAAkkIAGysReo7JivLwbUaGQhvWoDm\n4n3Xyu8ai5IQ4NOTxBTRRmuzYZg2uuIIfeDtPHiJa3pDNZnaHxPXP/nX14mUFaKq\nhGCRc3dVmYVEJzsxpftGaY3UyeDna/pgf6FuwNqf7RA1P4UlNDsSN25sSc2WmVgZ\n+BWR/003EJ+N3+Zh6uItctayGt69CDZUduIARLaCgGoDrAUByQPLkSoJEdXwlxSY\nZOAxQMVazztExSc2mFujSRigIh61PmZJKSoiyl57GsECv9DgByDFKXEgJNmVCoIh\nTuBmAjmSQXDJMdc1Dl9vsRpQ90f726YbFDbxeKJ5FpnvE3R0+4TIgWUsZpGQe2o=\n=/pPV\n-----END PGP SIGNATURE-----\n", "payload": "tree aae64ba8a7d35ce74d4b6e914d019ec64897ed28\nparent ddb5424569b1d598adf9010cece8d49968c357e6\nparent e1b8fad66430abd03e611bb18425e085945c7c40\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1685187511 +0200\ncommitter GitHub <noreply@github.com> 1685187511 +0200\n\nRollup merge of #111966 - saethlin:inline-slice-tryfrom, r=thomcc\n\nAdd #[inline] to array TryFrom impls\n\nI was looking into https://github.com/rust-lang/rust/issues/111959 and I realized we don't have these. They seem like an uncontroversial addition.\n\nIMO this PR does not fix that issue. I think the bad codegen is being caused by some underlying deeper problem but this change might cause the MIR inliner to paper over it in this specific case.\n\nr? `@thomcc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2abb2b0567155042e72ad0b32b01b64aba40ab8", "html_url": "https://github.com/rust-lang/rust/commit/b2abb2b0567155042e72ad0b32b01b64aba40ab8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2abb2b0567155042e72ad0b32b01b64aba40ab8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddb5424569b1d598adf9010cece8d49968c357e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddb5424569b1d598adf9010cece8d49968c357e6", "html_url": "https://github.com/rust-lang/rust/commit/ddb5424569b1d598adf9010cece8d49968c357e6"}, {"sha": "e1b8fad66430abd03e611bb18425e085945c7c40", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b8fad66430abd03e611bb18425e085945c7c40", "html_url": "https://github.com/rust-lang/rust/commit/e1b8fad66430abd03e611bb18425e085945c7c40"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "e3885d485b77aba4bc08a558360df017dea93dda", "filename": "library/core/src/array/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2abb2b0567155042e72ad0b32b01b64aba40ab8/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2abb2b0567155042e72ad0b32b01b64aba40ab8/library%2Fcore%2Fsrc%2Farray%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fmod.rs?ref=b2abb2b0567155042e72ad0b32b01b64aba40ab8", "patch": "@@ -204,6 +204,7 @@ where\n {\n     type Error = TryFromSliceError;\n \n+    #[inline]\n     fn try_from(slice: &[T]) -> Result<[T; N], TryFromSliceError> {\n         <&Self>::try_from(slice).map(|r| *r)\n     }\n@@ -228,6 +229,7 @@ where\n {\n     type Error = TryFromSliceError;\n \n+    #[inline]\n     fn try_from(slice: &mut [T]) -> Result<[T; N], TryFromSliceError> {\n         <Self>::try_from(&*slice)\n     }\n@@ -249,6 +251,7 @@ where\n impl<'a, T, const N: usize> TryFrom<&'a [T]> for &'a [T; N] {\n     type Error = TryFromSliceError;\n \n+    #[inline]\n     fn try_from(slice: &'a [T]) -> Result<&'a [T; N], TryFromSliceError> {\n         if slice.len() == N {\n             let ptr = slice.as_ptr() as *const [T; N];\n@@ -276,6 +279,7 @@ impl<'a, T, const N: usize> TryFrom<&'a [T]> for &'a [T; N] {\n impl<'a, T, const N: usize> TryFrom<&'a mut [T]> for &'a mut [T; N] {\n     type Error = TryFromSliceError;\n \n+    #[inline]\n     fn try_from(slice: &'a mut [T]) -> Result<&'a mut [T; N], TryFromSliceError> {\n         if slice.len() == N {\n             let ptr = slice.as_mut_ptr() as *mut [T; N];"}]}