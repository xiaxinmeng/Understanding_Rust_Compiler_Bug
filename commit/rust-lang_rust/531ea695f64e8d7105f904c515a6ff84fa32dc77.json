{"sha": "531ea695f64e8d7105f904c515a6ff84fa32dc77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMWVhNjk1ZjY0ZThkNzEwNWY5MDRjNTE1YTZmZjg0ZmEzMmRjNzc=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T21:33:18Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-25T22:15:46Z"}, "message": "Remove shared_arc (unused) and fix trivial-message", "tree": {"sha": "9df7f81af1a43820cffeb877ede658fa43a33b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9df7f81af1a43820cffeb877ede658fa43a33b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/531ea695f64e8d7105f904c515a6ff84fa32dc77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/531ea695f64e8d7105f904c515a6ff84fa32dc77", "html_url": "https://github.com/rust-lang/rust/commit/531ea695f64e8d7105f904c515a6ff84fa32dc77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/531ea695f64e8d7105f904c515a6ff84fa32dc77/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d15b6ef424016765c659305a4265813d2b498d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d15b6ef424016765c659305a4265813d2b498d0", "html_url": "https://github.com/rust-lang/rust/commit/2d15b6ef424016765c659305a4265813d2b498d0"}], "stats": {"total": 67, "additions": 2, "deletions": 65}, "files": [{"sha": "9c46df9731b93fdeae925b8e0ab968d4f40c13e5", "filename": "src/libcore/arc.rs", "status": "modified", "additions": 1, "deletions": 64, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/531ea695f64e8d7105f904c515a6ff84fa32dc77/src%2Flibcore%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/531ea695f64e8d7105f904c515a6ff84fa32dc77/src%2Flibcore%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farc.rs?ref=531ea695f64e8d7105f904c515a6ff84fa32dc77", "patch": "@@ -3,10 +3,9 @@\n  * share immutable data between tasks.\n  */\n \n-import comm::{port, chan, methods};\n import sys::methods;\n \n-export arc, get, clone, shared_arc, get_arc;\n+export arc, get, clone;\n \n export exclusive, methods;\n \n@@ -122,49 +121,6 @@ impl methods<T: send> for exclusive<T> {\n     }\n }\n \n-// Convenience code for sharing arcs between tasks\n-\n-type get_chan<T: const send> = chan<chan<arc<T>>>;\n-\n-// (terminate, get)\n-type shared_arc<T: const send> = (shared_arc_res, get_chan<T>);\n-\n-class shared_arc_res {\n-   let c: comm::chan<()>;\n-   new(c: comm::chan<()>) { self.c = c; }\n-   drop { self.c.send(()); }\n-}\n-\n-fn shared_arc<T: send const>(-data: T) -> shared_arc<T> {\n-    let a = arc::arc(data);\n-    let p = port();\n-    let c = chan(p);\n-    do task::spawn() |move a| {\n-        let mut live = true;\n-        let terminate = port();\n-        let get = port();\n-\n-        c.send((chan(terminate), chan(get)));\n-\n-        while live {\n-            alt comm::select2(terminate, get) {\n-              either::left(()) { live = false; }\n-              either::right(cc) {\n-                comm::send(cc, arc::clone(&a));\n-              }\n-            }\n-        }\n-    };\n-    let (terminate, get) = p.recv();\n-    (shared_arc_res(terminate), get)\n-}\n-\n-fn get_arc<T: send const>(c: get_chan<T>) -> arc::arc<T> {\n-    let p = port();\n-    c.send(chan(p));\n-    p.recv()\n-}\n-\n #[cfg(test)]\n mod tests {\n     import comm::*;\n@@ -196,25 +152,6 @@ mod tests {\n         log(info, arc_v);\n     }\n \n-    #[test]\n-    fn auto_share_arc() {\n-        let v = ~[1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n-        let (_res, arc_c) = shared_arc(v);\n-\n-        let p = port();\n-        let c = chan(p);\n-\n-        do task::spawn() {\n-            let arc_v = get_arc(arc_c);\n-            let v = *get(&arc_v);\n-            assert v[2] == 3;\n-\n-            c.send(());\n-        };\n-\n-        assert p.recv() == ();\n-    }\n-\n     #[test]\n     #[ignore] // this can probably infinite loop too.\n     fn exclusive_arc() {"}, {"sha": "ab3efd6b22eaeed0002036c30fa20083d0e08aa4", "filename": "src/test/run-pass/trivial-message.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/531ea695f64e8d7105f904c515a6ff84fa32dc77/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/531ea695f64e8d7105f904c515a6ff84fa32dc77/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrivial-message.rs?ref=531ea695f64e8d7105f904c515a6ff84fa32dc77", "patch": "@@ -1,4 +1,4 @@\n-import pipes::{port, chan}\n+import pipes::{port, chan};\n \n /*\n   This is about the simplest program that can successfully send a"}]}