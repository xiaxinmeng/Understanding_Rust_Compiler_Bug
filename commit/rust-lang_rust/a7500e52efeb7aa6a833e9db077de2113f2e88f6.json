{"sha": "a7500e52efeb7aa6a833e9db077de2113f2e88f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NTAwZTUyZWZlYjdhYTZhODMzZTlkYjA3N2RlMjExM2YyZTg4ZjY=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-29T23:22:31Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-06T19:06:43Z"}, "message": "Add test for suggestion to borrow unsized function parameters\n\nThis is a regression test for #82820.\n\nThis test case is included in more general tests, but I think the error\nregressed because there were a bunch of other diagnostic changes in the\ntest that obscured this regression.\n\nHopefully, having a test specific to the suggestion, and running rustfix\nfor the test, will prevent this error from regressing in the future.", "tree": {"sha": "3d1976d1952286fd782624d2a815a9b234279f86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d1976d1952286fd782624d2a815a9b234279f86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7500e52efeb7aa6a833e9db077de2113f2e88f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7500e52efeb7aa6a833e9db077de2113f2e88f6", "html_url": "https://github.com/rust-lang/rust/commit/a7500e52efeb7aa6a833e9db077de2113f2e88f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7500e52efeb7aa6a833e9db077de2113f2e88f6/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18587b14d1d820d31151d5c0a633621a67149e78", "url": "https://api.github.com/repos/rust-lang/rust/commits/18587b14d1d820d31151d5c0a633621a67149e78", "html_url": "https://github.com/rust-lang/rust/commit/18587b14d1d820d31151d5c0a633621a67149e78"}], "stats": {"total": 88, "additions": 88, "deletions": 0}, "files": [{"sha": "18e93cb96cd99c76ada0fb04f7267d7fef403fe2", "filename": "src/test/ui/suggestions/unsized-function-parameter.fixed", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.fixed?ref=a7500e52efeb7aa6a833e9db077de2113f2e88f6", "patch": "@@ -0,0 +1,23 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+\n+fn foo1(bar: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo2(_bar: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo3(_: &str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn main() {}"}, {"sha": "344ee71c1bcc94109b981e70ca0f1381c89d9dee", "filename": "src/test/ui/suggestions/unsized-function-parameter.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.rs?ref=a7500e52efeb7aa6a833e9db077de2113f2e88f6", "patch": "@@ -0,0 +1,23 @@\n+// run-rustfix\n+\n+#![allow(dead_code, unused_variables)]\n+\n+fn foo1(bar: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo2(_bar: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn foo3(_: str) {}\n+//~^ ERROR the size for values of type `str` cannot be known at compilation time\n+//~| HELP the trait `Sized` is not implemented for `str`\n+//~| HELP unsized fn params are gated as an unstable feature\n+//~| HELP function arguments must have a statically known size, borrowed types always have a known size\n+\n+fn main() {}"}, {"sha": "8cbd8bf3f34587a50150fef108e3a6079e16cac2", "filename": "src/test/ui/suggestions/unsized-function-parameter.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7500e52efeb7aa6a833e9db077de2113f2e88f6/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funsized-function-parameter.stderr?ref=a7500e52efeb7aa6a833e9db077de2113f2e88f6", "patch": "@@ -0,0 +1,42 @@\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:5:9\n+   |\n+LL | fn foo1(bar: str) {}\n+   |         ^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo1(bar: &str) {}\n+   |              ^\n+\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:11:9\n+   |\n+LL | fn foo2(_bar: str) {}\n+   |         ^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo2(_bar: &str) {}\n+   |               ^\n+\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/unsized-function-parameter.rs:17:9\n+   |\n+LL | fn foo3(_: str) {}\n+   |         ^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `Sized` is not implemented for `str`\n+   = help: unsized fn params are gated as an unstable feature\n+help: function arguments must have a statically known size, borrowed types always have a known size\n+   |\n+LL | fn foo3(_: &str) {}\n+   |            ^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}