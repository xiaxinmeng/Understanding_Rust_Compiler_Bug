{"sha": "54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZWE4ZTFiODJhNjcyMDJlNjRmOGFhYzFlZDU3YmM3Yjk4N2U1MDg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-05T11:03:36Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-05T11:03:36Z"}, "message": "Rollup merge of #81922 - magurotuna:issue81522, r=matthewjasper\n\nLet `#[allow(unstable_name_collisions)]` work for things other than function\n\nFixes #81522\n\nIn addition to the report in #81522, currently `#[allow(unstable_name_collisions)]` doesn't suppress the corresponding diagnostics even if this attribute is appended to an expression statement or a let statement. It seems like this is because the wrong `HirId` is passed to `struct_span_lint_hir`.\nIt's fixed in this PR, and a regression test for it is also added.", "tree": {"sha": "3a58fc584780565d66b1f88196aed568f651c358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a58fc584780565d66b1f88196aed568f651c358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgau6ICRBK7hj4Ov3rIwAAdHIIAKvlBIWq0gt6hNuprE95gZco\naZwIsGtEX31+rZVATyb5feCwHL1yxaCFxdbYGrWJY4H6mR3gg9d+DhtCf4aD/Gfl\nzKPnYCNoQh+qirCDvy8+Si1Y8QmJQVO8P3Q6UHp2F+ljTwq1bRRMl5xHVLc4UhXd\nvkfU092Y2lPwKHpefjzY+uQqnZTYjxvBYc3DCWt6NUYuoAwdp7P17nWQESn1Mmxf\ndy5L8ZLZj2pzDjLJoSaZAD0syx7MnKfMN6OpqCoqKFYy8KqV3pj058IInwCjJhfZ\nTb05x5EiHJ6Z0zOkwxjG2WelgyBZZh+PcfFVLmtAac6FZhS0ehY7htph00zI7Rg=\n=Vxii\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a58fc584780565d66b1f88196aed568f651c358\nparent 58e71896506edb701f276158bd2f47e8788a1133\nparent 06b3636f4ed23c1ad0ed18ecc1408147ec862c1a\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617620616 +0200\ncommitter GitHub <noreply@github.com> 1617620616 +0200\n\nRollup merge of #81922 - magurotuna:issue81522, r=matthewjasper\n\nLet `#[allow(unstable_name_collisions)]` work for things other than function\n\nFixes #81522\n\nIn addition to the report in #81522, currently `#[allow(unstable_name_collisions)]` doesn't suppress the corresponding diagnostics even if this attribute is appended to an expression statement or a let statement. It seems like this is because the wrong `HirId` is passed to `struct_span_lint_hir`.\nIt's fixed in this PR, and a regression test for it is also added.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "html_url": "https://github.com/rust-lang/rust/commit/54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54ea8e1b82a67202e64f8aac1ed57bc7b987e508/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58e71896506edb701f276158bd2f47e8788a1133", "url": "https://api.github.com/repos/rust-lang/rust/commits/58e71896506edb701f276158bd2f47e8788a1133", "html_url": "https://github.com/rust-lang/rust/commit/58e71896506edb701f276158bd2f47e8788a1133"}, {"sha": "06b3636f4ed23c1ad0ed18ecc1408147ec862c1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/06b3636f4ed23c1ad0ed18ecc1408147ec862c1a", "html_url": "https://github.com/rust-lang/rust/commit/06b3636f4ed23c1ad0ed18ecc1408147ec862c1a"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "d83b74f4ce9e068bf1f82a250510386d13205d52", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54ea8e1b82a67202e64f8aac1ed57bc7b987e508/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54ea8e1b82a67202e64f8aac1ed57bc7b987e508/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "patch": "@@ -83,6 +83,8 @@ struct ProbeContext<'a, 'tcx> {\n     unsatisfied_predicates: Vec<(ty::Predicate<'tcx>, Option<ty::Predicate<'tcx>>)>,\n \n     is_suggestion: IsSuggestion,\n+\n+    scope_expr_id: hir::HirId,\n }\n \n impl<'a, 'tcx> Deref for ProbeContext<'a, 'tcx> {\n@@ -448,6 +450,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 orig_values,\n                 steps.steps,\n                 is_suggestion,\n+                scope_expr_id,\n             );\n \n             probe_cx.assemble_inherent_candidates();\n@@ -547,6 +550,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n         orig_steps_var_values: OriginalQueryValues<'tcx>,\n         steps: Lrc<Vec<CandidateStep<'tcx>>>,\n         is_suggestion: IsSuggestion,\n+        scope_expr_id: hir::HirId,\n     ) -> ProbeContext<'a, 'tcx> {\n         ProbeContext {\n             fcx,\n@@ -564,6 +568,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n             private_candidate: None,\n             unsatisfied_predicates: Vec::new(),\n             is_suggestion,\n+            scope_expr_id,\n         }\n     }\n \n@@ -1312,7 +1317,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n     ) {\n         self.tcx.struct_span_lint_hir(\n             lint::builtin::UNSTABLE_NAME_COLLISIONS,\n-            self.fcx.body_id,\n+            self.scope_expr_id,\n             self.span,\n             |lint| {\n                 let def_kind = stable_pick.item.kind.as_def_kind();\n@@ -1594,6 +1599,7 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n                 self.orig_steps_var_values.clone(),\n                 steps,\n                 IsSuggestion(true),\n+                self.scope_expr_id,\n             );\n             pcx.allow_similar_names = true;\n             pcx.assemble_inherent_candidates();"}, {"sha": "902f8fdde58e9c2f80b624603ed1a4b6d081c9c7", "filename": "src/test/ui/inference/issue-81522.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/54ea8e1b82a67202e64f8aac1ed57bc7b987e508/src%2Ftest%2Fui%2Finference%2Fissue-81522.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54ea8e1b82a67202e64f8aac1ed57bc7b987e508/src%2Ftest%2Fui%2Finference%2Fissue-81522.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fissue-81522.rs?ref=54ea8e1b82a67202e64f8aac1ed57bc7b987e508", "patch": "@@ -0,0 +1,31 @@\n+// Regression test for #81522.\n+// Ensures that `#[allow(unstable_name_collisions)]` appended to things other than function\n+// suppresses the corresponding diagnostics emitted from inside them.\n+// But note that this attribute doesn't work for macro invocations if it is appended directly.\n+\n+// aux-build:inference_unstable_iterator.rs\n+// aux-build:inference_unstable_itertools.rs\n+// run-pass\n+\n+extern crate inference_unstable_iterator;\n+extern crate inference_unstable_itertools;\n+\n+#[allow(unused_imports)]\n+use inference_unstable_iterator::IpuIterator;\n+use inference_unstable_itertools::IpuItertools;\n+\n+fn main() {\n+    // expression statement\n+    #[allow(unstable_name_collisions)]\n+    'x'.ipu_flatten();\n+\n+    // let statement\n+    #[allow(unstable_name_collisions)]\n+    let _ = 'x'.ipu_flatten();\n+\n+    // block expression\n+    #[allow(unstable_name_collisions)]\n+    {\n+        'x'.ipu_flatten();\n+    }\n+}"}]}