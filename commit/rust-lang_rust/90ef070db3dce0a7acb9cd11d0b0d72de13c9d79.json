{"sha": "90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZWYwNzBkYjNkY2UwYTdhY2I5Y2QxMWQwYjBkNzJkZTEzYzlkNzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-21T10:47:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-21T10:47:47Z"}, "message": "Merge #2628\n\n2628: Add macro 2.0 support in parser r=matklad a=edwin0cheng\n\nThis PR added a new syntax kind : `MACRO_DEF` and a keyword `MACRO_KW`\r\n\r\nthere are two syntax for declarative macro 2.0 :\r\n1. Normal : `macro m { ($i:ident) => {} }` , which handle similar to legacy one. \r\n2. Call like: `macro m($i:ident) {}`, it produces a single token tree which have two child token trees : `($i:ident)` and `{}`\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "c6fcc8c77fe4948b356e397fb5fe1f8e8ac39037", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6fcc8c77fe4948b356e397fb5fe1f8e8ac39037"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/fhTCRBK7hj4Ov3rIwAAdHIIAKmztMPNl1RMBtU0iEB2l3kZ\napbMjGEd80EltwoJF/gzjRmCT9P/PtVSd7v0hTPurGaOhv+RfXPCHHXLMgjM6fG0\n8cG8octjQufE9HjZB3tcwkucVF6cFB8aUQy3DW2ByrEuHnjhjYAlrRiUzf0tMRzI\nRNqzLiNxWf5HHZTamFmFPNK8Q1fgaBzT2ETvrplhtbAUj2FY0x2G+/VHbJ9X91m3\nzrOyw0IXbeVVPOVWvIlMTE7kH/lgWBprq46d2opAMEbvG9MN8iUK5rQgT7BIuKwn\nNo1VAwJL38r8Nnbi0b4Q64gG3TS3PXSCRaj73CrN+439deS1bDy6+c2pTi3XqUg=\n=Idng\n-----END PGP SIGNATURE-----\n", "payload": "tree c6fcc8c77fe4948b356e397fb5fe1f8e8ac39037\nparent 3ebf15c9b29b1fed6319d04f540ad48cd4bd6995\nparent 4195c0e5f9a3db7646d4df28aa8c77a863c35759\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576925267 +0000\ncommitter GitHub <noreply@github.com> 1576925267 +0000\n\nMerge #2628\n\n2628: Add macro 2.0 support in parser r=matklad a=edwin0cheng\n\nThis PR added a new syntax kind : `MACRO_DEF` and a keyword `MACRO_KW`\r\n\r\nthere are two syntax for declarative macro 2.0 :\r\n1. Normal : `macro m { ($i:ident) => {} }` , which handle similar to legacy one. \r\n2. Call like: `macro m($i:ident) {}`, it produces a single token tree which have two child token trees : `($i:ident)` and `{}`\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "html_url": "https://github.com/rust-lang/rust/commit/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ebf15c9b29b1fed6319d04f540ad48cd4bd6995", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ebf15c9b29b1fed6319d04f540ad48cd4bd6995", "html_url": "https://github.com/rust-lang/rust/commit/3ebf15c9b29b1fed6319d04f540ad48cd4bd6995"}, {"sha": "4195c0e5f9a3db7646d4df28aa8c77a863c35759", "url": "https://api.github.com/repos/rust-lang/rust/commits/4195c0e5f9a3db7646d4df28aa8c77a863c35759", "html_url": "https://github.com/rust-lang/rust/commit/4195c0e5f9a3db7646d4df28aa8c77a863c35759"}], "stats": {"total": 610, "additions": 279, "deletions": 331}, "files": [{"sha": "3c717e5f9e95cbcaca917b9a2b63b9b75c9f6771", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -33,7 +33,7 @@ pub(super) enum ItemFlavor {\n \n pub(super) const ITEM_RECOVERY_SET: TokenSet = token_set![\n     FN_KW, STRUCT_KW, ENUM_KW, IMPL_KW, TRAIT_KW, CONST_KW, STATIC_KW, LET_KW, MOD_KW, PUB_KW,\n-    CRATE_KW, USE_KW\n+    CRATE_KW, USE_KW, MACRO_KW\n ];\n \n pub(super) fn item_or_macro(p: &mut Parser, stop_on_r_curly: bool, flavor: ItemFlavor) {\n@@ -249,6 +249,11 @@ fn items_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             // }\n             adt::struct_def(p, m);\n         }\n+        // test pub_macro_def\n+        // pub macro m($:ident) {}\n+        T![macro] => {\n+            macro_def(p, m);\n+        }\n         IDENT if p.at_contextual_kw(\"union\") && p.nth(1) == IDENT => {\n             // test union_items\n             // union Foo {}\n@@ -379,6 +384,29 @@ pub(crate) fn mod_item_list(p: &mut Parser) {\n     m.complete(p, ITEM_LIST);\n }\n \n+// test macro_def\n+// macro m { ($i:ident) => {} }\n+// macro m($i:ident) {}\n+fn macro_def(p: &mut Parser, m: Marker) {\n+    p.expect(T![macro]);\n+    p.expect(IDENT);\n+    if p.at(T!['{']) {\n+        token_tree(p);\n+    } else if !p.at(T!['(']) {\n+        p.error(\"unmatched `(`\");\n+    } else {\n+        let m = p.start();\n+        token_tree(p);\n+        match p.current() {\n+            T!['{'] | T!['['] | T!['('] => token_tree(p),\n+            _ => p.error(\"expected `{`, `[`, `(`\"),\n+        }\n+        m.complete(p, TOKEN_TREE);\n+    }\n+\n+    m.complete(p, MACRO_DEF);\n+}\n+\n fn macro_call(p: &mut Parser) -> BlockLike {\n     assert!(paths::is_use_path_start(p));\n     paths::use_path(p);"}, {"sha": "afe4ce51a9f4d57275159600cc6b9f9c8b340e00", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -100,6 +100,7 @@ pub enum SyntaxKind {\n     TRY_KW,\n     BOX_KW,\n     AWAIT_KW,\n+    MACRO_KW,\n     AUTO_KW,\n     DEFAULT_KW,\n     EXISTENTIAL_KW,\n@@ -136,6 +137,7 @@ pub enum SyntaxKind {\n     TYPE_ALIAS_DEF,\n     MACRO_CALL,\n     TOKEN_TREE,\n+    MACRO_DEF,\n     PAREN_TYPE,\n     TUPLE_TYPE,\n     NEVER_TYPE,\n@@ -251,7 +253,7 @@ impl SyntaxKind {\n             | SUPER_KW | IN_KW | WHERE_KW | FOR_KW | LOOP_KW | WHILE_KW | CONTINUE_KW\n             | BREAK_KW | IF_KW | ELSE_KW | MATCH_KW | CONST_KW | STATIC_KW | MUT_KW | UNSAFE_KW\n             | TYPE_KW | REF_KW | LET_KW | MOVE_KW | RETURN_KW | TRY_KW | BOX_KW | AWAIT_KW\n-            | AUTO_KW | DEFAULT_KW | EXISTENTIAL_KW | UNION_KW => true,\n+            | MACRO_KW | AUTO_KW | DEFAULT_KW | EXISTENTIAL_KW | UNION_KW => true,\n             _ => false,\n         }\n     }\n@@ -314,6 +316,7 @@ impl SyntaxKind {\n             \"try\" => TRY_KW,\n             \"box\" => BOX_KW,\n             \"await\" => AWAIT_KW,\n+            \"macro\" => MACRO_KW,\n             _ => return None,\n         };\n         Some(kw)\n@@ -628,6 +631,9 @@ macro_rules! T {\n     ( await ) => {\n         $crate::SyntaxKind::AWAIT_KW\n     };\n+    ( macro ) => {\n+        $crate::SyntaxKind::MACRO_KW\n+    };\n     ( auto ) => {\n         $crate::SyntaxKind::AUTO_KW\n     };"}, {"sha": "3f1cd0b9032e1e1b33b15e19a89d3f5b4b7efdc8", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -94,7 +94,8 @@ Grammar(\n         \"return\",\n         \"try\",\n         \"box\",\n-        \"await\"\n+        \"await\",\n+        \"macro\"\n     ],\n     contextual_keywords: [\n         \"auto\",\n@@ -140,6 +141,7 @@ Grammar(\n         \"TYPE_ALIAS_DEF\",\n         \"MACRO_CALL\",\n         \"TOKEN_TREE\",\n+        \"MACRO_DEF\",\n \n         \"PAREN_TYPE\",\n         \"TUPLE_TYPE\","}, {"sha": "c5be73a5a08e8108a749fa7a33dde038e6725933", "filename": "crates/ra_syntax/test_data/parser/err/0028_macro_2.0.txt", "status": "removed", "additions": 0, "deletions": 328, "changes": 328, "blob_url": "https://github.com/rust-lang/rust/blob/3ebf15c9b29b1fed6319d04f540ad48cd4bd6995/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/3ebf15c9b29b1fed6319d04f540ad48cd4bd6995/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0028_macro_2.0.txt?ref=3ebf15c9b29b1fed6319d04f540ad48cd4bd6995", "patch": "@@ -1,328 +0,0 @@\n-SOURCE_FILE@[0; 349)\n-  MACRO_CALL@[0; 41)\n-    PATH@[0; 5)\n-      PATH_SEGMENT@[0; 5)\n-        NAME_REF@[0; 5)\n-          IDENT@[0; 5) \"macro\"\n-    WHITESPACE@[5; 6) \" \"\n-    NAME@[6; 21)\n-      IDENT@[6; 21) \"parse_use_trees\"\n-    TOKEN_TREE@[21; 41)\n-      L_PAREN@[21; 22) \"(\"\n-      DOLLAR@[22; 23) \"$\"\n-      TOKEN_TREE@[23; 32)\n-        L_PAREN@[23; 24) \"(\"\n-        DOLLAR@[24; 25) \"$\"\n-        IDENT@[25; 26) \"s\"\n-        COLON@[26; 27) \":\"\n-        IDENT@[27; 31) \"expr\"\n-        R_PAREN@[31; 32) \")\"\n-      COMMA@[32; 33) \",\"\n-      STAR@[33; 34) \"*\"\n-      WHITESPACE@[34; 35) \" \"\n-      DOLLAR@[35; 36) \"$\"\n-      TOKEN_TREE@[36; 39)\n-        L_PAREN@[36; 37) \"(\"\n-        COMMA@[37; 38) \",\"\n-        R_PAREN@[38; 39) \")\"\n-      STAR@[39; 40) \"*\"\n-      R_PAREN@[40; 41) \")\"\n-  WHITESPACE@[41; 42) \" \"\n-  ERROR@[42; 93)\n-    L_CURLY@[42; 43) \"{\"\n-    WHITESPACE@[43; 48) \"\\n    \"\n-    MACRO_CALL@[48; 91)\n-      PATH@[48; 51)\n-        PATH_SEGMENT@[48; 51)\n-          NAME_REF@[48; 51)\n-            IDENT@[48; 51) \"vec\"\n-      EXCL@[51; 52) \"!\"\n-      TOKEN_TREE@[52; 91)\n-        L_BRACK@[52; 53) \"[\"\n-        WHITESPACE@[53; 62) \"\\n        \"\n-        DOLLAR@[62; 63) \"$\"\n-        TOKEN_TREE@[63; 84)\n-          L_PAREN@[63; 64) \"(\"\n-          IDENT@[64; 78) \"parse_use_tree\"\n-          TOKEN_TREE@[78; 82)\n-            L_PAREN@[78; 79) \"(\"\n-            DOLLAR@[79; 80) \"$\"\n-            IDENT@[80; 81) \"s\"\n-            R_PAREN@[81; 82) \")\"\n-          COMMA@[82; 83) \",\"\n-          R_PAREN@[83; 84) \")\"\n-        STAR@[84; 85) \"*\"\n-        WHITESPACE@[85; 90) \"\\n    \"\n-        R_BRACK@[90; 91) \"]\"\n-    WHITESPACE@[91; 92) \"\\n\"\n-    R_CURLY@[92; 93) \"}\"\n-  WHITESPACE@[93; 95) \"\\n\\n\"\n-  FN_DEF@[95; 348)\n-    ATTR@[95; 102)\n-      POUND@[95; 96) \"#\"\n-      L_BRACK@[96; 97) \"[\"\n-      PATH@[97; 101)\n-        PATH_SEGMENT@[97; 101)\n-          NAME_REF@[97; 101)\n-            IDENT@[97; 101) \"test\"\n-      R_BRACK@[101; 102) \"]\"\n-    WHITESPACE@[102; 103) \"\\n\"\n-    FN_KW@[103; 105) \"fn\"\n-    WHITESPACE@[105; 106) \" \"\n-    NAME@[106; 125)\n-      IDENT@[106; 125) \"test_use_tree_merge\"\n-    PARAM_LIST@[125; 127)\n-      L_PAREN@[125; 126) \"(\"\n-      R_PAREN@[126; 127) \")\"\n-    WHITESPACE@[127; 128) \" \"\n-    BLOCK_EXPR@[128; 348)\n-      BLOCK@[128; 348)\n-        L_CURLY@[128; 129) \"{\"\n-        WHITESPACE@[129; 134) \"\\n    \"\n-        EXPR_STMT@[134; 139)\n-          PATH_EXPR@[134; 139)\n-            PATH@[134; 139)\n-              PATH_SEGMENT@[134; 139)\n-                NAME_REF@[134; 139)\n-                  IDENT@[134; 139) \"macro\"\n-        WHITESPACE@[139; 140) \" \"\n-        EXPR_STMT@[140; 154)\n-          CALL_EXPR@[140; 154)\n-            PATH_EXPR@[140; 150)\n-              PATH@[140; 150)\n-                PATH_SEGMENT@[140; 150)\n-                  NAME_REF@[140; 150)\n-                    IDENT@[140; 150) \"test_merge\"\n-            ARG_LIST@[150; 154)\n-              L_PAREN@[150; 151) \"(\"\n-              ARRAY_EXPR@[151; 154)\n-                L_BRACK@[151; 152) \"[\"\n-                ERROR@[152; 153)\n-                  DOLLAR@[152; 153) \"$\"\n-                PAREN_EXPR@[153; 154)\n-                  L_PAREN@[153; 154) \"(\"\n-        EXPR_STMT@[154; 155)\n-          ERROR@[154; 155)\n-            DOLLAR@[154; 155) \"$\"\n-        EXPR_STMT@[155; 160)\n-          PATH_EXPR@[155; 160)\n-            PATH@[155; 160)\n-              PATH_SEGMENT@[155; 160)\n-                NAME_REF@[155; 160)\n-                  IDENT@[155; 160) \"input\"\n-        EXPR_STMT@[160; 161)\n-          ERROR@[160; 161)\n-            COLON@[160; 161) \":\"\n-        EXPR_STMT@[161; 165)\n-          PATH_EXPR@[161; 165)\n-            PATH@[161; 165)\n-              PATH_SEGMENT@[161; 165)\n-                NAME_REF@[161; 165)\n-                  IDENT@[161; 165) \"expr\"\n-        EXPR_STMT@[165; 166)\n-          ERROR@[165; 166)\n-            R_PAREN@[165; 166) \")\"\n-        EXPR_STMT@[166; 167)\n-          ERROR@[166; 167)\n-            COMMA@[166; 167) \",\"\n-        EXPR_STMT@[167; 170)\n-          PREFIX_EXPR@[167; 170)\n-            STAR@[167; 168) \"*\"\n-            WHITESPACE@[168; 169) \" \"\n-            ERROR@[169; 170)\n-              DOLLAR@[169; 170) \"$\"\n-        EXPR_STMT@[170; 171)\n-          PAREN_EXPR@[170; 171)\n-            L_PAREN@[170; 171) \"(\"\n-        EXPR_STMT@[171; 172)\n-          ERROR@[171; 172)\n-            COMMA@[171; 172) \",\"\n-        EXPR_STMT@[172; 173)\n-          ERROR@[172; 173)\n-            R_PAREN@[172; 173) \")\"\n-        EXPR_STMT@[173; 175)\n-          PREFIX_EXPR@[173; 175)\n-            STAR@[173; 174) \"*\"\n-            ERROR@[174; 175)\n-              R_BRACK@[174; 175) \"]\"\n-        EXPR_STMT@[175; 176)\n-          ERROR@[175; 176)\n-            COMMA@[175; 176) \",\"\n-        WHITESPACE@[176; 177) \" \"\n-        EXPR_STMT@[177; 180)\n-          ARRAY_EXPR@[177; 180)\n-            L_BRACK@[177; 178) \"[\"\n-            ERROR@[178; 179)\n-              DOLLAR@[178; 179) \"$\"\n-            PAREN_EXPR@[179; 180)\n-              L_PAREN@[179; 180) \"(\"\n-        EXPR_STMT@[180; 181)\n-          ERROR@[180; 181)\n-            DOLLAR@[180; 181) \"$\"\n-        EXPR_STMT@[181; 187)\n-          PATH_EXPR@[181; 187)\n-            PATH@[181; 187)\n-              PATH_SEGMENT@[181; 187)\n-                NAME_REF@[181; 187)\n-                  IDENT@[181; 187) \"output\"\n-        EXPR_STMT@[187; 188)\n-          ERROR@[187; 188)\n-            COLON@[187; 188) \":\"\n-        EXPR_STMT@[188; 192)\n-          PATH_EXPR@[188; 192)\n-            PATH@[188; 192)\n-              PATH_SEGMENT@[188; 192)\n-                NAME_REF@[188; 192)\n-                  IDENT@[188; 192) \"expr\"\n-        EXPR_STMT@[192; 193)\n-          ERROR@[192; 193)\n-            R_PAREN@[192; 193) \")\"\n-        EXPR_STMT@[193; 194)\n-          ERROR@[193; 194)\n-            COMMA@[193; 194) \",\"\n-        EXPR_STMT@[194; 197)\n-          PREFIX_EXPR@[194; 197)\n-            STAR@[194; 195) \"*\"\n-            WHITESPACE@[195; 196) \" \"\n-            ERROR@[196; 197)\n-              DOLLAR@[196; 197) \"$\"\n-        EXPR_STMT@[197; 198)\n-          PAREN_EXPR@[197; 198)\n-            L_PAREN@[197; 198) \"(\"\n-        EXPR_STMT@[198; 199)\n-          ERROR@[198; 199)\n-            COMMA@[198; 199) \",\"\n-        EXPR_STMT@[199; 200)\n-          ERROR@[199; 200)\n-            R_PAREN@[199; 200) \")\"\n-        EXPR_STMT@[200; 202)\n-          PREFIX_EXPR@[200; 202)\n-            STAR@[200; 201) \"*\"\n-            ERROR@[201; 202)\n-              R_BRACK@[201; 202) \"]\"\n-        EXPR_STMT@[202; 203)\n-          ERROR@[202; 203)\n-            R_PAREN@[202; 203) \")\"\n-        WHITESPACE@[203; 204) \" \"\n-        BLOCK_EXPR@[204; 346)\n-          BLOCK@[204; 346)\n-            L_CURLY@[204; 205) \"{\"\n-            WHITESPACE@[205; 214) \"\\n        \"\n-            EXPR_STMT@[214; 340)\n-              MACRO_CALL@[214; 339)\n-                PATH@[214; 223)\n-                  PATH_SEGMENT@[214; 223)\n-                    NAME_REF@[214; 223)\n-                      IDENT@[214; 223) \"assert_eq\"\n-                EXCL@[223; 224) \"!\"\n-                TOKEN_TREE@[224; 339)\n-                  L_PAREN@[224; 225) \"(\"\n-                  WHITESPACE@[225; 238) \"\\n            \"\n-                  IDENT@[238; 253) \"merge_use_trees\"\n-                  TOKEN_TREE@[253; 284)\n-                    L_PAREN@[253; 254) \"(\"\n-                    IDENT@[254; 269) \"parse_use_trees\"\n-                    EXCL@[269; 270) \"!\"\n-                    TOKEN_TREE@[270; 283)\n-                      L_PAREN@[270; 271) \"(\"\n-                      DOLLAR@[271; 272) \"$\"\n-                      TOKEN_TREE@[272; 281)\n-                        L_PAREN@[272; 273) \"(\"\n-                        DOLLAR@[273; 274) \"$\"\n-                        IDENT@[274; 279) \"input\"\n-                        COMMA@[279; 280) \",\"\n-                        R_PAREN@[280; 281) \")\"\n-                      STAR@[281; 282) \"*\"\n-                      R_PAREN@[282; 283) \")\"\n-                    R_PAREN@[283; 284) \")\"\n-                  COMMA@[284; 285) \",\"\n-                  WHITESPACE@[285; 298) \"\\n            \"\n-                  IDENT@[298; 313) \"parse_use_trees\"\n-                  EXCL@[313; 314) \"!\"\n-                  TOKEN_TREE@[314; 328)\n-                    L_PAREN@[314; 315) \"(\"\n-                    DOLLAR@[315; 316) \"$\"\n-                    TOKEN_TREE@[316; 326)\n-                      L_PAREN@[316; 317) \"(\"\n-                      DOLLAR@[317; 318) \"$\"\n-                      IDENT@[318; 324) \"output\"\n-                      COMMA@[324; 325) \",\"\n-                      R_PAREN@[325; 326) \")\"\n-                    STAR@[326; 327) \"*\"\n-                    R_PAREN@[327; 328) \")\"\n-                  COMMA@[328; 329) \",\"\n-                  WHITESPACE@[329; 338) \"\\n        \"\n-                  R_PAREN@[338; 339) \")\"\n-              SEMI@[339; 340) \";\"\n-            WHITESPACE@[340; 345) \"\\n    \"\n-            R_CURLY@[345; 346) \"}\"\n-        WHITESPACE@[346; 347) \"\\n\"\n-        R_CURLY@[347; 348) \"}\"\n-  WHITESPACE@[348; 349) \"\\n\"\n-error 5: expected EXCL\n-error 41: expected SEMI\n-error 42: expected an item\n-error 139: expected SEMI\n-error 152: expected expression\n-error 153: expected COMMA\n-error 154: expected expression\n-error 154: expected R_PAREN\n-error 154: expected COMMA\n-error 154: expected expression\n-error 154: expected R_BRACK\n-error 154: expected COMMA\n-error 154: expected SEMI\n-error 154: expected expression\n-error 155: expected SEMI\n-error 160: expected SEMI\n-error 160: expected expression\n-error 161: expected SEMI\n-error 165: expected SEMI\n-error 165: expected expression\n-error 166: expected SEMI\n-error 166: expected expression\n-error 167: expected SEMI\n-error 169: expected expression\n-error 170: expected SEMI\n-error 171: expected expression\n-error 171: expected R_PAREN\n-error 171: expected SEMI\n-error 171: expected expression\n-error 172: expected SEMI\n-error 172: expected expression\n-error 173: expected SEMI\n-error 174: expected expression\n-error 175: expected SEMI\n-error 175: expected expression\n-error 176: expected SEMI\n-error 178: expected expression\n-error 179: expected COMMA\n-error 180: expected expression\n-error 180: expected R_PAREN\n-error 180: expected COMMA\n-error 180: expected expression\n-error 180: expected R_BRACK\n-error 180: expected SEMI\n-error 180: expected expression\n-error 181: expected SEMI\n-error 187: expected SEMI\n-error 187: expected expression\n-error 188: expected SEMI\n-error 192: expected SEMI\n-error 192: expected expression\n-error 193: expected SEMI\n-error 193: expected expression\n-error 194: expected SEMI\n-error 196: expected expression\n-error 197: expected SEMI\n-error 198: expected expression\n-error 198: expected R_PAREN\n-error 198: expected SEMI\n-error 198: expected expression\n-error 199: expected SEMI\n-error 199: expected expression\n-error 200: expected SEMI\n-error 201: expected expression\n-error 202: expected SEMI\n-error 202: expected expression\n-error 203: expected SEMI"}, {"sha": "319a4e2aad2e91497293708be9b147e5a4a1539e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_macro_def.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.rs?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -0,0 +1,2 @@\n+macro m { ($i:ident) => {} }\n+macro m($i:ident) {}"}, {"sha": "af1122bfa4363a4603b40e16bf049d2159ba2f38", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0147_macro_def.txt", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.txt", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0147_macro_def.txt?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -0,0 +1,43 @@\n+SOURCE_FILE@[0; 50)\n+  MACRO_DEF@[0; 28)\n+    MACRO_KW@[0; 5) \"macro\"\n+    WHITESPACE@[5; 6) \" \"\n+    IDENT@[6; 7) \"m\"\n+    WHITESPACE@[7; 8) \" \"\n+    TOKEN_TREE@[8; 28)\n+      L_CURLY@[8; 9) \"{\"\n+      WHITESPACE@[9; 10) \" \"\n+      TOKEN_TREE@[10; 20)\n+        L_PAREN@[10; 11) \"(\"\n+        DOLLAR@[11; 12) \"$\"\n+        IDENT@[12; 13) \"i\"\n+        COLON@[13; 14) \":\"\n+        IDENT@[14; 19) \"ident\"\n+        R_PAREN@[19; 20) \")\"\n+      WHITESPACE@[20; 21) \" \"\n+      EQ@[21; 22) \"=\"\n+      R_ANGLE@[22; 23) \">\"\n+      WHITESPACE@[23; 24) \" \"\n+      TOKEN_TREE@[24; 26)\n+        L_CURLY@[24; 25) \"{\"\n+        R_CURLY@[25; 26) \"}\"\n+      WHITESPACE@[26; 27) \" \"\n+      R_CURLY@[27; 28) \"}\"\n+  WHITESPACE@[28; 29) \"\\n\"\n+  MACRO_DEF@[29; 49)\n+    MACRO_KW@[29; 34) \"macro\"\n+    WHITESPACE@[34; 35) \" \"\n+    IDENT@[35; 36) \"m\"\n+    TOKEN_TREE@[36; 49)\n+      TOKEN_TREE@[36; 46)\n+        L_PAREN@[36; 37) \"(\"\n+        DOLLAR@[37; 38) \"$\"\n+        IDENT@[38; 39) \"i\"\n+        COLON@[39; 40) \":\"\n+        IDENT@[40; 45) \"ident\"\n+        R_PAREN@[45; 46) \")\"\n+      WHITESPACE@[46; 47) \" \"\n+      TOKEN_TREE@[47; 49)\n+        L_CURLY@[47; 48) \"{\"\n+        R_CURLY@[48; 49) \"}\"\n+  WHITESPACE@[49; 50) \"\\n\""}, {"sha": "3b2be597fd85232a558395cb85aa0993389a73ff", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0148_pub_macro_def.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.rs?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -0,0 +1 @@\n+pub macro m($:ident) {}"}, {"sha": "985f61f89e3374d3a1a62ff4c3590f8eb81ca749", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0148_pub_macro_def.txt", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.txt", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0148_pub_macro_def.txt?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -0,0 +1,20 @@\n+SOURCE_FILE@[0; 24)\n+  MACRO_DEF@[0; 23)\n+    VISIBILITY@[0; 3)\n+      PUB_KW@[0; 3) \"pub\"\n+    WHITESPACE@[3; 4) \" \"\n+    MACRO_KW@[4; 9) \"macro\"\n+    WHITESPACE@[9; 10) \" \"\n+    IDENT@[10; 11) \"m\"\n+    TOKEN_TREE@[11; 23)\n+      TOKEN_TREE@[11; 20)\n+        L_PAREN@[11; 12) \"(\"\n+        DOLLAR@[12; 13) \"$\"\n+        COLON@[13; 14) \":\"\n+        IDENT@[14; 19) \"ident\"\n+        R_PAREN@[19; 20) \")\"\n+      WHITESPACE@[20; 21) \" \"\n+      TOKEN_TREE@[21; 23)\n+        L_CURLY@[21; 22) \"{\"\n+        R_CURLY@[22; 23) \"}\"\n+  WHITESPACE@[23; 24) \"\\n\""}, {"sha": "781047ba19a986616bca685fcf95cade2f9c8744", "filename": "crates/ra_syntax/test_data/parser/ok/0062_macro_2.0.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.rs?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "previous_filename": "crates/ra_syntax/test_data/parser/err/0028_macro_2.0.rs"}, {"sha": "158af85f55ae99539b15a916174fa158ae62db2e", "filename": "crates/ra_syntax/test_data/parser/ok/0062_macro_2.0.txt", "status": "added", "additions": 174, "deletions": 0, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.txt", "raw_url": "https://github.com/rust-lang/rust/raw/90ef070db3dce0a7acb9cd11d0b0d72de13c9d79/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0062_macro_2.0.txt?ref=90ef070db3dce0a7acb9cd11d0b0d72de13c9d79", "patch": "@@ -0,0 +1,174 @@\n+SOURCE_FILE@[0; 349)\n+  MACRO_DEF@[0; 93)\n+    MACRO_KW@[0; 5) \"macro\"\n+    WHITESPACE@[5; 6) \" \"\n+    IDENT@[6; 21) \"parse_use_trees\"\n+    TOKEN_TREE@[21; 93)\n+      TOKEN_TREE@[21; 41)\n+        L_PAREN@[21; 22) \"(\"\n+        DOLLAR@[22; 23) \"$\"\n+        TOKEN_TREE@[23; 32)\n+          L_PAREN@[23; 24) \"(\"\n+          DOLLAR@[24; 25) \"$\"\n+          IDENT@[25; 26) \"s\"\n+          COLON@[26; 27) \":\"\n+          IDENT@[27; 31) \"expr\"\n+          R_PAREN@[31; 32) \")\"\n+        COMMA@[32; 33) \",\"\n+        STAR@[33; 34) \"*\"\n+        WHITESPACE@[34; 35) \" \"\n+        DOLLAR@[35; 36) \"$\"\n+        TOKEN_TREE@[36; 39)\n+          L_PAREN@[36; 37) \"(\"\n+          COMMA@[37; 38) \",\"\n+          R_PAREN@[38; 39) \")\"\n+        STAR@[39; 40) \"*\"\n+        R_PAREN@[40; 41) \")\"\n+      WHITESPACE@[41; 42) \" \"\n+      TOKEN_TREE@[42; 93)\n+        L_CURLY@[42; 43) \"{\"\n+        WHITESPACE@[43; 48) \"\\n    \"\n+        IDENT@[48; 51) \"vec\"\n+        EXCL@[51; 52) \"!\"\n+        TOKEN_TREE@[52; 91)\n+          L_BRACK@[52; 53) \"[\"\n+          WHITESPACE@[53; 62) \"\\n        \"\n+          DOLLAR@[62; 63) \"$\"\n+          TOKEN_TREE@[63; 84)\n+            L_PAREN@[63; 64) \"(\"\n+            IDENT@[64; 78) \"parse_use_tree\"\n+            TOKEN_TREE@[78; 82)\n+              L_PAREN@[78; 79) \"(\"\n+              DOLLAR@[79; 80) \"$\"\n+              IDENT@[80; 81) \"s\"\n+              R_PAREN@[81; 82) \")\"\n+            COMMA@[82; 83) \",\"\n+            R_PAREN@[83; 84) \")\"\n+          STAR@[84; 85) \"*\"\n+          WHITESPACE@[85; 90) \"\\n    \"\n+          R_BRACK@[90; 91) \"]\"\n+        WHITESPACE@[91; 92) \"\\n\"\n+        R_CURLY@[92; 93) \"}\"\n+  WHITESPACE@[93; 95) \"\\n\\n\"\n+  FN_DEF@[95; 348)\n+    ATTR@[95; 102)\n+      POUND@[95; 96) \"#\"\n+      L_BRACK@[96; 97) \"[\"\n+      PATH@[97; 101)\n+        PATH_SEGMENT@[97; 101)\n+          NAME_REF@[97; 101)\n+            IDENT@[97; 101) \"test\"\n+      R_BRACK@[101; 102) \"]\"\n+    WHITESPACE@[102; 103) \"\\n\"\n+    FN_KW@[103; 105) \"fn\"\n+    WHITESPACE@[105; 106) \" \"\n+    NAME@[106; 125)\n+      IDENT@[106; 125) \"test_use_tree_merge\"\n+    PARAM_LIST@[125; 127)\n+      L_PAREN@[125; 126) \"(\"\n+      R_PAREN@[126; 127) \")\"\n+    WHITESPACE@[127; 128) \" \"\n+    BLOCK_EXPR@[128; 348)\n+      BLOCK@[128; 348)\n+        L_CURLY@[128; 129) \"{\"\n+        WHITESPACE@[129; 134) \"\\n    \"\n+        MACRO_DEF@[134; 346)\n+          MACRO_KW@[134; 139) \"macro\"\n+          WHITESPACE@[139; 140) \" \"\n+          IDENT@[140; 150) \"test_merge\"\n+          TOKEN_TREE@[150; 346)\n+            TOKEN_TREE@[150; 203)\n+              L_PAREN@[150; 151) \"(\"\n+              TOKEN_TREE@[151; 175)\n+                L_BRACK@[151; 152) \"[\"\n+                DOLLAR@[152; 153) \"$\"\n+                TOKEN_TREE@[153; 166)\n+                  L_PAREN@[153; 154) \"(\"\n+                  DOLLAR@[154; 155) \"$\"\n+                  IDENT@[155; 160) \"input\"\n+                  COLON@[160; 161) \":\"\n+                  IDENT@[161; 165) \"expr\"\n+                  R_PAREN@[165; 166) \")\"\n+                COMMA@[166; 167) \",\"\n+                STAR@[167; 168) \"*\"\n+                WHITESPACE@[168; 169) \" \"\n+                DOLLAR@[169; 170) \"$\"\n+                TOKEN_TREE@[170; 173)\n+                  L_PAREN@[170; 171) \"(\"\n+                  COMMA@[171; 172) \",\"\n+                  R_PAREN@[172; 173) \")\"\n+                STAR@[173; 174) \"*\"\n+                R_BRACK@[174; 175) \"]\"\n+              COMMA@[175; 176) \",\"\n+              WHITESPACE@[176; 177) \" \"\n+              TOKEN_TREE@[177; 202)\n+                L_BRACK@[177; 178) \"[\"\n+                DOLLAR@[178; 179) \"$\"\n+                TOKEN_TREE@[179; 193)\n+                  L_PAREN@[179; 180) \"(\"\n+                  DOLLAR@[180; 181) \"$\"\n+                  IDENT@[181; 187) \"output\"\n+                  COLON@[187; 188) \":\"\n+                  IDENT@[188; 192) \"expr\"\n+                  R_PAREN@[192; 193) \")\"\n+                COMMA@[193; 194) \",\"\n+                STAR@[194; 195) \"*\"\n+                WHITESPACE@[195; 196) \" \"\n+                DOLLAR@[196; 197) \"$\"\n+                TOKEN_TREE@[197; 200)\n+                  L_PAREN@[197; 198) \"(\"\n+                  COMMA@[198; 199) \",\"\n+                  R_PAREN@[199; 200) \")\"\n+                STAR@[200; 201) \"*\"\n+                R_BRACK@[201; 202) \"]\"\n+              R_PAREN@[202; 203) \")\"\n+            WHITESPACE@[203; 204) \" \"\n+            TOKEN_TREE@[204; 346)\n+              L_CURLY@[204; 205) \"{\"\n+              WHITESPACE@[205; 214) \"\\n        \"\n+              IDENT@[214; 223) \"assert_eq\"\n+              EXCL@[223; 224) \"!\"\n+              TOKEN_TREE@[224; 339)\n+                L_PAREN@[224; 225) \"(\"\n+                WHITESPACE@[225; 238) \"\\n            \"\n+                IDENT@[238; 253) \"merge_use_trees\"\n+                TOKEN_TREE@[253; 284)\n+                  L_PAREN@[253; 254) \"(\"\n+                  IDENT@[254; 269) \"parse_use_trees\"\n+                  EXCL@[269; 270) \"!\"\n+                  TOKEN_TREE@[270; 283)\n+                    L_PAREN@[270; 271) \"(\"\n+                    DOLLAR@[271; 272) \"$\"\n+                    TOKEN_TREE@[272; 281)\n+                      L_PAREN@[272; 273) \"(\"\n+                      DOLLAR@[273; 274) \"$\"\n+                      IDENT@[274; 279) \"input\"\n+                      COMMA@[279; 280) \",\"\n+                      R_PAREN@[280; 281) \")\"\n+                    STAR@[281; 282) \"*\"\n+                    R_PAREN@[282; 283) \")\"\n+                  R_PAREN@[283; 284) \")\"\n+                COMMA@[284; 285) \",\"\n+                WHITESPACE@[285; 298) \"\\n            \"\n+                IDENT@[298; 313) \"parse_use_trees\"\n+                EXCL@[313; 314) \"!\"\n+                TOKEN_TREE@[314; 328)\n+                  L_PAREN@[314; 315) \"(\"\n+                  DOLLAR@[315; 316) \"$\"\n+                  TOKEN_TREE@[316; 326)\n+                    L_PAREN@[316; 317) \"(\"\n+                    DOLLAR@[317; 318) \"$\"\n+                    IDENT@[318; 324) \"output\"\n+                    COMMA@[324; 325) \",\"\n+                    R_PAREN@[325; 326) \")\"\n+                  STAR@[326; 327) \"*\"\n+                  R_PAREN@[327; 328) \")\"\n+                COMMA@[328; 329) \",\"\n+                WHITESPACE@[329; 338) \"\\n        \"\n+                R_PAREN@[338; 339) \")\"\n+              SEMI@[339; 340) \";\"\n+              WHITESPACE@[340; 345) \"\\n    \"\n+              R_CURLY@[345; 346) \"}\"\n+        WHITESPACE@[346; 347) \"\\n\"\n+        R_CURLY@[347; 348) \"}\"\n+  WHITESPACE@[348; 349) \"\\n\""}]}