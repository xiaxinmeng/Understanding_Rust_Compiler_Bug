{"sha": "86f12c110b7dafe280cd06daa632011e871d5566", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZjEyYzExMGI3ZGFmZTI4MGNkMDZkYWE2MzIwMTFlODcxZDU1NjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-23T00:04:10Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-12-23T00:04:10Z"}, "message": "test fallout", "tree": {"sha": "91316f6087eb98dd4001f5fcb97670f9faa82b1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91316f6087eb98dd4001f5fcb97670f9faa82b1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f12c110b7dafe280cd06daa632011e871d5566", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f12c110b7dafe280cd06daa632011e871d5566", "html_url": "https://github.com/rust-lang/rust/commit/86f12c110b7dafe280cd06daa632011e871d5566", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f12c110b7dafe280cd06daa632011e871d5566/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a06baa56b95674fc626b3c3fd680d6a65357fe60", "url": "https://api.github.com/repos/rust-lang/rust/commits/a06baa56b95674fc626b3c3fd680d6a65357fe60", "html_url": "https://github.com/rust-lang/rust/commit/a06baa56b95674fc626b3c3fd680d6a65357fe60"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "3a49a5a97de3d8d753b331db155751a66c7b2ddf", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=86f12c110b7dafe280cd06daa632011e871d5566", "patch": "@@ -35,7 +35,7 @@ LL |     (|_| 2333).await;\n    | \n   ::: $SRC_DIR/libstd/future.rs:LL:COL\n    |\n-LL |     F: Future\n+LL |     F: Future,\n    |        ------ required by this bound in `std::future::poll_with_tls_context`\n \n error: aborting due to 4 previous errors"}, {"sha": "dcef16dff4cef79a4100a9abc3b42dd36beaff1d", "filename": "src/test/ui/closures/closure-move-sync.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr?ref=86f12c110b7dafe280cd06daa632011e871d5566", "patch": "@@ -6,8 +6,8 @@ LL |     let t = thread::spawn(|| {\n    | \n   ::: $SRC_DIR/libstd/thread/mod.rs:LL:COL\n    |\n-LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n-   |                          ---- required by this bound in `std::thread::spawn`\n+LL |     F: Send + 'static,\n+   |        ---- required by this bound in `std::thread::spawn`\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Receiver<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Receiver<()>`\n@@ -21,8 +21,8 @@ LL |     thread::spawn(|| tx.send(()).unwrap());\n    | \n   ::: $SRC_DIR/libstd/thread/mod.rs:LL:COL\n    |\n-LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n-   |                          ---- required by this bound in `std::thread::spawn`\n+LL |     F: Send + 'static,\n+   |        ---- required by this bound in `std::thread::spawn`\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Sender<()>`"}, {"sha": "9dbe81db0b5081ccd44913a16d4dd24dff14173a", "filename": "src/test/ui/no-send-res-ports.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.stderr?ref=86f12c110b7dafe280cd06daa632011e871d5566", "patch": "@@ -6,8 +6,8 @@ LL |     thread::spawn(move|| {\n    | \n   ::: $SRC_DIR/libstd/thread/mod.rs:LL:COL\n    |\n-LL |     F: FnOnce() -> T, F: Send + 'static, T: Send + 'static\n-   |                          ---- required by this bound in `std::thread::spawn`\n+LL |     F: Send + 'static,\n+   |        ---- required by this bound in `std::thread::spawn`\n    |\n    = help: within `[closure@$DIR/no-send-res-ports.rs:26:19: 30:6 x:main::Foo]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<()>`\n    = note: required because it appears within the type `Port<()>`"}, {"sha": "8a9ef993bdacf3af038c4dd745e5b7d776f5d53f", "filename": "src/test/ui/type_length_limit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Ftype_length_limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86f12c110b7dafe280cd06daa632011e871d5566/src%2Ftest%2Fui%2Ftype_length_limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype_length_limit.stderr?ref=86f12c110b7dafe280cd06daa632011e871d5566", "patch": "@@ -1,8 +1,8 @@\n error: reached the type-length limit while instantiating `std::mem::drop::<std::option::Op... G), (G, G, G), (G, G, G))))))>>`\n   --> $SRC_DIR/libcore/mem/mod.rs:LL:COL\n    |\n-LL | pub fn drop<T>(_x: T) { }\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | pub fn drop<T>(_x: T) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: consider adding a `#![type_length_limit=\"1094\"]` attribute to your crate\n "}]}