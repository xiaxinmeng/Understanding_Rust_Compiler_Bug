{"sha": "57cf2decf755c6eea3275e2a87862756eb8c62ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3Y2YyZGVjZjc1NWM2ZWVhMzI3NWUyYTg3ODYyNzU2ZWI4YzYyY2E=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-22T01:16:57Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-03-23T20:55:45Z"}, "message": "Update borrowck tests to test that index is by-move now", "tree": {"sha": "c620fc64f6b6cf307b2bbc20fc1213801c8c229b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c620fc64f6b6cf307b2bbc20fc1213801c8c229b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57cf2decf755c6eea3275e2a87862756eb8c62ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57cf2decf755c6eea3275e2a87862756eb8c62ca", "html_url": "https://github.com/rust-lang/rust/commit/57cf2decf755c6eea3275e2a87862756eb8c62ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57cf2decf755c6eea3275e2a87862756eb8c62ca/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e58af40044a69a9a88de86e222c287eb79a4dcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e58af40044a69a9a88de86e222c287eb79a4dcc", "html_url": "https://github.com/rust-lang/rust/commit/8e58af40044a69a9a88de86e222c287eb79a4dcc"}], "stats": {"total": 90, "additions": 82, "deletions": 8}, "files": [{"sha": "1b62d9c326d77ad9b845d2ac55b61dc30e300201", "filename": "src/test/compile-fail/borrowck-overloaded-index-move-from-vec.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-from-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-from-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-from-vec.rs?ref=57cf2decf755c6eea3275e2a87862756eb8c62ca", "patch": "@@ -19,7 +19,7 @@ struct MyVec<T> {\n impl<T> Index<usize> for MyVec<T> {\n     type Output = T;\n \n-    fn index(&self, &i: &usize) -> &T {\n+    fn index(&self, i: usize) -> &T {\n         &self.data[i]\n     }\n }", "previous_filename": "src/test/compile-fail/borrowck-overloaded-index-2.rs"}, {"sha": "d8615d1905338444f1ff3ab171f15b19b18c3ebe", "filename": "src/test/compile-fail/borrowck-overloaded-index-move-index.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-move-index.rs?ref=57cf2decf755c6eea3275e2a87862756eb8c62ca", "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::{Index, IndexMut};\n+\n+struct Foo {\n+    x: isize,\n+    y: isize,\n+}\n+\n+impl Index<String> for Foo {\n+    type Output = isize;\n+\n+    fn index(&self, z: String) -> &isize {\n+        if z == \"x\" {\n+            &self.x\n+        } else {\n+            &self.y\n+        }\n+    }\n+}\n+\n+impl IndexMut<String> for Foo {\n+    fn index_mut(&mut self, z: String) -> &mut isize {\n+        if z == \"x\" {\n+            &mut self.x\n+        } else {\n+            &mut self.y\n+        }\n+    }\n+}\n+\n+struct Bar {\n+    x: isize,\n+}\n+\n+impl Index<isize> for Bar {\n+    type Output = isize;\n+\n+    fn index<'a>(&'a self, z: isize) -> &'a isize {\n+        &self.x\n+    }\n+}\n+\n+fn main() {\n+    let mut f = Foo {\n+        x: 1,\n+        y: 2,\n+    };\n+    let mut s = \"hello\".to_string();\n+    let rs = &mut s;\n+\n+    println!(\"{}\", f[s]);\n+    //~^ ERROR cannot move out of `s` because it is borrowed\n+\n+    f[s] = 10;\n+    //~^ ERROR cannot move out of `s` because it is borrowed\n+    //~| ERROR use of moved value: `s`\n+\n+    let s = Bar {\n+        x: 1,\n+    };\n+    let i = 2;\n+    let _j = &i;\n+    println!(\"{}\", s[i]); // no error, i is copy\n+    println!(\"{}\", s[i]);\n+}"}, {"sha": "4c50caf49768dc5cce78fdc4b73303ae41b20c9d", "filename": "src/test/compile-fail/borrowck-overloaded-index-ref-index.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-ref-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57cf2decf755c6eea3275e2a87862756eb8c62ca/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-ref-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-overloaded-index-ref-index.rs?ref=57cf2decf755c6eea3275e2a87862756eb8c62ca", "patch": "@@ -15,10 +15,10 @@ struct Foo {\n     y: isize,\n }\n \n-impl Index<String> for Foo {\n+impl<'a> Index<&'a String> for Foo {\n     type Output = isize;\n \n-    fn index<'a>(&'a self, z: &String) -> &'a isize {\n+    fn index(&self, z: &String) -> &isize {\n         if *z == \"x\" {\n             &self.x\n         } else {\n@@ -27,8 +27,8 @@ impl Index<String> for Foo {\n     }\n }\n \n-impl IndexMut<String> for Foo {\n-    fn index_mut<'a>(&'a mut self, z: &String) -> &'a mut isize {\n+impl<'a> IndexMut<&'a String> for Foo {\n+    fn index_mut(&mut self, z: &String) -> &mut isize {\n         if *z == \"x\" {\n             &mut self.x\n         } else {\n@@ -44,7 +44,7 @@ struct Bar {\n impl Index<isize> for Bar {\n     type Output = isize;\n \n-    fn index<'a>(&'a self, z: &isize) -> &'a isize {\n+    fn index<'a>(&'a self, z: isize) -> &'a isize {\n         &self.x\n     }\n }\n@@ -56,9 +56,9 @@ fn main() {\n     };\n     let mut s = \"hello\".to_string();\n     let rs = &mut s;\n-    println!(\"{}\", f[s]);\n+    println!(\"{}\", f[&s]);\n     //~^ ERROR cannot borrow `s` as immutable because it is also borrowed as mutable\n-    f[s] = 10;\n+    f[&s] = 10;\n     //~^ ERROR cannot borrow `s` as immutable because it is also borrowed as mutable\n     let s = Bar {\n         x: 1,", "previous_filename": "src/test/compile-fail/borrowck-overloaded-index.rs"}]}