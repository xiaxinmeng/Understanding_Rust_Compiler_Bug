{"sha": "ebbd00b1abb2d6d2f189288a10f23556ee997424", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViYmQwMGIxYWJiMmQ2ZDJmMTg5Mjg4YTEwZjIzNTU2ZWU5OTc0MjQ=", "commit": {"author": {"name": "Arnavion", "email": "arnavion@gmail.com", "date": "2016-10-23T01:15:42Z"}, "committer": {"name": "Arnavion", "email": "arnavion@gmail.com", "date": "2016-10-23T01:15:42Z"}, "message": "Don't assume the first package in the result of `cargo metadata` is the current crate.\n\nInstead find the one with the manifest path that matches the --manifest-path argument or the current directory.\n\nFixes #1247", "tree": {"sha": "9b56b45a9866cf5f27e5b408f4636e7bcd10f5a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b56b45a9866cf5f27e5b408f4636e7bcd10f5a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ebbd00b1abb2d6d2f189288a10f23556ee997424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ebbd00b1abb2d6d2f189288a10f23556ee997424", "html_url": "https://github.com/rust-lang/rust/commit/ebbd00b1abb2d6d2f189288a10f23556ee997424", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ebbd00b1abb2d6d2f189288a10f23556ee997424/comments", "author": null, "committer": null, "parents": [{"sha": "984e15a0c0bc87b07050bc6f9b7036126cb577ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/984e15a0c0bc87b07050bc6f9b7036126cb577ea", "html_url": "https://github.com/rust-lang/rust/commit/984e15a0c0bc87b07050bc6f9b7036126cb577ea"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "0722cef96d76c7b1786af00d9b45ae2191e5a2b7", "filename": "clippy_lints/src/utils/cargo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ebbd00b1abb2d6d2f189288a10f23556ee997424/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebbd00b1abb2d6d2f189288a10f23556ee997424/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcargo.rs?ref=ebbd00b1abb2d6d2f189288a10f23556ee997424", "patch": "@@ -20,7 +20,7 @@ pub struct Package {\n     pub dependencies: Vec<Dependency>,\n     pub targets: Vec<Target>,\n     features: HashMap<String, Vec<String>>,\n-    manifest_path: String,\n+    pub manifest_path: String,\n }\n \n #[derive(RustcDecodable, Debug)]\n@@ -65,10 +65,10 @@ impl From<json::DecoderError> for Error {\n     }\n }\n \n-pub fn metadata(manifest_path: Option<String>) -> Result<Metadata, Error> {\n+pub fn metadata(manifest_path_arg: &Option<String>) -> Result<Metadata, Error> {\n     let mut cmd = Command::new(\"cargo\");\n     cmd.arg(\"metadata\").arg(\"--no-deps\");\n-    if let Some(ref mani) = manifest_path {\n+    if let Some(ref mani) = *manifest_path_arg {\n         cmd.arg(mani);\n     }\n     let output = cmd.output()?;"}, {"sha": "29713a183ebae824277e943b3b07a0570d44e5cb", "filename": "src/main.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/ebbd00b1abb2d6d2f189288a10f23556ee997424/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebbd00b1abb2d6d2f189288a10f23556ee997424/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=ebbd00b1abb2d6d2f189288a10f23556ee997424", "patch": "@@ -138,10 +138,30 @@ pub fn main() {\n \n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n         // this arm is executed on the initial call to `cargo clippy`\n-        let manifest_path = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n-        let mut metadata = cargo::metadata(manifest_path).expect(\"could not obtain cargo metadata\");\n+        let manifest_path_arg = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n+\n+        let mut metadata = cargo::metadata(&manifest_path_arg).expect(\"could not obtain cargo metadata\");\n         assert_eq!(metadata.version, 1);\n-        for target in metadata.packages.remove(0).targets {\n+\n+        let manifest_path = manifest_path_arg.map(|arg| PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..])));\n+\n+        let current_dir = std::env::current_dir();\n+\n+        let package_index = metadata.packages.iter()\n+            .position(|package| {\n+                let package_manifest_path = Path::new(&package.manifest_path);\n+                if let Some(ref manifest_path) = manifest_path {\n+                    package_manifest_path == manifest_path\n+                } else if let Ok(ref current_dir) = current_dir {\n+                    let package_manifest_directory = package_manifest_path.parent().expect(\"could not find parent directory of package manifest\");\n+                    package_manifest_directory == current_dir\n+                } else {\n+                    panic!(\"could not read current directory\")\n+                }\n+            })\n+            .expect(\"could not find matching package\");\n+        let package = metadata.packages.remove(package_index);\n+        for target in package.targets {\n             let args = std::env::args().skip(2);\n             if let Some(first) = target.kind.get(0) {\n                 if target.kind.len() > 1 || first.ends_with(\"lib\") {"}, {"sha": "8abb95c570a8b827149cddf6f25258f8d1652f8e", "filename": "tests/versioncheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ebbd00b1abb2d6d2f189288a10f23556ee997424/tests%2Fversioncheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ebbd00b1abb2d6d2f189288a10f23556ee997424/tests%2Fversioncheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fversioncheck.rs?ref=ebbd00b1abb2d6d2f189288a10f23556ee997424", "patch": "@@ -3,9 +3,9 @@ use clippy_lints::utils::cargo;\n \n #[test]\n fn check_that_clippy_lints_has_the_same_version_as_clippy() {\n-    let clippy_meta = cargo::metadata(None).expect(\"could not obtain cargo metadata\");\n+    let clippy_meta = cargo::metadata(&None).expect(\"could not obtain cargo metadata\");\n     std::env::set_current_dir(std::env::current_dir().unwrap().join(\"clippy_lints\")).unwrap();\n-    let clippy_lints_meta = cargo::metadata(None).expect(\"could not obtain cargo metadata\");\n+    let clippy_lints_meta = cargo::metadata(&None).expect(\"could not obtain cargo metadata\");\n     assert_eq!(clippy_lints_meta.packages[0].version, clippy_meta.packages[0].version);\n     for package in &clippy_meta.packages[0].dependencies {\n         if package.name == \"clippy_lints\" {"}]}