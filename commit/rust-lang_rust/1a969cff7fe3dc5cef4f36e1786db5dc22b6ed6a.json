{"sha": "1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOTY5Y2ZmN2ZlM2RjNWNlZjRmMzZlMTc4NmRiNWRjMjJiNmVkNmE=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-17T05:59:39Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-03-17T05:59:39Z"}, "message": "Remove FIXME about duplicated code", "tree": {"sha": "a1d2310544484a080d9c00f13bd6b7d8bc989833", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1d2310544484a080d9c00f13bd6b7d8bc989833"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a", "html_url": "https://github.com/rust-lang/rust/commit/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7188654ea4a0299525caf4196ef366d38c9eb98", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7188654ea4a0299525caf4196ef366d38c9eb98", "html_url": "https://github.com/rust-lang/rust/commit/d7188654ea4a0299525caf4196ef366d38c9eb98"}], "stats": {"total": 54, "additions": 25, "deletions": 29}, "files": [{"sha": "030988e5195f92c67824ec392e844e701d792c7c", "filename": "src/macros.rs", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=1a969cff7fe3dc5cef4f36e1786db5dc22b6ed6a", "patch": "@@ -400,6 +400,28 @@ pub fn rewrite_macro_def(\n     Some(result)\n }\n \n+fn register_metavariable(\n+    map: &mut HashMap<String, String>,\n+    result: &mut String,\n+    name: &str,\n+    dollar_count: usize,\n+) {\n+    let mut new_name = String::new();\n+    let mut old_name = String::new();\n+\n+    old_name.push('$');\n+    for _ in 0..(dollar_count - 1) {\n+        new_name.push('$');\n+        old_name.push('$');\n+    }\n+    new_name.push('z');\n+    new_name.push_str(&name);\n+    old_name.push_str(&name);\n+\n+    result.push_str(&new_name);\n+    map.insert(old_name, new_name);\n+}\n+\n // Replaces `$foo` with `zfoo`. We must check for name overlap to ensure we\n // aren't causing problems.\n // This should also work for escaped `$` variables, where we leave earlier `$`s.\n@@ -419,24 +441,11 @@ fn replace_names(input: &str) -> Option<(String, HashMap<String, String>)> {\n             result.push(c);\n         } else if !c.is_alphanumeric() && !cur_name.is_empty() {\n             // Terminates a name following one or more dollars.\n-            let mut new_name = String::new();\n-            let mut old_name = String::new();\n-            old_name.push('$');\n-            for _ in 0..(dollar_count - 1) {\n-                new_name.push('$');\n-                old_name.push('$');\n-            }\n-            new_name.push('z');\n-            new_name.push_str(&cur_name);\n-            old_name.push_str(&cur_name);\n-\n-            result.push_str(&new_name);\n-            substs.insert(old_name, new_name);\n+            register_metavariable(&mut substs, &mut result, &cur_name, dollar_count);\n \n             result.push(c);\n-\n             dollar_count = 0;\n-            cur_name = String::new();\n+            cur_name.clear();\n         } else if c == '(' && cur_name.is_empty() {\n             // FIXME: Support macro def with repeat.\n             return None;\n@@ -445,21 +454,8 @@ fn replace_names(input: &str) -> Option<(String, HashMap<String, String>)> {\n         }\n     }\n \n-    // FIXME: duplicate code\n     if !cur_name.is_empty() {\n-        let mut new_name = String::new();\n-        let mut old_name = String::new();\n-        old_name.push('$');\n-        for _ in 0..(dollar_count - 1) {\n-            new_name.push('$');\n-            old_name.push('$');\n-        }\n-        new_name.push('z');\n-        new_name.push_str(&cur_name);\n-        old_name.push_str(&cur_name);\n-\n-        result.push_str(&new_name);\n-        substs.insert(old_name, new_name);\n+        register_metavariable(&mut substs, &mut result, &cur_name, dollar_count);\n     }\n \n     debug!(\"replace_names `{}` {:?}\", result, substs);"}]}