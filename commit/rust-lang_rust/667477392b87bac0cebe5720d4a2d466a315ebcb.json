{"sha": "667477392b87bac0cebe5720d4a2d466a315ebcb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NzQ3NzM5MmI4N2JhYzBjZWJlNTcyMGQ0YTJkNDY2YTMxNWViY2I=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-07T13:54:07Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-11-07T13:54:07Z"}, "message": "incr.comp.: Mark more input nodes as inputs.", "tree": {"sha": "4650787d2e91333871a169358ac37d710ab34c93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4650787d2e91333871a169358ac37d710ab34c93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/667477392b87bac0cebe5720d4a2d466a315ebcb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/667477392b87bac0cebe5720d4a2d466a315ebcb", "html_url": "https://github.com/rust-lang/rust/commit/667477392b87bac0cebe5720d4a2d466a315ebcb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/667477392b87bac0cebe5720d4a2d466a315ebcb/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70f9a0b214b7ce6f754b8bf8c52ffc119af444eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/70f9a0b214b7ce6f754b8bf8c52ffc119af444eb", "html_url": "https://github.com/rust-lang/rust/commit/70f9a0b214b7ce6f754b8bf8c52ffc119af444eb"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "3ecaa1d66a7b7c839a0c80dc9a97cf37276c5c28", "filename": "src/librustc/dep_graph/dep_node.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/667477392b87bac0cebe5720d4a2d466a315ebcb/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/667477392b87bac0cebe5720d4a2d466a315ebcb/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fdep_node.rs?ref=667477392b87bac0cebe5720d4a2d466a315ebcb", "patch": "@@ -537,7 +537,7 @@ define_dep_nodes!( <'tcx>\n     // The set of impls for a given trait.\n     [] TraitImpls(DefId),\n \n-    [] AllLocalTraitImpls,\n+    [input] AllLocalTraitImpls,\n \n     // Trait selection cache is a little funny. Given a trait\n     // reference like `Foo: SomeTrait<Bar>`, there could be\n@@ -588,7 +588,7 @@ define_dep_nodes!( <'tcx>\n     [eval_always] LintLevels,\n     [] Specializes { impl1: DefId, impl2: DefId },\n     [input] InScopeTraits(DefIndex),\n-    [] ModuleExports(DefId),\n+    [input] ModuleExports(DefId),\n     [] IsSanitizerRuntime(CrateNum),\n     [] IsProfilerRuntime(CrateNum),\n     [] GetPanicStrategy(CrateNum),\n@@ -598,37 +598,37 @@ define_dep_nodes!( <'tcx>\n     [] NativeLibraries(CrateNum),\n     [] PluginRegistrarFn(CrateNum),\n     [] DeriveRegistrarFn(CrateNum),\n-    [] CrateDisambiguator(CrateNum),\n-    [] CrateHash(CrateNum),\n-    [] OriginalCrateName(CrateNum),\n+    [input] CrateDisambiguator(CrateNum),\n+    [input] CrateHash(CrateNum),\n+    [input] OriginalCrateName(CrateNum),\n \n     [] ImplementationsOfTrait { krate: CrateNum, trait_id: DefId },\n     [] AllTraitImplementations(CrateNum),\n \n     [] IsDllimportForeignItem(DefId),\n     [] IsStaticallyIncludedForeignItem(DefId),\n     [] NativeLibraryKind(DefId),\n-    [] LinkArgs,\n+    [input] LinkArgs,\n \n-    [] NamedRegion(DefIndex),\n-    [] IsLateBound(DefIndex),\n-    [] ObjectLifetimeDefaults(DefIndex),\n+    [input] NamedRegion(DefIndex),\n+    [input] IsLateBound(DefIndex),\n+    [input] ObjectLifetimeDefaults(DefIndex),\n \n     [] Visibility(DefId),\n     [] DepKind(CrateNum),\n-    [] CrateName(CrateNum),\n+    [input] CrateName(CrateNum),\n     [] ItemChildren(DefId),\n     [] ExternModStmtCnum(DefId),\n-    [] GetLangItems,\n+    [input] GetLangItems,\n     [] DefinedLangItems(CrateNum),\n     [] MissingLangItems(CrateNum),\n     [] ExternConstBody(DefId),\n     [] VisibleParentMap,\n     [] MissingExternCrateItem(CrateNum),\n     [] UsedCrateSource(CrateNum),\n-    [] PostorderCnums,\n-    [] HasCloneClosures(CrateNum),\n-    [] HasCopyClosures(CrateNum),\n+    [input] PostorderCnums,\n+    [input] HasCloneClosures(CrateNum),\n+    [input] HasCopyClosures(CrateNum),\n \n     // This query is not expected to have inputs -- as a result, it's\n     // not a good candidate for \"replay\" because it's essentially a\n@@ -638,19 +638,19 @@ define_dep_nodes!( <'tcx>\n     // may save a bit of time.\n     [anon] EraseRegionsTy { ty: Ty<'tcx> },\n \n-    [] Freevars(DefId),\n-    [] MaybeUnusedTraitImport(DefId),\n+    [input] Freevars(DefId),\n+    [input] MaybeUnusedTraitImport(DefId),\n     [] MaybeUnusedExternCrates,\n     [] StabilityIndex,\n-    [] AllCrateNums,\n+    [input] AllCrateNums,\n     [] ExportedSymbols(CrateNum),\n     [eval_always] CollectAndPartitionTranslationItems,\n     [] ExportName(DefId),\n     [] ContainsExternIndicator(DefId),\n     [] IsTranslatedFunction(DefId),\n     [] CodegenUnit(InternedString),\n     [] CompileCodegenUnit(InternedString),\n-    [] OutputFilenames,\n+    [input] OutputFilenames,\n     [anon] NormalizeTy,\n     // We use this for most things when incr. comp. is turned off.\n     [] Null,"}]}