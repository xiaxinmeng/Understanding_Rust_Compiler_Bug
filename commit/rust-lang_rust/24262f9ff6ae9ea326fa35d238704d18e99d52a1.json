{"sha": "24262f9ff6ae9ea326fa35d238704d18e99d52a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MjYyZjlmZjZhZTllYTMyNmZhMzVkMjM4NzA0ZDE4ZTk5ZDUyYTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-13T17:20:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-13T17:20:58Z"}, "message": "minor", "tree": {"sha": "4072b940cd1081c404dabe6026b14b4ca0141c2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4072b940cd1081c404dabe6026b14b4ca0141c2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24262f9ff6ae9ea326fa35d238704d18e99d52a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24262f9ff6ae9ea326fa35d238704d18e99d52a1", "html_url": "https://github.com/rust-lang/rust/commit/24262f9ff6ae9ea326fa35d238704d18e99d52a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24262f9ff6ae9ea326fa35d238704d18e99d52a1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949a6ec469507db5e79578da94e17cb63cb54d19", "url": "https://api.github.com/repos/rust-lang/rust/commits/949a6ec469507db5e79578da94e17cb63cb54d19", "html_url": "https://github.com/rust-lang/rust/commit/949a6ec469507db5e79578da94e17cb63cb54d19"}], "stats": {"total": 78, "additions": 34, "deletions": 44}, "files": [{"sha": "e3974e1ae6c58053859b691cde055227ccd27591", "filename": "crates/ide/src/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 43, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics.rs?ref=24262f9ff6ae9ea326fa35d238704d18e99d52a1", "patch": "@@ -251,16 +251,6 @@ pub(crate) fn diagnostics(\n     res\n }\n \n-fn diagnostic_with_fix<D: DiagnosticWithFixes>(\n-    d: &D,\n-    sema: &Semantics<RootDatabase>,\n-    resolve: &AssistResolveStrategy,\n-) -> Diagnostic {\n-    Diagnostic::error(sema.diagnostics_display_range(d.display_source()).range, d.message())\n-        .with_fixes(d.fixes(sema, resolve))\n-        .with_code(Some(d.code()))\n-}\n-\n fn warning_with_fix<D: DiagnosticWithFixes>(\n     d: &D,\n     sema: &Semantics<RootDatabase>,\n@@ -446,39 +436,6 @@ mod tests {\n         }\n     }\n \n-    #[test]\n-    fn range_mapping_out_of_macros() {\n-        // FIXME: this is very wrong, but somewhat tricky to fix.\n-        check_fix(\n-            r#\"\n-fn some() {}\n-fn items() {}\n-fn here() {}\n-\n-macro_rules! id { ($($tt:tt)*) => { $($tt)*}; }\n-\n-fn main() {\n-    let _x = id![Foo { a: $042 }];\n-}\n-\n-pub struct Foo { pub a: i32, pub b: i32 }\n-\"#,\n-            r#\"\n-fn some(, b: () ) {}\n-fn items() {}\n-fn here() {}\n-\n-macro_rules! id { ($($tt:tt)*) => { $($tt)*}; }\n-\n-fn main() {\n-    let _x = id![Foo { a: 42 }];\n-}\n-\n-pub struct Foo { pub a: i32, pub b: i32 }\n-\"#,\n-        );\n-    }\n-\n     #[test]\n     fn test_check_unnecessary_braces_in_use_statement() {\n         check_diagnostics("}, {"sha": "c4b6a3679ddd13eda6d1f6d0e35007e3934d139e", "filename": "crates/ide/src/diagnostics/missing_fields.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_fields.rs?ref=24262f9ff6ae9ea326fa35d238704d18e99d52a1", "patch": "@@ -93,6 +93,39 @@ fn baz(s: S) {\n         );\n     }\n \n+    #[test]\n+    fn range_mapping_out_of_macros() {\n+        // FIXME: this is very wrong, but somewhat tricky to fix.\n+        check_fix(\n+            r#\"\n+fn some() {}\n+fn items() {}\n+fn here() {}\n+\n+macro_rules! id { ($($tt:tt)*) => { $($tt)*}; }\n+\n+fn main() {\n+    let _x = id![Foo { a: $042 }];\n+}\n+\n+pub struct Foo { pub a: i32, pub b: i32 }\n+\"#,\n+            r#\"\n+fn some(, b: () ) {}\n+fn items() {}\n+fn here() {}\n+\n+macro_rules! id { ($($tt:tt)*) => { $($tt)*}; }\n+\n+fn main() {\n+    let _x = id![Foo { a: 42 }];\n+}\n+\n+pub struct Foo { pub a: i32, pub b: i32 }\n+\"#,\n+        );\n+    }\n+\n     #[test]\n     fn test_fill_struct_fields_empty() {\n         check_fix("}, {"sha": "06005d156c0552cc87f07f2aea9dfd253da6a59d", "filename": "crates/ide/src/diagnostics/missing_ok_or_some_in_tail_expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_ok_or_some_in_tail_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24262f9ff6ae9ea326fa35d238704d18e99d52a1/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_ok_or_some_in_tail_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Fmissing_ok_or_some_in_tail_expr.rs?ref=24262f9ff6ae9ea326fa35d238704d18e99d52a1", "patch": "@@ -1,4 +1,4 @@\n-use hir::{db::AstDatabase, Semantics};\n+use hir::db::AstDatabase;\n use ide_assists::Assist;\n use ide_db::source_change::SourceChange;\n use syntax::AstNode;"}]}