{"sha": "55d207a44fef01848fe7224869c97bc786bfd89c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1ZDIwN2E0NGZlZjAxODQ4ZmU3MjI0ODY5Yzk3YmM3ODZiZmQ4OWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-21T10:23:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-21T10:23:37Z"}, "message": "tweak wording", "tree": {"sha": "2c07ccbdf27e6b0463310cf57a9b843e467582db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c07ccbdf27e6b0463310cf57a9b843e467582db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55d207a44fef01848fe7224869c97bc786bfd89c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55d207a44fef01848fe7224869c97bc786bfd89c", "html_url": "https://github.com/rust-lang/rust/commit/55d207a44fef01848fe7224869c97bc786bfd89c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55d207a44fef01848fe7224869c97bc786bfd89c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cac20995eb2ed411dfea26a5391f12134877b11", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cac20995eb2ed411dfea26a5391f12134877b11", "html_url": "https://github.com/rust-lang/rust/commit/7cac20995eb2ed411dfea26a5391f12134877b11"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "70159402b6278f820ae496c4eca9132965c775f8", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55d207a44fef01848fe7224869c97bc786bfd89c/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55d207a44fef01848fe7224869c97bc786bfd89c/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=55d207a44fef01848fe7224869c97bc786bfd89c", "patch": "@@ -358,7 +358,7 @@ pub fn size_of_val<T: ?Sized>(val: &T) -> usize {\n ///     - an (unstable) [extern type], then this function is always safe to\n ///       call, but may panic or otherwise return the wrong value, as the\n ///       extern type's layout is not known. This is the same behavior as\n-///       [`size_of_val`] on a reference to an extern type tail.\n+///       [`size_of_val`] on a reference to a type with extern type tail.\n ///     - otherwise, it is conservatively not allowed to call this function.\n ///\n /// [slice]: ../../std/primitive.slice.html\n@@ -493,7 +493,7 @@ pub fn align_of_val<T: ?Sized>(val: &T) -> usize {\n ///     - an (unstable) [extern type], then this function is always safe to\n ///       call, but may panic or otherwise return the wrong value, as the\n ///       extern type's layout is not known. This is the same behavior as\n-///       [`align_of_val`] on a reference to an extern type tail.\n+///       [`align_of_val`] on a reference to a type with extern type tail.\n ///     - otherwise, it is conservatively not allowed to call this function.\n ///\n /// [slice]: ../../std/primitive.slice.html"}]}