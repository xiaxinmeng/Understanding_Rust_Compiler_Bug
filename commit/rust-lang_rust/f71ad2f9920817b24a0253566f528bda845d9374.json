{"sha": "f71ad2f9920817b24a0253566f528bda845d9374", "node_id": "C_kwDOAAsO6NoAKGY3MWFkMmY5OTIwODE3YjI0YTAyNTM1NjZmNTI4YmRhODQ1ZDkzNzQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-05T07:59:26Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-05T08:43:58Z"}, "message": "Suggest 'static when in static/const items.", "tree": {"sha": "ee57d616dfa46da4bc806171a51d1f4ada64c49b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee57d616dfa46da4bc806171a51d1f4ada64c49b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f71ad2f9920817b24a0253566f528bda845d9374", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f71ad2f9920817b24a0253566f528bda845d9374", "html_url": "https://github.com/rust-lang/rust/commit/f71ad2f9920817b24a0253566f528bda845d9374", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f71ad2f9920817b24a0253566f528bda845d9374/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af8739b96efa97694526e478985960b4c9fc09f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8739b96efa97694526e478985960b4c9fc09f5", "html_url": "https://github.com/rust-lang/rust/commit/af8739b96efa97694526e478985960b4c9fc09f5"}], "stats": {"total": 46, "additions": 35, "deletions": 11}, "files": [{"sha": "c440e93fe0af1fdd3b516663b7faea8224113173", "filename": "compiler/rustc_typeck/src/structured_errors/wrong_number_of_generic_args.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f71ad2f9920817b24a0253566f528bda845d9374/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f71ad2f9920817b24a0253566f528bda845d9374/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fstructured_errors%2Fwrong_number_of_generic_args.rs?ref=f71ad2f9920817b24a0253566f528bda845d9374", "patch": "@@ -317,6 +317,30 @@ impl<'a, 'tcx> WrongNumberOfGenericArgs<'a, 'tcx> {\n                     let hir::ParamName::Plain(name) = p.name else { return None };\n                     Some(name.to_string())\n                 }));\n+                // Suggest `'static` when in const/static item-like.\n+                if let hir::Node::Item(hir::Item {\n+                    kind: hir::ItemKind::Static { .. } | hir::ItemKind::Const { .. },\n+                    ..\n+                })\n+                | hir::Node::TraitItem(hir::TraitItem {\n+                    kind: hir::TraitItemKind::Const { .. },\n+                    ..\n+                })\n+                | hir::Node::ImplItem(hir::ImplItem {\n+                    kind: hir::ImplItemKind::Const { .. },\n+                    ..\n+                })\n+                | hir::Node::ForeignItem(hir::ForeignItem {\n+                    kind: hir::ForeignItemKind::Static { .. },\n+                    ..\n+                })\n+                | hir::Node::AnonConst(..) = node\n+                {\n+                    ret.extend(\n+                        std::iter::repeat(\"'static\".to_owned())\n+                            .take(num_params_to_take.saturating_sub(ret.len())),\n+                    );\n+                }\n                 if ret.len() >= num_params_to_take {\n                     return ret[..num_params_to_take].join(\", \");\n                 }"}, {"sha": "b395a1cfd8a62c6afdc0be95c5e3d3e8fd8da104", "filename": "src/test/ui/generic-associated-types/elided-in-expr-position.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fgeneric-associated-types%2Felided-in-expr-position.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fgeneric-associated-types%2Felided-in-expr-position.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Felided-in-expr-position.stderr?ref=f71ad2f9920817b24a0253566f528bda845d9374", "patch": "@@ -11,7 +11,7 @@ LL |     type Assoc<'a> where Self: 'a;\n    |          ^^^^^ --\n help: add missing lifetime argument\n    |\n-LL |     fn g(&self) -> Self::Assoc<'_>;\n+LL |     fn g(&self) -> Self::Assoc<'a>;\n    |                          ~~~~~~~~~\n \n error[E0107]: missing generics for associated type `Trait::Assoc`\n@@ -27,7 +27,7 @@ LL |     type Assoc<'a> where Self: 'a;\n    |          ^^^^^ --\n help: add missing lifetime argument\n    |\n-LL |     fn g(&self) -> Self::Assoc<'_> {\n+LL |     fn g(&self) -> Self::Assoc<'a> {\n    |                          ~~~~~~~~~\n \n error: aborting due to 2 previous errors"}, {"sha": "c664b3ee6683b4473c3be23e7629492865a1c1db", "filename": "src/test/ui/generic-associated-types/issue-81862.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-81862.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-81862.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-81862.stderr?ref=f71ad2f9920817b24a0253566f528bda845d9374", "patch": "@@ -11,7 +11,7 @@ LL |     type Item<'a>;\n    |          ^^^^ --\n help: add missing lifetime argument\n    |\n-LL |     fn next(&mut self) -> Option<Self::Item<'_>>;\n+LL |     fn next(&mut self) -> Option<Self::Item<'a>>;\n    |                                        ~~~~~~~~\n \n error: aborting due to previous error"}, {"sha": "1498337549d81f2f976ba5050cace6126002087f", "filename": "src/test/ui/suggestions/missing-lifetime-specifier.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f71ad2f9920817b24a0253566f528bda845d9374/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr?ref=f71ad2f9920817b24a0253566f528bda845d9374", "patch": "@@ -171,8 +171,8 @@ LL | pub union Qux<'t, 'k, I> {\n    |           ^^^ --  --\n help: add missing lifetime argument\n    |\n-LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, '_, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                                       ++++\n+LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n+   |                                                       +++++++++\n \n error[E0107]: this union takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:43:44\n@@ -243,8 +243,8 @@ LL | pub union Qux<'t, 'k, I> {\n    |           ^^^ --  --\n help: add missing lifetime argument\n    |\n-LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, '_, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                                       ++++\n+LL |     static e: RefCell<HashMap<i32, Vec<Vec<Qux<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n+   |                                                       +++++++++\n \n error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n   --> $DIR/missing-lifetime-specifier.rs:51:45\n@@ -261,8 +261,8 @@ LL | trait Tar<'t, 'k, I> {}\n    |       ^^^ --  --\n help: add missing lifetime argument\n    |\n-LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, '_, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                                        ++++\n+LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n+   |                                                        +++++++++\n \n error[E0106]: missing lifetime specifier\n   --> $DIR/missing-lifetime-specifier.rs:51:44\n@@ -360,8 +360,8 @@ LL | trait Tar<'t, 'k, I> {}\n    |       ^^^ --  --\n help: add missing lifetime argument\n    |\n-LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, '_, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                                        ++++\n+LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, 'static, i32>>>>> = RefCell::new(HashMap::new());\n+   |                                                        +++++++++\n \n error: aborting due to 24 previous errors\n "}]}