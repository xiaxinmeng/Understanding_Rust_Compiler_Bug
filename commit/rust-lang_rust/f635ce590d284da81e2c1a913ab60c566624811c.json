{"sha": "f635ce590d284da81e2c1a913ab60c566624811c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2MzVjZTU5MGQyODRkYTgxZTJjMWE5MTNhYjYwYzU2NjYyNDgxMWM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-06T23:39:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-06T23:39:33Z"}, "message": "Rollup merge of #63308 - spastorino:place-ref-base-is-ref, r=oli-obk\n\nPlaceRef's base is already a reference\n\nr? @oli-obk", "tree": {"sha": "7c7fdf79a260988031076f55f0c3e45db8973f17", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c7fdf79a260988031076f55f0c3e45db8973f17"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f635ce590d284da81e2c1a913ab60c566624811c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdSg+1CRBK7hj4Ov3rIwAAdHIIAAsAIwiORofIqWw9jKcWhVPb\nbMpd4rHzTQoeIOQuIYSYKEOEgkmRU/e5liuCc7JAA2s3AmywyplrJPNsKE4mDi18\nMEPuXWQxe396bh3LpaCmUf4ybqmxTIx7CmoBlCl5mlBiQ6FnMfV0yXSdptYfVYqu\n6wK/MDkIZqtIOZr2pS2EvPU/3BztVSg/aXCL0CORU/6XhkoVQDxMB5aVeQQrcF8J\nsLp4Z3Jnp0sYq7IKIW5nzhIDN+sJf0J8DY6Kk5uk3rVb/cEwButMcb/LE/OyxD1t\nlPSm65FvWnm52te0bzJkjAKkB199pw8mVzQFlqoPk2cEsh/VLP3x6u0k4LdkRlQ=\n=zFyC\n-----END PGP SIGNATURE-----\n", "payload": "tree 7c7fdf79a260988031076f55f0c3e45db8973f17\nparent 3c76ab3e73c958bec84e144fd9ceb315d3778d61\nparent f85fc7168c0fb3d3f52eb66fe601571d7b1e4e67\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565134773 +0200\ncommitter GitHub <noreply@github.com> 1565134773 +0200\n\nRollup merge of #63308 - spastorino:place-ref-base-is-ref, r=oli-obk\n\nPlaceRef's base is already a reference\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f635ce590d284da81e2c1a913ab60c566624811c", "html_url": "https://github.com/rust-lang/rust/commit/f635ce590d284da81e2c1a913ab60c566624811c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f635ce590d284da81e2c1a913ab60c566624811c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c76ab3e73c958bec84e144fd9ceb315d3778d61", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c76ab3e73c958bec84e144fd9ceb315d3778d61", "html_url": "https://github.com/rust-lang/rust/commit/3c76ab3e73c958bec84e144fd9ceb315d3778d61"}, {"sha": "f85fc7168c0fb3d3f52eb66fe601571d7b1e4e67", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85fc7168c0fb3d3f52eb66fe601571d7b1e4e67", "html_url": "https://github.com/rust-lang/rust/commit/f85fc7168c0fb3d3f52eb66fe601571d7b1e4e67"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "99899aa390c4a05c6cc0932d13b0aaf0c24137f0", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f635ce590d284da81e2c1a913ab60c566624811c/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f635ce590d284da81e2c1a913ab60c566624811c/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=f635ce590d284da81e2c1a913ab60c566624811c", "patch": "@@ -177,7 +177,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                 buf.push_str(&self.infcx.tcx.item_name(*def_id).to_string());\n             }\n             PlaceRef {\n-                ref base,\n+                base,\n                 projection: Some(ref proj),\n             } => {\n                 match proj.elem {\n@@ -197,7 +197,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                 // FIXME turn this recursion into iteration\n                                 self.append_place_to_string(\n                                     PlaceRef {\n-                                        base: &base,\n+                                        base,\n                                         projection: &proj.base,\n                                     },\n                                     buf,\n@@ -210,7 +210,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                         if self.body.local_decls[*local].is_ref_for_guard() {\n                                             self.append_place_to_string(\n                                                 PlaceRef {\n-                                                    base: &base,\n+                                                    base,\n                                                     projection: &proj.base,\n                                                 },\n                                                 buf,\n@@ -222,7 +222,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                             buf.push_str(&\"*\");\n                                             self.append_place_to_string(\n                                                 PlaceRef {\n-                                                    base: &base,\n+                                                    base,\n                                                     projection: &proj.base,\n                                                 },\n                                                 buf,\n@@ -236,7 +236,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                                         buf.push_str(&\"*\");\n                                         self.append_place_to_string(\n                                             PlaceRef {\n-                                                base: &base,\n+                                                base,\n                                                 projection: &proj.base,\n                                             },\n                                             buf,\n@@ -251,7 +251,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                     ProjectionElem::Downcast(..) => {\n                         self.append_place_to_string(\n                             PlaceRef {\n-                                base: &base,\n+                                base,\n                                 projection: &proj.base,\n                             },\n                             buf,\n@@ -273,12 +273,12 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                             buf.push_str(&name);\n                         } else {\n                             let field_name = self.describe_field(PlaceRef {\n-                                base: base,\n+                                base,\n                                 projection: &proj.base,\n                             }, field);\n                             self.append_place_to_string(\n                                 PlaceRef {\n-                                    base: &base,\n+                                    base,\n                                     projection: &proj.base,\n                                 },\n                                 buf,\n@@ -293,7 +293,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n \n                         self.append_place_to_string(\n                             PlaceRef {\n-                                base: &base,\n+                                base,\n                                 projection: &proj.base,\n                             },\n                             buf,\n@@ -313,7 +313,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                         // to avoid confusing the end-user\n                         self.append_place_to_string(\n                             PlaceRef {\n-                                base: &base,\n+                                base,\n                                 projection: &proj.base,\n                             },\n                             buf,"}]}