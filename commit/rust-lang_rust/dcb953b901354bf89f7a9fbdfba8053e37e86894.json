{"sha": "dcb953b901354bf89f7a9fbdfba8053e37e86894", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYjk1M2I5MDEzNTRiZjg5ZjdhOWZiZGZiYTgwNTNlMzdlODY4OTQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-13T11:32:46Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-13T11:32:46Z"}, "message": "Add trailing comma when using Mixed indent style with newline", "tree": {"sha": "61253e8af7e9f04f01e9e44536540b02d1977155", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61253e8af7e9f04f01e9e44536540b02d1977155"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb953b901354bf89f7a9fbdfba8053e37e86894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb953b901354bf89f7a9fbdfba8053e37e86894", "html_url": "https://github.com/rust-lang/rust/commit/dcb953b901354bf89f7a9fbdfba8053e37e86894", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb953b901354bf89f7a9fbdfba8053e37e86894/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "html_url": "https://github.com/rust-lang/rust/commit/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9"}], "stats": {"total": 63, "additions": 38, "deletions": 25}, "files": [{"sha": "09220e9ac80c587d5e6f8b2a4774f36221da8d1c", "filename": "src/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -501,10 +501,12 @@ where\n             DefinitiveListTactic::Mixed\n         },\n     };\n+    let mut ends_with_newline = tactic.ends_with_newline(context.config.array_layout());\n     if context.config.array_horizontal_layout_threshold() > 0 &&\n         items.len() > context.config.array_horizontal_layout_threshold()\n     {\n         tactic = DefinitiveListTactic::Mixed;\n+        ends_with_newline = false;\n         if context.config.array_layout() == IndentStyle::Block {\n             nested_shape = try_opt!(\n                 shape\n@@ -525,7 +527,7 @@ where\n             SeparatorTactic::Vertical\n         },\n         shape: nested_shape,\n-        ends_with_newline: false,\n+        ends_with_newline: ends_with_newline,\n         config: context.config,\n     };\n     let list_str = try_opt!(write_list(&items, &fmt));"}, {"sha": "aa83d9a2b0dcfcd4bc1eda7cd8ba40136e832bce", "filename": "src/items.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -2204,21 +2204,18 @@ fn rewrite_args(\n         .and_then(|item| item.post_comment.as_ref())\n         .map_or(false, |s| s.trim().starts_with(\"//\"));\n \n-    let (indent, trailing_comma, end_with_newline) = match context.config.fn_args_layout() {\n-        IndentStyle::Block if fits_in_one_line => (\n-            indent.block_indent(context.config),\n-            SeparatorTactic::Never,\n-            true,\n-        ),\n+    let (indent, trailing_comma) = match context.config.fn_args_layout() {\n+        IndentStyle::Block if fits_in_one_line => {\n+            (indent.block_indent(context.config), SeparatorTactic::Never)\n+        }\n         IndentStyle::Block => (\n             indent.block_indent(context.config),\n             context.config.trailing_comma(),\n-            true,\n         ),\n         IndentStyle::Visual if last_line_ends_with_comment => {\n-            (arg_indent, context.config.trailing_comma(), true)\n+            (arg_indent, context.config.trailing_comma())\n         }\n-        IndentStyle::Visual => (arg_indent, SeparatorTactic::Never, false),\n+        IndentStyle::Visual => (arg_indent, SeparatorTactic::Never),\n     };\n \n     let tactic = definitive_tactic(\n@@ -2242,7 +2239,7 @@ fn rewrite_args(\n             trailing_comma\n         },\n         shape: Shape::legacy(budget, indent),\n-        ends_with_newline: end_with_newline,\n+        ends_with_newline: tactic.ends_with_newline(context.config.fn_args_layout()),\n         config: context.config,\n     };\n \n@@ -2406,8 +2403,6 @@ where\n     let item_vec = items.collect::<Vec<_>>();\n \n     let tactic = definitive_tactic(&item_vec, ListTactic::HorizontalVertical, one_line_budget);\n-    let ends_with_newline = context.config.generics_indent() == IndentStyle::Block &&\n-        tactic == DefinitiveListTactic::Vertical;\n     let fmt = ListFormatting {\n         tactic: tactic,\n         separator: \",\",\n@@ -2417,7 +2412,7 @@ where\n             context.config.trailing_comma()\n         },\n         shape: shape,\n-        ends_with_newline: ends_with_newline,\n+        ends_with_newline: tactic.ends_with_newline(context.config.generics_indent()),\n         config: context.config,\n     };\n \n@@ -2631,7 +2626,7 @@ fn rewrite_where_clause(\n         separator: \",\",\n         trailing_separator: comma_tactic,\n         shape: Shape::legacy(budget, offset),\n-        ends_with_newline: true,\n+        ends_with_newline: tactic.ends_with_newline(context.config.where_pred_indent()),\n         config: context.config,\n     };\n     let preds_str = try_opt!(write_list(&item_vec, &fmt));"}, {"sha": "55db7cd9c0008c2fee11acefe56430812c68e654", "filename": "src/lists.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -124,6 +124,15 @@ pub enum DefinitiveListTactic {\n     Mixed,\n }\n \n+impl DefinitiveListTactic {\n+    pub fn ends_with_newline(&self, indent_style: IndentStyle) -> bool {\n+        match indent_style {\n+            IndentStyle::Block => *self != DefinitiveListTactic::Horizontal,\n+            IndentStyle::Visual => false,\n+        }\n+    }\n+}\n+\n pub fn definitive_tactic<I, T>(items: I, tactic: ListTactic, width: usize) -> DefinitiveListTactic\n where\n     I: IntoIterator<Item = T> + Clone,\n@@ -169,7 +178,7 @@ where\n \n     // Now that we know how we will layout, we can decide for sure if there\n     // will be a trailing separator.\n-    let trailing_separator = needs_trailing_separator(formatting.trailing_separator, tactic);\n+    let mut trailing_separator = needs_trailing_separator(formatting.trailing_separator, tactic);\n     let mut result = String::new();\n     let cloned_items = items.clone();\n     let mut iter = items.into_iter().enumerate().peekable();\n@@ -182,7 +191,7 @@ where\n         let inner_item = try_opt!(item.item.as_ref());\n         let first = i == 0;\n         let last = iter.peek().is_none();\n-        let separate = !last || trailing_separator;\n+        let mut separate = !last || trailing_separator;\n         let item_sep_len = if separate { sep_len } else { 0 };\n \n         // Item string may be multi-line. Its length (used for block comment alignment)\n@@ -213,6 +222,13 @@ where\n                     result.push('\\n');\n                     result.push_str(indent_str);\n                     line_len = 0;\n+                    if tactic == DefinitiveListTactic::Mixed && formatting.ends_with_newline {\n+                        if last {\n+                            separate = true;\n+                        } else {\n+                            trailing_separator = true;\n+                        }\n+                    }\n                 }\n \n                 if line_len > 0 {"}, {"sha": "c34a3bfaa6a820116fa703b6971ae1c2af5d05fa", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -360,7 +360,7 @@ where\n             context.config.trailing_comma()\n         },\n         shape: list_shape,\n-        ends_with_newline: false,\n+        ends_with_newline: tactic.ends_with_newline(context.config.fn_call_style()),\n         config: context.config,\n     };\n "}, {"sha": "99283722beea1e331e37540693024ab8d9ad1c2a", "filename": "tests/target/configs-fn_args_density-compressed.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Fconfigs-fn_args_density-compressed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Fconfigs-fn_args_density-compressed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_args_density-compressed.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -10,12 +10,12 @@ trait Lorem {\n \n     fn lorem(\n         ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, consectetur: onsectetur,\n-        adipiscing: Adipiscing, elit: Elit\n+        adipiscing: Adipiscing, elit: Elit,\n     );\n \n     fn lorem(\n         ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Amet, consectetur: onsectetur,\n-        adipiscing: Adipiscing, elit: Elit\n+        adipiscing: Adipiscing, elit: Elit,\n     ) {\n         // body\n     }"}, {"sha": "bf87553dedcf3902487923b8278976b788b75c78", "filename": "tests/target/fn-custom.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ffn-custom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ffn-custom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -4,15 +4,15 @@\n // Test compressed layout of args.\n fn foo(\n     a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc, d: Ddddddddddddddddddddddddd,\n-    e: Eeeeeeeeeeeeeeeeeee\n+    e: Eeeeeeeeeeeeeeeeeee,\n ) {\n     foo();\n }\n \n impl Foo {\n     fn foo(\n         self, a: Aaaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbbbb, c: Ccccccccccccccccc,\n-        d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee\n+        d: Ddddddddddddddddddddddddd, e: Eeeeeeeeeeeeeeeeeee,\n     ) {\n         foo();\n     }"}, {"sha": "e381b6e62314d49a46303ce03d683efc801e03ee", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -42,7 +42,7 @@ where\n         C,\n         D,\n         // pre comment\n-        E, /* last comment */\n+        E, // last comment\n     ) -> &SomeType,\n {\n     arg(a, b, c, d, e)"}, {"sha": "4ac6df5def85dee9455643d9c575ddc345d0d269", "filename": "tests/target/hard-tabs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Fhard-tabs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Fhard-tabs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fhard-tabs.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -67,7 +67,7 @@ fn main() {\n \t\t\tC,\n \t\t\tD,\n \t\t\t// pre comment\n-\t\t\tE, /* last comment */\n+\t\t\tE, // last comment\n \t\t) -> &SomeType,\n \t{\n \t\targ(a, b, c, d, e)"}, {"sha": "5a12989c857c668fce6abdb513a9cae15bc03d12", "filename": "tests/target/type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ftype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb953b901354bf89f7a9fbdfba8053e37e86894/tests%2Ftarget%2Ftype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftype.rs?ref=dcb953b901354bf89f7a9fbdfba8053e37e86894", "patch": "@@ -25,7 +25,7 @@ struct F {\n         y: String, // comment 3\n         z: Foo,\n         // comment\n-        ... /* comment 2 */\n+        ... // comment 2\n     ),\n }\n "}]}