{"sha": "dcb4083ed94d0c14be8f731fca54b4c94fab6b64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYjQwODNlZDk0ZDBjMTRiZThmNzMxZmNhNTRiNGM5NGZhYjZiNjQ=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-23T18:44:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-23T18:44:02Z"}, "message": "Rollup merge of #80805 - camelid:iter-by_ref-example, r=steveklabnik\n\nImprove `Iterator::by_ref` example\n\nI split the example into two: one that fails to compile, and one that\nworks. I also made them identical except for the addition of `by_ref`\nso we don't confuse readers with random differences.\n\ncc `@steveklabnik,` who is the one that added the previous version of this example", "tree": {"sha": "a02dafa2d964066e5986fc8f12ce47bb11bc9e81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a02dafa2d964066e5986fc8f12ce47bb11bc9e81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcb4083ed94d0c14be8f731fca54b4c94fab6b64", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggxVzCRBK7hj4Ov3rIwAAhn4IAIbXGjS0ndmahtyo7hK7v2NX\nfclBxkn6K/nkscJKPoBNHk882CWcB40roUf85Q+MkSo5JFg3I/++9OIUypp0gmFx\nezZRRfIo0BDTnkNv9AhUnXQgL2coeCa7CAL/O7uXKdo3APXByXJ7Z4PeB+moGzkf\n3gw/2z9otdGR3J6xZ6EQbETOrM8Ucbf0+xXb3BS35WyhboI6FJXCKzl39erVPssx\nT765L5lC+ChYZW5rfjdibEKLmCm4oKQsn6Or5M7JijsEY8Ex7qeXml8FLTl5xlj0\nbdPSVJ+/9kKriJyMgP9n/GUk+ZpGFEKwwtMN1gChUrZNyeCuJpY68KaxstfA2ek=\n=Hr/n\n-----END PGP SIGNATURE-----\n", "payload": "tree a02dafa2d964066e5986fc8f12ce47bb11bc9e81\nparent 484c61943f818272719bac81f6d5709fc5456438\nparent 49ccc3f320a4728b80f393d8a60fa4466f8a4c0c\nauthor Yuki Okushi <jtitor@2k36.org> 1619203442 +0900\ncommitter GitHub <noreply@github.com> 1619203442 +0900\n\nRollup merge of #80805 - camelid:iter-by_ref-example, r=steveklabnik\n\nImprove `Iterator::by_ref` example\n\nI split the example into two: one that fails to compile, and one that\nworks. I also made them identical except for the addition of `by_ref`\nso we don't confuse readers with random differences.\n\ncc `@steveklabnik,` who is the one that added the previous version of this example\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4083ed94d0c14be8f731fca54b4c94fab6b64", "html_url": "https://github.com/rust-lang/rust/commit/dcb4083ed94d0c14be8f731fca54b4c94fab6b64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcb4083ed94d0c14be8f731fca54b4c94fab6b64/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "484c61943f818272719bac81f6d5709fc5456438", "url": "https://api.github.com/repos/rust-lang/rust/commits/484c61943f818272719bac81f6d5709fc5456438", "html_url": "https://github.com/rust-lang/rust/commit/484c61943f818272719bac81f6d5709fc5456438"}, {"sha": "49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c", "html_url": "https://github.com/rust-lang/rust/commit/49ccc3f320a4728b80f393d8a60fa4466f8a4c0c"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "9b0f9544f8efc2fe06df43048a7a73f7d3953a5a", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/dcb4083ed94d0c14be8f731fca54b4c94fab6b64/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcb4083ed94d0c14be8f731fca54b4c94fab6b64/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=dcb4083ed94d0c14be8f731fca54b4c94fab6b64", "patch": "@@ -1646,31 +1646,16 @@ pub trait Iterator {\n     /// Basic usage:\n     ///\n     /// ```\n-    /// let a = [1, 2, 3];\n-    ///\n-    /// let iter = a.iter();\n-    ///\n-    /// let sum: i32 = iter.take(5).fold(0, |acc, i| acc + i);\n-    ///\n-    /// assert_eq!(sum, 6);\n-    ///\n-    /// // if we try to use iter again, it won't work. The following line\n-    /// // gives \"error: use of moved value: `iter`\n-    /// // assert_eq!(iter.next(), None);\n+    /// let mut words = vec![\"hello\", \"world\", \"of\", \"Rust\"].into_iter();\n     ///\n-    /// // let's try that again\n-    /// let a = [1, 2, 3];\n-    ///\n-    /// let mut iter = a.iter();\n-    ///\n-    /// // instead, we add in a .by_ref()\n-    /// let sum: i32 = iter.by_ref().take(2).fold(0, |acc, i| acc + i);\n+    /// // Take the first two words.\n+    /// let hello_world: Vec<_> = words.by_ref().take(2).collect();\n+    /// assert_eq!(hello_world, vec![\"hello\", \"world\"]);\n     ///\n-    /// assert_eq!(sum, 3);\n-    ///\n-    /// // now this is just fine:\n-    /// assert_eq!(iter.next(), Some(&3));\n-    /// assert_eq!(iter.next(), None);\n+    /// // Collect the rest of the words.\n+    /// // We can only do this because we used `by_ref` earlier.\n+    /// let of_rust: Vec<_> = words.collect();\n+    /// assert_eq!(of_rust, vec![\"of\", \"Rust\"]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn by_ref(&mut self) -> &mut Self"}]}