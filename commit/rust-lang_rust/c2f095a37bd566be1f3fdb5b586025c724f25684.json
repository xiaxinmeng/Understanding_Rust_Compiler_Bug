{"sha": "c2f095a37bd566be1f3fdb5b586025c724f25684", "node_id": "C_kwDOAAsO6NoAKGMyZjA5NWEzN2JkNTY2YmUxZjNmZGI1YjU4NjAyNWM3MjRmMjU2ODQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-11-09T13:02:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T13:02:23Z"}, "message": "Rollup merge of #90678 - JohnTitor:add-some-gats-tests, r=jackh726\n\nAdd some GATs-related regression tests\n\nCloses #88595, closes #90014\nr? `@jackh726`", "tree": {"sha": "8970cebc7925c576146a79893b4c16f03611c6b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8970cebc7925c576146a79893b4c16f03611c6b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2f095a37bd566be1f3fdb5b586025c724f25684", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhinFfCRBK7hj4Ov3rIwAANwMIAI0x3zsfBXvnRF1ipQ7fsDXP\nY7zS2iXCxNdYg64cWpsTbrcGVNJly/D6T+s7ZqTXF6ftmbozbdNXiH47QgZ7a/S8\nmoeGVZz35JIRzB4c3ZDfCEpfy2u65oU5c9v07X79aoEK7LsDNfcbLuMTn5D205vo\nJlXF/iiZv95FkZSDxTBfKu9lRMOuN6ExP6VOIRkjZ/pYUQFt067w1V5bopZn/RmI\n9GHw4j16sREpE0vySUZPbwDzKvjgEMh4AHma31hk4j0CrxGr5m4WOLNDrmNO7yXM\nH77HZ8eHcam+qIeFNRtfVEJS1ROtxQUfybESbE2pk5Ojth2U8Ra2e66M+dDFD2E=\n=zXkn\n-----END PGP SIGNATURE-----\n", "payload": "tree 8970cebc7925c576146a79893b4c16f03611c6b9\nparent 6e39d27a8200d65922b8eecb2d2bfbaab99f88fb\nparent ebd401bc36ebc5530cc6cadbddd9c6e79e13d989\nauthor Yuki Okushi <jtitor@2k36.org> 1636462943 +0900\ncommitter GitHub <noreply@github.com> 1636462943 +0900\n\nRollup merge of #90678 - JohnTitor:add-some-gats-tests, r=jackh726\n\nAdd some GATs-related regression tests\n\nCloses #88595, closes #90014\nr? `@jackh726`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f095a37bd566be1f3fdb5b586025c724f25684", "html_url": "https://github.com/rust-lang/rust/commit/c2f095a37bd566be1f3fdb5b586025c724f25684", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2f095a37bd566be1f3fdb5b586025c724f25684/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e39d27a8200d65922b8eecb2d2bfbaab99f88fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e39d27a8200d65922b8eecb2d2bfbaab99f88fb", "html_url": "https://github.com/rust-lang/rust/commit/6e39d27a8200d65922b8eecb2d2bfbaab99f88fb"}, {"sha": "ebd401bc36ebc5530cc6cadbddd9c6e79e13d989", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebd401bc36ebc5530cc6cadbddd9c6e79e13d989", "html_url": "https://github.com/rust-lang/rust/commit/ebd401bc36ebc5530cc6cadbddd9c6e79e13d989"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "e397390783f66857560e8be8ad68f9dda875d229", "filename": "src/test/ui/generic-associated-types/issue-88595.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.rs?ref=c2f095a37bd566be1f3fdb5b586025c724f25684", "patch": "@@ -0,0 +1,24 @@\n+#![feature(generic_associated_types)]\n+#![feature(type_alias_impl_trait)]\n+\n+fn main() {}\n+\n+trait A<'a> {\n+    type B<'b>: Clone\n+    // FIXME(generic_associated_types): Remove one of the below bounds\n+    // https://github.com/rust-lang/rust/pull/90678#discussion_r744976085\n+    where\n+        'a: 'b, Self: 'a, Self: 'b;\n+\n+    fn a(&'a self) -> Self::B<'a>;\n+}\n+\n+struct C;\n+\n+impl<'a> A<'a> for C {\n+    type B<'b> = impl Clone;\n+    //~^ ERROR: lifetime bound not satisfied\n+    //~| ERROR: could not find defining uses\n+\n+    fn a(&'a self) -> Self::B<'a> {} //~ ERROR: non-defining opaque type use in defining scope\n+}"}, {"sha": "1948f82d0c97f80a694f7ed066708bb5df71dcd6", "filename": "src/test/ui/generic-associated-types/issue-88595.stderr", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-88595.stderr?ref=c2f095a37bd566be1f3fdb5b586025c724f25684", "patch": "@@ -0,0 +1,40 @@\n+error[E0478]: lifetime bound not satisfied\n+  --> $DIR/issue-88595.rs:19:5\n+   |\n+LL |     type B<'b> = impl Clone;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lifetime parameter instantiated with the lifetime `'a` as defined here\n+  --> $DIR/issue-88595.rs:18:6\n+   |\n+LL | impl<'a> A<'a> for C {\n+   |      ^^\n+note: but lifetime parameter must outlive the lifetime `'b` as defined here\n+  --> $DIR/issue-88595.rs:19:12\n+   |\n+LL |     type B<'b> = impl Clone;\n+   |            ^^\n+\n+error: non-defining opaque type use in defining scope\n+  --> $DIR/issue-88595.rs:23:23\n+   |\n+LL |     fn a(&'a self) -> Self::B<'a> {}\n+   |                       ^^^^^^^^^^^\n+   |\n+note: lifetime used multiple times\n+  --> $DIR/issue-88595.rs:18:6\n+   |\n+LL | impl<'a> A<'a> for C {\n+   |      ^^\n+LL |     type B<'b> = impl Clone;\n+   |            ^^\n+\n+error: could not find defining uses\n+  --> $DIR/issue-88595.rs:19:18\n+   |\n+LL |     type B<'b> = impl Clone;\n+   |                  ^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0478`."}, {"sha": "f110b069383d3c18e878a1227a60b826623e5661", "filename": "src/test/ui/generic-associated-types/issue-90014.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.rs?ref=c2f095a37bd566be1f3fdb5b586025c724f25684", "patch": "@@ -0,0 +1,22 @@\n+// edition:2018\n+\n+#![feature(generic_associated_types)]\n+#![feature(type_alias_impl_trait)]\n+\n+use std::future::Future;\n+\n+trait MakeFut {\n+    type Fut<'a> where Self: 'a;\n+    fn make_fut<'a>(&'a self) -> Self::Fut<'a>;\n+}\n+\n+impl MakeFut for &'_ mut () {\n+    type Fut<'a> = impl Future<Output = ()>;\n+    //~^ ERROR: the type `&mut ()` does not fulfill the required lifetime\n+\n+    fn make_fut<'a>(&'a self) -> Self::Fut<'a> {\n+        async { () }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "125d817e351f42a3463ce7d187b2b057741b0ff9", "filename": "src/test/ui/generic-associated-types/issue-90014.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c2f095a37bd566be1f3fdb5b586025c724f25684/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-90014.stderr?ref=c2f095a37bd566be1f3fdb5b586025c724f25684", "patch": "@@ -0,0 +1,15 @@\n+error[E0477]: the type `&mut ()` does not fulfill the required lifetime\n+  --> $DIR/issue-90014.rs:14:5\n+   |\n+LL |     type Fut<'a> = impl Future<Output = ()>;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: type must outlive the lifetime `'a` as defined here\n+  --> $DIR/issue-90014.rs:14:14\n+   |\n+LL |     type Fut<'a> = impl Future<Output = ()>;\n+   |              ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0477`."}]}