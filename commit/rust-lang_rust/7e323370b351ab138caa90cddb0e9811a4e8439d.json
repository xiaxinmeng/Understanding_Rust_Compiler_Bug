{"sha": "7e323370b351ab138caa90cddb0e9811a4e8439d", "node_id": "C_kwDOAAsO6NoAKDdlMzIzMzcwYjM1MWFiMTM4Y2FhOTBjZGRiMGU5ODExYTRlODQzOWQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-03-11T22:26:19Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-03-11T22:35:18Z"}, "message": "diagnostics: single colon within `<>` probably, not type ascription\n\nFixes #94812", "tree": {"sha": "b0fe363d415fb18615837d169a7048b4f5b6af64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0fe363d415fb18615837d169a7048b4f5b6af64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e323370b351ab138caa90cddb0e9811a4e8439d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e323370b351ab138caa90cddb0e9811a4e8439d", "html_url": "https://github.com/rust-lang/rust/commit/7e323370b351ab138caa90cddb0e9811a4e8439d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e323370b351ab138caa90cddb0e9811a4e8439d/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b45e601065c3fb71a4f67481e912391d075621", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b45e601065c3fb71a4f67481e912391d075621", "html_url": "https://github.com/rust-lang/rust/commit/c9b45e601065c3fb71a4f67481e912391d075621"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "5b398a513185a90f51642f473d16191be91d370d", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7e323370b351ab138caa90cddb0e9811a4e8439d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e323370b351ab138caa90cddb0e9811a4e8439d/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=7e323370b351ab138caa90cddb0e9811a4e8439d", "patch": "@@ -2073,6 +2073,19 @@ impl<'a> Parser<'a> {\n                     let value = self.mk_expr_err(start.to(expr.span));\n                     err.emit();\n                     return Ok(GenericArg::Const(AnonConst { id: ast::DUMMY_NODE_ID, value }));\n+                } else if token::Colon == snapshot.token.kind\n+                    && expr.span.lo() == snapshot.token.span.hi()\n+                    && matches!(expr.kind, ExprKind::Path(..))\n+                {\n+                    // Find a mistake like \"foo::var:A\".\n+                    err.span_suggestion(\n+                        snapshot.token.span,\n+                        \"you might have meant to write a path\",\n+                        \"::\".to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    err.emit();\n+                    return Ok(GenericArg::Type(self.mk_ty(start.to(expr.span), TyKind::Err)));\n                 } else if token::Comma == self.token.kind || self.token.kind.should_end_const_arg()\n                 {\n                     // Avoid the following output by checking that we consumed a full const arg:"}, {"sha": "d8ed8fbfe72f114f05a25e16957d76a0f4a136b7", "filename": "src/test/ui/generics/single-colon-path-not-const-generics.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7e323370b351ab138caa90cddb0e9811a4e8439d/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e323370b351ab138caa90cddb0e9811a4e8439d/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.rs?ref=7e323370b351ab138caa90cddb0e9811a4e8439d", "patch": "@@ -0,0 +1,13 @@\n+pub mod foo {\n+    pub mod bar {\n+        pub struct A;\n+    }\n+}\n+\n+pub struct Foo {\n+  a: Vec<foo::bar:A>,\n+  //~^ ERROR expected\n+  //~| HELP you might have meant to write a path\n+}\n+\n+fn main() {}"}, {"sha": "d509fb7aeaa8235cf37380bc79777f1564554279", "filename": "src/test/ui/generics/single-colon-path-not-const-generics.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7e323370b351ab138caa90cddb0e9811a4e8439d/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e323370b351ab138caa90cddb0e9811a4e8439d/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fsingle-colon-path-not-const-generics.stderr?ref=7e323370b351ab138caa90cddb0e9811a4e8439d", "patch": "@@ -0,0 +1,11 @@\n+error: expected one of `,` or `>`, found `:`\n+  --> $DIR/single-colon-path-not-const-generics.rs:8:18\n+   |\n+LL |   a: Vec<foo::bar:A>,\n+   |                  ^\n+   |                  |\n+   |                  expected one of `,` or `>`\n+   |                  help: you might have meant to write a path: `::`\n+\n+error: aborting due to previous error\n+"}]}