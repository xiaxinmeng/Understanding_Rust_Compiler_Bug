{"sha": "db8c7523f85d8f177b2cd9676fd97b90aeea0388", "node_id": "C_kwDOAAsO6NoAKGRiOGM3NTIzZjg1ZDhmMTc3YjJjZDk2NzZmZDk3YjkwYWVlYTAzODg", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-10-31T15:15:05Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-10-31T15:15:05Z"}, "message": "fix: disregard type variable expectation for if expressions", "tree": {"sha": "5c566f9f5ac1c721256be879e132ed08568b0bf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c566f9f5ac1c721256be879e132ed08568b0bf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8c7523f85d8f177b2cd9676fd97b90aeea0388", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmNf5tIACgkQ4laYqTBY\nYXGuIQ/+PFAFjYZALtX0cajfCxJeG/g/ErZB9syKvOpa7nLPr8LlvNpv24RVSDRj\nTTmDpG9muwqCxrYuWrLhbQG1V29brz4pIr/DY6gHc4YVTj+R8bjOzNlXGTnHU9F3\nwqXlqv5LWWvuuWd1hDb86Mp9unIP/BKqU7RTRBb+KUPkSAVKS0w2R8NyCyNxNRCr\n7nNKXumn3ut6Y4bjMVfB3N4vercBo0gGqyEhtWnopIUSZQssNilaO0OVAkvCNvuf\nMGtB5Auvnjsn9iKj3S8M7N41rnzB23BjjPbCsg5eaxQ0xLA+FTbN0apQ8sfrYMGj\nZNjuH5Pc8H3r2dpnvROdNhq+XmcRaEp+S/LUL/lL7zxe1mCW9wShCSCZ7C+BkTd7\nU4BFjXoIoK1+xfNQHYAbd1Eh5JXgwXnYssnZ+RE6YYmHVvdnQ4me40FuRlhvTU4Q\nkl2ftJ7xO4xlEKCxGCb9EDJNb3mIRLsuA+x5QleT/tVuiSlHa/cfppKR+lvSre3+\nnbFb7FXE5UuUnNefTTrwDZjBWwCLXdApoRPoRdtlkZxAvj116HCyWbthxg2miOhB\nn5aLVUk2WZx7HzZ0TxnGGa5tc69RCCS17fQHOCi+uddrhnv8eWMZSPXSVs93Y2NZ\nTNpbLpuzMPc15zIfGFZtyHh5EJ9fipWn3nBre+Pt036SN/EhSAk=\n=oMU8\n-----END PGP SIGNATURE-----", "payload": "tree 5c566f9f5ac1c721256be879e132ed08568b0bf8\nparent d022e0ec536948ced38ac67dec0d64c312264f7c\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1667229305 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1667229305 +0900\n\nfix: disregard type variable expectation for if expressions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8c7523f85d8f177b2cd9676fd97b90aeea0388", "html_url": "https://github.com/rust-lang/rust/commit/db8c7523f85d8f177b2cd9676fd97b90aeea0388", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8c7523f85d8f177b2cd9676fd97b90aeea0388/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d022e0ec536948ced38ac67dec0d64c312264f7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d022e0ec536948ced38ac67dec0d64c312264f7c", "html_url": "https://github.com/rust-lang/rust/commit/d022e0ec536948ced38ac67dec0d64c312264f7c"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "b1f4de826077542ad5b54ceaa1d52fb16b99d992", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db8c7523f85d8f177b2cd9676fd97b90aeea0388/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8c7523f85d8f177b2cd9676fd97b90aeea0388/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=db8c7523f85d8f177b2cd9676fd97b90aeea0388", "patch": "@@ -85,6 +85,7 @@ impl<'a> InferenceContext<'a> {\n         let ty = match &self.body[tgt_expr] {\n             Expr::Missing => self.err_ty(),\n             &Expr::If { condition, then_branch, else_branch } => {\n+                let expected = &expected.adjust_for_branches(&mut self.table);\n                 self.infer_expr(\n                     condition,\n                     &Expectation::has_type(TyKind::Scalar(Scalar::Bool).intern(Interner)),"}, {"sha": "1abdb0be7f876b82004c67c5299620001284f679", "filename": "crates/hir-ty/src/tests/coercion.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/db8c7523f85d8f177b2cd9676fd97b90aeea0388/crates%2Fhir-ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8c7523f85d8f177b2cd9676fd97b90aeea0388/crates%2Fhir-ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=db8c7523f85d8f177b2cd9676fd97b90aeea0388", "patch": "@@ -122,6 +122,23 @@ fn test() {\n     )\n }\n \n+#[test]\n+fn if_else_adjust_for_branches_discard_type_var() {\n+    check_no_mismatches(\n+        r#\"\n+fn test() {\n+    let f = || {\n+        if true {\n+            &\"\"\n+        } else {\n+            \"\"\n+        }\n+    };\n+}\n+\"#,\n+    );\n+}\n+\n #[test]\n fn match_first_coerce() {\n     check_no_mismatches(\n@@ -182,6 +199,22 @@ fn test() {\n     );\n }\n \n+#[test]\n+fn match_adjust_for_branches_discard_type_var() {\n+    check_no_mismatches(\n+        r#\"\n+fn test() {\n+    let f = || {\n+        match 0i32 {\n+            0i32 => &\"\",\n+            _ => \"\",\n+        }\n+    };\n+}\n+\"#,\n+    );\n+}\n+\n #[test]\n fn return_coerce_unknown() {\n     check_types("}]}