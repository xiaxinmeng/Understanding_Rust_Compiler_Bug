{"sha": "0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMGM1ZjZkOWE4YTE2ZjVkYjJlOGExYTRjYTQ3M2M5MDg5MGFkYmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-27T16:45:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-27T16:45:22Z"}, "message": "Merge pull request #716 from RalfJung/rustup\n\nfix HeapFree return value", "tree": {"sha": "ec8435f1a3323f117e0aa8546159d7c7a8ad7087", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec8435f1a3323f117e0aa8546159d7c7a8ad7087"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcxIciCRBK7hj4Ov3rIwAAdHIIAIiIO5nSrfRZVtYLlYvdFCCo\n/8MFJ1ZGi813kqg3BUSUGUt2Fln2FjySothYUj4Oivzb2AvjbwY3qTQwLa7pk4m+\n0TMsQn5kf6YMqxaWcCso+Z6iUwBaoR7uMjRn20pdIHmeW7V3Xyne8AX4WkSgsHaI\ntPdn9tlio59tB05wmRhuzWhR7QwY7pqvof7E6dioZSTBBSkL/TgbcXcOU2phsOYb\n9OYFFIAI+tibmhOpSHcQ1KdD6jvfUdAZLnSJy3T70SbWp+iL9Rjf9u92CxKRqr7F\nIfxhDzjvtD1JVm0Ei905OeFM6oCa7T1FiI4UxbcyIHZxPavdtHt0yIPrR7Qg3C4=\n=sy1a\n-----END PGP SIGNATURE-----\n", "payload": "tree ec8435f1a3323f117e0aa8546159d7c7a8ad7087\nparent b46e523c20ed5f767877ee23a8c210e7933b8ae3\nparent 53f59431a5f2c16b8a6dd66d91008c97a4ed8884\nauthor Ralf Jung <post@ralfj.de> 1556383522 +0200\ncommitter GitHub <noreply@github.com> 1556383522 +0200\n\nMerge pull request #716 from RalfJung/rustup\n\nfix HeapFree return value"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "html_url": "https://github.com/rust-lang/rust/commit/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b46e523c20ed5f767877ee23a8c210e7933b8ae3", "url": "https://api.github.com/repos/rust-lang/rust/commits/b46e523c20ed5f767877ee23a8c210e7933b8ae3", "html_url": "https://github.com/rust-lang/rust/commit/b46e523c20ed5f767877ee23a8c210e7933b8ae3"}, {"sha": "53f59431a5f2c16b8a6dd66d91008c97a4ed8884", "url": "https://api.github.com/repos/rust-lang/rust/commits/53f59431a5f2c16b8a6dd66d91008c97a4ed8884", "html_url": "https://github.com/rust-lang/rust/commit/53f59431a5f2c16b8a6dd66d91008c97a4ed8884"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "52b6685715d7972a6e919d4570de2107cc814a2e", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "patch": "@@ -1 +1 @@\n-9224be5fa39f6170f6e046342976efee5453a1ff\n+fe0a415b4ba3310c2263f07e0253e2434310299c"}, {"sha": "1fd10ff38506a1f35ad06ab5b0898a81b9cf1598", "filename": "src/fn_call.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=0f0c5f6d9a8a16f5db2e8a1a4ca473c90890adbf", "patch": "@@ -722,6 +722,7 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n             // Windows API stubs.\n             // HANDLE = isize\n             // DWORD = ULONG = u32\n+            // BOOL = i32\n             \"GetProcessHeap\" => {\n                 // Just fake a HANDLE\n                 this.write_scalar(Scalar::from_int(1, this.pointer_size()), dest)?;\n@@ -739,6 +740,7 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a + 'mir>: crate::MiriEvalContextExt<'\n                 let _flags = this.read_scalar(args[1])?.to_u32()?;\n                 let ptr = this.read_scalar(args[2])?.not_undef()?;\n                 this.free(ptr)?;\n+                this.write_scalar(Scalar::from_int(1, Size::from_bytes(4)), dest)?;\n             }\n             \"HeapReAlloc\" => {\n                 let _handle = this.read_scalar(args[0])?.to_isize(this)?;"}]}