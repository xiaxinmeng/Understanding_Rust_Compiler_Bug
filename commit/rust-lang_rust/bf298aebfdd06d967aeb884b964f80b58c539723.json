{"sha": "bf298aebfdd06d967aeb884b964f80b58c539723", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMjk4YWViZmRkMDZkOTY3YWViODg0Yjk2NGY4MGI1OGM1Mzk3MjM=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2016-11-25T21:10:23Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2016-11-29T12:04:27Z"}, "message": "Fix doc test collection", "tree": {"sha": "f53194574dcc2a1bad00e5a5f6aa6b479e665393", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f53194574dcc2a1bad00e5a5f6aa6b479e665393"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf298aebfdd06d967aeb884b964f80b58c539723", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf298aebfdd06d967aeb884b964f80b58c539723", "html_url": "https://github.com/rust-lang/rust/commit/bf298aebfdd06d967aeb884b964f80b58c539723", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf298aebfdd06d967aeb884b964f80b58c539723/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b10bbde3358458d750e46b2256f0f494cf60e607", "url": "https://api.github.com/repos/rust-lang/rust/commits/b10bbde3358458d750e46b2256f0f494cf60e607", "html_url": "https://github.com/rust-lang/rust/commit/b10bbde3358458d750e46b2256f0f494cf60e607"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "15a9d184a4984ab00c0047e9da4dc1183f1d51d7", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf298aebfdd06d967aeb884b964f80b58c539723/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf298aebfdd06d967aeb884b964f80b58c539723/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=bf298aebfdd06d967aeb884b964f80b58c539723", "patch": "@@ -493,6 +493,10 @@ impl<'a, 'hir> intravisit::Visitor<'hir> for HirCollector<'a, 'hir> {\n         Some(self.map)\n     }\n \n+    fn nested_visit_mode(&mut self) -> intravisit::NestedVisitMode {\n+        intravisit::NestedVisitMode::All\n+    }\n+\n     fn visit_item(&mut self, item: &'hir hir::Item) {\n         let name = if let hir::ItemImpl(.., ref ty, _) = item.node {\n             hir::print::ty_to_string(ty)"}]}