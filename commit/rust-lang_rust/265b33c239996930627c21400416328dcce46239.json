{"sha": "265b33c239996930627c21400416328dcce46239", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NWIzM2MyMzk5OTY5MzA2MjdjMjE0MDA0MTYzMjhkY2NlNDYyMzk=", "commit": {"author": {"name": "Cody Schroeder", "email": "codys@cs.washington.edu", "date": "2013-01-26T01:25:41Z"}, "committer": {"name": "Cody Schroeder", "email": "codys@cs.washington.edu", "date": "2013-01-26T01:25:41Z"}, "message": "Declare std::arc::unwrap to be pub", "tree": {"sha": "4e93b6bd13e5e1f4903396665dabe9b7342c167c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e93b6bd13e5e1f4903396665dabe9b7342c167c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/265b33c239996930627c21400416328dcce46239", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/265b33c239996930627c21400416328dcce46239", "html_url": "https://github.com/rust-lang/rust/commit/265b33c239996930627c21400416328dcce46239", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/265b33c239996930627c21400416328dcce46239/comments", "author": {"login": "codeblack08", "id": 3144734, "node_id": "MDQ6VXNlcjMxNDQ3MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3144734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeblack08", "html_url": "https://github.com/codeblack08", "followers_url": "https://api.github.com/users/codeblack08/followers", "following_url": "https://api.github.com/users/codeblack08/following{/other_user}", "gists_url": "https://api.github.com/users/codeblack08/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeblack08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeblack08/subscriptions", "organizations_url": "https://api.github.com/users/codeblack08/orgs", "repos_url": "https://api.github.com/users/codeblack08/repos", "events_url": "https://api.github.com/users/codeblack08/events{/privacy}", "received_events_url": "https://api.github.com/users/codeblack08/received_events", "type": "User", "site_admin": false}, "committer": {"login": "codeblack08", "id": 3144734, "node_id": "MDQ6VXNlcjMxNDQ3MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3144734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/codeblack08", "html_url": "https://github.com/codeblack08", "followers_url": "https://api.github.com/users/codeblack08/followers", "following_url": "https://api.github.com/users/codeblack08/following{/other_user}", "gists_url": "https://api.github.com/users/codeblack08/gists{/gist_id}", "starred_url": "https://api.github.com/users/codeblack08/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/codeblack08/subscriptions", "organizations_url": "https://api.github.com/users/codeblack08/orgs", "repos_url": "https://api.github.com/users/codeblack08/repos", "events_url": "https://api.github.com/users/codeblack08/events{/privacy}", "received_events_url": "https://api.github.com/users/codeblack08/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d753ad4ee44cbcf39868b8d5738fe4ffc88acaf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d753ad4ee44cbcf39868b8d5738fe4ffc88acaf2", "html_url": "https://github.com/rust-lang/rust/commit/d753ad4ee44cbcf39868b8d5738fe4ffc88acaf2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c40fe283af0bb2e8fc4b038b8230372e20d5418", "filename": "src/libstd/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/265b33c239996930627c21400416328dcce46239/src%2Flibstd%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265b33c239996930627c21400416328dcce46239/src%2Flibstd%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farc.rs?ref=265b33c239996930627c21400416328dcce46239", "patch": "@@ -114,7 +114,7 @@ pub fn clone<T: Const Owned>(rc: &ARC<T>) -> ARC<T> {\n  * unwrap from a task that holds another reference to the same ARC; it is\n  * guaranteed to deadlock.\n  */\n-fn unwrap<T: Const Owned>(rc: ARC<T>) -> T {\n+pub fn unwrap<T: Const Owned>(rc: ARC<T>) -> T {\n     let ARC { x: x } = move rc;\n     unsafe { unwrap_shared_mutable_state(move x) }\n }"}]}