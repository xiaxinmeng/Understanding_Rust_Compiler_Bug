{"sha": "6bdd1beca6d310f0baaffa0835a16a968061ccfb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZGQxYmVjYTZkMzEwZjBiYWFmZmEwODM1YTE2YTk2ODA2MWNjZmI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-11-12T07:36:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-12T07:36:15Z"}, "message": "Rollup merge of #66280 - stepancheg:union, r=alexcrichton\n\nFix HashSet::union performance\n\nConsider this example: small_set = 0..2, large_set = 0..1000.\n\nTo efficiently compute the union of these sets, we should\n* take all elements of the larger set\n* for each element of the smaller set check it is not in the larger set\n\nThis is exactly what this commit does.\n\nThis particular optimization was implemented a year ago, but the\nauthor mistaken `<` and `>`.", "tree": {"sha": "01acb6acf43db5c6b1c84b7713518a1e924f3b7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01acb6acf43db5c6b1c84b7713518a1e924f3b7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bdd1beca6d310f0baaffa0835a16a968061ccfb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdymDvCRBK7hj4Ov3rIwAAdHIIAKRKtfQMUuiDpGw8C7LIk0ad\ndEcTrLxiG7U7Q1bGfAPkF9OACwyYsIAZ3rFfHSn484+pB5aoOggm955Z92ugvv3R\nL8LMmQK4BJhb2UrlgzQCAKMZgthyT14ZjK4C4q962IwTKjO7DRxIq7TBDz+6cxu8\nRGxgKZvvwThoHYgYwnbVfNJPXh3IhthPAJ3c5JCaB6SaNEHdRNrHRM+z5SvgulrD\nvfsmhZM4EGhhrQbmdyIuLs6nj/200/z+drJbzK0+aeWPLlFixQf+2QNc3mN5ARyk\ndjMXi2ZOGsO/gbddxrkuJHxE9n3REA+DGWBGYFbxr/ssTxIsnddo6kAtJ+teZLk=\n=0iw2\n-----END PGP SIGNATURE-----\n", "payload": "tree 01acb6acf43db5c6b1c84b7713518a1e924f3b7b\nparent 8e0265c268c06a23f9107a1b28ca1dedf7c59fe7\nparent 04a237b9e2c327e1ad6339afd2f967bfcad38483\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1573544175 +0900\ncommitter GitHub <noreply@github.com> 1573544175 +0900\n\nRollup merge of #66280 - stepancheg:union, r=alexcrichton\n\nFix HashSet::union performance\n\nConsider this example: small_set = 0..2, large_set = 0..1000.\n\nTo efficiently compute the union of these sets, we should\n* take all elements of the larger set\n* for each element of the smaller set check it is not in the larger set\n\nThis is exactly what this commit does.\n\nThis particular optimization was implemented a year ago, but the\nauthor mistaken `<` and `>`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd1beca6d310f0baaffa0835a16a968061ccfb", "html_url": "https://github.com/rust-lang/rust/commit/6bdd1beca6d310f0baaffa0835a16a968061ccfb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd1beca6d310f0baaffa0835a16a968061ccfb/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0265c268c06a23f9107a1b28ca1dedf7c59fe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0265c268c06a23f9107a1b28ca1dedf7c59fe7", "html_url": "https://github.com/rust-lang/rust/commit/8e0265c268c06a23f9107a1b28ca1dedf7c59fe7"}, {"sha": "04a237b9e2c327e1ad6339afd2f967bfcad38483", "url": "https://api.github.com/repos/rust-lang/rust/commits/04a237b9e2c327e1ad6339afd2f967bfcad38483", "html_url": "https://github.com/rust-lang/rust/commit/04a237b9e2c327e1ad6339afd2f967bfcad38483"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a038ee802105728eef0a6759fb34fb60ddcf56ad", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd1beca6d310f0baaffa0835a16a968061ccfb/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd1beca6d310f0baaffa0835a16a968061ccfb/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=6bdd1beca6d310f0baaffa0835a16a968061ccfb", "patch": "@@ -551,7 +551,7 @@ impl<T, S> HashSet<T, S>\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn union<'a>(&'a self, other: &'a HashSet<T, S>) -> Union<'a, T, S> {\n-        if self.len() <= other.len() {\n+        if self.len() >= other.len() {\n             Union {\n                 iter: self.iter().chain(other.difference(self)),\n             }"}]}