{"sha": "6faa40d40626f8301b5f977720b9ed7e5dfbf401", "node_id": "C_kwDOAAsO6NoAKDZmYWE0MGQ0MDYyNmY4MzAxYjVmOTc3NzIwYjllZDdlNWRmYmY0MDE", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-25T12:26:41Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-26T18:59:32Z"}, "message": "Migrate source-script to ES6", "tree": {"sha": "ecbe16c5241dd6d222393d1a5fc3a98b91ff93b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecbe16c5241dd6d222393d1a5fc3a98b91ff93b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6faa40d40626f8301b5f977720b9ed7e5dfbf401", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6faa40d40626f8301b5f977720b9ed7e5dfbf401", "html_url": "https://github.com/rust-lang/rust/commit/6faa40d40626f8301b5f977720b9ed7e5dfbf401", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6faa40d40626f8301b5f977720b9ed7e5dfbf401/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "016334a3ade1a8726f0b9278b8d5564eb2727335", "url": "https://api.github.com/repos/rust-lang/rust/commits/016334a3ade1a8726f0b9278b8d5564eb2727335", "html_url": "https://github.com/rust-lang/rust/commit/016334a3ade1a8726f0b9278b8d5564eb2727335"}], "stats": {"total": 89, "additions": 45, "deletions": 44}, "files": [{"sha": "c48a847665ef5a440ba999fc55270edc9bafc0bc", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 45, "deletions": 44, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/6faa40d40626f8301b5f977720b9ed7e5dfbf401/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/6faa40d40626f8301b5f977720b9ed7e5dfbf401/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=6faa40d40626f8301b5f977720b9ed7e5dfbf401", "patch": "@@ -1,3 +1,7 @@\n+/* eslint-env es6 */\n+/* eslint no-var: \"error\" */\n+/* eslint prefer-const: \"error\" */\n+\n // From rust:\n /* global search, sourcesIndex */\n \n@@ -7,23 +11,23 @@\n (function() {\n \n function getCurrentFilePath() {\n-    var parts = window.location.pathname.split(\"/\");\n-    var rootPathParts = window.rootPath.split(\"/\");\n+    const parts = window.location.pathname.split(\"/\");\n+    const rootPathParts = window.rootPath.split(\"/\");\n \n-    for (var i = 0, len = rootPathParts.length; i < len; ++i) {\n-        if (rootPathParts[i] === \"..\") {\n+    for (const rootPathPart of rootPathParts) {\n+        if (rootPathPart === \"..\") {\n             parts.pop();\n         }\n     }\n-    var file = window.location.pathname.substring(parts.join(\"/\").length);\n+    let file = window.location.pathname.substring(parts.join(\"/\").length);\n     if (file.startsWith(\"/\")) {\n         file = file.substring(1);\n     }\n     return file.substring(0, file.length - 5);\n }\n \n function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n-    var name = document.createElement(\"div\");\n+    const name = document.createElement(\"div\");\n     name.className = \"name\";\n \n     fullPath += elem[\"name\"] + \"/\";\n@@ -37,31 +41,28 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     };\n     name.innerText = elem[\"name\"];\n \n-    var i, len;\n-\n-    var children = document.createElement(\"div\");\n+    const children = document.createElement(\"div\");\n     children.className = \"children\";\n-    var folders = document.createElement(\"div\");\n+    const folders = document.createElement(\"div\");\n     folders.className = \"folders\";\n     if (elem.dirs) {\n-        for (i = 0, len = elem.dirs.length; i < len; ++i) {\n-            if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n-                               hasFoundFile)) {\n+        for (const dir of elem.dirs) {\n+            if (createDirEntry(dir, folders, fullPath, currentFile, hasFoundFile)) {\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n             }\n         }\n     }\n     children.appendChild(folders);\n \n-    var files = document.createElement(\"div\");\n+    const files = document.createElement(\"div\");\n     files.className = \"files\";\n     if (elem.files) {\n-        for (i = 0, len = elem.files.length; i < len; ++i) {\n-            var file = document.createElement(\"a\");\n-            file.innerText = elem.files[i];\n-            file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n-            if (!hasFoundFile && currentFile === fullPath + elem.files[i]) {\n+        for (const file_text of elem.files) {\n+            const file = document.createElement(\"a\");\n+            file.innerText = file_text;\n+            file.href = window.rootPath + \"src/\" + fullPath + file_text + \".html\";\n+            if (!hasFoundFile && currentFile === fullPath + file_text) {\n                 file.className = \"selected\";\n                 addClass(name, \"expand\");\n                 hasFoundFile = true;\n@@ -77,8 +78,8 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n }\n \n function toggleSidebar() {\n-    var sidebar = document.querySelector(\"nav.sidebar\");\n-    var child = this.children[0];\n+    const sidebar = document.querySelector(\"nav.sidebar\");\n+    const child = this.children[0];\n     if (child.innerText === \">\") {\n         sidebar.classList.add(\"expanded\");\n         child.innerText = \"<\";\n@@ -91,11 +92,11 @@ function toggleSidebar() {\n }\n \n function createSidebarToggle() {\n-    var sidebarToggle = document.createElement(\"div\");\n+    const sidebarToggle = document.createElement(\"div\");\n     sidebarToggle.id = \"sidebar-toggle\";\n     sidebarToggle.onclick = toggleSidebar;\n \n-    var inner = document.createElement(\"div\");\n+    const inner = document.createElement(\"div\");\n \n     if (getCurrentValue(\"source-sidebar-show\") === \"true\") {\n         inner.innerText = \"<\";\n@@ -113,23 +114,23 @@ function createSourceSidebar() {\n     if (!window.rootPath.endsWith(\"/\")) {\n         window.rootPath += \"/\";\n     }\n-    var container = document.querySelector(\"nav.sidebar\");\n+    const container = document.querySelector(\"nav.sidebar\");\n \n-    var sidebarToggle = createSidebarToggle();\n+    const sidebarToggle = createSidebarToggle();\n     container.insertBefore(sidebarToggle, container.firstChild);\n \n-    var sidebar = document.createElement(\"div\");\n+    const sidebar = document.createElement(\"div\");\n     sidebar.id = \"source-sidebar\";\n     if (getCurrentValue(\"source-sidebar-show\") !== \"true\") {\n         container.classList.remove(\"expanded\");\n     } else {\n         container.classList.add(\"expanded\");\n     }\n \n-    var currentFile = getCurrentFilePath();\n-    var hasFoundFile = false;\n+    const currentFile = getCurrentFilePath();\n+    let hasFoundFile = false;\n \n-    var title = document.createElement(\"div\");\n+    const title = document.createElement(\"div\");\n     title.className = \"title\";\n     title.innerText = \"Files\";\n     sidebar.appendChild(title);\n@@ -141,13 +142,13 @@ function createSourceSidebar() {\n \n     container.appendChild(sidebar);\n     // Focus on the current file in the source files sidebar.\n-    var selected_elem = sidebar.getElementsByClassName(\"selected\")[0];\n+    const selected_elem = sidebar.getElementsByClassName(\"selected\")[0];\n     if (typeof selected_elem !== \"undefined\") {\n         selected_elem.focus();\n     }\n }\n \n-var lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n+const lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n \n function highlightSourceLines(match) {\n     if (typeof match === \"undefined\") {\n@@ -156,21 +157,21 @@ function highlightSourceLines(match) {\n     if (!match) {\n         return;\n     }\n-    var from = parseInt(match[1], 10);\n-    var to = from;\n+    let from = parseInt(match[1], 10);\n+    let to = from;\n     if (typeof match[2] !== \"undefined\") {\n         to = parseInt(match[2], 10);\n     }\n     if (to < from) {\n-        var tmp = to;\n+        const tmp = to;\n         to = from;\n         from = tmp;\n     }\n-    var elem = document.getElementById(from);\n+    let elem = document.getElementById(from);\n     if (!elem) {\n         return;\n     }\n-    var x = document.getElementById(from);\n+    const x = document.getElementById(from);\n     if (x) {\n         x.scrollIntoView();\n     }\n@@ -179,7 +180,7 @@ function highlightSourceLines(match) {\n             removeClass(i_e, \"line-highlighted\");\n         });\n     });\n-    for (var i = from; i <= to; ++i) {\n+    for (let i = from; i <= to; ++i) {\n         elem = document.getElementById(i);\n         if (!elem) {\n             break;\n@@ -188,11 +189,11 @@ function highlightSourceLines(match) {\n     }\n }\n \n-var handleSourceHighlight = (function() {\n-    var prev_line_id = 0;\n+const handleSourceHighlight = (function() {\n+    let prev_line_id = 0;\n \n-    var set_fragment = function(name) {\n-        var x = window.scrollX,\n+    const set_fragment = function(name) {\n+        const x = window.scrollX,\n             y = window.scrollY;\n         if (searchState.browserSupportsHistoryApi()) {\n             history.replaceState(null, null, \"#\" + name);\n@@ -205,13 +206,13 @@ var handleSourceHighlight = (function() {\n     };\n \n     return function(ev) {\n-        var cur_line_id = parseInt(ev.target.id, 10);\n+        let cur_line_id = parseInt(ev.target.id, 10);\n         ev.preventDefault();\n \n         if (ev.shiftKey && prev_line_id) {\n             // Swap selection if needed\n             if (prev_line_id > cur_line_id) {\n-                var tmp = prev_line_id;\n+                const tmp = prev_line_id;\n                 prev_line_id = cur_line_id;\n                 cur_line_id = tmp;\n             }\n@@ -226,7 +227,7 @@ var handleSourceHighlight = (function() {\n }());\n \n window.addEventListener(\"hashchange\", function() {\n-    var match = window.location.hash.match(lineNumbersRegex);\n+    const match = window.location.hash.match(lineNumbersRegex);\n     if (match) {\n         return highlightSourceLines(match);\n     }"}]}