{"sha": "ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjODM4MGY5YjE3NmZiN2IyOTA2OTUxNDA1NGMxYzllN2Y3YzRmN2I=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-08T20:03:39Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-08T20:04:02Z"}, "message": "rustc: Add the safe address-of operator to the AST", "tree": {"sha": "90b47f51aab15ccbcbfb0690483d5cd065aec33c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90b47f51aab15ccbcbfb0690483d5cd065aec33c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "html_url": "https://github.com/rust-lang/rust/commit/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19c651f4a18597b72113777a9122fc1f2a1ac6bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/19c651f4a18597b72113777a9122fc1f2a1ac6bb", "html_url": "https://github.com/rust-lang/rust/commit/19c651f4a18597b72113777a9122fc1f2a1ac6bb"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "1d4c20098cba06a721c87aef5cc654a6f3bcb15f", "filename": "src/rustc/metadata/astencode_gen.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmetadata%2Fastencode_gen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmetadata%2Fastencode_gen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fastencode_gen.rs?ref=ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "patch": "@@ -1393,6 +1393,7 @@ fn serialize_81<S: std::serialization::serializer>(s: S,\n                 /*syntax::ast::mutability*/\n \n \n+\n                 {||\n                     alt v {\n                       syntax::ast::box(v0) {\n@@ -1429,6 +1430,10 @@ fn serialize_81<S: std::serialization::serializer>(s: S,\n                       syntax::ast::neg {\n                         s.emit_enum_variant(\"syntax::ast::neg\", 4u, 0u, {|| })\n                       }\n+                      syntax::ast::addr_of {\n+                        s.emit_enum_variant(\"syntax::ast::addr_of\", 5u, 0u,\n+                                            {|| })\n+                      }\n                     }\n                 });\n }\n@@ -5543,6 +5548,8 @@ fn deserialize_81<S: std::serialization::deserializer>(s: S) ->\n \n \n \n+\n+\n                 {||\n                     s.read_enum_variant({|v_id|\n                                             alt check v_id {\n@@ -5561,6 +5568,7 @@ fn deserialize_81<S: std::serialization::deserializer>(s: S) ->\n                                               2u { syntax::ast::deref }\n                                               3u { syntax::ast::not }\n                                               4u { syntax::ast::neg }\n+                                              5u { syntax::ast::addr_of }\n                                             }\n                                         })\n                 })"}, {"sha": "74a9c6111fa83084a875cac1fffd4476bfe530bb", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "patch": "@@ -1645,6 +1645,9 @@ fn trans_unary(bcx: block, op: ast::unop, e: @ast::expr,\n                                translated using trans_lval(), not \\\n                                trans_unary()\");\n       }\n+      ast::addr_of {\n+        bcx.sess().bug(\"TODO pcwalton\");\n+      }\n     }\n }\n \n@@ -4305,7 +4308,8 @@ fn trans_const_expr(cx: crate_ctxt, e: @ast::expr) -> ValueRef {\n         ret alt u {\n           ast::box(_)  |\n           ast::uniq(_) |\n-          ast::deref  { cx.sess.span_bug(e.span,\n+          ast::deref   |\n+          ast::addr_of { cx.sess.span_bug(e.span,\n                            \"bad unop type in trans_const_expr\"); }\n           ast::not    { llvm::LLVMConstNot(te) }\n           ast::neg    {"}, {"sha": "78796d1ecc245d755b445bfaab7927838577898a", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "patch": "@@ -2186,6 +2186,9 @@ fn check_expr_with_unifier(fcx: @fn_ctxt, expr: @ast::expr, unify: unifier,\n                 oper_t = check_user_unop(fcx, \"-\", \"unary-\", expr, oper_t);\n             }\n           }\n+          ast::addr_of {\n+            tcx.sess.bug(\"TODO pcwalton\");\n+          }\n         }\n         write_ty(tcx, id, oper_t);\n       }"}, {"sha": "b9102ff4b22f440e3c9059804a32916efc9e9ee2", "filename": "src/rustc/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fast.rs?ref=ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "patch": "@@ -159,7 +159,7 @@ enum binop {\n enum unop {\n     box(mutability),\n     uniq(mutability),\n-    deref, not, neg,\n+    deref, not, neg, addr_of\n }\n \n // Generally, after typeck you can get the inferred value"}, {"sha": "dc0939cc2e4a2fd59da0ea1de0f5173a6cc33db8", "filename": "src/rustc/syntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8380f9b176fb7b29069514054c1c9e7f7c4f7b/src%2Frustc%2Fsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fsyntax%2Fast_util.rs?ref=ec8380f9b176fb7b29069514054c1c9e7f7c4f7b", "patch": "@@ -94,6 +94,7 @@ fn unop_to_str(op: unop) -> str {\n       deref { ret \"*\"; }\n       not { ret \"!\"; }\n       neg { ret \"-\"; }\n+      addr_of { ret \"&\"; }\n     }\n }\n "}]}