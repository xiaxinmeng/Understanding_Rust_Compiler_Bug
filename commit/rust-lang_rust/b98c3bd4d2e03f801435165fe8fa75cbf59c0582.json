{"sha": "b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OGMzYmQ0ZDJlMDNmODAxNDM1MTY1ZmU4ZmE3NWNiZjU5YzA1ODI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T21:16:48Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-18T19:56:00Z"}, "message": "Tell expr_use_visitor that user unops are by value", "tree": {"sha": "60213bb2f1aaa1e2f205d7b8fb82613193514705", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60213bb2f1aaa1e2f205d7b8fb82613193514705"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "html_url": "https://github.com/rust-lang/rust/commit/b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b98c3bd4d2e03f801435165fe8fa75cbf59c0582/comments", "author": null, "committer": null, "parents": [{"sha": "9a962a7bdc9a794fbaa1e96ae951c22dd31eac86", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a962a7bdc9a794fbaa1e96ae951c22dd31eac86", "html_url": "https://github.com/rust-lang/rust/commit/9a962a7bdc9a794fbaa1e96ae951c22dd31eac86"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "901944cd0168e2b0d90c8285f7d95e6291c252f2", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b98c3bd4d2e03f801435165fe8fa75cbf59c0582/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98c3bd4d2e03f801435165fe8fa75cbf59c0582/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=b98c3bd4d2e03f801435165fe8fa75cbf59c0582", "patch": "@@ -576,8 +576,14 @@ impl<'d,'t,'tcx,TYPER:mc::Typer<'tcx>> ExprUseVisitor<'d,'t,'tcx,TYPER> {\n                 self.walk_block(&**blk);\n             }\n \n-            ast::ExprUnary(_, ref lhs) => {\n-                if !self.walk_overloaded_operator(expr, &**lhs, Vec::new(), PassArgs::ByRef) {\n+            ast::ExprUnary(op, ref lhs) => {\n+                let pass_args = if ast_util::is_by_value_unop(op) {\n+                    PassArgs::ByValue\n+                } else {\n+                    PassArgs::ByRef\n+                };\n+\n+                if !self.walk_overloaded_operator(expr, &**lhs, Vec::new(), pass_args) {\n                     self.consume_expr(&**lhs);\n                 }\n             }\n@@ -937,7 +943,9 @@ impl<'d,'t,'tcx,TYPER:mc::Typer<'tcx>> ExprUseVisitor<'d,'t,'tcx,TYPER> {\n         match pass_args {\n             PassArgs::ByValue => {\n                 self.consume_expr(receiver);\n-                self.consume_expr(rhs[0]);\n+                for &arg in rhs.iter() {\n+                    self.consume_expr(arg);\n+                }\n \n                 return true;\n             },"}]}