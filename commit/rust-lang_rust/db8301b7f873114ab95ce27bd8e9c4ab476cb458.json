{"sha": "db8301b7f873114ab95ce27bd8e9c4ab476cb458", "node_id": "C_kwDOAAsO6NoAKGRiODMwMWI3Zjg3MzExNGFiOTVjZTI3YmQ4ZTljNGFiNDc2Y2I0NTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-12T05:52:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T05:52:37Z"}, "message": "Rollup merge of #106638 - RalfJung:realstd, r=thomcc\n\nstd tests: use __OsLocalKeyInner from realstd\n\nThis is basically the same as https://github.com/rust-lang/rust/pull/100201, but for __OsLocalKeyInner:\n\nSome std tests are failing in Miri on Windows because [this static](https://github.com/rust-lang/rust/blob/a377893da2cd7124e5a18c7116cbb70e16dd5541/library/std/src/sys/windows/thread_local_key.rs#L234-L239) is getting duplicated, and Miri does not handle that properly -- Miri does not support this magic `.CRT$XLB` linker section, but instead just looks up this particular hard-coded static in the standard library. This PR lets the test suite use the std static instead of having its own copy.\n\nFixes https://github.com/rust-lang/miri/issues/2754\nr? `@thomcc`", "tree": {"sha": "f25b81fa5a68e372f2b8e86f626e270c834d8178", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f25b81fa5a68e372f2b8e86f626e270c834d8178"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8301b7f873114ab95ce27bd8e9c4ab476cb458", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjv6AlCRBK7hj4Ov3rIwAAq6QIABJM4fzRI1kquG5U04xx9HkE\nccBJCcGp+GGsMtcFZw6auDsVJK4tmLrh/wGRkGBktGrGMI30cdGA7uGb5NAKJ1Cw\nL1qXUfnuzJED7Bzghjoh9BPRnCubCwTPpx0jnabNcM4XU2OHVPgp/F79muO54pXy\n7mYn7rwv+Rrilh0n9QQPaB+bvzOr3zjCK4uA7vp8vd8ZQq6eatvkLnUJDo2WOW1M\nvQvxsYGzR54TX3uTilQIqG+sX7vZHNTRJiu9r4a6nkVQVB+k4c/p5lIe1Qqu6Tye\ndStIDCrdp3Vl0Uz3b98ycCjniwUwAyjf+bt3nPkp+Qaqw+MAdvW3fV1vTtKH9E8=\n=Plxl\n-----END PGP SIGNATURE-----\n", "payload": "tree f25b81fa5a68e372f2b8e86f626e270c834d8178\nparent 890bc3ca903df5178ab401075d6d01a8b2e12987\nparent ad79b2043f2402859f80a82c3b20e16b1cf7c9da\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673502757 +0100\ncommitter GitHub <noreply@github.com> 1673502757 +0100\n\nRollup merge of #106638 - RalfJung:realstd, r=thomcc\n\nstd tests: use __OsLocalKeyInner from realstd\n\nThis is basically the same as https://github.com/rust-lang/rust/pull/100201, but for __OsLocalKeyInner:\n\nSome std tests are failing in Miri on Windows because [this static](https://github.com/rust-lang/rust/blob/a377893da2cd7124e5a18c7116cbb70e16dd5541/library/std/src/sys/windows/thread_local_key.rs#L234-L239) is getting duplicated, and Miri does not handle that properly -- Miri does not support this magic `.CRT$XLB` linker section, but instead just looks up this particular hard-coded static in the standard library. This PR lets the test suite use the std static instead of having its own copy.\n\nFixes https://github.com/rust-lang/miri/issues/2754\nr? `@thomcc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8301b7f873114ab95ce27bd8e9c4ab476cb458", "html_url": "https://github.com/rust-lang/rust/commit/db8301b7f873114ab95ce27bd8e9c4ab476cb458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8301b7f873114ab95ce27bd8e9c4ab476cb458/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "890bc3ca903df5178ab401075d6d01a8b2e12987", "url": "https://api.github.com/repos/rust-lang/rust/commits/890bc3ca903df5178ab401075d6d01a8b2e12987", "html_url": "https://github.com/rust-lang/rust/commit/890bc3ca903df5178ab401075d6d01a8b2e12987"}, {"sha": "ad79b2043f2402859f80a82c3b20e16b1cf7c9da", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad79b2043f2402859f80a82c3b20e16b1cf7c9da", "html_url": "https://github.com/rust-lang/rust/commit/ad79b2043f2402859f80a82c3b20e16b1cf7c9da"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "692ff0cbca68b0dae3cbafb0f7142c36f86d2232", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/db8301b7f873114ab95ce27bd8e9c4ab476cb458/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8301b7f873114ab95ce27bd8e9c4ab476cb458/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=db8301b7f873114ab95ce27bd8e9c4ab476cb458", "patch": "@@ -177,19 +177,19 @@ use crate::sys_common::thread_parking::Parker;\n use crate::sys_common::{AsInner, IntoInner};\n use crate::time::Duration;\n \n+#[stable(feature = \"scoped_threads\", since = \"1.63.0\")]\n+mod scoped;\n+\n+#[stable(feature = \"scoped_threads\", since = \"1.63.0\")]\n+pub use scoped::{scope, Scope, ScopedJoinHandle};\n+\n ////////////////////////////////////////////////////////////////////////////////\n // Thread-local storage\n ////////////////////////////////////////////////////////////////////////////////\n \n #[macro_use]\n mod local;\n \n-#[stable(feature = \"scoped_threads\", since = \"1.63.0\")]\n-mod scoped;\n-\n-#[stable(feature = \"scoped_threads\", since = \"1.63.0\")]\n-pub use scoped::{scope, Scope, ScopedJoinHandle};\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::local::{AccessError, LocalKey};\n \n@@ -209,7 +209,6 @@ pub use self::local::{AccessError, LocalKey};\n ))]\n #[doc(hidden)]\n pub use self::local::fast::Key as __FastLocalKeyInner;\n-\n // when building for tests, use real std's type\n #[unstable(feature = \"libstd_thread_internals\", issue = \"none\")]\n #[cfg(test)]\n@@ -220,12 +219,21 @@ pub use self::local::fast::Key as __FastLocalKeyInner;\n pub use realstd::thread::__FastLocalKeyInner;\n \n #[unstable(feature = \"libstd_thread_internals\", issue = \"none\")]\n+#[cfg(not(test))]\n #[cfg(all(\n     not(target_thread_local),\n     not(all(target_family = \"wasm\", not(target_feature = \"atomics\"))),\n ))]\n #[doc(hidden)]\n pub use self::local::os::Key as __OsLocalKeyInner;\n+// when building for tests, use real std's type\n+#[unstable(feature = \"libstd_thread_internals\", issue = \"none\")]\n+#[cfg(test)]\n+#[cfg(all(\n+    not(target_thread_local),\n+    not(all(target_family = \"wasm\", not(target_feature = \"atomics\"))),\n+))]\n+pub use realstd::thread::__OsLocalKeyInner;\n \n #[unstable(feature = \"libstd_thread_internals\", issue = \"none\")]\n #[cfg(all(target_family = \"wasm\", not(target_feature = \"atomics\")))]"}]}