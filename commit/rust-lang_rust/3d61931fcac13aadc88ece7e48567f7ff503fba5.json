{"sha": "3d61931fcac13aadc88ece7e48567f7ff503fba5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNjE5MzFmY2FjMTNhYWRjODhlY2U3ZTQ4NTY3ZjdmZjUwM2ZiYTU=", "commit": {"author": {"name": "G\u00e1bor Horv\u00e1th", "email": "xazax.hun@gmail.com", "date": "2013-05-24T12:13:41Z"}, "committer": {"name": "G\u00e1bor Horv\u00e1th", "email": "xazax.hun@gmail.com", "date": "2013-05-24T12:13:41Z"}, "message": "Only trigger missing documentation warnings to public functions and fields.", "tree": {"sha": "5485cfc71da2f3d0cd594a2b3c134ff62dde8740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5485cfc71da2f3d0cd594a2b3c134ff62dde8740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d61931fcac13aadc88ece7e48567f7ff503fba5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d61931fcac13aadc88ece7e48567f7ff503fba5", "html_url": "https://github.com/rust-lang/rust/commit/3d61931fcac13aadc88ece7e48567f7ff503fba5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d61931fcac13aadc88ece7e48567f7ff503fba5/comments", "author": {"login": "Xazax-hun", "id": 922897, "node_id": "MDQ6VXNlcjkyMjg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/922897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xazax-hun", "html_url": "https://github.com/Xazax-hun", "followers_url": "https://api.github.com/users/Xazax-hun/followers", "following_url": "https://api.github.com/users/Xazax-hun/following{/other_user}", "gists_url": "https://api.github.com/users/Xazax-hun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xazax-hun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xazax-hun/subscriptions", "organizations_url": "https://api.github.com/users/Xazax-hun/orgs", "repos_url": "https://api.github.com/users/Xazax-hun/repos", "events_url": "https://api.github.com/users/Xazax-hun/events{/privacy}", "received_events_url": "https://api.github.com/users/Xazax-hun/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xazax-hun", "id": 922897, "node_id": "MDQ6VXNlcjkyMjg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/922897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xazax-hun", "html_url": "https://github.com/Xazax-hun", "followers_url": "https://api.github.com/users/Xazax-hun/followers", "following_url": "https://api.github.com/users/Xazax-hun/following{/other_user}", "gists_url": "https://api.github.com/users/Xazax-hun/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xazax-hun/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xazax-hun/subscriptions", "organizations_url": "https://api.github.com/users/Xazax-hun/orgs", "repos_url": "https://api.github.com/users/Xazax-hun/repos", "events_url": "https://api.github.com/users/Xazax-hun/events{/privacy}", "received_events_url": "https://api.github.com/users/Xazax-hun/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6581325ac38ce3f96cb7a0ea0aad35feed173c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6581325ac38ce3f96cb7a0ea0aad35feed173c1", "html_url": "https://github.com/rust-lang/rust/commit/c6581325ac38ce3f96cb7a0ea0aad35feed173c1"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "a49dfc97f715296e6358c97b87ba866d4329ae80", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 25, "deletions": 14, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/3d61931fcac13aadc88ece7e48567f7ff503fba5/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d61931fcac13aadc88ece7e48567f7ff503fba5/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=3d61931fcac13aadc88ece7e48567f7ff503fba5", "patch": "@@ -972,16 +972,23 @@ fn lint_unnecessary_allocations(cx: @mut Context) -> visit::vt<()> {\n fn lint_missing_struct_doc(cx: @mut Context) -> visit::vt<()> {\n     visit::mk_simple_visitor(@visit::SimpleVisitor {\n         visit_struct_field: |field| {\n-            let mut has_doc = false;\n-            for field.node.attrs.each |attr| {\n-                if attr.node.is_sugared_doc {\n-                    has_doc = true;\n-                    break;\n+            let relevant = match field.node.kind {\n+                ast::named_field(_, vis) => vis != ast::private,\n+                ast::unnamed_field => false,\n+            };\n+\n+            if relevant {\n+                let mut has_doc = false;\n+                for field.node.attrs.each |attr| {\n+                    if attr.node.is_sugared_doc {\n+                        has_doc = true;\n+                        break;\n+                    }\n+                }\n+                if !has_doc {\n+                    cx.span_lint(missing_struct_doc, field.span, \"missing documentation \\\n+                                                                  for a field.\");\n                 }\n-            }\n-            if !has_doc {\n-                cx.span_lint(missing_struct_doc, field.span, \"missing documentation \\\n-                                                              for a field.\");\n             }\n         },\n         .. *visit::default_simple_visitor()\n@@ -1003,18 +1010,22 @@ fn lint_missing_trait_doc(cx: @mut Context) -> visit::vt<()> {\n                     m.span\n                 },\n                 ast::provided(m) => {\n-                    for m.attrs.each |attr| {\n-                        if attr.node.is_sugared_doc {\n-                            has_doc = true;\n-                            break;\n+                    if m.vis == ast::private {\n+                        has_doc = true;\n+                    } else {\n+                        for m.attrs.each |attr| {\n+                            if attr.node.is_sugared_doc {\n+                                has_doc = true;\n+                                break;\n+                            }\n                         }\n                     }\n                     m.span\n                 }\n             };\n             if !has_doc {\n                 cx.span_lint(missing_trait_doc, span, \"missing documentation \\\n-                                                        for a method.\");\n+                                                       for a method.\");\n             }\n         },\n         .. *visit::default_simple_visitor()"}]}