{"sha": "ee076f63f910fe2b132904ad05d0cda178ff1ec6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMDc2ZjYzZjkxMGZlMmIxMzI5MDRhZDA1ZDBjZGExNzhmZjFlYzY=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-13T04:06:55Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:10Z"}, "message": "Allow for macros to occur in statement position.", "tree": {"sha": "5417b8bffa8cf084c9ece9ae0ad4a6f6e0817e4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5417b8bffa8cf084c9ece9ae0ad4a6f6e0817e4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee076f63f910fe2b132904ad05d0cda178ff1ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee076f63f910fe2b132904ad05d0cda178ff1ec6", "html_url": "https://github.com/rust-lang/rust/commit/ee076f63f910fe2b132904ad05d0cda178ff1ec6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee076f63f910fe2b132904ad05d0cda178ff1ec6/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fca52554e7e3b3eff0aaf8686fe4616628577ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/fca52554e7e3b3eff0aaf8686fe4616628577ade", "html_url": "https://github.com/rust-lang/rust/commit/fca52554e7e3b3eff0aaf8686fe4616628577ade"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "1c7338fe3170b2d5e6cca2d733ef4d66006bf8e8", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -242,7 +242,8 @@ fn simplify_ast(ii: ast::inlined_item) -> ast::inlined_item {\n             match stmt.node {\n               ast::stmt_expr(_, _) | ast::stmt_semi(_, _) |\n               ast::stmt_decl(@{node: ast::decl_local(_), span: _}, _) => true,\n-              ast::stmt_decl(@{node: ast::decl_item(_), span: _}, _) => false\n+              ast::stmt_decl(@{node: ast::decl_item(_), span: _}, _) => false,\n+              ast::stmt_mac(*) => fail ~\"unexpanded macro in astencode\"\n             }\n         };\n         let blk_sans_items = { stmts: stmts_sans_items,.. blk };"}, {"sha": "40b1e293351d2d00cc2a2bb131f2adcec4e3012f", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -980,6 +980,10 @@ impl Liveness {\n           stmt_expr(expr, _) | stmt_semi(expr, _) => {\n             return self.propagate_through_expr(expr, succ);\n           }\n+\n+          stmt_mac(*) => {\n+            self.tcx.sess.span_bug(stmt.span, ~\"unexpanded macro\");\n+          }\n         }\n     }\n "}, {"sha": "2950d7bd95da6f2075467ee6b524d0684820c38c", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -245,6 +245,7 @@ fn resolve_stmt(stmt: @ast::stmt, cx: ctxt, visitor: visit::vt<ctxt>) {\n         expr_cx.parent = Some(stmt_id);\n         visit::visit_stmt(stmt, expr_cx, visitor);\n       }\n+      ast::stmt_mac(*) => cx.sess.bug(~\"unexpanded macro\")\n     }\n }\n "}, {"sha": "7aac60c5f1d137a8aee1ba68fc0d3cb245427d58", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -1026,6 +1026,7 @@ fn trans_stmt(cx: block, s: ast::stmt) -> block {\n                 ast::decl_item(i) => trans_item(cx.fcx.ccx, *i)\n             }\n         }\n+        ast::stmt_mac(*) => cx.tcx().sess.bug(~\"unexpanded macro\")\n     }\n \n     return bcx;"}, {"sha": "ad6ca83fe4ea04c5318aeb20688f39c5ee272786", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -3437,6 +3437,7 @@ fn stmt_node_id(s: @ast::stmt) -> ast::node_id {\n       ast::stmt_decl(_, id) | stmt_expr(_, id) | stmt_semi(_, id) => {\n         return id;\n       }\n+      ast::stmt_mac(*) => fail ~\"unexpanded macro in trans\"\n     }\n }\n "}, {"sha": "5807e338ebd9fea7622abbf634fdf97c240e057b", "filename": "src/librustc/middle/typeck/check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -2344,6 +2344,7 @@ fn check_stmt(fcx: @fn_ctxt, stmt: @ast::stmt) -> bool {\n         node_id = id;\n         bot = check_expr(fcx, expr, None);\n       }\n+      ast::stmt_mac(*) => fcx.ccx.tcx.sess.bug(~\"unexpanded macro\")\n     }\n     fcx.write_nil(node_id);\n     return bot;"}, {"sha": "923a36c01d211c34d9b951d6500379cf10a28745", "filename": "src/librusti/rusti.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrusti%2Frusti.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibrusti%2Frusti.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rc?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -86,7 +86,7 @@ fn record(repl: Repl, blk: @ast::blk, intr: @token::ident_interner) -> Repl {\n         let new_stmts = do with_pp(intr) |pp, writer| {\n             for blk.node.stmts.each |stmt| {\n                 match stmt.node {\n-                    ast::stmt_decl(*) => {\n+                    ast::stmt_decl(*) | ast::stmt_mac(*) => {\n                         pprust::print_stmt(pp, **stmt);\n                         writer.write_line(~\"\");\n                     }"}, {"sha": "bc3ae65618a2f10fd401db1263ccf4fde50e9698", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -665,6 +665,8 @@ enum stmt_ {\n \n     // expr with trailing semi-colon (may have any type):\n     stmt_semi(@expr, node_id),\n+\n+    stmt_mac(mac),\n }\n \n // FIXME (pending discussion of #1697, #2178...): local should really be"}, {"sha": "e6cd413c430728538525723293f796a2aaa18573", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -39,7 +39,8 @@ pure fn stmt_id(s: stmt) -> node_id {\n     match s.node {\n       stmt_decl(_, id) => id,\n       stmt_expr(_, id) => id,\n-      stmt_semi(_, id) => id\n+      stmt_semi(_, id) => id,\n+      stmt_mac(_) => fail ~\"attempted to analyze unexpanded stmt\",\n     }\n }\n "}, {"sha": "a92c902ae3fbaa95b7a78bcef67eabd56518fb9e", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -305,10 +305,12 @@ fn noop_fold_block(b: blk_, fld: ast_fold) -> blk_ {\n }\n \n fn noop_fold_stmt(s: stmt_, fld: ast_fold) -> stmt_ {\n+    let fold_mac = |x| fold_mac_(x, fld);\n     return match s {\n       stmt_decl(d, nid) => stmt_decl(fld.fold_decl(d), fld.new_id(nid)),\n       stmt_expr(e, nid) => stmt_expr(fld.fold_expr(e), fld.new_id(nid)),\n-      stmt_semi(e, nid) => stmt_semi(fld.fold_expr(e), fld.new_id(nid))\n+      stmt_semi(e, nid) => stmt_semi(fld.fold_expr(e), fld.new_id(nid)),\n+      stmt_mac(mac) => stmt_mac(fold_mac(mac))\n     };\n }\n "}, {"sha": "0d370525d1789155c03bc5e5600565c29eb329d9", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -21,18 +21,15 @@ fn expr_is_simple_block(e: @ast::expr) -> bool {\n }\n \n fn stmt_ends_with_semi(stmt: ast::stmt) -> bool {\n-    match stmt.node {\n-      ast::stmt_decl(d, _) => {\n-        return match d.node {\n-              ast::decl_local(_) => true,\n-              ast::decl_item(_) => false\n+    return match stmt.node {\n+        ast::stmt_decl(d, _) => {\n+            match d.node {\n+                ast::decl_local(_) => true,\n+                ast::decl_item(_) => false\n             }\n-      }\n-      ast::stmt_expr(e, _) => {\n-        return expr_requires_semi_to_be_stmt(e);\n-      }\n-      ast::stmt_semi(*) => {\n-        return false;\n-      }\n+        }\n+        ast::stmt_expr(e, _) => { expr_requires_semi_to_be_stmt(e) }\n+        ast::stmt_semi(*) => { false }\n+        ast::stmt_mac(*) => { false }\n     }\n }"}, {"sha": "b55eec80a93028f7f2fe6f8e6f803bcb37892811", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -882,6 +882,10 @@ fn print_stmt(s: ps, st: ast::stmt) {\n         print_expr(s, expr);\n         word(s.s, ~\";\");\n       }\n+      ast::stmt_mac(mac) => {\n+        space_if_not_bol(s);\n+        print_mac(s, mac);\n+      }\n     }\n     if parse::classify::stmt_ends_with_semi(st) { word(s.s, ~\";\"); }\n     maybe_print_trailing_comment(s, st.span, None);"}, {"sha": "ca2af67771ea40af731ad2279ac00a9a2a749eec", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee076f63f910fe2b132904ad05d0cda178ff1ec6/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=ee076f63f910fe2b132904ad05d0cda178ff1ec6", "patch": "@@ -347,7 +347,8 @@ fn visit_stmt<E>(s: @stmt, e: E, v: vt<E>) {\n     match s.node {\n       stmt_decl(d, _) => v.visit_decl(d, e, v),\n       stmt_expr(ex, _) => v.visit_expr(ex, e, v),\n-      stmt_semi(ex, _) => v.visit_expr(ex, e, v)\n+      stmt_semi(ex, _) => v.visit_expr(ex, e, v),\n+      stmt_mac(mac) => visit_mac(mac, e, v)\n     }\n }\n "}]}