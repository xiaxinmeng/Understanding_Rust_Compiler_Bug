{"sha": "37d412cff7ae0585ad48292fca2fa331ff679b3f", "node_id": "C_kwDOAAsO6NoAKDM3ZDQxMmNmZjdhZTA1ODVhZDQ4MjkyZmNhMmZhMzMxZmY2NzliM2Y", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-07-26T03:24:16Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-04T13:42:13Z"}, "message": "Remove FulfillmentContext param from fully_normalize", "tree": {"sha": "d5b8aeac9be0c4f2dd2fb35863da746e2b090d10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5b8aeac9be0c4f2dd2fb35863da746e2b090d10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37d412cff7ae0585ad48292fca2fa331ff679b3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37d412cff7ae0585ad48292fca2fa331ff679b3f", "html_url": "https://github.com/rust-lang/rust/commit/37d412cff7ae0585ad48292fca2fa331ff679b3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37d412cff7ae0585ad48292fca2fa331ff679b3f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da59fa74f0eaf790f74a893d000c81d87d97ba6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/da59fa74f0eaf790f74a893d000c81d87d97ba6e", "html_url": "https://github.com/rust-lang/rust/commit/da59fa74f0eaf790f74a893d000c81d87d97ba6e"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "65afd2aeee3ec547d0fd4f688b14905d4b0e8bb3", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=37d412cff7ae0585ad48292fca2fa331ff679b3f", "patch": "@@ -302,7 +302,6 @@ fn negative_impl<'cx, 'tcx>(\n         let impl_env = tcx.param_env(impl1_def_id);\n         let subject1 = match traits::fully_normalize(\n             &infcx,\n-            FulfillmentContext::new(),\n             ObligationCause::dummy(),\n             impl_env,\n             tcx.impl_subject(impl1_def_id),"}, {"sha": "e1bd48ba8aca81f5df0702327299483080a72216", "filename": "compiler/rustc_trait_selection/src/traits/misc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmisc.rs?ref=37d412cff7ae0585ad48292fca2fa331ff679b3f", "patch": "@@ -63,8 +63,7 @@ pub fn can_type_implement_copy<'tcx>(\n                 } else {\n                     ObligationCause::dummy_with_span(span)\n                 };\n-                let ctx = traits::FulfillmentContext::new();\n-                match traits::fully_normalize(&infcx, ctx, cause, param_env, ty) {\n+                match traits::fully_normalize(&infcx, cause, param_env, ty) {\n                     Ok(ty) => {\n                         if !infcx.type_is_copy_modulo_regions(param_env, ty, span) {\n                             infringing.push((field, ty));"}, {"sha": "8e1fa956fd610ffd281b981084bdb47fd5994d53", "filename": "compiler/rustc_trait_selection/src/traits/mod.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fmod.rs?ref=37d412cff7ae0585ad48292fca2fa331ff679b3f", "patch": "@@ -222,15 +222,13 @@ fn do_normalize_predicates<'tcx>(\n     // them here too, and we will remove this function when\n     // we move over to lazy normalization *anyway*.\n     tcx.infer_ctxt().ignoring_regions().enter(|infcx| {\n-        let fulfill_cx = FulfillmentContext::new();\n-        let predicates =\n-            match fully_normalize(&infcx, fulfill_cx, cause, elaborated_env, predicates) {\n-                Ok(predicates) => predicates,\n-                Err(errors) => {\n-                    let reported = infcx.report_fulfillment_errors(&errors, None, false);\n-                    return Err(reported);\n-                }\n-            };\n+        let predicates = match fully_normalize(&infcx, cause, elaborated_env, predicates) {\n+            Ok(predicates) => predicates,\n+            Err(errors) => {\n+                let reported = infcx.report_fulfillment_errors(&errors, None, false);\n+                return Err(reported);\n+            }\n+        };\n \n         debug!(\"do_normalize_predictes: normalized predicates = {:?}\", predicates);\n \n@@ -383,7 +381,6 @@ pub fn normalize_param_env_or_error<'tcx>(\n \n pub fn fully_normalize<'a, 'tcx, T>(\n     infcx: &InferCtxt<'a, 'tcx>,\n-    mut fulfill_cx: FulfillmentContext<'tcx>,\n     cause: ObligationCause<'tcx>,\n     param_env: ty::ParamEnv<'tcx>,\n     value: T,\n@@ -399,8 +396,10 @@ where\n         \"fully_normalize: normalized_value={:?} obligations={:?}\",\n         normalized_value, obligations\n     );\n+\n+    let mut fulfill_cx = FulfillmentContext::new();\n     for obligation in obligations {\n-        fulfill_cx.register_predicate_obligation(selcx.infcx(), obligation);\n+        fulfill_cx.register_predicate_obligation(infcx, obligation);\n     }\n \n     debug!(\"fully_normalize: select_all_or_error start\");"}, {"sha": "0506c200c619c40e09ac3128f695c4738d4f1fcd", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d412cff7ae0585ad48292fca2fa331ff679b3f/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=37d412cff7ae0585ad48292fca2fa331ff679b3f", "patch": "@@ -153,7 +153,6 @@ pub(super) fn specializes(tcx: TyCtxt<'_>, (impl1_def_id, impl2_def_id): (DefId,\n     tcx.infer_ctxt().enter(|infcx| {\n         let impl1_trait_ref = match traits::fully_normalize(\n             &infcx,\n-            FulfillmentContext::new(),\n             ObligationCause::dummy(),\n             penv,\n             impl1_trait_ref,"}]}