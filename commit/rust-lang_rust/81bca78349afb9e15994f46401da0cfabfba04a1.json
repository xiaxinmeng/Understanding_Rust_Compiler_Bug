{"sha": "81bca78349afb9e15994f46401da0cfabfba04a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYmNhNzgzNDlhZmI5ZTE1OTk0ZjQ2NDAxZGEwY2ZhYmZiYTA0YTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-24T10:14:14Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-24T10:14:14Z"}, "message": "rename", "tree": {"sha": "3c49cb117b2c16560c3e68fd807ec09c5020f59e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c49cb117b2c16560c3e68fd807ec09c5020f59e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81bca78349afb9e15994f46401da0cfabfba04a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81bca78349afb9e15994f46401da0cfabfba04a1", "html_url": "https://github.com/rust-lang/rust/commit/81bca78349afb9e15994f46401da0cfabfba04a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81bca78349afb9e15994f46401da0cfabfba04a1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cf156d85b776780d890762fb45a188dccc8510f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cf156d85b776780d890762fb45a188dccc8510f", "html_url": "https://github.com/rust-lang/rust/commit/8cf156d85b776780d890762fb45a188dccc8510f"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "c1472bbe57398829e97d944bbeea95f8496784f3", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/81bca78349afb9e15994f46401da0cfabfba04a1/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bca78349afb9e15994f46401da0cfabfba04a1/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=81bca78349afb9e15994f46401da0cfabfba04a1", "patch": "@@ -96,10 +96,10 @@ fn convert_tt(\n }\n \n struct TtTokenSource {\n-    tokens: Vec<Tok>,\n+    tokens: Vec<TtToken>,\n }\n \n-struct Tok {\n+struct TtToken {\n     kind: SyntaxKind,\n     is_joint_to_next: bool,\n     text: SmolStr,\n@@ -124,7 +124,7 @@ impl TtTokenSource {\n     }\n     fn convert_leaf(&mut self, leaf: &tt::Leaf) {\n         let tok = match leaf {\n-            tt::Leaf::Literal(l) => Tok {\n+            tt::Leaf::Literal(l) => TtToken {\n                 kind: SyntaxKind::INT_NUMBER, // FIXME\n                 is_joint_to_next: false,\n                 text: l.text.clone(),\n@@ -144,11 +144,11 @@ impl TtTokenSource {\n                     let s: &str = p.char.encode_utf8(&mut buf);\n                     SmolStr::new(s)\n                 };\n-                Tok { kind, is_joint_to_next: p.spacing == tt::Spacing::Joint, text }\n+                TtToken { kind, is_joint_to_next: p.spacing == tt::Spacing::Joint, text }\n             }\n             tt::Leaf::Ident(ident) => {\n                 let kind = SyntaxKind::from_keyword(ident.text.as_str()).unwrap_or(IDENT);\n-                Tok { kind, is_joint_to_next: false, text: ident.text.clone() }\n+                TtToken { kind, is_joint_to_next: false, text: ident.text.clone() }\n             }\n         };\n         self.tokens.push(tok)\n@@ -163,7 +163,7 @@ impl TtTokenSource {\n         let idx = closing as usize;\n         let kind = kinds[idx];\n         let text = &texts[idx..texts.len() - (1 - idx)];\n-        let tok = Tok { kind, is_joint_to_next: false, text: SmolStr::new(text) };\n+        let tok = TtToken { kind, is_joint_to_next: false, text: SmolStr::new(text) };\n         self.tokens.push(tok)\n     }\n }\n@@ -187,14 +187,14 @@ impl TokenSource for TtTokenSource {\n #[derive(Default)]\n struct TtTreeSink<'a> {\n     buf: String,\n-    tokens: &'a [Tok],\n+    tokens: &'a [TtToken],\n     text_pos: TextUnit,\n     token_pos: usize,\n     inner: SyntaxTreeBuilder,\n }\n \n impl<'a> TtTreeSink<'a> {\n-    fn new(tokens: &'a [Tok]) -> TtTreeSink {\n+    fn new(tokens: &'a [TtToken]) -> TtTreeSink {\n         TtTreeSink {\n             buf: String::new(),\n             tokens,"}]}