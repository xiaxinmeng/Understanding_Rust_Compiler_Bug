{"sha": "0ed265e63b130a52255031f593786bebdbc7f28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlZDI2NWU2M2IxMzBhNTIyNTUwMzFmNTkzNzg2YmViZGJjN2YyOGQ=", "commit": {"author": {"name": "Sae-bom Kim", "email": "sae-bom.kim@samsung.com", "date": "2015-03-18T07:57:29Z"}, "committer": {"name": "Sae-bom Kim", "email": "sae-bom.kim@samsung.com", "date": "2015-03-19T06:33:15Z"}, "message": "Ignore some tests on aarch64 to pass the run-pass test on aarch64-linux-android", "tree": {"sha": "61d1e8643566d1c624c8d3c95464c101997593f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61d1e8643566d1c624c8d3c95464c101997593f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ed265e63b130a52255031f593786bebdbc7f28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed265e63b130a52255031f593786bebdbc7f28d", "html_url": "https://github.com/rust-lang/rust/commit/0ed265e63b130a52255031f593786bebdbc7f28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ed265e63b130a52255031f593786bebdbc7f28d/comments", "author": {"login": "sae-bom", "id": 11533579, "node_id": "MDQ6VXNlcjExNTMzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/11533579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sae-bom", "html_url": "https://github.com/sae-bom", "followers_url": "https://api.github.com/users/sae-bom/followers", "following_url": "https://api.github.com/users/sae-bom/following{/other_user}", "gists_url": "https://api.github.com/users/sae-bom/gists{/gist_id}", "starred_url": "https://api.github.com/users/sae-bom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sae-bom/subscriptions", "organizations_url": "https://api.github.com/users/sae-bom/orgs", "repos_url": "https://api.github.com/users/sae-bom/repos", "events_url": "https://api.github.com/users/sae-bom/events{/privacy}", "received_events_url": "https://api.github.com/users/sae-bom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sae-bom", "id": 11533579, "node_id": "MDQ6VXNlcjExNTMzNTc5", "avatar_url": "https://avatars.githubusercontent.com/u/11533579?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sae-bom", "html_url": "https://github.com/sae-bom", "followers_url": "https://api.github.com/users/sae-bom/followers", "following_url": "https://api.github.com/users/sae-bom/following{/other_user}", "gists_url": "https://api.github.com/users/sae-bom/gists{/gist_id}", "starred_url": "https://api.github.com/users/sae-bom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sae-bom/subscriptions", "organizations_url": "https://api.github.com/users/sae-bom/orgs", "repos_url": "https://api.github.com/users/sae-bom/repos", "events_url": "https://api.github.com/users/sae-bom/events{/privacy}", "received_events_url": "https://api.github.com/users/sae-bom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c10918905fda1344e78bc16e6e73294d096ee97d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c10918905fda1344e78bc16e6e73294d096ee97d", "html_url": "https://github.com/rust-lang/rust/commit/c10918905fda1344e78bc16e6e73294d096ee97d"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "b3713ea8ae75fe4bf7434744a5fcb2e0a035261f", "filename": "src/compiletest/header.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Fcompiletest%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Fcompiletest%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fheader.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -163,6 +163,9 @@ pub fn is_test_ignored(config: &Config, testfile: &Path) -> bool {\n     fn ignore_target(config: &Config) -> String {\n         format!(\"ignore-{}\", util::get_os(&config.target))\n     }\n+    fn ignore_architecture(config: &Config) -> String {\n+        format!(\"ignore-{}\", util::get_arch(&config.target))\n+    }\n     fn ignore_stage(config: &Config) -> String {\n         format!(\"ignore-{}\",\n                 config.stage_id.split('-').next().unwrap())\n@@ -226,6 +229,7 @@ pub fn is_test_ignored(config: &Config, testfile: &Path) -> bool {\n     let val = iter_header(testfile, &mut |ln| {\n         !parse_name_directive(ln, \"ignore-test\") &&\n         !parse_name_directive(ln, &ignore_target(config)) &&\n+        !parse_name_directive(ln, &ignore_architecture(config)) &&\n         !parse_name_directive(ln, &ignore_stage(config)) &&\n         !(config.mode == common::Pretty && parse_name_directive(ln, \"ignore-pretty\")) &&\n         !(config.target != config.host && parse_name_directive(ln, \"ignore-cross-compile\")) &&"}, {"sha": "2e11cf47d1e56fa2bf7c09e04457ca848cbe3ff1", "filename": "src/compiletest/util.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Fcompiletest%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Fcompiletest%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Futil.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -25,6 +25,23 @@ const OS_TABLE: &'static [(&'static str, &'static str)] = &[\n     (\"openbsd\", \"openbsd\"),\n ];\n \n+const ARCH_TABLE: &'static [(&'static str, &'static str)] = &[\n+    (\"i386\", \"x86\"),\n+    (\"i686\", \"x86\"),\n+    (\"amd64\", \"x86_64\"),\n+    (\"x86_64\", \"x86_64\"),\n+    (\"sparc\", \"sparc\"),\n+    (\"powerpc\", \"powerpc\"),\n+    (\"arm64\", \"aarch64\"),\n+    (\"arm\", \"arm\"),\n+    (\"aarch64\", \"aarch64\"),\n+    (\"mips\", \"mips\"),\n+    (\"xcore\", \"xcore\"),\n+    (\"msp430\", \"msp430\"),\n+    (\"hexagon\", \"hexagon\"),\n+    (\"s390x\", \"systemz\"),\n+];\n+\n pub fn get_os(triple: &str) -> &'static str {\n     for &(triple_os, os) in OS_TABLE {\n         if triple.contains(triple_os) {\n@@ -33,6 +50,14 @@ pub fn get_os(triple: &str) -> &'static str {\n     }\n     panic!(\"Cannot determine OS from triple\");\n }\n+pub fn get_arch(triple: &str) -> &'static str {\n+    for &(triple_arch, arch) in ARCH_TABLE {\n+        if triple.contains(triple_arch) {\n+            return arch\n+        }\n+    }\n+    panic!(\"Cannot determine Architecture from triple\");\n+}\n \n pub fn make_new_path(path: &str) -> String {\n     assert!(cfg!(windows));"}, {"sha": "9e05f38af7a4889493ca692612af97ce5c00b89e", "filename": "src/test/run-pass/foreign-call-no-runtime.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-aarch64\n+\n extern crate libc;\n \n use std::mem;"}, {"sha": "bd2ddc6b9b214db01c1100d7bfb8eb758febfe88", "filename": "src/test/run-pass/issue-13304.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-13304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-13304.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-aarch64\n+\n use std::env;\n use std::io::prelude::*;\n use std::io;"}, {"sha": "9562d113ada7059e5d7c487e4225ddb938ea74f0", "filename": "src/test/run-pass/issue-16272.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-16272.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16272.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-aarch64\n+\n use std::process::Command;\n use std::env;\n "}, {"sha": "fe9ae022d88b4cc5a372ec970e5991175dc9a5c8", "filename": "src/test/run-pass/issue-20091.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fissue-20091.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20091.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-aarch64\n+\n #[cfg(unix)]\n fn main() {\n     use std::process::Command;"}, {"sha": "466b38e8742339bfdc171bf76f2fa136da6703f7", "filename": "src/test/run-pass/process-spawn-with-unicode-params.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ed265e63b130a52255031f593786bebdbc7f28d/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs?ref=0ed265e63b130a52255031f593786bebdbc7f28d", "patch": "@@ -16,6 +16,8 @@\n // non-ASCII characters.  The child process ensures all the strings are\n // intact.\n \n+// ignore-aarch64\n+\n use std::io::prelude::*;\n use std::io;\n use std::fs;"}]}