{"sha": "499e024ac967a2315bd6dc88086999b92a254a0b", "node_id": "C_kwDOAAsO6NoAKDQ5OWUwMjRhYzk2N2EyMzE1YmQ2ZGM4ODA4Njk5OWI5MmEyNTRhMGI", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-01-10T21:35:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-07-05T17:43:52Z"}, "message": "rustdoc: Add more semantic information to impl ids\n\nInstead of generating `#impl`, `#impl-1`, etc., generate IDs\nlike `#impl-Foo<M>`.\n\nCo-authored-by: Noah Lev <camelidcamel@gmail.com>", "tree": {"sha": "2eba5249faa223d5dfe2fc687b0f42a7426f3af0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eba5249faa223d5dfe2fc687b0f42a7426f3af0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/499e024ac967a2315bd6dc88086999b92a254a0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/499e024ac967a2315bd6dc88086999b92a254a0b", "html_url": "https://github.com/rust-lang/rust/commit/499e024ac967a2315bd6dc88086999b92a254a0b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/499e024ac967a2315bd6dc88086999b92a254a0b/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54f79babae06d3772c067f696e5b12db822ae25f", "url": "https://api.github.com/repos/rust-lang/rust/commits/54f79babae06d3772c067f696e5b12db822ae25f", "html_url": "https://github.com/rust-lang/rust/commit/54f79babae06d3772c067f696e5b12db822ae25f"}], "stats": {"total": 117, "additions": 49, "deletions": 68}, "files": [{"sha": "652610e2ab1f9cc20809a42fc48d08ea0342f132", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 8, "deletions": 25, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -634,7 +634,6 @@ fn render_impls(\n                 &[],\n                 ImplRenderingParameters {\n                     show_def_docs: true,\n-                    is_on_foreign_type: false,\n                     show_default_items: true,\n                     show_non_assoc_items: true,\n                     toggle_open_by_default,\n@@ -1071,7 +1070,6 @@ fn render_assoc_items_inner(\n                 &[],\n                 ImplRenderingParameters {\n                     show_def_docs: true,\n-                    is_on_foreign_type: false,\n                     show_default_items: true,\n                     show_non_assoc_items: true,\n                     toggle_open_by_default: true,\n@@ -1287,7 +1285,6 @@ fn notable_traits_decl(decl: &clean::FnDecl, cx: &Context<'_>) -> String {\n #[derive(Clone, Copy, Debug)]\n struct ImplRenderingParameters {\n     show_def_docs: bool,\n-    is_on_foreign_type: bool,\n     show_default_items: bool,\n     /// Whether or not to show methods.\n     show_non_assoc_items: bool,\n@@ -1603,7 +1600,6 @@ fn render_impl(\n             parent,\n             rendering_params.show_def_docs,\n             use_absolute,\n-            rendering_params.is_on_foreign_type,\n             aliases,\n         );\n         if toggled {\n@@ -1688,21 +1684,12 @@ pub(crate) fn render_impl_summary(\n     containing_item: &clean::Item,\n     show_def_docs: bool,\n     use_absolute: Option<bool>,\n-    is_on_foreign_type: bool,\n     // This argument is used to reference same type with different paths to avoid duplication\n     // in documentation pages for trait with automatic implementations like \"Send\" and \"Sync\".\n     aliases: &[String],\n ) {\n-    let id = cx.derive_id(match i.inner_impl().trait_ {\n-        Some(ref t) => {\n-            if is_on_foreign_type {\n-                get_id_for_impl_on_foreign_type(&i.inner_impl().for_, t, cx)\n-            } else {\n-                format!(\"impl-{}\", small_url_encode(format!(\"{:#}\", t.print(cx))))\n-            }\n-        }\n-        None => \"impl\".to_string(),\n-    });\n+    let id =\n+        cx.derive_id(get_id_for_impl(&i.inner_impl().for_, i.inner_impl().trait_.as_ref(), cx));\n     let aliases = if aliases.is_empty() {\n         String::new()\n     } else {\n@@ -2147,12 +2134,11 @@ fn sidebar_struct(cx: &Context<'_>, buf: &mut Buffer, it: &clean::Item, s: &clea\n     }\n }\n \n-fn get_id_for_impl_on_foreign_type(\n-    for_: &clean::Type,\n-    trait_: &clean::Path,\n-    cx: &Context<'_>,\n-) -> String {\n-    small_url_encode(format!(\"impl-{:#}-for-{:#}\", trait_.print(cx), for_.print(cx)))\n+fn get_id_for_impl(for_: &clean::Type, trait_: Option<&clean::Path>, cx: &Context<'_>) -> String {\n+    match trait_ {\n+        Some(t) => small_url_encode(format!(\"impl-{:#}-for-{:#}\", t.print(cx), for_.print(cx))),\n+        None => small_url_encode(format!(\"impl-{:#}\", for_.print(cx))),\n+    }\n }\n \n fn extract_for_impl_name(item: &clean::Item, cx: &Context<'_>) -> Option<(String, String)> {\n@@ -2161,10 +2147,7 @@ fn extract_for_impl_name(item: &clean::Item, cx: &Context<'_>) -> Option<(String\n             i.trait_.as_ref().map(|trait_| {\n                 // Alternative format produces no URLs,\n                 // so this parameter does nothing.\n-                (\n-                    format!(\"{:#}\", i.for_.print(cx)),\n-                    get_id_for_impl_on_foreign_type(&i.for_, trait_, cx),\n-                )\n+                (format!(\"{:#}\", i.for_.print(cx)), get_id_for_impl(&i.for_, Some(trait_), cx))\n             })\n         }\n         _ => None,"}, {"sha": "88bafd514d6445a4631aac9be0579d7e04154a13", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -853,7 +853,6 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n                     &[],\n                     ImplRenderingParameters {\n                         show_def_docs: false,\n-                        is_on_foreign_type: true,\n                         show_default_items: false,\n                         show_non_assoc_items: true,\n                         toggle_open_by_default: false,\n@@ -1627,7 +1626,6 @@ fn render_implementor(\n         aliases,\n         ImplRenderingParameters {\n             show_def_docs: false,\n-            is_on_foreign_type: false,\n             show_default_items: false,\n             show_non_assoc_items: false,\n             toggle_open_by_default: false,"}, {"sha": "84b8bbd1b327f1c8431fd104e70ce04727814a5b", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -28,7 +28,7 @@ move-cursor-to: \"h2#implementations\"\n assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n \n // Same thing with the impl block title.\n-move-cursor-to: \"#impl\"\n-assert-css: (\"#impl a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n+move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n+assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n \n assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})"}, {"sha": "a47a9c8a14c1f07e4505729564490ebe7ea7c14e", "filename": "src/test/rustdoc-gui/headers-color.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheaders-color.goml?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -23,9 +23,9 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n assert-css: (\n-    \"#impl\",\n+    \"#impl-Foo\",\n     {\"color\": \"rgb(197, 197, 197)\", \"background-color\": \"rgba(255, 236, 164, 0.06)\"},\n )\n \n@@ -62,9 +62,9 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n assert-css: (\n-    \"#impl\",\n+    \"#impl-Foo\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(73, 74, 61)\"},\n )\n \n@@ -99,8 +99,8 @@ assert-css: (\n     ALL,\n )\n \n-goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl\n-assert-css: (\"#impl\", {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(253, 255, 211)\"})\n+goto: file://|DOC_PATH|/test_docs/struct.Foo.html#impl-Foo\n+assert-css: (\"#impl-Foo\", {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(253, 255, 211)\"})\n \n goto: file://|DOC_PATH|/test_docs/struct.Foo.html#method.must_use\n assert-css: ("}, {"sha": "cc3dd61e99a7a1169809bd22b89e768085429d2a", "filename": "src/test/rustdoc-gui/headings.goml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheadings.goml?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -32,8 +32,8 @@ assert-css: (\"h4#sub-heading-for-field\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedStruct > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedStruct > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"border-bottom-width\": \"0px\"})\n \n@@ -87,8 +87,8 @@ assert-css: (\"h6#structy-prose-sub-heading\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedEnum > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedEnum > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"font-size\": \"16px\"})\n assert-css: (\"#method\\.do_nothing > h4.code-header\", {\"border-bottom-width\": \"0px\"})\n \n@@ -129,8 +129,8 @@ assert-css: (\"h4#sub-heading-for-union-variant\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h2#implementations\", {\"font-size\": \"22px\"})\n assert-css: (\"h2#implementations\", {\"border-bottom-width\": \"1px\"})\n \n-assert-css: (\"#impl > h3.code-header\", {\"font-size\": \"18px\"})\n-assert-css: (\"#impl > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n+assert-css: (\"#impl-HeavilyDocumentedUnion > h3.code-header\", {\"font-size\": \"18px\"})\n+assert-css: (\"#impl-HeavilyDocumentedUnion > h3.code-header\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h4#title-for-union-impl-doc\", {\"font-size\": \"16px\"})\n assert-css: (\"h4#title-for-union-impl-doc\", {\"border-bottom-width\": \"0px\"})\n assert-css: (\"h5#sub-heading-for-union-impl-doc\", {\"font-size\": \"16px\"})"}, {"sha": "2278acd102b5fb4a8500ce3531a0dd215e257f72", "filename": "src/test/rustdoc-gui/implementors.goml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fimplementors.goml?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -6,8 +6,8 @@ assert: \"#implementors-list\"\n assert-count: (\"#implementors-list .impl\", 2)\n // Now we check that both implementors have an anchor, an ID and a similar DOM.\n assert: (\"#implementors-list .impl:nth-child(1) > a.anchor\")\n-assert-attribute: (\"#implementors-list .impl:nth-child(1)\", {\"id\": \"impl-Whatever\"})\n-assert-attribute: (\"#implementors-list .impl:nth-child(1) > a.anchor\", {\"href\": \"#impl-Whatever\"})\n+assert-attribute: (\"#implementors-list .impl:nth-child(1)\", {\"id\": \"impl-Whatever-for-Struct\"})\n+assert-attribute: (\"#implementors-list .impl:nth-child(1) > a.anchor\", {\"href\": \"#impl-Whatever-for-Struct\"})\n assert: \"#implementors-list .impl:nth-child(1) > .code-header.in-band\"\n \n assert: (\"#implementors-list .impl:nth-child(2) > a.anchor\")"}, {"sha": "4a328c9f9e06e09904b49fefa204466de507b4ab", "filename": "src/test/rustdoc-gui/toggle-click-deadspace.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -8,5 +8,5 @@ click: \".impl-items .rustdoc-toggle summary::before\" // This is the position of\n assert-attribute-false: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n \n // Click the \"Trait\" part of \"impl Trait\" and verify it navigates.\n-click: \"#impl-Trait h3 a:first-of-type\"\n+click: \"#impl-Trait-for-Foo h3 a:first-of-type\"\n assert-text: (\".fqn .in-band\", \"Trait lib2::Trait\")"}, {"sha": "676d656dabf471f172b7d2dca79087a696c4bf42", "filename": "src/test/rustdoc/blanket-reexport-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fblanket-reexport-item.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -1,6 +1,6 @@\n #![crate_name = \"foo\"]\n \n-// @has foo/struct.S.html '//*[@id=\"impl-Into%3CU%3E\"]//h3[@class=\"code-header in-band\"]' 'impl<T, U> Into<U> for T'\n+// @has foo/struct.S.html '//*[@id=\"impl-Into%3CU%3E-for-S\"]//h3[@class=\"code-header in-band\"]' 'impl<T, U> Into<U> for T'\n pub struct S2 {}\n mod m {\n     pub struct S {}"}, {"sha": "61af7de4794a6e7fc8801575ddc21af286897743", "filename": "src/test/rustdoc/const-generics/const-generics-docs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-generics-docs.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -36,7 +36,7 @@ pub struct Foo<const N: usize> where u8: Trait<N>;\n // @has foo/struct.Bar.html '//pre[@class=\"rust struct\"]' 'pub struct Bar<T, const N: usize>(_)'\n pub struct Bar<T, const N: usize>([T; N]);\n \n-// @has foo/struct.Foo.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n+// @has foo/struct.Foo.html '//*[@id=\"impl-Foo%3CM%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Foo<M> where u8: Trait<M>'\n impl<const M: usize> Foo<M> where u8: Trait<M> {\n     // @has - '//*[@id=\"associatedconstant.FOO_ASSOC\"]' 'pub const FOO_ASSOC: usize'\n     pub const FOO_ASSOC: usize = M + 13;\n@@ -47,7 +47,7 @@ impl<const M: usize> Foo<M> where u8: Trait<M> {\n     }\n }\n \n-// @has foo/struct.Bar.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Bar<u8, M>'\n+// @has foo/struct.Bar.html '//*[@id=\"impl-Bar%3Cu8%2C%20M%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<const M: usize> Bar<u8, M>'\n impl<const M: usize> Bar<u8, M> {\n     // @has - '//*[@id=\"method.hey\"]' \\\n     //      'pub fn hey<const N: usize>(&self) -> Foo<N> where u8: Trait<N>'"}, {"sha": "f1181d54ac87fa7a6a0c5ea3c9c3c3ffeda0e6bc", "filename": "src/test/rustdoc/const-generics/const-impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -9,20 +9,20 @@ pub enum Order {\n }\n \n // @has foo/struct.VSet.html '//pre[@class=\"rust struct\"]' 'pub struct VSet<T, const ORDER: Order>'\n-// @has foo/struct.VSet.html '//*[@id=\"impl-Send\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n-// @has foo/struct.VSet.html '//*[@id=\"impl-Sync\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-Send-for-VSet%3CT%2C%20ORDER%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Send for VSet<T, ORDER>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-Sync-for-VSet%3CT%2C%20ORDER%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T, const ORDER: Order> Sync for VSet<T, ORDER>'\n pub struct VSet<T, const ORDER: Order> {\n     inner: Vec<T>,\n }\n \n-// @has foo/struct.VSet.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Sorted }>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-VSet%3CT%2C%20{%20Order%3A%3ASorted%20}%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Sorted }>'\n impl<T> VSet<T, { Order::Sorted }> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n     }\n }\n \n-// @has foo/struct.VSet.html '//*[@id=\"impl-1\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Unsorted }>'\n+// @has foo/struct.VSet.html '//*[@id=\"impl-VSet%3CT%2C%20{%20Order%3A%3AUnsorted%20}%3E\"]/h3[@class=\"code-header in-band\"]' 'impl<T> VSet<T, { Order::Unsorted }>'\n impl<T> VSet<T, { Order::Unsorted }> {\n     pub fn new() -> Self {\n         Self { inner: Vec::new() }\n@@ -31,7 +31,7 @@ impl<T> VSet<T, { Order::Unsorted }> {\n \n pub struct Escape<const S: &'static str>;\n \n-// @has foo/struct.Escape.html '//*[@id=\"impl\"]/h3[@class=\"code-header in-band\"]' 'impl Escape<r#\"<script>alert(\"Escape\");</script>\"#>'\n+// @has foo/struct.Escape.html '//*[@id=\"impl-Escape%3Cr#%22%3Cscript%3Ealert(%22Escape%22)%3B%3C/script%3E%22#%3E\"]/h3[@class=\"code-header in-band\"]' 'impl Escape<r#\"<script>alert(\"Escape\");</script>\"#>'\n impl Escape<r#\"<script>alert(\"Escape\");</script>\"#> {\n     pub fn f() {}\n }"}, {"sha": "83902d6f7ab137a1af92ff61543ecf5f9896975f", "filename": "src/test/rustdoc/empty-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fempty-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fempty-impls.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -1,19 +1,19 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Foo.html\n-// @has - '//div[@id=\"synthetic-implementations-list\"]/*[@id=\"impl-Send\"]' 'impl Send for Foo'\n+// @has - '//div[@id=\"synthetic-implementations-list\"]/*[@id=\"impl-Send-for-Foo\"]' 'impl Send for Foo'\n pub struct Foo;\n \n pub trait EmptyTrait {}\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/*[@id=\"impl-EmptyTrait\"]' 'impl EmptyTrait for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/*[@id=\"impl-EmptyTrait-for-Foo\"]' 'impl EmptyTrait for Foo'\n impl EmptyTrait for Foo {}\n \n pub trait NotEmpty {\n     fn foo(&self);\n }\n \n-// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/*[@id=\"impl-NotEmpty\"]' 'impl NotEmpty for Foo'\n+// @has - '//div[@id=\"trait-implementations-list\"]/details/summary/*[@id=\"impl-NotEmpty-for-Foo\"]' 'impl NotEmpty for Foo'\n impl NotEmpty for Foo {\n     fn foo(&self) {}\n }"}, {"sha": "2479c022237eb20fe7c50fed93bad70f1453df25", "filename": "src/test/rustdoc/generic-impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fgeneric-impl.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -2,10 +2,10 @@\n \n use std::fmt;\n \n-// @!has foo/struct.Bar.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-ToString-for-Bar\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n pub struct Bar;\n \n-// @has foo/struct.Foo.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @has foo/struct.Foo.html '//*[@id=\"impl-ToString-for-Foo\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n pub struct Foo;\n // @has foo/struct.Foo.html '//*[@class=\"sidebar-elems\"]//section//a[@href=\"#impl-ToString\"]' 'ToString'\n "}, {"sha": "cc3f6337719c3155de676ee716b7c82717264aeb", "filename": "src/test/rustdoc/hidden-trait-struct-impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fhidden-trait-struct-impls.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -11,11 +11,11 @@ pub struct Bar;\n \n struct Hidden;\n \n-// @!has foo/struct.Bar.html '//*[@id=\"impl-Foo\"]' 'impl Foo for Bar'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-Foo-for-Bar\"]' 'impl Foo for Bar'\n impl Foo for Bar {}\n-// @!has foo/struct.Bar.html '//*[@id=\"impl-Dark\"]' 'impl Dark for Bar'\n+// @!has foo/struct.Bar.html '//*[@id=\"impl-Dark-for-Bar\"]' 'impl Dark for Bar'\n impl Dark for Bar {}\n-// @has foo/struct.Bar.html '//*[@id=\"impl-Bam\"]' 'impl Bam for Bar'\n+// @has foo/struct.Bar.html '//*[@id=\"impl-Bam-for-Bar\"]' 'impl Bam for Bar'\n // @has foo/trait.Bam.html '//*[@id=\"implementors-list\"]' 'impl Bam for Bar'\n impl Bam for Bar {}\n // @!has foo/trait.Bam.html '//*[@id=\"implementors-list\"]' 'impl Bam for Hidden'"}, {"sha": "635c3175f8138a39e40bc83d04f2bc1a6c0386be", "filename": "src/test/rustdoc/issue-29503.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -5,7 +5,7 @@ pub trait MyTrait {\n     fn my_string(&self) -> String;\n }\n \n-// @has - \"//div[@id='implementors-list']//*[@id='impl-MyTrait']//h3[@class='code-header in-band']\" \"impl<T> MyTrait for T where T: Debug\"\n+// @has - \"//div[@id='implementors-list']//*[@id='impl-MyTrait-for-T']//h3[@class='code-header in-band']\" \"impl<T> MyTrait for T where T: Debug\"\n impl<T> MyTrait for T\n where\n     T: fmt::Debug,"}, {"sha": "eebb2cf5a355d5037d7bde41f66460175a785127", "filename": "src/test/rustdoc/primitive/primitive-generic-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive%2Fprimitive-generic-impl.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -1,7 +1,7 @@\n #![feature(rustdoc_internals)]\n #![crate_name = \"foo\"]\n \n-// @has foo/primitive.i32.html '//*[@id=\"impl-ToString\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n+// @has foo/primitive.i32.html '//*[@id=\"impl-ToString-for-i32\"]//h3[@class=\"code-header in-band\"]' 'impl<T> ToString for T'\n \n #[doc(primitive = \"i32\")]\n /// Some useless docs, wouhou!"}, {"sha": "9d2c1967757f103df4ef07dbb47c0fb40ff02b86", "filename": "src/test/rustdoc/sized_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fsized_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsized_trait.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -11,7 +11,7 @@ pub struct Bar {\n pub struct Foo<T: ?Sized>(T);\n \n // @has foo/struct.Unsized.html\n-// @has - '//*[@id=\"impl-Sized\"]//h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n+// @has - '//*[@id=\"impl-Sized-for-Unsized\"]//h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "8c9460d6cfd95dc05173922a2a52438ac9783840", "filename": "src/test/rustdoc/src-links-auto-impls.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -1,12 +1,12 @@\n #![crate_name = \"foo\"]\n \n // @has foo/struct.Unsized.html\n-// @has - '//*[@id=\"impl-Sized\"]/h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n+// @has - '//div[@id=\"impl-Sized-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl !Sized for Unsized'\n // @!has - '//*[@id=\"impl-Sized\"]//a[@class=\"srclink\"]' 'source'\n-// @has - '//*[@id=\"impl-Sync\"]/h3[@class=\"code-header in-band\"]' 'impl Sync for Unsized'\n+// @has - '//*[@id=\"impl-Sync-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl Sync for Unsized'\n // @!has - '//*[@id=\"impl-Sync\"]//a[@class=\"srclink\"]' 'source'\n-// @has - '//*[@id=\"impl-Any\"]/h3[@class=\"code-header in-band\"]' 'impl<T> Any for T'\n-// @has - '//*[@id=\"impl-Any\"]//a[@class=\"srclink\"]' 'source'\n+// @has - '//*[@id=\"impl-Any-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl<T> Any for T'\n+// @has - '//*[@id=\"impl-Any-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "4f7e2dfe3b9a53310e1d63b20394649461869462", "filename": "src/test/rustdoc/trait-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/499e024ac967a2315bd6dc88086999b92a254a0b/src%2Ftest%2Frustdoc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-impl.rs?ref=499e024ac967a2315bd6dc88086999b92a254a0b", "patch": "@@ -43,5 +43,5 @@ impl Trait for Struct {\n     // @!has - '//*[@id=\"method.d\"]/../../div[@class=\"docblock\"]/p/em'\n     fn d() {}\n \n-    // @has - '//*[@id=\"impl-Trait\"]/h3//a/@href' 'trait.Trait.html'\n+    // @has - '//*[@id=\"impl-Trait-for-Struct\"]/h3//a/@href' 'trait.Trait.html'\n }"}]}