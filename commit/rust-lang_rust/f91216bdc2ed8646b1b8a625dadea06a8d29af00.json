{"sha": "f91216bdc2ed8646b1b8a625dadea06a8d29af00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MTIxNmJkYzJlZDg2NDZiMWI4YTYyNWRhZGVhMDZhOGQyOWFmMDA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-24T04:19:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-04-24T04:19:44Z"}, "message": "Rollup merge of #24752 - doomrobo:patch-1, r=steveklabnik\n\n Updated sample code to updated syntax (now compiles). Also tweaked the text to reflect the change.", "tree": {"sha": "a65105333dded533368c4b0ad92eb17a1b796b75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a65105333dded533368c4b0ad92eb17a1b796b75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f91216bdc2ed8646b1b8a625dadea06a8d29af00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f91216bdc2ed8646b1b8a625dadea06a8d29af00", "html_url": "https://github.com/rust-lang/rust/commit/f91216bdc2ed8646b1b8a625dadea06a8d29af00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f91216bdc2ed8646b1b8a625dadea06a8d29af00/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76dd69183f8dc9d65188f9fea177963173a03718", "url": "https://api.github.com/repos/rust-lang/rust/commits/76dd69183f8dc9d65188f9fea177963173a03718", "html_url": "https://github.com/rust-lang/rust/commit/76dd69183f8dc9d65188f9fea177963173a03718"}, {"sha": "352838ed349d01ae16408221bc6a327bf3651ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/352838ed349d01ae16408221bc6a327bf3651ef2", "html_url": "https://github.com/rust-lang/rust/commit/352838ed349d01ae16408221bc6a327bf3651ef2"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "d150075a0f4bd1c1c0a82ef97994eb57ef700e87", "filename": "src/doc/reference.md", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f91216bdc2ed8646b1b8a625dadea06a8d29af00/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/f91216bdc2ed8646b1b8a625dadea06a8d29af00/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=f91216bdc2ed8646b1b8a625dadea06a8d29af00", "patch": "@@ -1102,40 +1102,31 @@ signature. Each type parameter must be explicitly declared, in an\n angle-bracket-enclosed, comma-separated list following the function name.\n \n ```{.ignore}\n-fn iter<T>(seq: &[T], f: |T|) {\n-    for elt in seq.iter() { f(elt); }\n+fn iter<T, F>(seq: &[T], f: F) where T: Copy, F: Fn(T) {\n+    for elt in seq { f(*elt); }\n }\n-fn map<T, U>(seq: &[T], f: |T| -> U) -> Vec<U> {\n+fn map<T, U, F>(seq: &[T], f: F) -> Vec<U> where T: Copy, U: Copy, F: Fn(T) -> U {\n     let mut acc = vec![];\n-    for elt in seq.iter() { acc.push(f(elt)); }\n+    for elt in seq { acc.push(f(*elt)); }\n     acc\n }\n ```\n \n Inside the function signature and body, the name of the type parameter can be\n-used as a type name.\n+used as a type name. [Trait](#traits) bounds can be specified for type parameters\n+to allow methods with that trait to be called on values of that type. This is\n+specified using the `where` syntax, as in the above example.\n \n When a generic function is referenced, its type is instantiated based on the\n context of the reference. For example, calling the `iter` function defined\n above on `[1, 2]` will instantiate type parameter `T` with `i32`, and require\n-the closure parameter to have type `fn(i32)`.\n+the closure parameter to have type `Fn(i32)`.\n \n The type parameters can also be explicitly supplied in a trailing\n [path](#paths) component after the function name. This might be necessary if\n there is not sufficient context to determine the type parameters. For example,\n `mem::size_of::<u32>() == 4`.\n \n-Since a parameter type is opaque to the generic function, the set of operations\n-that can be performed on it is limited. Values of parameter type can only be\n-moved, not copied.\n-\n-```\n-fn id<T>(x: T) -> T { x }\n-```\n-\n-Similarly, [trait](#traits) bounds can be specified for type parameters to\n-allow methods with that trait to be called on values of that type.\n-\n #### Unsafety\n \n Unsafe operations are those that potentially violate the memory-safety"}]}