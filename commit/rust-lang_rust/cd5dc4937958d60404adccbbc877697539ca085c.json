{"sha": "cd5dc4937958d60404adccbbc877697539ca085c", "node_id": "C_kwDOAAsO6NoAKGNkNWRjNDkzNzk1OGQ2MDQwNGFkY2NiYmM4Nzc2OTc1MzljYTA4NWM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-29T09:23:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-29T09:23:14Z"}, "message": "Rollup merge of #96492 - joshtriplett:revert-std-ffi-re-export, r=yaahc\n\nRevert \"Re-export core::ffi types from std::ffi\"\n\nThis reverts commit 9aed829fe6cdf5eaf278c6c3972f7acd0830887d.\n\nFixes https://github.com/rust-lang/rust/issues/96435 , a regression\nin crates doing `use std::ffi::*;` and `use std::os::raw::*;`.\n\nWe can re-add this re-export once the `core::ffi` types\nare stable, and thus the `std::os::raw` types can become re-exports as\nwell, which will avoid the conflict. (Type aliases to the same type\nstill conflict, but re-exports of the same type don't.)", "tree": {"sha": "3a2caeab4e03841bba1dfa23b49220bc069942b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a2caeab4e03841bba1dfa23b49220bc069942b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd5dc4937958d60404adccbbc877697539ca085c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJia66CCRBK7hj4Ov3rIwAAWZcIAEghuozAxnaHOE4YIX/t3/mB\n4oqrU26kOpvqVnhk9APO0n0Q6DUX3/gH97rOZhbNhNLxUdEdwK1I9ccisuROq0oO\nWuS3tP2qsDD8UU8hyTQQXe/QnPCu+dki70x425t/XUrpTVaJbhxnIGRBoOYss343\nzg9k4jEygg/KP2LfVt4j6CEk+LESCO5ZZTexVyjfLDDv/d3NY57k2UlCUVhuaaGZ\njt/JXD6nqH/Yr0GIRHUgWv9kxmjpgvWRSxGIx4KSCX8x8Gjq1D1w4MWa5rJ/FRXF\nbk2soIUp8CCdrTQaPsROjyoKvQid5tLFZO85kkPR20a5ZlUB5GxCaTxFayvtq/E=\n=/5Qv\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a2caeab4e03841bba1dfa23b49220bc069942b2\nparent db1ec252247f8066a3d9e130f85147d2117c3edb\nparent 07ea143f96929ac7f0b7af0f025be48a472273e5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651224194 +0200\ncommitter GitHub <noreply@github.com> 1651224194 +0200\n\nRollup merge of #96492 - joshtriplett:revert-std-ffi-re-export, r=yaahc\n\nRevert \"Re-export core::ffi types from std::ffi\"\n\nThis reverts commit 9aed829fe6cdf5eaf278c6c3972f7acd0830887d.\n\nFixes https://github.com/rust-lang/rust/issues/96435 , a regression\nin crates doing `use std::ffi::*;` and `use std::os::raw::*;`.\n\nWe can re-add this re-export once the `core::ffi` types\nare stable, and thus the `std::os::raw` types can become re-exports as\nwell, which will avoid the conflict. (Type aliases to the same type\nstill conflict, but re-exports of the same type don't.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5dc4937958d60404adccbbc877697539ca085c", "html_url": "https://github.com/rust-lang/rust/commit/cd5dc4937958d60404adccbbc877697539ca085c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd5dc4937958d60404adccbbc877697539ca085c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db1ec252247f8066a3d9e130f85147d2117c3edb", "url": "https://api.github.com/repos/rust-lang/rust/commits/db1ec252247f8066a3d9e130f85147d2117c3edb", "html_url": "https://github.com/rust-lang/rust/commit/db1ec252247f8066a3d9e130f85147d2117c3edb"}, {"sha": "07ea143f96929ac7f0b7af0f025be48a472273e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/07ea143f96929ac7f0b7af0f025be48a472273e5", "html_url": "https://github.com/rust-lang/rust/commit/07ea143f96929ac7f0b7af0f025be48a472273e5"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "4a5817939567b8690b3841c9d611999bda8571d3", "filename": "library/alloc/tests/c_str.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cd5dc4937958d60404adccbbc877697539ca085c/library%2Falloc%2Ftests%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5dc4937958d60404adccbbc877697539ca085c/library%2Falloc%2Ftests%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fc_str.rs?ref=cd5dc4937958d60404adccbbc877697539ca085c", "patch": "@@ -1,5 +1,6 @@\n use std::borrow::Cow::{Borrowed, Owned};\n-use std::ffi::{c_char, CStr};\n+use std::ffi::CStr;\n+use std::os::raw::c_char;\n \n #[test]\n fn to_str() {"}, {"sha": "10983a3323265727545b503b261c608fa74336d0", "filename": "library/std/src/ffi/mod.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cd5dc4937958d60404adccbbc877697539ca085c/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5dc4937958d60404adccbbc877697539ca085c/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fmod.rs?ref=cd5dc4937958d60404adccbbc877697539ca085c", "patch": "@@ -171,15 +171,6 @@ pub use self::os_str::{OsStr, OsString};\n #[stable(feature = \"core_c_void\", since = \"1.30.0\")]\n pub use core::ffi::c_void;\n \n-#[unstable(feature = \"core_ffi_c\", issue = \"94501\")]\n-pub use core::ffi::{\n-    c_char, c_double, c_float, c_int, c_long, c_longlong, c_schar, c_short, c_uchar, c_uint,\n-    c_ulong, c_ulonglong, c_ushort,\n-};\n-\n-#[unstable(feature = \"c_size_t\", issue = \"88345\")]\n-pub use core::ffi::{c_ptrdiff_t, c_size_t, c_ssize_t};\n-\n #[unstable(\n     feature = \"c_variadic\",\n     reason = \"the `c_variadic` feature has not been properly tested on \\"}, {"sha": "97c30c422827e3f105e50263a99aa742f6729995", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cd5dc4937958d60404adccbbc877697539ca085c/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd5dc4937958d60404adccbbc877697539ca085c/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=cd5dc4937958d60404adccbbc877697539ca085c", "patch": "@@ -307,7 +307,6 @@\n // Only for re-exporting:\n #![feature(assert_matches)]\n #![feature(async_iterator)]\n-#![feature(c_size_t)]\n #![feature(c_variadic)]\n #![feature(cfg_accessible)]\n #![feature(cfg_eval)]"}]}