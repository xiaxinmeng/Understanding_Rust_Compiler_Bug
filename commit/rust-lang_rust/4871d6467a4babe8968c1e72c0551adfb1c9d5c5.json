{"sha": "4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NzFkNjQ2N2E0YmFiZTg5NjhjMWU3MmMwNTUxYWRmYjFjOWQ1YzU=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-08-13T14:21:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-13T14:21:55Z"}, "message": "Use the correct BytePos for the opening brace position (#3742)", "tree": {"sha": "e553558ac092bb3fd175957fba752bbc4607aa21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e553558ac092bb3fd175957fba752bbc4607aa21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdUseDCRBK7hj4Ov3rIwAAdHIIAJIPPtM8+6mH1j9xNFIlKhaq\n3u4puRCGrjo2Vd1dbxFL9O4srjGeJEDGwQM7AyK0gd+r+U2TERvb9aGADjhZMiB6\nkPQVX+zcp3/TQae0rHry5HT4Lqd2pnqIPvSWyaTh6oDMF7/8Nrho7TuBT7En0XPB\nNE/0EdJKO8Sos3ZSLsCUAkSNnAfS9QGigH/xHBimKTwcq2DxqwSWpGXOpGBPE6fy\nby+GxKDzhrN+kjv2Ji6VE1JpNo+s1L/poiTlCrwwhbcBY662CZPtPrd9zfBQBZFs\n+3Dx/+V52hHABNYPeMGu150DGLVS7IFMGqGQBsG7tctpxaVhHSIYTj6y8jNXIX8=\n=bH24\n-----END PGP SIGNATURE-----\n", "payload": "tree e553558ac092bb3fd175957fba752bbc4607aa21\nparent ac150d016b760d06352e02adf030ce7e6c948005\nauthor Seiichi Uchida <seuchida@gmail.com> 1565706115 +0900\ncommitter GitHub <noreply@github.com> 1565706115 +0900\n\nUse the correct BytePos for the opening brace position (#3742)\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "html_url": "https://github.com/rust-lang/rust/commit/4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac150d016b760d06352e02adf030ce7e6c948005", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac150d016b760d06352e02adf030ce7e6c948005", "html_url": "https://github.com/rust-lang/rust/commit/ac150d016b760d06352e02adf030ce7e6c948005"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "022fe4295a1e8e1cbb4cf7bc990850e7795a80b3", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "patch": "@@ -1,7 +1,7 @@\n // Formatting top-level items - functions, structs, enums, traits, impls.\n \n use std::borrow::Cow;\n-use std::cmp::{min, Ordering};\n+use std::cmp::{max, min, Ordering};\n \n use regex::Regex;\n use rustc_target::spec::abi;\n@@ -733,15 +733,16 @@ pub(crate) fn format_impl(\n         }\n \n         result.push('{');\n-        // this is an impl body snippet(impl SampleImple { /* here */ })\n-        let snippet = context.snippet(mk_sp(item.span.hi(), self_ty.span.hi()));\n+        // this is an impl body snippet(impl SampleImpl { /* here */ })\n+        let lo = max(self_ty.span.hi(), generics.where_clause.span.hi());\n+        let snippet = context.snippet(mk_sp(lo, item.span.hi()));\n         let open_pos = snippet.find_uncommented(\"{\")? + 1;\n \n         if !items.is_empty() || contains_comment(&snippet[open_pos..]) {\n             let mut visitor = FmtVisitor::from_context(context);\n             let item_indent = offset.block_only().block_indent(context.config);\n             visitor.block_indent = item_indent;\n-            visitor.last_pos = self_ty.span.hi() + BytePos(open_pos as u32);\n+            visitor.last_pos = lo + BytePos(open_pos as u32);\n \n             visitor.visit_attrs(&item.attrs, ast::AttrStyle::Inner);\n             visitor.visit_impl_items(items);"}, {"sha": "2769a8cc9b15f130da12cb7ab996e402d9eb03e5", "filename": "tests/source/issue-3740.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/tests%2Fsource%2Fissue-3740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/tests%2Fsource%2Fissue-3740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3740.rs?ref=4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "patch": "@@ -0,0 +1,10 @@\n+impl<T, const SIZE: usize> IntoNormalized for Vector<T, { SIZE }>\n+    where\n+        Vector<T, { SIZE }>: Div<Vector<T, { SIZE }>>,\n+        for<'a> &'a Vector<T, { SIZE }>: IntoLength<Output = T>,\n+{\n+    type Output = Vector<T, { SIZE }>;\n+    fn into_normalized(self) -> Self::Output {\n+\n+    }\n+}"}, {"sha": "995a6bee3527c4718f30fc5bf916cb52b5955752", "filename": "tests/target/issue-3740.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/tests%2Ftarget%2Fissue-3740.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4871d6467a4babe8968c1e72c0551adfb1c9d5c5/tests%2Ftarget%2Fissue-3740.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3740.rs?ref=4871d6467a4babe8968c1e72c0551adfb1c9d5c5", "patch": "@@ -0,0 +1,8 @@\n+impl<T, const SIZE: usize> IntoNormalized for Vector<T, { SIZE }>\n+where\n+    Vector<T, { SIZE }>: Div<Vector<T, { SIZE }>>,\n+    for<'a> &'a Vector<T, { SIZE }>: IntoLength<Output = T>,\n+{\n+    type Output = Vector<T, { SIZE }>;\n+    fn into_normalized(self) -> Self::Output {}\n+}"}]}