{"sha": "81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxYmZkYzgzY2E0NThlYjMzMGZjM2FmYTZkZmIzOGJmYWQ0ZDQyMDQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-05-01T07:27:36Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-05-03T05:00:33Z"}, "message": "Fix issue #41652.\n\nDon't print the source code in emit_message_default() and\nrender_source_line() if the source code is None.", "tree": {"sha": "198291fa0e5c53c541f249784bb9e3d46f93c450", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/198291fa0e5c53c541f249784bb9e3d46f93c450"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJZCWPxAAoJEP72yAUdDgE8g1cP/12l5u6tfXE2BVFidODnik7s\njJ+11phNmWuU2hh3PTQomz/4q+NIJ4fGtbvnC8vdXchDXs9zhKaPRk1yUcUwKP6f\nYMxvurMrrfpmjZ6elkuOPhvFiFmmQ/RoBHkYd3SyF0YDe/ycJWxi0do20wlWjvIs\n/a4L4SbkEQkEdpUjCInQYzren2tks2YLlq+g+ClwqW6jG+HxbQppwGFYKTkP/0Qe\ncDnaHg33dw5ti1wudJMEmSn4njXKSgiG/Pgn4/UxIVORmiSOhamX6XGVgm39rqgq\n/Ql6WSy721SpgP1hTkCPj7+LAHySK5FK5Wef9F+5o/09s8aoFRunHtHOHcgBVsQU\nptoUtH7sFl4thHVO7VP/euVdFqWeAuKLvJb6Zh+W/iB+Xhj57+iGgs5onGjB3Jom\nnO0UvUD1R/LG5z4BDB31xifahwpXisFRr4v4Mj6aqRU4IdaNU9i7iuw8ZGwn1Joq\n99ZoxNKLHXjhHQaIKpkQkeExxitemqWEExAu4Z9or/Fo4QSQ21HAajnvG5ElGY3p\nbScVSMSpPxWH1oClT5H8wIlzUZtKbjkXA18f7QMFNqFQ45z6yTeoakE4qNDcERsp\n7pTfeAgsELB5sZG/L9IgndLvDaGhhK6ajPRP0kIyu+YkdsYJ6JeyXikbuTYbjNK4\nIDSgzFnIrpRAII4x0u+z\n=H7n0\n-----END PGP SIGNATURE-----", "payload": "tree 198291fa0e5c53c541f249784bb9e3d46f93c450\nparent 0634f0a30f94116ee13c16fb1a35c4c92253ab13\nauthor kennytm <kennytm@gmail.com> 1493623656 +0800\ncommitter kennytm <kennytm@gmail.com> 1493787633 +0800\n\nFix issue #41652.\n\nDon't print the source code in emit_message_default() and\nrender_source_line() if the source code is None.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "html_url": "https://github.com/rust-lang/rust/commit/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0634f0a30f94116ee13c16fb1a35c4c92253ab13", "url": "https://api.github.com/repos/rust-lang/rust/commits/0634f0a30f94116ee13c16fb1a35c4c92253ab13", "html_url": "https://github.com/rust-lang/rust/commit/0634f0a30f94116ee13c16fb1a35c4c92253ab13"}], "stats": {"total": 65, "additions": 63, "deletions": 2}, "files": [{"sha": "53999eb9138b6f3b5054f8a0884706fd7e74dad6", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "patch": "@@ -270,8 +270,10 @@ impl EmitterWriter {\n                           line: &Line,\n                           width_offset: usize,\n                           code_offset: usize) -> Vec<(usize, Style)> {\n-        let source_string = file.get_line(line.line_index - 1)\n-            .unwrap_or(\"\");\n+        let source_string = match file.get_line(line.line_index - 1) {\n+            Some(s) => s,\n+            None => return Vec::new(),\n+        };\n \n         let line_offset = buffer.num_lines();\n \n@@ -909,6 +911,11 @@ impl EmitterWriter {\n \n         // Print out the annotate source lines that correspond with the error\n         for annotated_file in annotated_files {\n+            // we can't annotate anything if the source is unavailable.\n+            if annotated_file.file.src.is_none() {\n+                continue;\n+            }\n+\n             // print out the span location and spacer before we print the annotated source\n             // to do this, we need to know if this span will be primary\n             let is_primary = primary_lo.file.name == annotated_file.file.name;"}, {"sha": "0b714432f161578a823ccfdb17113c31321679d3", "filename": "src/test/ui/issue-41652/auxiliary/issue_41652_b.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fauxiliary%2Fissue_41652_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fauxiliary%2Fissue_41652_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-41652%2Fauxiliary%2Fissue_41652_b.rs?ref=81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Tr {\n+    // Note: The function needs to be declared over multiple lines to reproduce\n+    // the crash. DO NOT reformat.\n+    fn f()\n+        where Self: Sized;\n+}"}, {"sha": "1874ee6cd3aa0ac3b64a00827677c46d338d1f7a", "filename": "src/test/ui/issue-41652/issue_41652.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.rs?ref=81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_41652_b.rs\n+\n+extern crate issue_41652_b;\n+\n+struct S;\n+\n+impl issue_41652_b::Tr for S {\n+    fn f() {\n+        3.f()\n+        //~^ ERROR no method named `f` found for type `{integer}` in the current scope\n+        //~| NOTE found the following associated functions\n+        //~| NOTE candidate #1 is defined in the trait `issue_41652_b::Tr`\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4d33a99f6a38c47b37981666bd7d45df1edce3bf", "filename": "src/test/ui/issue-41652/issue_41652.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/81bfdc83ca458eb330fc3afa6dfb38bfad4d4204/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr?ref=81bfdc83ca458eb330fc3afa6dfb38bfad4d4204", "patch": "@@ -0,0 +1,12 @@\n+error: no method named `f` found for type `{integer}` in the current scope\n+  --> $DIR/issue_41652.rs:19:11\n+   |\n+19 |         3.f()\n+   |           ^\n+   |\n+   = note: found the following associated functions; to be used as methods, functions must have a `self` parameter\n+note: candidate #1 is defined in the trait `issue_41652_b::Tr`\n+   = help: to disambiguate the method call, write `issue_41652_b::Tr::f(3)` instead\n+\n+error: aborting due to previous error\n+"}]}