{"sha": "f7535e771d26715177c2f20a3a727e8727a9b073", "node_id": "C_kwDOAAsO6NoAKGY3NTM1ZTc3MWQyNjcxNTE3N2MyZjIwYTNhNzI3ZTg3MjdhOWIwNzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-17T21:33:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-17T21:33:19Z"}, "message": "Rollup merge of #104483 - oli-obk:santa-clauses-make-goals, r=compiler-errors\n\nConvert predicates into Predicate in the Obligation constructor\n\ninstead of having almost all callers do that.\n\nThis reduces a bit of boilerplate, and also paves the way for my work towards https://github.com/rust-lang/compiler-team/issues/531 (as it makes it easier to accept both goals and clauses where right now it only accepts predicates).", "tree": {"sha": "22c8f7aed12518d0035e0f0d30634cd35605edb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22c8f7aed12518d0035e0f0d30634cd35605edb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7535e771d26715177c2f20a3a727e8727a9b073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7535e771d26715177c2f20a3a727e8727a9b073", "html_url": "https://github.com/rust-lang/rust/commit/f7535e771d26715177c2f20a3a727e8727a9b073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7535e771d26715177c2f20a3a727e8727a9b073/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11d632f7b10be252d7445b78ce771cd99f046393", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d632f7b10be252d7445b78ce771cd99f046393", "html_url": "https://github.com/rust-lang/rust/commit/11d632f7b10be252d7445b78ce771cd99f046393"}, {"sha": "e5352c72c748e6f585f1b0509fa51f1acc0bc7d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5352c72c748e6f585f1b0509fa51f1acc0bc7d4", "html_url": "https://github.com/rust-lang/rust/commit/e5352c72c748e6f585f1b0509fa51f1acc0bc7d4"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "218dbeaddcadee32539160ee831786d991e5edc7", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=f7535e771d26715177c2f20a3a727e8727a9b073", "patch": "@@ -1156,7 +1156,7 @@ fn needless_borrow_impl_arg_position<'tcx>(\n             }\n \n             let predicate = EarlyBinder(predicate).subst(cx.tcx, &substs_with_referent_ty);\n-            let obligation = Obligation::new(ObligationCause::dummy(), cx.param_env, predicate);\n+            let obligation = Obligation::new(cx.tcx, ObligationCause::dummy(), cx.param_env, predicate);\n             let infcx = cx.tcx.infer_ctxt().build();\n             infcx.predicate_must_hold_modulo_regions(&obligation)\n         })"}, {"sha": "c7775313ecd0284a38bd866ac0a34fa4f07486af", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=f7535e771d26715177c2f20a3a727e8727a9b073", "patch": "@@ -419,7 +419,7 @@ fn can_change_type<'a>(cx: &LateContext<'a>, mut expr: &'a Expr<'a>, mut ty: Ty<\n \n                         if trait_predicates.any(|predicate| {\n                             let predicate = EarlyBinder(predicate).subst(cx.tcx, new_subst);\n-                            let obligation = Obligation::new(ObligationCause::dummy(), cx.param_env, predicate);\n+                            let obligation = Obligation::new(cx.tcx, ObligationCause::dummy(), cx.param_env, predicate);\n                             !cx.tcx.infer_ctxt().build().predicate_must_hold_modulo_regions(&obligation)\n                         }) {\n                             return false;"}, {"sha": "c8c6f32c6c98966cd4d794b0afcbe3f56f105d14", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7535e771d26715177c2f20a3a727e8727a9b073/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=f7535e771d26715177c2f20a3a727e8727a9b073", "patch": "@@ -695,6 +695,7 @@ fn matches_preds<'tcx>(\n             .type_implements_trait(p.def_id, ty, p.substs, cx.param_env)\n             .must_apply_modulo_regions(),\n         ExistentialPredicate::Projection(p) => infcx.predicate_must_hold_modulo_regions(&Obligation::new(\n+            cx.tcx,\n             ObligationCause::dummy(),\n             cx.param_env,\n             cx.tcx.mk_predicate(Binder::bind_with_vars("}]}