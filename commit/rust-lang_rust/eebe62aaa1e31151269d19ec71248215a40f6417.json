{"sha": "eebe62aaa1e31151269d19ec71248215a40f6417", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYmU2MmFhYTFlMzExNTEyNjlkMTllYzcxMjQ4MjE1YTQwZjY0MTc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-05-31T11:33:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-31T11:33:51Z"}, "message": "Rollup merge of #60897 - seanmonstar:patch-4, r=sfackler\n\nerror: remove StringError from Debug output\n\nSeeing `StringError(\"something something\")` in debug output can cause\n someone to think there was an error dealing with `String`s, not that the\nerror type is just a string. So, remove that noise.\n\nFor example:\n\n```\nio error: Custom { kind: InvalidData, error: StringError(\"corrupt data\") }\n```\n\nWith this change:\n\n```\nio error: Custom { kind: InvalidData, error: \"corrupt data\" }\n```", "tree": {"sha": "3dc174831842db900bfffab2840cb8d98fdfb907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dc174831842db900bfffab2840cb8d98fdfb907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eebe62aaa1e31151269d19ec71248215a40f6417", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc8REgCRBK7hj4Ov3rIwAAdHIIABhVYn6KhdFMzR3+9UmiL9vb\nygzI4EDvzNJLBGGK7AfcH9J/Lb3cKagzKNH6iwjY7whaCyDtp5O6Du8C01//Lwlf\n2KUoiVCXlAymOgicKdQMZbIG1Qn0588GMfM5lDRxe3cXaCX20xAogjSM4jG5W1WU\nhfnWDP4gprYjd8cayJOCHWxISPDXMPa6DH3et+w2iTYt0y3Xb3NJgA+HmLTwMCNE\nIm+dYbjsnIQWlwsF6Hj4JTpzswmcgjpyubpjfZF/U/NT06AKfClIJwZs1aiZVQ7v\ntJIRMlwt3UWjzlFVJkg1DUx1Al1JPZaMrYK7to7JNEwP5Cz5vq+TDoCIRk/5e6I=\n=vVaF\n-----END PGP SIGNATURE-----\n", "payload": "tree 3dc174831842db900bfffab2840cb8d98fdfb907\nparent 3ade426ede7bca4a74bc641a12f2e7fe2cc20c47\nparent d2d89b10de394b4a1d5e2491dfffd3d65d1741b3\nauthor Pietro Albini <pietro@pietroalbini.org> 1559302431 +0200\ncommitter GitHub <noreply@github.com> 1559302431 +0200\n\nRollup merge of #60897 - seanmonstar:patch-4, r=sfackler\n\nerror: remove StringError from Debug output\n\nSeeing `StringError(\"something something\")` in debug output can cause\n someone to think there was an error dealing with `String`s, not that the\nerror type is just a string. So, remove that noise.\n\nFor example:\n\n```\nio error: Custom { kind: InvalidData, error: StringError(\"corrupt data\") }\n```\n\nWith this change:\n\n```\nio error: Custom { kind: InvalidData, error: \"corrupt data\" }\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eebe62aaa1e31151269d19ec71248215a40f6417", "html_url": "https://github.com/rust-lang/rust/commit/eebe62aaa1e31151269d19ec71248215a40f6417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eebe62aaa1e31151269d19ec71248215a40f6417/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47", "html_url": "https://github.com/rust-lang/rust/commit/3ade426ede7bca4a74bc641a12f2e7fe2cc20c47"}, {"sha": "d2d89b10de394b4a1d5e2491dfffd3d65d1741b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d89b10de394b4a1d5e2491dfffd3d65d1741b3", "html_url": "https://github.com/rust-lang/rust/commit/d2d89b10de394b4a1d5e2491dfffd3d65d1741b3"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "5cc7dcdae1fcd5917db45d4210891758b3041df4", "filename": "src/libstd/error.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eebe62aaa1e31151269d19ec71248215a40f6417/src%2Flibstd%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eebe62aaa1e31151269d19ec71248215a40f6417/src%2Flibstd%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ferror.rs?ref=eebe62aaa1e31151269d19ec71248215a40f6417", "patch": "@@ -314,7 +314,6 @@ impl From<String> for Box<dyn Error + Send + Sync> {\n     ///     mem::size_of::<Box<dyn Error + Send + Sync>>() == mem::size_of_val(&a_boxed_error))\n     /// ```\n     fn from(err: String) -> Box<dyn Error + Send + Sync> {\n-        #[derive(Debug)]\n         struct StringError(String);\n \n         impl Error for StringError {\n@@ -327,6 +326,13 @@ impl From<String> for Box<dyn Error + Send + Sync> {\n             }\n         }\n \n+        // Purposefully skip printing \"StringError(..)\"\n+        impl Debug for StringError {\n+            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+                Debug::fmt(&self.0, f)\n+            }\n+        }\n+\n         Box::new(StringError(err))\n     }\n }"}]}