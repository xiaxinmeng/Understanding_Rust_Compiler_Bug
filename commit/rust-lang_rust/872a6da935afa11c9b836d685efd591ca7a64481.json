{"sha": "872a6da935afa11c9b836d685efd591ca7a64481", "node_id": "C_kwDOAAsO6NoAKDg3MmE2ZGE5MzVhZmExMWM5YjgzNmQ2ODVlZmQ1OTFjYTdhNjQ0ODE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-10-06T11:44:42Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-20T15:00:32Z"}, "message": "Remove an unused function", "tree": {"sha": "1e2565c04fcb58890fc345b1f5919304b8dba6ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e2565c04fcb58890fc345b1f5919304b8dba6ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872a6da935afa11c9b836d685efd591ca7a64481", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872a6da935afa11c9b836d685efd591ca7a64481", "html_url": "https://github.com/rust-lang/rust/commit/872a6da935afa11c9b836d685efd591ca7a64481", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872a6da935afa11c9b836d685efd591ca7a64481/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a746f4ac3a489efb724cde813607f3b96c2df7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a746f4ac3a489efb724cde813607f3b96c2df7b", "html_url": "https://github.com/rust-lang/rust/commit/8a746f4ac3a489efb724cde813607f3b96c2df7b"}], "stats": {"total": 8, "additions": 0, "deletions": 8}, "files": [{"sha": "705adecd3b90f517b9d9c5ed814fdcbaecf4c111", "filename": "compiler/rustc_middle/src/ty/generics.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/872a6da935afa11c9b836d685efd591ca7a64481/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872a6da935afa11c9b836d685efd591ca7a64481/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fgenerics.rs?ref=872a6da935afa11c9b836d685efd591ca7a64481", "patch": "@@ -70,14 +70,6 @@ impl GenericParamDef {\n         }\n     }\n \n-    pub fn has_default(&self) -> bool {\n-        match self.kind {\n-            GenericParamDefKind::Type { has_default, .. }\n-            | GenericParamDefKind::Const { has_default } => has_default,\n-            GenericParamDefKind::Lifetime => false,\n-        }\n-    }\n-\n     pub fn is_anonymous_lifetime(&self) -> bool {\n         match self.kind {\n             GenericParamDefKind::Lifetime => {"}]}