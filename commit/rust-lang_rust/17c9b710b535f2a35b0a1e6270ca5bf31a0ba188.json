{"sha": "17c9b710b535f2a35b0a1e6270ca5bf31a0ba188", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YzliNzEwYjUzNWYyYTM1YjBhMWU2MjcwY2E1YmYzMWEwYmExODg=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-10-02T18:26:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-02T18:26:54Z"}, "message": "Rollup merge of #76101 - XAMPPRocky:relnotes-.1.47.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.47.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-.1.47.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release", "tree": {"sha": "493748b40a3d63d8fcc24cb6218e161743b53a35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/493748b40a3d63d8fcc24cb6218e161743b53a35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfd3DuCRBK7hj4Ov3rIwAAdHIIAH447OlJQzVtsHfVsjNC4PyX\nsCoZ2YR22EPLiwDi6eN+2GwXFd8mV3brUwtkjsT59gjhjj7urRybQg9+W9dVwB4T\nVPqxSjd3tmngejB7Pg7rI8qjgD+3q7j2WrOXucR0sib1Q2/1uWpu3jladQex4jH6\nh4bR7igQO6ujS900VUxOve2Lf6/DYnp1BiSKZWiNFqmcREoIvX6iSsK1QP0aHA0T\nKGM/U8EhnrXQ1epZA8OU7Js68QnOa3kiQdtWZgHeQu0mX9pMxdSaeYhrgFbUFr1Y\nPo6MnDzrJQ8GnB20H4gj5ZmbvD0JlPjpjkhD2ysL8l/C9t6Iy78Bfl9q8pz0JLk=\n=9Meg\n-----END PGP SIGNATURE-----\n", "payload": "tree 493748b40a3d63d8fcc24cb6218e161743b53a35\nparent a585aaefb662ae26f8675955f26fad9be4fea96b\nparent e34d3bf0dc7a155f7791b736dc147f6d6f890e2f\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601663214 +0200\ncommitter GitHub <noreply@github.com> 1601663214 +0200\n\nRollup merge of #76101 - XAMPPRocky:relnotes-.1.47.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.47.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-.1.47.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188", "html_url": "https://github.com/rust-lang/rust/commit/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a585aaefb662ae26f8675955f26fad9be4fea96b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a585aaefb662ae26f8675955f26fad9be4fea96b", "html_url": "https://github.com/rust-lang/rust/commit/a585aaefb662ae26f8675955f26fad9be4fea96b"}, {"sha": "e34d3bf0dc7a155f7791b736dc147f6d6f890e2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e34d3bf0dc7a155f7791b736dc147f6d6f890e2f", "html_url": "https://github.com/rust-lang/rust/commit/e34d3bf0dc7a155f7791b736dc147f6d6f890e2f"}], "stats": {"total": 135, "additions": 135, "deletions": 0}, "files": [{"sha": "62d30842b230c0729f14b744b1e2f7795b9411be", "filename": "RELEASES.md", "status": "modified", "additions": 135, "deletions": 0, "changes": 135, "blob_url": "https://github.com/rust-lang/rust/blob/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/17c9b710b535f2a35b0a1e6270ca5bf31a0ba188/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=17c9b710b535f2a35b0a1e6270ca5bf31a0ba188", "patch": "@@ -1,3 +1,138 @@\n+Version 1.47.0 (2020-10-08)\n+==========================\n+\n+Language\n+--------\n+- [Closures will now warn when not used.][74869]\n+\n+Compiler\n+--------\n+- [Stabilized the `-C control-flow-guard` codegen option][73893], which enables\n+  [Control Flow Guard][1.47.0-cfg] for Windows platforms, and is ignored on other\n+  platforms.\n+- [Upgraded to LLVM 11.][73526]\n+- [Added tier 3\\* support for the `thumbv4t-none-eabi` target.][74419]\n+- [Upgrade the FreeBSD toolchain to version 11.4][75204]\n+- [`RUST_BACKTRACE`'s output is now more compact.][75048]\n+\n+\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+information on Rust's tiered platform support.\n+\n+Libraries\n+---------\n+- [`CStr` now implements `Index<RangeFrom<usize>>`.][74021]\n+- [Traits in `std`/`core` are now implemented for arrays of any length, not just\n+  those of length less than 33.][74060]\n+- [`ops::RangeFull` and `ops::Range` now implement Default.][73197]\n+- [`panic::Location` now implements `Copy`, `Clone`, `Eq`, `Hash`, `Ord`,\n+  `PartialEq`, and `PartialOrd`.][73583]\n+\n+Stabilized APIs\n+---------------\n+- [`Ident::new_raw`]\n+- [`Range::is_empty`]\n+- [`RangeInclusive::is_empty`]\n+- [`Result::as_deref`]\n+- [`Result::as_deref_mut`]\n+- [`Vec::leak`]\n+- [`pointer::offset_from`]\n+- [`f32::TAU`]\n+- [`f64::TAU`]\n+\n+The following previously stable APIs have now been made const.\n+\n+- [The `new` method for all `NonZero` integers.][73858]\n+- [The `checked_add`,`checked_sub`,`checked_mul`,`checked_neg`, `checked_shl`,\n+  `checked_shr`, `saturating_add`, `saturating_sub`, and `saturating_mul`\n+  methods for all integers.][73858]\n+- [The `checked_abs`, `saturating_abs`, `saturating_neg`, and `signum`  for all\n+  signed integers.][73858]\n+- [The `is_ascii_alphabetic`, `is_ascii_uppercase`, `is_ascii_lowercase`,\n+  `is_ascii_alphanumeric`, `is_ascii_digit`, `is_ascii_hexdigit`,\n+  `is_ascii_punctuation`, `is_ascii_graphic`, `is_ascii_whitespace`, and\n+  `is_ascii_control` methods for `char` and `u8`.][73858]\n+\n+Cargo\n+-----\n+- [`build-dependencies` are now built with opt-level 0 by default.][cargo/8500]\n+  You can override this by setting the following in your `Cargo.toml`.\n+  ```toml\n+  [profile.release.build-override]\n+  opt-level = 3\n+  ```\n+- [`cargo-help` will now display man pages for commands rather just the\n+  `--help` text.][cargo/8456]\n+- [`cargo-metadata` now emits a `test` field indicating if a target has\n+  tests enabled.][cargo/8478]\n+- [`workspace.default-members` now respects `workspace.exclude`.][cargo/8485]\n+- [`cargo-publish` will now use an alternative registry by default if it's the\n+  only registry specified in `package.publish`.][cargo/8571]\n+\n+Misc\n+----\n+- [Added a help button beside Rustdoc's searchbar that explains rustdoc's\n+  type based search.][75366]\n+- [Added the Ayu theme to rustdoc.][71237]\n+\n+Compatibility Notes\n+-------------------\n+- [Bumped the minimum supported Emscripten version to 1.39.20.][75716]\n+- [Fixed a regression parsing `{} && false` in tail expressions.][74650]\n+- [Added changes to how proc-macros are expanded in `macro_rules!` that should\n+  help to preserve more span information.][73084] These changes may cause\n+  compiliation errors if your macro was unhygenic or didn't correctly handle\n+  `Delimiter::None`.\n+- [Moved support for the CloudABI target to tier 3.][75568]\n+- [`linux-gnu` targets now require minimum kernel 2.6.32 and glibc 2.11.][74163]\n+- [Added the `rustc-docs` component.][75560] This allows you to install\n+  and read the documentation for the compiler internal APIs. (Currently only\n+  available for `x86_64-unknown-linux-gnu`.)\n+\n+Internal Only\n+--------\n+- [Improved default settings for bootstrapping in `x.py`.][73964] You can read details about this change in the [\"Changes To `x.py` Defaults\"](https://blog.rust-lang.org/inside-rust/2020/08/30/changes-to-x-py-defaults.html) post on the Inside Rust blog.\n+\n+[1.47.0-cfg]: https://docs.microsoft.com/en-us/windows/win32/secbp/control-flow-guard\n+[75048]: https://github.com/rust-lang/rust/pull/75048/\n+[74163]: https://github.com/rust-lang/rust/pull/74163/\n+[71237]: https://github.com/rust-lang/rust/pull/71237/\n+[74869]: https://github.com/rust-lang/rust/pull/74869/\n+[73858]: https://github.com/rust-lang/rust/pull/73858/\n+[75716]: https://github.com/rust-lang/rust/pull/75716/\n+[75908]: https://github.com/rust-lang/rust/pull/75908/\n+[75516]: https://github.com/rust-lang/rust/pull/75516/\n+[75560]: https://github.com/rust-lang/rust/pull/75560/\n+[75568]: https://github.com/rust-lang/rust/pull/75568/\n+[75366]: https://github.com/rust-lang/rust/pull/75366/\n+[75204]: https://github.com/rust-lang/rust/pull/75204/\n+[74650]: https://github.com/rust-lang/rust/pull/74650/\n+[74419]: https://github.com/rust-lang/rust/pull/74419/\n+[73964]: https://github.com/rust-lang/rust/pull/73964/\n+[74021]: https://github.com/rust-lang/rust/pull/74021/\n+[74060]: https://github.com/rust-lang/rust/pull/74060/\n+[73893]: https://github.com/rust-lang/rust/pull/73893/\n+[73526]: https://github.com/rust-lang/rust/pull/73526/\n+[73583]: https://github.com/rust-lang/rust/pull/73583/\n+[73084]: https://github.com/rust-lang/rust/pull/73084/\n+[73197]: https://github.com/rust-lang/rust/pull/73197/\n+[72488]: https://github.com/rust-lang/rust/pull/72488/\n+[cargo/8456]: https://github.com/rust-lang/cargo/pull/8456/\n+[cargo/8478]: https://github.com/rust-lang/cargo/pull/8478/\n+[cargo/8485]: https://github.com/rust-lang/cargo/pull/8485/\n+[cargo/8500]: https://github.com/rust-lang/cargo/pull/8500/\n+[cargo/8571]: https://github.com/rust-lang/cargo/pull/8571/\n+[`Ident::new_raw`]:  https://doc.rust-lang.org/nightly/proc_macro/struct.Ident.html#method.new_raw\n+[`Range::is_empty`]: https://doc.rust-lang.org/nightly/std/ops/struct.Range.html#method.is_empty\n+[`RangeInclusive::is_empty`]: https://doc.rust-lang.org/nightly/std/ops/struct.RangeInclusive.html#method.is_empty\n+[`Result::as_deref_mut`]: https://doc.rust-lang.org/nightly/std/result/enum.Result.html#method.as_deref_mut\n+[`Result::as_deref`]: https://doc.rust-lang.org/nightly/std/result/enum.Result.html#method.as_deref\n+[`TypeId::of`]: https://doc.rust-lang.org/nightly/std/any/struct.TypeId.html#method.of\n+[`Vec::leak`]: https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#method.leak\n+[`f32::TAU`]: https://doc.rust-lang.org/nightly/std/f32/consts/constant.TAU.html\n+[`f64::TAU`]: https://doc.rust-lang.org/nightly/std/f64/consts/constant.TAU.html\n+[`pointer::offset_from`]: https://doc.rust-lang.org/nightly/std/primitive.pointer.html#method.offset_from\n+\n+\n Version 1.46.0 (2020-08-27)\n ==========================\n "}]}