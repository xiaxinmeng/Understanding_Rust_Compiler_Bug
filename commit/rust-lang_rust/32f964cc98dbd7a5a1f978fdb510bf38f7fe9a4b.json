{"sha": "32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyZjk2NGNjOThkYmQ3YTVhMWY5NzhmZGI1MTBiZjM4ZjdmZTlhNGI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-07T09:30:43Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-16T10:57:47Z"}, "message": "renumber: debug logs, use `visit_region` rather than `visit_rvalue`", "tree": {"sha": "02dce1826ae68395674da3203ee1d0e76a816d6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02dce1826ae68395674da3203ee1d0e76a816d6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b", "html_url": "https://github.com/rust-lang/rust/commit/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12534e9159a2795109e5bc435754c0cf495fdbba", "url": "https://api.github.com/repos/rust-lang/rust/commits/12534e9159a2795109e5bc435754c0cf495fdbba", "html_url": "https://github.com/rust-lang/rust/commit/12534e9159a2795109e5bc435754c0cf495fdbba"}], "stats": {"total": 51, "additions": 29, "deletions": 22}, "files": [{"sha": "1076b774de6578851392bdf8c386d19d30c1f65a", "filename": "src/librustc_mir/transform/nll/renumber.rs", "status": "modified", "additions": 29, "deletions": 22, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b/src%2Flibrustc_mir%2Ftransform%2Fnll%2Frenumber.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b/src%2Flibrustc_mir%2Ftransform%2Fnll%2Frenumber.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Frenumber.rs?ref=32f964cc98dbd7a5a1f978fdb510bf38f7fe9a4b", "patch": "@@ -11,7 +11,7 @@\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, ClosureSubsts, RegionVid, Ty, TypeFoldable};\n-use rustc::mir::{BasicBlock, Local, Location, Mir, Rvalue, Statement, StatementKind};\n+use rustc::mir::{BasicBlock, Local, Location, Mir, Statement, StatementKind};\n use rustc::mir::visit::{MutVisitor, TyContext};\n use rustc::infer::{InferCtxt, NLLRegionVariableOrigin};\n \n@@ -36,6 +36,10 @@ pub fn renumber_mir<'a, 'gcx, 'tcx>(\n         })\n         .collect();\n \n+    debug!(\"renumber_mir()\");\n+    debug!(\"renumber_mir: free_regions={:#?}\", free_regions);\n+    debug!(\"renumber_mir: mir.arg_count={:?}\", mir.arg_count);\n+\n     let mut visitor = NLLVisitor {\n         infcx,\n         free_regions,\n@@ -60,6 +64,8 @@ impl<'a, 'gcx, 'tcx> NLLVisitor<'a, 'gcx, 'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n+        debug!(\"renumber_regions(value={:?})\", value);\n+\n         self.infcx\n             .tcx\n             .fold_regions(value, &mut false, |_region, _depth| {\n@@ -74,6 +80,8 @@ impl<'a, 'gcx, 'tcx> NLLVisitor<'a, 'gcx, 'tcx> {\n     where\n         T: TypeFoldable<'tcx>,\n     {\n+        debug!(\"renumber_free_regions(value={:?})\", value);\n+\n         self.infcx\n             .tcx\n             .fold_regions(value, &mut false, |region, _depth| {\n@@ -112,36 +120,35 @@ impl<'a, 'gcx, 'tcx> MutVisitor<'tcx> for NLLVisitor<'a, 'gcx, 'tcx> {\n     }\n \n     fn visit_substs(&mut self, substs: &mut &'tcx Substs<'tcx>, location: Location) {\n+        debug!(\"visit_substs(substs={:?}, location={:?})\", substs, location);\n+\n         let ty_context = TyContext::Location(location);\n         *substs = self.renumber_regions(ty_context, &{ *substs });\n+\n+        debug!(\"visit_substs: substs={:?}\", substs);\n     }\n \n-    fn visit_rvalue(&mut self, rvalue: &mut Rvalue<'tcx>, location: Location) {\n-        match *rvalue {\n-            Rvalue::Ref(ref mut r, _, _) => {\n-                let old_r = *r;\n-                let ty_context = TyContext::Location(location);\n-                *r = self.renumber_regions(ty_context, &old_r);\n-            }\n-            Rvalue::Use(..) |\n-            Rvalue::Repeat(..) |\n-            Rvalue::Len(..) |\n-            Rvalue::Cast(..) |\n-            Rvalue::BinaryOp(..) |\n-            Rvalue::CheckedBinaryOp(..) |\n-            Rvalue::UnaryOp(..) |\n-            Rvalue::Discriminant(..) |\n-            Rvalue::NullaryOp(..) |\n-            Rvalue::Aggregate(..) => {\n-                // These variants don't contain regions.\n-            }\n-        }\n-        self.super_rvalue(rvalue, location);\n+    fn visit_region(&mut self, region: &mut ty::Region<'tcx>, location: Location) {\n+        debug!(\"visit_region(region={:?}, location={:?})\", region, location);\n+\n+        let old_region = *region;\n+        let ty_context = TyContext::Location(location);\n+        *region = self.renumber_regions(ty_context, &old_region);\n+\n+        debug!(\"visit_region: region={:?}\", region);\n     }\n \n     fn visit_closure_substs(&mut self, substs: &mut ClosureSubsts<'tcx>, location: Location) {\n+        debug!(\n+            \"visit_closure_substs(substs={:?}, location={:?})\",\n+            substs,\n+            location\n+        );\n+\n         let ty_context = TyContext::Location(location);\n         *substs = self.renumber_regions(ty_context, substs);\n+\n+        debug!(\"visit_closure_substs: substs={:?}\", substs);\n     }\n \n     fn visit_statement("}]}