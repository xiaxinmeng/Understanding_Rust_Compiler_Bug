{"sha": "e319f12cf4bfb89b744d83c043fc0ca0dc036080", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMTlmMTJjZjRiZmI4OWI3NDRkODNjMDQzZmMwY2EwZGMwMzYwODA=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-01-07T15:25:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-07T15:25:35Z"}, "message": "Rollup merge of #57308 - Zoxc:controller-sync, r=michaelwoerister\n\nMake CompileController thread-safe", "tree": {"sha": "2740a9f906d676ffb721107e7fb3c6e1052e041d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2740a9f906d676ffb721107e7fb3c6e1052e041d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e319f12cf4bfb89b744d83c043fc0ca0dc036080", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcM29vCRBK7hj4Ov3rIwAAdHIIAIpAz2IY0EFZtMBNVS3BBRXX\nKQN0TykDsP6i+vrB1inR2sjbi5pNrO8eU86iQWFpzqN4HPvlIs6LBajmkwtBYg1N\nIJ0zLMS2oFN2LYe9ISuxTuW6myq3KWbzsUCk9csfwpjLWYvvfho/8cXmlFX8Klnv\ntgn2LNae55Znt5A4TflrOUPKE3fi9WwIHgadNZDz0DXcp21x+IYjfSn76A3VDDLl\n9u370vOSF/kljNjPKdUdReIrlGCLjASRy7pO2zz0mHvq2jGSD92vt7cXyu3oIdUJ\ngIZUzj8EStSwnOFeP2rmmk8BpeeBcrpwLOmVyP/ivb/IH2zNjjxsJ1qoktnptJg=\n=ac/g\n-----END PGP SIGNATURE-----\n", "payload": "tree 2740a9f906d676ffb721107e7fb3c6e1052e041d\nparent c89b07aa520517d911aa269bef7f260fa61c6718\nparent 75b2e143f125d7e214b8d3e54b3079caba1cc065\nauthor Pietro Albini <pietro@pietroalbini.org> 1546874735 +0100\ncommitter GitHub <noreply@github.com> 1546874735 +0100\n\nRollup merge of #57308 - Zoxc:controller-sync, r=michaelwoerister\n\nMake CompileController thread-safe\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e319f12cf4bfb89b744d83c043fc0ca0dc036080", "html_url": "https://github.com/rust-lang/rust/commit/e319f12cf4bfb89b744d83c043fc0ca0dc036080", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e319f12cf4bfb89b744d83c043fc0ca0dc036080/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c89b07aa520517d911aa269bef7f260fa61c6718", "url": "https://api.github.com/repos/rust-lang/rust/commits/c89b07aa520517d911aa269bef7f260fa61c6718", "html_url": "https://github.com/rust-lang/rust/commit/c89b07aa520517d911aa269bef7f260fa61c6718"}, {"sha": "75b2e143f125d7e214b8d3e54b3079caba1cc065", "url": "https://api.github.com/repos/rust-lang/rust/commits/75b2e143f125d7e214b8d3e54b3079caba1cc065", "html_url": "https://github.com/rust-lang/rust/commit/75b2e143f125d7e214b8d3e54b3079caba1cc065"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "c18a5328dd54e050f0d16c64452360c9601bcddc", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e319f12cf4bfb89b744d83c043fc0ca0dc036080/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e319f12cf4bfb89b744d83c043fc0ca0dc036080/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=e319f12cf4bfb89b744d83c043fc0ca0dc036080", "patch": "@@ -323,6 +323,7 @@ cfg_if! {\n }\n \n pub fn assert_sync<T: ?Sized + Sync>() {}\n+pub fn assert_send<T: ?Sized + Send>() {}\n pub fn assert_send_val<T: ?Sized + Send>(_t: &T) {}\n pub fn assert_send_sync_val<T: ?Sized + Sync + Send>(_t: &T) {}\n "}, {"sha": "bfff592a5dd496fa18178c94d48a902c4421bc4b", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e319f12cf4bfb89b744d83c043fc0ca0dc036080/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e319f12cf4bfb89b744d83c043fc0ca0dc036080/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=e319f12cf4bfb89b744d83c043fc0ca0dc036080", "patch": "@@ -402,14 +402,15 @@ pub struct CompileController<'a> {\n \n     /// Allows overriding default rustc query providers,\n     /// after `default_provide` has installed them.\n-    pub provide: Box<dyn Fn(&mut ty::query::Providers) + 'a>,\n+    pub provide: Box<dyn Fn(&mut ty::query::Providers) + 'a + sync::Send>,\n     /// Same as `provide`, but only for non-local crates,\n     /// applied after `default_provide_extern`.\n-    pub provide_extern: Box<dyn Fn(&mut ty::query::Providers) + 'a>,\n+    pub provide_extern: Box<dyn Fn(&mut ty::query::Providers) + 'a + sync::Send>,\n }\n \n impl<'a> CompileController<'a> {\n     pub fn basic() -> CompileController<'a> {\n+        sync::assert_send::<Self>();\n         CompileController {\n             after_parse: PhaseController::basic(),\n             after_expand: PhaseController::basic(),\n@@ -499,7 +500,7 @@ pub struct PhaseController<'a> {\n     // If true then the compiler will try to run the callback even if the phase\n     // ends with an error. Note that this is not always possible.\n     pub run_callback_on_error: bool,\n-    pub callback: Box<dyn Fn(&mut CompileState) + 'a>,\n+    pub callback: Box<dyn Fn(&mut CompileState) + 'a + sync::Send>,\n }\n \n impl<'a> PhaseController<'a> {"}]}