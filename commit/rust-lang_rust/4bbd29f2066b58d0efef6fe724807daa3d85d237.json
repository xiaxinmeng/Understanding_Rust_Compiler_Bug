{"sha": "4bbd29f2066b58d0efef6fe724807daa3d85d237", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYmQyOWYyMDY2YjU4ZDBlZmVmNmZlNzI0ODA3ZGFhM2Q4NWQyMzc=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-18T17:47:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-04-20T21:03:39Z"}, "message": "Refactor some existing methods", "tree": {"sha": "091d6ea95769ae4cbef2c24c806bd29d3ea3ee47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/091d6ea95769ae4cbef2c24c806bd29d3ea3ee47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbd29f2066b58d0efef6fe724807daa3d85d237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbd29f2066b58d0efef6fe724807daa3d85d237", "html_url": "https://github.com/rust-lang/rust/commit/4bbd29f2066b58d0efef6fe724807daa3d85d237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbd29f2066b58d0efef6fe724807daa3d85d237/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0ad4b0a96d039ef113a3ad5e422058e6f8fd2d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0ad4b0a96d039ef113a3ad5e422058e6f8fd2d7", "html_url": "https://github.com/rust-lang/rust/commit/c0ad4b0a96d039ef113a3ad5e422058e6f8fd2d7"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "f50037a746d9774bfc03953c977c42411bc910c6", "filename": "src/librustc/hir/map/blocks.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4bbd29f2066b58d0efef6fe724807daa3d85d237/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbd29f2066b58d0efef6fe724807daa3d85d237/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fblocks.rs?ref=4bbd29f2066b58d0efef6fe724807daa3d85d237", "patch": "@@ -175,27 +175,15 @@ impl<'a> FnLikeNode<'a> {\n     }\n \n     pub fn constness(self) -> ast::Constness {\n-        match self.kind() {\n-            FnKind::ItemFn(_, _, header, ..) => header.constness,\n-            FnKind::Method(_, m, ..) => m.header.constness,\n-            _ => ast::Constness::NotConst\n-        }\n+        self.kind().header().map_or(ast::Constness::NotConst, |header| header.constness)\n     }\n \n     pub fn asyncness(self) -> ast::IsAsync {\n-        match self.kind() {\n-            FnKind::ItemFn(_, _, header, ..) => header.asyncness,\n-            FnKind::Method(_, m, ..) => m.header.asyncness,\n-            _ => ast::IsAsync::NotAsync\n-        }\n+        self.kind().header().map_or(ast::IsAsync::NotAsync, |header| header.asyncness)\n     }\n \n     pub fn unsafety(self) -> ast::Unsafety {\n-        match self.kind() {\n-            FnKind::ItemFn(_, _, header, ..) => header.unsafety,\n-            FnKind::Method(_, m, ..) => m.header.unsafety,\n-            _ => ast::Unsafety::Normal\n-        }\n+        self.kind().header().map_or(ast::Unsafety::Normal, |header| header.unsafety)\n     }\n \n     pub fn kind(self) -> FnKind<'a> {"}]}