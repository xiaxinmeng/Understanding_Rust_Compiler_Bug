{"sha": "3ead6de40d57ec78275ee398592baa814b5f0841", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYWQ2ZGU0MGQ1N2VjNzgyNzVlZTM5ODU5MmJhYTgxNGI1ZjA4NDE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-12T07:12:29Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-12T07:12:29Z"}, "message": "Tweak incorrect discriminator value variant error", "tree": {"sha": "35283e7f05cafa6fbbf9291a57a39595c08c712b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35283e7f05cafa6fbbf9291a57a39595c08c712b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ead6de40d57ec78275ee398592baa814b5f0841", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ead6de40d57ec78275ee398592baa814b5f0841", "html_url": "https://github.com/rust-lang/rust/commit/3ead6de40d57ec78275ee398592baa814b5f0841", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ead6de40d57ec78275ee398592baa814b5f0841/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7feb802d8982fe69d7d6acef532a87ada8aae9fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7feb802d8982fe69d7d6acef532a87ada8aae9fb", "html_url": "https://github.com/rust-lang/rust/commit/7feb802d8982fe69d7d6acef532a87ada8aae9fb"}], "stats": {"total": 79, "additions": 53, "deletions": 26}, "files": [{"sha": "3f736c361115a9c2eb63dcaaedef99a8370997de", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=3ead6de40d57ec78275ee398592baa814b5f0841", "patch": "@@ -6983,7 +6983,7 @@ impl<'a> Parser<'a> {\n     fn parse_enum_def(&mut self, _generics: &ast::Generics) -> PResult<'a, EnumDef> {\n         let mut variants = Vec::new();\n         let mut all_nullary = true;\n-        let mut any_disr = None;\n+        let mut any_disr = vec![];\n         while self.token != token::CloseDelim(token::Brace) {\n             let variant_attrs = self.parse_outer_attributes()?;\n             let vlo = self.span;\n@@ -7005,7 +7005,9 @@ impl<'a> Parser<'a> {\n                     id: ast::DUMMY_NODE_ID,\n                     value: self.parse_expr()?,\n                 });\n-                any_disr = disr_expr.as_ref().map(|c| c.value.span);\n+                if let Some(sp) = disr_expr.as_ref().map(|c| c.value.span) {\n+                    any_disr.push(sp);\n+                }\n                 struct_def = VariantData::Unit(ast::DUMMY_NODE_ID);\n             } else {\n                 struct_def = VariantData::Unit(ast::DUMMY_NODE_ID);\n@@ -7022,11 +7024,15 @@ impl<'a> Parser<'a> {\n             if !self.eat(&token::Comma) { break; }\n         }\n         self.expect(&token::CloseDelim(token::Brace))?;\n-        match any_disr {\n-            Some(disr_span) if !all_nullary =>\n-                self.span_err(disr_span,\n-                    \"discriminator values can only be used with a field-less enum\"),\n-            _ => ()\n+        if !any_disr.is_empty() && !all_nullary {\n+            let mut err =self.struct_span_err(\n+                any_disr.clone(),\n+                \"discriminator values can only be used with a field-less enum\",\n+            );\n+            for sp in any_disr {\n+                err.span_label(sp, \"only valid in field-less enums\");\n+            }\n+            err.emit();\n         }\n \n         Ok(ast::EnumDef { variants })"}, {"sha": "04cd43d0b10714af5d02205711dbf05ea34b29e8", "filename": "src/test/ui/parser/issue-17383.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17383.rs?ref=3ead6de40d57ec78275ee398592baa814b5f0841", "patch": "@@ -1,8 +1,7 @@\n enum X {\n-    A =\n-        b'a' //~ ERROR discriminator values can only be used with a field-less enum\n-    ,\n-    B(isize)\n+    A = 3,\n+    //~^ ERROR discriminator values can only be used with a field-less enum\n+    B(usize)\n }\n \n fn main() {}"}, {"sha": "57caa3372a629dc076a17a7cc51f0e015c4f54ef", "filename": "src/test/ui/parser/issue-17383.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr?ref=3ead6de40d57ec78275ee398592baa814b5f0841", "patch": "@@ -1,8 +1,8 @@\n error: discriminator values can only be used with a field-less enum\n-  --> $DIR/issue-17383.rs:3:9\n+  --> $DIR/issue-17383.rs:2:9\n    |\n-LL |         b'a' //~ ERROR discriminator values can only be used with a field-less enum\n-   |         ^^^^\n+LL |     A = 3,\n+   |         ^ only valid in field-less enums\n \n error: aborting due to previous error\n "}, {"sha": "8f5453d06f37f920391f2bef219afaeaacb7b5e5", "filename": "src/test/ui/parser/tag-variant-disr-non-nullary.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.rs?ref=3ead6de40d57ec78275ee398592baa814b5f0841", "patch": "@@ -1,12 +1,14 @@\n-//error-pattern: discriminator values can only be used with a field-less enum\n \n-enum color {\n-    red = 0xff0000,\n-    green = 0x00ff00,\n-    blue = 0x0000ff,\n-    black = 0x000000,\n-    white = 0xffffff,\n-    other (str),\n+enum Color {\n+    Red = 0xff0000,\n+    //~^ ERROR discriminator values can only be used with a field-less enum\n+    Green = 0x00ff00,\n+    Blue = 0x0000ff,\n+    Black = 0x000000,\n+    White = 0xffffff,\n+    Other (str),\n+    //~^ ERROR the size for values of type\n+    // the above is kept in order to verify that we get beyond parse errors\n }\n \n fn main() {}"}, {"sha": "7088352f8033ae2e04d0e003543aae0895271cbc", "filename": "src/test/ui/parser/tag-variant-disr-non-nullary.stderr", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ead6de40d57ec78275ee398592baa814b5f0841/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr?ref=3ead6de40d57ec78275ee398592baa814b5f0841", "patch": "@@ -1,8 +1,28 @@\n error: discriminator values can only be used with a field-less enum\n-  --> $DIR/tag-variant-disr-non-nullary.rs:8:13\n+  --> $DIR/tag-variant-disr-non-nullary.rs:3:11\n    |\n-LL |     white = 0xffffff,\n-   |             ^^^^^^^^\n+LL |     Red = 0xff0000,\n+   |           ^^^^^^^^ only valid in field-less enums\n+LL |     //~^ ERROR discriminator values can only be used with a field-less enum\n+LL |     Green = 0x00ff00,\n+   |             ^^^^^^^^ only valid in field-less enums\n+LL |     Blue = 0x0000ff,\n+   |            ^^^^^^^^ only valid in field-less enums\n+LL |     Black = 0x000000,\n+   |             ^^^^^^^^ only valid in field-less enums\n+LL |     White = 0xffffff,\n+   |             ^^^^^^^^ only valid in field-less enums\n \n-error: aborting due to previous error\n+error[E0277]: the size for values of type `str` cannot be known at compilation time\n+  --> $DIR/tag-variant-disr-non-nullary.rs:9:12\n+   |\n+LL |     Other (str),\n+   |            ^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `str`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = note: no field of an enum variant may have a dynamically sized type\n+\n+error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0277`."}]}