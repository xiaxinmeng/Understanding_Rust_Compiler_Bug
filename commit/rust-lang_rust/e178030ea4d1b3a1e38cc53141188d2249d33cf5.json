{"sha": "e178030ea4d1b3a1e38cc53141188d2249d33cf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNzgwMzBlYTRkMWIzYTFlMzhjYzUzMTQxMTg4ZDIyNDlkMzNjZjU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-11-17T20:24:16Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-03T22:11:37Z"}, "message": "Use `createElement` and `innerHTML` instead of `DOMParser`\n\n@GuillaumeGomez was concerned about browser compatibility.", "tree": {"sha": "79f8cf3f8b75b0adc834d53f1f84b1ef754fdce3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79f8cf3f8b75b0adc834d53f1f84b1ef754fdce3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e178030ea4d1b3a1e38cc53141188d2249d33cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e178030ea4d1b3a1e38cc53141188d2249d33cf5", "html_url": "https://github.com/rust-lang/rust/commit/e178030ea4d1b3a1e38cc53141188d2249d33cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e178030ea4d1b3a1e38cc53141188d2249d33cf5/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d4a7128d9929723769a7c674f49e9fe3fc0ff13", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d4a7128d9929723769a7c674f49e9fe3fc0ff13", "html_url": "https://github.com/rust-lang/rust/commit/5d4a7128d9929723769a7c674f49e9fe3fc0ff13"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "0884351a9fd80a9172c5e252456a40841140abb6", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e178030ea4d1b3a1e38cc53141188d2249d33cf5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/e178030ea4d1b3a1e38cc53141188d2249d33cf5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=e178030ea4d1b3a1e38cc53141188d2249d33cf5", "patch": "@@ -2040,11 +2040,9 @@ function defocusSearchBar() {\n      * @return {[string]}      [The resulting plaintext]\n      */\n     function convertHTMLToPlaintext(html) {\n-        var dom = new DOMParser().parseFromString(\n-            html.replace('<code>', '`').replace('</code>', '`'),\n-            'text/html',\n-        );\n-        return dom.body.innerText;\n+        var x = document.createElement(\"div\");\n+        x.innerHTML = html.replace('<code>', '`').replace('</code>', '`');\n+        return x.innerText;\n     }\n \n "}]}