{"sha": "f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ODkzOWM2ZmQ3M2UwY2I3NzZiN2RkYmM3MzI4MjdiMDRhNGIyYTM=", "commit": {"author": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-10-12T06:06:45Z"}, "committer": {"name": "Zack M. Davis", "email": "code@zackmdavis.net", "date": "2017-10-16T18:19:18Z"}, "message": "code suggestion for non-shorthand field patterns lint\n\nWe also edit the lint description to clarify that this is different from\nthe struct field init shorthand.", "tree": {"sha": "17434e00740975940a146dd4961b80b4dc68799c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17434e00740975940a146dd4961b80b4dc68799c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "html_url": "https://github.com/rust-lang/rust/commit/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3/comments", "author": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zackmdavis", "id": 1076988, "node_id": "MDQ6VXNlcjEwNzY5ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/1076988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zackmdavis", "html_url": "https://github.com/zackmdavis", "followers_url": "https://api.github.com/users/zackmdavis/followers", "following_url": "https://api.github.com/users/zackmdavis/following{/other_user}", "gists_url": "https://api.github.com/users/zackmdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/zackmdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zackmdavis/subscriptions", "organizations_url": "https://api.github.com/users/zackmdavis/orgs", "repos_url": "https://api.github.com/users/zackmdavis/repos", "events_url": "https://api.github.com/users/zackmdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/zackmdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e596c1d0b803dbdcc91ed57372f26f42ae6d32e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e596c1d0b803dbdcc91ed57372f26f42ae6d32e8", "html_url": "https://github.com/rust-lang/rust/commit/e596c1d0b803dbdcc91ed57372f26f42ae6d32e8"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "5f58e96efbae448b0c2048862a03e3f35ebbce2e", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "patch": "@@ -153,7 +153,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoxPointers {\n declare_lint! {\n     NON_SHORTHAND_FIELD_PATTERNS,\n     Warn,\n-    \"using `Struct { x: x }` instead of `Struct { x }`\"\n+    \"using `Struct { x: x }` instead of `Struct { x }` in a pattern\"\n }\n \n #[derive(Copy, Clone)]\n@@ -174,11 +174,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NonShorthandFieldPatterns {\n                 }\n                 if let PatKind::Binding(_, _, ident, None) = fieldpat.node.pat.node {\n                     if ident.node == fieldpat.node.name {\n-                        cx.span_lint(NON_SHORTHAND_FIELD_PATTERNS,\n+                        let mut err = cx.struct_span_lint(NON_SHORTHAND_FIELD_PATTERNS,\n                                      fieldpat.span,\n-                                     &format!(\"the `{}:` in this pattern is redundant and can \\\n-                                              be removed\",\n-                                              ident.node))\n+                                     &format!(\"the `{}:` in this pattern is redundant\",\n+                                              ident.node));\n+                        let subspan = cx.tcx.sess.codemap().span_through_char(fieldpat.span, ':');\n+                        err.span_suggestion_short(subspan,\n+                                                  \"remove this\",\n+                                                  format!(\"{}\", ident.node));\n+                        err.emit();\n                     }\n                 }\n             }"}, {"sha": "dd46903bb88d743a38b23ea1e3e90d5d06b2f123", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f98939c6fd73e0cb776b7ddbc732827b04a4b2a3/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=f98939c6fd73e0cb776b7ddbc732827b04a4b2a3", "patch": "@@ -471,6 +471,17 @@ impl CodeMap {\n         }\n     }\n \n+    /// Given a `Span`, try to get a shorter span ending just after the first\n+    /// occurrence of `char` `c`.\n+    pub fn span_through_char(&self, sp: Span, c: char) -> Span {\n+        if let Ok(snippet) = self.span_to_snippet(sp) {\n+            if let Some(offset) = snippet.find(c) {\n+                return sp.with_hi(BytePos(sp.lo().0 + (offset + c.len_utf8()) as u32));\n+            }\n+        }\n+        sp\n+    }\n+\n     pub fn def_span(&self, sp: Span) -> Span {\n         self.span_until_char(sp, '{')\n     }"}]}