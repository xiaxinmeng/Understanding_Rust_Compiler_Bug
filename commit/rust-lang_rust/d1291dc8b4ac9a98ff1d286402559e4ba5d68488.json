{"sha": "d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "node_id": "C_kwDOAAsO6NoAKGQxMjkxZGM4YjRhYzlhOThmZjFkMjg2NDAyNTU5ZTRiYTVkNjg0ODg", "commit": {"author": {"name": "Chris Wailes", "email": "chriswailes@google.com", "date": "2022-09-13T23:13:43Z"}, "committer": {"name": "Chris Wailes", "email": "chriswailes@google.com", "date": "2022-09-16T22:03:11Z"}, "message": "Improve handing of env vars during bootstrap process\n\nThis CL modifies the handing of env vars during the bootstrap process in\ntwo ways:\n1. Replaces '-' characters with '_' characters in target names to\n   increase compatibility with different shells\n2. Passes Stage0 snapshot compiler related env vars to early invocations\n   of Cargo", "tree": {"sha": "5e74f8a2e78327d389beb10559e22784edcb9236", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e74f8a2e78327d389beb10559e22784edcb9236"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "html_url": "https://github.com/rust-lang/rust/commit/d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1291dc8b4ac9a98ff1d286402559e4ba5d68488/comments", "author": {"login": "chriswailes", "id": 530751, "node_id": "MDQ6VXNlcjUzMDc1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriswailes", "html_url": "https://github.com/chriswailes", "followers_url": "https://api.github.com/users/chriswailes/followers", "following_url": "https://api.github.com/users/chriswailes/following{/other_user}", "gists_url": "https://api.github.com/users/chriswailes/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriswailes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriswailes/subscriptions", "organizations_url": "https://api.github.com/users/chriswailes/orgs", "repos_url": "https://api.github.com/users/chriswailes/repos", "events_url": "https://api.github.com/users/chriswailes/events{/privacy}", "received_events_url": "https://api.github.com/users/chriswailes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chriswailes", "id": 530751, "node_id": "MDQ6VXNlcjUzMDc1MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chriswailes", "html_url": "https://github.com/chriswailes", "followers_url": "https://api.github.com/users/chriswailes/followers", "following_url": "https://api.github.com/users/chriswailes/following{/other_user}", "gists_url": "https://api.github.com/users/chriswailes/gists{/gist_id}", "starred_url": "https://api.github.com/users/chriswailes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chriswailes/subscriptions", "organizations_url": "https://api.github.com/users/chriswailes/orgs", "repos_url": "https://api.github.com/users/chriswailes/repos", "events_url": "https://api.github.com/users/chriswailes/events{/privacy}", "received_events_url": "https://api.github.com/users/chriswailes/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54f20bbb8a7aeab93da17c0019c1aaa10329245a", "url": "https://api.github.com/repos/rust-lang/rust/commits/54f20bbb8a7aeab93da17c0019c1aaa10329245a", "html_url": "https://github.com/rust-lang/rust/commit/54f20bbb8a7aeab93da17c0019c1aaa10329245a"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "350d87d58a4dcde6c520a0d1ca599670c46d4726", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d1291dc8b4ac9a98ff1d286402559e4ba5d68488/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/d1291dc8b4ac9a98ff1d286402559e4ba5d68488/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "patch": "@@ -732,19 +732,26 @@ def build_bootstrap(self, color):\n             (os.pathsep + env[\"LIBRARY_PATH\"]) \\\n             if \"LIBRARY_PATH\" in env else \"\"\n \n+        # Export Stage0 snapshot compiler related env variables\n+        build_section = \"target.{}\".format(self.build)\n+        host_triple_sanitized = self.build.replace(\"-\", \"_\")\n+        var_data = {\n+            \"CC\": \"cc\", \"CXX\": \"cxx\", \"LD\": \"linker\", \"AR\": \"ar\", \"RANLIB\": \"ranlib\"\n+        }\n+        for var_name, toml_key in var_data.items():\n+            toml_val = self.get_toml(toml_key, build_section)\n+            if toml_val != None:\n+                env[\"{}_{}\".format(var_name, host_triple_sanitized)] = toml_val\n+\n         # preserve existing RUSTFLAGS\n         env.setdefault(\"RUSTFLAGS\", \"\")\n-        build_section = \"target.{}\".format(self.build)\n         target_features = []\n         if self.get_toml(\"crt-static\", build_section) == \"true\":\n             target_features += [\"+crt-static\"]\n         elif self.get_toml(\"crt-static\", build_section) == \"false\":\n             target_features += [\"-crt-static\"]\n         if target_features:\n             env[\"RUSTFLAGS\"] += \" -C target-feature=\" + (\",\".join(target_features))\n-        target_linker = self.get_toml(\"linker\", build_section)\n-        if target_linker is not None:\n-            env[\"RUSTFLAGS\"] += \" -C linker=\" + target_linker\n         env[\"RUSTFLAGS\"] += \" -Wrust_2018_idioms -Wunused_lifetimes\"\n         env[\"RUSTFLAGS\"] += \" -Wsemicolon_in_expressions_from_macros\"\n         if self.get_toml(\"deny-warnings\", \"rust\") != \"false\":"}, {"sha": "b654db6dbe9a3b5a4500d69a9ca72700170f60a6", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d1291dc8b4ac9a98ff1d286402559e4ba5d68488/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1291dc8b4ac9a98ff1d286402559e4ba5d68488/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=d1291dc8b4ac9a98ff1d286402559e4ba5d68488", "patch": "@@ -1940,25 +1940,26 @@ impl<'a> Builder<'a> {\n                     _ => s.display().to_string(),\n                 }\n             };\n+            let triple_underscored = target.triple.replace(\"-\", \"_\");\n             let cc = ccacheify(&self.cc(target));\n-            cargo.env(format!(\"CC_{}\", target.triple), &cc);\n+            cargo.env(format!(\"CC_{}\", triple_underscored), &cc);\n \n             let cflags = self.cflags(target, GitRepo::Rustc, CLang::C).join(\" \");\n-            cargo.env(format!(\"CFLAGS_{}\", target.triple), &cflags);\n+            cargo.env(format!(\"CFLAGS_{}\", triple_underscored), &cflags);\n \n             if let Some(ar) = self.ar(target) {\n                 let ranlib = format!(\"{} s\", ar.display());\n                 cargo\n-                    .env(format!(\"AR_{}\", target.triple), ar)\n-                    .env(format!(\"RANLIB_{}\", target.triple), ranlib);\n+                    .env(format!(\"AR_{}\", triple_underscored), ar)\n+                    .env(format!(\"RANLIB_{}\", triple_underscored), ranlib);\n             }\n \n             if let Ok(cxx) = self.cxx(target) {\n                 let cxx = ccacheify(&cxx);\n                 let cxxflags = self.cflags(target, GitRepo::Rustc, CLang::Cxx).join(\" \");\n                 cargo\n-                    .env(format!(\"CXX_{}\", target.triple), &cxx)\n-                    .env(format!(\"CXXFLAGS_{}\", target.triple), cxxflags);\n+                    .env(format!(\"CXX_{}\", triple_underscored), &cxx)\n+                    .env(format!(\"CXXFLAGS_{}\", triple_underscored), cxxflags);\n             }\n         }\n "}]}