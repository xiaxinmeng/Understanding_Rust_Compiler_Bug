{"sha": "d14109ec7e90f42a7cb966415b96094b146d3706", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNDEwOWVjN2U5MGY0MmE3Y2I5NjY0MTViOTYwOTRiMTQ2ZDM3MDY=", "commit": {"author": {"name": "Thomas Jespersen", "email": "laumann.thomas@gmail.com", "date": "2015-04-14T13:36:38Z"}, "committer": {"name": "Thomas Jespersen", "email": "laumann.thomas@gmail.com", "date": "2015-04-14T13:36:38Z"}, "message": "Add \"trace-macros\" as a compiler flag\n\nFixes #22619", "tree": {"sha": "649be4562b01b23607c486eabe99879fa6da3549", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/649be4562b01b23607c486eabe99879fa6da3549"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d14109ec7e90f42a7cb966415b96094b146d3706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d14109ec7e90f42a7cb966415b96094b146d3706", "html_url": "https://github.com/rust-lang/rust/commit/d14109ec7e90f42a7cb966415b96094b146d3706", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d14109ec7e90f42a7cb966415b96094b146d3706/comments", "author": null, "committer": null, "parents": [{"sha": "e6a812402828f0f11b0de7a7e0c08c1d85a437f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a812402828f0f11b0de7a7e0c08c1d85a437f1", "html_url": "https://github.com/rust-lang/rust/commit/e6a812402828f0f11b0de7a7e0c08c1d85a437f1"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "47049969f0c78bd4069e68ab06e0b104aaf3cd71", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d14109ec7e90f42a7cb966415b96094b146d3706", "patch": "@@ -606,6 +606,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"Force overflow checks on or off\"),\n     force_dropflag_checks: Option<bool> = (None, parse_opt_bool,\n           \"Force drop flag checks on or off\"),\n+    trace_macros: bool = (false, parse_bool,\n+          \"For every macro invocation, print its name and arguments\"),\n }\n \n pub fn default_lib_output() -> CrateType {\n@@ -667,7 +669,7 @@ pub fn build_target_config(opts: &Options, sp: &SpanHandler) -> Config {\n         Ok(t) => t,\n         Err(e) => {\n             sp.handler().fatal(&format!(\"Error loading target specification: {}\", e));\n-    }\n+        }\n     };\n \n     let (int_type, uint_type) = match &target.target_pointer_width[..] {"}, {"sha": "f7815a58d062bce42f6aa4c45c2dd1f007dfc735", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=d14109ec7e90f42a7cb966415b96094b146d3706", "patch": "@@ -482,6 +482,7 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n                 crate_name: crate_name.to_string(),\n                 features: Some(&features),\n                 recursion_limit: sess.recursion_limit.get(),\n+                trace_mac: sess.opt.debugging_opts.trace_macros,\n             };\n             let ret = syntax::ext::expand::expand_crate(&sess.parse_sess,\n                                               cfg,"}, {"sha": "9c2837d71ff89e3b633bccf9d612b6d9aaeaff96", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=d14109ec7e90f42a7cb966415b96094b146d3706", "patch": "@@ -554,7 +554,6 @@ pub struct ExtCtxt<'a> {\n     pub use_std: bool,\n \n     pub mod_path: Vec<ast::Ident> ,\n-    pub trace_mac: bool,\n     pub exported_macros: Vec<ast::MacroDef>,\n \n     pub syntax_env: SyntaxEnv,\n@@ -572,7 +571,6 @@ impl<'a> ExtCtxt<'a> {\n             mod_path: Vec::new(),\n             ecfg: ecfg,\n             use_std: true,\n-            trace_mac: false,\n             exported_macros: Vec::new(),\n             syntax_env: env,\n             recursion_count: 0,\n@@ -732,10 +730,10 @@ impl<'a> ExtCtxt<'a> {\n         self.parse_sess.span_diagnostic.handler().bug(msg);\n     }\n     pub fn trace_macros(&self) -> bool {\n-        self.trace_mac\n+        self.ecfg.trace_mac\n     }\n     pub fn set_trace_macros(&mut self, x: bool) {\n-        self.trace_mac = x\n+        self.ecfg.trace_mac = x\n     }\n     pub fn ident_of(&self, st: &str) -> ast::Ident {\n         str_to_ident(st)"}, {"sha": "c8ff08eeb9488abb9c4100c4dba84f67569ec87b", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d14109ec7e90f42a7cb966415b96094b146d3706/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=d14109ec7e90f42a7cb966415b96094b146d3706", "patch": "@@ -1406,6 +1406,7 @@ pub struct ExpansionConfig<'feat> {\n     pub crate_name: String,\n     pub features: Option<&'feat Features>,\n     pub recursion_limit: usize,\n+    pub trace_mac: bool,\n }\n \n macro_rules! feature_tests {\n@@ -1427,6 +1428,7 @@ impl<'feat> ExpansionConfig<'feat> {\n             crate_name: crate_name,\n             features: None,\n             recursion_limit: 64,\n+            trace_mac: false,\n         }\n     }\n "}]}