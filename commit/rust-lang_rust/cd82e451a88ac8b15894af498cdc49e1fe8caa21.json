{"sha": "cd82e451a88ac8b15894af498cdc49e1fe8caa21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkODJlNDUxYTg4YWM4YjE1ODk0YWY0OThjZGM0OWUxZmU4Y2FhMjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-20T03:49:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-20T03:49:10Z"}, "message": "Auto merge of #83293 - osa1:82436_perf, r=varkor\n\nRevert performance-sensitive change in #82436\n\nThis change was done in #82436, as an \"optimization\". Unfortunately I\nmissed that this code is not always executed, because of the \"continue\"\nin the conditional above it.\n\nThis commit should solve the perf regressions introduced by #82436 as I\nthink there isn't anything else that could affect runtime performance in\nthat PR. The `Pick` type grows only one word, which I doubt can cause up\nto 8.8% increase in RSS in some of the benchmarks.\n\n---\n\nCould someone with the rights start a perf job please?", "tree": {"sha": "b1ff6efe12dbca4fcfca0496549ef7204308553e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1ff6efe12dbca4fcfca0496549ef7204308553e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd82e451a88ac8b15894af498cdc49e1fe8caa21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd82e451a88ac8b15894af498cdc49e1fe8caa21", "html_url": "https://github.com/rust-lang/rust/commit/cd82e451a88ac8b15894af498cdc49e1fe8caa21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd82e451a88ac8b15894af498cdc49e1fe8caa21/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bfbf0c33a86707cedd02ca985285191282a80b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfbf0c33a86707cedd02ca985285191282a80b3", "html_url": "https://github.com/rust-lang/rust/commit/6bfbf0c33a86707cedd02ca985285191282a80b3"}, {"sha": "f9257576db1b50137655f9a7ec4b6cb9fa3d6024", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9257576db1b50137655f9a7ec4b6cb9fa3d6024", "html_url": "https://github.com/rust-lang/rust/commit/f9257576db1b50137655f9a7ec4b6cb9fa3d6024"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "3006cabc632fd11d7a510af5610c8cf42d4ca2ed", "filename": "compiler/rustc_typeck/src/check/method/probe.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd82e451a88ac8b15894af498cdc49e1fe8caa21/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd82e451a88ac8b15894af498cdc49e1fe8caa21/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprobe.rs?ref=cd82e451a88ac8b15894af498cdc49e1fe8caa21", "patch": "@@ -742,16 +742,16 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n \n         debug!(\"assemble_inherent_impl_probe {:?}\", impl_def_id);\n \n-        let (impl_ty, impl_substs) = self.impl_ty_and_substs(impl_def_id);\n-        let impl_ty = impl_ty.subst(self.tcx, impl_substs);\n-\n         for item in self.impl_or_trait_item(impl_def_id) {\n             if !self.has_applicable_self(&item) {\n                 // No receiver declared. Not a candidate.\n                 self.record_static_candidate(ImplSource(impl_def_id));\n                 continue;\n             }\n \n+            let (impl_ty, impl_substs) = self.impl_ty_and_substs(impl_def_id);\n+            let impl_ty = impl_ty.subst(self.tcx, impl_substs);\n+\n             // Determine the receiver type that the method itself expects.\n             let xform_tys = self.xform_self_ty(&item, impl_ty, impl_substs);\n "}]}