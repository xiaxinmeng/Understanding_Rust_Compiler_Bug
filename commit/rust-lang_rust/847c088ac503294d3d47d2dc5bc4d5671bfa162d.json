{"sha": "847c088ac503294d3d47d2dc5bc4d5671bfa162d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0N2MwODhhYzUwMzI5NGQzZDQ3ZDJkYzViYzRkNTY3MWJmYTE2MmQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-05-06T20:23:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-05-11T01:52:12Z"}, "message": "Update AUTHORS.txt and RELEASES.md for 1.0", "tree": {"sha": "7b66c8120a974cc5e11e114225890737971bbd4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b66c8120a974cc5e11e114225890737971bbd4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/847c088ac503294d3d47d2dc5bc4d5671bfa162d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/847c088ac503294d3d47d2dc5bc4d5671bfa162d", "html_url": "https://github.com/rust-lang/rust/commit/847c088ac503294d3d47d2dc5bc4d5671bfa162d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/847c088ac503294d3d47d2dc5bc4d5671bfa162d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ecc9896dedb426e3f4eb3d23dfc60192fe5275f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecc9896dedb426e3f4eb3d23dfc60192fe5275f", "html_url": "https://github.com/rust-lang/rust/commit/9ecc9896dedb426e3f4eb3d23dfc60192fe5275f"}], "stats": {"total": 323, "additions": 198, "deletions": 125}, "files": [{"sha": "16346db4e1d9d19e9c328326c5853608223401e5", "filename": "AUTHORS.txt", "status": "modified", "additions": 59, "deletions": 48, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/847c088ac503294d3d47d2dc5bc4d5671bfa162d/AUTHORS.txt", "raw_url": "https://github.com/rust-lang/rust/raw/847c088ac503294d3d47d2dc5bc4d5671bfa162d/AUTHORS.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/AUTHORS.txt?ref=847c088ac503294d3d47d2dc5bc4d5671bfa162d", "patch": "@@ -8,6 +8,7 @@ Aaron Raimist <aaron@aaronraimist.com>\n Aaron Todd <github@opprobrio.us>\n Aaron Turon <aturon@mozilla.com>\n Aaron Weiss <aaronweiss74@gmail.com>\n+Abhishek Chanda <abhishek@cloudscaling.com>\n Adam Bozanich <adam.boz@gmail.com>\n Adam Jacob <adam@opscode.com>\n Adam Roben <adam@roben.org>\n@@ -28,6 +29,7 @@ Aleksandr Koshlo <sash7ko@gmail.com>\n Alex Crichton <alex@alexcrichton.com>\n Alex Gaynor <alex.gaynor@gmail.com>\n Alex Lyon <arcterus@mail.com>\n+Alex Quach <alex@clinkle.com>\n Alex R\u00f8nne Petersen <alex@lycus.org>\n Alex Whitney <aw1209@ic.ac.uk>\n Alexander Bliskovsky <alexander.bliskovsky@gmail.com>\n@@ -41,7 +43,6 @@ Alexandros Tasos <sdi1100085@di.uoa.gr>\n Alexei Sholik <alcosholik@gmail.com>\n Alexis Beingessner <a.beingessner@gmail.com>\n Alfie John <alfie@alfie.wtf>\n-Alfie John <alfiej@fastmail.fm>\n Ali Smesseim <smesseim.ali@gmail.com>\n Alisdair Owens <awo101@zepler.net>\n Aljaz\u030c \"g5pw\" Srebrnic\u030c <a2piratesoft@gmail.com>\n@@ -64,10 +65,13 @@ Andrew Gallant <jamslam@gmail.com>\n Andrew Hobden <andrew@hoverbear.org>\n Andrew Paseltiner <apaseltiner@gmail.com>\n Andrew Poelstra <asp11@sfu.ca>\n+Andrew Seidl <dev@aas.io>\n Andrew Wagner <drewm1980@gmail.com>\n Angus Lees <gus@inodes.org>\n Anthony Juckel <ajuckel@gmail.com>\n Anton L\u00f6fgren <anton.lofgren@gmail.com>\n+Aram Visser <aramvisser@gmail.com>\n+Areski Belaid <areski@gmail.com>\n Arcterus <Arcterus@mail.com>\n Ariel Ben-Yehuda <arielb1@mail.tau.ac.il>\n Arjan Topolovec <arjan.top@gmail.com>\n@@ -78,20 +82,22 @@ Arpad Borsos <arpad.borsos@googlemail.com>\n Artem <artemciy@gmail.com>\n Arthur Liao <arthurtw8@gmail.com>\n Ashok Gautham <ScriptDevil@gmail.com>\n+Augusto Hack <hack.augusto@gmail.com>\n Austin Bonander <austin.bonander@gmail.com>\n Austin King <shout@ozten.com>\n Austin Seipp <mad.one@gmail.com>\n Axel Viala <axel.viala@darnuria.eu>\n Aydin Kim <ladinjin@hanmail.net>\n Barosl Lee <vcs@barosl.com>\n Ben Alpert <ben@benalpert.com>\n+Ben Ashford <ben@bcash.org>\n Ben Blum <bblum@andrew.cmu.edu>\n Ben Foppa <benjamin.foppa@gmail.com>\n Ben Gamari <bgamari.foss@gmail.com>\n Ben Harris <mail@bharr.is>\n Ben Kelly <ben@wanderview.com>\n Ben Noordhuis <info@bnoordhuis.nl>\n-Ben S <ogham@users.noreply.github.com>\n+Ben Sago <ogham@users.noreply.github.com>\n Ben Striegel <ben.striegel@gmail.com>\n Benjamin Adamson <adamson.benjamin@gmail.com>\n Benjamin Herr <ben@0x539.de>\n@@ -112,6 +118,7 @@ Brandon Waskiewicz <brandon.waskiewicz@gmail.com>\n Branimir <branimir@volomp.com>\n Brendan Cully <brendan@kublai.com>\n Brendan Eich <brendan@mozilla.org>\n+Brendan Graetz <github@bguiz.com>\n Brendan McLoughlin <btmcloughlin@gmail.com>\n Brendan Zabarauskas <bjzaba@yahoo.com.au>\n Brett Cannon <brett@python.org>\n@@ -135,8 +142,8 @@ Camille TJHOA <camille.tjhoa@outlook.com>\n CarVac <c.lo.to.da.down.lo@gmail.com>\n Carl Lerche <me@carllerche.com>\n Carl-Anton Ingmarsson <mail@carlanton.se>\n-Carlos <toqueteos@gmail.com>\n-Carol Nichols <carol.nichols@gmail.com>\n+Carlos Galarza <carloslfu@gmail.com>\n+Carol (Nichols || Goulding) <carol.nichols@gmail.com>\n Carol Willing <carolcode@willingconsulting.com>\n Carter Hinsley <carterhinsley@gmail.com>\n Carter Tazio Schonwald <carter.schonwald@gmail.com>\n@@ -151,10 +158,11 @@ Chris Peterson <cpeterson@mozilla.com>\n Chris Pressey <cpressey@gmail.com>\n Chris Sainty <csainty@hotmail.com>\n Chris Shea <cmshea@gmail.com>\n-Chris Thorn <thorn@thoughtbot.com>\n+Chris Thorn <chris@thorn.co>\n Chris Wong <lambda.fairy@gmail.com>\n Christoph Burgdorf <christoph.burgdorf@bvsn.org>\n Christopher Bergqvist <spambox0@digitalpoetry.se>\n+Christopher Chambers <chris.chambers@peanutcode.com>\n Christopher Kendell <ckendell@outlook.com>\n Chuck Ries <chuck.ries@gmail.com>\n Clark Gaebel <cg.wowus.cg@gmail.com>\n@@ -172,13 +180,14 @@ Corey Richardson <corey@octayn.net>\n Cristi Burc\u0103 <scribu@gmail.com>\n Cristian Kubis <cristian.kubis@tsunix.de>\n DJUrsus <colinvh@divitu.com>\n-Dabo Ross <daboross@daboross.net>\n+David Ross <daboross@daboross.net>\n Damian Gryski <damian@gryski.com>\n Damien Grassart <damien@grassart.com>\n Damien Radtke <dradtke@channeliq.com>\n Damien Schoof <damien.schoof@gmail.com>\n Dan Albert <danalbert@google.com>\n Dan Burkert <dan@danburkert.com>\n+Dan Callahan <dan.callahan@gmail.com>\n Dan Connolly <dckc@madmode.com>\n Dan Luu <danluu@gmail.com>\n Dan Schatzberg <schatzberg.dan@gmail.com>\n@@ -234,6 +243,8 @@ Dmitry Ermolov <epdmitry@yandex.ru>\n Dmitry Promsky <dmitry@willworkforcookies.com>\n Dmitry Vasiliev <dima@hlabs.org>\n Do Nhat Minh <mrordinaire@gmail.com>\n+Dominic van Berkel <dominic@baudvine.net>\n+Dominick Allen <dominick.allen1989@gmail.com>\n Dominik Inf\u00fchr <dominik.infuehr@gmail.com>\n Donovan Preston <donovanpreston@gmail.com>\n Douglas Young <rcxdude@gmail.com>\n@@ -287,11 +298,10 @@ Felix S. Klock II <pnkfelix@pnkfx.org>\n Fenhl <fenhl@fenhl.net>\n Filip Szczepa\u0144ski <jazz2rulez@gmail.com>\n Flaper Fesp <flaper87@gmail.com>\n-Flavio Percoco <flaper87@gmail.com>\n Florian Gilcher <florian.gilcher@asquera.de>\n Florian Hahn <flo@fhahn.com>\n Florian Hartwig <florian.j.hartwig@gmail.com>\n-Florian Wilkens <floya@live.de>\n+Florian Wilkens <mrfloya_github@outlook.com>\n Florian Zeitz <florob@babelmonkeys.de>\n Francisco Souza <f@souza.cc>\n Franklin Chen <franklinchen@franklinchen.com>\n@@ -310,13 +320,12 @@ Georges Dubus <georges.dubus@gmail.com>\n Germano Gabbianelli <tyrion@users.noreply.github.com>\n Gil Cottle <rc@redtown.org>\n Gioele Barabucci <gioele@svario.it>\n-GlacJAY <glacjay@gmail.com>\n Gleb Kozyrev <gleb@gkoz.com>\n Glenn Willen <gwillen@nerdnet.org>\n Gon\u00e7alo Cabrita <_@gmcabrita.com>\n Graham Fawcett <graham.fawcett@gmail.com>\n Grahame Bowland <grahame@angrygoats.net>\n-Graydon Hoare <graydon@mozilla.com>\n+Graydon Hoare <graydon@pobox.com>\n Greg Chapple <gregchapple1@gmail.com>\n Grigoriy <ohaistarlight@gmail.com>\n Guillaume Gomez <guillaume1.gomez@gmail.com>\n@@ -325,11 +334,12 @@ Gyorgy Andrasek <jurily@gmail.com>\n G\u00e1bor Horv\u00e1th <xazax.hun@gmail.com>\n G\u00e1bor Lehel <glaebhoerl@gmail.com>\n Haitao Li <lihaitao@gmail.com>\n+Hajime Morrita <omo@dodgson.org>\n Hanno Braun <mail@hannobraun.de>\n Harry Marr <harry.marr@gmail.com>\n Heather <heather@cynede.net>\n Henrik Schopmans <h.schopmans@googlemail.com>\n-Herman J. Radtke III <hermanradtke@gmail.com>\n+Herman J. Radtke III <herman@hermanradtke.com>\n HeroesGrave <heroesgrave@gmail.com>\n Hong Chulju <ang0123dev@gmail.com>\n Honza Strnad <hanny.strnad@gmail.com>\n@@ -343,6 +353,7 @@ Ian D. Bollinger <ian.bollinger@gmail.com>\n Ian Daniher <it.daniher@gmail.com>\n Ignacio Corderi <icorderi@msn.com>\n Igor Bukanov <igor@mir2.org>\n+Igor Strebezhev <xamgore@ya.ru>\n Ilya Dmitrichenko <ilya@xively.com>\n Ilyong Cho <ilyoan@gmail.com>\n Ingo Blechschmidt <iblech@web.de>\n@@ -390,7 +401,7 @@ Jashank Jeremy <jashank@rulingia.com>\n Jason Fager <jfager@gmail.com>\n Jason Orendorff <jorendorff@mozilla.com>\n Jason Thompson <jason@jthompson.ca>\n-Jason Toffaletti <jason@topsy.com>\n+Jason Toffaletti <toffaletti@gmail.com>\n Jauhien Piatlicki <jauhien@gentoo.org>\n Jay Anderson <jayanderson0@gmail.com>\n Jay True <glacjay@gmail.com>\n@@ -421,8 +432,10 @@ Jimmie Elvenmark <flugsio@gmail.com>\n Jimmy Lu <jimmy.lu.2011@gmail.com>\n Jimmy Zelinskie <jimmyzelinskie@gmail.com>\n Ji\u0159\u00ed Str\u00e1nsk\u00fd <jistr@jistr.com>\n+Jo\u00e3o Oliveira <hello@jxs.pt>\n Joe Pletcher <joepletcher@gmail.com>\n Joe Schafer <joe@jschaf.com>\n+Johann Hofmann <mail@johann-hofmann.com>\n Johannes Hoff <johshoff@gmail.com>\n Johannes L\u00f6thberg <johannes@kyriasis.com>\n Johannes Muenzel <jmuenzel@gmail.com>\n@@ -436,10 +449,10 @@ John Gallagher <jgallagher@bignerdranch.com>\n John Hodge <acessdev@gmail.com>\n John Ka\u030are Alsaker <john.kare.alsaker@gmail.com>\n John Kleint <jk@hinge.co>\n-John K\u00e5re Alsaker <john.kare.alsaker@gmail.com>\n John Louis Walker <injyuw@gmail.com>\n John Schmidt <john.schmidt.h@gmail.com>\n John Simon <john@johnsoft.com>\n+John Talling <inrustwetrust@users.noreply.github.com>\n John Zhang <john@zhang.io>\n Jon Haddad <jon@jonhaddad.com>\n Jon Morton <jonanin@gmail.com>\n@@ -462,6 +475,7 @@ Joseph Rushton Wakeling <joe@webdrake.net>\n Josh Haberman <jhaberman@gmail.com>\n Josh Matthews <josh@joshmatthews.net>\n Josh Stone <cuviper@gmail.com>\n+Josh Triplett <josh@joshtriplett.org>\n Joshua Clark <joshua.clark@txstate.edu>\n Joshua Wise <joshua@joshuawise.com>\n Joshua Yanovski <pythonesque@gmail.com>\n@@ -515,6 +529,7 @@ Lo\u00efc Damien <loic.damien@dzamlo.ch>\n Luca Bruno <lucab@debian.org>\n Luis de Bethencourt <luis@debethencourt.com>\n Luke Francl <look@recursion.org>\n+Luke Gallagher <luke@hypergeometric.net>\n Luke Metz <luke.metz@students.olin.edu>\n Luke Steensen <luke.steensen@gmail.com>\n Luqman Aden <me@luqman.ca>\n@@ -523,10 +538,12 @@ Magnus Auvinen <magnus.auvinen@gmail.com>\n Mahmut Bulut <mahmutbulut0@gmail.com>\n Makoto Nakashima <makoto.nksm+github@gmail.com>\n Manish Goregaokar <manishsmail@gmail.com>\n+Manuel Hoffmann <manuel@polythematik.de>\n Marcel Rodrigues <marcelgmr@gmail.com>\n Margaret Meyerhofer <mmeyerho@andrew.cmu.edu>\n Marijn Haverbeke <marijnh@gmail.com>\n Mark Lacey <641@rudkx.com>\n+Mark Mossberg <mark.mossberg@gmail.com>\n Mark Rowe <mrowe@bdash.net.nz>\n Mark Sinclair <mark.edward.x@gmail.com>\n Mark Vian <mrv.caseus@gmail.com>\n@@ -563,6 +580,7 @@ Maximilian Haack <mxhaack@gmail.com>\n Maya Nitu <maya_nitu@yahoo.com>\n Meyer S. Jacobs <meyermagic@gmail.com>\n Micah Chalmer <micah@micahchalmer.net>\n+Michael Alexander <beefsack@gmail.com>\n Michael Arntzenius <daekharel@gmail.com>\n Michael Bebenita <mbebenita@mozilla.com>\n Michael Budde <mbudde@gmail.com>\n@@ -582,9 +600,12 @@ Michael Sullivan <sully@msully.net>\n Michael Williams <m.t.williams@live.com>\n Michael Woerister <michaelwoerister@posteo>\n Michael Zhou <moz@google.com>\n+Micha\u0142 Czardybon <mczard@poczta.onet.pl>\n Micha\u0142 Krasnoborski <mkrdln@gmail.com>\n Mick Koch <kchmck@gmail.com>\n Micka\u00ebl Delahaye <mickael.delahaye@gmail.com>\n+Micka\u00ebl Raybaud-Roig <raybaudroigm@gmail.com>\n+Micka\u00ebl Sala\u00fcn <mic@digikod.net>\n Mihnea Dobrescu-Balaur <mihnea@linux.com>\n Mike Boutin <mike.boutin@gmail.com>\n Mike Dilger <mike@efx.co.nz>\n@@ -595,28 +616,28 @@ Mikhail Zabaluev <mikhail.zabaluev@gmail.com>\n Mikko Perttunen <cyndis@kapsi.fi>\n Ms2ger <ms2ger@gmail.com>\n Mukilan Thiagarajan <mukilanthiagarajan@gmail.com>\n-Mukilan Thiyagarajan <mukilanthiagarajan@gmail.com>\n Murarth <murarth@gmail.com>\n M\u00e1ty\u00e1s Mustoha <mmatyas@inf.u-szeged.hu>\n-NAKASHIMA, Makoto <makoto.nksm+github@gmail.com>\n NODA, Kai <nodakai@gmail.com>\n Nafis <nhoss2@gmail.com>\n Nathan Froyd <froydnj@gmail.com>\n Nathan Stoddard <nstodda@purdue.edu>\n Nathan Typanski <ntypanski@gmail.com>\n+Nathan Wilson <wilnathan@gmail.com>\n Nathan Zadoks <nathan@nathan7.eu>\n Nathaniel Herman <nherman@college.harvard.edu>\n Nathaniel Theis <nttheis@gmail.com>\n Neil Pankey <npankey@gmail.com>\n Nelson Chen <crazysim@gmail.com>\n NiccosSystem <niccossystem@gmail.com>\n-Nicholas <npmazzuca@gmail.com>\n Nicholas Bishop <nicholasbishop@gmail.com>\n Nicholas Mazzuca <npmazzuca@gmail.com>\n Nick Cameron <ncameron@mozilla.com>\n Nick Desaulniers <ndesaulniers@mozilla.com>\n+Nick Hamann <nick@wabbo.org>\n Nick Howell <howellnick@gmail.com>\n Nick Sarten <gen.battle@gmail.com>\n+Nick Platt <platt.nicholas@gmail.com>\n Nicolas Silva <nical.silva@gmail.com>\n Niels Egberts <git@nielsegberts.nl>\n Niels langager Ellegaard <niels.ellegaard@gmail.com>\n@@ -626,9 +647,10 @@ Niklas Koep <niklas.koep@gmail.com>\n Niko Matsakis <niko@alum.mit.edu>\n Noam Yorav-Raphael <noamraph@gmail.com>\n Noufal Ibrahim <noufal@nibrahim.net.in>\n+Oak <White-Oak@users.noreply.github.com>\n O S K Chaitanya <osk@medhas.org>\n OGINO Masanori <masanori.ogino@gmail.com>\n-Oliver Schneider <oliver.schneider@kit.edu>\n+Oliver Schneider <github6541940@oli-obk.de>\n Olivier Saut <osaut@airpost.net>\n Olle Jonsson <olle.jonsson@gmail.com>\n Or Brostovski <tohava@gmail.com>\n@@ -650,14 +672,15 @@ Paul Collier <paul@paulcollier.ca>\n Paul Collins <paul@ondioline.org>\n Paul Crowley <paulcrowley@google.com>\n Paul Osborne <osbpau@gmail.com>\n+Paul Quint <DrKwint@gmail.com>\n Paul Stansifer <paul.stansifer@gmail.com>\n Paul Woolcock <pwoolcoc+github@gmail.com>\n Pavel Panchekha <me@pavpanchekha.com>\n Pawel Olzacki <p.olzacki2@samsung.com>\n Pedro Larroy <pedro.larroy@here.com>\n Peer Aramillo Irizar <peer.aramillo.irizar@gmail.com>\n Peter Atashian <retep998@gmail.com>\n-Peter Elmers <peter.elmers@yahoo.com>\n+Peter Elmers <peter.elmers@rice.edu>\n Peter Hull <peterhull90@gmail.com>\n Peter Marheine <peter@taricorp.net>\n Peter Minten <peter@pminten.nl>\n@@ -675,12 +698,11 @@ Piotr Czarnecki <pioczarn@gmail.com>\n Piotr Jawniak <sawyer47@gmail.com>\n Piotr Szotkowski <chastell@chastell.net>\n Piotr Zolnierek <pz@anixe.pl>\n+Poga Po <poga.bahamut@gmail.com>\n Potpourri <pot_pourri@mail.ru>\n-Pradeep Kumar <gohanpra@gmail.com>\n Prudhvi Krishna Surapaneni <me@prudhvi.net>\n Pyfisch <pyfisch@gmail.com>\n Pyry Kontio <pyry.kontio@drasa.eu>\n-Pythoner6 <pythoner6@gmail.com>\n Q.P.Liu <qpliu@yahoo.com>\n Rafael \u00c1vila de Esp\u00edndola <respindola@mozilla.com>\n Rahul Hor\u00e9 <hore.rahul@gmail.com>\n@@ -694,9 +716,9 @@ Raphael Speyer <rspeyer@gmail.com>\n Raul Gutierrez S <rgs@itevenworks.net>\n Ray Clanan <rclanan@utopianconcept.com>\n Reilly Watson <reillywatson@gmail.com>\n+Remi Rampin <remirampin@gmail.com>\n Renato Alves <alves.rjc@gmail.com>\n Renato Riccieri Santos Zannon <renato@rrsz.com.br>\n-Renato Zannon <renato@rrsz.com.br>\n Reuben Morais <reuben.morais@gmail.com>\n Ricardo M. Correia <rcorreia@wizy.org>\n Ricardo Martins <ricardo@scarybox.net>\n@@ -714,6 +736,7 @@ Robert Irelan <rirelan@gmail.com>\n Robert Knight <robertknight@gmail.com>\n Robert Millar <robert.millar@cantab.net>\n Robin Gloster <robin@loc-com.de>\n+Robin Kruppe <robin.kruppe@gmail.com>\n Robin Stocker <robin@nibor.org>\n Rohit Joshi <rohitjoshi@users.noreply.github.com>\n Roland Tanglao <roland@rolandtanglao.com>\n@@ -722,14 +745,13 @@ Rolf van de Krol <info@rolfvandekrol.nl>\n Ron Dahlgren <ronald.dahlgren@gmail.com>\n Roy Crihfield <rscrihf@gmail.com>\n Roy Frostig <rfrostig@mozilla.com>\n-Russell <rpjohnst@gmail.com>\n+Russell Johnston <rpjohnst@gmail.com>\n Ruud van Asseldonk <dev@veniogames.com>\n Ryan Levick <ryan@6wunderkinder.com>\n Ryan Mulligan <ryan@ryantm.com>\n Ryan Prichard <ryan.prichard@gmail.com>\n Ryan Riginding <marc.riginding@gmail.com>\n Ryan Scheel <ryan.havvy@gmail.com>\n-Ryman <haqkrs@gmail.com>\n R\u00fcdiger Sonderfeld <ruediger@c-plusplus.de>\n S Pradeep Kumar <gohanpra@gmail.com>\n Sae-bom Kim <sae-bom.kim@samsung.com>\n@@ -745,6 +767,7 @@ Saurabh Anand <saurabhanandiit@gmail.com>\n Scott Jenkins <scottdjwales@gmail.com>\n Scott Lawrence <bytbox@gmail.com>\n Scott Olson <scott@scott-olson.org>\n+Sean Bowe <ewillbefull@gmail.com>\n Sean Chalmers <sclhiannan@gmail.com>\n Sean Collins <sean@cllns.com>\n Sean Gillespie <sean.william.g@gmail.com>\n@@ -799,16 +822,18 @@ Taylor Hutchison <seanthutchison@gmail.com>\n Ted Horst <ted.horst@earthlink.net>\n Tero H\u00e4nninen <lgvz@users.noreply.github.com>\n Thad Guidry <thadguidry@gmail.com>\n+Theo Belaire <theo.belaire@gmail.com>\n Thiago Carvalho <thiago.carvalho@westwing.de>\n Thiago Pontes <email@thiago.me>\n Thomas Backman <serenity@exscape.org>\n+Thomas Bracht Laumann Jespersen <laumann.thomas@gmail.com>\n Thomas Daede <daede003@umn.edu>\n Tiago Nobrega <tigarmo@gmail.com>\n+Tibor Benke <ihrwein@gmail.com>\n Till Hoeppner <till@hoeppner.ws>\n Tim Brooks <brooks@cern.ch>\n Tim Chevalier <chevalier@alum.wellesley.edu>\n Tim Cuthbertson <tim@gfxmonk.net>\n-Tim Dumol <tim@timdumol.com>\n Tim Joseph Dumol <tim@timdumol.com>\n Tim Kuehn <tkuehn@cmu.edu>\n Tim Parenti <timparenti@gmail.com>\n@@ -836,7 +861,7 @@ Trinick <slicksilver555@mac.com>\n Tristan Storch <tstorch@math.uni-bielefeld.de>\n Tshepang Lekhonkhobe <tshepang@gmail.com>\n Tuncer Ayaz <tuncer.ayaz@gmail.com>\n-TyOverby <ty@pre-alpha.com>\n+Ty Overby <ty@pre-alpha.com>\n Tycho Sci <tychosci@gmail.com>\n Tyler Bindon <martica@martica.org>\n Tyler Thrailkill <tylerbthrailkill@gmail.com>\n@@ -870,8 +895,10 @@ WebeWizard <webewizard@gmail.com>\n Wendell Smith <wendell.smith@yale.edu>\n Wesley Wiser <wwiser@gmail.com>\n Will <will@glozer.net>\n+Will Hipschman <whipsch@gmail.com>\n William Ting <io@williamting.com>\n Willson Mock <willson.mock@gmail.com>\n+Xue Fuqiao <xfq.free@gmail.com>\n Yasuhiro Fujii <y-fujii@mimosa-pudica.net>\n YawarRaza7349 <YawarRaza7349@gmail.com>\n Yazhong Liu <yorkiefixer@gmail.com>\n@@ -889,68 +916,56 @@ Zack Slayton <zack.slayton@gmail.com>\n Zbigniew Siciarz <zbigniew@siciarz.net>\n Ziad Hatahet <hatahet@gmail.com>\n Zooko Wilcox-O'Hearn <zooko@zooko.com>\n-adridu59 <adri-from-59@hotmail.fr>\n-aochagavia <aochagavia92@gmail.com>\n-areski <areski@gmail.com>\n arturo <arturo@openframeworks.cc>\n auREAX <mark@xn--hwg34fba.ws>\n awlnx <alecweber1994@gmail.com>\n aydin.kim <aydin.kim@samsung.com>\n-b1nd <clint.ryan3@gmail.com>\n bachm <Ab@vapor.com>\n bcoopers <coopersmithbrian@gmail.com>\n-blackbeam <aikorsky@gmail.com>\n+Anatoly Ikorsky <aikorsky@gmail.com>\n blake2-ppc <ulrik.sverdrup@gmail.com>\n bluss <bluss>\n-bombless <bombless@126.com>\n bors <bors@rust-lang.org>\n-caipre <platt.nicholas@gmail.com>\n chitra\n chromatic <chromatic@wgz.org>\n comex <comexk@gmail.com>\n crhino <piraino.chris@gmail.com>\n-dan@daramos.com <dan@daramos.com>\n+Daniel Ramos <dan@daramos.com>\n darkf <lw9k123@gmail.com>\n defuz <defuz.net@gmail.com>\n dgoon <dgoon@dgoon.net>\n donkopotamus <general@chocolate-fish.com>\n eliovir <eliovir@gmail.com>\n elszben <notgonna@tellyou>\n emanueLczirai <emanueLczirai@cryptoLab.net>\n+fenduru <fenduru@users.noreply.github.com>\n flo-l <lacknerflo@gmail.com>\n fort <e@mail.com>\n free-Runner <aali07@students.poly.edu>\n g3xzh <g3xzh@yahoo.com>\n gamazeps <gamaz3ps@gmail.com>\n gareth <gareth@gareth-N56VM.(none)>\n gentlefolk <cemacken@gmail.com>\n-gifnksm <makoto.nksm@gmail.com>\n+github-monoculture <eocene@gmx.com>\n hansjorg <hansjorg@gmail.com>\n-iancormac84 <wilnathan@gmail.com>\n-inrustwetrust <inrustwetrust@users.noreply.github.com>\n jamesluke <jamesluke@users.noreply.github.com>\n jatinn <jatinn@users.noreply.github.com>\n jbranchaud <jbranchaud@gmail.com>\n-jfager <jfager@gmail.com>\n jmgrosen <jmgrosen@gmail.com>\n jmu303 <muj@bc.edu>\n-joaoxsouls <joaoxsouls@gmail.com>\n jrincayc <jrincayc@users.noreply.github.com>\n juxiliary <juxiliary@gmail.com>\n jxv <joevargas@hush.com>\n kgv <mail@kgv.name>\n kjpgit <kjpgit@users.noreply.github.com>\n klutzy <klutzytheklutzy@gmail.com>\n korenchkin <korenchkin2@gmail.com>\n-kud1ing <github@kudling.de>\n kulakowski <george.kulakowski@gmail.com>\n-kvark <kvarkus@gmail.com>\n kwantam <kwantam@gmail.com>\n lpy <pylaurent1314@gmail.com>\n lucy <ne.tetewi@gmail.com>\n lummax <luogpg@googlemail.com>\n lyuts <dioxinu@gmail.com>\n-m-r-r <raybaudroigm@gmail.com>\n madmalik <matthias.tellen@googlemail.com>\n maikklein <maikklein@googlemail.com>\n masklinn <github.com@masklinn.net>\n@@ -962,21 +977,20 @@ mr.Shu <mr@shu.io>\n mrec <mike.capp@gmail.com>\n musitdev <philippe.delrieu@free.fr>\n nathan dotz <nathan.dotz@gmail.com>\n-nham <hamann.nick@gmail.com>\n-niftynif <nif.ward@gmail.com>\n+Nils Winter <nils.winter@gmail.com>\n noam <noam@clusterfoo.com>\n novalis <novalis@novalis.org>\n nsf <no.smile.face@gmail.com>\n-nwin <nwin@users.noreply.github.com>\n-oli-obk <github6541940@oli-obk.de>\n olivren <o.renaud@gmx.fr>\n osa1 <omeragacan@gmail.com>\n+pez <james.austin.perry@gmail.com>\n posixphreak <posixphreak@gmail.com>\n qwitwa <qwitwa@gmail.com>\n ray glover <ray@rayglover.net>\n reedlepee <reedlepee123@gmail.com>\n reus <reusee@ymail.com>\n rjz <rj@rjzaworski.com>\n+rundrop1 <rundrop1@zoho.com>\n sevrak <sevrak@rediffmail.com>\n sheroze1123 <mss385@cornell.edu>\n smenardpw <sebastien@knoglr.com>\n@@ -990,12 +1004,9 @@ tinaun <tinagma@gmail.com>\n tshakah <tshakah@gmail.com>\n ville-h <ville3.14159@gmail.com>\n visualfc <visualfc@gmail.com>\n-we <vadim.petrochenkov@gmail.com>\n whataloadofwhat <unusualmoniker@gmail.com>\n wickerwaka <martin.donlon@gmail.com>\n wonyong kim <wonyong.kim@samsung.com>\n xales <xales@naveria.com>\n zofrex <zofrex@gmail.com>\n-zslayton <zack.slayton@gmail.com>\n-zzmp <zmp@umich.edu>\n \u514b\u96f7 <geekcraik@users.noreply.github.com>"}, {"sha": "7c8a6d0e0cdb20ab812d1e94e0f51bb04fc04a4c", "filename": "RELEASES.md", "status": "modified", "additions": 138, "deletions": 76, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/847c088ac503294d3d47d2dc5bc4d5671bfa162d/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/847c088ac503294d3d47d2dc5bc4d5671bfa162d/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=847c088ac503294d3d47d2dc5bc4d5671bfa162d", "patch": "@@ -1,79 +1,140 @@\n-Version 1.0.0-beta (April 2015)\n--------------------------------------\n-\n-* ~1100 changes, numerous bugfixes\n-\n-* Highlights\n-\n-    * The big news is that the vast majority of the standard library\n-      is now `#[stable]` -- 75% of the non-deprecated API surface at\n-      last count. Numerous crates are now running on stable\n-      Rust. Starting with this release, it is not possible to use\n-      unstable features on a stable build.\n-    * Arithmetic on basic integer types now\n-      [checks for overflow in debug builds][overflow].\n-\n-* Language\n-\n-    * [`Send` no longer implies `'static`][send-rfc], which made\n-      possible the [`thread::scoped` API][scoped]. Scoped threads can\n-      borrow data from their parent's stack frame -- safely!\n-    * [UFCS now supports trait-less associated paths][moar-ufcs] like\n-      `MyType::default()`.\n-    * Primitive types [now have inherent methods][prim-inherent],\n-      obviating the need for extension traits like `SliceExt`.\n-    * Methods with `Self: Sized` in their `where` clause are\n-      [considered object-safe][self-sized], allowing many extension\n-      traits like `IteratorExt` to be merged into the traits they\n-      extended.\n-    * You can now [refer to associated types][assoc-where] whose\n-      corresponding trait bounds appear only in a `where` clause.\n-    * The final bits of [OIBIT landed][oibit-final], meaning that\n-      traits like `Send` and `Sync` are now library-defined.\n-    * A [Reflect trait][reflect] was introduced, which means that\n-      downcasting via the `Any` trait is effectively limited to\n-      concrete types. This helps retain the potentially-important\n-      \"parametricity\" property: generic code cannot behave differently\n-      for different type arguments except in minor ways.\n-    * The `unsafe_destructor` feature is now deprecated in favor of\n-      the [new `dropck`][dropck]. This change is a major reduction in\n-      unsafe code.\n-    * Trait coherence was [revised again][fundamental], this time with\n-      an eye toward API evolution over time.\n-\n-* Libraries\n-\n-    * The new path and IO modules are complete and `#[stable]`. This\n-      was the major library focus for this cycle.\n-    * The path API was [revised][path-normalize] to normalize `.`,\n-      adjusting the tradeoffs in favor of the most common usage.\n-    * A large number of remaining APIs in `std` were also stabilized\n-      during this cycle; about 75% of the non-deprecated API surface\n-      is now stable.\n-    * The new [string pattern API][string-pattern] landed, which makes\n-      the string slice API much more internally consistent and flexible.\n-    * A shiny [framework for Debug implementations][debug-builder] landed.\n-      This makes it possible to opt in to \"pretty-printed\" debugging output.\n-    * A new set of [generic conversion traits][conversion] replaced\n-      many existing ad hoc traits.\n-    * Generic numeric traits were\n-      [completely removed][num-traits]. This was made possible thanks\n-      to inherent methods for primitive types, and the removal gives\n-      maximal flexibility for designing a numeric hierarchy in the future.\n-    * The `Fn` traits are now related via [inheritance][fn-inherit]\n-      and provide ergonomic [blanket implementations][fn-blanket].\n-    * The `Index` and `IndexMut` traits were changed to\n-      [take the index by value][index-value], enabling code like\n-      `hash_map[\"string\"]` to work.\n-    * `Copy` now [inherits][copy-clone] from `Clone`, meaning that all\n-      `Copy` data is known to be `Clone` as well.\n-\n-* Infrastructure\n-\n-    * Metadata was tuned, shrinking binaries [by 27%][metadata-shrink].\n-    * Much headway was made on ecosystem-wide CI, making it possible\n-      to [compare builds for breakage][ci-compare].\n-\n+Version 1.0.0 (May 2015)\n+========================\n+\n+Highlights\n+----------\n+\n+* The vast majority of the standard library is now `#[stable]`. It is\n+  no longer possible to use unstable features with a stable build of\n+  the compiler.\n+* Many popular crates on [crates.io] now work on the stable release\n+  channel.\n+* Arithmetic on basic integer types now [checks for overflow in debug\n+  builds][overflow].\n+\n+Language\n+--------\n+\n+* Several [restrictions have been added to trait coherence][coh] in\n+  order to make it easier for upstream authors to change traits\n+  without breaking downsteam code.\n+* Digits of binary and octal literals are [lexed more eagerly][lex] to\n+  improve error messages and macro behavior. For example, `0b1234` is\n+  now lexed as `0b1234` instead of two tokens, `0b1` and `234`.\n+* Trait bounds [are always invariant][inv], eleminating the need for\n+  the `PhantomFn` and `MarkerTrait` lang items, which have been\n+  removed.\n+* [\"-\" is no longer a valid character in crate names][cr], the `extern crate\n+  \"foo\" as bar` syntax has been replaced with `extern crate foo as\n+  bar`, and Cargo now automatically translates \"-\" in *package* names\n+  to underscore for the crate name.\n+* [Lifetime shadowing is an error][lt].\n+* [`Send` no longer implies `'static`][send-rfc].\n+* [UFCS now supports trait-less associated paths][moar-ufcs] like\n+  `MyType::default()`.\n+* Primitive types [now have inherent methods][prim-inherent],\n+  obviating the need for extension traits like `SliceExt`.\n+* Methods with `Self: Sized` in their `where` clause are [considered\n+  object-safe][self-sized], allowing many extension traits like\n+  `IteratorExt` to be merged into the traits they extended.\n+* You can now [refer to associated types][assoc-where] whose\n+  corresponding trait bounds appear only in a `where` clause.\n+* The final bits of [OIBIT landed][oibit-final], meaning that traits\n+  like `Send` and `Sync` are now library-defined.\n+* A [Reflect trait][reflect] was introduced, which means that\n+  downcasting via the `Any` trait is effectively limited to concrete\n+  types. This helps retain the potentially-important \"parametricity\"\n+  property: generic code cannot behave differently for different type\n+  arguments except in minor ways.\n+* The `unsafe_destructor` feature is now deprecated in favor of the\n+  [new `dropck`][dropck]. This change is a major reduction in unsafe\n+  code.\n+\n+Libraries\n+---------\n+\n+* The `thread_local` module [has been renamed to `std::thread`][th].\n+* The methods of `IteratorExt` [have been moved to the `Iterator`\n+  trait itself][ie].\n+* Several traits that implement Rust's conventions for type\n+  conversions, `AsMut`, `AsRef`, `From`, and `Into` have been\n+  [centralized in the `std::convert` module][con].\n+* The `FromError` trait [was removed in favor of `From`][fe].\n+* The basic sleep function [has moved to\n+  `std::thread::sleep_ms`][slp].\n+* The `splitn` function now takes an `n` parameter that represents the\n+  number of items yielded by the returned iterator [instead of the\n+  number of 'splits'][spl].\n+* [On Unix, all file descriptors are `CLOEXEC` by default][clo].\n+* [Derived implementations of `PartialOrd` now order enums according\n+  to their explicitly-assigned discriminants][po].\n+* [Methods for searching strings are generic over `Pattern`s][pat],\n+  implemented presently by `&char`, `&str`, `FnMut(char) -> bool` and\n+  some others.\n+* [In method resolution, object methods are resolved before inherent\n+  methods][meth].\n+* [`String::from_str` has been deprecated in favor of the `From` impl,\n+  `String::from`][sf].\n+* [`io::Error` implements `Sync`][ios].\n+* [The `words` method on `&str` has been replaced with\n+  `split_whitespace`][sw], to avoid answering the tricky question, 'what is\n+  a word?'\n+* The new path and IO modules are complete and `#[stable]`. This\n+  was the major library focus for this cycle.\n+* The path API was [revised][path-normalize] to normalize `.`,\n+  adjusting the tradeoffs in favor of the most common usage.\n+* A large number of remaining APIs in `std` were also stabilized\n+  during this cycle; about 75% of the non-deprecated API surface\n+  is now stable.\n+* The new [string pattern API][string-pattern] landed, which makes\n+  the string slice API much more internally consistent and flexible.\n+* A new set of [generic conversion traits][conversion] replaced\n+  many existing ad hoc traits.\n+* Generic numeric traits were [completely removed][num-traits]. This\n+  was made possible thanks to inherent methods for primitive types,\n+  and the removal gives maximal flexibility for designing a numeric\n+  hierarchy in the future.\n+* The `Fn` traits are now related via [inheritance][fn-inherit]\n+  and provide ergonomic [blanket implementations][fn-blanket].\n+* The `Index` and `IndexMut` traits were changed to\n+  [take the index by value][index-value], enabling code like\n+  `hash_map[\"string\"]` to work.\n+* `Copy` now [inherits][copy-clone] from `Clone`, meaning that all\n+  `Copy` data is known to be `Clone` as well.\n+\n+Misc\n+----\n+\n+* Many errors now have extended explanations that can be accessed with\n+  the `--explain` flag to `rustc`.\n+* Many new examples have been added to the standard library\n+  documentation.\n+* rustdoc has received a number of improvements focused on completion\n+  and polish.\n+* Metadata was tuned, shrinking binaries [by 27%][metadata-shrink].\n+* Much headway was made on ecosystem-wide CI, making it possible\n+  to [compare builds for breakage][ci-compare].\n+\n+\n+[crates.io]: http://crates.io\n+[clo]: https://github.com/rust-lang/rust/pull/24034\n+[coh]: https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\n+[con]: https://github.com/rust-lang/rust/pull/23875\n+[cr]: https://github.com/rust-lang/rust/pull/23419\n+[fe]: https://github.com/rust-lang/rust/pull/23879\n+[ie]: https://github.com/rust-lang/rust/pull/23300\n+[inv]: https://github.com/rust-lang/rust/pull/23938\n+[ios]: https://github.com/rust-lang/rust/pull/24133\n+[lex]: https://github.com/rust-lang/rfcs/blob/master/text/0879-small-base-lexing.md\n+[lt]: https://github.com/rust-lang/rust/pull/24057\n+[meth]: https://github.com/rust-lang/rust/pull/24056\n+[pat]: https://github.com/rust-lang/rfcs/blob/master/text/0528-string-patterns.md\n+[po]: https://github.com/rust-lang/rust/pull/24270\n+[sf]: https://github.com/rust-lang/rust/pull/24517\n+[slp]: https://github.com/rust-lang/rust/pull/23949\n+[spl]: https://github.com/rust-lang/rfcs/blob/master/text/0979-align-splitn-with-other-languages.md\n+[sw]: https://github.com/rust-lang/rfcs/blob/master/text/1054-str-words.md\n+[th]: https://github.com/rust-lang/rfcs/blob/master/text/0909-move-thread-local-to-std-thread.md\n [send-rfc]: https://github.com/rust-lang/rfcs/blob/master/text/0458-send-improvements.md\n [scoped]: http://static.rust-lang.org/doc/master/std/thread/fn.scoped.html\n [moar-ufcs]: https://github.com/rust-lang/rust/pull/22172\n@@ -97,6 +158,7 @@ Version 1.0.0-beta (April 2015)\n [copy-clone]: https://github.com/rust-lang/rust/pull/23860\n [path-normalize]: https://github.com/rust-lang/rust/pull/23229\n \n+\n Version 1.0.0-alpha.2 (February 2015)\n -------------------------------------\n "}, {"sha": "ebc6b04c29591108d3f28e724b4b9b74cd1232e6", "filename": "src/rust-installer", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frust-installer?ref=847c088ac503294d3d47d2dc5bc4d5671bfa162d", "patch": "@@ -1 +1 @@\n-Subproject commit e54d4823d26cdb3f98e5a1b17e1c257cd329aa61\n+Subproject commit ebc6b04c29591108d3f28e724b4b9b74cd1232e6"}]}