{"sha": "93fb219579b3c012dbef7594b676f62070cd666e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZmIyMTk1NzliM2MwMTJkYmVmNzU5NGI2NzZmNjIwNzBjZDY2NmU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-19T19:23:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-25T06:25:45Z"}, "message": "Fix suggestion span for typo in associated type name", "tree": {"sha": "eca7d83099fab7c06d37c99eac3f8f3871b83eb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eca7d83099fab7c06d37c99eac3f8f3871b83eb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93fb219579b3c012dbef7594b676f62070cd666e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93fb219579b3c012dbef7594b676f62070cd666e", "html_url": "https://github.com/rust-lang/rust/commit/93fb219579b3c012dbef7594b676f62070cd666e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93fb219579b3c012dbef7594b676f62070cd666e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "245f62eb8a298892618a9d90327663fe932d493a", "url": "https://api.github.com/repos/rust-lang/rust/commits/245f62eb8a298892618a9d90327663fe932d493a", "html_url": "https://github.com/rust-lang/rust/commit/245f62eb8a298892618a9d90327663fe932d493a"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "8f6940cc0cefb4c2960b4dd8fcabac805011d6a4", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1995,6 +1995,9 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n     ) where\n         I: Iterator<Item = ty::PolyTraitRef<'tcx>>,\n     {\n+        // The fallback span is needed because `assoc_name` might be an `Fn()`'s `Output` without a\n+        // valid span, so we point at the whole path segment instead.\n+        let span = if assoc_name.span != DUMMY_SP { assoc_name.span } else { span };\n         let mut err = struct_span_err!(\n             self.tcx().sess,\n             span,\n@@ -2012,11 +2015,12 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             )\n             .collect();\n \n-        if let Some(suggested_name) =\n-            find_best_match_for_name(all_candidate_names.iter(), &assoc_name.as_str(), None)\n-        {\n+        if let (Some(suggested_name), true) = (\n+            find_best_match_for_name(all_candidate_names.iter(), &assoc_name.as_str(), None),\n+            assoc_name.span != DUMMY_SP,\n+        ) {\n             err.span_suggestion(\n-                span,\n+                assoc_name.span,\n                 \"there is an associated type with a similar name\",\n                 suggested_name.to_string(),\n                 Applicability::MaybeIncorrect,"}, {"sha": "60db7749082e5c84e4590529ccb6ee9c4319ad73", "filename": "src/test/ui/associated-types/associated-types-path-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-path-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-path-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-path-1.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `A` not found for `T`\n-  --> $DIR/associated-types-path-1.rs:10:23\n+  --> $DIR/associated-types-path-1.rs:10:26\n    |\n LL | pub fn f1<T>(a: T, x: T::A) {}\n-   |                       ^^^^ associated type `A` not found\n+   |                          ^ associated type `A` not found\n \n error[E0221]: ambiguous associated type `A` in bounds of `T`\n   --> $DIR/associated-types-path-1.rs:11:34"}, {"sha": "4fa83d8bf6e82d1b91daebe6f0db7ed82161d85d", "filename": "src/test/ui/error-codes/E0220.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `F` not found for `Trait`\n-  --> $DIR/E0220.rs:5:16\n+  --> $DIR/E0220.rs:5:22\n    |\n LL | type Foo = dyn Trait<F=i32>;\n-   |                ^^^^^^^^^^^^ associated type `F` not found\n+   |                      ^ associated type `F` not found\n \n error[E0191]: the value of the associated type `Bar` (from trait `Trait`) must be specified\n   --> $DIR/E0220.rs:5:16"}, {"sha": "dded673f6eed6ef7dddb81bfa4e95f7ba63d5763", "filename": "src/test/ui/issues/issue-23595-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-23595-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-23595-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23595-2.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `anything_here_kills_it` not found for `Self`\n-  --> $DIR/issue-23595-2.rs:6:16\n+  --> $DIR/issue-23595-2.rs:6:22\n    |\n LL |     type B = C<Self::anything_here_kills_it>;\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ associated type `anything_here_kills_it` not found\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^ associated type `anything_here_kills_it` not found\n \n error: aborting due to previous error\n "}, {"sha": "c14c663e5a1a973c6ab45b5fff38e229c9caa81c", "filename": "src/test/ui/issues/issue-39211.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-39211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-39211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39211.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `Row` not found for `M`\n-  --> $DIR/issue-39211.rs:11:17\n+  --> $DIR/issue-39211.rs:11:20\n    |\n LL |     let a = [3; M::Row::DIM];\n-   |                 ^^^^^^^^^^^ associated type `Row` not found\n+   |                    ^^^ associated type `Row` not found\n \n error: aborting due to previous error\n "}, {"sha": "fb1de9759c5cf5fca6f2224579c4f9f8dd6c9e62", "filename": "src/test/ui/issues/issue-59029-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-59029-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fissues%2Fissue-59029-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59029-1.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `Res` not found for `Self`\n-  --> $DIR/issue-59029-1.rs:5:46\n+  --> $DIR/issue-59029-1.rs:5:52\n    |\n LL | trait MkSvc<Target, Req> = Svc<Target> where Self::Res: Svc<Req>;\n-   |                                              ^^^^^^^^^ associated type `Res` not found\n+   |                                                    ^^^ associated type `Res` not found\n \n error: aborting due to previous error\n "}, {"sha": "f69899335539a3b1b066301a9df7457a5aa15c93", "filename": "src/test/ui/span/type-binding.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `Trget` not found for `std::ops::Deref`\n-  --> $DIR/type-binding.rs:6:14\n+  --> $DIR/type-binding.rs:6:20\n    |\n LL | fn homura<T: Deref<Trget = i32>>(_: T) {}\n-   |                    ^^^^^^^^^^^ help: there is an associated type with a similar name: `Target`\n+   |                    ^^^^^ help: there is an associated type with a similar name: `Target`\n \n error: aborting due to previous error\n "}, {"sha": "c2b6f7eae9f3d8e842f112bc5dbcf0f78e659b3a", "filename": "src/test/ui/type-alias-impl-trait/not_well_formed.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_well_formed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93fb219579b3c012dbef7594b676f62070cd666e/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_well_formed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fnot_well_formed.stderr?ref=93fb219579b3c012dbef7594b676f62070cd666e", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `Assoc` not found for `V`\n-  --> $DIR/not_well_formed.rs:10:26\n+  --> $DIR/not_well_formed.rs:10:29\n    |\n LL | type Foo<V> = impl Trait<V::Assoc>;\n-   |                          ^^^^^^^^ associated type `Assoc` not found\n+   |                             ^^^^^ associated type `Assoc` not found\n \n error: aborting due to previous error\n "}]}