{"sha": "63887ed4132dc362e4d5a271672f352c74154613", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzODg3ZWQ0MTMyZGMzNjJlNGQ1YTI3MTY3MmYzNTJjNzQxNTQ2MTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-02T21:45:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2016-04-02T21:45:04Z"}, "message": "make format_string and fmt_lines private", "tree": {"sha": "bda3338bc8bf4773eb9a075ec4ea6ae36470dcfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda3338bc8bf4773eb9a075ec4ea6ae36470dcfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63887ed4132dc362e4d5a271672f352c74154613", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63887ed4132dc362e4d5a271672f352c74154613", "html_url": "https://github.com/rust-lang/rust/commit/63887ed4132dc362e4d5a271672f352c74154613", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63887ed4132dc362e4d5a271672f352c74154613/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4532e16117eff1ecd24597d2dd916196e4efd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4532e16117eff1ecd24597d2dd916196e4efd9", "html_url": "https://github.com/rust-lang/rust/commit/ac4532e16117eff1ecd24597d2dd916196e4efd9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "5121a034fa4f2538f3e7d34e1f29283f41bb4087", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/63887ed4132dc362e4d5a271672f352c74154613/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63887ed4132dc362e4d5a271672f352c74154613/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=63887ed4132dc362e4d5a271672f352c74154613", "patch": "@@ -287,7 +287,7 @@ fn fmt_ast(krate: &ast::Crate,\n // Formatting done on a char by char or line by line basis.\n // TODO(#209) warn on bad license\n // TODO(#20) other stuff for parity with make tidy\n-pub fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n+fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     let mut truncate_todo = Vec::new();\n     let mut report = FormatReport { file_error_map: HashMap::new() };\n \n@@ -367,7 +367,7 @@ pub fn fmt_lines(file_map: &mut FileMap, config: &Config) -> FormatReport {\n     report\n }\n \n-pub fn format_string(input: String, config: &Config) -> FileMap {\n+fn format_string(input: String, config: &Config) -> FileMap {\n     let path = \"stdin\";\n     let codemap = Rc::new(CodeMap::new());\n "}]}