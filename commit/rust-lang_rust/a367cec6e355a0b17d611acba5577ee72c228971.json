{"sha": "a367cec6e355a0b17d611acba5577ee72c228971", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzNjdjZWM2ZTM1NWEwYjE3ZDYxMWFjYmE1NTc3ZWU3MmMyMjg5NzE=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-04T01:45:25Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-04T15:22:48Z"}, "message": "emit error with span for empty asserts\n\nFixes #55547.", "tree": {"sha": "36f3e2decf2f8e272649d2b2d40e1df6b9e32f63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36f3e2decf2f8e272649d2b2d40e1df6b9e32f63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a367cec6e355a0b17d611acba5577ee72c228971", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlwGm84WHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdBFAB/0QiK9Z0TapHv6JVNGHJ5vlXTDC\nYqJ2yIxwwlzdm2kp4zWLf6PcFut1tcPb+QaxsA0BrnUhRvz0mgLfBkRF9LRXHc3J\nWf4tjgxGdCvKi4hEQ+YN3K10brE0HYDxyXpjxjG3RfOVjattyH8GFFiq1K06jPuR\n1RHSCkaisf155id1fkJlG8pMeaDC3RCEwAmjF9oY+eII07Z54erWgZM79mkeiHEI\naclXUnDC8/MJk6EuIpvTUNZl4QxquV/zo2RzqF9NGiqgvqJ0hvxv/0a2wy2+HgPP\nDyvgV/RCwSWng5c6z17jJ/YC9NoHu+esojOBRaTUy3OQueYpR7lloFoc3I4v\n=aThb\n-----END PGP SIGNATURE-----", "payload": "tree 36f3e2decf2f8e272649d2b2d40e1df6b9e32f63\nparent 9cd3bef4cfaaac2a608682d4b0834cda344249e0\nauthor Andy Russell <arussell123@gmail.com> 1543887925 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1543936968 -0500\n\nemit error with span for empty asserts\n\nFixes #55547.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a367cec6e355a0b17d611acba5577ee72c228971", "html_url": "https://github.com/rust-lang/rust/commit/a367cec6e355a0b17d611acba5577ee72c228971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a367cec6e355a0b17d611acba5577ee72c228971/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cd3bef4cfaaac2a608682d4b0834cda344249e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cd3bef4cfaaac2a608682d4b0834cda344249e0", "html_url": "https://github.com/rust-lang/rust/commit/9cd3bef4cfaaac2a608682d4b0834cda344249e0"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "a2384b59048d54c7033ebf84667e2bd76139872a", "filename": "src/libsyntax_ext/assert.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a367cec6e355a0b17d611acba5577ee72c228971/src%2Flibsyntax_ext%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a367cec6e355a0b17d611acba5577ee72c228971/src%2Flibsyntax_ext%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fassert.rs?ref=a367cec6e355a0b17d611acba5577ee72c228971", "patch": "@@ -24,6 +24,14 @@ pub fn expand_assert<'cx>(\n     tts: &[TokenTree],\n ) -> Box<dyn MacResult + 'cx> {\n     let mut parser = cx.new_parser_from_tts(tts);\n+\n+    if parser.token == token::Eof {\n+        cx.struct_span_err(sp, \"macro requires a boolean expression as an argument\")\n+            .span_label(sp, \"boolean expression required\")\n+            .emit();\n+        return DummyResult::expr(sp);\n+    }\n+\n     let cond_expr = panictry!(parser.parse_expr());\n     let custom_msg_args = if parser.eat(&token::Comma) {\n         let ts = parser.parse_tokens();"}, {"sha": "8732cb58d74a68b5ca364669701f804b74a42adf", "filename": "src/test/ui/macros/assert.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a367cec6e355a0b17d611acba5577ee72c228971/src%2Ftest%2Fui%2Fmacros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a367cec6e355a0b17d611acba5577ee72c228971/src%2Ftest%2Fui%2Fmacros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert.rs?ref=a367cec6e355a0b17d611acba5577ee72c228971", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    assert!();  //~ ERROR requires a boolean expression\n+    debug_assert!(); //~ ERROR requires a boolean expression\n+}"}, {"sha": "89faba0cf63dd26bead3b79b6932bcbb37200f31", "filename": "src/test/ui/macros/assert.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a367cec6e355a0b17d611acba5577ee72c228971/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a367cec6e355a0b17d611acba5577ee72c228971/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr?ref=a367cec6e355a0b17d611acba5577ee72c228971", "patch": "@@ -0,0 +1,16 @@\n+error: macro requires a boolean expression as an argument\n+  --> $DIR/assert.rs:2:5\n+   |\n+LL |     assert!();  //~ ERROR requires a boolean expression\n+   |     ^^^^^^^^^^ boolean expression required\n+\n+error: macro requires a boolean expression as an argument\n+  --> $DIR/assert.rs:3:5\n+   |\n+LL |     debug_assert!(); //~ ERROR requires a boolean expression\n+   |     ^^^^^^^^^^^^^^^^ boolean expression required\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+"}]}