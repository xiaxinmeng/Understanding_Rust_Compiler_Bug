{"sha": "26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZDRjOGYwMWMwN2ZkYjNiMGMwMzU0ZGQ5YjUwOWM5NTVhODdlOWM=", "commit": {"author": {"name": "Adrian Friedli", "email": "adi@koalatux.ch", "date": "2019-06-08T20:30:45Z"}, "committer": {"name": "Adrian Friedli", "email": "adi@koalatux.ch", "date": "2019-06-08T20:30:45Z"}, "message": "implement nth_back for Range", "tree": {"sha": "6f136ea10a2e377a9b1210343768a45dc11d3d50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f136ea10a2e377a9b1210343768a45dc11d3d50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEGnYr8qNFpHvEa2L+ckiDAaWCRHcFAlz8GvYACgkQckiDAaWC\nRHcZcBAAgvJBNmltYQOuzgFxlxqNDozEd+oyQTh1JRuoTNHNdM2Nxf+sn9NZwkKm\nG100Sro40XitvNpcHO2rDi6S6onwVwp7/Tt41uLh59r/nATaTKiuUiu0z6srKequ\n23ZpcHFGUBpcch9nwZF9ffpQEu3ygfUZk02N/mIpDdtDHWS3sXTJ2q2FnR6unh9b\n/4fOc0AjzfNMTIqb1l/AIBKqK5S9JYVUvoYEHTX3wCq9RGvKtOsCFjz5ERnOjcYy\nlLXWpEkWcfT5lrdMYJ5wcUDc5y+Jp29j8p6hBSmdgWR1KyRGROuPbEqk/UxbeN7x\nCafQUXMT4W9JxmmvJSduSgjKfDCxkccfWjJtDX2NgGw6gNsVQVg2Lte9lClmhyIk\nNEHRePruNvQtHO6Q6m5TbVcu+DrMJ0Exmi4i6dIFolkD46t7th7qB/4Y/mc47Ed1\nLx8VwKlOgjjmnH2E3Vut+90ieoGxAZCxcB6q8KyOY//PwdKot4OkYCGWjHpKl/K6\n3deE0IFELLtWB1RMZFlfZ6YeSCQzwyPuDCwbhc6j5NCODMI9rPHbof9+vy47+32X\n83fWjDYhgwEHlYCuM4E2wDSwiXSPm1Ymmg0ib712uwKjGHsRPNzn893z48lPzm2w\nU9ds0bKKcldr6L9dZ1kdMg5TXccZiCR1iRXwhvaowmn5axKKG8g=\n=opcP\n-----END PGP SIGNATURE-----", "payload": "tree 6f136ea10a2e377a9b1210343768a45dc11d3d50\nparent 5c45343f11fbf93cf4e15568aee3ff3f2f287466\nauthor Adrian Friedli <adi@koalatux.ch> 1560025845 +0200\ncommitter Adrian Friedli <adi@koalatux.ch> 1560025845 +0200\n\nimplement nth_back for Range\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "html_url": "https://github.com/rust-lang/rust/commit/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c/comments", "author": {"login": "koalatux", "id": 973758, "node_id": "MDQ6VXNlcjk3Mzc1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/973758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koalatux", "html_url": "https://github.com/koalatux", "followers_url": "https://api.github.com/users/koalatux/followers", "following_url": "https://api.github.com/users/koalatux/following{/other_user}", "gists_url": "https://api.github.com/users/koalatux/gists{/gist_id}", "starred_url": "https://api.github.com/users/koalatux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koalatux/subscriptions", "organizations_url": "https://api.github.com/users/koalatux/orgs", "repos_url": "https://api.github.com/users/koalatux/repos", "events_url": "https://api.github.com/users/koalatux/events{/privacy}", "received_events_url": "https://api.github.com/users/koalatux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koalatux", "id": 973758, "node_id": "MDQ6VXNlcjk3Mzc1OA==", "avatar_url": "https://avatars.githubusercontent.com/u/973758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koalatux", "html_url": "https://github.com/koalatux", "followers_url": "https://api.github.com/users/koalatux/followers", "following_url": "https://api.github.com/users/koalatux/following{/other_user}", "gists_url": "https://api.github.com/users/koalatux/gists{/gist_id}", "starred_url": "https://api.github.com/users/koalatux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koalatux/subscriptions", "organizations_url": "https://api.github.com/users/koalatux/orgs", "repos_url": "https://api.github.com/users/koalatux/repos", "events_url": "https://api.github.com/users/koalatux/events{/privacy}", "received_events_url": "https://api.github.com/users/koalatux/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c45343f11fbf93cf4e15568aee3ff3f2f287466", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c45343f11fbf93cf4e15568aee3ff3f2f287466", "html_url": "https://github.com/rust-lang/rust/commit/5c45343f11fbf93cf4e15568aee3ff3f2f287466"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "e171108a146a65846cf5eaf043aeadbecd21370e", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "patch": "@@ -281,6 +281,19 @@ impl<A: Step> DoubleEndedIterator for ops::Range<A> {\n             None\n         }\n     }\n+\n+    #[inline]\n+    fn nth_back(&mut self, n: usize) -> Option<A> {\n+        if let Some(minus_n) = self.end.sub_usize(n) {\n+            if minus_n > self.start {\n+                self.end = minus_n.sub_one();\n+                return Some(self.end.clone())\n+            }\n+        }\n+\n+        self.end = self.start.clone();\n+        None\n+    }\n }\n \n #[stable(feature = \"fused\", since = \"1.26.0\")]"}, {"sha": "171a33695bc6a272527352ccca118beec5501a9c", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=26d4c8f01c07fdb3b0c0354dd9b509c955a87e9c", "patch": "@@ -1657,6 +1657,23 @@ fn test_range_nth() {\n     assert_eq!(r, 20..20);\n }\n \n+#[test]\n+fn test_range_nth_back() {\n+    assert_eq!((10..15).nth_back(0), Some(14));\n+    assert_eq!((10..15).nth_back(1), Some(13));\n+    assert_eq!((10..15).nth_back(4), Some(10));\n+    assert_eq!((10..15).nth_back(5), None);\n+    assert_eq!((-120..80_i8).nth_back(199), Some(-120));\n+\n+    let mut r = 10..20;\n+    assert_eq!(r.nth_back(2), Some(17));\n+    assert_eq!(r, 10..17);\n+    assert_eq!(r.nth_back(2), Some(14));\n+    assert_eq!(r, 10..14);\n+    assert_eq!(r.nth_back(10), None);\n+    assert_eq!(r, 10..10);\n+}\n+\n #[test]\n fn test_range_from_nth() {\n     assert_eq!((10..).nth(0), Some(10));"}]}