{"sha": "6ef0570a1e0cd074927ce23b875d79fb135babd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlZjA1NzBhMWUwY2QwNzQ5MjdjZTIzYjg3NWQ3OWZiMTM1YmFiZDI=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-08-21T11:16:52Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-08-21T11:16:52Z"}, "message": "Remove outdated comment and hide variants of `c_void`", "tree": {"sha": "0435a6725625211b3a5b61d7e93a42ac481dd9f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0435a6725625211b3a5b61d7e93a42ac481dd9f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ef0570a1e0cd074927ce23b875d79fb135babd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ef0570a1e0cd074927ce23b875d79fb135babd2", "html_url": "https://github.com/rust-lang/rust/commit/6ef0570a1e0cd074927ce23b875d79fb135babd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ef0570a1e0cd074927ce23b875d79fb135babd2/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a407b6c4eea5d7bff34abf42518bcb8379c0cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a407b6c4eea5d7bff34abf42518bcb8379c0cfb", "html_url": "https://github.com/rust-lang/rust/commit/3a407b6c4eea5d7bff34abf42518bcb8379c0cfb"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "5d65dec89be7b4bcce3d0db9a743284a574860bc", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6ef0570a1e0cd074927ce23b875d79fb135babd2/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ef0570a1e0cd074927ce23b875d79fb135babd2/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=6ef0570a1e0cd074927ce23b875d79fb135babd2", "patch": "@@ -191,14 +191,15 @@ pub mod types {\n             /// C. Use the unit type `()` or omit the return type instead.\n             ///\n             /// For LLVM to recognize the void pointer type and by extension\n-            /// functions like malloc(), we need to have it represented as i8* in\n-            /// LLVM bitcode. The enum used here ensures this and prevents misuse\n-            /// of the \"raw\" type by only having private variants.. We need two\n-            /// variants, because the compiler complains about the repr attribute\n-            /// otherwise.\n+            /// functions like malloc(), we need to have it represented as i8*\n+            /// in LLVM bitcode. The enum used here ensures this. We need two\n+            /// variants, because the compiler complains about the `repr`\n+            /// attribute otherwise.\n             #[repr(u8)]\n             pub enum c_void {\n+                #[doc(hidden)]\n                 __variant1,\n+                #[doc(hidden)]\n                 __variant2,\n             }\n "}]}