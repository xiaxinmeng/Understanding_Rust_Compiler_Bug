{"sha": "48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "node_id": "C_kwDOAAsO6NoAKDQ4YWQ5ZDhiYzdkNTBmZDVlYmU5MGMxYmJlNzYwZmNiOGRjMGRjMTQ", "commit": {"author": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2022-08-01T05:30:43Z"}, "committer": {"name": "tabokie", "email": "xy.tao@outlook.com", "date": "2022-08-01T12:13:33Z"}, "message": "do not apply [`assertions_on_result_states`] to unwrap unit type\n\nSigned-off-by: tabokie <xy.tao@outlook.com>", "tree": {"sha": "2b1128f1bceccaa3da9ff91c3b6e39028ff39c15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b1128f1bceccaa3da9ff91c3b6e39028ff39c15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "html_url": "https://github.com/rust-lang/rust/commit/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/comments", "author": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tabokie", "id": 27005812, "node_id": "MDQ6VXNlcjI3MDA1ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/27005812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tabokie", "html_url": "https://github.com/tabokie", "followers_url": "https://api.github.com/users/tabokie/followers", "following_url": "https://api.github.com/users/tabokie/following{/other_user}", "gists_url": "https://api.github.com/users/tabokie/gists{/gist_id}", "starred_url": "https://api.github.com/users/tabokie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tabokie/subscriptions", "organizations_url": "https://api.github.com/users/tabokie/orgs", "repos_url": "https://api.github.com/users/tabokie/repos", "events_url": "https://api.github.com/users/tabokie/events{/privacy}", "received_events_url": "https://api.github.com/users/tabokie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e00ceb99cdee70a30ba15ff490f3c249495c9c03", "url": "https://api.github.com/repos/rust-lang/rust/commits/e00ceb99cdee70a30ba15ff490f3c249495c9c03", "html_url": "https://github.com/rust-lang/rust/commit/e00ceb99cdee70a30ba15ff490f3c249495c9c03"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "6a6554f968b334e5ca3ce1802ff475440df66090", "filename": "clippy_lints/src/assertions_on_result_states.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_result_states.rs?ref=48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "patch": "@@ -53,13 +53,14 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                 if result_type_with_refs != result_type {\n                     return;\n                 } else if let Res::Local(binding_id) = path_res(cx, recv)\n-                    && local_used_after_expr(cx, binding_id, recv) {\n+                    && local_used_after_expr(cx, binding_id, recv)\n+                {\n                     return;\n                 }\n             }\n             let mut app = Applicability::MachineApplicable;\n             match method_segment.ident.as_str() {\n-                \"is_ok\" if has_debug_impl(cx, substs.type_at(1)) => {\n+                \"is_ok\" if type_suitable_to_unwrap(cx, substs.type_at(1)) => {\n                     span_lint_and_sugg(\n                         cx,\n                         ASSERTIONS_ON_RESULT_STATES,\n@@ -73,7 +74,7 @@ impl<'tcx> LateLintPass<'tcx> for AssertionsOnResultStates {\n                         app,\n                     );\n                 }\n-                \"is_err\" if has_debug_impl(cx, substs.type_at(0)) => {\n+                \"is_err\" if type_suitable_to_unwrap(cx, substs.type_at(0)) => {\n                     span_lint_and_sugg(\n                         cx,\n                         ASSERTIONS_ON_RESULT_STATES,\n@@ -99,3 +100,7 @@ fn has_debug_impl<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n         .get_diagnostic_item(sym::Debug)\n         .map_or(false, |debug| implements_trait(cx, ty, debug, &[]))\n }\n+\n+fn type_suitable_to_unwrap<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n+    has_debug_impl(cx, ty) && !ty.is_unit() && !ty.is_never()\n+}"}, {"sha": "795f435f24cd40b3e713959334ff266aaba3cc9f", "filename": "tests/ui/assertions_on_result_states.fixed", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.fixed?ref=48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "patch": "@@ -27,6 +27,14 @@ fn main() {\n     let r: Result<Foo, Foo> = Ok(Foo);\n     assert!(r.is_ok());\n \n+    // test ok with some messages\n+    let r: Result<Foo, DebugFoo> = Ok(Foo);\n+    assert!(r.is_ok(), \"oops\");\n+\n+    // test ok with unit error\n+    let r: Result<Foo, ()> = Ok(Foo);\n+    assert!(r.is_ok());\n+\n     // test temporary ok\n     fn get_ok() -> Result<Foo, DebugFoo> {\n         Ok(Foo)"}, {"sha": "1101aec1e1b34d5cfc29a591b1292ff6bc35d3f6", "filename": "tests/ui/assertions_on_result_states.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.rs?ref=48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "patch": "@@ -27,6 +27,14 @@ fn main() {\n     let r: Result<Foo, Foo> = Ok(Foo);\n     assert!(r.is_ok());\n \n+    // test ok with some messages\n+    let r: Result<Foo, DebugFoo> = Ok(Foo);\n+    assert!(r.is_ok(), \"oops\");\n+\n+    // test ok with unit error\n+    let r: Result<Foo, ()> = Ok(Foo);\n+    assert!(r.is_ok());\n+\n     // test temporary ok\n     fn get_ok() -> Result<Foo, DebugFoo> {\n         Ok(Foo)"}, {"sha": "97a5f3dfca4a65f93f8d49f1f326fea941531c04", "filename": "tests/ui/assertions_on_result_states.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14/tests%2Fui%2Fassertions_on_result_states.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassertions_on_result_states.stderr?ref=48ad9d8bc7d50fd5ebe90c1bbe760fcb8dc0dc14", "patch": "@@ -7,31 +7,31 @@ LL |     assert!(r.is_ok());\n    = note: `-D clippy::assertions-on-result-states` implied by `-D warnings`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:34:5\n+  --> $DIR/assertions_on_result_states.rs:42:5\n    |\n LL |     assert!(get_ok().is_ok());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `get_ok().unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:37:5\n+  --> $DIR/assertions_on_result_states.rs:45:5\n    |\n LL |     assert!(get_ok_macro!().is_ok());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with: `get_ok_macro!().unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:50:5\n+  --> $DIR/assertions_on_result_states.rs:58:5\n    |\n LL |     assert!(r.is_ok());\n    |     ^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap()`\n \n error: called `assert!` with `Result::is_ok`\n-  --> $DIR/assertions_on_result_states.rs:56:9\n+  --> $DIR/assertions_on_result_states.rs:64:9\n    |\n LL |         assert!(r.is_ok());\n    |         ^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap()`\n \n error: called `assert!` with `Result::is_err`\n-  --> $DIR/assertions_on_result_states.rs:64:5\n+  --> $DIR/assertions_on_result_states.rs:72:5\n    |\n LL |     assert!(r.is_err());\n    |     ^^^^^^^^^^^^^^^^^^^ help: replace with: `r.unwrap_err()`"}]}