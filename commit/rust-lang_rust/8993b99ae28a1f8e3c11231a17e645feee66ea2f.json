{"sha": "8993b99ae28a1f8e3c11231a17e645feee66ea2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5OTNiOTlhZTI4YTFmOGUzYzExMjMxYTE3ZTY0NWZlZWU2NmVhMmY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-18T09:35:18Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-02-28T19:37:58Z"}, "message": "On single local candidate, use span label", "tree": {"sha": "b29695fd034c3bfff70a8984d0a4c681a1513b0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b29695fd034c3bfff70a8984d0a4c681a1513b0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8993b99ae28a1f8e3c11231a17e645feee66ea2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8993b99ae28a1f8e3c11231a17e645feee66ea2f", "html_url": "https://github.com/rust-lang/rust/commit/8993b99ae28a1f8e3c11231a17e645feee66ea2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8993b99ae28a1f8e3c11231a17e645feee66ea2f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e8707f39d781df9cc40e81cd1ccdffcfbe5af1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e8707f39d781df9cc40e81cd1ccdffcfbe5af1f", "html_url": "https://github.com/rust-lang/rust/commit/5e8707f39d781df9cc40e81cd1ccdffcfbe5af1f"}], "stats": {"total": 154, "additions": 95, "deletions": 59}, "files": [{"sha": "3fa5d4baa76b4dbac37a686612fa1a4dd39d90d6", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -846,7 +846,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let message = |action| {\n                 format!(\n                     \"the following {traits_define} an item `{name}`, perhaps you need to {action} \\\n-                 {one_of_them}:\",\n+                     {one_of_them}:\",\n                     traits_define =\n                         if candidates.len() == 1 { \"trait defines\" } else { \"traits define\" },\n                     action = action,\n@@ -944,19 +944,32 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n \n             if !suggested {\n-                let mut msg = message(if let Some(param) = param_type {\n+                let action = if let Some(param) = param_type {\n                     format!(\"restrict type parameter `{}` with\", param)\n                 } else {\n                     \"implement\".to_string()\n-                });\n-                for (i, trait_info) in candidates.iter().enumerate() {\n-                    msg.push_str(&format!(\n-                        \"\\ncandidate #{}: `{}`\",\n-                        i + 1,\n-                        self.tcx.def_path_str(trait_info.def_id),\n-                    ));\n+                };\n+                let mut use_note = true;\n+                if let [trait_info] = &candidates[..] {\n+                    if let Some(span) = self.tcx.hir().span_if_local(trait_info.def_id) {\n+                        err.span_label(\n+                            self.tcx.sess.source_map().def_span(span),\n+                            &format!(\"this trait defines an item `{}`\", item_name),\n+                        );\n+                        use_note = false\n+                    }\n+                }\n+                if use_note {\n+                    let mut msg = message(action);\n+                    for (i, trait_info) in candidates.iter().enumerate() {\n+                        msg.push_str(&format!(\n+                            \"\\ncandidate #{}: `{}`\",\n+                            i + 1,\n+                            self.tcx.def_path_str(trait_info.def_id),\n+                        ));\n+                    }\n+                    err.note(&msg[..]);\n                 }\n-                err.note(&msg[..]);\n             }\n         }\n     }"}, {"sha": "e6765bc3dd65ed420243b55f951b8795e52969ba", "filename": "src/test/ui/associated-const/associated-const-no-item.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-no-item.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,12 +1,13 @@\n error[E0599]: no associated item named `ID` found for type `i32` in the current scope\n   --> $DIR/associated-const-no-item.rs:5:23\n    |\n+LL | trait Foo {\n+   | --------- this trait defines an item `ID`\n+...\n LL | const X: i32 = <i32>::ID;\n    |                       ^^ associated item not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `ID`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "3e14dc801221c90590202fe343a4ed41cdcca771", "filename": "src/test/ui/auto-ref-slice-plus-ref.stderr", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauto-ref-slice-plus-ref.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -3,40 +3,44 @@ error[E0599]: no method named `test_mut` found for struct `std::vec::Vec<{intege\n    |\n LL |     a.test_mut();\n    |       ^^^^^^^^ help: there is a method with a similar name: `get_mut`\n+...\n+LL | trait MyIter {\n+   | ------------ this trait defines an item `test_mut`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `test_mut`, perhaps you need to implement it:\n-           candidate #1: `MyIter`\n \n error[E0599]: no method named `test` found for struct `std::vec::Vec<{integer}>` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:8:7\n    |\n LL |     a.test();\n    |       ^^^^ method not found in `std::vec::Vec<{integer}>`\n+...\n+LL | trait MyIter {\n+   | ------------ this trait defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `test`, perhaps you need to implement it:\n-           candidate #1: `MyIter`\n \n error[E0599]: no method named `test` found for array `[{integer}; 1]` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:10:11\n    |\n LL |     ([1]).test();\n    |           ^^^^ method not found in `[{integer}; 1]`\n+...\n+LL | trait MyIter {\n+   | ------------ this trait defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `test`, perhaps you need to implement it:\n-           candidate #1: `MyIter`\n \n error[E0599]: no method named `test` found for reference `&[{integer}; 1]` in the current scope\n   --> $DIR/auto-ref-slice-plus-ref.rs:11:12\n    |\n LL |     (&[1]).test();\n    |            ^^^^ method not found in `&[{integer}; 1]`\n+...\n+LL | trait MyIter {\n+   | ------------ this trait defines an item `test`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `test`, perhaps you need to implement it:\n-           candidate #1: `MyIter`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "32a677a7d7fc1a2c43473b91fb04d55c0f4133c5", "filename": "src/test/ui/impl-trait/issues/issue-21659-show-relevant-trait-impls-3.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-21659-show-relevant-trait-impls-3.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,15 +1,16 @@\n error[E0599]: no method named `foo` found for struct `Bar` in the current scope\n   --> $DIR/issue-21659-show-relevant-trait-impls-3.rs:20:8\n    |\n+LL | trait Foo<A> {\n+   | ------------ this trait defines an item `foo`\n+...\n LL | struct Bar;\n    | ----------- method `foo` not found for this\n ...\n LL |     f1.foo(1usize);\n    |        ^^^ method not found in `Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `foo`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "8025c12047fefc2898134157aebd54c67578136f", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -122,62 +122,68 @@ LL |     std::rc::Rc::new(&mut Box::new(&Foo)).method();\n error[E0599]: no method named `method2` found for type `u64` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:45:10\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     1u64.method2();\n    |          ^^^^^^^ method not found in `u64`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&u64>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:47:44\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     std::rc::Rc::new(&mut Box::new(&1u64)).method2();\n    |                                            ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&u64>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method2` found for struct `no_method_suggested_traits::Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:50:37\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     no_method_suggested_traits::Foo.method2();\n    |                                     ^^^^^^^ method not found in `no_method_suggested_traits::Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:52:71\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Foo)).method2();\n    |                                                                       ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Foo>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method2` found for enum `no_method_suggested_traits::Bar` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:54:40\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     no_method_suggested_traits::Bar::X.method2();\n    |                                        ^^^^^^^ method not found in `no_method_suggested_traits::Bar`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method2` found for struct `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:56:74\n    |\n+LL |     pub trait Bar {\n+   |     ------------- this trait defines an item `method2`\n+...\n LL |     std::rc::Rc::new(&mut Box::new(&no_method_suggested_traits::Bar::X)).method2();\n    |                                                                          ^^^^^^^ method not found in `std::rc::Rc<&mut std::boxed::Box<&no_method_suggested_traits::Bar>>`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `method2`, perhaps you need to implement it:\n-           candidate #1: `foo::Bar`\n \n error[E0599]: no method named `method3` found for struct `Foo` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:59:9"}, {"sha": "730da21ddf5fef2233f54b063f30e9bf775963d5", "filename": "src/test/ui/issues/issue-5153.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5153.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,12 +1,13 @@\n error[E0599]: no method named `foo` found for reference `&dyn Foo` in the current scope\n   --> $DIR/issue-5153.rs:10:27\n    |\n+LL | trait Foo {\n+   | --------- this trait defines an item `foo`\n+...\n LL |     (&5isize as &dyn Foo).foo();\n    |                           ^^^ method not found in `&dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `foo`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "3a5189b132da2fefd8cdc03d86bc0129329f70e6", "filename": "src/test/ui/issues/issue-57362-1.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-1.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,13 +1,14 @@\n error[E0599]: no method named `f` found for fn pointer `fn(&u8)` in the current scope\n   --> $DIR/issue-57362-1.rs:20:7\n    |\n+LL | trait Trait {\n+   | ----------- this trait defines an item `f`\n+...\n LL |     a.f();\n    |       ^ method not found in `fn(&u8)`\n    |\n    = note: `a` is a function, perhaps you wish to call it\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `f`, perhaps you need to implement it:\n-           candidate #1: `Trait`\n \n error: aborting due to previous error\n "}, {"sha": "e2d80b3b4df739c041e94614b31c691f5f264540", "filename": "src/test/ui/issues/issue-57362-2.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57362-2.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,12 +1,13 @@\n error[E0599]: no function or associated item named `make_g` found for fn pointer `for<'r> fn(&'r ())` in the current scope\n   --> $DIR/issue-57362-2.rs:22:25\n    |\n+LL | trait X {\n+   | ------- this trait defines an item `make_g`\n+...\n LL |     let x = <fn (&())>::make_g();\n    |                         ^^^^^^ function or associated item not found in `for<'r> fn(&'r ())`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `make_g`, perhaps you need to implement it:\n-           candidate #1: `X`\n \n error: aborting due to previous error\n "}, {"sha": "4fadf49bd6d28465a81282130e7dac7c87aff8b8", "filename": "src/test/ui/never_type/issue-2149.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fissue-2149.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -9,12 +9,13 @@ LL |         for elt in self { r = r + f(*elt); }\n error[E0599]: no method named `bind` found for array `[&str; 1]` in the current scope\n   --> $DIR/issue-2149.rs:13:12\n    |\n+LL | trait VecMonad<A> {\n+   | ----------------- this trait defines an item `bind`\n+...\n LL |     [\"hi\"].bind(|x| [x] );\n    |            ^^^^ method not found in `[&str; 1]`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `bind`, perhaps you need to implement it:\n-           candidate #1: `VecMonad`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5ca326bca31c5bdbcf92665e12e4c5e21d2e1b12", "filename": "src/test/ui/object-pointer-types.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fobject-pointer-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-pointer-types.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,22 +1,24 @@\n error[E0599]: no method named `owned` found for reference `&dyn Foo` in the current scope\n   --> $DIR/object-pointer-types.rs:11:7\n    |\n+LL | trait Foo {\n+   | --------- this trait defines an item `owned`\n+...\n LL |     x.owned();\n    |       ^^^^^ method not found in `&dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `owned`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error[E0599]: no method named `owned` found for mutable reference `&mut dyn Foo` in the current scope\n   --> $DIR/object-pointer-types.rs:17:7\n    |\n+LL | trait Foo {\n+   | --------- this trait defines an item `owned`\n+...\n LL |     x.owned();\n    |       ^^^^^ method not found in `&mut dyn Foo`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `owned`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error[E0599]: no method named `managed` found for struct `std::boxed::Box<(dyn Foo + 'static)>` in the current scope\n   --> $DIR/object-pointer-types.rs:23:7"}, {"sha": "8ed2b8b5c95211a0dd61403d3e220e3dbe21f424", "filename": "src/test/ui/self/point-at-arbitrary-self-type-trait-method.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fpoint-at-arbitrary-self-type-trait-method.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -2,16 +2,16 @@ error[E0599]: no method named `foo` found for struct `A` in the current scope\n   --> $DIR/point-at-arbitrary-self-type-trait-method.rs:9:7\n    |\n LL | trait B { fn foo(self: Box<Self>); }\n-   |              --- the method is available for `std::boxed::Box<A>` here\n+   | -------      --- the method is available for `std::boxed::Box<A>` here\n+   | |\n+   | this trait defines an item `foo`\n LL | struct A;\n    | --------- method `foo` not found for this\n ...\n LL |     A.foo()\n    |       ^^^ method not found in `A`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `foo`, perhaps you need to implement it:\n-           candidate #1: `B`\n \n error: aborting due to previous error\n "}, {"sha": "ccbb2aae05d1ba2701c71cbdd7da7939aa3771e5", "filename": "src/test/ui/specialization/defaultimpl/specialization-trait-not-implemented.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-trait-not-implemented.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -1,6 +1,9 @@\n error[E0599]: no method named `foo_one` found for struct `MyStruct` in the current scope\n   --> $DIR/specialization-trait-not-implemented.rs:22:29\n    |\n+LL | trait Foo {\n+   | --------- this trait defines an item `foo_one`\n+...\n LL | struct MyStruct;\n    | ----------------\n    | |\n@@ -13,8 +16,6 @@ LL |     println!(\"{}\", MyStruct.foo_one());\n    = note: the method `foo_one` exists but the following trait bounds were not satisfied:\n            `MyStruct: Foo`\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `foo_one`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error: aborting due to previous error\n "}, {"sha": "5b7f0a8ce5ff15a2f574d1f3044ab3081b4d20e0", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -4,12 +4,13 @@ error[E0599]: no method named `a` found for struct `S` in the current scope\n LL | struct S;\n    | --------- method `a` not found for this\n ...\n+LL |     trait A {\n+   |     ------- this trait defines an item `a`\n+...\n LL |     S.a();\n    |       ^ method not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `a`, perhaps you need to implement it:\n-           candidate #1: `method::A`\n \n error[E0599]: no method named `b` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:68:7\n@@ -45,12 +46,13 @@ error[E0599]: no function or associated item named `a` found for struct `S` in t\n LL | struct S;\n    | --------- function or associated item `a` not found for this\n ...\n+LL |     trait A {\n+   |     ------- this trait defines an item `a`\n+...\n LL |     S::a(&S);\n    |        ^ function or associated item not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `a`, perhaps you need to implement it:\n-           candidate #1: `method::A`\n \n error[E0599]: no function or associated item named `b` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:80:8\n@@ -79,12 +81,13 @@ error[E0599]: no associated item named `A` found for struct `S` in the current s\n LL | struct S;\n    | --------- associated item `A` not found for this\n ...\n+LL |     trait A {\n+   |     ------- this trait defines an item `A`\n+...\n LL |     S::A;\n    |        ^ associated item not found in `S`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `A`, perhaps you need to implement it:\n-           candidate #1: `assoc_const::A`\n \n error[E0599]: no associated item named `B` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:98:8"}, {"sha": "7ed24591e66abf3c6f24505038264a76c68a1617", "filename": "src/test/ui/trivial-bounds/trivial-bounds-leak.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8993b99ae28a1f8e3c11231a17e645feee66ea2f/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrivial-bounds%2Ftrivial-bounds-leak.stderr?ref=8993b99ae28a1f8e3c11231a17e645feee66ea2f", "patch": "@@ -11,12 +11,13 @@ LL | fn cant_return_str() -> str {\n error[E0599]: no method named `test` found for type `i32` in the current scope\n   --> $DIR/trivial-bounds-leak.rs:24:10\n    |\n+LL | pub trait Foo {\n+   | ------------- this trait defines an item `test`\n+...\n LL |     3i32.test();\n    |          ^^^^ method not found in `i32`\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n-   = note: the following trait defines an item `test`, perhaps you need to implement it:\n-           candidate #1: `Foo`\n \n error[E0277]: the trait bound `i32: Foo` is not satisfied\n   --> $DIR/trivial-bounds-leak.rs:25:15"}]}