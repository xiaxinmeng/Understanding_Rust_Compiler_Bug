{"sha": "3e4396b8b5f8a494272ea520e528c22da1ae0888", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNDM5NmI4YjVmOGE0OTQyNzJlYTUyMGU1MjhjMjJkYTFhZTA4ODg=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-06T21:08:12Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2020-04-06T21:08:12Z"}, "message": "Use integer assoc consts in libcore", "tree": {"sha": "44f59a3e1390d27afce0a91d59b70e73a78ab396", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44f59a3e1390d27afce0a91d59b70e73a78ab396"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e4396b8b5f8a494272ea520e528c22da1ae0888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e4396b8b5f8a494272ea520e528c22da1ae0888", "html_url": "https://github.com/rust-lang/rust/commit/3e4396b8b5f8a494272ea520e528c22da1ae0888", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e4396b8b5f8a494272ea520e528c22da1ae0888/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4fc04b6df93785e935ec776705803e6b50e2c23", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4fc04b6df93785e935ec776705803e6b50e2c23", "html_url": "https://github.com/rust-lang/rust/commit/e4fc04b6df93785e935ec776705803e6b50e2c23"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9b9420cc13f85fc35623863030252519c126d466", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e4396b8b5f8a494272ea520e528c22da1ae0888/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e4396b8b5f8a494272ea520e528c22da1ae0888/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=3e4396b8b5f8a494272ea520e528c22da1ae0888", "patch": "@@ -1108,14 +1108,14 @@ mod slice_index {\n \n             // note: using 0 specifically ensures that the result of overflowing is 0..0,\n             //       so that `get` doesn't simply return None for the wrong reason.\n-            bad: data[0 ..= ::std::usize::MAX];\n+            bad: data[0 ..= usize::MAX];\n             message: \"maximum usize\";\n         }\n \n         in mod rangetoinclusive_overflow {\n             data: [0, 1];\n \n-            bad: data[..= ::std::usize::MAX];\n+            bad: data[..= usize::MAX];\n             message: \"maximum usize\";\n         }\n     } // panic_cases!"}, {"sha": "7a6675dc82fa6ef70e9f526c206c100cb95f9ee4", "filename": "src/libcore/tests/time.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e4396b8b5f8a494272ea520e528c22da1ae0888/src%2Flibcore%2Ftests%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e4396b8b5f8a494272ea520e528c22da1ae0888/src%2Flibcore%2Ftests%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Ftime.rs?ref=3e4396b8b5f8a494272ea520e528c22da1ae0888", "patch": "@@ -14,7 +14,7 @@ fn creation() {\n #[test]\n #[should_panic]\n fn new_overflow() {\n-    let _ = Duration::new(::core::u64::MAX, 1_000_000_000);\n+    let _ = Duration::new(u64::MAX, 1_000_000_000);\n }\n \n #[test]\n@@ -86,7 +86,7 @@ fn checked_add() {\n         Duration::new(0, 500_000_000).checked_add(Duration::new(0, 500_000_001)),\n         Some(Duration::new(1, 1))\n     );\n-    assert_eq!(Duration::new(1, 0).checked_add(Duration::new(::core::u64::MAX, 0)), None);\n+    assert_eq!(Duration::new(1, 0).checked_add(Duration::new(u64::MAX, 0)), None);\n }\n \n #[test]\n@@ -133,7 +133,7 @@ fn checked_mul() {\n     assert_eq!(Duration::new(1, 1).checked_mul(3), Some(Duration::new(3, 3)));\n     assert_eq!(Duration::new(0, 500_000_001).checked_mul(4), Some(Duration::new(2, 4)));\n     assert_eq!(Duration::new(0, 500_000_001).checked_mul(4000), Some(Duration::new(2000, 4000)));\n-    assert_eq!(Duration::new(::core::u64::MAX - 1, 0).checked_mul(2), None);\n+    assert_eq!(Duration::new(u64::MAX - 1, 0).checked_mul(2), None);\n }\n \n #[test]"}]}