{"sha": "2b7514154d2d205571bdb7ce81a8d485cedce3bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNzUxNDE1NGQyZDIwNTU3MWJkYjdjZTgxYThkNDg1Y2VkY2UzYmM=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-09-20T16:20:49Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2019-09-23T07:17:18Z"}, "message": "Fix let_and_return lint", "tree": {"sha": "c71f25bdf3f5adbefb93961e553a7ffca77e56fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c71f25bdf3f5adbefb93961e553a7ffca77e56fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b7514154d2d205571bdb7ce81a8d485cedce3bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7514154d2d205571bdb7ce81a8d485cedce3bc", "html_url": "https://github.com/rust-lang/rust/commit/2b7514154d2d205571bdb7ce81a8d485cedce3bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b7514154d2d205571bdb7ce81a8d485cedce3bc/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23b3755f3ca202d44d696a74dd710c93d4aafb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c23b3755f3ca202d44d696a74dd710c93d4aafb8", "html_url": "https://github.com/rust-lang/rust/commit/c23b3755f3ca202d44d696a74dd710c93d4aafb8"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "116ea8c899bc23ded861dd279ce6122c22f7ad7d", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b7514154d2d205571bdb7ce81a8d485cedce3bc/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b7514154d2d205571bdb7ce81a8d485cedce3bc/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=2b7514154d2d205571bdb7ce81a8d485cedce3bc", "patch": "@@ -208,6 +208,8 @@ impl Return {\n             if let ast::ExprKind::Path(_, ref path) = retexpr.node;\n             if match_path_ast(path, &[&*ident.name.as_str()]);\n             if !in_external_macro(cx.sess(), initexpr.span);\n+            if !in_external_macro(cx.sess(), retexpr.span);\n+            if !in_external_macro(cx.sess(), local.span);\n             then {\n                 span_lint_and_then(\n                     cx,"}]}