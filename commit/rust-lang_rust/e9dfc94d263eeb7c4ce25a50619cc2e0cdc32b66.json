{"sha": "e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZGZjOTRkMjYzZWViN2M0Y2UyNWE1MDYxOWNjMmUwY2RjMzJiNjY=", "commit": {"author": {"name": "Guillaume Bonnet", "email": "guillaumebonnet10@gmail.com", "date": "2016-02-03T15:08:18Z"}, "committer": {"name": "Guillaume Bonnet", "email": "guillaumebonnet10@gmail.com", "date": "2016-02-03T15:17:32Z"}, "message": "compiler-rt: Handle -Werror=* arguments in CFLAGS", "tree": {"sha": "d9d88e5a264e40dec20c3e09f952e97bfb4ab686", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9d88e5a264e40dec20c3e09f952e97bfb4ab686"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66", "html_url": "https://github.com/rust-lang/rust/commit/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66/comments", "author": {"login": "gbonnet1", "id": 47096498, "node_id": "MDQ6VXNlcjQ3MDk2NDk4", "avatar_url": "https://avatars.githubusercontent.com/u/47096498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbonnet1", "html_url": "https://github.com/gbonnet1", "followers_url": "https://api.github.com/users/gbonnet1/followers", "following_url": "https://api.github.com/users/gbonnet1/following{/other_user}", "gists_url": "https://api.github.com/users/gbonnet1/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbonnet1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbonnet1/subscriptions", "organizations_url": "https://api.github.com/users/gbonnet1/orgs", "repos_url": "https://api.github.com/users/gbonnet1/repos", "events_url": "https://api.github.com/users/gbonnet1/events{/privacy}", "received_events_url": "https://api.github.com/users/gbonnet1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gbonnet1", "id": 47096498, "node_id": "MDQ6VXNlcjQ3MDk2NDk4", "avatar_url": "https://avatars.githubusercontent.com/u/47096498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gbonnet1", "html_url": "https://github.com/gbonnet1", "followers_url": "https://api.github.com/users/gbonnet1/followers", "following_url": "https://api.github.com/users/gbonnet1/following{/other_user}", "gists_url": "https://api.github.com/users/gbonnet1/gists{/gist_id}", "starred_url": "https://api.github.com/users/gbonnet1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gbonnet1/subscriptions", "organizations_url": "https://api.github.com/users/gbonnet1/orgs", "repos_url": "https://api.github.com/users/gbonnet1/repos", "events_url": "https://api.github.com/users/gbonnet1/events{/privacy}", "received_events_url": "https://api.github.com/users/gbonnet1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db6f888e7830b0b91a03b2cf141ba0511adaca5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/db6f888e7830b0b91a03b2cf141ba0511adaca5b", "html_url": "https://github.com/rust-lang/rust/commit/db6f888e7830b0b91a03b2cf141ba0511adaca5b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "14b8abb12b8fcff752ffad03ffcf5a53793e9514", "filename": "mk/rt.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=e9dfc94d263eeb7c4ce25a50619cc2e0cdc32b66", "patch": "@@ -245,7 +245,7 @@ COMPRT_AR_$(1) := $$(AR_$(1))\n # We chomp -Werror here because GCC warns about the type signature of\n # builtins not matching its own and the build fails. It's a bit hacky,\n # but what can we do, we're building libclang-rt using GCC ......\n-COMPRT_CFLAGS_$(1) := $$(subst -Werror,,$$(CFG_GCCISH_CFLAGS_$(1))) -std=c99\n+COMPRT_CFLAGS_$(1) := $$(filter-out -Werror -Werror=*,$$(CFG_GCCISH_CFLAGS_$(1))) -std=c99\n \n # FreeBSD Clang's packaging is problematic; it doesn't copy unwind.h to\n # the standard include directory. This should really be in our changes to"}]}