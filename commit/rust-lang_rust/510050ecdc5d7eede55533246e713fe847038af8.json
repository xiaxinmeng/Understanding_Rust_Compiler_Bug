{"sha": "510050ecdc5d7eede55533246e713fe847038af8", "node_id": "C_kwDOAAsO6NoAKDUxMDA1MGVjZGM1ZDdlZWRlNTU1MzMyNDZlNzEzZmU4NDcwMzhhZjg", "commit": {"author": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:09:34Z"}, "committer": {"name": "Ariel Davis", "email": "ariel.z.davis@icloud.com", "date": "2023-05-06T22:09:34Z"}, "message": "Add more types", "tree": {"sha": "ccbd13029515363f69ebf9ea9981806a9f47506b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccbd13029515363f69ebf9ea9981806a9f47506b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/510050ecdc5d7eede55533246e713fe847038af8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/510050ecdc5d7eede55533246e713fe847038af8", "html_url": "https://github.com/rust-lang/rust/commit/510050ecdc5d7eede55533246e713fe847038af8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/510050ecdc5d7eede55533246e713fe847038af8/comments", "author": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azdavis", "id": 6496454, "node_id": "MDQ6VXNlcjY0OTY0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6496454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azdavis", "html_url": "https://github.com/azdavis", "followers_url": "https://api.github.com/users/azdavis/followers", "following_url": "https://api.github.com/users/azdavis/following{/other_user}", "gists_url": "https://api.github.com/users/azdavis/gists{/gist_id}", "starred_url": "https://api.github.com/users/azdavis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azdavis/subscriptions", "organizations_url": "https://api.github.com/users/azdavis/orgs", "repos_url": "https://api.github.com/users/azdavis/repos", "events_url": "https://api.github.com/users/azdavis/events{/privacy}", "received_events_url": "https://api.github.com/users/azdavis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a7f90cf28445b6f3d3545c51ae312f003e19064", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7f90cf28445b6f3d3545c51ae312f003e19064", "html_url": "https://github.com/rust-lang/rust/commit/7a7f90cf28445b6f3d3545c51ae312f003e19064"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "370bbf68f38b3fb404910e4c3319a5fb138cc1c2", "filename": "lib/line-index/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/510050ecdc5d7eede55533246e713fe847038af8/lib%2Fline-index%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/510050ecdc5d7eede55533246e713fe847038af8/lib%2Fline-index%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Fline-index%2Fsrc%2Flib.rs?ref=510050ecdc5d7eede55533246e713fe847038af8", "patch": "@@ -94,13 +94,13 @@ pub struct LineIndex {\n impl LineIndex {\n     /// Returns a `LineIndex` for the `text`.\n     pub fn new(text: &str) -> LineIndex {\n-        let mut newlines = Vec::with_capacity(16);\n-        let mut line_wide_chars = IntMap::default();\n+        let mut newlines = Vec::<TextSize>::with_capacity(16);\n+        let mut line_wide_chars = IntMap::<u32, Box<[WideChar]>>::default();\n \n-        let mut wide_chars = Vec::new();\n+        let mut wide_chars = Vec::<WideChar>::new();\n         let mut cur_row = TextSize::from(0);\n         let mut cur_col = TextSize::from(0);\n-        let mut line = 0;\n+        let mut line = 0u32;\n \n         for c in text.chars() {\n             let c_len = TextSize::of(c);"}]}