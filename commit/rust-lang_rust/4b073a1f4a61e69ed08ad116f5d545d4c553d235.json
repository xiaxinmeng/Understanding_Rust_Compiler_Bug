{"sha": "4b073a1f4a61e69ed08ad116f5d545d4c553d235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMDczYTFmNGE2MWU2OWVkMDhhZDExNmY1ZDU0NWQ0YzU1M2QyMzU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-08T10:28:57Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T18:20:41Z"}, "message": "extract parse_generic_lt_bound", "tree": {"sha": "04892b3c4fc91c2b63694f4d7a1cefd021624860", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04892b3c4fc91c2b63694f4d7a1cefd021624860"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b073a1f4a61e69ed08ad116f5d545d4c553d235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b073a1f4a61e69ed08ad116f5d545d4c553d235", "html_url": "https://github.com/rust-lang/rust/commit/4b073a1f4a61e69ed08ad116f5d545d4c553d235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b073a1f4a61e69ed08ad116f5d545d4c553d235/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e00c73ee7efee610fa1dfca85155f3ce81b91e", "url": "https://api.github.com/repos/rust-lang/rust/commits/50e00c73ee7efee610fa1dfca85155f3ce81b91e", "html_url": "https://github.com/rust-lang/rust/commit/50e00c73ee7efee610fa1dfca85155f3ce81b91e"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "905bc204b5156ccebd94edf31c5f9983d0e0293d", "filename": "src/librustc_parse/parser/ty.rs", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/4b073a1f4a61e69ed08ad116f5d545d4c553d235/src%2Flibrustc_parse%2Fparser%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b073a1f4a61e69ed08ad116f5d545d4c553d235/src%2Flibrustc_parse%2Fparser%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fty.rs?ref=4b073a1f4a61e69ed08ad116f5d545d4c553d235", "patch": "@@ -427,10 +427,8 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Parses a bound according to the grammar:\n-    ///\n     /// ```\n     /// BOUND = TY_BOUND | LT_BOUND\n-    /// LT_BOUND = LIFETIME (e.g., `'a`)\n     /// ```\n     fn parse_generic_bound(\n         &mut self,\n@@ -443,14 +441,7 @@ impl<'a> Parser<'a> {\n         let is_negative = self.eat(&token::Not);\n         let question = if self.eat(&token::Question) { Some(self.prev_span) } else { None };\n         if self.token.is_lifetime() {\n-            self.error_opt_out_lifetime(question);\n-            let bound = GenericBound::Outlives(self.expect_lifetime());\n-            if has_parens {\n-                // FIXME(Centril): Consider not erroring here and accepting `('lt)` instead,\n-                // possibly introducing `GenericBound::Paren(P<GenericBound>)`?\n-                self.recover_paren_lifetime(lo, inner_lo)?;\n-            }\n-            Ok(Ok(bound))\n+            Ok(Ok(self.parse_generic_lt_bound(lo, inner_lo, has_parens, question)?))\n         } else {\n             let (poly_span, bound) = self.parse_generic_ty_bound(lo, has_parens, question)?;\n             if is_negative {\n@@ -461,6 +452,27 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    /// Parses a lifetime (\"outlives\") bound, e.g. `'a`, according to:\n+    /// ```\n+    /// LT_BOUND = LIFETIME\n+    /// ```\n+    fn parse_generic_lt_bound(\n+        &mut self,\n+        lo: Span,\n+        inner_lo: Span,\n+        has_parens: bool,\n+        question: Option<Span>,\n+    ) -> PResult<'a, GenericBound> {\n+        self.error_opt_out_lifetime(question);\n+        let bound = GenericBound::Outlives(self.expect_lifetime());\n+        if has_parens {\n+            // FIXME(Centril): Consider not erroring here and accepting `('lt)` instead,\n+            // possibly introducing `GenericBound::Paren(P<GenericBound>)`?\n+            self.recover_paren_lifetime(lo, inner_lo)?;\n+        }\n+        Ok(bound)\n+    }\n+\n     fn error_opt_out_lifetime(&self, question: Option<Span>) {\n         if let Some(span) = question {\n             self.struct_span_err(span, \"`?` may only modify trait bounds, not lifetime bounds\")"}]}