{"sha": "9526c198f6b38438f2eae37b23a7426dff5e4341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1MjZjMTk4ZjZiMzg0MzhmMmVhZTM3YjIzYTc0MjZkZmY1ZTQzNDE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T13:47:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T13:53:53Z"}, "message": "intenral: dont export impl details", "tree": {"sha": "4adc9ddc9e94fa2430c4ef98594a15e578eb5147", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4adc9ddc9e94fa2430c4ef98594a15e578eb5147"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9526c198f6b38438f2eae37b23a7426dff5e4341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9526c198f6b38438f2eae37b23a7426dff5e4341", "html_url": "https://github.com/rust-lang/rust/commit/9526c198f6b38438f2eae37b23a7426dff5e4341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9526c198f6b38438f2eae37b23a7426dff5e4341/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ede497778e1d819b95cfb63255b88936bc25206", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ede497778e1d819b95cfb63255b88936bc25206", "html_url": "https://github.com/rust-lang/rust/commit/5ede497778e1d819b95cfb63255b88936bc25206"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "9c56fe1a61f1eb47c4700bbfab6c365166404bfe", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9526c198f6b38438f2eae37b23a7426dff5e4341/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9526c198f6b38438f2eae37b23a7426dff5e4341/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=9526c198f6b38438f2eae37b23a7426dff5e4341", "patch": "@@ -51,7 +51,7 @@ use hir_def::{\n     LocalEnumVariantId, LocalFieldId, Lookup, ModuleId, StaticId, StructId, TraitId, TypeAliasId,\n     TypeParamId, UnionId,\n };\n-use hir_expand::{name::name, MacroCallKind, MacroDefKind};\n+use hir_expand::{name::name, MacroCallKind, MacroDefId, MacroDefKind};\n use hir_ty::{\n     autoderef,\n     consteval::ConstExt,\n@@ -106,19 +106,17 @@ pub use {\n     hir_def::{\n         adt::StructKind,\n         attr::{Attr, Attrs, AttrsWithOwner, Documentation},\n-        body::scope::ExprScopes,\n         find_path::PrefixKind,\n         import_map,\n-        item_scope::ItemInNs,\n+        item_scope::ItemInNs, // FIXME: don't re-export ItemInNs, as it uses raw ids.\n         nameres::ModuleSource,\n         path::{ModPath, PathKind},\n         type_ref::{Mutability, TypeRef},\n         visibility::Visibility,\n     },\n     hir_expand::{\n         name::{known, Name},\n-        ExpandResult, HirFileId, InFile, MacroCallId, MacroCallLoc, /* FIXME */ MacroDefId,\n-        MacroFile, Origin,\n+        ExpandResult, HirFileId, InFile, MacroFile, Origin,\n     },\n     hir_ty::display::HirDisplay,\n };"}, {"sha": "12e5d65faafc653099653d9e40db774b37459244", "filename": "crates/hir/src/semantics/source_to_def.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9526c198f6b38438f2eae37b23a7426dff5e4341/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9526c198f6b38438f2eae37b23a7426dff5e4341/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics%2Fsource_to_def.rs?ref=9526c198f6b38438f2eae37b23a7426dff5e4341", "patch": "@@ -95,7 +95,7 @@ use hir_def::{\n     ImplId, LifetimeParamId, ModuleId, StaticId, StructId, TraitId, TypeAliasId, TypeParamId,\n     UnionId, VariantId,\n };\n-use hir_expand::{name::AsName, AstId, MacroCallId, MacroDefKind};\n+use hir_expand::{name::AsName, AstId, MacroCallId, MacroDefId, MacroDefKind};\n use rustc_hash::FxHashMap;\n use smallvec::SmallVec;\n use stdx::impl_from;\n@@ -104,7 +104,7 @@ use syntax::{\n     match_ast, AstNode, SyntaxNode,\n };\n \n-use crate::{db::HirDatabase, InFile, MacroDefId};\n+use crate::{db::HirDatabase, InFile};\n \n pub(super) type SourceToDefCache = FxHashMap<ChildContainer, DynMap>;\n "}]}