{"sha": "d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "node_id": "C_kwDOAAsO6NoAKGQzYTUwZDJmZGE0ZmQxYTAyNGRmZTdiMDFhYjY5ZmI1YTBhNmI3YTc", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2023-01-03T23:44:20Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2023-01-03T23:44:20Z"}, "message": "trim paths in `box_default`", "tree": {"sha": "4781341094eaeb969265df3c09f56b9c30b11112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4781341094eaeb969265df3c09f56b9c30b11112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "html_url": "https://github.com/rust-lang/rust/commit/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bca8dd2547fcc46796b53d338c0734575e51c72", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bca8dd2547fcc46796b53d338c0734575e51c72", "html_url": "https://github.com/rust-lang/rust/commit/0bca8dd2547fcc46796b53d338c0734575e51c72"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "9d98a6bab71073efed82eefdc75a6fa33d091e9b", "filename": "clippy_lints/src/box_default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/clippy_lints%2Fsrc%2Fbox_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/clippy_lints%2Fsrc%2Fbox_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbox_default.rs?ref=d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "patch": "@@ -8,7 +8,7 @@ use rustc_hir::{\n     Block, Expr, ExprKind, Local, Node, QPath, TyKind,\n };\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n-use rustc_middle::lint::in_external_macro;\n+use rustc_middle::{lint::in_external_macro, ty::print::with_forced_trimmed_paths};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n@@ -59,7 +59,7 @@ impl LateLintPass<'_> for BoxDefault {\n                 if is_plain_default(arg_path) || given_type(cx, expr) {\n                     \"Box::default()\".into()\n                 } else {\n-                    format!(\"Box::<{arg_ty}>::default()\")\n+                    with_forced_trimmed_paths!(format!(\"Box::<{arg_ty}>::default()\"))\n                 },\n                 Applicability::MachineApplicable\n             );"}, {"sha": "68ab996a704928c83c7e75c5c622dfd141d63524", "filename": "tests/ui/box_default.fixed", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/tests%2Fui%2Fbox_default.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/tests%2Fui%2Fbox_default.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_default.fixed?ref=d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "patch": "@@ -21,16 +21,16 @@ macro_rules! outer {\n fn main() {\n     let _string: Box<String> = Box::default();\n     let _byte = Box::<u8>::default();\n-    let _vec = Box::<std::vec::Vec<u8>>::default();\n+    let _vec = Box::<Vec<u8>>::default();\n     let _impl = Box::<ImplementsDefault>::default();\n     let _impl2 = Box::<ImplementsDefault>::default();\n     let _impl3: Box<ImplementsDefault> = Box::default();\n     let _own = Box::new(OwnDefault::default()); // should not lint\n-    let _in_macro = outer!(Box::<std::string::String>::default());\n-    let _string_default = outer!(Box::<std::string::String>::default());\n+    let _in_macro = outer!(Box::<String>::default());\n+    let _string_default = outer!(Box::<String>::default());\n     let _vec2: Box<Vec<ImplementsDefault>> = Box::default();\n     let _vec3: Box<Vec<bool>> = Box::default();\n-    let _vec4: Box<_> = Box::<std::vec::Vec<bool>>::default();\n+    let _vec4: Box<_> = Box::<Vec<bool>>::default();\n     let _more = ret_ty_fn();\n     call_ty_fn(Box::default());\n }"}, {"sha": "f77c97cdfa269e8858e47f1126c287cde6b3e865", "filename": "tests/ui/box_default.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/tests%2Fui%2Fbox_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7/tests%2Fui%2Fbox_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbox_default.stderr?ref=d3a50d2fda4fd1a024dfe7b01ab69fb5a0a6b7a7", "patch": "@@ -16,7 +16,7 @@ error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:24:16\n    |\n LL |     let _vec = Box::new(Vec::<u8>::new());\n-   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<std::vec::Vec<u8>>::default()`\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<Vec<u8>>::default()`\n \n error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:25:17\n@@ -40,13 +40,13 @@ error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:29:28\n    |\n LL |     let _in_macro = outer!(Box::new(String::new()));\n-   |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<std::string::String>::default()`\n+   |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<String>::default()`\n \n error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:30:34\n    |\n LL |     let _string_default = outer!(Box::new(String::from(\"\")));\n-   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<std::string::String>::default()`\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<String>::default()`\n \n error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:31:46\n@@ -64,7 +64,7 @@ error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:33:25\n    |\n LL |     let _vec4: Box<_> = Box::new(Vec::from([false; 0]));\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<std::vec::Vec<bool>>::default()`\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::<Vec<bool>>::default()`\n \n error: `Box::new(_)` of default value\n   --> $DIR/box_default.rs:35:16"}]}