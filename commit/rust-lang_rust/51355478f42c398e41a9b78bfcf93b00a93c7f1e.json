{"sha": "51355478f42c398e41a9b78bfcf93b00a93c7f1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMzU1NDc4ZjQyYzM5OGU0MWE5Yjc4YmZjZjkzYjAwYTkzYzdmMWU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T14:55:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-25T14:55:25Z"}, "message": "rustdoc: Add a --target flag\n\nCloses #13893", "tree": {"sha": "0a5bfcaac243b800cf79463ee8cfcd4018eb9173", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a5bfcaac243b800cf79463ee8cfcd4018eb9173"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51355478f42c398e41a9b78bfcf93b00a93c7f1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51355478f42c398e41a9b78bfcf93b00a93c7f1e", "html_url": "https://github.com/rust-lang/rust/commit/51355478f42c398e41a9b78bfcf93b00a93c7f1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51355478f42c398e41a9b78bfcf93b00a93c7f1e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44019c79e0c7bd08d6136cd609eef619c97f45eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/44019c79e0c7bd08d6136cd609eef619c97f45eb", "html_url": "https://github.com/rust-lang/rust/commit/44019c79e0c7bd08d6136cd609eef619c97f45eb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "032189dca4877323f6c6a9d6c79982192e3a1eec", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/51355478f42c398e41a9b78bfcf93b00a93c7f1e/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51355478f42c398e41a9b78bfcf93b00a93c7f1e/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=51355478f42c398e41a9b78bfcf93b00a93c7f1e", "patch": "@@ -80,7 +80,8 @@ pub struct CrateAnalysis {\n pub type Externs = HashMap<String, Vec<String>>;\n \n /// Parses, resolves, and typechecks the given crate\n-fn get_ast_and_resolve(cpath: &Path, libs: HashSet<Path>, cfgs: Vec<String>, externs: Externs)\n+fn get_ast_and_resolve(cpath: &Path, libs: HashSet<Path>, cfgs: Vec<String>,\n+                       externs: Externs, triple: Option<String>)\n                        -> (DocContext, CrateAnalysis) {\n     use syntax::codemap::dummy_spanned;\n     use rustc::driver::driver::{FileInput,\n@@ -99,6 +100,7 @@ fn get_ast_and_resolve(cpath: &Path, libs: HashSet<Path>, cfgs: Vec<String>, ext\n         crate_types: vec!(driver::config::CrateTypeRlib),\n         lint_opts: vec!((warning_lint, lint::Allow)),\n         externs: externs,\n+        target_triple: triple.unwrap_or(driver::driver::host_triple().to_string()),\n         ..rustc::driver::config::basic_options().clone()\n     };\n \n@@ -151,9 +153,10 @@ fn get_ast_and_resolve(cpath: &Path, libs: HashSet<Path>, cfgs: Vec<String>, ext\n     })\n }\n \n-pub fn run_core(libs: HashSet<Path>, cfgs: Vec<String>, externs: Externs, path: &Path)\n+pub fn run_core(libs: HashSet<Path>, cfgs: Vec<String>, externs: Externs,\n+                path: &Path, triple: Option<String>)\n                 -> (clean::Crate, CrateAnalysis) {\n-    let (ctxt, analysis) = get_ast_and_resolve(path, libs, cfgs, externs);\n+    let (ctxt, analysis) = get_ast_and_resolve(path, libs, cfgs, externs, triple);\n     let ctxt = box(GC) ctxt;\n     super::ctxtkey.replace(Some(ctxt));\n "}, {"sha": "a89b76572875efba87edec77401683653a17b175", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/51355478f42c398e41a9b78bfcf93b00a93c7f1e/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51355478f42c398e41a9b78bfcf93b00a93c7f1e/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=51355478f42c398e41a9b78bfcf93b00a93c7f1e", "patch": "@@ -117,6 +117,7 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n         optflag(\"\", \"test\", \"run code examples as tests\"),\n         optmulti(\"\", \"test-args\", \"arguments to pass to the test runner\",\n                  \"ARGS\"),\n+        optopt(\"\", \"target\", \"target triple to document\", \"TRIPLE\"),\n         optmulti(\"\", \"markdown-css\", \"CSS files to include via <link> in a rendered Markdown file\",\n                  \"FILES\"),\n         optmulti(\"\", \"html-in-header\",\n@@ -321,6 +322,7 @@ fn rust_input(cratefile: &str, externs: core::Externs, matches: &getopts::Matche\n                                  .map(|s| Path::new(s.as_slice()))\n                                  .collect();\n     let cfgs = matches.opt_strs(\"cfg\");\n+    let triple = matches.opt_str(\"target\");\n \n     let cr = Path::new(cratefile);\n     info!(\"starting to run rustc\");\n@@ -329,7 +331,8 @@ fn rust_input(cratefile: &str, externs: core::Externs, matches: &getopts::Matche\n         core::run_core(libs.move_iter().collect(),\n                        cfgs,\n                        externs,\n-                       &cr)\n+                       &cr,\n+                       triple)\n     }).map_err(|boxed_any|format!(\"{:?}\", boxed_any)).unwrap();\n     info!(\"finished with rustc\");\n     analysiskey.replace(Some(analysis));"}]}