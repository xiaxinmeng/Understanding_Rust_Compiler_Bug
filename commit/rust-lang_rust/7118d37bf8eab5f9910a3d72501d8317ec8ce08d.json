{"sha": "7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxMThkMzdiZjhlYWI1Zjk5MTBhM2Q3MjUwMWQ4MzE3ZWM4Y2UwOGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-10T13:29:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-10T13:29:05Z"}, "message": "Auto merge of #6154 - flip1995:ice_fixes, r=ebroto\n\nFix two ICEs caused by ty.is_{sized,freeze}\n\nFixes #6153\nProperly fixes #6139\n\nThe test case in #6153 is kind of weird. Even removing one of the arguments of the `foo` function prevented the ICE. I think this test case is actually minimal.\n\nchangelog: none", "tree": {"sha": "3b4f40812f02e8b0e1e2f7ad796239bd26e43b08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b4f40812f02e8b0e1e2f7ad796239bd26e43b08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "html_url": "https://github.com/rust-lang/rust/commit/7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b70b84639a368eafbc278dbdd93a6286abf23b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b70b84639a368eafbc278dbdd93a6286abf23b2", "html_url": "https://github.com/rust-lang/rust/commit/8b70b84639a368eafbc278dbdd93a6286abf23b2"}, {"sha": "52e650ae88a63b41686f646f2240de7c870e6ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/52e650ae88a63b41686f646f2240de7c870e6ea6", "html_url": "https://github.com/rust-lang/rust/commit/52e650ae88a63b41686f646f2240de7c870e6ea6"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "4525b12689fa76cba77811b0d876180d671b4913", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "patch": "@@ -1,6 +1,7 @@\n use crate::utils::{match_def_path, paths, span_lint, trait_ref_of_method};\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n+use rustc_middle::ty::TypeFoldable;\n use rustc_middle::ty::{Adt, Array, RawPtr, Ref, Slice, Tuple, Ty, TypeAndMut};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n@@ -120,7 +121,11 @@ fn is_mutable_type<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>, span: Span) -> bo\n             size.try_eval_usize(cx.tcx, cx.param_env).map_or(true, |u| u != 0) && is_mutable_type(cx, inner_ty, span)\n         },\n         Tuple(..) => ty.tuple_fields().any(|ty| is_mutable_type(cx, ty, span)),\n-        Adt(..) => cx.tcx.layout_of(cx.param_env.and(ty)).is_ok() && !ty.is_freeze(cx.tcx.at(span), cx.param_env),\n+        Adt(..) => {\n+            cx.tcx.layout_of(cx.param_env.and(ty)).is_ok()\n+                && !ty.has_escaping_bound_vars()\n+                && !ty.is_freeze(cx.tcx.at(span), cx.param_env)\n+        },\n         _ => false,\n     }\n }"}, {"sha": "9a948af8bfc4edd84ac222013149cfab77bd00e2", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "patch": "@@ -17,6 +17,7 @@ use rustc_hir::{\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::hir::map::Map;\n use rustc_middle::lint::in_external_macro;\n+use rustc_middle::ty::TypeFoldable;\n use rustc_middle::ty::{self, InferTy, Ty, TyCtxt, TyS, TypeckResults};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n@@ -541,11 +542,7 @@ impl Types {\n                                 _ => None,\n                             });\n                             let ty_ty = hir_ty_to_ty(cx.tcx, boxed_ty);\n-                            // HACK(flip1995): This is a fix for an ICE occuring when `ty_ty` is a\n-                            // trait object with a lifetime, e.g. `dyn T<'_>`. Since trait objects\n-                            // don't have a known size, this shouldn't introduce FNs. But there\n-                            // should be a better solution.\n-                            if !matches!(ty_ty.kind(), ty::Dynamic(..));\n+                            if !ty_ty.has_escaping_bound_vars();\n                             if ty_ty.is_sized(cx.tcx.at(ty.span), cx.param_env);\n                             if let Ok(ty_ty_size) = cx.layout_of(ty_ty).map(|l| l.size.bytes());\n                             if ty_ty_size <= self.vec_box_size_threshold;"}, {"sha": "9f73f39f10d7969194cdbee8307437acda7e9569", "filename": "tests/ui/crashes/ice-6153.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/tests%2Fui%2Fcrashes%2Fice-6153.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7118d37bf8eab5f9910a3d72501d8317ec8ce08d/tests%2Fui%2Fcrashes%2Fice-6153.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6153.rs?ref=7118d37bf8eab5f9910a3d72501d8317ec8ce08d", "patch": "@@ -0,0 +1,9 @@\n+pub struct S<'a, 'e>(&'a str, &'e str);\n+\n+pub type T<'a, 'e> = std::collections::HashMap<S<'a, 'e>, ()>;\n+\n+impl<'e, 'a: 'e> S<'a, 'e> {\n+    pub fn foo(_a: &str, _b: &str, _map: &T) {}\n+}\n+\n+fn main() {}"}]}