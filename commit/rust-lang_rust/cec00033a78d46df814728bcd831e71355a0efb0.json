{"sha": "cec00033a78d46df814728bcd831e71355a0efb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYzAwMDMzYTc4ZDQ2ZGY4MTQ3MjhiY2Q4MzFlNzEzNTVhMGVmYjA=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-23T08:57:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-23T08:57:40Z"}, "message": "Rollup merge of #69351 - mati865:mingw-ultimate-fix, r=cramertj\n\nImprove external MinGW detection\n\nFixes #68872", "tree": {"sha": "2f7b167b29b9e1da238651960d22c6ef895b0b9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f7b167b29b9e1da238651960d22c6ef895b0b9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cec00033a78d46df814728bcd831e71355a0efb0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeUj6FCRBK7hj4Ov3rIwAAdHIIAGje87aRieRcnsc9SSapQZhv\ntAM9HeG3P0uv1iSmJnwoC0nz7kfY5GCwYwHtjtkdphnpjc+utAmBhuMAU1s7GhRl\nWN1RzD/6LZ0bKRriFXdp6EoRAovoF1oxX2WV0R15rcdLoDHZwirGrEHmd88ZMiYH\n2iGZGGRefrzHB45JZ/ZeCEogKzDMvLgbOiXSB0ZqY2KUB6y7/To7bKDsVjBiOB6q\nk1Efz9IyqDdGeLLt+LahFjqJtAS5nhjB24WJKsYTJyU7gFt1aIppLmsIJstt6UTK\nNLSI1bu+2nWjkkJ6N0X9DRUxUCjA5YMxbjVX0vdGhYjN9/t8FtkmkwbfQ6rpdSg=\n=cMMk\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f7b167b29b9e1da238651960d22c6ef895b0b9d\nparent b76099429babcaf1aed86b7a2b7fb53291dd9ddb\nparent 4904b9c228317a9cba963afb87425754a586acf2\nauthor Dylan DPC <dylan.dpc@gmail.com> 1582448260 +0100\ncommitter GitHub <noreply@github.com> 1582448260 +0100\n\nRollup merge of #69351 - mati865:mingw-ultimate-fix, r=cramertj\n\nImprove external MinGW detection\n\nFixes #68872\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cec00033a78d46df814728bcd831e71355a0efb0", "html_url": "https://github.com/rust-lang/rust/commit/cec00033a78d46df814728bcd831e71355a0efb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cec00033a78d46df814728bcd831e71355a0efb0/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b76099429babcaf1aed86b7a2b7fb53291dd9ddb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b76099429babcaf1aed86b7a2b7fb53291dd9ddb", "html_url": "https://github.com/rust-lang/rust/commit/b76099429babcaf1aed86b7a2b7fb53291dd9ddb"}, {"sha": "4904b9c228317a9cba963afb87425754a586acf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4904b9c228317a9cba963afb87425754a586acf2", "html_url": "https://github.com/rust-lang/rust/commit/4904b9c228317a9cba963afb87425754a586acf2"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "78aacc56ea42e02927c7748384569eff36b83eee", "filename": "src/librustc_codegen_ssa/back/link.rs", "status": "modified", "additions": 15, "deletions": 9, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cec00033a78d46df814728bcd831e71355a0efb0/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cec00033a78d46df814728bcd831e71355a0efb0/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Flink.rs?ref=cec00033a78d46df814728bcd831e71355a0efb0", "patch": "@@ -1002,20 +1002,26 @@ fn get_crt_libs_path(sess: &Session) -> Option<PathBuf> {\n                     x if x == \"x86\" => \"i686\",\n                     x => x,\n                 };\n+                let mingw_bits = &sess.target.target.target_pointer_width;\n                 let mingw_dir = format!(\"{}-w64-mingw32\", mingw_arch);\n                 // Here we have path/bin/gcc but we need path/\n                 let mut path = linker_path;\n                 path.pop();\n                 path.pop();\n-                // Based on Clang MinGW driver\n-                let probe_path = path.join(&mingw_dir).join(\"lib\");\n-                if probe_path.exists() {\n-                    return Some(probe_path);\n-                };\n-                let probe_path = path.join(&mingw_dir).join(\"sys-root/mingw/lib\");\n-                if probe_path.exists() {\n-                    return Some(probe_path);\n-                };\n+                // Loosely based on Clang MinGW driver\n+                let probe_paths = vec![\n+                    path.join(&mingw_dir).join(\"lib\"),                // Typical path\n+                    path.join(&mingw_dir).join(\"sys-root/mingw/lib\"), // Rare path\n+                    path.join(format!(\n+                        \"lib/mingw/tools/install/mingw{}/{}/lib\",\n+                        &mingw_bits, &mingw_dir\n+                    )), // Chocolatey is creative\n+                ];\n+                for probe_path in probe_paths {\n+                    if probe_path.join(\"crt2.o\").exists() {\n+                        return Some(probe_path);\n+                    };\n+                }\n             };\n         };\n         None"}]}