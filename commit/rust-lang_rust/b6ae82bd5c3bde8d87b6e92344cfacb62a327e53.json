{"sha": "b6ae82bd5c3bde8d87b6e92344cfacb62a327e53", "node_id": "C_kwDOAAsO6NoAKGI2YWU4MmJkNWMzYmRlOGQ4N2I2ZTkyMzQ0Y2ZhY2I2MmEzMjdlNTM", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-27T08:51:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-27T09:02:28Z"}, "message": "replace 'locally built rustc' instructions by 'Miri in rustc'", "tree": {"sha": "9cb1b9da839295b79325d1de8e113c9f4237a14a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cb1b9da839295b79325d1de8e113c9f4237a14a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53", "html_url": "https://github.com/rust-lang/rust/commit/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "144b4859ad2c9fcee453f3a1000357e20ecad535", "url": "https://api.github.com/repos/rust-lang/rust/commits/144b4859ad2c9fcee453f3a1000357e20ecad535", "html_url": "https://github.com/rust-lang/rust/commit/144b4859ad2c9fcee453f3a1000357e20ecad535"}], "stats": {"total": 61, "additions": 14, "deletions": 47}, "files": [{"sha": "a8a76be7dabb1bc29ddba9cb067001ba7b5b683b", "filename": "src/tools/miri/CONTRIBUTING.md", "status": "modified", "additions": 14, "deletions": 47, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/b6ae82bd5c3bde8d87b6e92344cfacb62a327e53/src%2Ftools%2Fmiri%2FCONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2FCONTRIBUTING.md?ref=b6ae82bd5c3bde8d87b6e92344cfacb62a327e53", "patch": "@@ -203,65 +203,32 @@ for more information about configuring VS Code and `rust-analyzer`.\n \n [rdg-r-a]: https://rustc-dev-guide.rust-lang.org/building/suggested.html#configuring-rust-analyzer-for-rustc\n \n-## Advanced topic: other build environments\n+## Advanced topic: Working on Miri in the rustc tree\n \n We described above the simplest way to get a working build environment for Miri,\n which is to use the version of rustc indicated by `rustc-version`. But\n sometimes, that is not enough.\n \n-### Building Miri with a locally built rustc\n+A big part of the Miri driver is shared with rustc, so working on Miri will\n+sometimes require also working on rustc itself. In this case, you should *not*\n+work in a clone of the Miri repository, but in a clone of the\n+[main Rust repository](https://github.com/rust-lang/rust/). There is a copy of\n+Miri located at `src/tools/miri` that you can work on directly. A maintainer\n+will eventually sync those changes back into this repository.\n \n-[building Miri with a locally built rustc]: #building-miri-with-a-locally-built-rustc\n+When working on Miri in the rustc tree, here's how you can run tests:\n \n-A big part of the Miri driver lives in rustc, so working on Miri will sometimes\n-require using a locally built rustc. The bug you want to fix may actually be on\n-the rustc side, or you just need to get more detailed trace of the execution\n-than what is possible with release builds -- in both cases, you should develop\n-Miri against a rustc you compiled yourself, with debug assertions (and hence\n-tracing) enabled.\n-\n-The setup for a local rustc works as follows:\n-```sh\n-# Clone the rust-lang/rust repo.\n-git clone https://github.com/rust-lang/rust rustc\n-cd rustc\n-# Create a config.toml with defaults for working on Miri.\n-./x.py setup compiler\n- # Now edit `config.toml` and under `[rust]` set `debug-assertions = true`.\n-\n-# Build a stage 2 rustc, and build the rustc libraries with that rustc.\n-# This step can take 30 minutes or more.\n-./x.py build --stage 2 compiler/rustc\n-# If you change something, you can get a faster rebuild by doing\n-./x.py build --keep-stage 0 --stage 2 compiler/rustc\n-# You may have to change the architecture in the next command\n-rustup toolchain link stage2 build/x86_64-unknown-linux-gnu/stage2\n-# Now cd to your Miri directory, then configure rustup\n-rustup override set stage2\n ```\n-\n-Note: When you are working with a locally built rustc or any other toolchain that\n-is not the same as the one in `rust-version`, you should not have `.auto-everything` or\n-`.auto-toolchain` as that will keep resetting your toolchain.\n-\n-```sh\n-rm -f .auto-everything .auto-toolchain\n+./x.py test miri --stage 0\n ```\n \n-Important: You need to delete the Miri cache when you change the stdlib; otherwise the\n-old, chached version will be used. On Linux, the cache is located at `~/.cache/miri`,\n-and on Windows, it is located at `%LOCALAPPDATA%\\rust-lang\\miri\\cache`; the exact\n-location is printed after the library build: \"A libstd for Miri is now available in ...\".\n-\n-Note: `./x.py --stage 2 compiler/rustc` currently errors with `thread 'main'\n-panicked at 'fs::read(stamp) failed with No such file or directory (os error 2)`,\n-you can simply ignore that error; Miri will build anyway.\n+`--bless` will work, too.\n \n-For more information about building and configuring a local compiler,\n-see <https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html>.\n+You can also directly run Miri on a Rust source file:\n \n-With this, you should now have a working development setup! See\n-[above](#building-and-testing-miri) for how to proceed working on Miri.\n+```\n+./x.py run miri --stage 0 --args src/tools/miri/tests/pass/hello.rs\n+```\n \n ## Advanced topic: Syncing with the rustc repo\n "}]}