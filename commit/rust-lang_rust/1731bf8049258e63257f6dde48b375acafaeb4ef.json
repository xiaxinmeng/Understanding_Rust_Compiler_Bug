{"sha": "1731bf8049258e63257f6dde48b375acafaeb4ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MzFiZjgwNDkyNThlNjMyNTdmNmRkZTQ4YjM3NWFjYWZhZWI0ZWY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-28T21:16:44Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-23T22:55:06Z"}, "message": "Provide a proper span when demanding for the return type of `box x`.", "tree": {"sha": "671c64e5436031da012e0b693e1cc3b6f56ca9a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/671c64e5436031da012e0b693e1cc3b6f56ca9a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1731bf8049258e63257f6dde48b375acafaeb4ef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlq1hcoACgkQ/vbIBR0O\nATzMJQ//U3/ndZw+kOsFKHW9Oipl0UBIqSJUwTeqJ7gXHx8h/hCPXgivGRac4ap2\nuuYCqczQTCcsciPzinXarEpyYekZMt4Hx9YwWuVBPCKx78K94uzREv5aX28gohTl\n5lcyN5+Qupq19c+4JvV71Bo78CH8CeRUnfs8RL8bsJaOGF93qLMA5ZjtwJRp8bio\nauAppE8o37WvAoVboRIgvvnUN9rhECpgxk6+hfaebg1CEgVp3XfB19BeJT+g5qvg\nQDdMrlJGOvoDmAXXDKLgy9p83+nWx23nd1sAamv8kMxv7bhVJ3dwdoeiY7bPdaRP\nTtCEAoNSC/Y/ZMGyLS/JF4kD14WpzxvNFWUneTsqh4wa7zmtjvgTn18PesMlIeqq\nkKZOti4gLvUeMM8qM3+sqSccivPNzwmeiBy3pdLaie91JLv9+oBpAQ7TkxGroi69\nA0IPswClKV3nGalzExSVhA/72B0GUc/icH8Cul7vyM7QOEiyy4tkGBEDLakpXW41\nGlY56f9NV9xKFhXYufAamg0Pxtl4Q2IAznMspwN2e80+3Jj6/5FUre69yqldKV5Q\nu+DP+Xu1ZMUkddE+WnRDmYUTCKPI33GTol9u4AyXqI6zMsXZ5qPblJBwLXhtShir\nhpw00BchRqNfBhYAxltmAKKAN5aREhIFX42gDtsdJ84e+kdy/OY=\n=twSq\n-----END PGP SIGNATURE-----", "payload": "tree 671c64e5436031da012e0b693e1cc3b6f56ca9a4\nparent c08480fce0f39f5c9c6db6dde0dccb375ca0ab14\nauthor kennytm <kennytm@gmail.com> 1519852604 +0800\ncommitter kennytm <kennytm@gmail.com> 1521845706 +0800\n\nProvide a proper span when demanding for the return type of `box x`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1731bf8049258e63257f6dde48b375acafaeb4ef", "html_url": "https://github.com/rust-lang/rust/commit/1731bf8049258e63257f6dde48b375acafaeb4ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1731bf8049258e63257f6dde48b375acafaeb4ef/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c08480fce0f39f5c9c6db6dde0dccb375ca0ab14", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14", "html_url": "https://github.com/rust-lang/rust/commit/c08480fce0f39f5c9c6db6dde0dccb375ca0ab14"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "e8b953d40d7a1ae7ee2664acfc9a719f7f155f30", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=1731bf8049258e63257f6dde48b375acafaeb4ef", "patch": "@@ -16,7 +16,7 @@ use rustc::traits::ObligationCause;\n \n use syntax::ast;\n use syntax::util::parser::PREC_POSTFIX;\n-use syntax_pos::{self, Span};\n+use syntax_pos::Span;\n use rustc::hir;\n use rustc::hir::def::Def;\n use rustc::hir::map::NodeItem;\n@@ -140,7 +140,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         if let Some((msg, suggestion)) = self.check_ref(expr, checked_ty, expected) {\n             err.span_suggestion(expr.span, msg, suggestion);\n         } else if !self.check_for_cast(&mut err, expr, expr_ty, expected) {\n-            let methods = self.get_conversion_methods(expected, checked_ty);\n+            let methods = self.get_conversion_methods(expr.span, expected, checked_ty);\n             if let Ok(expr_text) = self.tcx.sess.codemap().span_to_snippet(expr.span) {\n                 let suggestions = iter::repeat(expr_text).zip(methods.iter())\n                     .map(|(receiver, method)| format!(\"{}.{}()\", receiver, method.name))\n@@ -155,9 +155,9 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         (expected, Some(err))\n     }\n \n-    fn get_conversion_methods(&self, expected: Ty<'tcx>, checked_ty: Ty<'tcx>)\n+    fn get_conversion_methods(&self, span: Span, expected: Ty<'tcx>, checked_ty: Ty<'tcx>)\n                               -> Vec<AssociatedItem> {\n-        let mut methods = self.probe_for_return_type(syntax_pos::DUMMY_SP,\n+        let mut methods = self.probe_for_return_type(span,\n                                                      probe::Mode::MethodCall,\n                                                      expected,\n                                                      checked_ty,"}, {"sha": "f5e75f40fca087ed0bd22779aad8a9a0e7e06d7d", "filename": "src/test/ui/did_you_mean/recursion_limit_deref.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.rs?ref=1731bf8049258e63257f6dde48b375acafaeb4ef", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//~^^^^^^^^^^ ERROR reached the recursion limit\n-\n // Test that the recursion limit can be changed and that the compiler\n // suggests a fix. In this case, we have a long chain of Deref impls\n // which will cause an overflow during the autoderef loop."}, {"sha": "20a94f7aac196121b9a92deee1db7354b1ac7435", "filename": "src/test/ui/did_you_mean/recursion_limit_deref.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1731bf8049258e63257f6dde48b375acafaeb4ef/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr?ref=1731bf8049258e63257f6dde48b375acafaeb4ef", "patch": "@@ -1,25 +1,21 @@\n error[E0055]: reached the recursion limit while auto-dereferencing I\n-  --> $DIR/recursion_limit_deref.rs:62:22\n+  --> $DIR/recursion_limit_deref.rs:60:22\n    |\n LL |     let x: &Bottom = &t; //~ ERROR mismatched types\n    |                      ^^ deref recursion limit reached\n    |\n    = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n \n-error[E0055]: reached the recursion limit while auto-dereferencing I\n-   |\n-   = help: consider adding a `#![recursion_limit=\"20\"]` attribute to your crate\n-\n error[E0308]: mismatched types\n-  --> $DIR/recursion_limit_deref.rs:62:22\n+  --> $DIR/recursion_limit_deref.rs:60:22\n    |\n LL |     let x: &Bottom = &t; //~ ERROR mismatched types\n    |                      ^^ expected struct `Bottom`, found struct `Top`\n    |\n    = note: expected type `&Bottom`\n               found type `&Top`\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors occurred: E0055, E0308.\n For more information about an error, try `rustc --explain E0055`."}]}