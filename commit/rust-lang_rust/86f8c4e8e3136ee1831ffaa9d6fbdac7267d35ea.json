{"sha": "86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "node_id": "C_kwDOAAsO6NoAKDg2ZjhjNGU4ZTMxMzZlZTE4MzFmZmFhOWQ2ZmJkYWM3MjY3ZDM1ZWE", "commit": {"author": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-08-27T04:24:13Z"}, "committer": {"name": "Jhonny Bill Mena", "email": "jhonnybillm@gmail.com", "date": "2022-08-30T18:27:42Z"}, "message": "ADD - InvalidSymbolName to migrate symbol-name({}) error to new diagnostics infraestructure\n\nADD - dependencies needed to port a module to new Diagnostics infra (rustc_macros, rustc_errors, errors file, and fluent file)", "tree": {"sha": "49cc40e40cc899a88af96556d5d84382fce1f8e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49cc40e40cc899a88af96556d5d84382fce1f8e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "html_url": "https://github.com/rust-lang/rust/commit/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/comments", "author": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JhonnyBillM", "id": 18747072, "node_id": "MDQ6VXNlcjE4NzQ3MDcy", "avatar_url": "https://avatars.githubusercontent.com/u/18747072?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JhonnyBillM", "html_url": "https://github.com/JhonnyBillM", "followers_url": "https://api.github.com/users/JhonnyBillM/followers", "following_url": "https://api.github.com/users/JhonnyBillM/following{/other_user}", "gists_url": "https://api.github.com/users/JhonnyBillM/gists{/gist_id}", "starred_url": "https://api.github.com/users/JhonnyBillM/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JhonnyBillM/subscriptions", "organizations_url": "https://api.github.com/users/JhonnyBillM/orgs", "repos_url": "https://api.github.com/users/JhonnyBillM/repos", "events_url": "https://api.github.com/users/JhonnyBillM/events{/privacy}", "received_events_url": "https://api.github.com/users/JhonnyBillM/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "230a8ee364b693c286a2187e56239cd2cc3be318", "url": "https://api.github.com/repos/rust-lang/rust/commits/230a8ee364b693c286a2187e56239cd2cc3be318", "html_url": "https://github.com/rust-lang/rust/commit/230a8ee364b693c286a2187e56239cd2cc3be318"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "6cddbe9d2cd5f085a893417a4c8e38fb0a976c7e", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -4155,7 +4155,9 @@ dependencies = [\n  \"punycode\",\n  \"rustc-demangle\",\n  \"rustc_data_structures\",\n+ \"rustc_errors\",\n  \"rustc_hir\",\n+ \"rustc_macros\",\n  \"rustc_middle\",\n  \"rustc_session\",\n  \"rustc_span\","}, {"sha": "6c8166beab8596fe1fde441683648173587fb216", "filename": "compiler/rustc_error_messages/locales/en-US/symbol_mangling.ftl", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fsymbol_mangling.ftl?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -0,0 +1 @@\n+symbol_mangling_invalid_symbol_name = symbol-name({$mangled_formatted})"}, {"sha": "eabb9192029d562e36c34d229fda70c442294234", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -52,6 +52,7 @@ fluent_messages! {\n     ty_utils => \"../locales/en-US/ty_utils.ftl\",\n     typeck => \"../locales/en-US/typeck.ftl\",\n     mir_dataflow => \"../locales/en-US/mir_dataflow.ftl\",\n+    symbol_mangling => \"../locales/en-US/symbol_mangling.ftl\",\n }\n \n pub use fluent_generated::{self as fluent, DEFAULT_LOCALE_RESOURCES};"}, {"sha": "3db05225722e71aad54fad9c2e6d53d288992353", "filename": "compiler/rustc_symbol_mangling/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2FCargo.toml?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -18,3 +18,5 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_target = { path = \"../rustc_target\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_session = { path = \"../rustc_session\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n+rustc_errors = { path = \"../rustc_errors\" }"}, {"sha": "38aa4345f0c9c22692b022ba07bfc0868110865d", "filename": "compiler/rustc_symbol_mangling/src/errors.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ferrors.rs?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -0,0 +1,12 @@\n+//! Errors emitted by symbol_mangling.\n+\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(symbol_mangling::invalid_symbol_name)]\n+pub struct InvalidSymbolName<'a> {\n+    #[primary_span]\n+    pub span: Span,\n+    pub mangled_formatted: &'a str,\n+}"}, {"sha": "252726691a760ddb63d97d98d44cf8ffd0e68bca", "filename": "compiler/rustc_symbol_mangling/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Flib.rs?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -110,6 +110,7 @@ use tracing::debug;\n mod legacy;\n mod v0;\n \n+pub mod errors;\n pub mod test;\n pub mod typeid;\n "}, {"sha": "9c1d5d4292ca2f53410de270a4e59270bf9a2acd", "filename": "compiler/rustc_symbol_mangling/src/test.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_symbol_mangling%2Fsrc%2Ftest.rs?ref=86f8c4e8e3136ee1831ffaa9d6fbdac7267d35ea", "patch": "@@ -4,6 +4,7 @@\n //! def-path. This is used for unit testing the code that generates\n //! paths etc in all kinds of annoying scenarios.\n \n+use crate::errors::InvalidSymbolName;\n use rustc_hir::def_id::LocalDefId;\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{subst::InternalSubsts, Instance, TyCtxt};\n@@ -59,7 +60,10 @@ impl SymbolNamesTest<'_> {\n                 tcx.erase_regions(InternalSubsts::identity_for_item(tcx, def_id)),\n             );\n             let mangled = tcx.symbol_name(instance);\n-            tcx.sess.span_err(attr.span, &format!(\"symbol-name({})\", mangled));\n+            tcx.sess.emit_err(InvalidSymbolName {\n+                span: attr.span,\n+                mangled_formatted: &format!(\"{mangled}\"),\n+            });\n             if let Ok(demangling) = rustc_demangle::try_demangle(mangled.name) {\n                 tcx.sess.span_err(attr.span, &format!(\"demangling({})\", demangling));\n                 tcx.sess.span_err(attr.span, &format!(\"demangling-alt({:#})\", demangling));"}]}