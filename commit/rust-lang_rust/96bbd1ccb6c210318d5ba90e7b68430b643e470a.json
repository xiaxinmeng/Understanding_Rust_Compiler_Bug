{"sha": "96bbd1ccb6c210318d5ba90e7b68430b643e470a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YmJkMWNjYjZjMjEwMzE4ZDViYTkwZTdiNjg0MzBiNjQzZTQ3MGE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-20T23:57:29Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-03-21T11:02:12Z"}, "message": "Rename `cast_from_int` to `cast_from_int_like`", "tree": {"sha": "c3e5d7d0ae32d65198cb2aece29dca7b112b0ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3e5d7d0ae32d65198cb2aece29dca7b112b0ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96bbd1ccb6c210318d5ba90e7b68430b643e470a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96bbd1ccb6c210318d5ba90e7b68430b643e470a", "html_url": "https://github.com/rust-lang/rust/commit/96bbd1ccb6c210318d5ba90e7b68430b643e470a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96bbd1ccb6c210318d5ba90e7b68430b643e470a/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fa550b85d6d3faed9ab7fbf442ac3b11b380184", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fa550b85d6d3faed9ab7fbf442ac3b11b380184", "html_url": "https://github.com/rust-lang/rust/commit/2fa550b85d6d3faed9ab7fbf442ac3b11b380184"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "5c70b28a56786bcc1bf65833ba47bd9f43d641e5", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/96bbd1ccb6c210318d5ba90e7b68430b643e470a/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96bbd1ccb6c210318d5ba90e7b68430b643e470a/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=96bbd1ccb6c210318d5ba90e7b68430b643e470a", "patch": "@@ -136,7 +136,9 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                 if let Some(discr) = src.layout.ty.discriminant_for_variant(*self.tcx, index) {\n                     assert!(src.layout.is_zst());\n                     let discr_layout = self.layout_of(discr.ty)?;\n-                    return Ok(self.cast_from_int(discr.val, discr_layout, dest_layout)?.into());\n+                    return Ok(self\n+                        .cast_from_int_like(discr.val, discr_layout, dest_layout)?\n+                        .into());\n                 }\n             }\n             layout::Variants::Multiple { .. } => {}\n@@ -173,10 +175,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // (b) cast from an integer-like (including bool, char, enums).\n         // In both cases we want the bits.\n         let bits = self.force_bits(src.to_scalar()?, src.layout.size)?;\n-        Ok(self.cast_from_int(bits, src.layout, dest_layout)?.into())\n+        Ok(self.cast_from_int_like(bits, src.layout, dest_layout)?.into())\n     }\n \n-    fn cast_from_int(\n+    fn cast_from_int_like(\n         &self,\n         v: u128, // raw bits\n         src_layout: TyLayout<'tcx>,"}]}