{"sha": "11e7897eae7aaee59c257e85f12d2cfbcd8ebd97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZTc4OTdlYWU3YWFlZTU5YzI1N2U4NWYxMmQyY2ZiY2Q4ZWJkOTc=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-02-06T16:01:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-06T16:01:52Z"}, "message": "Rollup merge of #81812 - nagisa:nagisa/escape-the-escape-hatch, r=Amanieu\n\nAdd a test for escaping LLVMisms in inline asm\n\nWe escape certain LLVM-specific features when passing the inline\nassembly string to the LLVM. Until now, however, there was no test\nmaking sure this behaviour stays intact. This commit adds such a test!\n\nr? `@Amanieu`\ncc `@joshtriplett`", "tree": {"sha": "52bad551569f9af1725e432990376b99db148699", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52bad551569f9af1725e432990376b99db148699"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHr1wCRBK7hj4Ov3rIwAAdHIIAH8RknrwKV6nV/MC3fdAgEmv\n1Vn2YUZGDZu+kTXpGR69fIqmebckXNB+BDOtAwrXff74xZAn0k3YjJ8dhinS2V0n\nCwudlirURha7LYYcOSFKKr4hL7pIrbZTXFGwHTdujYqHgKVJULl4GSdXBEyJMMnZ\n3ezXt9JspN/tM9ssG3f//lTCy4BDPGaHGlm4quyCJ/HGyKAD6wFjwwLXr8YT1fAE\nlOUnD+DgsX8kP8cja/cr6seOl3L3L7PGEcFiwyzN14IZg83s+7GF0pFH7k6bai0c\nywqoMkFj1YdKDXTcSL7+4ddYfNiaXSst1RCLVXH9zZH6cNWZCx8xW6vKjDnge9M=\n=t1wJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 52bad551569f9af1725e432990376b99db148699\nparent e143159e752cb39bd92db5fc4a7904805a1ecd03\nparent 243755a13e78ebe7a3bb5ba797dd3e2fd04dd2dd\nauthor Jonas Schievink <jonasschievink@gmail.com> 1612627312 +0100\ncommitter GitHub <noreply@github.com> 1612627312 +0100\n\nRollup merge of #81812 - nagisa:nagisa/escape-the-escape-hatch, r=Amanieu\n\nAdd a test for escaping LLVMisms in inline asm\n\nWe escape certain LLVM-specific features when passing the inline\nassembly string to the LLVM. Until now, however, there was no test\nmaking sure this behaviour stays intact. This commit adds such a test!\n\nr? `@Amanieu`\ncc `@joshtriplett`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97", "html_url": "https://github.com/rust-lang/rust/commit/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e143159e752cb39bd92db5fc4a7904805a1ecd03", "url": "https://api.github.com/repos/rust-lang/rust/commits/e143159e752cb39bd92db5fc4a7904805a1ecd03", "html_url": "https://github.com/rust-lang/rust/commit/e143159e752cb39bd92db5fc4a7904805a1ecd03"}, {"sha": "243755a13e78ebe7a3bb5ba797dd3e2fd04dd2dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/243755a13e78ebe7a3bb5ba797dd3e2fd04dd2dd", "html_url": "https://github.com/rust-lang/rust/commit/243755a13e78ebe7a3bb5ba797dd3e2fd04dd2dd"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "fe09caa69730936818194fc502e1616631e34965", "filename": "src/test/codegen/asm-sanitize-llvm.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97/src%2Ftest%2Fcodegen%2Fasm-sanitize-llvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e7897eae7aaee59c257e85f12d2cfbcd8ebd97/src%2Ftest%2Fcodegen%2Fasm-sanitize-llvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasm-sanitize-llvm.rs?ref=11e7897eae7aaee59c257e85f12d2cfbcd8ebd97", "patch": "@@ -0,0 +1,32 @@\n+// FIXME(nagisa): remove the flags here once all targets support `asm!`.\n+// compile-flags: --target x86_64-unknown-linux-gnu\n+\n+// Verify we sanitize the special tokens for the LLVM inline-assembly, ensuring people won't\n+// inadvertently rely on the LLVM-specific syntax and features.\n+#![no_core]\n+#![feature(no_core, lang_items, rustc_attrs)]\n+#![crate_type = \"rlib\"]\n+\n+#[rustc_builtin_macro]\n+macro_rules! asm {\n+    () => {};\n+}\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+pub unsafe fn we_escape_dollar_signs() {\n+    // CHECK: call void asm sideeffect alignstack inteldialect \"banana$$:\"\n+    asm!(\n+        r\"banana$:\",\n+    )\n+}\n+\n+pub unsafe fn we_escape_escapes_too() {\n+    // CHECK: call void asm sideeffect alignstack inteldialect \"banana\\{{(\\\\|5C)}}36:\"\n+    asm!(\n+        r\"banana\\36:\",\n+    )\n+}"}]}