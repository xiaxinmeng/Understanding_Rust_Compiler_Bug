{"sha": "2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZTkzMGJkMDNkM2M5YjkyMzBhZTNiOWNjOGZjMzBiODMzNzg5MDA=", "commit": {"author": {"name": "Axary", "email": "bastian_kauschke@hotmail.de", "date": "2018-11-16T18:35:13Z"}, "committer": {"name": "Axary", "email": "bastian_kauschke@hotmail.de", "date": "2018-11-16T18:35:13Z"}, "message": "fix tidy (remove whitespace)", "tree": {"sha": "0960bfdfd061292aca353a330d7c8a83ff2dc144", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0960bfdfd061292aca353a330d7c8a83ff2dc144"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "html_url": "https://github.com/rust-lang/rust/commit/2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe23ffbda01d2033c98ec6cec7f51cb08f625ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe23ffbda01d2033c98ec6cec7f51cb08f625ec9", "html_url": "https://github.com/rust-lang/rust/commit/fe23ffbda01d2033c98ec6cec7f51cb08f625ec9"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "18929af4718fe0d8f4029ce3f43fb01b9a5906d6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "patch": "@@ -5394,7 +5394,7 @@ impl<'a> Parser<'a> {\n     fn parse_fn_args(&mut self, named_args: bool, allow_variadic: bool)\n                      -> PResult<'a, (Vec<Arg> , bool)> {\n         self.expect(&token::OpenDelim(token::Paren))?;\n-        \n+\n         let sp = self.span;\n         let mut variadic = false;\n         let args: Vec<Option<Arg>> ="}, {"sha": "d0eca1a9e5ce17ceb12c88eef88c3a1d6be8933f", "filename": "src/test/ui/invalid-self-argument/bare-fn-start.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn-start.stderr?ref=2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "patch": "@@ -0,0 +1,8 @@\n+error: unexpected `self` argument in function\n+  --> $DIR/bare-fn-start.rs:1:7\n+   |\n+LL | fn a(&self) { }\n+   |       ^^^^ `self` is only valid as the first argument of a trait function\n+\n+error: aborting due to previous error\n+"}, {"sha": "bd6c598c88a0bcceea7376d6d707f430fc35f236", "filename": "src/test/ui/invalid-self-argument/bare-fn.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-self-argument%2Fbare-fn.stderr?ref=2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "patch": "@@ -0,0 +1,8 @@\n+error: unexpected `self` argument in function\n+  --> $DIR/bare-fn.rs:1:21\n+   |\n+LL | fn b(foo: u32, &mut self) { }\n+   |                     ^^^^ `self` is only valid as the first argument of a trait function\n+\n+error: aborting due to previous error\n+"}, {"sha": "d056e53b95c72ddaf97c71ef92ccdfe2ac486ea1", "filename": "src/test/ui/invalid-self-argument/trait-fn.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Ftrait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2be930bd03d3c9b9230ae3b9cc8fc30b83378900/src%2Ftest%2Fui%2Finvalid-self-argument%2Ftrait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-self-argument%2Ftrait-fn.stderr?ref=2be930bd03d3c9b9230ae3b9cc8fc30b83378900", "patch": "@@ -0,0 +1,8 @@\n+error: unexpected `self` argument in function\n+  --> $DIR/trait-fn.rs:4:20\n+   |\n+LL |     fn c(foo: u32, self) {}\n+   |                    ^^^^ `self` is only valid as the first argument of a trait function\n+\n+error: aborting due to previous error\n+"}]}