{"sha": "d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YzE5MTkxYjA1YzExYzZhM2Y1Y2JmMjUxNzhlYzc0OWY1YTM0MTQ=", "commit": {"author": {"name": "Dan Robertson", "email": "dan@dlrobertson.com", "date": "2019-01-13T14:23:32Z"}, "committer": {"name": "Dan Robertson", "email": "dan@dlrobertson.com", "date": "2019-01-13T14:23:32Z"}, "message": "librustc_mir: Fix ICE with slice patterns\n\nIf a match arm does not include all fields in a structure and a later\npattern includes a field that is an array, we will attempt to use the\narray type from the prior arm. When calculating the field type, treat\na array of an unknown size as a TyErr.", "tree": {"sha": "5976d09bec43f7e815ec70f63d94291021e63dae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5976d09bec43f7e815ec70f63d94291021e63dae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF5dO2RaKc5C+SCJ9RcSmUsR+QqUFAlw7SeYACgkQRcSmUsR+\nQqWckw/+MGL4Ow4byxXO58Q29jNMHsUCbc183Kaq1BPL6ELbIiTnNLP6Nl5IiUnx\nD2vrHSiyYmS21WvoVikbtjR8T9aJqtRBaEw8PQ5UDtmyglXRstMAH13gNobbqsvG\n+8kO+eVNkv/Y2p9vxM7PAbRZv2u0Ahhuvt8EccPKpABnVe4sMe/cF3XxsAK6kv9M\nWsZvdEa0Nd3uf4ap6hjsThlq5ELRqIl7VkVYM4cXYa+pFtbVl1AfoBu00FwDvgqR\nmbQTNEG9Wq6U7cbaQlfl/Apl8O6oztCeS8P/KQkrEYFdTHaGgXMIEN7gjLLnxvN9\nQPnOwrqosDG3U6JfNL2USuWwNgaoSiCalk/lRKeZ1AGLqUQYDYl4lyYIJma6mE+I\nJhzlJyEHhL2dtcFmN18VEqsF7i3lomVH6lUROnRhM4QLri2z0xHjPIFxLlo0gueR\nLTJCAfS9MlJ3CkJeZh5iXFHSw72qsib16UjgcsfDGz01Kki28Hl95Nan8vp3yU7o\nVvcnCMJFqWGcnEaZjv5MZrY+PXImxOBanSdW9/KvkxnZk/G0Mro63A/JMl3HF6Hd\nAYUyiAHiYoiqdXhjk7HU5032o01eXk6XXLyQ2dQXfVrp5qkH2uZ08Eue+lRQCOwC\nDMCn3CzXkhu0exTkI+ZGPVCZ287EDjqXHaibVZAODiRaj4wLnBA=\n=NYWQ\n-----END PGP SIGNATURE-----", "payload": "tree 5976d09bec43f7e815ec70f63d94291021e63dae\nparent 0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17\nauthor Dan Robertson <dan@dlrobertson.com> 1547389412 +0000\ncommitter Dan Robertson <dan@dlrobertson.com> 1547389412 +0000\n\nlibrustc_mir: Fix ICE with slice patterns\n\nIf a match arm does not include all fields in a structure and a later\npattern includes a field that is an array, we will attempt to use the\narray type from the prior arm. When calculating the field type, treat\na array of an unknown size as a TyErr.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "html_url": "https://github.com/rust-lang/rust/commit/d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/comments", "author": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dlrobertson", "id": 7504153, "node_id": "MDQ6VXNlcjc1MDQxNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/7504153?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dlrobertson", "html_url": "https://github.com/dlrobertson", "followers_url": "https://api.github.com/users/dlrobertson/followers", "following_url": "https://api.github.com/users/dlrobertson/following{/other_user}", "gists_url": "https://api.github.com/users/dlrobertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/dlrobertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dlrobertson/subscriptions", "organizations_url": "https://api.github.com/users/dlrobertson/orgs", "repos_url": "https://api.github.com/users/dlrobertson/repos", "events_url": "https://api.github.com/users/dlrobertson/events{/privacy}", "received_events_url": "https://api.github.com/users/dlrobertson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17", "html_url": "https://github.com/rust-lang/rust/commit/0c91f3d97fe78d31c8cf3abb1858c65d73c6aa17"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "188a1120442983dfba44c786cb5a4b6047a04590", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "patch": "@@ -1372,7 +1372,14 @@ fn constructor_sub_pattern_tys<'a, 'tcx: 'a>(cx: &MatchCheckCtxt<'a, 'tcx>,\n                     let is_visible = adt.is_enum()\n                         || field.vis.is_accessible_from(cx.module, cx.tcx);\n                     if is_visible {\n-                        field.ty(cx.tcx, substs)\n+                        let ty = field.ty(cx.tcx, substs);\n+                        match ty.sty {\n+                            // If the field type returned is an array of an unknown\n+                            // size return an TyErr.\n+                            ty::Array(_, len) if len.assert_usize(cx.tcx).is_none() =>\n+                                cx.tcx.types.err,\n+                            _ => ty,\n+                        }\n                     } else {\n                         // Treat all non-visible fields as TyErr. They\n                         // can't appear in any other pattern from"}, {"sha": "1131006374c64eb70672e54783d1351ef6ef8401", "filename": "src/test/ui/issues/issue-57472.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57472.rs?ref=d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "patch": "@@ -0,0 +1,35 @@\n+#![crate_type=\"lib\"]\n+#![deny(unreachable_patterns)]\n+\n+mod test_struct {\n+    // Test the exact copy of the minimal example\n+    // posted in the issue.\n+    pub struct Punned {\n+        foo: [u8; 1],\n+        bar: [u8; 1],\n+    }\n+\n+    pub fn test(punned: Punned) {\n+        match punned {\n+            Punned { foo: [_], .. } => println!(\"foo\"),\n+            Punned { bar: [_], .. } => println!(\"bar\"),\n+            //~^ ERROR unreachable pattern [unreachable_patterns]\n+        }\n+    }\n+}\n+\n+mod test_union {\n+    // Test the same thing using a union.\n+    pub union Punned {\n+        foo: [u8; 1],\n+        bar: [u8; 1],\n+    }\n+\n+    pub fn test(punned: Punned) {\n+        match punned {\n+            Punned { foo: [_] } => println!(\"foo\"),\n+            Punned { bar: [_] } => println!(\"bar\"),\n+            //~^ ERROR unreachable pattern [unreachable_patterns]\n+        }\n+    }\n+}"}, {"sha": "b6dd7e249418691fbfc63a874d46f7c0db96f3fe", "filename": "src/test/ui/issues/issue-57472.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d6c19191b05c11c6a3f5cbf25178ec749f5a3414/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57472.stderr?ref=d6c19191b05c11c6a3f5cbf25178ec749f5a3414", "patch": "@@ -0,0 +1,20 @@\n+error: unreachable pattern\n+  --> $DIR/issue-57472.rs:15:13\n+   |\n+LL |             Punned { bar: [_], .. } => println!(\"bar\"),\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-57472.rs:2:9\n+   |\n+LL | #![deny(unreachable_patterns)]\n+   |         ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unreachable pattern\n+  --> $DIR/issue-57472.rs:31:13\n+   |\n+LL |             Punned { bar: [_] } => println!(\"bar\"),\n+   |             ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}