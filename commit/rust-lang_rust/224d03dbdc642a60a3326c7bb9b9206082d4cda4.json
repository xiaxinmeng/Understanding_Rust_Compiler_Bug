{"sha": "224d03dbdc642a60a3326c7bb9b9206082d4cda4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNGQwM2RiZGM2NDJhNjBhMzMyNmM3YmI5YjkyMDYwODJkNGNkYTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-08T07:58:03Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-15T08:35:40Z"}, "message": "organize std tests a bit better", "tree": {"sha": "e6814e5e694110a594429cddfa6fdae90d22fb78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6814e5e694110a594429cddfa6fdae90d22fb78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224d03dbdc642a60a3326c7bb9b9206082d4cda4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224d03dbdc642a60a3326c7bb9b9206082d4cda4", "html_url": "https://github.com/rust-lang/rust/commit/224d03dbdc642a60a3326c7bb9b9206082d4cda4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224d03dbdc642a60a3326c7bb9b9206082d4cda4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a94e197105a0ce67cba816299cdd59efdb6df7a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a94e197105a0ce67cba816299cdd59efdb6df7a4", "html_url": "https://github.com/rust-lang/rust/commit/a94e197105a0ce67cba816299cdd59efdb6df7a4"}], "stats": {"total": 75, "additions": 38, "deletions": 37}, "files": [{"sha": "bc89d752e0b62122642a3647d4874bd4ba38ea1e", "filename": "tests/run-pass/rc.rs", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/224d03dbdc642a60a3326c7bb9b9206082d4cda4/tests%2Frun-pass%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224d03dbdc642a60a3326c7bb9b9206082d4cda4/tests%2Frun-pass%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frc.rs?ref=224d03dbdc642a60a3326c7bb9b9206082d4cda4", "patch": "@@ -1,13 +1,33 @@\n-use std::cell::RefCell;\n+use std::cell::{Cell, RefCell};\n use std::rc::Rc;\n+use std::sync::Arc;\n \n fn rc_refcell() {\n     let r = Rc::new(RefCell::new(42));\n+    let r2 = r.clone();\n     *r.borrow_mut() += 10;\n-    let x = *r.borrow();\n+    let x = *r2.borrow();\n     assert_eq!(x, 52);\n }\n \n+fn rc_cell() {\n+    let r = Rc::new(Cell::new(42));\n+    let r2 = r.clone();\n+    let x = r.get();\n+    r2.set(x + x);\n+    assert_eq!(r.get(), 84);\n+}\n+\n+fn rc_refcell2() {\n+    let r = Rc::new(RefCell::new(42));\n+    let r2 = r.clone();\n+    *r.borrow_mut() += 10;\n+    let x = r2.borrow();\n+    let r3 = r.clone();\n+    let y = r3.borrow();\n+    assert_eq!((*x + *y)/2, 52);\n+}\n+\n fn rc_raw() {\n     let r = Rc::new(0);\n     let r2 = Rc::into_raw(r.clone());\n@@ -17,6 +37,14 @@ fn rc_raw() {\n     assert!(Rc::try_unwrap(r2).is_ok());\n }\n \n+fn arc() {\n+    fn test() -> Arc<i32> {\n+        let a = Arc::new(42);\n+        a\n+    }\n+    assert_eq!(*test(), 42);\n+}\n+\n // Make sure this Rc doesn't fall apart when touched\n fn check_unique_rc<T: ?Sized>(mut r: Rc<T>) {\n     let r2 = r.clone();\n@@ -34,6 +62,9 @@ fn rc_from() {\n \n fn main() {\n     rc_refcell();\n+    rc_refcell2();\n+    rc_cell();\n     rc_raw();\n     rc_from();\n+    arc();\n }"}, {"sha": "52dcdbd36d0fb2d012039d644f7d108f4e1b368e", "filename": "tests/run-pass/refcell.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/224d03dbdc642a60a3326c7bb9b9206082d4cda4/tests%2Frun-pass%2Frefcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224d03dbdc642a60a3326c7bb9b9206082d4cda4/tests%2Frun-pass%2Frefcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frefcell.rs?ref=224d03dbdc642a60a3326c7bb9b9206082d4cda4", "patch": "@@ -1,6 +1,6 @@\n use std::cell::RefCell;\n \n-fn main() {\n+fn lots_of_funny_borrows() {\n     let c = RefCell::new(42);\n     {\n         let s1 = c.borrow();\n@@ -31,3 +31,7 @@ fn main() {\n         let _y: i32 = *s2;\n     }\n }\n+\n+fn main() {\n+    lots_of_funny_borrows();\n+}"}, {"sha": "7ff967b29f344e591c4afeec638287206a835ec3", "filename": "tests/run-pass/std.rs", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/a94e197105a0ce67cba816299cdd59efdb6df7a4/tests%2Frun-pass%2Fstd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a94e197105a0ce67cba816299cdd59efdb6df7a4/tests%2Frun-pass%2Fstd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstd.rs?ref=a94e197105a0ce67cba816299cdd59efdb6df7a4", "patch": "@@ -1,34 +0,0 @@\n-use std::cell::{Cell, RefCell};\n-use std::rc::Rc;\n-use std::sync::Arc;\n-\n-fn rc_cell() -> Rc<Cell<i32>> {\n-    let r = Rc::new(Cell::new(42));\n-    let x = r.get();\n-    r.set(x + x);\n-    r\n-}\n-\n-fn rc_refcell() -> i32 {\n-    let r = Rc::new(RefCell::new(42));\n-    *r.borrow_mut() += 10;\n-    let x = r.borrow();\n-    let y = r.borrow();\n-    (*x + *y)/2\n-}\n-\n-fn arc() -> Arc<i32> {\n-    let a = Arc::new(42);\n-    a\n-}\n-\n-fn true_assert() {\n-    assert_eq!(1, 1);\n-}\n-\n-fn main() {\n-    assert_eq!(*arc(), 42);\n-    assert_eq!(rc_cell().get(), 84);\n-    assert_eq!(rc_refcell(), 52);\n-    true_assert();\n-}"}]}