{"sha": "280d19395d264d295e6d8d4f3c7cef368e04aad0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MGQxOTM5NWQyNjRkMjk1ZTZkOGQ0ZjNjN2NlZjM2OGUwNGFhZDA=", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-06-16T07:33:03Z"}, "committer": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-06-16T07:33:03Z"}, "message": "Remove `projection_ty_from_predicates`", "tree": {"sha": "30ba18b1d134afa4de24bc8dc2dff6a3a0ff7d98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30ba18b1d134afa4de24bc8dc2dff6a3a0ff7d98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/280d19395d264d295e6d8d4f3c7cef368e04aad0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEx6scKn6IIf/+FpBu2rpbBylhwYoFAmDJqS8ACgkQ2rpbBylh\nwYqyGg//QbbRmOPC6YaFlOco6aMFiUqjifQe037mCYAG4TjQd6AgCior1LJSimIr\nsHLQCiLGRTkTpsrROHQaqDJ8V3KDE8C/QlZJR99cMHDvREfkAn5rq9fJeRzsKMJ1\nAzhGXiMZsfHr8GJPg1WOlIA84vALxF2DeabyFxk0HaayZrg3YG3TwEF7z+4fg3G9\n1DiiS2yL5otHayq9PBLBoBK4KCSELMvQ8m8WbSdfpBy8c8UGwsEcT50KWGtzBD8e\nHOC/GU7DxhPDEoPI7eRu45FFeLgn+35MyMZUwc91VyqDGZr37shENO1oi1/EscEB\nAtFNcy4tiA4TTad9Vbg3+ylfuzFDV82IUWA/7YYqN/zvW3RTMD969dzG2m8zdxI/\nadftiBJQvKzUsmlzO8wAtZrcNBMjwZFc7VNLakuPmMePdNXzxuCVbqWKdM18ZzJR\nOlLJctgHbjWucjRq/Ba2tq10e6RjzLzDiOA/sxPPlmPhIpudDSjwn3QWiw4nkq2Y\nVITghZ9F2yu8cdIpWhM0+6YrSG0a1PdkSF2L+SArjosOXCpziwNaH7nATdwkKf4X\n3yMXq9HtODG0xDSz8EzR4rvFCODFxNeEpljqmJ/BYjYudTqC6dSHtpJROsSjCPvp\nI7Xh4cAclXOTuiahcEt8raHu89s9KaMdi1RtKElkwvdIAFa5RyM=\n=tmmz\n-----END PGP SIGNATURE-----", "payload": "tree 30ba18b1d134afa4de24bc8dc2dff6a3a0ff7d98\nparent 52b22869db9554728b0d2133a7c1dd9c713b3b16\nauthor Yuki Okushi <yuki.okushi@huawei.com> 1623828783 +0900\ncommitter Yuki Okushi <yuki.okushi@huawei.com> 1623828783 +0900\n\nRemove `projection_ty_from_predicates`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/280d19395d264d295e6d8d4f3c7cef368e04aad0", "html_url": "https://github.com/rust-lang/rust/commit/280d19395d264d295e6d8d4f3c7cef368e04aad0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/280d19395d264d295e6d8d4f3c7cef368e04aad0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52b22869db9554728b0d2133a7c1dd9c713b3b16", "url": "https://api.github.com/repos/rust-lang/rust/commits/52b22869db9554728b0d2133a7c1dd9c713b3b16", "html_url": "https://github.com/rust-lang/rust/commit/52b22869db9554728b0d2133a7c1dd9c713b3b16"}], "stats": {"total": 30, "additions": 1, "deletions": 29}, "files": [{"sha": "aa54d1ae7b9d118426d9702dac6384725e0b50c4", "filename": "compiler/rustc_middle/src/dep_graph/dep_node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fdep_graph%2Fdep_node.rs?ref=280d19395d264d295e6d8d4f3c7cef368e04aad0", "patch": "@@ -285,7 +285,7 @@ pub type DepNode = rustc_query_system::dep_graph::DepNode<DepKind>;\n // required that their size stay the same, but we don't want to change\n // it inadvertently. This assert just ensures we're aware of any change.\n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]\n-static_assert_size!(DepNode, 18);\n+static_assert_size!(DepNode, 17);\n \n #[cfg(not(any(target_arch = \"x86\", target_arch = \"x86_64\")))]\n static_assert_size!(DepNode, 24);"}, {"sha": "a73d193408030fad2b46b09472b426e81613520a", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=280d19395d264d295e6d8d4f3c7cef368e04aad0", "patch": "@@ -191,10 +191,6 @@ rustc_queries! {\n         desc { |tcx| \"elaborating item bounds for `{}`\", tcx.def_path_str(key) }\n     }\n \n-    query projection_ty_from_predicates(key: (DefId, DefId)) -> Option<ty::ProjectionTy<'tcx>> {\n-        desc { |tcx| \"finding projection type inside predicates of `{}`\", tcx.def_path_str(key.0) }\n-    }\n-\n     query native_libraries(_: CrateNum) -> Lrc<Vec<NativeLib>> {\n         desc { \"looking up the native libraries of a linked crate\" }\n     }"}, {"sha": "55de04bfba0fe6b7e81d566daa719441f0d5c59c", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/280d19395d264d295e6d8d4f3c7cef368e04aad0/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=280d19395d264d295e6d8d4f3c7cef368e04aad0", "patch": "@@ -77,7 +77,6 @@ pub fn provide(providers: &mut Providers) {\n         generics_of,\n         predicates_of,\n         predicates_defined_on,\n-        projection_ty_from_predicates,\n         explicit_predicates_of,\n         super_predicates_of,\n         super_predicates_that_define_assoc_type,\n@@ -2352,29 +2351,6 @@ fn explicit_predicates_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::GenericPredicat\n     }\n }\n \n-fn projection_ty_from_predicates(\n-    tcx: TyCtxt<'tcx>,\n-    key: (\n-        // ty_def_id\n-        DefId,\n-        // def_id of `N` in `<T as Trait>::N`\n-        DefId,\n-    ),\n-) -> Option<ty::ProjectionTy<'tcx>> {\n-    let (ty_def_id, item_def_id) = key;\n-    let mut projection_ty = None;\n-    for (predicate, _) in tcx.predicates_of(ty_def_id).predicates {\n-        if let ty::PredicateKind::Projection(projection_predicate) = predicate.kind().skip_binder()\n-        {\n-            if item_def_id == projection_predicate.projection_ty.item_def_id {\n-                projection_ty = Some(projection_predicate.projection_ty);\n-                break;\n-            }\n-        }\n-    }\n-    projection_ty\n-}\n-\n /// Converts a specific `GenericBound` from the AST into a set of\n /// predicates that apply to the self type. A vector is returned\n /// because this can be anywhere from zero predicates (`T: ?Sized` adds no"}]}