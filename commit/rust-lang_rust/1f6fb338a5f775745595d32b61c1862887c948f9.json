{"sha": "1f6fb338a5f775745595d32b61c1862887c948f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNmZiMzM4YTVmNzc1NzQ1NTk1ZDMyYjYxYzE4NjI4ODdjOTQ4Zjk=", "commit": {"author": {"name": "Dario Gonzalez", "email": "dario.gonzalez@fortanix.com", "date": "2020-02-11T18:11:58Z"}, "committer": {"name": "Dario Gonzalez", "email": "dario.gonzalez@fortanix.com", "date": "2020-02-11T18:11:58Z"}, "message": "make the sgx arg cleanup implementation a no op", "tree": {"sha": "5d24f3725ef8d9617aafc83f9d3314ce2b8e9f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d24f3725ef8d9617aafc83f9d3314ce2b8e9f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f6fb338a5f775745595d32b61c1862887c948f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f6fb338a5f775745595d32b61c1862887c948f9", "html_url": "https://github.com/rust-lang/rust/commit/1f6fb338a5f775745595d32b61c1862887c948f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f6fb338a5f775745595d32b61c1862887c948f9/comments", "author": {"login": "Goirad", "id": 20523291, "node_id": "MDQ6VXNlcjIwNTIzMjkx", "avatar_url": "https://avatars.githubusercontent.com/u/20523291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Goirad", "html_url": "https://github.com/Goirad", "followers_url": "https://api.github.com/users/Goirad/followers", "following_url": "https://api.github.com/users/Goirad/following{/other_user}", "gists_url": "https://api.github.com/users/Goirad/gists{/gist_id}", "starred_url": "https://api.github.com/users/Goirad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Goirad/subscriptions", "organizations_url": "https://api.github.com/users/Goirad/orgs", "repos_url": "https://api.github.com/users/Goirad/repos", "events_url": "https://api.github.com/users/Goirad/events{/privacy}", "received_events_url": "https://api.github.com/users/Goirad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Goirad", "id": 20523291, "node_id": "MDQ6VXNlcjIwNTIzMjkx", "avatar_url": "https://avatars.githubusercontent.com/u/20523291?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Goirad", "html_url": "https://github.com/Goirad", "followers_url": "https://api.github.com/users/Goirad/followers", "following_url": "https://api.github.com/users/Goirad/following{/other_user}", "gists_url": "https://api.github.com/users/Goirad/gists{/gist_id}", "starred_url": "https://api.github.com/users/Goirad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Goirad/subscriptions", "organizations_url": "https://api.github.com/users/Goirad/orgs", "repos_url": "https://api.github.com/users/Goirad/repos", "events_url": "https://api.github.com/users/Goirad/events{/privacy}", "received_events_url": "https://api.github.com/users/Goirad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95e0a2c50d063bd7eb79aa55d16cd5fee715c280", "url": "https://api.github.com/repos/rust-lang/rust/commits/95e0a2c50d063bd7eb79aa55d16cd5fee715c280", "html_url": "https://github.com/rust-lang/rust/commit/95e0a2c50d063bd7eb79aa55d16cd5fee715c280"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "5a53695a8466b5e52e075dc7bd646b62b5702a17", "filename": "src/libstd/sys/sgx/args.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1f6fb338a5f775745595d32b61c1862887c948f9/src%2Flibstd%2Fsys%2Fsgx%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f6fb338a5f775745595d32b61c1862887c948f9/src%2Flibstd%2Fsys%2Fsgx%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fargs.rs?ref=1f6fb338a5f775745595d32b61c1862887c948f9", "patch": "@@ -22,12 +22,7 @@ pub unsafe fn init(argc: isize, argv: *const *const u8) {\n     }\n }\n \n-pub unsafe fn cleanup() {\n-    let args = ARGS.swap(0, Ordering::Relaxed);\n-    if args != 0 {\n-        drop(Box::<ArgsStore>::from_raw(args as _))\n-    }\n-}\n+pub unsafe fn cleanup() {}\n \n pub fn args() -> Args {\n     let args = unsafe { (ARGS.load(Ordering::Relaxed) as *const ArgsStore).as_ref() };"}]}