{"sha": "e701c72a631ca443d16d7d37a4ccb584db93ef41", "node_id": "C_kwDOAAsO6NoAKGU3MDFjNzJhNjMxY2E0NDNkMTZkN2QzN2E0Y2NiNTg0ZGI5M2VmNDE", "commit": {"author": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-18T17:30:56Z"}, "committer": {"name": "Jean CASPAR", "email": "55629512+JeanCASPAR@users.noreply.github.com", "date": "2022-08-22T17:21:41Z"}, "message": "Migrate all span_err(...) in ast_lowering to SessionDiagnostic", "tree": {"sha": "3140a52691c1e734cf5288f0c10bc7d568aa5c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3140a52691c1e734cf5288f0c10bc7d568aa5c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e701c72a631ca443d16d7d37a4ccb584db93ef41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e701c72a631ca443d16d7d37a4ccb584db93ef41", "html_url": "https://github.com/rust-lang/rust/commit/e701c72a631ca443d16d7d37a4ccb584db93ef41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e701c72a631ca443d16d7d37a4ccb584db93ef41/comments", "author": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JeanCASPAR", "id": 55629512, "node_id": "MDQ6VXNlcjU1NjI5NTEy", "avatar_url": "https://avatars.githubusercontent.com/u/55629512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JeanCASPAR", "html_url": "https://github.com/JeanCASPAR", "followers_url": "https://api.github.com/users/JeanCASPAR/followers", "following_url": "https://api.github.com/users/JeanCASPAR/following{/other_user}", "gists_url": "https://api.github.com/users/JeanCASPAR/gists{/gist_id}", "starred_url": "https://api.github.com/users/JeanCASPAR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JeanCASPAR/subscriptions", "organizations_url": "https://api.github.com/users/JeanCASPAR/orgs", "repos_url": "https://api.github.com/users/JeanCASPAR/repos", "events_url": "https://api.github.com/users/JeanCASPAR/events{/privacy}", "received_events_url": "https://api.github.com/users/JeanCASPAR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51649665917366f605842e9261e77d49fc4e7549", "url": "https://api.github.com/repos/rust-lang/rust/commits/51649665917366f605842e9261e77d49fc4e7549", "html_url": "https://github.com/rust-lang/rust/commit/51649665917366f605842e9261e77d49fc4e7549"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "2da42c96ec0cf02bbef9adf786d463f299b25544", "filename": "compiler/rustc_ast_lowering/src/errors.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Ferrors.rs?ref=e701c72a631ca443d16d7d37a4ccb584db93ef41", "patch": "@@ -306,3 +306,24 @@ pub struct MisplacedDoubleDot {\n     #[primary_span]\n     pub span: Span,\n }\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[error(ast_lowering::misplaced_relax_trait_bound)]\n+pub struct MisplacedRelaxTraitBound {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[error(ast_lowering::not_supported_for_lifetime_binder_async_closure)]\n+pub struct NotSupportedForLifetimeBinderAsyncClosure {\n+    #[primary_span]\n+    pub span: Span,\n+}\n+\n+#[derive(SessionDiagnostic, Clone, Copy)]\n+#[error(ast_lowering::arbitrary_expression_in_pattern)]\n+pub struct ArbitraryExpressionInPattern {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "61f8c0216f1cf91c2f6d7ef65e4c6667bbde5a0e", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=e701c72a631ca443d16d7d37a4ccb584db93ef41", "patch": "@@ -1,7 +1,8 @@\n use super::errors::{\n     AsyncGeneratorsNotSupported, AsyncNonMoveClosureNotSupported, AwaitOnlyInAsyncFnAndBlocks,\n     BaseExpressionDoubleDot, ClosureCannotBeStatic, FunctionalRecordUpdateDestructuringAssignemnt,\n-    GeneratorTooManyParameters, RustcBoxAttributeError, UnderscoreExprLhsAssign,\n+    GeneratorTooManyParameters, NotSupportedForLifetimeBinderAsyncClosure, RustcBoxAttributeError,\n+    UnderscoreExprLhsAssign,\n };\n use super::ResolverAstLoweringExt;\n use super::{ImplTraitContext, LoweringContext, ParamMode, ParenthesizedGenericArgs};\n@@ -915,10 +916,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         fn_decl_span: Span,\n     ) -> hir::ExprKind<'hir> {\n         if let &ClosureBinder::For { span, .. } = binder {\n-            self.tcx.sess.span_err(\n-                span,\n-                \"`for<...>` binders on `async` closures are not currently supported\",\n-            );\n+            self.tcx.sess.emit_err(NotSupportedForLifetimeBinderAsyncClosure { span });\n         }\n \n         let (binder_clause, generic_params) = self.lower_closure_binder(binder);"}, {"sha": "fd338ffc0c5e8b64c9ca0469cc25cb766070e671", "filename": "compiler/rustc_ast_lowering/src/item.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fitem.rs?ref=e701c72a631ca443d16d7d37a4ccb584db93ef41", "patch": "@@ -1,4 +1,4 @@\n-use super::errors::InvalidAbi;\n+use super::errors::{InvalidAbi, MisplacedRelaxTraitBound};\n use super::ResolverAstLoweringExt;\n use super::{AstOwner, ImplTraitContext, ImplTraitPosition};\n use super::{FnDeclKind, LoweringContext, ParamMode};\n@@ -1339,11 +1339,7 @@ impl<'hir> LoweringContext<'_, 'hir> {\n                 }\n                 let is_param = *is_param.get_or_insert_with(compute_is_param);\n                 if !is_param {\n-                    self.diagnostic().span_err(\n-                        bound.span(),\n-                        \"`?Trait` bounds are only permitted at the \\\n-                        point where a type parameter is declared\",\n-                    );\n+                    self.tcx.sess.emit_err(MisplacedRelaxTraitBound { span: bound.span() });\n                 }\n             }\n         }"}, {"sha": "1efa19a3a828655d22f7721cb4357d3cb5a308ff", "filename": "compiler/rustc_ast_lowering/src/pat.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fpat.rs?ref=e701c72a631ca443d16d7d37a4ccb584db93ef41", "patch": "@@ -1,4 +1,6 @@\n-use super::errors::{ExtraDoubleDot, MisplacedDoubleDot, SubTupleBinding};\n+use super::errors::{\n+    ArbitraryExpressionInPattern, ExtraDoubleDot, MisplacedDoubleDot, SubTupleBinding,\n+};\n use super::ResolverAstLoweringExt;\n use super::{ImplTraitContext, LoweringContext, ParamMode};\n use crate::ImplTraitPosition;\n@@ -330,8 +332,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             ExprKind::Path(..) if allow_paths => {}\n             ExprKind::Unary(UnOp::Neg, ref inner) if matches!(inner.kind, ExprKind::Lit(_)) => {}\n             _ => {\n-                self.diagnostic()\n-                    .span_err(expr.span, \"arbitrary expressions aren't allowed in patterns\");\n+                self.tcx.sess.emit_err(ArbitraryExpressionInPattern { span: expr.span });\n                 return self.arena.alloc(self.expr_err(expr.span));\n             }\n         }"}, {"sha": "8effd9ca75017d559896c0b7c9be913e5a598788", "filename": "compiler/rustc_error_messages/locales/en-US/ast_lowering.ftl", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e701c72a631ca443d16d7d37a4ccb584db93ef41/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fast_lowering.ftl?ref=e701c72a631ca443d16d7d37a4ccb584db93ef41", "patch": "@@ -120,3 +120,12 @@ ast_lowering_previously_used_here = previously used here\n ast_lowering_misplaced_double_dot =\n     `..` patterns are not allowed here\n     .note = only allowed in tuple, tuple struct, and slice patterns\n+\n+ast_lowering_misplaced_relax_trait_bound =\n+    `?Trait` bounds are only permitted at the point where a type parameter is declared\n+\n+ast_lowering_not_supported_for_lifetime_binder_async_closure =\n+    `for<...>` binders on `async` closures are not currently supported\n+\n+ast_lowering_arbitrary_expression_in_pattern =\n+    arbitrary expressions aren't allowed in patterns"}]}