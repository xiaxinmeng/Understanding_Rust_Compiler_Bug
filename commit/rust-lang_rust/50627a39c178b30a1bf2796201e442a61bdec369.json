{"sha": "50627a39c178b30a1bf2796201e442a61bdec369", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNjI3YTM5YzE3OGIzMGExYmYyNzk2MjAxZTQ0MmE2MWJkZWMzNjk=", "commit": {"author": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-10-13T16:50:30Z"}, "committer": {"name": "Ding Xiang Fei", "email": "dingxiangfei2009@protonmail.ch", "date": "2020-10-13T16:51:00Z"}, "message": "explanatory comments and fix guard binding stack", "tree": {"sha": "8089557192478546df01fc2df840c28a18c0f9e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8089557192478546df01fc2df840c28a18c0f9e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50627a39c178b30a1bf2796201e442a61bdec369", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE0u8S3YU336XkLsQOPNdIZH7vY1kFAl+F2vQACgkQPNdIZH7v\nY1mIHQ/5AZvJWoydDNIp8PLjbJvthlNrjugpl4BMp7Kv2nGnHCA7F6FaVmxVZKSQ\nTQc5moPqnIuUV0tAIdfuE56/dzfzBZsFgNovFtVL/WDxW4gSG2YS0YR3Kw4dyxsf\nRLsD16FklvLJuBtboVJcL2WDexPjU1WQ6sVjIv3ad+NGzdeUEpxcms61NOePDJ5T\nybzjPIVVars+nl9Xq4AgzG3YpVv3yrkig46VJFzqvk9U79X1p7n0kbV996+Tj/Yl\nvs2tChVX2vXm4RPLt8R1PJsywZ5hD4jvS7BtBvWqQIjjwEOBO2NpYPFNIem5/XG/\n1wHKVLC8ng7rpRVOnNDccTmEtMV/I+2H6Gmlec4DRvtkLOYaDkFaDGgLvmcs9jJT\n5RId0XmXv8Rda8fTk4YY87g9ilu/+WZlF/ld4rx10n49unRVnnthUfWZyB9jkn9Z\nD+NapmkfHfcSpbJtzKtAUkC1CEpYbhkdFtfpxj9Ab23/lMCLTlqfa/l4x3yOJq1J\n8eHDTuoipMlfHxFmVG0yWgqR/ES235NQioo/cH794DRSujTRHxaRZKgll/FyeWJj\n+iD8k4y0u4XnnBfT6IOjoi1DjCoVV/UQHskc5B6oRl03hhH4+Y1zvyqRAHlR5rpo\n8/cLLB+3BhcNBvd+JtYOQacKW7nF2MsJMundBeAl6yHR23lcN0Q=\n=nLYi\n-----END PGP SIGNATURE-----", "payload": "tree 8089557192478546df01fc2df840c28a18c0f9e8\nparent 4a8ba7b031728229cd30fe30e4d9f3cce6ece14c\nauthor Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1602607830 +0800\ncommitter Ding Xiang Fei <dingxiangfei2009@protonmail.ch> 1602607860 +0800\n\nexplanatory comments and fix guard binding stack\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50627a39c178b30a1bf2796201e442a61bdec369", "html_url": "https://github.com/rust-lang/rust/commit/50627a39c178b30a1bf2796201e442a61bdec369", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50627a39c178b30a1bf2796201e442a61bdec369/comments", "author": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dingxiangfei2009", "id": 6884440, "node_id": "MDQ6VXNlcjY4ODQ0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6884440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dingxiangfei2009", "html_url": "https://github.com/dingxiangfei2009", "followers_url": "https://api.github.com/users/dingxiangfei2009/followers", "following_url": "https://api.github.com/users/dingxiangfei2009/following{/other_user}", "gists_url": "https://api.github.com/users/dingxiangfei2009/gists{/gist_id}", "starred_url": "https://api.github.com/users/dingxiangfei2009/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dingxiangfei2009/subscriptions", "organizations_url": "https://api.github.com/users/dingxiangfei2009/orgs", "repos_url": "https://api.github.com/users/dingxiangfei2009/repos", "events_url": "https://api.github.com/users/dingxiangfei2009/events{/privacy}", "received_events_url": "https://api.github.com/users/dingxiangfei2009/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a8ba7b031728229cd30fe30e4d9f3cce6ece14c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8ba7b031728229cd30fe30e4d9f3cce6ece14c", "html_url": "https://github.com/rust-lang/rust/commit/4a8ba7b031728229cd30fe30e4d9f3cce6ece14c"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "3fc5f02a4a47da009aecd94252cd311b019a9c6d", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/50627a39c178b30a1bf2796201e442a61bdec369/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50627a39c178b30a1bf2796201e442a61bdec369/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=50627a39c178b30a1bf2796201e442a61bdec369", "patch": "@@ -63,6 +63,9 @@ impl<'a, 'tcx> InteriorVisitor<'a, 'tcx> {\n                         yield_data.expr_and_pat_count, self.expr_count, source_span\n                     );\n \n+                    // If it is a borrowing happening in the guard,\n+                    // it needs to be recorded regardless because they\n+                    // do live across this yield point.\n                     if guard_borrowing_from_pattern\n                         || yield_data.expr_and_pat_count >= self.expr_count\n                     {\n@@ -225,11 +228,9 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n     }\n \n     fn visit_arm(&mut self, arm: &'tcx Arm<'tcx>) {\n-        if arm.guard.is_some() {\n-            self.guard_bindings.push(<_>::default());\n-        }\n-        self.visit_pat(&arm.pat);\n-        if let Some(ref g) = arm.guard {\n+        let Arm { guard, pat, body, .. } = arm;\n+        self.visit_pat(pat);\n+        if let Some(ref g) = guard {\n             self.guard_bindings.push(<_>::default());\n             ArmPatCollector {\n                 guard_bindings_set: &mut self.guard_bindings_set,\n@@ -238,7 +239,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n                     .last_mut()\n                     .expect(\"should have pushed at least one earlier\"),\n             }\n-            .visit_pat(&arm.pat);\n+            .visit_pat(pat);\n \n             match g {\n                 Guard::If(ref e) => {\n@@ -255,7 +256,7 @@ impl<'a, 'tcx> Visitor<'tcx> for InteriorVisitor<'a, 'tcx> {\n                 );\n             }\n         }\n-        self.visit_expr(&arm.body);\n+        self.visit_expr(body);\n     }\n \n     fn visit_pat(&mut self, pat: &'tcx Pat<'tcx>) {"}]}