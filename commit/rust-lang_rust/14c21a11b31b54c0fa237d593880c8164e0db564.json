{"sha": "14c21a11b31b54c0fa237d593880c8164e0db564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzIxYTExYjMxYjU0YzBmYTIzN2Q1OTM4ODBjODE2NGUwZGI1NjQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-08T08:07:42Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-08T10:26:39Z"}, "message": "Rollup merge of #53981 - fbernier:patch-1, r=sfackler\n\nImplement initializer() for FileDesc\n\nHere was my initial issue:\n\n```rust\nuse std::process::{Command};\n\nfn main() {\n    let output = Command::new(\"curl\").arg(\"-s\").arg(\"http://ovh.net/files/100Mio.dat\").output();\n    println!(\"{:?}\", output.unwrap().stdout.len());\n}\n```\n```\n~/stuff \u276f\u276f\u276f time ./dwl\n104857600\n./dwl  16.22s user 1.80s system 23% cpu 1:15.24 total\n```\n\n```rust\nuse std::process::{Command, Stdio};\n\nfn main() {\n    let child = Command::new(\"curl\").arg(\"-s\").arg(\"http://ovh.net/files/100Mio.dat\").stdout(Stdio::piped()).spawn();\n    let output = child.unwrap().wait_with_output().unwrap();\n    println!(\"{:?}\", output.stdout.len());\n}\n```\n\n```\n~/stuff \u276f\u276f\u276f time ./dwl2\n104857600\n./dwl2  0.64s user 2.18s system 5% cpu 53.072 total\n```\n\nAs you can see the first version is spending much more time in userland and also uses more cpu. With the help of @programble, @talchas and @habnabit  on the rust IRC, we discovered that the slow version uses two pipes, one for `stdin` and one for `stderr` and in that case it polls when going through [this function](https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/pipe.rs#L82). The polling calls `read_to_end` on the pipes repetitively and this results in zeroing its internal buffer each time. To avoid this zeroing, `FileDesc` needs to implement `initializer`. We see no reason why it [wouldn't work with uninitialized memory](https://doc.rust-lang.org/1.26.1/src/std/io/mod.rs.html#534) so this PR fixes that.\n\nHere is some tracing of the slow program:\n![image](https://user-images.githubusercontent.com/147585/45133180-ed8a2d80-b161-11e8-9ec7-09979ec96145.png)\n\nversus the fast program:\n![image](https://user-images.githubusercontent.com/147585/45133216-0c88bf80-b162-11e8-908e-ff81d59239fb.png)\n\nI have not tested the change yet but will try to build it tomorrow.", "tree": {"sha": "a2a9d7ec78ac2626e7c03a1dd55c16e9f3c6b71a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2a9d7ec78ac2626e7c03a1dd55c16e9f3c6b71a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c21a11b31b54c0fa237d593880c8164e0db564", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluTo98ACgkQ/vbIBR0O\nATwj3xAAiVTT+CehA87YmeKzhWmicI3y/RWfY7afCpjK9/KmQJkkLE9Chkk9xUFk\n68yLI6p84Ysww3vWAVKO9n77hP6OnU7nTj7jKv+fQRy8GUgBs0DUz6LD5md44PFo\n2oi/Z2iwhk2QtktC1DcOubM/G39YzVYyiuLmLw1Ri4yapgVIBW6YiQpsbGCHOAPz\nda/Ik1G0p4e1YDbhvwHFByuJYjAimSWppzA874g9WwWwnGU/MOyXqcwj8ohIkWaG\nFRFMBRwIIgy/rzLqdjex1BVfxrnfPCyga+BWSiunkQXZU3ESXqzA+lqqHHdo5E6M\ngUI5mnW/Oh9lcKcZbADvzr/xPs1nmHukMWaNPRzBJc/kjAKm9kK0oExIJD12Cbsj\nGb61gzGKG3PfcTEzaZIBjl+/r98DVT7zuLoGCQcrD7lVAyERAckR2ECQ7Im2yc+6\nnHHpYO/3AzFIdlSnmT1FEOAMY6yoE/qecHFIL5htLNyXSFDbAmhPe9SG9peqS/ew\nMviRtxceX25DL8Nckrai8/AmRWaFaNMLNWM/V5mVuHlfIjOXixzNeFsCyitWSJyC\ngeIT0FCXz0W65dsjyyRohZsHQTSu3ItXH3S/G2FAR3Km6yMLWvHKa40WaNtSJQ4A\nFpYVQWwZHIh1pNYkvsuPBM0FcQVu6tU/IVrGoooj2kwOrXOwpsU=\n=HzOq\n-----END PGP SIGNATURE-----", "payload": "tree a2a9d7ec78ac2626e7c03a1dd55c16e9f3c6b71a\nparent 5cc51add43bffa21bab4708a53a1920c9671ea8a\nparent 28745a6e190a8c61ba2f08b03ea8afed620c9735\nauthor kennytm <kennytm@gmail.com> 1536394062 +0800\ncommitter kennytm <kennytm@gmail.com> 1536402399 +0800\n\nRollup merge of #53981 - fbernier:patch-1, r=sfackler\n\nImplement initializer() for FileDesc\n\nHere was my initial issue:\n\n```rust\nuse std::process::{Command};\n\nfn main() {\n    let output = Command::new(\"curl\").arg(\"-s\").arg(\"http://ovh.net/files/100Mio.dat\").output();\n    println!(\"{:?}\", output.unwrap().stdout.len());\n}\n```\n```\n~/stuff \u276f\u276f\u276f time ./dwl\n104857600\n./dwl  16.22s user 1.80s system 23% cpu 1:15.24 total\n```\n\n```rust\nuse std::process::{Command, Stdio};\n\nfn main() {\n    let child = Command::new(\"curl\").arg(\"-s\").arg(\"http://ovh.net/files/100Mio.dat\").stdout(Stdio::piped()).spawn();\n    let output = child.unwrap().wait_with_output().unwrap();\n    println!(\"{:?}\", output.stdout.len());\n}\n```\n\n```\n~/stuff \u276f\u276f\u276f time ./dwl2\n104857600\n./dwl2  0.64s user 2.18s system 5% cpu 53.072 total\n```\n\nAs you can see the first version is spending much more time in userland and also uses more cpu. With the help of @programble, @talchas and @habnabit  on the rust IRC, we discovered that the slow version uses two pipes, one for `stdin` and one for `stderr` and in that case it polls when going through [this function](https://github.com/rust-lang/rust/blob/master/src/libstd/sys/unix/pipe.rs#L82). The polling calls `read_to_end` on the pipes repetitively and this results in zeroing its internal buffer each time. To avoid this zeroing, `FileDesc` needs to implement `initializer`. We see no reason why it [wouldn't work with uninitialized memory](https://doc.rust-lang.org/1.26.1/src/std/io/mod.rs.html#534) so this PR fixes that.\n\nHere is some tracing of the slow program:\n![image](https://user-images.githubusercontent.com/147585/45133180-ed8a2d80-b161-11e8-9ec7-09979ec96145.png)\n\nversus the fast program:\n![image](https://user-images.githubusercontent.com/147585/45133216-0c88bf80-b162-11e8-908e-ff81d59239fb.png)\n\nI have not tested the change yet but will try to build it tomorrow.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c21a11b31b54c0fa237d593880c8164e0db564", "html_url": "https://github.com/rust-lang/rust/commit/14c21a11b31b54c0fa237d593880c8164e0db564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c21a11b31b54c0fa237d593880c8164e0db564/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cc51add43bffa21bab4708a53a1920c9671ea8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cc51add43bffa21bab4708a53a1920c9671ea8a", "html_url": "https://github.com/rust-lang/rust/commit/5cc51add43bffa21bab4708a53a1920c9671ea8a"}, {"sha": "28745a6e190a8c61ba2f08b03ea8afed620c9735", "url": "https://api.github.com/repos/rust-lang/rust/commits/28745a6e190a8c61ba2f08b03ea8afed620c9735", "html_url": "https://github.com/rust-lang/rust/commit/28745a6e190a8c61ba2f08b03ea8afed620c9735"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "db2ea6b660a7ab73a4f882ccbf8d8d1f789a2b25", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14c21a11b31b54c0fa237d593880c8164e0db564/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c21a11b31b54c0fa237d593880c8164e0db564/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=14c21a11b31b54c0fa237d593880c8164e0db564", "patch": "@@ -11,7 +11,7 @@\n #![unstable(reason = \"not public\", issue = \"0\", feature = \"fd\")]\n \n use cmp;\n-use io::{self, Read};\n+use io::{self, Read, Initializer};\n use libc::{self, c_int, c_void, ssize_t};\n use mem;\n use sync::atomic::{AtomicBool, Ordering};\n@@ -270,6 +270,11 @@ impl<'a> Read for &'a FileDesc {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n         (**self).read(buf)\n     }\n+\n+    #[inline]\n+    unsafe fn initializer(&self) -> Initializer {\n+        Initializer::nop()\n+    }\n }\n \n impl AsInner<c_int> for FileDesc {"}]}