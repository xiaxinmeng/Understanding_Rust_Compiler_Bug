{"sha": "5efdcf268aed5139b8ec9de52db094edaf866822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZmRjZjI2OGFlZDUxMzliOGVjOWRlNTJkYjA5NGVkYWY4NjY4MjI=", "commit": {"author": {"name": "Mathieu David", "email": "mathieudavid@mathieudavid.org", "date": "2015-06-08T16:01:40Z"}, "committer": {"name": "Mathieu David", "email": "mathieudavid@mathieudavid.org", "date": "2015-06-08T16:01:40Z"}, "message": "Updated with requested changes", "tree": {"sha": "67e52044bd3b5bf6b7cab827bd4d73f4b02224b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67e52044bd3b5bf6b7cab827bd4d73f4b02224b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5efdcf268aed5139b8ec9de52db094edaf866822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5efdcf268aed5139b8ec9de52db094edaf866822", "html_url": "https://github.com/rust-lang/rust/commit/5efdcf268aed5139b8ec9de52db094edaf866822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5efdcf268aed5139b8ec9de52db094edaf866822/comments", "author": {"login": "azerupi", "id": 7647338, "node_id": "MDQ6VXNlcjc2NDczMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7647338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azerupi", "html_url": "https://github.com/azerupi", "followers_url": "https://api.github.com/users/azerupi/followers", "following_url": "https://api.github.com/users/azerupi/following{/other_user}", "gists_url": "https://api.github.com/users/azerupi/gists{/gist_id}", "starred_url": "https://api.github.com/users/azerupi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azerupi/subscriptions", "organizations_url": "https://api.github.com/users/azerupi/orgs", "repos_url": "https://api.github.com/users/azerupi/repos", "events_url": "https://api.github.com/users/azerupi/events{/privacy}", "received_events_url": "https://api.github.com/users/azerupi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azerupi", "id": 7647338, "node_id": "MDQ6VXNlcjc2NDczMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7647338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azerupi", "html_url": "https://github.com/azerupi", "followers_url": "https://api.github.com/users/azerupi/followers", "following_url": "https://api.github.com/users/azerupi/following{/other_user}", "gists_url": "https://api.github.com/users/azerupi/gists{/gist_id}", "starred_url": "https://api.github.com/users/azerupi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azerupi/subscriptions", "organizations_url": "https://api.github.com/users/azerupi/orgs", "repos_url": "https://api.github.com/users/azerupi/repos", "events_url": "https://api.github.com/users/azerupi/events{/privacy}", "received_events_url": "https://api.github.com/users/azerupi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d8e085369eabb6766b9ec9423716266719b1e34", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d8e085369eabb6766b9ec9423716266719b1e34", "html_url": "https://github.com/rust-lang/rust/commit/5d8e085369eabb6766b9ec9423716266719b1e34"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "46af311acf31547332961f38c2a980bbf260ee06", "filename": "src/doc/trpl/ownership.md", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5efdcf268aed5139b8ec9de52db094edaf866822/src%2Fdoc%2Ftrpl%2Fownership.md", "raw_url": "https://github.com/rust-lang/rust/raw/5efdcf268aed5139b8ec9de52db094edaf866822/src%2Fdoc%2Ftrpl%2Fownership.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fownership.md?ref=5efdcf268aed5139b8ec9de52db094edaf866822", "patch": "@@ -157,7 +157,7 @@ But, unlike a move, we can still use `v` afterward. This is because an `i32`\n has no pointers to data somewhere else, copying it is a full copy.\n \n All primitive types implement the `Copy` trait and their ownership is\n-therefore not moved like one would assume, following the **ownership rules**.\n+therefore not moved like one would assume, following the \u00b4ownership rules\u00b4.\n To give an example, the two following snippets of code only compile because the \n `i32` and `bool` types implement the `Copy` trait. \n \n@@ -196,9 +196,6 @@ println!(\"{}\", a);\n                ^\n ```\n \n-This is quite important to understand, because it is an exception to the most \n-fundamental rule in the Rust language.\n-\n We will discuss how to make your own types `Copy` in the [traits][traits]\n section.\n "}]}