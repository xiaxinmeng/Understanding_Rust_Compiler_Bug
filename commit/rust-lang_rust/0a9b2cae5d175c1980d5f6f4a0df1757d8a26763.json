{"sha": "0a9b2cae5d175c1980d5f6f4a0df1757d8a26763", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOWIyY2FlNWQxNzVjMTk4MGQ1ZjZmNGEwZGYxNzU3ZDhhMjY3NjM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-23T01:28:11Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-23T19:56:23Z"}, "message": "Remove `TypeKind`", "tree": {"sha": "7bf5f01d80c0b20062ceca49acdbf3b0f1d1c83c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bf5f01d80c0b20062ceca49acdbf3b0f1d1c83c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763", "html_url": "https://github.com/rust-lang/rust/commit/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ef4b2cefb5f4dc944ed4ae2f74d9f9918d7822", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ef4b2cefb5f4dc944ed4ae2f74d9f9918d7822", "html_url": "https://github.com/rust-lang/rust/commit/f3ef4b2cefb5f4dc944ed4ae2f74d9f9918d7822"}], "stats": {"total": 53, "additions": 0, "deletions": 53}, "files": [{"sha": "433f12bc4327498c9c4c06f2d818e02365724a66", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a9b2cae5d175c1980d5f6f4a0df1757d8a26763/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=0a9b2cae5d175c1980d5f6f4a0df1757d8a26763", "patch": "@@ -1442,59 +1442,6 @@ crate enum PrimitiveType {\n     Never,\n }\n \n-#[derive(Clone, PartialEq, Eq, Hash, Copy, Debug)]\n-crate enum TypeKind {\n-    Enum,\n-    Function,\n-    Module,\n-    Const,\n-    Static,\n-    Struct,\n-    Union,\n-    Trait,\n-    Typedef,\n-    Foreign,\n-    Macro,\n-    TraitAlias,\n-}\n-\n-impl From<hir::def::DefKind> for TypeKind {\n-    fn from(other: hir::def::DefKind) -> Self {\n-        match other {\n-            hir::def::DefKind::Enum => Self::Enum,\n-            hir::def::DefKind::Fn => Self::Function,\n-            hir::def::DefKind::Mod => Self::Module,\n-            hir::def::DefKind::Const => Self::Const,\n-            hir::def::DefKind::Static => Self::Static,\n-            hir::def::DefKind::Struct => Self::Struct,\n-            hir::def::DefKind::Union => Self::Union,\n-            hir::def::DefKind::Trait => Self::Trait,\n-            hir::def::DefKind::TyAlias => Self::Typedef,\n-            hir::def::DefKind::TraitAlias => Self::TraitAlias,\n-            hir::def::DefKind::Macro(_) => Self::Macro,\n-            hir::def::DefKind::ForeignTy\n-            | hir::def::DefKind::Variant\n-            | hir::def::DefKind::AssocTy\n-            | hir::def::DefKind::TyParam\n-            | hir::def::DefKind::ConstParam\n-            | hir::def::DefKind::Ctor(..)\n-            | hir::def::DefKind::AssocFn\n-            | hir::def::DefKind::AssocConst\n-            | hir::def::DefKind::ExternCrate\n-            | hir::def::DefKind::Use\n-            | hir::def::DefKind::ForeignMod\n-            | hir::def::DefKind::AnonConst\n-            | hir::def::DefKind::OpaqueTy\n-            | hir::def::DefKind::Field\n-            | hir::def::DefKind::LifetimeParam\n-            | hir::def::DefKind::GlobalAsm\n-            | hir::def::DefKind::Impl\n-            | hir::def::DefKind::Closure\n-            | hir::def::DefKind::Generator => Self::Foreign,\n-        }\n-    }\n-}\n-\n crate trait GetDefId {\n     /// Use this method to get the [`DefId`] of a [`clean`] AST node.\n     /// This will return [`None`] when called on a primitive [`clean::Type`]."}]}