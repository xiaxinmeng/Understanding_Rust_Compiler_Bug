{"sha": "79b0ab5195f0b7f9e05881e775219eea9cc410f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YjBhYjUxOTVmMGI3ZjllMDU4ODFlNzc1MjE5ZWVhOWNjNDEwZjY=", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-06-20T11:31:24Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-30T18:16:23Z"}, "message": "Scope no_mangle and export_name warnings to the declarations name", "tree": {"sha": "4fb89ff2682b41c5a89269b8fc959c99c67443a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fb89ff2682b41c5a89269b8fc959c99c67443a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79b0ab5195f0b7f9e05881e775219eea9cc410f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79b0ab5195f0b7f9e05881e775219eea9cc410f6", "html_url": "https://github.com/rust-lang/rust/commit/79b0ab5195f0b7f9e05881e775219eea9cc410f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79b0ab5195f0b7f9e05881e775219eea9cc410f6/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "url": "https://api.github.com/repos/rust-lang/rust/commits/66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "html_url": "https://github.com/rust-lang/rust/commit/66b2f9acfcb6203090ca2321ce37bb7ae6c07210"}], "stats": {"total": 40, "additions": 20, "deletions": 20}, "files": [{"sha": "89190072a722ae0566e40fc3c1f90e7d21c93758", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/79b0ab5195f0b7f9e05881e775219eea9cc410f6/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b0ab5195f0b7f9e05881e775219eea9cc410f6/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=79b0ab5195f0b7f9e05881e775219eea9cc410f6", "patch": "@@ -279,25 +279,25 @@ impl EarlyLintPass for UnsafeCode {\n \n             ast::ItemKind::Fn(..) => {\n                 if attr::contains_name(&it.attrs, sym::no_mangle) {\n-                    self.report_unsafe(cx, it.span, |lint| {\n+                    self.report_unsafe(cx, it.ident.span, |lint| {\n                         lint.build(\"declaration of a `no_mangle` function\").emit();\n                     })\n                 }\n                 if attr::contains_name(&it.attrs, sym::export_name) {\n-                    self.report_unsafe(cx, it.span, |lint| {\n+                    self.report_unsafe(cx, it.ident.span, |lint| {\n                         lint.build(\"declaration of a function with `export_name`\").emit();\n                     })\n                 }\n             }\n \n             ast::ItemKind::Static(..) => {\n                 if attr::contains_name(&it.attrs, sym::no_mangle) {\n-                    self.report_unsafe(cx, it.span, |lint| {\n+                    self.report_unsafe(cx, it.ident.span, |lint| {\n                         lint.build(\"declaration of a `no_mangle` static\").emit();\n                     })\n                 }\n                 if attr::contains_name(&it.attrs, sym::export_name) {\n-                    self.report_unsafe(cx, it.span, |lint| {\n+                    self.report_unsafe(cx, it.ident.span, |lint| {\n                         lint.build(\"declaration of a static with `export_name`\").emit();\n                     })\n                 }"}, {"sha": "b97c78aef2fd01fe0c21798052133c18181afa2d", "filename": "src/test/ui/lint/lint-unsafe-code.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/79b0ab5195f0b7f9e05881e775219eea9cc410f6/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79b0ab5195f0b7f9e05881e775219eea9cc410f6/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr?ref=79b0ab5195f0b7f9e05881e775219eea9cc410f6", "patch": "@@ -1,8 +1,8 @@\n error: declaration of a `no_mangle` function\n-  --> $DIR/lint-unsafe-code.rs:31:14\n+  --> $DIR/lint-unsafe-code.rs:31:17\n    |\n LL | #[no_mangle] fn foo() {}\n-   |              ^^^^^^^^^^^\n+   |                 ^^^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-unsafe-code.rs:3:9\n@@ -11,22 +11,22 @@ LL | #![deny(unsafe_code)]\n    |         ^^^^^^^^^^^\n \n error: declaration of a `no_mangle` static\n-  --> $DIR/lint-unsafe-code.rs:32:14\n+  --> $DIR/lint-unsafe-code.rs:32:21\n    |\n LL | #[no_mangle] static FOO: u32 = 5;\n-   |              ^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^\n \n error: declaration of a function with `export_name`\n-  --> $DIR/lint-unsafe-code.rs:34:24\n+  --> $DIR/lint-unsafe-code.rs:34:27\n    |\n LL | #[export_name = \"bar\"] fn bar() {}\n-   |                        ^^^^^^^^^^^\n+   |                           ^^^\n \n error: declaration of a static with `export_name`\n-  --> $DIR/lint-unsafe-code.rs:35:24\n+  --> $DIR/lint-unsafe-code.rs:35:31\n    |\n LL | #[export_name = \"BAR\"] static BAR: u32 = 5;\n-   |                        ^^^^^^^^^^^^^^^^^^^^\n+   |                               ^^^\n \n error: declaration of an `unsafe` function\n   --> $DIR/lint-unsafe-code.rs:37:1\n@@ -107,43 +107,43 @@ LL |     unsafe {}\n    |     ^^^^^^^^^\n \n error: declaration of a `no_mangle` function\n-  --> $DIR/lint-unsafe-code.rs:21:22\n+  --> $DIR/lint-unsafe-code.rs:21:25\n    |\n LL |         #[no_mangle] fn foo() {}\n-   |                      ^^^^^^^^^^^\n+   |                         ^^^\n ...\n LL |     unsafe_in_macro!()\n    |     ------------------ in this macro invocation\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: declaration of a `no_mangle` static\n-  --> $DIR/lint-unsafe-code.rs:22:22\n+  --> $DIR/lint-unsafe-code.rs:22:29\n    |\n LL |         #[no_mangle] static FOO: u32 = 5;\n-   |                      ^^^^^^^^^^^^^^^^^^^^\n+   |                             ^^^\n ...\n LL |     unsafe_in_macro!()\n    |     ------------------ in this macro invocation\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: declaration of a function with `export_name`\n-  --> $DIR/lint-unsafe-code.rs:23:32\n+  --> $DIR/lint-unsafe-code.rs:23:35\n    |\n LL |         #[export_name = \"bar\"] fn bar() {}\n-   |                                ^^^^^^^^^^^\n+   |                                   ^^^\n ...\n LL |     unsafe_in_macro!()\n    |     ------------------ in this macro invocation\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: declaration of a static with `export_name`\n-  --> $DIR/lint-unsafe-code.rs:25:32\n+  --> $DIR/lint-unsafe-code.rs:25:39\n    |\n LL |         #[export_name = \"BAR\"] static BAR: u32 = 5;\n-   |                                ^^^^^^^^^^^^^^^^^^^^\n+   |                                       ^^^\n ...\n LL |     unsafe_in_macro!()\n    |     ------------------ in this macro invocation"}]}