{"sha": "70ccda39414afa5bd5a92d3edec005e7830c6420", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwY2NkYTM5NDE0YWZhNWJkNWE5MmQzZWRlYzAwNWU3ODMwYzY0MjA=", "commit": {"author": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-16T04:44:27Z"}, "committer": {"name": "Steffen Lyngbaek", "email": "steffenlyngbaek@gmail.com", "date": "2020-03-16T04:44:27Z"}, "message": "Fix broken tests\n\n- Handle case of no projects. The notification still needs to be posted", "tree": {"sha": "49fc18101ee16fe7e4ec7e5c5edb6a7b0aa75d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49fc18101ee16fe7e4ec7e5c5edb6a7b0aa75d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70ccda39414afa5bd5a92d3edec005e7830c6420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70ccda39414afa5bd5a92d3edec005e7830c6420", "html_url": "https://github.com/rust-lang/rust/commit/70ccda39414afa5bd5a92d3edec005e7830c6420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70ccda39414afa5bd5a92d3edec005e7830c6420/comments", "author": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "slyngbaek", "id": 1216902, "node_id": "MDQ6VXNlcjEyMTY5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/1216902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/slyngbaek", "html_url": "https://github.com/slyngbaek", "followers_url": "https://api.github.com/users/slyngbaek/followers", "following_url": "https://api.github.com/users/slyngbaek/following{/other_user}", "gists_url": "https://api.github.com/users/slyngbaek/gists{/gist_id}", "starred_url": "https://api.github.com/users/slyngbaek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/slyngbaek/subscriptions", "organizations_url": "https://api.github.com/users/slyngbaek/orgs", "repos_url": "https://api.github.com/users/slyngbaek/repos", "events_url": "https://api.github.com/users/slyngbaek/events{/privacy}", "received_events_url": "https://api.github.com/users/slyngbaek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3db4f3716cb67f75d818207b7698cf3464aad57", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3db4f3716cb67f75d818207b7698cf3464aad57", "html_url": "https://github.com/rust-lang/rust/commit/e3db4f3716cb67f75d818207b7698cf3464aad57"}], "stats": {"total": 55, "additions": 29, "deletions": 26}, "files": [{"sha": "917dfad78bfa257f4d0c96ed06642386f5b33c65", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/70ccda39414afa5bd5a92d3edec005e7830c6420/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70ccda39414afa5bd5a92d3edec005e7830c6420/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=70ccda39414afa5bd5a92d3edec005e7830c6420", "patch": "@@ -714,45 +714,48 @@ fn send_startup_progress(\n     world_state: &WorldState,\n ) {\n     let total: usize = world_state.workspaces.iter().map(|it| it.n_packages()).sum();\n+    let prev_progress = loop_state.roots_scanned_progress;\n     let progress = total - world_state.roots_to_scan;\n-    if loop_state.roots_scanned_progress == Some(progress) {\n+    if prev_progress == Some(progress) {\n         return;\n     }\n     loop_state.roots_scanned_progress = Some(progress);\n \n-    match progress {\n-        0 => {\n-            let work_done_progress_create = request_new::<req::WorkDoneProgressCreate>(\n-                loop_state.next_request_id(),\n-                WorkDoneProgressCreateParams {\n-                    token: req::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n-                },\n-            );\n-            sender.send(work_done_progress_create.into()).unwrap();\n-            send_startup_progress_notif(\n-                sender,\n-                WorkDoneProgress::Begin(WorkDoneProgressBegin {\n-                    title: \"rust-analyzer\".into(),\n-                    cancellable: None,\n-                    message: Some(format!(\"{}/{} packages\", progress, total)),\n-                    percentage: Some(100.0 * progress as f64 / total as f64),\n-                }),\n-            );\n-        }\n-        progress if progress == total => send_startup_progress_notif(\n+    if prev_progress.is_none() {\n+        let work_done_progress_create = request_new::<req::WorkDoneProgressCreate>(\n+            loop_state.next_request_id(),\n+            WorkDoneProgressCreateParams {\n+                token: req::ProgressToken::String(\"rustAnalyzer/startup\".into()),\n+            },\n+        );\n+        sender.send(work_done_progress_create.into()).unwrap();\n+        send_startup_progress_notif(\n             sender,\n-            WorkDoneProgress::End(WorkDoneProgressEnd {\n-                message: Some(format!(\"rust-analyzer loaded, {} packages\", progress)),\n+            WorkDoneProgress::Begin(WorkDoneProgressBegin {\n+                title: \"rust-analyzer\".into(),\n+                cancellable: None,\n+                message: Some(format!(\"{}/{} packages\", progress, total)),\n+                percentage: Some(100.0 * progress as f64 / total as f64),\n             }),\n-        ),\n-        progress => send_startup_progress_notif(\n+        );\n+    } else if progress < total {\n+        send_startup_progress_notif(\n             sender,\n             WorkDoneProgress::Report(WorkDoneProgressReport {\n                 cancellable: None,\n                 message: Some(format!(\"{}/{} packages\", progress, total)),\n                 percentage: Some(100.0 * progress as f64 / total as f64),\n             }),\n-        ),\n+        )\n+    }\n+\n+    if progress == total {\n+        send_startup_progress_notif(\n+            sender,\n+            WorkDoneProgress::End(WorkDoneProgressEnd {\n+                message: Some(format!(\"rust-analyzer loaded, {} packages\", progress)),\n+            }),\n+        )\n     }\n }\n "}]}