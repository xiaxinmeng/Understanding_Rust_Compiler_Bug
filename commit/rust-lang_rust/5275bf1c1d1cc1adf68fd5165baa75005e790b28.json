{"sha": "5275bf1c1d1cc1adf68fd5165baa75005e790b28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNzViZjFjMWQxY2MxYWRmNjhmZDUxNjViYWE3NTAwNWU3OTBiMjg=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-05-10T18:01:18Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-06-06T14:30:32Z"}, "message": "linker: Restore the old order of linking native libraries", "tree": {"sha": "d855c8a7f067ab319a9db6277841e18de6754883", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d855c8a7f067ab319a9db6277841e18de6754883"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5275bf1c1d1cc1adf68fd5165baa75005e790b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5275bf1c1d1cc1adf68fd5165baa75005e790b28", "html_url": "https://github.com/rust-lang/rust/commit/5275bf1c1d1cc1adf68fd5165baa75005e790b28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5275bf1c1d1cc1adf68fd5165baa75005e790b28/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7994f9e7e41d75491db3cb4d5197f4e1e6bfa78", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7994f9e7e41d75491db3cb4d5197f4e1e6bfa78", "html_url": "https://github.com/rust-lang/rust/commit/b7994f9e7e41d75491db3cb4d5197f4e1e6bfa78"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "71f5b1e09d022d773775b7b8488f7b52e8a3050a", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5275bf1c1d1cc1adf68fd5165baa75005e790b28/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5275bf1c1d1cc1adf68fd5165baa75005e790b28/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=5275bf1c1d1cc1adf68fd5165baa75005e790b28", "patch": "@@ -1801,16 +1801,17 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n     // such:\n     //\n     // 1. The local object that LLVM just generated\n-    // 2. Upstream rust libraries\n-    // 3. Local native libraries\n+    // 2. Local native libraries\n+    // 3. Upstream rust libraries\n     // 4. Upstream native libraries\n     //\n     // The rationale behind this ordering is that those items lower down in the\n     // list can't depend on items higher up in the list. For example nothing can\n     // depend on what we just generated (e.g., that'd be a circular dependency).\n-    // Upstream rust libraries are not allowed to depend on our local native\n+    // Upstream rust libraries are not supposed to depend on our local native\n     // libraries as that would violate the structure of the DAG, in that\n     // scenario they are required to link to them as well in a shared fashion.\n+    // (The current implementation still doesn't prevent it though, see the FIXME below.)\n     //\n     // Note that upstream rust libraries may contain native dependencies as\n     // well, but they also can't depend on what we just started to add to the\n@@ -1821,6 +1822,14 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n     add_local_crate_metadata_objects(cmd, crate_type, codegen_results);\n     add_local_crate_allocator_objects(cmd, codegen_results);\n \n+    // FIXME: Move this below to other native libraries\n+    // (or alternatively link all native libraries after their respective crates).\n+    // This change is somewhat breaking in practice due to local static libraries being linked\n+    // as whole-archive (#85144), so removing whole-archive may be a pre-requisite.\n+    if sess.opts.debugging_opts.link_native_libraries {\n+        add_local_native_libraries(cmd, sess, codegen_results);\n+    }\n+\n     // Rust libraries.\n     add_upstream_rust_crates::<B>(cmd, sess, codegen_results, crate_type, tmpdir);\n \n@@ -1829,7 +1838,6 @@ fn linker_with_args<'a, B: ArchiveBuilder<'a>>(\n     // external build system already has the native dependencies defined, and it\n     // will provide them to the linker itself.\n     if sess.opts.debugging_opts.link_native_libraries {\n-        add_local_native_libraries(cmd, sess, codegen_results);\n         add_upstream_native_libraries(cmd, sess, codegen_results, crate_type);\n     }\n "}]}