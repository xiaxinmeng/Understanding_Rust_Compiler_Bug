{"sha": "d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be", "node_id": "C_kwDOAAsO6NoAKGQzZDIyZTFlNjY0ZDMzNTE5ZGRjMWI0YmJjMDBjYzkzZWVkM2U3YmU", "commit": {"author": {"name": "KarlWithK", "email": "cjh16@rice.edu", "date": "2022-06-15T06:41:56Z"}, "committer": {"name": "KarlWithK", "email": "cjh16@rice.edu", "date": "2022-06-15T06:41:56Z"}, "message": "Add examples using `add_modify` to HashMap\n\nUpdated the HashMap's documentation to include two references to\nadd_modify.\n\nThe first is when the `Entry` API is mentioned at the beginning. I was\nhesitant to change the \"attack\" example (although I believe that it is\nperfect example of where `add_modify` should be used) because both uses\nwork equally, but one is more idiomatic (`add_modify`).\n\nThe second is with the `entry` function that is used for the `Entry`\nAPI. The code example was a perfect use for `add_modify`, which is why\nit was changed to reflect that.", "tree": {"sha": "549ecf918ea7b04ab810bee22205bb5754313ffa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/549ecf918ea7b04ab810bee22205bb5754313ffa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEfGaKbRPVcpmJ+xJrGDNXtBMguysFAmKpgfQACgkQGDNXtBMg\nuyvu0A/+NiT/WSC2yGvVCXQRqEN1KAAZgL5lAUPHdM7VT2LRHZf3b1WZvTI32KQb\nbZDugSplzBgE7vEuYl7RrOk6jDkO2eelD0oOga4vVi6m+EmO2aj5QUKUo8Mp8FO+\nqbs4RjKpgVooko2z7FNl951MUsKwDcyQff1oCj4k/1REdYX1v6kJkUsBJ0WeXSZb\nqltWlj+4sOyboNJB9wEXLz/dcLGThrNDwzoO+M49oMOFp15R1mVh2OkKWrve7t5Z\naErsHodoHbVHZ0Fn6izjMEs+EgDBs9aamXDpK2sl7BdYWdrWzqWjhBr0i0DMrUUL\nAGAzItc+VxLzRg9qVGyoY/d/+Zt7O772Xb2Z5/xyMbKaMSsM+G60IHcgj9+8A00T\nItsfXYSXgzdrFFQZWNYk36tTIy5KFG/mh1rcPMdHFgyMvZETVAxHvaUJB5+LCN6g\nUtpSq6NLRjocoSoklRoIyFJ36G/aCmFyIrbGF8JH8UfGAoI4Fgz2cYZCpjtg/81z\nWFkZXR5VGPciJGV31IKEvu+YXD+NyqmLezSlU6XLOAEGvxteB4RZPgTkRgNIYaxq\nEXOQnaw83eGz4UcuvrswTywRpXwV9SZj2bmQPSXtG9rHjPbnna4HNeQE0u6uKgum\n9N/4SWZU4emJ1NEGewnrcSK7Z808sAX+h76enx4A4DKBCtjC67Y=\n=BUW5\n-----END PGP SIGNATURE-----", "payload": "tree 549ecf918ea7b04ab810bee22205bb5754313ffa\nparent 2d1e0750792529248ed6f11061940c7203d668c9\nauthor KarlWithK <cjh16@rice.edu> 1655275316 -0500\ncommitter KarlWithK <cjh16@rice.edu> 1655275316 -0500\n\nAdd examples using `add_modify` to HashMap\n\nUpdated the HashMap's documentation to include two references to\nadd_modify.\n\nThe first is when the `Entry` API is mentioned at the beginning. I was\nhesitant to change the \"attack\" example (although I believe that it is\nperfect example of where `add_modify` should be used) because both uses\nwork equally, but one is more idiomatic (`add_modify`).\n\nThe second is with the `entry` function that is used for the `Entry`\nAPI. The code example was a perfect use for `add_modify`, which is why\nit was changed to reflect that.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be", "html_url": "https://github.com/rust-lang/rust/commit/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be/comments", "author": {"login": "SeniorMars", "id": 31679231, "node_id": "MDQ6VXNlcjMxNjc5MjMx", "avatar_url": "https://avatars.githubusercontent.com/u/31679231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeniorMars", "html_url": "https://github.com/SeniorMars", "followers_url": "https://api.github.com/users/SeniorMars/followers", "following_url": "https://api.github.com/users/SeniorMars/following{/other_user}", "gists_url": "https://api.github.com/users/SeniorMars/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeniorMars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeniorMars/subscriptions", "organizations_url": "https://api.github.com/users/SeniorMars/orgs", "repos_url": "https://api.github.com/users/SeniorMars/repos", "events_url": "https://api.github.com/users/SeniorMars/events{/privacy}", "received_events_url": "https://api.github.com/users/SeniorMars/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SeniorMars", "id": 31679231, "node_id": "MDQ6VXNlcjMxNjc5MjMx", "avatar_url": "https://avatars.githubusercontent.com/u/31679231?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SeniorMars", "html_url": "https://github.com/SeniorMars", "followers_url": "https://api.github.com/users/SeniorMars/followers", "following_url": "https://api.github.com/users/SeniorMars/following{/other_user}", "gists_url": "https://api.github.com/users/SeniorMars/gists{/gist_id}", "starred_url": "https://api.github.com/users/SeniorMars/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SeniorMars/subscriptions", "organizations_url": "https://api.github.com/users/SeniorMars/orgs", "repos_url": "https://api.github.com/users/SeniorMars/repos", "events_url": "https://api.github.com/users/SeniorMars/events{/privacy}", "received_events_url": "https://api.github.com/users/SeniorMars/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1e0750792529248ed6f11061940c7203d668c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e0750792529248ed6f11061940c7203d668c9", "html_url": "https://github.com/rust-lang/rust/commit/2d1e0750792529248ed6f11061940c7203d668c9"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "192a21f2ffc2d2eff53645aee1a38ad9ef55aef8", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=d3d22e1e664d33519ddc1b4bbc00cc93eed3e7be", "patch": "@@ -164,6 +164,9 @@ use crate::sys;\n /// // update a key, guarding against the key possibly not being set\n /// let stat = player_stats.entry(\"attack\").or_insert(100);\n /// *stat += random_stat_buff();\n+///\n+/// // modify an entry before an insert with in-place mutation\n+/// player_stats.entry(\"mana\").and_modify(|mana| *mana += 200).or_insert(100);\n /// ```\n ///\n /// The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].\n@@ -829,8 +832,7 @@ where\n     /// let mut letters = HashMap::new();\n     ///\n     /// for ch in \"a short treatise on fungi\".chars() {\n-    ///     let counter = letters.entry(ch).or_insert(0);\n-    ///     *counter += 1;\n+    ///     letters.entry(ch).and_modify(|counter| *counter += 1).or_insert(1);\n     /// }\n     ///\n     /// assert_eq!(letters[&'s'], 2);"}]}