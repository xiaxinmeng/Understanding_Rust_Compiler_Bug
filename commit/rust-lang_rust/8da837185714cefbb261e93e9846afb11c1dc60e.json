{"sha": "8da837185714cefbb261e93e9846afb11c1dc60e", "node_id": "C_kwDOAAsO6NoAKDhkYTgzNzE4NTcxNGNlZmJiMjYxZTkzZTk4NDZhZmIxMWMxZGM2MGU", "commit": {"author": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-12-03T03:29:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-03T03:29:47Z"}, "message": "Merge pull request #5121 from calebcartwright/subtree-sync-2021-12-02\n\nsubtree sync", "tree": {"sha": "32704f39ca53be4c5cb1602b20478fb3d28ee1a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32704f39ca53be4c5cb1602b20478fb3d28ee1a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8da837185714cefbb261e93e9846afb11c1dc60e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqY8rCRBK7hj4Ov3rIwAAwW0IAAqxYo9+yauz6Cc1/xxJyT3p\nmOTm+nR1HU0Jr5GzaQMlYE6FR9HgNqDlCdj/VawuU6fKJELUnlCMtVF/W27onXXR\nqCuohQg6vYJvQn2zQjqorwhC/YAE2U9FBMbEOTyim5qmYILt2oRKLRKmW0schohe\npDtpUhdIYi457njPKa7FsqyCPCH6q2fXTQ+ACaaHPnD7x0WnRm4v+D0NPF3TzXF8\nPnfdyRcZECFdGUg6OVPdMT4GBAb5BcdMdMJwIU8be5Sk4vmwlE4/Nb8lX3JdaUD1\nzic5xXKW0EmrnJS5XG0AtIbM/T4dnh2wO68n76e+nITugEQiMGZSCrgrPfymRiw=\n=i+D7\n-----END PGP SIGNATURE-----\n", "payload": "tree 32704f39ca53be4c5cb1602b20478fb3d28ee1a9\nparent ec46ffd981d3d50572f1ad3f6033a7c33d27033f\nparent e3053225579b7e05650274126006a8a31ef855e8\nauthor Caleb Cartwright <calebcartwright@users.noreply.github.com> 1638502187 -0600\ncommitter GitHub <noreply@github.com> 1638502187 -0600\n\nMerge pull request #5121 from calebcartwright/subtree-sync-2021-12-02\n\nsubtree sync"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8da837185714cefbb261e93e9846afb11c1dc60e", "html_url": "https://github.com/rust-lang/rust/commit/8da837185714cefbb261e93e9846afb11c1dc60e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8da837185714cefbb261e93e9846afb11c1dc60e/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec46ffd981d3d50572f1ad3f6033a7c33d27033f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec46ffd981d3d50572f1ad3f6033a7c33d27033f", "html_url": "https://github.com/rust-lang/rust/commit/ec46ffd981d3d50572f1ad3f6033a7c33d27033f"}, {"sha": "e3053225579b7e05650274126006a8a31ef855e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3053225579b7e05650274126006a8a31ef855e8", "html_url": "https://github.com/rust-lang/rust/commit/e3053225579b7e05650274126006a8a31ef855e8"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "f36bdba26e98e91b8aecad2a4e4d433e7651596d", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8da837185714cefbb261e93e9846afb11c1dc60e/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8da837185714cefbb261e93e9846afb11c1dc60e/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8da837185714cefbb261e93e9846afb11c1dc60e", "patch": "@@ -2219,26 +2219,18 @@ fn rewrite_fn_base(\n         result.push_str(&param_indent.to_string_with_newline(context.config));\n     }\n \n-    // Skip `pub(crate)`.\n-    let lo_after_visibility = get_bytepos_after_visibility(fn_sig.visibility, span);\n-    // A conservative estimation, the goal is to be over all parens in generics\n-    let params_start = fn_sig\n-        .generics\n-        .params\n-        .last()\n-        .map_or(lo_after_visibility, |param| param.span().hi());\n     let params_end = if fd.inputs.is_empty() {\n         context\n             .snippet_provider\n-            .span_after(mk_sp(params_start, span.hi()), \")\")\n+            .span_after(mk_sp(fn_sig.generics.span.hi(), span.hi()), \")\")\n     } else {\n         let last_span = mk_sp(fd.inputs[fd.inputs.len() - 1].span().hi(), span.hi());\n         context.snippet_provider.span_after(last_span, \")\")\n     };\n     let params_span = mk_sp(\n         context\n             .snippet_provider\n-            .span_after(mk_sp(params_start, span.hi()), \"(\"),\n+            .span_after(mk_sp(fn_sig.generics.span.hi(), span.hi()), \"(\"),\n         params_end,\n     );\n     let param_str = rewrite_params("}]}