{"sha": "ba39e5d905dc5a32c1156db780635612deeb2bd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMzllNWQ5MDVkYzVhMzJjMTE1NmRiNzgwNjM1NjEyZGVlYjJiZDA=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-02T19:53:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-03-02T19:53:51Z"}, "message": "Rollup merge of #40166 - aidanhs:aphs-index-coerce, r=nikomatsakis\n\nAllow types passed to [] to coerce, like .index()\n\nFixes #40085\n\nBasically steals the relevant part of [check_argument_types](https://github.com/rust-lang/rust/blob/1.15.1/src/librustc_typeck/check/mod.rs#L2653-L2672).", "tree": {"sha": "bdaa88e5cf3168fc14db53d0171f74d54094110d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdaa88e5cf3168fc14db53d0171f74d54094110d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba39e5d905dc5a32c1156db780635612deeb2bd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba39e5d905dc5a32c1156db780635612deeb2bd0", "html_url": "https://github.com/rust-lang/rust/commit/ba39e5d905dc5a32c1156db780635612deeb2bd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba39e5d905dc5a32c1156db780635612deeb2bd0/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05e0d740a22b327f607dd695b43f7547e0d14864", "url": "https://api.github.com/repos/rust-lang/rust/commits/05e0d740a22b327f607dd695b43f7547e0d14864", "html_url": "https://github.com/rust-lang/rust/commit/05e0d740a22b327f607dd695b43f7547e0d14864"}, {"sha": "c58fff2bb76b055c8276551d54a99aea997c34ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58fff2bb76b055c8276551d54a99aea997c34ed", "html_url": "https://github.com/rust-lang/rust/commit/c58fff2bb76b055c8276551d54a99aea997c34ed"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "d21bb68d4c827d9204306e18c936cb5b149f21d0", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ba39e5d905dc5a32c1156db780635612deeb2bd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba39e5d905dc5a32c1156db780635612deeb2bd0/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=ba39e5d905dc5a32c1156db780635612deeb2bd0", "patch": "@@ -3895,7 +3895,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                   let base_t = self.structurally_resolved_type(expr.span, base_t);\n                   match self.lookup_indexing(expr, base, base_t, idx_t, lvalue_pref) {\n                       Some((index_ty, element_ty)) => {\n-                          self.demand_eqtype(expr.span, index_ty, idx_t);\n+                          self.demand_coerce(idx, idx_t, index_ty);\n                           element_ty\n                       }\n                       None => {"}, {"sha": "b6d02908a0f78a55d264a2a1e91ca7e1ce7f7e9d", "filename": "src/test/run-pass/issue-40085.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/ba39e5d905dc5a32c1156db780635612deeb2bd0/src%2Ftest%2Frun-pass%2Fissue-40085.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba39e5d905dc5a32c1156db780635612deeb2bd0/src%2Ftest%2Frun-pass%2Fissue-40085.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-40085.rs?ref=ba39e5d905dc5a32c1156db780635612deeb2bd0", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::ops::Index;\n+fn bar() {}\n+static UNIT: () = ();\n+struct S;\n+impl Index<fn()> for S {\n+    type Output = ();\n+    fn index(&self, _: fn()) -> &() { &UNIT }\n+}\n+fn main() {\n+    S.index(bar);\n+    S[bar];\n+}"}]}