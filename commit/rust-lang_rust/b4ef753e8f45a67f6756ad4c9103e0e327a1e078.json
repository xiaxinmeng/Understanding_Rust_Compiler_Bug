{"sha": "b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZWY3NTNlOGY0NWE2N2Y2NzU2YWQ0YzkxMDNlMGUzMjdhMWUwNzg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T15:50:16Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T14:02:16Z"}, "message": "Add pretty-printing for const generics\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "0f166cda41204e15aed2a8e7e0e86b87ec7335da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f166cda41204e15aed2a8e7e0e86b87ec7335da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "html_url": "https://github.com/rust-lang/rust/commit/b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4ef753e8f45a67f6756ad4c9103e0e327a1e078/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7695abb7667d2e8b7a010282ad5f44abbc58a58", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7695abb7667d2e8b7a010282ad5f44abbc58a58", "html_url": "https://github.com/rust-lang/rust/commit/d7695abb7667d2e8b7a010282ad5f44abbc58a58"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e7ea90d921e3673a97cbe79e4bc38ad8b7a99709", "filename": "src/librustc_save_analysis/sig.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b4ef753e8f45a67f6756ad4c9103e0e327a1e078/src%2Flibrustc_save_analysis%2Fsig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ef753e8f45a67f6756ad4c9103e0e327a1e078/src%2Flibrustc_save_analysis%2Fsig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fsig.rs?ref=b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "patch": "@@ -646,6 +646,11 @@ impl Sig for ast::Generics {\n                         param_text.push_str(&pprust::bounds_to_string(&param.bounds));\n                         // FIXME descend properly into bounds.\n                     }\n+                    ast::GenericParamKind::Const { ref ty } => {\n+                        param_text.push_str(&pprust::bounds_to_string(&param.bounds));\n+                        param_text.push_str(\"= \");\n+                        param_text.push_str(&pprust::ty_to_string(&ty));\n+                    }\n                 }\n             }\n             text.push_str(&param_text);"}, {"sha": "c670f47b597da97d098b79ab946d53dbfcb9b128", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b4ef753e8f45a67f6756ad4c9103e0e327a1e078/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4ef753e8f45a67f6756ad4c9103e0e327a1e078/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=b4ef753e8f45a67f6756ad4c9103e0e327a1e078", "patch": "@@ -1025,6 +1025,7 @@ impl<'a> State<'a> {\n         match generic_arg {\n             GenericArg::Lifetime(lt) => self.print_lifetime(*lt),\n             GenericArg::Type(ty) => self.print_type(ty),\n+            GenericArg::Const(ct) => self.print_expr(&ct.value),\n         }\n     }\n \n@@ -2929,7 +2930,7 @@ impl<'a> State<'a> {\n                     s.print_outer_attributes_inline(&param.attrs)?;\n                     let lt = ast::Lifetime { id: param.id, ident: param.ident };\n                     s.print_lifetime_bounds(lt, &param.bounds)\n-                },\n+                }\n                 ast::GenericParamKind::Type { ref default } => {\n                     s.print_outer_attributes_inline(&param.attrs)?;\n                     s.print_ident(param.ident)?;\n@@ -2943,6 +2944,15 @@ impl<'a> State<'a> {\n                         _ => Ok(())\n                     }\n                 }\n+                ast::GenericParamKind::Const { ref ty } => {\n+                    s.print_outer_attributes_inline(&param.attrs)?;\n+                    s.word_space(\"const\")?;\n+                    s.print_ident(param.ident)?;\n+                    s.s.space()?;\n+                    s.word_space(\":\")?;\n+                    s.print_type(ty)?;\n+                    s.print_type_bounds(\":\", &param.bounds)\n+                }\n             }\n         })?;\n "}]}