{"sha": "15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZGYzOTUwYWQ0YTFkMmU5ZGViMzBkMGViZGNiOGRjN2RhMDBiNjM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-05T23:12:36Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-05T23:12:36Z"}, "message": "rustc: Remove remaining non-inbounds GEPs", "tree": {"sha": "dc449f38084d9ea3c1fd41dd2b23968a66ecf13b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc449f38084d9ea3c1fd41dd2b23968a66ecf13b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63", "html_url": "https://github.com/rust-lang/rust/commit/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a4c96a196b7b4578b3beec26df22975e2f1bb43", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a4c96a196b7b4578b3beec26df22975e2f1bb43", "html_url": "https://github.com/rust-lang/rust/commit/3a4c96a196b7b4578b3beec26df22975e2f1bb43"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d97e701724611809dbb0536cf751c97d62cbd51c", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=15df3950ad4a1d2e9deb30d0ebdcb8dc7da00b63", "patch": "@@ -288,7 +288,7 @@ fn mk_obstack_token(ccx: crate_ctxt, fcx: fn_ctxt) ->\n // return type, use bump_ptr().\n fn ptr_offs(bcx: block, base: ValueRef, sz: ValueRef) -> ValueRef {\n     let raw = PointerCast(bcx, base, T_ptr(T_i8()));\n-    GEP(bcx, raw, [sz])\n+    InBoundsGEP(bcx, raw, [sz])\n }\n \n // Increment a pointer by a given amount and then cast it to be a pointer\n@@ -2402,12 +2402,12 @@ fn trans_index(cx: block, ex: @ast::expr, base: @ast::expr,\n         trans_fail(bcx, some(ex.span), \"bounds check\")\n     };\n     let elt = if check type_has_static_size(ccx, unit_ty) {\n-        let elt_1 = GEP(bcx, body, [ix_val]);\n+        let elt_1 = InBoundsGEP(bcx, body, [ix_val]);\n         let llunitty = type_of(ccx, unit_ty);\n         PointerCast(bcx, elt_1, T_ptr(llunitty))\n     } else {\n         body = PointerCast(bcx, body, T_ptr(T_i8()));\n-        GEP(bcx, body, [scaled_ix])\n+        InBoundsGEP(bcx, body, [scaled_ix])\n     };\n     ret lval_owned(bcx, elt);\n }"}]}