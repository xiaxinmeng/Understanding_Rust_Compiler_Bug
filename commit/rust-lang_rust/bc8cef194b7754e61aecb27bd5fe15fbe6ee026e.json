{"sha": "bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "node_id": "C_kwDOAAsO6NoAKGJjOGNlZjE5NGI3NzU0ZTYxYWVjYjI3YmQ1ZmUxNWZiZTZlZTAyNmU", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2022-01-22T11:12:12Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2022-01-22T11:14:42Z"}, "message": "rustc_mir_itertools: Avoid needless `collect` with itertools", "tree": {"sha": "0dbd196eac4a18a67f788c0e10087af2e0e5b10c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dbd196eac4a18a67f788c0e10087af2e0e5b10c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "html_url": "https://github.com/rust-lang/rust/commit/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf72996eda4f8af19b0ca7235c6f62e0245a313", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf72996eda4f8af19b0ca7235c6f62e0245a313", "html_url": "https://github.com/rust-lang/rust/commit/ecf72996eda4f8af19b0ca7235c6f62e0245a313"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "ce8b187a744436d4138db17cb6cc7d2270800bbe", "filename": "compiler/rustc_mir_transform/src/coverage/debug.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fdebug.rs?ref=bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "patch": "@@ -111,6 +111,7 @@\n use super::graph::{BasicCoverageBlock, BasicCoverageBlockData, CoverageGraph};\n use super::spans::CoverageSpan;\n \n+use itertools::Itertools;\n use rustc_middle::mir::create_dump_file;\n use rustc_middle::mir::generic_graphviz::GraphvizWriter;\n use rustc_middle::mir::spanview::{self, SpanViewable};\n@@ -739,7 +740,6 @@ pub(super) fn dump_coverage_graphviz<'tcx>(\n                         )\n                     }\n                 })\n-                .collect::<Vec<_>>()\n                 .join(\"\\n  \")\n         ));\n     }\n@@ -768,7 +768,6 @@ fn bcb_to_string_sections<'tcx>(\n                 .map(|expression| {\n                     format!(\"Intermediate {}\", debug_counters.format_counter(expression))\n                 })\n-                .collect::<Vec<_>>()\n                 .join(\"\\n\"),\n         );\n     }\n@@ -783,7 +782,6 @@ fn bcb_to_string_sections<'tcx>(\n                         covspan.format(tcx, mir_body)\n                     )\n                 })\n-                .collect::<Vec<_>>()\n                 .join(\"\\n\"),\n         );\n     }\n@@ -793,7 +791,6 @@ fn bcb_to_string_sections<'tcx>(\n             dependency_counters\n                 .iter()\n                 .map(|counter| debug_counters.format_counter(counter))\n-                .collect::<Vec<_>>()\n                 .join(\"  \\n\"),\n         ));\n     }"}, {"sha": "c0ad1b81d81f51468cd18666eb39bb1eb385cadd", "filename": "compiler/rustc_mir_transform/src/coverage/graph.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fgraph.rs?ref=bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "patch": "@@ -1,5 +1,6 @@\n use super::Error;\n \n+use itertools::Itertools;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::graph::dominators::{self, Dominators};\n use rustc_data_structures::graph::{self, GraphSuccessors, WithNumNodes, WithStartNode};\n@@ -422,14 +423,7 @@ impl BasicCoverageBlockData {\n     }\n \n     pub fn id(&self) -> String {\n-        format!(\n-            \"@{}\",\n-            self.basic_blocks\n-                .iter()\n-                .map(|bb| bb.index().to_string())\n-                .collect::<Vec<_>>()\n-                .join(ID_SEPARATOR)\n-        )\n+        format!(\"@{}\", self.basic_blocks.iter().map(|bb| bb.index().to_string()).join(ID_SEPARATOR))\n     }\n }\n "}, {"sha": "237cb1e11053afe041235e394b0de35e04b5afcb", "filename": "compiler/rustc_mir_transform/src/coverage/spans.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Fspans.rs?ref=bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "patch": "@@ -1,6 +1,7 @@\n use super::debug::term_type;\n use super::graph::{BasicCoverageBlock, BasicCoverageBlockData, CoverageGraph, START_BCB};\n \n+use itertools::Itertools;\n use rustc_data_structures::graph::WithNumNodes;\n use rustc_middle::mir::spanview::source_range_no_file;\n use rustc_middle::mir::{\n@@ -169,11 +170,7 @@ impl CoverageSpan {\n             CoverageStatement::Statement(bb, _, index) => (bb, index),\n             CoverageStatement::Terminator(bb, _) => (bb, usize::MAX),\n         });\n-        sorted_coverage_statements\n-            .iter()\n-            .map(|covstmt| covstmt.format(tcx, mir_body))\n-            .collect::<Vec<_>>()\n-            .join(\"\\n\")\n+        sorted_coverage_statements.iter().map(|covstmt| covstmt.format(tcx, mir_body)).join(\"\\n\")\n     }\n \n     /// If the span is part of a macro, returns the macro name symbol."}, {"sha": "62ea2538ff0d8ce8d4346320e911220ddb7410ce", "filename": "compiler/rustc_mir_transform/src/coverage/tests.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcoverage%2Ftests.rs?ref=bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "patch": "@@ -31,6 +31,7 @@ use super::spans;\n \n use coverage_test_macros::let_bcb;\n \n+use itertools::Itertools;\n use rustc_data_structures::graph::WithNumNodes;\n use rustc_data_structures::graph::WithSuccessors;\n use rustc_index::vec::{Idx, IndexVec};\n@@ -232,11 +233,9 @@ fn print_mir_graphviz(name: &str, mir_body: &Body<'_>) {\n                         mir_body\n                             .successors(bb)\n                             .map(|successor| { format!(\"    {:?} -> {:?};\", bb, successor) })\n-                            .collect::<Vec<_>>()\n                             .join(\"\\n\")\n                     )\n                 })\n-                .collect::<Vec<_>>()\n                 .join(\"\\n\")\n         );\n     }\n@@ -262,11 +261,9 @@ fn print_coverage_graphviz(\n                         basic_coverage_blocks\n                             .successors(bcb)\n                             .map(|successor| { format!(\"    {:?} -> {:?};\", bcb, successor) })\n-                            .collect::<Vec<_>>()\n                             .join(\"\\n\")\n                     )\n                 })\n-                .collect::<Vec<_>>()\n                 .join(\"\\n\")\n         );\n     }"}, {"sha": "450e0c31e982b9d7a64dcd464203c1289af5bbf5", "filename": "compiler/rustc_mir_transform/src/function_item_references.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc8cef194b7754e61aecb27bd5fe15fbe6ee026e/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Ffunction_item_references.rs?ref=bc8cef194b7754e61aecb27bd5fe15fbe6ee026e", "patch": "@@ -1,3 +1,4 @@\n+use itertools::Itertools;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n use rustc_middle::mir::visit::Visitor;\n@@ -197,7 +198,7 @@ impl<'tcx> FunctionItemRefChecker<'_, 'tcx> {\n         let ident = self.tcx.item_name(fn_id).to_ident_string();\n         let ty_params = fn_substs.types().map(|ty| format!(\"{}\", ty));\n         let const_params = fn_substs.consts().map(|c| format!(\"{}\", c));\n-        let params = ty_params.chain(const_params).collect::<Vec<String>>().join(\", \");\n+        let params = ty_params.chain(const_params).join(\", \");\n         let num_args = fn_sig.inputs().map_bound(|inputs| inputs.len()).skip_binder();\n         let variadic = if fn_sig.c_variadic() { \", ...\" } else { \"\" };\n         let ret = if fn_sig.output().skip_binder().is_unit() { \"\" } else { \" -> _\" };"}]}