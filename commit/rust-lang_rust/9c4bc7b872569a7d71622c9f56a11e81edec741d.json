{"sha": "9c4bc7b872569a7d71622c9f56a11e81edec741d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljNGJjN2I4NzI1NjlhN2Q3MTYyMmM5ZjU2YTExZTgxZWRlYzc0MWQ=", "commit": {"author": {"name": "Jeffrey Yasskin", "email": "jyasskin@gmail.com", "date": "2010-07-10T07:43:48Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-07-16T00:13:07Z"}, "message": "In Mach-O shared libraries, avoid counting an extra load command.  Closes #99.", "tree": {"sha": "a5256174cefc0d55df5c68596a7d845cf22d0a92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5256174cefc0d55df5c68596a7d845cf22d0a92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c4bc7b872569a7d71622c9f56a11e81edec741d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c4bc7b872569a7d71622c9f56a11e81edec741d", "html_url": "https://github.com/rust-lang/rust/commit/9c4bc7b872569a7d71622c9f56a11e81edec741d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c4bc7b872569a7d71622c9f56a11e81edec741d/comments", "author": {"login": "jyasskin", "id": 83420, "node_id": "MDQ6VXNlcjgzNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyasskin", "html_url": "https://github.com/jyasskin", "followers_url": "https://api.github.com/users/jyasskin/followers", "following_url": "https://api.github.com/users/jyasskin/following{/other_user}", "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions", "organizations_url": "https://api.github.com/users/jyasskin/orgs", "repos_url": "https://api.github.com/users/jyasskin/repos", "events_url": "https://api.github.com/users/jyasskin/events{/privacy}", "received_events_url": "https://api.github.com/users/jyasskin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cf1fe8dd51fbf27a790571b73d69a5e428be116", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cf1fe8dd51fbf27a790571b73d69a5e428be116", "html_url": "https://github.com/rust-lang/rust/commit/6cf1fe8dd51fbf27a790571b73d69a5e428be116"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "cdb16ba36bf30b94893715d82d04bd47039b1c4b", "filename": "src/boot/be/macho.ml", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c4bc7b872569a7d71622c9f56a11e81edec741d/src%2Fboot%2Fbe%2Fmacho.ml", "raw_url": "https://github.com/rust-lang/rust/raw/9c4bc7b872569a7d71622c9f56a11e81edec741d/src%2Fboot%2Fbe%2Fmacho.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fmacho.ml?ref=9c4bc7b872569a7d71622c9f56a11e81edec741d", "patch": "@@ -591,14 +591,20 @@ let macho_header_32\n     (flags:file_flag list)\n     (loadcmds:frag array) : frag =\n   let load_commands_fixup = new_fixup \"load commands\" in\n+  let count_non_mark so_far elem =\n+    match elem with\n+        MARK -> so_far\n+      | _ -> so_far + 1\n+  in\n   let cmds = DEF (load_commands_fixup, SEQ loadcmds) in\n     SEQ\n     [|\n       WORD (TY_u32, IMM mh_magic);\n       WORD (TY_u32, IMM (cpu_type_code cpu));\n       WORD (TY_u32, IMM (cpu_subtype_code sub));\n       WORD (TY_u32, IMM (file_type_code ftype));\n-      WORD (TY_u32, IMM (Int64.of_int (Array.length loadcmds)));\n+      WORD (TY_u32,\n+            IMM (Int64.of_int (Array.fold_left count_non_mark 0 loadcmds)));\n       WORD (TY_u32, F_SZ load_commands_fixup);\n       WORD (TY_u32, IMM (fold_flags file_flag_code flags));\n       cmds"}]}