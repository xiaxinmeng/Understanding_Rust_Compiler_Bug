{"sha": "7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "node_id": "C_kwDOAAsO6NoAKDdiMmE1ZjI4NGUxNTU3NzVlNGEyZjllMzRiOWQ0NzQwMzNjY2U2ZDI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-09T12:23:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-09T12:23:16Z"}, "message": "dont rely on old macro-in-trait-impl bug", "tree": {"sha": "ecdc61feadf99d100880ea02b7cc9e58ebc73f2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecdc61feadf99d100880ea02b7cc9e58ebc73f2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "html_url": "https://github.com/rust-lang/rust/commit/7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b2a5f284e155775e4a2f9e34b9d474033cce6d2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be6bb56ee0c88353a01675c4cc525020f1d3137a", "url": "https://api.github.com/repos/rust-lang/rust/commits/be6bb56ee0c88353a01675c4cc525020f1d3137a", "html_url": "https://github.com/rust-lang/rust/commit/be6bb56ee0c88353a01675c4cc525020f1d3137a"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "9b9919fcc2a3da2f695c836ef1c9b74307898374", "filename": "compiler/rustc_const_eval/src/interpret/machine.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7b2a5f284e155775e4a2f9e34b9d474033cce6d2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2a5f284e155775e4a2f9e34b9d474033cce6d2/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs?ref=7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "patch": "@@ -436,24 +436,12 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     type AllocExtra = ();\n     type FrameExtra = ();\n \n-    #[inline(always)]\n-    fn enforce_alignment(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n-        // We do not check for alignment to avoid having to carry an `Align`\n-        // in `ConstValue::ByRef`.\n-        false\n-    }\n-\n     #[inline(always)]\n     fn force_int_for_alignment_check(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n         // We do not support `force_int`.\n         false\n     }\n \n-    #[inline(always)]\n-    fn enforce_validity(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n-        false // for now, we don't enforce validity\n-    }\n-\n     #[inline(always)]\n     fn enforce_number_init(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n         true"}, {"sha": "1ead691e1b331f91f0a8f00c3853780eaf3d4d02", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7b2a5f284e155775e4a2f9e34b9d474033cce6d2/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b2a5f284e155775e4a2f9e34b9d474033cce6d2/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=7b2a5f284e155775e4a2f9e34b9d474033cce6d2", "patch": "@@ -183,6 +183,18 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for ConstPropMachine<'mir, 'tcx>\n \n     type MemoryKind = !;\n \n+    #[inline(always)]\n+    fn enforce_alignment(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool {\n+        // We do not check for alignment to avoid having to carry an `Align`\n+        // in `ConstValue::ByRef`.\n+        false\n+    }\n+\n+    #[inline(always)]\n+    fn enforce_validity(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool {\n+        false // for now, we don't enforce validity\n+    }\n+\n     fn load_mir(\n         _ecx: &InterpCx<'mir, 'tcx, Self>,\n         _instance: ty::InstanceDef<'tcx>,"}]}