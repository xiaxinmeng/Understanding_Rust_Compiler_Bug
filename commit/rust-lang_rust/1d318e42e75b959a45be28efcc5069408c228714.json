{"sha": "1d318e42e75b959a45be28efcc5069408c228714", "node_id": "C_kwDOAAsO6NoAKDFkMzE4ZTQyZTc1Yjk1OWE0NWJlMjhlZmNjNTA2OTQwOGMyMjg3MTQ", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-03-26T00:08:35Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-04-11T19:22:32Z"}, "message": "Improve MIR phases documentation with summaries of changes", "tree": {"sha": "484c91510d54fd897dec5833385515bffdebee87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/484c91510d54fd897dec5833385515bffdebee87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d318e42e75b959a45be28efcc5069408c228714", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d318e42e75b959a45be28efcc5069408c228714", "html_url": "https://github.com/rust-lang/rust/commit/1d318e42e75b959a45be28efcc5069408c228714", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d318e42e75b959a45be28efcc5069408c228714/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2d7908ff761c25e642e45fcabc820318e4ecf92", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d7908ff761c25e642e45fcabc820318e4ecf92", "html_url": "https://github.com/rust-lang/rust/commit/f2d7908ff761c25e642e45fcabc820318e4ecf92"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "4d124da43ecb5635f95dc047f555e7279b742b25", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1d318e42e75b959a45be28efcc5069408c228714/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d318e42e75b959a45be28efcc5069408c228714/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=1d318e42e75b959a45be28efcc5069408c228714", "patch": "@@ -127,12 +127,24 @@ pub trait MirPass<'tcx> {\n /// The various \"big phases\" that MIR goes through.\n ///\n /// These phases all describe dialects of MIR. Since all MIR uses the same datastructures, the\n-/// dialects forbid certain variants or values in certain phases.\n+/// dialects forbid certain variants or values in certain phases. The sections below summarize the\n+/// changes, but do not document them thoroughly. The full documentation is found in the appropriate\n+/// documentation for the thing the change is affecting.\n ///\n /// Warning: ordering of variants is significant.\n #[derive(Copy, Clone, TyEncodable, TyDecodable, Debug, PartialEq, Eq, PartialOrd, Ord)]\n #[derive(HashStable)]\n pub enum MirPhase {\n+    /// The dialect of MIR used during all phases before `DropsLowered` is the same. This is also\n+    /// the MIR that analysis such as borrowck uses.\n+    ///\n+    /// One important thing to remember about the behavior of this section of MIR is that drop terminators\n+    /// (including drop and replace) are *conditional*. The elaborate drops pass will then replace each\n+    /// instance of a drop terminator with a nop, an unconditional drop, or a drop conditioned on a drop\n+    /// flag. Of course, this means that it is important that the drop elaboration can accurately recognize\n+    /// when things are initialized and when things are de-initialized. That means any code running on this\n+    /// version of MIR must be sure to produce output that drop elaboration can reason about. See the\n+    /// section on the drop terminatorss for more details.\n     Built = 0,\n     // FIXME(oli-obk): it's unclear whether we still need this phase (and its corresponding query).\n     // We used to have this for pre-miri MIR based const eval.\n@@ -162,6 +174,16 @@ pub enum MirPhase {\n     /// And the following variant is allowed:\n     /// * [`StatementKind::SetDiscriminant`]\n     Deaggregated = 4,\n+    /// Before this phase, generators are in the \"source code\" form, featuring `yield` statements\n+    /// and such. With this phase change, they are transformed into a proper state machine. Running\n+    /// optimizations before this change can be potentially dangerous because the source code is to\n+    /// some extent a \"lie.\" In particular, `yield` terminators effectively make the value of all\n+    /// locals visible to the caller. This means that dead store elimination before them, or code\n+    /// motion across them, is not correct in general. This is also exasperated by type checking\n+    /// having pre-computed a list of the types that it thinks are ok to be live across a yield\n+    /// point - this is necessary to decide eg whether autotraits are implemented. Introducing new\n+    /// types across a yield point will lead to ICEs becaues of this.\n+    ///\n     /// Beginning with this phase, the following variants are disallowed:\n     /// * [`TerminatorKind::Yield`](terminator::TerminatorKind::Yield)\n     /// * [`TerminatorKind::GeneratorDrop](terminator::TerminatorKind::GeneratorDrop)"}]}