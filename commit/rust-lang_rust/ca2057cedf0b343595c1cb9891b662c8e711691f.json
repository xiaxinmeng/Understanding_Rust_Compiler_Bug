{"sha": "ca2057cedf0b343595c1cb9891b662c8e711691f", "node_id": "C_kwDOAAsO6NoAKGNhMjA1N2NlZGYwYjM0MzU5NWMxY2I5ODkxYjY2MmM4ZTcxMTY5MWY", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2021-11-11T23:15:50Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2021-11-22T22:57:33Z"}, "message": "Fix comments", "tree": {"sha": "88e3fc6ae548c1de1c9b0c235e86638cb27bca6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88e3fc6ae548c1de1c9b0c235e86638cb27bca6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca2057cedf0b343595c1cb9891b662c8e711691f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2057cedf0b343595c1cb9891b662c8e711691f", "html_url": "https://github.com/rust-lang/rust/commit/ca2057cedf0b343595c1cb9891b662c8e711691f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca2057cedf0b343595c1cb9891b662c8e711691f/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dfa0db59610811529c08c6866712ddefe0e14196", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfa0db59610811529c08c6866712ddefe0e14196", "html_url": "https://github.com/rust-lang/rust/commit/dfa0db59610811529c08c6866712ddefe0e14196"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d3fc6e9e251586cafbe703f872a32f82a84a98a5", "filename": "compiler/rustc_ast_lowering/src/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2057cedf0b343595c1cb9891b662c8e711691f/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2057cedf0b343595c1cb9891b662c8e711691f/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fexpr.rs?ref=ca2057cedf0b343595c1cb9891b662c8e711691f", "patch": "@@ -752,14 +752,14 @@ impl<'hir> LoweringContext<'_, 'hir> {\n             await_span,\n             self.allow_into_future.clone(),\n         );\n-        //let expr = self.lower_expr_mut(expr);\n         let into_future_expr = self.expr_call_lang_item_fn(\n             into_future_span,\n             hir::LangItem::IntoFutureIntoFuture,\n             arena_vec![self; expr],\n         );\n \n-        // match <into_future_expr> {        //     mut pinned => loop { .. }\n+        // match <into_future_expr> {\n+        //     mut pinned => loop { .. }\n         // }\n         hir::ExprKind::Match(\n             into_future_expr,"}]}