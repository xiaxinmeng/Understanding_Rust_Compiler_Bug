{"sha": "c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1Y2Q0Y2I1MWUxYTc3Y2Q0ZjEwY2UyZDA0ZmMyOTYyMTM1NGFmYzk=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-04-26T19:37:12Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2017-04-26T19:37:12Z"}, "message": "Add a distcheck for rust-src completeness", "tree": {"sha": "f192ba9a7d938ab2c6248df931b4fe0dcdf2d8ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f192ba9a7d938ab2c6248df931b4fe0dcdf2d8ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "html_url": "https://github.com/rust-lang/rust/commit/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9bdb1766d68dbe5da0e0cd65b2227186004d2cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9bdb1766d68dbe5da0e0cd65b2227186004d2cf", "html_url": "https://github.com/rust-lang/rust/commit/b9bdb1766d68dbe5da0e0cd65b2227186004d2cf"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "f8b3ee0edc8eeb2ff7b16dc3c43c7261aaf4c831", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "patch": "@@ -663,6 +663,7 @@ pub fn distcheck(build: &Build) {\n         return\n     }\n \n+    println!(\"Distcheck\");\n     let dir = build.out.join(\"tmp\").join(\"distcheck\");\n     let _ = fs::remove_dir_all(&dir);\n     t!(fs::create_dir_all(&dir));\n@@ -680,6 +681,26 @@ pub fn distcheck(build: &Build) {\n     build.run(Command::new(build_helper::make(&build.config.build))\n                      .arg(\"check\")\n                      .current_dir(&dir));\n+\n+    // Now make sure that rust-src has all of libstd's dependencies\n+    println!(\"Distcheck rust-src\");\n+    let dir = build.out.join(\"tmp\").join(\"distcheck-src\");\n+    let _ = fs::remove_dir_all(&dir);\n+    t!(fs::create_dir_all(&dir));\n+\n+    let mut cmd = Command::new(\"tar\");\n+    cmd.arg(\"-xzf\")\n+       .arg(dist::rust_src_installer(build))\n+       .arg(\"--strip-components=1\")\n+       .current_dir(&dir);\n+    build.run(&mut cmd);\n+\n+    let toml = dir.join(\"rust-src/lib/rustlib/src/rust/src/libstd/Cargo.toml\");\n+    build.run(Command::new(&build.cargo)\n+                     .arg(\"generate-lockfile\")\n+                     .arg(\"--manifest-path\")\n+                     .arg(&toml)\n+                     .current_dir(&dir));\n }\n \n /// Test the build system itself"}, {"sha": "5db9ac8295fb1644fd6c7c77211fa1dac502aa68", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=c5cd4cb51e1a77cd4f10ce2d04fc29621354afc9", "patch": "@@ -310,11 +310,18 @@ pub fn std(build: &Build, compiler: &Compiler, target: &str) {\n     t!(fs::remove_dir_all(&image));\n }\n \n+/// The path to the complete rustc-src tarball\n pub fn rust_src_location(build: &Build) -> PathBuf {\n     let plain_name = format!(\"rustc-{}-src\", build.rust_package_vers());\n     distdir(build).join(&format!(\"{}.tar.gz\", plain_name))\n }\n \n+/// The path to the rust-src component installer\n+pub fn rust_src_installer(build: &Build) -> PathBuf {\n+    let name = pkgname(build, \"rust-src\");\n+    distdir(build).join(&format!(\"{}.tar.gz\", name))\n+}\n+\n /// Creates a tarball of save-analysis metadata, if available.\n pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     assert!(build.config.extended);"}]}