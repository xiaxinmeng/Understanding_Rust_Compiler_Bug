{"sha": "5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZmNmMjBiMjU2MTBjZWViZWRmMzhkMGQ5ZTczYmZmM2UxMWQwMDI=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-19T20:17:47Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-20T07:38:40Z"}, "message": "rustc: Cleanup unused ext_map", "tree": {"sha": "b365ab8b0421325cad8b2f463038a3b5f5eeae0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b365ab8b0421325cad8b2f463038a3b5f5eeae0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "html_url": "https://github.com/rust-lang/rust/commit/5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e3ffb6cbd90793041d612d3a1a7941c8ee0cf80", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3ffb6cbd90793041d612d3a1a7941c8ee0cf80", "html_url": "https://github.com/rust-lang/rust/commit/5e3ffb6cbd90793041d612d3a1a7941c8ee0cf80"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "feb850fc8fc0b76e11dc68a17ebd3d5e27ab3bdf", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "patch": "@@ -163,15 +163,15 @@ fn compile_input(sess: session::session, cfg: ast::crate_cfg, input: str,\n              bind middle::ast_map::map_crate(*crate));\n     time(time_passes, \"external crate/lib resolution\",\n          bind creader::read_crates(sess, *crate));\n-    let {def_map, ext_map, exp_map, impl_map} =\n+    let {def_map, exp_map, impl_map} =\n         time(time_passes, \"resolution\",\n              bind resolve::resolve_crate(sess, ast_map, crate));\n     let freevars =\n         time(time_passes, \"freevar finding\",\n              bind freevars::annotate_freevars(def_map, crate));\n     time(time_passes, \"const checking\",\n          bind middle::check_const::check_crate(sess, crate));\n-    let ty_cx = ty::mk_ctxt(sess, def_map, ext_map, ast_map, freevars);\n+    let ty_cx = ty::mk_ctxt(sess, def_map, ast_map, freevars);\n     let method_map = time(time_passes, \"typechecking\",\n                           bind typeck::check_crate(ty_cx, impl_map, crate));\n     time(time_passes, \"block-use checking\",\n@@ -270,10 +270,10 @@ fn pretty_print_input(sess: session::session, cfg: ast::crate_cfg, input: str,\n       ppm_typed. {\n         crate = syntax::ext::expand::expand_crate(sess, crate);\n         let amap = middle::ast_map::map_crate(*crate);\n-        let {def_map, ext_map, impl_map, _} =\n+        let {def_map, impl_map, _} =\n             resolve::resolve_crate(sess, amap, crate);\n         let freevars = freevars::annotate_freevars(def_map, crate);\n-        let ty_cx = ty::mk_ctxt(sess, def_map, ext_map, amap, freevars);\n+        let ty_cx = ty::mk_ctxt(sess, def_map, amap, freevars);\n         typeck::check_crate(ty_cx, impl_map, crate);\n         ann = {pre: ann_paren_for_expr, post: bind ann_typed_post(ty_cx, _)};\n       }"}, {"sha": "df57c71b367ff7f634c792798feac4ea6459fae9", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "patch": "@@ -151,8 +151,7 @@ tag dir { inside; outside; }\n tag namespace { ns_value; ns_type; ns_module; }\n \n fn resolve_crate(sess: session, amap: ast_map::map, crate: @ast::crate) ->\n-   {def_map: def_map, ext_map: ext_map,\n-    exp_map: exp_map, impl_map: impl_map} {\n+   {def_map: def_map, exp_map: exp_map, impl_map: impl_map} {\n     let e =\n         @{cstore: sess.get_cstore(),\n           def_map: new_int_hash(),\n@@ -178,8 +177,7 @@ fn resolve_crate(sess: session, amap: ast_map::map, crate: @ast::crate) ->\n     if sess.get_opts().warn_unused_imports {\n         check_unused_imports(e);\n     }\n-    ret {def_map: e.def_map, ext_map: e.ext_map,\n-         exp_map: e.exp_map, impl_map: e.impl_map};\n+    ret {def_map: e.def_map, exp_map: e.exp_map, impl_map: e.impl_map};\n }\n \n // Locate all modules and imports and index them, so that the next passes can"}, {"sha": "fa5c5e0bffd1f5e41f426d2f88d2b3a2a2ae016c", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cfcf20b25610ceebedf38d0d9e73bff3e11d002/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=5cfcf20b25610ceebedf38d0d9e73bff3e11d002", "patch": "@@ -411,8 +411,7 @@ fn mk_rcache() -> creader_cache {\n }\n \n \n-fn mk_ctxt(s: session::session, dm: resolve::def_map,\n-           _em: hashmap<def_id, [ident]>, amap: ast_map::map,\n+fn mk_ctxt(s: session::session, dm: resolve::def_map, amap: ast_map::map,\n            freevars: freevars::freevar_map) -> ctxt {\n     let ntt: node_type_table =\n         @smallintmap::mk::<ty::ty_param_substs_opt_and_ty>();"}]}