{"sha": "8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYjdkYmE5YzdmZWUzZTU1YTZhZWJlNzNhMWU2NTNhM2FmOWY4MWE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-02T15:21:13Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2017-09-02T15:21:13Z"}, "message": "Dont abort on first macro error", "tree": {"sha": "bc1c8ed7a0d830d5f5a1f9e57bf302a323c321d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc1c8ed7a0d830d5f5a1f9e57bf302a323c321d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQIcBAABCgAGBQJZqsxrAAoJEEpHzFJ6U7W84Q4P/3PuAp7R7PUHpCAk4fvjYc0W\n8vE4kOPMAaTcWmyTbSE+gUPnYcfVuwrzBO9nvfqvIrqjICqjLOw5H760XGpu3j2q\nTo8G7Sh6IAsAE2me8fDdlMgB0VMt++aelhYJjT5MIlZCDBtGT1TXbjhMLjWHrVvx\nPJkgICcoOIdL7Ce3BwY2p6SJhCUU9A/1p3Ey1kchbeuRDxkFlXfm1pHzxwkJO2Go\nMs8Y7ZmchCrVUX5exKU3nbrLk5fyjLCT+ome9liPIk0tD13y68cu/BKFgtkEPeCx\nXy47byE1vfv7jYyipUwDXqsd+Sd08/0HMynI+IQmgp43CohWVXZfnwizqTBNrsgc\nYMWAe41yiU1Pm2FwV6yVVEBwoi14vkFM4agDyphL+7v0cUJKGFUFSsO1FUxfSUPk\nuBtqHNrdAthtUZqUpaZrp0tKWAsan+twaGYe+bVHnODTnU765UAoCVXdVQEckpjh\nv1pNsn5bACsERUDwRuYPu5J77feLRrPCy2kUXz7kBJFFkQm3Mq49y1CXpyaZx3yw\nF9oZ0Ma7ACTGlhZ1GloSykE+QI2SdezvNPRNBeVD1t+DQezbWxWnLmCpbfR3CZ9E\nJcPj2Y0E01S8CyZ69z4uPtuD0dGwPQZN3LI5zU8+Fzr1BJTWjcyrhKRMzc+dYy9I\nBr0rZtkh74nY+lLaLNLW\n=zfTX\n-----END PGP SIGNATURE-----", "payload": "tree bc1c8ed7a0d830d5f5a1f9e57bf302a323c321d9\nparent 878013cd0c33e0aede78a6d0b5a579d9c2733844\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1504365673 +0200\ncommitter bjorn3 <bjorn3@users.noreply.github.com> 1504365673 +0200\n\nDont abort on first macro error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "html_url": "https://github.com/rust-lang/rust/commit/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "878013cd0c33e0aede78a6d0b5a579d9c2733844", "url": "https://api.github.com/repos/rust-lang/rust/commits/878013cd0c33e0aede78a6d0b5a579d9c2733844", "html_url": "https://github.com/rust-lang/rust/commit/878013cd0c33e0aede78a6d0b5a579d9c2733844"}], "stats": {"total": 140, "additions": 139, "deletions": 1}, "files": [{"sha": "be6571d7e5550c81b7c50e371e9d6afd37ff28a3", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "patch": "@@ -172,7 +172,9 @@ fn generic_extension<'cx>(cx: &'cx mut ExtCtxt,\n     }\n \n     let best_fail_msg = parse_failure_msg(best_fail_tok.expect(\"ran no matchers\"));\n-    cx.span_fatal(best_fail_spot.substitute_dummy(sp), &best_fail_msg);\n+    cx.span_err(best_fail_spot.substitute_dummy(sp), &best_fail_msg);\n+    cx.trace_macros_diag();\n+    DummyResult::any(sp)\n }\n \n // Note that macro-by-example's input is also matched against a token tree:"}, {"sha": "1b46e94584e6b33d507b03b99fa0dc8734102a11", "filename": "src/test/ui/macros/assert_eq_trailing_comma.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_eq_trailing_comma.stderr?ref=8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "patch": "@@ -4,3 +4,5 @@ error: unexpected end of macro invocation\n 12 |     assert_eq!(1, 1,);\n    |                    ^\n \n+error: aborting due to previous error\n+"}, {"sha": "33d2cb0ed82429207921e38d6e35563e82c83175", "filename": "src/test/ui/macros/assert_ne_trailing_comma.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert_ne_trailing_comma.stderr?ref=8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "patch": "@@ -4,3 +4,5 @@ error: unexpected end of macro invocation\n 12 |     assert_ne!(1, 2,);\n    |                    ^\n \n+error: aborting due to previous error\n+"}, {"sha": "3b2d7ee5b757df04ad2e03dd1579a1eac0ab5395", "filename": "src/test/ui/macros/trace_faulty_macros.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.rs?ref=8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "patch": "@@ -0,0 +1,55 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z trace-macros\n+\n+#![recursion_limit=\"4\"]\n+\n+macro_rules! my_faulty_macro {\n+    () => {\n+        my_faulty_macro!(bcd);\n+    };\n+}\n+\n+macro_rules! nested_pat_macro {\n+    () => {\n+        nested_pat_macro!(inner);\n+    };\n+    (inner) => {\n+        a | b | 1 ... 3 | _\n+    }\n+}\n+\n+macro_rules! my_recursive_macro {\n+    () => {\n+        my_recursive_macro!();\n+    };\n+}\n+\n+macro_rules! my_macro {\n+    () => {\n+        \n+    };\n+}\n+\n+fn main() {\n+    my_faulty_macro!();\n+    nested_pat_macro!();\n+    my_recursive_macro!();\n+    test!();\n+    non_exisiting!();\n+    derive!(Debug);\n+}\n+\n+#[my_macro]\n+fn use_bang_macro_as_attr(){}\n+\n+#[derive(Debug)]\n+fn use_derive_macro_as_attr(){}"}, {"sha": "1fd8511f181efbf0c1e8d164a398ed4332ef35a2", "filename": "src/test/ui/macros/trace_faulty_macros.stderr", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr?ref=8bb7dba9c7fee3e55a6aebe73a1e653a3af9f81a", "patch": "@@ -0,0 +1,77 @@\n+error: no rules expected the token `bcd`\n+  --> $DIR/trace_faulty_macros.rs:17:26\n+   |\n+17 |         my_faulty_macro!(bcd);\n+   |                          ^^^\n+...\n+43 |     my_faulty_macro!();\n+   |     ------------------- in this macro invocation\n+\n+note: trace_macro\n+  --> $DIR/trace_faulty_macros.rs:43:5\n+   |\n+43 |     my_faulty_macro!();\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `my_faulty_macro! {  }`\n+   = note: to `my_faulty_macro ! ( bcd ) ;`\n+   = note: expanding `my_faulty_macro! { bcd }`\n+\n+error: expected expression, found `_`\n+  --> $DIR/trace_faulty_macros.rs:26:27\n+   |\n+26 |         a | b | 1 ... 3 | _\n+   |                           ^\n+...\n+44 |     nested_pat_macro!();\n+   |     -------------------- in this macro invocation\n+\n+error: recursion limit reached while expanding the macro `my_recursive_macro`\n+  --> $DIR/trace_faulty_macros.rs:32:9\n+   |\n+32 |         my_recursive_macro!();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^\n+...\n+45 |     my_recursive_macro!();\n+   |     ---------------------- in this macro invocation\n+   |\n+   = help: consider adding a `#![recursion_limit=\"8\"]` attribute to your crate\n+\n+note: trace_macro\n+  --> $DIR/trace_faulty_macros.rs:45:5\n+   |\n+45 |     my_recursive_macro!();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `my_recursive_macro! {  }`\n+   = note: to `my_recursive_macro ! (  ) ;`\n+   = note: expanding `my_recursive_macro! {  }`\n+   = note: to `my_recursive_macro ! (  ) ;`\n+   = note: expanding `my_recursive_macro! {  }`\n+   = note: to `my_recursive_macro ! (  ) ;`\n+   = note: expanding `my_recursive_macro! {  }`\n+   = note: to `my_recursive_macro ! (  ) ;`\n+   = note: expanding `my_recursive_macro! {  }`\n+   = note: to `my_recursive_macro ! (  ) ;`\n+\n+note: trace_macro\n+  --> $DIR/trace_faulty_macros.rs:43:5\n+   |\n+43 |     my_faulty_macro!();\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `my_faulty_macro! {  }`\n+   = note: to `my_faulty_macro ! ( bcd ) ;`\n+   = note: expanding `my_faulty_macro! { bcd }`\n+\n+note: trace_macro\n+  --> $DIR/trace_faulty_macros.rs:44:5\n+   |\n+44 |     nested_pat_macro!();\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: expanding `nested_pat_macro! {  }`\n+   = note: to `nested_pat_macro ! ( inner ) ;`\n+   = note: expanding `nested_pat_macro! { inner }`\n+   = note: to `a | b | 1 ... 3 | _`\n+"}]}