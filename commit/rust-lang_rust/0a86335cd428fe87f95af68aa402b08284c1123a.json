{"sha": "0a86335cd428fe87f95af68aa402b08284c1123a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhODYzMzVjZDQyOGZlODdmOTVhZjY4YWE0MDJiMDgyODRjMTEyM2E=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-14T15:07:46Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-15T07:37:11Z"}, "message": "implement type_implments_trait query", "tree": {"sha": "05e480748c8ddbd8229e29f5acda0bf0817d81f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e480748c8ddbd8229e29f5acda0bf0817d81f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a86335cd428fe87f95af68aa402b08284c1123a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a86335cd428fe87f95af68aa402b08284c1123a", "html_url": "https://github.com/rust-lang/rust/commit/0a86335cd428fe87f95af68aa402b08284c1123a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a86335cd428fe87f95af68aa402b08284c1123a/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51158cc71f43dc5986e1e503339ba093db5cc511", "url": "https://api.github.com/repos/rust-lang/rust/commits/51158cc71f43dc5986e1e503339ba093db5cc511", "html_url": "https://github.com/rust-lang/rust/commit/51158cc71f43dc5986e1e503339ba093db5cc511"}], "stats": {"total": 18, "additions": 2, "deletions": 16}, "files": [{"sha": "84a324f76c5b67fd6e6766c1228340eb88c7d245", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0a86335cd428fe87f95af68aa402b08284c1123a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a86335cd428fe87f95af68aa402b08284c1123a/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=0a86335cd428fe87f95af68aa402b08284c1123a", "patch": "@@ -40,15 +40,12 @@ use rustc_hir::{\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n use rustc_middle::hir::map::Map;\n-use rustc_middle::traits;\n use rustc_middle::ty::{self, layout::IntegerExt, subst::GenericArg, Binder, Ty, TyCtxt, TypeFoldable};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::original_sp;\n use rustc_span::symbol::{self, kw, Symbol};\n use rustc_span::{BytePos, Pos, Span, DUMMY_SP};\n use rustc_target::abi::Integer;\n-use rustc_trait_selection::traits::predicate_for_trait_def;\n-use rustc_trait_selection::traits::query::evaluate_obligation::InferCtxtExt;\n use rustc_trait_selection::traits::query::normalize::AtExt;\n use smallvec::SmallVec;\n \n@@ -326,19 +323,8 @@ pub fn implements_trait<'a, 'tcx>(\n     trait_id: DefId,\n     ty_params: &[GenericArg<'tcx>],\n ) -> bool {\n-    let ty = cx.tcx.erase_regions(&ty);\n-    let obligation = predicate_for_trait_def(\n-        cx.tcx,\n-        cx.param_env,\n-        traits::ObligationCause::dummy(),\n-        trait_id,\n-        0,\n-        ty,\n-        ty_params,\n-    );\n-    cx.tcx\n-        .infer_ctxt()\n-        .enter(|infcx| infcx.predicate_must_hold_modulo_regions(&obligation))\n+    let ty_params = cx.tcx.mk_substs(ty_params.iter());\n+    cx.tcx.type_implements_trait((trait_id, ty, ty_params, cx.param_env))\n }\n \n /// Gets the `hir::TraitRef` of the trait the given method is implemented for."}]}