{"sha": "a8421cacfec5798f600549508545b85003c2143c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDIxY2FjZmVjNTc5OGY2MDA1NDk1MDg1NDViODUwMDNjMjE0M2M=", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-09-10T20:33:44Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-09-10T20:33:44Z"}, "message": "Fix error recovery in format macro parsing", "tree": {"sha": "902d5a99752395044426bc91dee2c15ce2eff68e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/902d5a99752395044426bc91dee2c15ce2eff68e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8421cacfec5798f600549508545b85003c2143c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8421cacfec5798f600549508545b85003c2143c", "html_url": "https://github.com/rust-lang/rust/commit/a8421cacfec5798f600549508545b85003c2143c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8421cacfec5798f600549508545b85003c2143c/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "497ee321af3b8496eaccd7af7b437f18bab81abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/497ee321af3b8496eaccd7af7b437f18bab81abf", "html_url": "https://github.com/rust-lang/rust/commit/497ee321af3b8496eaccd7af7b437f18bab81abf"}], "stats": {"total": 112, "additions": 94, "deletions": 18}, "files": [{"sha": "cbed1bb850c426bf1250924ef29d3f75577c506f", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a8421cacfec5798f600549508545b85003c2143c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8421cacfec5798f600549508545b85003c2143c/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=a8421cacfec5798f600549508545b85003c2143c", "patch": "@@ -164,23 +164,22 @@ fn parse_args<'a>(\n                 p.clear_expected_tokens();\n             }\n \n-            // `Parser::expect` tries to recover using the\n-            // `Parser::unexpected_try_recover` function. This function is able\n-            // to recover if the expected token is a closing delimiter.\n-            //\n-            // As `,` is not a closing delimiter, it will always return an `Err`\n-            // variant.\n-            let mut err = p.expect(&token::Comma).unwrap_err();\n-\n-            match token::TokenKind::Comma.similar_tokens() {\n-                Some(tks) if tks.contains(&p.token.kind) => {\n-                    // If a similar token is found, then it may be a typo. We\n-                    // consider it as a comma, and continue parsing.\n-                    err.emit();\n-                    p.bump();\n+            match p.expect(&token::Comma) {\n+                Err(mut err) => {\n+                    match token::TokenKind::Comma.similar_tokens() {\n+                        Some(tks) if tks.contains(&p.token.kind) => {\n+                            // If a similar token is found, then it may be a typo. We\n+                            // consider it as a comma, and continue parsing.\n+                            err.emit();\n+                            p.bump();\n+                        }\n+                        // Otherwise stop the parsing and return the error.\n+                        _ => return Err(err),\n+                    }\n+                }\n+                Ok(recovered) => {\n+                    assert!(recovered);\n                 }\n-                // Otherwise stop the parsing and return the error.\n-                _ => return Err(err),\n             }\n         }\n         first = false;"}, {"sha": "c2db5a027054ce7f7e0201f6f72b80e1ea8d2f1c", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8421cacfec5798f600549508545b85003c2143c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8421cacfec5798f600549508545b85003c2143c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=a8421cacfec5798f600549508545b85003c2143c", "patch": "@@ -277,7 +277,7 @@ impl<'a> Parser<'a> {\n                 self.struct_span_err(sp, &msg)\n                     .span_suggestion_short(sp, \"change this to `;`\", \";\".to_string(), appl)\n                     .emit();\n-                return Ok(false);\n+                return Ok(true);\n             } else if self.look_ahead(0, |t| {\n                 t == &token::CloseDelim(token::Brace)\n                     || (\n@@ -295,7 +295,7 @@ impl<'a> Parser<'a> {\n                     .span_label(self.token.span, \"unexpected token\")\n                     .span_suggestion_short(sp, \"add `;` here\", \";\".to_string(), appl)\n                     .emit();\n-                return Ok(false);\n+                return Ok(true);\n             }\n         }\n "}, {"sha": "bf89033f560e9da8b477a44384b31d04eabf4328", "filename": "src/test/ui/parser/issue-88770.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a8421cacfec5798f600549508545b85003c2143c/src%2Ftest%2Fui%2Fparser%2Fissue-88770.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8421cacfec5798f600549508545b85003c2143c/src%2Ftest%2Fui%2Fparser%2Fissue-88770.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88770.rs?ref=a8421cacfec5798f600549508545b85003c2143c", "patch": "@@ -0,0 +1,11 @@\n+// Regression test for the ICE described in #88770.\n+\n+// error-pattern:this file contains an unclosed delimiter\n+// error-pattern:expected one of\n+// error-pattern:missing `in` in `for` loop\n+// error-pattern:expected `;`, found `e`\n+\n+fn m(){print!(\"\",(c for&g\n+u\n+e\n+e"}, {"sha": "c7e24155d16929fbb5c02b8fe0b5bba0549bddc7", "filename": "src/test/ui/parser/issue-88770.stderr", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/a8421cacfec5798f600549508545b85003c2143c/src%2Ftest%2Fui%2Fparser%2Fissue-88770.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8421cacfec5798f600549508545b85003c2143c/src%2Ftest%2Fui%2Fparser%2Fissue-88770.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-88770.stderr?ref=a8421cacfec5798f600549508545b85003c2143c", "patch": "@@ -0,0 +1,66 @@\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-88770.rs:11:3\n+   |\n+LL | fn m(){print!(\"\",(c for&g\n+   |       -      -   - unclosed delimiter\n+   |       |      |\n+   |       |      unclosed delimiter\n+   |       unclosed delimiter\n+...\n+LL | e\n+   |   ^\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-88770.rs:11:3\n+   |\n+LL | fn m(){print!(\"\",(c for&g\n+   |       -      -   - unclosed delimiter\n+   |       |      |\n+   |       |      unclosed delimiter\n+   |       unclosed delimiter\n+...\n+LL | e\n+   |   ^\n+\n+error: this file contains an unclosed delimiter\n+  --> $DIR/issue-88770.rs:11:3\n+   |\n+LL | fn m(){print!(\"\",(c for&g\n+   |       -      -   - unclosed delimiter\n+   |       |      |\n+   |       |      unclosed delimiter\n+   |       unclosed delimiter\n+...\n+LL | e\n+   |   ^\n+\n+error: missing `in` in `for` loop\n+  --> $DIR/issue-88770.rs:8:26\n+   |\n+LL |   fn m(){print!(\"\",(c for&g\n+   |  __________________________^\n+LL | | u\n+   | |_ help: try adding `in` here\n+\n+error: expected one of `!`, `)`, `,`, `.`, `::`, `?`, `{`, or an operator, found keyword `for`\n+  --> $DIR/issue-88770.rs:8:21\n+   |\n+LL | fn m(){print!(\"\",(c for&g\n+   |                     ^^^ expected one of 8 possible tokens\n+\n+error: expected `;`, found `e`\n+  --> $DIR/issue-88770.rs:10:2\n+   |\n+LL | e\n+   |  ^ help: add `;` here\n+LL | e\n+   | - unexpected token\n+\n+error: expected one of `!`, `,`, `.`, `::`, `?`, `{`, or an operator, found `)`\n+  --> $DIR/issue-88770.rs:11:3\n+   |\n+LL | e\n+   |   ^ expected one of 7 possible tokens\n+\n+error: aborting due to 7 previous errors\n+"}]}