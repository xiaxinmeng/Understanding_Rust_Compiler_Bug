{"sha": "87e2eb14439792fb5afc909dba32b73b94855b97", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3ZTJlYjE0NDM5NzkyZmI1YWZjOTA5ZGJhMzJiNzNiOTQ4NTViOTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-11T10:09:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-04-11T10:09:41Z"}, "message": "Auto merge of #32880 - Manishearth:fix, r=GuillaumeGomez\n\nReview fixes for #32878\n\nThis contains review fixes for the PR.", "tree": {"sha": "292f80edb45502eba00be4c1db1e26ed433d26e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/292f80edb45502eba00be4c1db1e26ed433d26e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87e2eb14439792fb5afc909dba32b73b94855b97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87e2eb14439792fb5afc909dba32b73b94855b97", "html_url": "https://github.com/rust-lang/rust/commit/87e2eb14439792fb5afc909dba32b73b94855b97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87e2eb14439792fb5afc909dba32b73b94855b97/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49be3dd3807e9386bb38e4299773bbc1ce15993e", "url": "https://api.github.com/repos/rust-lang/rust/commits/49be3dd3807e9386bb38e4299773bbc1ce15993e", "html_url": "https://github.com/rust-lang/rust/commit/49be3dd3807e9386bb38e4299773bbc1ce15993e"}, {"sha": "69095bb02393b861c062fa80cde717e9eb7b2d29", "url": "https://api.github.com/repos/rust-lang/rust/commits/69095bb02393b861c062fa80cde717e9eb7b2d29", "html_url": "https://github.com/rust-lang/rust/commit/69095bb02393b861c062fa80cde717e9eb7b2d29"}], "stats": {"total": 44, "additions": 26, "deletions": 18}, "files": [{"sha": "8f76bf92ef4f52665a2b2a84b1fcc61cc8352305", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/87e2eb14439792fb5afc909dba32b73b94855b97/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87e2eb14439792fb5afc909dba32b73b94855b97/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=87e2eb14439792fb5afc909dba32b73b94855b97", "patch": "@@ -3645,55 +3645,63 @@ fn main() {\n \"##,\n \n E0520: r##\"\n-A non-default implementation was already made on this type\n-implementation so it cannot be specialized afterward. Erroneous\n-code example:\n+A non-default implementation was already made on this type so it cannot be\n+specialized further. Erroneous code example:\n \n ```compile_fail\n #![feature(specialization)]\n \n-trait SpaceLama {\n+trait SpaceLlama {\n     fn fly(&self);\n }\n \n-impl<T> SpaceLama for T {\n+// applies to all T\n+impl<T> SpaceLlama for T {\n     default fn fly(&self) {}\n }\n \n-impl<T: Clone> SpaceLama for T {\n+// non-default impl\n+// applies to all `Clone` T and overrides the previous impl\n+impl<T: Clone> SpaceLlama for T {\n     fn fly(&self) {}\n }\n \n-impl SpaceLama for i32 {\n+// since `i32` is clone, this conflicts with the previous implementation\n+impl SpaceLlama for i32 {\n     default fn fly(&self) {}\n     // error: item `fly` is provided by an `impl` that specializes\n     //        another, but the item in the parent `impl` is not marked\n     //        `default` and so it cannot be specialized.\n }\n ```\n \n-To fix this error, you need to specialize the implementation on the\n-parent(s) implementation first. Example:\n+Specialization only allows you to override `default` functions in\n+implementations.\n \n-```compile_fail\n+To fix this error, you need to mark all the parent implementations as default.\n+Example:\n+\n+```\n #![feature(specialization)]\n \n-trait SpaceLama {\n+trait SpaceLlama {\n     fn fly(&self);\n }\n \n-impl<T> SpaceLama for T {\n+// applies to all T\n+impl<T> SpaceLlama for T {\n     default fn fly(&self) {} // This is a parent implementation.\n }\n \n-impl<T: Clone> SpaceLama for T {\n-    default fn fly(&self) {} // This is a parent implementation but not\n-                             // a default one so you need to add default\n-                             // keyword.\n+// applies to all `Clone` T; overrides the previous impl\n+impl<T: Clone> SpaceLlama for T {\n+    default fn fly(&self) {} // This is a parent implementation but was\n+                             // previously not a default one, causing the error\n }\n \n-impl SpaceLama for i32 {\n-    default fn fly(&self) {} // And now that's ok!\n+// applies to i32, overrides the previous two impls\n+impl SpaceLlama for i32 {\n+    fn fly(&self) {} // And now that's ok!\n }\n ```\n \"##,"}]}