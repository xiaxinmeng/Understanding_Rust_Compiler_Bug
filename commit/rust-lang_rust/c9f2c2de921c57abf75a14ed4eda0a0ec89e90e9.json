{"sha": "c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZjJjMmRlOTIxYzU3YWJmNzVhMTRlZDRlZGEwYTBlYzg5ZTkwZTk=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-14T10:20:28Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2018-09-21T14:21:37Z"}, "message": "Allow various lints as part of ui-ifying `src/test/run-pass` suite.", "tree": {"sha": "222c6f6dacfe45c0f0f7f420012bba078945edbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/222c6f6dacfe45c0f0f7f420012bba078945edbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "html_url": "https://github.com/rust-lang/rust/commit/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d28c5bafff12f5b9f6ba96c427e975f860599303", "url": "https://api.github.com/repos/rust-lang/rust/commits/d28c5bafff12f5b9f6ba96c427e975f860599303", "html_url": "https://github.com/rust-lang/rust/commit/d28c5bafff12f5b9f6ba96c427e975f860599303"}], "stats": {"total": 296, "additions": 296, "deletions": 0}, "files": [{"sha": "17b2ee39c884b727326d2f392cb952aaeea740b1", "filename": "src/test/run-pass/abort-on-c-abi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // Since we mark some ABIs as \"nounwind\" to LLVM, we must make sure that\n // we never unwind through them.\n "}, {"sha": "5c87840fe1ee6342fe8f5a2daf55722473f8c7c6", "filename": "src/test/run-pass/alias-uninit-value.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+\n \n \n // Regression test for issue #374"}, {"sha": "92ae68fb6a35e6c0ce713bb6e2d1c3071091c405", "filename": "src/test/run-pass/align-with-extern-c-fn.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n+#![allow(unused_variables)]\n+\n // #45662\n \n #![feature(repr_align)]"}, {"sha": "7188496dab9ccb8367299533755ef3572d440cb9", "filename": "src/test/run-pass/alignment-gep-tup-like-1.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+\n #![feature(box_syntax)]\n \n struct pair<A,B> {"}, {"sha": "7895e89d58687aa0a8be4b203ba0952017a01fff", "filename": "src/test/run-pass/alloca-from-derived-tydesc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "a62bd67a5ace27a562ca7e8339f8788b2ea030bb", "filename": "src/test/run-pass/allocator-alloc-one.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n+\n #![feature(allocator_api, nonnull)]\n \n use std::alloc::{Alloc, Global, Layout, handle_alloc_error};"}, {"sha": "1d8923af479a155937eedb0f9991e7c18f484aa6", "filename": "src/test/run-pass/atomic-access-bool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n #![feature(atomic_access)]\n use std::sync::atomic::{AtomicBool, ATOMIC_BOOL_INIT};\n use std::sync::atomic::Ordering::*;"}, {"sha": "5829f764eba7705dfdcc011dfd2769c22cf84e9a", "filename": "src/test/run-pass/atomic-compare_exchange.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n+\n #![feature(extended_compare_and_swap)]\n use std::sync::atomic::{AtomicIsize, ATOMIC_ISIZE_INIT};\n use std::sync::atomic::Ordering::*;"}, {"sha": "25f4c6fd10bd0151dfcdb8019cc409529f5a64de", "filename": "src/test/run-pass/atomic-print.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-print.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fatomic-print.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-print.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(deprecated)]\n // ignore-cloudabi no process support\n // ignore-emscripten no threads support\n "}, {"sha": "4ea78d352e33a2c983b36d73fff6a4b1db344deb", "filename": "src/test/run-pass/attr-before-view-item.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_attributes)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(custom_attribute, test)]"}, {"sha": "34a8b62f9fccb8ac924b3eed12ae6b173de96d6b", "filename": "src/test/run-pass/attr-before-view-item2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-before-view-item2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_attributes)]\n+\n // pretty-expanded FIXME #23616\n \n #![feature(custom_attribute, test)]"}, {"sha": "5b89cec70c0a86c515ae74d66bb08b0f75cb7b13", "filename": "src/test/run-pass/attr-mix-new.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-mix-new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-mix-new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-mix-new.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -7,6 +7,10 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n+\n+#![allow(unused_attributes)]\n+#![allow(unknown_lints)]\n+\n // pretty-expanded FIXME #23616\n \n #![allow(unused_attribute)]"}, {"sha": "827da72bc44ab674de823a3d8c489f77b8d773e6", "filename": "src/test/run-pass/attr-on-generic-formals.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-on-generic-formals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fattr-on-generic-formals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-on-generic-formals.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_attributes)]\n+\n // This test ensures we can attach attributes to the formals in all\n // places where generic parameter lists occur, assuming appropriate\n // feature gates are enabled."}, {"sha": "b8bfad8cfcbd9ea93b8856ed73f0c1fd28e4c6c0", "filename": "src/test/run-pass/augmented-assignments.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n #![deny(unused_assignments)]\n \n use std::mem;"}, {"sha": "0fe347fc43c086b995d676834ca0b6320f73d7db", "filename": "src/test/run-pass/auto-instantiate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n #[derive(Debug)]\n struct Pair<T, U> { a: T, b: U }\n struct Triple { x: isize, y: isize, z: isize }"}, {"sha": "efddcaa14d3f307f5f40429325aeb8f91e6a29ee", "filename": "src/test/run-pass/auto-is-contextual.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(path_statements)]\n+#![allow(dead_code)]\n macro_rules! auto {\n     () => (struct S;)\n }"}, {"sha": "0b2098b0f055b82bcde07a1bb8ee5f8e12944be3", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n // Binop corner cases\n \n fn test_nil() {"}, {"sha": "6066bc32b26b3b01a3d4a948b10920ccb8b64867", "filename": "src/test/run-pass/blind-item-local-shadow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_imports)]\n mod bar {\n     pub fn foo() -> bool { true }\n }"}, {"sha": "342f67ae44f982ed4bdb36e3a4efc9e40f4f12f5", "filename": "src/test/run-pass/block-arg-call-as.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n \n fn asBlock<F>(f: F) -> usize where F: FnOnce() -> usize {\n    return f();"}, {"sha": "acb0f2dd298d414ea6c40aefbe58ce81afc59544", "filename": "src/test/run-pass/block-expr-precedence.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(unused_parens)]\n // This test has some extra semis in it that the pretty-printer won't\n // reproduce so we don't want to automatically reformat it\n "}, {"sha": "6f8cdd1b4fcc56aededf1ae7afe1699c09729187", "filename": "src/test/run-pass/builtin-clone-unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n+#![allow(unused_imports)]\n // ignore-wasm32-bare compiled with panic=abort by default\n \n // Test that builtin implementations of `Clone` cleanup everything"}, {"sha": "287e68294878beaf3cc8002a9f453ec478c9df17", "filename": "src/test/run-pass/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n \n // aux-build:trait_superkinds_in_metadata.rs\n "}, {"sha": "84601f68d163fefcb8e700bca32c0ad7a9f19ab9", "filename": "src/test/run-pass/builtin-superkinds-phantom-typaram.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Tests that even when a type parameter doesn't implement a required\n // super-builtin-kind of a trait, if the type parameter is never used,\n // the type can implement the trait anyway."}, {"sha": "b88854cd7fa6a1bdfce5350513f102e5f9859c40", "filename": "src/test/run-pass/cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n \n pub fn main() {\n     let i: isize = 'Q' as isize;"}, {"sha": "9f26ee818e6a9483ab6f49999c887cff47dc1bc9", "filename": "src/test/run-pass/cell-does-not-clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n use std::cell::Cell;\n "}, {"sha": "a95870c2b27feb4b944ede022a3cee49513db0e5", "filename": "src/test/run-pass/check-static-recursion-foreign.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Static recursion check shouldn't fail when given a foreign item (#18279)\n \n // aux-build:check_static_recursion_foreign_helper.rs"}, {"sha": "6ff3aff45cba1bcea8667953146271b2f373084f", "filename": "src/test/run-pass/cleanup-arm-conditional.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n+#![allow(unused_imports)]\n // Test that cleanup scope for temporaries created in a match\n // arm is confined to the match arm itself.\n "}, {"sha": "4f8ded9012f8f42f696b9c8addcda51ea641b46f", "filename": "src/test/run-pass/cleanup-rvalue-for-scope.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // Test that the lifetime of rvalues in for loops is extended\n // to the for loop itself.\n "}, {"sha": "8cf014a4d2a2d8cbcffaae8948a6650f20cba7a7", "filename": "src/test/run-pass/cleanup-rvalue-scopes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n+#![allow(unused_variables)]\n // Test that destructors for rvalue temporaries run either at end of\n // statement or end of block, as appropriate given the temporary\n // lifetime rules."}, {"sha": "90b2031afd486be55eca9bde36c8ffcde8c2f27c", "filename": "src/test/run-pass/cleanup-rvalue-temp-during-incomplete-alloc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // Test cleanup of rvalue temporary that occurs while `box` construction\n // is in progress. This scenario revealed a rather terrible bug.  The\n // ingredients are:"}, {"sha": "0358eec0d7645032e2182804d41b4a7cd9eb8b17", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // ignore-emscripten no threads support\n \n #![feature(box_syntax)]"}, {"sha": "44778517c44438c978f92ae3208d901fbcb036cd", "filename": "src/test/run-pass/close-over-big-then-small-data.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // If we use GEPi rather than GEP_tup_like when\n // storing closure data (as we used to do), the u64 would\n // overwrite the u16."}, {"sha": "462dc42dbc2b2b483bfc4e6b7dd1afa6b463c55e", "filename": "src/test/run-pass/collections-const-new.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Test several functions can be used for constants\n // 1. Vec::new()\n // 2. String::new()"}, {"sha": "5d8bc31c2a3375be93898b38453a5a1fa918acd7", "filename": "src/test/run-pass/command-before-exec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-before-exec.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // ignore-windows - this is a unix-specific test\n // ignore-cloudabi no processes\n // ignore-emscripten no processes"}, {"sha": "46b409fb13a84bc94763e528af8a0bc5dc43e6cb", "filename": "src/test/run-pass/command-exec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-exec.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // ignore-windows - this is a unix-specific test\n // ignore-pretty issue #37199\n // ignore-cloudabi no processes"}, {"sha": "b31f4d39f82f793f5a42b8063fe61361ddd1c61e", "filename": "src/test/run-pass/complex.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomplex.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unconditional_recursion)]\n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+#![allow(unused_mut)]\n \n \n "}, {"sha": "aaf017c0ad37438b6c290cf1628dd14e4f893554", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(stable_features)]\n+#![allow(deprecated)]\n+#![allow(unused_imports)]\n // compile-flags:--test\n // ignore-cloudabi no processes\n // ignore-emscripten no processes"}, {"sha": "14f5913e3776b17c6982472e1fe6e907174805f9", "filename": "src/test/run-pass/crt-static-off-works.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // compile-flags:-C target-feature=-crt-static -Z unstable-options\n // ignore-musl - requires changing the linker which is hard\n "}, {"sha": "dbc483241ab2c547df9e6f33349ff051f754c16a", "filename": "src/test/run-pass/crt-static-on-works.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // compile-flags:-C target-feature=+crt-static -Z unstable-options\n \n #![feature(cfg_target_feature)]"}, {"sha": "d4e25bb5c3c6edb22da7623a3f3fab230d5642c2", "filename": "src/test/run-pass/default-method-simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n trait Foo {\n     fn f(&self) {"}, {"sha": "fce5e911c57aa3a6bea8ecd6b12ce37665c3db22", "filename": "src/test/run-pass/defaults-well-formedness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n trait Trait<T> {}\n struct Foo<U, V=i32>(U, V) where U: Trait<V>;\n "}, {"sha": "06d4f16826fbf18f769d4abe23a97ada72fc3d16", "filename": "src/test/run-pass/discriminant_value.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiscriminant_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiscriminant_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiscriminant_value.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n #![feature(core, core_intrinsics)]\n \n extern crate core;"}, {"sha": "9f54f50e54000ae47888043da333bf5a40e6f19c", "filename": "src/test/run-pass/diverging-fallback-control-flow.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n+#![allow(unreachable_code)]\n // Test various cases where we permit an unconstrained variable\n // to fallback based on control-flow.\n //"}, {"sha": "195c55d374b822739c8b51e1a602a06946c57ba9", "filename": "src/test/run-pass/diverging-fallback-method-chain.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n // Test a regression found when building compiler. The `produce()`\n // error type `T` winds up getting unified with result of `x.parse()`;\n // the type of the closure given to `unwrap_or_else` needs to be"}, {"sha": "9fa3fbca071b264f0e0f187181eb82ec63e4303c", "filename": "src/test/run-pass/double-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdouble-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fdouble-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdouble-ref.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n fn check_expr() {"}, {"sha": "c4401781f5940052990f67b3617daedec85469a0", "filename": "src/test/run-pass/early-ret-binop-add.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unreachable_code)]\n // pretty-expanded FIXME #23616\n \n use std::ops::Add;"}, {"sha": "985ed08d34ddf90d89fdaa34778cbef13d7f9bba", "filename": "src/test/run-pass/early-vtbl-resolution.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n trait thing<A> {"}, {"sha": "b805b01ae39bdb9ea2f837ff0e732d30be15afed", "filename": "src/test/run-pass/edition-keywords-2015-2015.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n // edition:2015\n // aux-build:edition-kw-macro-2015.rs\n "}, {"sha": "1e3d0c5f7778d9f4f354db81c19260f2240ad288", "filename": "src/test/run-pass/edition-keywords-2015-2018.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n // edition:2015\n // aux-build:edition-kw-macro-2018.rs\n "}, {"sha": "9b2e49c5111e1af0779b796091314270f8553cdd", "filename": "src/test/run-pass/edition-keywords-2018-2015.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_assignments)]\n // edition:2018\n // aux-build:edition-kw-macro-2015.rs\n "}, {"sha": "be632b113741c5ba743d82ecc427a65bc0a3ca83", "filename": "src/test/run-pass/edition-keywords-2018-2018.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_assignments)]\n // edition:2018\n // aux-build:edition-kw-macro-2018.rs\n "}, {"sha": "28bfb368b6e6b537bd8bfd422552924c925acd12", "filename": "src/test/run-pass/empty-allocation-rvalue-non-null.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n // pretty-expanded FIXME #23616\n \n pub fn main() {"}, {"sha": "6bb2fe4b34df1ad46a8cb6c109bdd3f5b81e5b79", "filename": "src/test/run-pass/env-home-dir.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n+#![allow(deprecated)]\n // ignore-cloudabi no environment variables present\n // ignore-emscripten env vars don't work?\n "}, {"sha": "754e30f3adfd915599a34322e78c293dea00376f", "filename": "src/test/run-pass/epoch-gate-feature.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // Checks if the correct registers are being used to pass arguments\n // when the sysv64 ABI is specified.\n "}, {"sha": "e8047b3cb7f8c782f0c080c343baa8e26e0d6227", "filename": "src/test/run-pass/estr-uniq.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Festr-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Festr-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Festr-uniq.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_assignments)]\n+#![allow(unknown_lints)]\n \n #![allow(dead_assignment)]\n "}, {"sha": "0193fe4b83328dc97335d54c153bd2f0098329fa", "filename": "src/test/run-pass/existential_type.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexistential_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexistential_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexistential_type.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n #![feature(existential_type)]\n \n fn main() {"}, {"sha": "b86af5d2fabd8d5e85da5d0d1ffcf69c3d3a9e75", "filename": "src/test/run-pass/explicit-i-suffix.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // pretty-expanded FIXME #23616\n \n pub fn main() {"}, {"sha": "36724f0b64808ce27df9e1c7862e3d202e22b483", "filename": "src/test/run-pass/export-glob-imports-target.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n+#![allow(dead_code)]\n // Test that a glob-export functions as an import\n // when referenced within its own local scope.\n "}, {"sha": "3459b3c84c573381c7b54e0925ca437b1ab4a769", "filename": "src/test/run-pass/expr-block.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n \n "}, {"sha": "9fb0f07b6a03eea0d54fd3e406e4e23b88372fa3", "filename": "src/test/run-pass/expr-empty-ret.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Issue #521\n \n // pretty-expanded FIXME #23616"}, {"sha": "938c556038ff9bd13e6fc98fe13597746e9fe065", "filename": "src/test/run-pass/exterior.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fexterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexterior.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n \n use std::cell::Cell;"}, {"sha": "903e97b315869776f0880503beb881f06df7d7f6", "filename": "src/test/run-pass/fixup-deref-mut.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n use std::ops::{Deref, DerefMut};"}, {"sha": "892fae417ad6d8a84e3b3108ba1428f0931c3120", "filename": "src/test/run-pass/format-hygiene.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n pub const arg0: u8 = 1;\n \n pub fn main() {"}, {"sha": "3be15552dc1c6efd9c1fe7887f232ab1422b427e", "filename": "src/test/run-pass/fsu-moves-and-copies.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(stable_features)]\n // Issue 4691: Ensure that functional-struct-updates operates\n // correctly and moves rather than copy when appropriate.\n "}, {"sha": "32f262c5a404cf3e5cbb6ac373d438a946749c3a", "filename": "src/test/run-pass/guards-not-exhaustive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n \n #[derive(Copy, Clone)]\n enum Q { R(Option<usize>) }"}, {"sha": "af4e2efb2ba37788224aa1c814cd8c9b4cc6b74f", "filename": "src/test/run-pass/guards.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fguards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fguards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fguards.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_shorthand_field_patterns)]\n \n #[derive(Copy, Clone)]\n struct Pair { x: isize, y: isize }"}, {"sha": "2b30b5ca9fcc6591a71b33749f7ddf03563ef841", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+#![allow(unused_mut)]\n // ignore-emscripten No support for threads\n \n /**"}, {"sha": "1aed2844c965aeaf2ed73086258bfd3ea6d18c68", "filename": "src/test/run-pass/html-literals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhtml-literals.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n // A test of the macro system. Can we do HTML literals?\n \n /*"}, {"sha": "5c5c4c80ab18f009ac5bb6a0a43f747ac789dee9", "filename": "src/test/run-pass/if-ret.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fif-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fif-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-ret.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_parens)]\n // pretty-expanded FIXME #23616\n \n fn foo() { if (return) { } }"}, {"sha": "90d858c28585be7dd405f0e63ce5714e6249d597", "filename": "src/test/run-pass/ignore-all-the-things.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_shorthand_field_patterns)]\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // pretty-expanded FIXME #23616\n \n #![feature(slice_patterns)]"}, {"sha": "a3e0f9dc0393514e2be72827ebbf717d030a2d6e", "filename": "src/test/run-pass/infer-fn-tail-expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // issue #680\n \n "}, {"sha": "0ad0ecf8ce92c6fb4477a4d6cf19582a1807f8c3", "filename": "src/test/run-pass/init-large-type.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-large-type.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // Makes sure that zero-initializing large types is reasonably fast,\n // Doing it incorrectly causes massive slowdown in LLVM during\n // optimisation."}, {"sha": "dd838ef98db9ca3dda97933b4babac9a6b5beacb", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n #![feature(box_syntax)]\n \n use std::cell::Cell;"}, {"sha": "7d708b475fca5436c053ac3812f58e01aa293122", "filename": "src/test/run-pass/instantiable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finstantiable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finstantiable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finstantiable.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n use std::ptr;"}, {"sha": "e861f21762991be81296ef697b6a18b3299c5c77", "filename": "src/test/run-pass/invalid_const_promotion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n // ignore-wasm32\n // ignore-emscripten\n "}, {"sha": "2eaa73ed6f751e535b7842695dddfec8e6f17109", "filename": "src/test/run-pass/issue-53728.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fissue-53728.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fissue-53728.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-53728.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n #[repr(u16)]\n enum DeviceKind {\n     Nil = 0,"}, {"sha": "97fa8d36d137c92fc6f6e09723b6a729d16a839d", "filename": "src/test/run-pass/item-attributes.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fitem-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-attributes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n+#![allow(unused_attributes)]\n+#![allow(dead_code)]\n+#![allow(unknown_lints)]\n // These are attributes of the implicit crate. Really this just needs to parse\n // for completeness since .rs files linked from .rc files support this\n // notation to specify their module's attributes"}, {"sha": "b07b0359a2d72c3328db70ac0e6b4a6927e1efde", "filename": "src/test/run-pass/item-name-overload.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fitem-name-overload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fitem-name-overload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fitem-name-overload.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n \n "}, {"sha": "6dbfacf047425027b8ad21313756e44c94cea755", "filename": "src/test/run-pass/keyword-changes-2012-07-31.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fkeyword-changes-2012-07-31.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fkeyword-changes-2012-07-31.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkeyword-changes-2012-07-31.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // return -> return\n // mod -> module\n // match -> match"}, {"sha": "9788b1e06036f5cd21bf8f0dadce8a4c61ad87dc", "filename": "src/test/run-pass/kindck-implicit-close-over-mut-var.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fkindck-implicit-close-over-mut-var.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(dead_code)]\n use std::thread;\n \n fn user(_i: isize) {}"}, {"sha": "ec12f257f6108da9213f68267421862fd64a604c", "filename": "src/test/run-pass/lambda-infer-unresolved.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flambda-infer-unresolved.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n // This should typecheck even though the type of e is not fully\n // resolved when we finish typechecking the ||.\n "}, {"sha": "bd685dd4244955dcf8044e2cd2c0c1f7a391de50", "filename": "src/test/run-pass/large-records.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flarge-records.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flarge-records.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flarge-records.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n \n "}, {"sha": "bed94de7b952830f872c55f2f88283862e533e92", "filename": "src/test/run-pass/last-use-in-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flast-use-in-block.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_parens)]\n // Issue #1818\n \n "}, {"sha": "d63a712c1aaf8efe8138d20dde3c34b979166a6f", "filename": "src/test/run-pass/last-use-in-cap-clause.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-in-cap-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-in-cap-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flast-use-in-cap-clause.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Make sure #1399 stays fixed\n \n struct A { a: Box<isize> }"}, {"sha": "747c7d2eae4002e2b9a025f2649f5177a3f9118f", "filename": "src/test/run-pass/last-use-is-capture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-is-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flast-use-is-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flast-use-is-capture.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Make sure #1399 stays fixed\n \n #![feature(box_syntax)]"}, {"sha": "a4a3edf71c0c4c532cc8b1fc249204e18cf0218c", "filename": "src/test/run-pass/lazy-init.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flazy-init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flazy-init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazy-init.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n \n \n fn foo(x: isize) { println!(\"{}\", x); }"}, {"sha": "e2369e85d56dd8ae014849440a58507866fb1e9f", "filename": "src/test/run-pass/link-section.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flink-section.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flink-section.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flink-section.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n #[cfg(not(target_os = \"macos\"))]\n #[link_section=\".moretext\"]\n fn i_live_in_more_text() -> &'static str {"}, {"sha": "14ef8c1f51f7d6a32426053d83ba63c9930ae452", "filename": "src/test/run-pass/lint-non-camel-case-types-non-uppercase-statics-unicode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-non-camel-case-types-non-uppercase-statics-unicode.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n //\n+#![allow(dead_code)]\n \n \n #![forbid(non_camel_case_types)]"}, {"sha": "8115a2c50e3d675a4cf57df226cceb8da366211b", "filename": "src/test/run-pass/lint-non-camel-case-with-trailing-underscores.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flint-non-camel-case-with-trailing-underscores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flint-non-camel-case-with-trailing-underscores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-non-camel-case-with-trailing-underscores.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // This is ok because we often use the trailing underscore to mean 'prime'\n \n // pretty-expanded FIXME #23616"}, {"sha": "bab777d09730d2188b958133a4bb655e24676e09", "filename": "src/test/run-pass/list.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flist.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "bccc939e85ed50117e408ddaf0a37797855b9c2f", "filename": "src/test/run-pass/liveness-assign-imm-local-after-ret.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fliveness-assign-imm-local-after-ret.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unreachable_code)]\n // pretty-expanded FIXME #23616\n \n #![allow(dead_code)]"}, {"sha": "4c501a78b576c87abbc0f91e90e887004a9b44b5", "filename": "src/test/run-pass/log-knows-the-names-of-variants-in-std.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants-in-std.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n #[derive(Clone, Debug)]\n enum foo {\n   a(usize),"}, {"sha": "19a7c7105c93ca9a63867223de26546178b8d6e0", "filename": "src/test/run-pass/log-knows-the-names-of-variants.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-knows-the-names-of-variants.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n #[derive(Debug)]\n enum foo {\n   a(usize),"}, {"sha": "f34d5cbd9e314d27937e04f7dc21f3b7bae03a23", "filename": "src/test/run-pass/max-min-classes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmax-min-classes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmax-min-classes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmax-min-classes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_snake_case)]\n trait Product {\n     fn product(&self) -> isize;\n }"}, {"sha": "7e06530b38c8f5fdc3427b380a7b23b9389b1c2e", "filename": "src/test/run-pass/mid-path-type-params.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmid-path-type-params.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n struct S<T> {"}, {"sha": "6c7c39e5aa5278c39f0ab8dd45b7d369230bde94", "filename": "src/test/run-pass/monad.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmonad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmonad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonad.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n \n \n "}, {"sha": "899f3f4ba30286845e8ca44bddfa27adb01d1c60", "filename": "src/test/run-pass/monomorphize-abi-alignment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmonomorphize-abi-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmonomorphize-abi-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonomorphize-abi-alignment.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n /*!\n  * On x86_64-linux-gnu and possibly other platforms, structs get 8-byte \"preferred\" alignment,\n  * but their \"ABI\" alignment (i.e., what actually matters for data layout) is the largest alignment"}, {"sha": "c00fb68f9f7ff68c757284e30c7bf7a67645db03", "filename": "src/test/run-pass/multiple-reprs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmultiple-reprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmultiple-reprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmultiple-reprs.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n use std::mem::{size_of, align_of};\n use std::os::raw::c_int;"}, {"sha": "87879e0841410115ab758492b01e67d7688511ca", "filename": "src/test/run-pass/mutual-recursion-group.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutual-recursion-group.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "ca8693868565d6f47abc340206e8059280b0ce58", "filename": "src/test/run-pass/nested-class.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnested-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnested-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnested-class.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n \n pub fn main() {\n     struct b {"}, {"sha": "a1b9eda8b897509b0fcd3bb6f5f01ed41fc0de66", "filename": "src/test/run-pass/never-result.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnever-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnever-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnever-result.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n+#![allow(unreachable_code)]\n // Test that we can extract a ! through pattern matching then use it as several different types.\n \n #![feature(never_type)]"}, {"sha": "c2871469de16832073f0c2ff888153e23f1df3f6", "filename": "src/test/run-pass/newlambdas-ret-infer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Test that the lambda kind is inferred correctly as a return\n // expression\n "}, {"sha": "4d545c7a969db701b87b5eca482d551cf00d3774", "filename": "src/test/run-pass/newlambdas-ret-infer2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewlambdas-ret-infer2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Test that the lambda kind is inferred correctly as a return\n // expression\n "}, {"sha": "20817cddd05c2a3da880cefc20b170557bbdcdd4", "filename": "src/test/run-pass/newtype-polymorphic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewtype-polymorphic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewtype-polymorphic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-polymorphic.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n \n \n #[derive(Clone)]"}, {"sha": "3dbad08f1d87ef80a5fdf805f45d4be810ee1fb4", "filename": "src/test/run-pass/newtype.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnewtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n #[derive(Copy, Clone)]\n struct mytype(Mytype);\n "}, {"sha": "96bc80c21259174fe3dc5cc5d36d5e58101e2d83", "filename": "src/test/run-pass/nil-decl-in-foreign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnil-decl-in-foreign.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(improper_ctypes)]\n+#![allow(dead_code)]\n // Issue #901\n // pretty-expanded FIXME #23616\n "}, {"sha": "f5f089691182b310ac6d573e7a579cb5d1df2deb", "filename": "src/test/run-pass/no-core-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fno-core-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fno-core-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fno-core-1.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n #![feature(no_core, core)]\n #![no_core]\n "}, {"sha": "bdeae618c8b914af24c24ef583369ffa3111880f", "filename": "src/test/run-pass/nullable-pointer-size.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n use std::mem;\n "}, {"sha": "1d66388275e9b83e0ba5b01883205c1b60d044ee", "filename": "src/test/run-pass/operator-overloading.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foperator-overloading.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foperator-overloading.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n use std::cmp;\n use std::ops;\n "}, {"sha": "32faab4c12c5f79307f7ea667225cac40743a26a", "filename": "src/test/run-pass/option-unwrap.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foption-unwrap.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n use std::cell::Cell;\n \n struct dtor<'a> {"}, {"sha": "cd0f7cdbf6dab9f5941fba268271d9c2c8f9799b", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(unconditional_recursion)]\n // ignore-android: FIXME (#20004)\n // ignore-musl\n // ignore-cloudabi no processes"}, {"sha": "e4013854e7895a3e9e3deb1f54c79d4856248ed6", "filename": "src/test/run-pass/output-slot-variants.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foutput-slot-variants.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_assignments)]\n+#![allow(unknown_lints)]\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]"}, {"sha": "edbb311fcda8380e9f1cc978505db156dce0cc8d", "filename": "src/test/run-pass/over-constrained-vregs.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fover-constrained-vregs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fover-constrained-vregs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fover-constrained-vregs.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // Regression test for issue #152.\n pub fn main() {\n     let mut b: usize = 1_usize;"}, {"sha": "5c904295bb47545038f99f9298486a881de1aee4", "filename": "src/test/run-pass/parse-panic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fparse-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fparse-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fparse-panic.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n #![allow(unreachable_code)]\n \n fn dont_call_me() { panic!(); println!(\"{}\", 1); }"}, {"sha": "3359f1064c9c6b029ce09fbd7f3d0897167dcbb4", "filename": "src/test/run-pass/paths-containing-nul.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(deprecated)]\n // ignore-cloudabi no files or I/O\n // ignore-wasm32-bare no files or I/O\n "}, {"sha": "24fb400150aa851712ddb171ebee0e4f906bb1f8", "filename": "src/test/run-pass/project-cache-issue-37154.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fproject-cache-issue-37154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fproject-cache-issue-37154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fproject-cache-issue-37154.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Regression test for #37154: the problem here was that the cache\n // results in a false error because it was caching skolemized results\n // even after those skolemized regions had been popped."}, {"sha": "901af09763b98b6ecf24eabb153b985f076410e9", "filename": "src/test/run-pass/project-defer-unification.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fproject-defer-unification.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(unreachable_code)]\n // A regression test extracted from image-0.3.11. The point of\n // failure was in `index_colors` below.\n "}, {"sha": "3a4d2b3e60208ab877a7e21fdb4ba43bf504bde8", "filename": "src/test/run-pass/ptr-coercion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fptr-coercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fptr-coercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fptr-coercion.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n // Test coercions between pointers which don't do anything fancy like unsizing.\n \n // pretty-expanded FIXME #23616"}, {"sha": "5f6b9b17e3607fa841328ff99d9889a4509c4a5f", "filename": "src/test/run-pass/pure-sum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fpure-sum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fpure-sum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpure-sum.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Check that functions can modify local state.\n \n // pretty-expanded FIXME #23616"}, {"sha": "809c1ba702bfb9b2730b8deb5586a1ef8e10d247", "filename": "src/test/run-pass/range-type-infer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange-type-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange-type-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange-type-infer.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // Make sure the type inference for the new range expression work as\n // good as the old one. Check out issue #21672, #21595 and #21649 for\n // more details."}, {"sha": "2fae4d3cf269329e8932594b6562a833e726c3a3", "filename": "src/test/run-pass/range.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_comparisons)]\n+#![allow(dead_code)]\n+#![allow(unused_mut)]\n // Test range syntax.\n \n "}, {"sha": "09132efe18cfb1d22888b4cafa8e9779bf9f14b2", "filename": "src/test/run-pass/range_inclusive_gate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange_inclusive_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frange_inclusive_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frange_inclusive_gate.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_comparisons)]\n // Test that you only need the syntax gate if you don't mention the structs.\n // (Obsoleted since both features are stabilized)\n "}, {"sha": "02392be7e4f2d490b980068792359801d1015cb3", "filename": "src/test/run-pass/rcvr-borrowed-to-region.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frcvr-borrowed-to-region.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n #![feature(box_syntax)]\n \n trait get {"}, {"sha": "d7ddd9505d78c7ad91bad4db7c8f6428461694a5", "filename": "src/test/run-pass/readalias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Freadalias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Freadalias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freadalias.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n \n "}, {"sha": "0ad97e78d1afab0608b76259a66c89a51541abae", "filename": "src/test/run-pass/resolve-issue-2428.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresolve-issue-2428.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresolve-issue-2428.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresolve-issue-2428.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(non_upper_case_globals)]\n \n const foo: isize = 4 >> 1;\n enum bs { thing = foo }"}, {"sha": "ccc3396e50c0236ec2e23b93cc7794781af1b9c3", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n use std::cell::Cell;\n \n #[derive(Debug)]"}, {"sha": "d3ba221b34a064713e86a4ebf3ba32b5dfca817d", "filename": "src/test/run-pass/resource-destruct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-destruct.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n use std::cell::Cell;\n \n struct shrinky_pointer<'a> {"}, {"sha": "72ee3dbfe2da2ef7f425ccc1143fb9a334fa27bf", "filename": "src/test/run-pass/ret-none.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fret-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fret-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fret-none.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "a85fe6733dd80e068fa107f286d39c59e6eb91cc", "filename": "src/test/run-pass/segfault-no-out-of-stack.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsegfault-no-out-of-stack.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n // ignore-cloudabi can't run commands\n // ignore-emscripten can't run commands\n "}, {"sha": "c9ab466e445598222dd6739e058626d526d14b3a", "filename": "src/test/run-pass/semistatement-in-lambda.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsemistatement-in-lambda.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n \n pub fn main() {\n     // Test that lambdas behave as unary expressions with block-like expressions"}, {"sha": "b2028927da46eb4f9b96f30e356012844ac5bfb8", "filename": "src/test/run-pass/shadow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshadow.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n fn foo(c: Vec<isize> ) {\n     let a: isize = 5;\n     let mut b: Vec<isize> = Vec::new();"}, {"sha": "b54ba3d2ce749e8f37eafa7c65c5d87cdad2f5b6", "filename": "src/test/run-pass/shadowed-use-visibility.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fshadowed-use-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fshadowed-use-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fshadowed-use-visibility.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n mod foo {\n     pub fn f() {}\n "}, {"sha": "c964bcb94ef83aea40da5d4bd5b235892768458e", "filename": "src/test/run-pass/sigpipe-should-be-ignored.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsigpipe-should-be-ignored.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n // Be sure that when a SIGPIPE would have been received that the entire process\n // doesn't die in a ball of fire, but rather it's gracefully handled.\n "}, {"sha": "6feb2da5fac52f4b8a0b6e42977996653ff013a0", "filename": "src/test/run-pass/simple-infer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsimple-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsimple-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimple-infer.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_mut)]\n \n \n pub fn main() { let mut n; n = 1; println!(\"{}\", n); }"}, {"sha": "0da63f93cc6b31013eb4ece7b11c68fa2774aed2", "filename": "src/test/run-pass/size-and-align.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsize-and-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsize-and-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsize-and-align.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n enum clam<T> { a(T, isize), b, }\n \n fn uhoh<T>(v: Vec<clam<T>> ) {"}, {"sha": "03425e0472520c6d4b28d2a3b0ae111328b5d665", "filename": "src/test/run-pass/sized-borrowed-pointer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsized-borrowed-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsized-borrowed-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsized-borrowed-pointer.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Possibly-dynamic size of typaram should be cleared at pointer boundary.\n \n // pretty-expanded FIXME #23616"}, {"sha": "5624910cee9ee0a1959eb0bb994357557e585df2", "filename": "src/test/run-pass/sized-owned-pointer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsized-owned-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsized-owned-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsized-owned-pointer.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Possibly-dynamic size of typaram should be cleared at pointer boundary.\n \n "}, {"sha": "49fb417675518e4a2fe5235cc2c7973b1796fe9a", "filename": "src/test/run-pass/snake-case-no-lowercase-equivalent.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsnake-case-no-lowercase-equivalent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsnake-case-no-lowercase-equivalent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsnake-case-no-lowercase-equivalent.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n #![feature(non_ascii_idents)]"}, {"sha": "041286fe656a0d10a3154f5e34628cc530c284da", "filename": "src/test/run-pass/sse2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsse2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsse2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsse2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // min-llvm-version 6.0\n // ^ needs MCSubtargetInfo::checkFeatures()\n // ignore-cloudabi no std::env"}, {"sha": "22d1eeb0e0afc37532437e73ab1077c80c009756", "filename": "src/test/run-pass/structured-compare.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fstructured-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fstructured-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstructured-compare.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n \n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "5e120bd80ee23ab087018d5feb4f9f385f6fac40", "filename": "src/test/run-pass/super-fast-paren-parsing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsuper-fast-paren-parsing.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n+#![allow(dead_code)]\n // exec-env:RUST_MIN_STACK=16000000\n // rustc-env:RUST_MIN_STACK=16000000\n //"}, {"sha": "5958565823f346b7cda97fe437024583d6c4d5cf", "filename": "src/test/run-pass/super.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsuper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fsuper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsuper.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n pub mod a {"}, {"sha": "8fcbfce0f7a625ca5fb1ddbddd6bdc5d4cf51e82", "filename": "src/test/run-pass/swap-overlapping.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fswap-overlapping.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // Issue #5041 - avoid overlapping memcpy when src and dest of a swap are the same\n \n // pretty-expanded FIXME #23616"}, {"sha": "c6445190c0a4929e9edcd081c2a128c707823f5f", "filename": "src/test/run-pass/trivial-message.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftrivial-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrivial-message.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n /*\n   This is about the simplest program that can successfully send a\n   message."}, {"sha": "f618d16c598a59b5c6a60549b4a46c9decba2a4e", "filename": "src/test/run-pass/try-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-block.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n // compile-flags: --edition 2018\n \n #![feature(try_blocks)]"}, {"sha": "94e2d57999313a21a31f3b4ea44cf7808de4c945", "filename": "src/test/run-pass/try-is-identifier-edition2015.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n // compile-flags: --edition 2015\n \n fn main() {"}, {"sha": "045a8a503203253b153703256a7be8c6441858c1", "filename": "src/test/run-pass/try-operator-hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-operator-hygiene.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n+#![allow(dead_code)]\n // `expr?` expands to:\n //\n // match expr {"}, {"sha": "f212e560bf28018759340b98aa5d04ea89ed4d8f", "filename": "src/test/run-pass/try-operator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-operator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-operator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-operator.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // ignore-cloudabi no std::fs\n \n use std::fs::File;"}, {"sha": "7c2333ffdaacf6da33b03b243beb191c5a23f55d", "filename": "src/test/run-pass/try-wait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-wait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftry-wait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-wait.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n "}, {"sha": "b6fb2119308db0101fa2235e2eb68f302cbf2825", "filename": "src/test/run-pass/tup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftup.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n \n type point = (isize, isize);\n "}, {"sha": "a66830e23df1a454c070e7f9dd8a0ceac2d37b12", "filename": "src/test/run-pass/tydesc-name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftydesc-name.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n #![feature(core_intrinsics)]\n "}, {"sha": "b5eb2fe170510d05434f5505e756c23f7a6ea22e", "filename": "src/test/run-pass/type-ascription.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-ascription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-ascription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-ascription.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // Type ascription doesn't lead to unsoundness\n \n #![feature(type_ascription)]"}, {"sha": "8fef294c0cf17cfede8c92ea1607806568d3c162", "filename": "src/test/run-pass/type-in-nested-module.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-in-nested-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-in-nested-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-in-nested-module.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "b918c3fc396df0b98ef35b612b4a6b36a0eefe37", "filename": "src/test/run-pass/type-infer-generalize-ty-var.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-infer-generalize-ty-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-infer-generalize-ty-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-infer-generalize-ty-var.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_upper_case_globals)]\n+#![allow(dead_code)]\n+#![allow(unused_assignments)]\n+#![allow(unused_variables)]\n // Test a scenario where we generate a constraint like `?1 <: &?2`.\n // In such a case, it is important that we instantiate `?1` with `&?3`\n // where `?3 <: ?2`, and not with `&?2`. This is a regression test for"}, {"sha": "e05f6f153a43e94ab22b09f182b0fcd9afbfaae4", "filename": "src/test/run-pass/type-param-constraints.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "246cf209efb212bcf164cfefaa8579c7e9932d05", "filename": "src/test/run-pass/type-param.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n \n \n // pretty-expanded FIXME #23616"}, {"sha": "76ac2d14b93a4f50cc055ab61a12ccf4c41a4bd6", "filename": "src/test/run-pass/type-params-in-for-each.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-params-in-for-each.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n // pretty-expanded FIXME #23616\n "}, {"sha": "94d46b1a96eb96efc32e03549e0851ac50b68dd3", "filename": "src/test/run-pass/type-ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-ptr.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // pretty-expanded FIXME #23616\n \n fn f(a: *const isize) -> *const isize { return a; }"}, {"sha": "26cadf16e29dd7177eb0a67a48b3667e00463f60", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n #![feature(never_type)]\n \n use std::mem::size_of;"}, {"sha": "ee482ea3c52f91f0e6c567479285f1398e176193", "filename": "src/test/run-pass/typeck_type_placeholder_1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeck_type_placeholder_1.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // This test checks that the `_` type placeholder works\n // correctly for enabling type inference.\n "}, {"sha": "fecc6d705095c0d781b2784a0a14c98569026751", "filename": "src/test/run-pass/typeclasses-eq-example-static.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example-static.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n+#![allow(dead_code)]\n #![feature(box_syntax)]\n \n // Example from lkuper's intern talk, August 2012 -- now with static"}, {"sha": "f2b6e9cd2551ef7330d5a76a1c6df69005967470", "filename": "src/test/run-pass/typeclasses-eq-example.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeclasses-eq-example.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(non_snake_case)]\n+#![allow(dead_code)]\n #![feature(box_syntax)]\n \n // Example from lkuper's intern talk, August 2012."}, {"sha": "2dbe2c0a402854fd9126224525fcf409ae1674c2", "filename": "src/test/run-pass/typeid-intrinsic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(deprecated)]\n // aux-build:typeid-intrinsic-aux1.rs\n // aux-build:typeid-intrinsic-aux2.rs\n "}, {"sha": "a1047d47b4be9085be30759261698ded04257365", "filename": "src/test/run-pass/typestate-cfg-nesting.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_assignments)]\n+#![allow(unknown_lints)]\n // pretty-expanded FIXME #23616\n \n #![allow(dead_assignment)]"}, {"sha": "0f601021f6aa348c2b42a50536a950d7a8a9bea7", "filename": "src/test/run-pass/underscore-lifetimes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funderscore-lifetimes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n struct Foo<'a>(&'a u8);\n \n fn foo(x: &u8) -> Foo<'_> {"}, {"sha": "17ed465f99531ff270d015bbc37d6f5640340ca1", "filename": "src/test/run-pass/unit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funit.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_assignments)]\n+#![allow(unknown_lints)]\n // pretty-expanded FIXME #23616\n \n #![allow(unused_variables)]"}, {"sha": "4e2570695069753599cb67e0b66d0b68990ed17c", "filename": "src/test/run-pass/unreachable-code-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code-1.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(unreachable_code)]\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "4fffe98e4b2472f4c0076898c15f61d5de07b661", "filename": "src/test/run-pass/unreachable-code.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funreachable-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funreachable-code.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(dead_code)]\n \n #![allow(path_statements)]\n #![allow(unreachable_code)]"}, {"sha": "ac5a0db1cd2b993a32029317aae889dce1c08a79", "filename": "src/test/run-pass/unsafe-fn-called-from-unsafe-blk.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-blk.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n //\n // See also: compile-fail/unsafe-fn-called-from-safe.rs\n "}, {"sha": "a40a764bfc228be42f87d8d21d01c138571038ee", "filename": "src/test/run-pass/unsafe-fn-called-from-unsafe-fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsafe-fn-called-from-unsafe-fn.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n //\n // See also: compile-fail/unsafe-fn-called-from-safe.rs\n "}, {"sha": "6a58c9aa90b70c8786ea040debfbd37e1b5c5bea", "filename": "src/test/run-pass/unsized.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(type_alias_bounds)]\n+#![allow(dead_code)]\n // Test syntax checks for `?Sized` syntax.\n \n use std::marker::PhantomData;"}, {"sha": "e4480d7e97a4b147c8f23d0f18e32e8a8aa16014", "filename": "src/test/run-pass/unsized2.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsized2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funsized2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unconditional_recursion)]\n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n+#![allow(unused_imports)]\n #![feature(box_syntax)]\n \n // Test sized-ness checking in substitution."}, {"sha": "e0ddc854fa0825c46ee7a57c0ffa9a342f898c78", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n // ignore-emscripten no threads support\n \n use std::sync::mpsc::{channel, Sender};"}, {"sha": "c669b522ab2be16b1c4a03fb00f3233bcf1669b3", "filename": "src/test/run-pass/use-keyword-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-keyword-2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_variables)]\n pub struct A;\n \n mod test {"}, {"sha": "3115a359ff1452afdcf67dd9d82290b9f3cbb086", "filename": "src/test/run-pass/use-mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-mod.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_imports)]\n // pretty-expanded FIXME #23616\n \n pub use foo::bar::{self, First};"}, {"sha": "d6899e79152b8c27616b499e3e4c070a35a8f22d", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n // pretty-expanded FIXME #23616\n \n #![allow(unused_imports)]"}, {"sha": "4614e47609a6612b22280c9771d47592730a4dfe", "filename": "src/test/run-pass/utf8_idents.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Futf8_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Futf8_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_idents.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n //\n+#![allow(non_snake_case)]\n \n #![feature(non_ascii_idents)]\n "}, {"sha": "0c92778cec474db01b6f54ed0aa2c565e378eb2a", "filename": "src/test/run-pass/variant-attributes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fvariant-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fvariant-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvariant-attributes.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_attributes)]\n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n // pp-exact - Make sure we actually print the attributes\n // pretty-expanded FIXME #23616\n "}, {"sha": "799917c4b0538f595d2d6b0ffd54302a2cdce9e5", "filename": "src/test/run-pass/volatile-fat-ptr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fvolatile-fat-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fvolatile-fat-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvolatile-fat-ptr.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(stable_features)]\n #![feature(volatile)]\n use std::ptr::{read_volatile, write_volatile};\n "}, {"sha": "0c059cb607e77b635432c15321288123201de55a", "filename": "src/test/run-pass/warn-ctypes-inhibit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwarn-ctypes-inhibit.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n // compile-flags:-D improper-ctypes\n \n // pretty-expanded FIXME #23616"}, {"sha": "c688ec540da81e3152d79a414c4f18c3081d47b1", "filename": "src/test/run-pass/weird-exprs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fweird-exprs.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n+#![allow(dead_code)]\n+#![allow(unreachable_code)]\n+#![allow(unused_parens)]\n // compile-flags: -Z borrowck=compare\n \n #![recursion_limit = \"128\"]"}, {"sha": "b71f633bef45c79da6d35d6c67de51447a1c489f", "filename": "src/test/run-pass/wf-bound-region-in-object-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwf-bound-region-in-object-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwf-bound-region-in-object-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwf-bound-region-in-object-type.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n+#![allow(unused_variables)]\n // Test that the `wf` checker properly handles bound regions in object\n // types. Compiling this code used to trigger an ICE.\n "}, {"sha": "d190e91575eccf5e434b3df4eeb8897069dc83b9", "filename": "src/test/run-pass/writealias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwritealias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwritealias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwritealias.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(dead_code)]\n \n use std::sync::Mutex;\n "}, {"sha": "0fcd3efd9cec53938c4e58383d05ad0b04dfd071", "filename": "src/test/run-pass/wrong-hashset-issue-42918.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwrong-hashset-issue-42918.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fwrong-hashset-issue-42918.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwrong-hashset-issue-42918.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n //\n+#![allow(dead_code)]\n // compile-flags: -O\n \n use std::collections::HashSet;"}, {"sha": "8ea7ec67f1b316cc3c165e3a1b374a4c0cb66742", "filename": "src/test/run-pass/x86stdcall2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall2.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(non_camel_case_types)]\n pub type HANDLE = usize;\n pub type DWORD = u32;\n pub type SIZE_T = u32;"}, {"sha": "9910c53492686abbb5d22f1cc5dfc081449012f1", "filename": "src/test/run-pass/yield.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(unused_mut)]\n // ignore-emscripten no threads support\n \n use std::thread;"}, {"sha": "0b60345233947e18ee253b3ecaf43c2a238922e5", "filename": "src/test/run-pass/yield1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fyield1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9/src%2Ftest%2Frun-pass%2Fyield1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield1.rs?ref=c9f2c2de921c57abf75a14ed4eda0a0ec89e90e9", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![allow(unused_must_use)]\n+#![allow(unused_mut)]\n // ignore-emscripten no threads support\n \n use std::thread;"}]}