{"sha": "5209709e46ecfac2fd4db527952fe7ef96400801", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMDk3MDllNDZlY2ZhYzJmZDRkYjUyNzk1MmZlN2VmOTY0MDA4MDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-29T22:33:30Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-30T19:20:36Z"}, "message": "Fix matching of rvalues with destructors\n\nFixes #4542.", "tree": {"sha": "ae09745be3c75657f375c0a8d794cc23a878a8b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae09745be3c75657f375c0a8d794cc23a878a8b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5209709e46ecfac2fd4db527952fe7ef96400801", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5209709e46ecfac2fd4db527952fe7ef96400801", "html_url": "https://github.com/rust-lang/rust/commit/5209709e46ecfac2fd4db527952fe7ef96400801", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5209709e46ecfac2fd4db527952fe7ef96400801/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c492a2126fddb1b844ddee05a283a92329c6c041", "url": "https://api.github.com/repos/rust-lang/rust/commits/c492a2126fddb1b844ddee05a283a92329c6c041", "html_url": "https://github.com/rust-lang/rust/commit/c492a2126fddb1b844ddee05a283a92329c6c041"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "049e2162fe81068172bdfe1caca6ab72eae607b7", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=5209709e46ecfac2fd4db527952fe7ef96400801", "patch": "@@ -1701,7 +1701,7 @@ pub fn trans_match_inner(scope_cx: block,\n             None\n         }\n     };\n-    let lldiscr = discr_datum.to_ref_llval(bcx);\n+    let lldiscr = discr_datum.to_zeroable_ref_llval(bcx);\n     compile_submatch(bcx, matches, [lldiscr], chk);\n \n     let mut arm_cxs = ~[];"}, {"sha": "c0403083ce1c964d40d8c5f74b0039f73d0d0351", "filename": "src/librustc/middle/trans/datum.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdatum.rs?ref=5209709e46ecfac2fd4db527952fe7ef96400801", "patch": "@@ -471,6 +471,31 @@ pub impl Datum {\n         }\n     }\n \n+    fn to_zeroable_ref_llval(&self, bcx: block) -> ValueRef {\n+        /*!\n+         * Returns a by-ref llvalue that can be zeroed in order to\n+         * cancel cleanup. This is a kind of hokey bridge used\n+         * to adapt to the match code. Please don't use it for new code.\n+         */\n+\n+        match self.mode {\n+            // All by-ref datums are zeroable, even if we *could* just\n+            // cancel the cleanup.\n+            ByRef(_) => self.val,\n+\n+            // By value datums can't be zeroed (where would you store\n+            // the zero?) so we have to spill them. Add a temp cleanup\n+            // for this spilled value and cancel the cleanup on this\n+            // current value.\n+            ByValue => {\n+                let slot = self.to_ref_llval(bcx);\n+                self.cancel_clean(bcx);\n+                add_clean_temp_mem(bcx, slot, self.ty);\n+                slot\n+            }\n+        }\n+    }\n+\n     fn appropriate_mode(&self) -> DatumMode {\n         /*! See the `appropriate_mode()` function */\n "}, {"sha": "5f68b0e9a695355359f32d856b623d436c61d673", "filename": "src/test/run-pass/match-vec-rvalue.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5209709e46ecfac2fd4db527952fe7ef96400801/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-vec-rvalue.rs?ref=5209709e46ecfac2fd4db527952fe7ef96400801", "patch": "@@ -0,0 +1,12 @@\n+// Tests that matching rvalues with drops does not crash.\n+\n+fn main() {\n+    match ~[1, 2, 3] {\n+        x => {\n+            assert_eq!(x.len(), 3);\n+            assert_eq!(x[0], 1);\n+            assert_eq!(x[1], 2);\n+            assert_eq!(x[2], 3);\n+        }\n+    }\n+}"}]}