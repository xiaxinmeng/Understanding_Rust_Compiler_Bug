{"sha": "7e143e9043945006ad3338c9ff82e71a7de5e7c7", "node_id": "C_kwDOAAsO6NoAKDdlMTQzZTkwNDM5NDUwMDZhZDMzMzhjOWZmODJlNzFhN2RlNWU3Yzc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-25T04:46:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-25T04:46:49Z"}, "message": "Rollup merge of #110755 - TimNN:exp-tls, r=durin42\n\n[LLVM17] Adapt to `ExplicitEmulatedTLS` removal.\n\nhttps://github.com/llvm/llvm-project/commit/0d333bf0e3aa37e2e6ae211e3aa80631c3e01b85 removed the `ExplicitEmulatedTLS` field from `TargetOptions`.\n\nBefore that commit, `TargetMachine::useEmulatedTLS()` fell back to `TheTriple.hasDefaultEmulatedTLS()` if `ExplicitEmulatedTLS` was `false`/unset.\n\nAfter that commit, `TargetMachine::useEmulatedTLS()` directly returns `Options.EmulatedTLS`, and the fallback to `TheTriple.hasDefaultEmulatedTLS()` was moved to `InitTargetOptionsFromCodeGenFlags`.\n\nSince `rustc` does not use `InitTargetOptionsFromCodeGenFlags` (AFAICT) and instead manually builds `TargetOptions`, this PR initializes `EmulatedTLS` to `TheTriple.hasDefaultEmulatedTLS()`.\n\n(I'm not really familiar with the details of what this option does, or if there are any tests that depend on `hasDefaultEmulatedTLS` being used correctly, so this PR is mostly untested (it does compile against LLVM17, though)).\n\n`@rustbot` label: +llvm-main", "tree": {"sha": "18afadf50c77ce6b0c2ef2bbfdc70a37bae09a39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18afadf50c77ce6b0c2ef2bbfdc70a37bae09a39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e143e9043945006ad3338c9ff82e71a7de5e7c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkR1s5CRBK7hj4Ov3rIwAAdEUIAAxGEpcrt7Hf/ql7zw2pspgZ\ndOD4/nmtFHmrHKzu57kWvBg0vU/9v2NerAby59gga1ztNpmOeQJhILVTdlRM98I3\nhyEh9OeOPatMHtknMWhcnHvof5ZDB4A/4o+7FPydecbqMlhCmeU7e0wbuJHZxfgy\nVUsygbGT7/WO/kTOcVqEaRl4V3eqVieghjRlFHvhCmr+GBJSdWdXzQA1gFqGJUaq\nO5IXS6Pfr9nABBXjnRzzrYHSqj8bAu3e5Ue/jizuz2Th8jCiMHCR7zELc0WLYx0D\nD/Um0rese0Aw0KS6jgnMLkwo3vbn7KKtBZthQ/ymh/xwCoJ2peIcUhzyC8rTq14=\n=D/qE\n-----END PGP SIGNATURE-----\n", "payload": "tree 18afadf50c77ce6b0c2ef2bbfdc70a37bae09a39\nparent 5f33a8c026bb4f47cb184d066a809886b22fd172\nparent 047ed32148a39bc38ad18363ded9ab845dd313ee\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682398009 +0200\ncommitter GitHub <noreply@github.com> 1682398009 +0200\n\nRollup merge of #110755 - TimNN:exp-tls, r=durin42\n\n[LLVM17] Adapt to `ExplicitEmulatedTLS` removal.\n\nhttps://github.com/llvm/llvm-project/commit/0d333bf0e3aa37e2e6ae211e3aa80631c3e01b85 removed the `ExplicitEmulatedTLS` field from `TargetOptions`.\n\nBefore that commit, `TargetMachine::useEmulatedTLS()` fell back to `TheTriple.hasDefaultEmulatedTLS()` if `ExplicitEmulatedTLS` was `false`/unset.\n\nAfter that commit, `TargetMachine::useEmulatedTLS()` directly returns `Options.EmulatedTLS`, and the fallback to `TheTriple.hasDefaultEmulatedTLS()` was moved to `InitTargetOptionsFromCodeGenFlags`.\n\nSince `rustc` does not use `InitTargetOptionsFromCodeGenFlags` (AFAICT) and instead manually builds `TargetOptions`, this PR initializes `EmulatedTLS` to `TheTriple.hasDefaultEmulatedTLS()`.\n\n(I'm not really familiar with the details of what this option does, or if there are any tests that depend on `hasDefaultEmulatedTLS` being used correctly, so this PR is mostly untested (it does compile against LLVM17, though)).\n\n`@rustbot` label: +llvm-main\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e143e9043945006ad3338c9ff82e71a7de5e7c7", "html_url": "https://github.com/rust-lang/rust/commit/7e143e9043945006ad3338c9ff82e71a7de5e7c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e143e9043945006ad3338c9ff82e71a7de5e7c7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f33a8c026bb4f47cb184d066a809886b22fd172", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f33a8c026bb4f47cb184d066a809886b22fd172", "html_url": "https://github.com/rust-lang/rust/commit/5f33a8c026bb4f47cb184d066a809886b22fd172"}, {"sha": "047ed32148a39bc38ad18363ded9ab845dd313ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/047ed32148a39bc38ad18363ded9ab845dd313ee", "html_url": "https://github.com/rust-lang/rust/commit/047ed32148a39bc38ad18363ded9ab845dd313ee"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "1acdc95ca8d2dbfed253245a985a288eb97463be", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e143e9043945006ad3338c9ff82e71a7de5e7c7/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7e143e9043945006ad3338c9ff82e71a7de5e7c7/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=7e143e9043945006ad3338c9ff82e71a7de5e7c7", "patch": "@@ -410,10 +410,15 @@ extern \"C\" LLVMTargetMachineRef LLVMRustCreateTargetMachine(\n   }\n   Options.RelaxELFRelocations = RelaxELFRelocations;\n   Options.UseInitArray = UseInitArray;\n+\n+#if LLVM_VERSION_LT(17, 0)\n   if (ForceEmulatedTls) {\n     Options.ExplicitEmulatedTLS = true;\n     Options.EmulatedTLS = true;\n   }\n+#else\n+  Options.EmulatedTLS = ForceEmulatedTls || Trip.hasDefaultEmulatedTLS();\n+#endif\n \n   if (TrapUnreachable) {\n     // Tell LLVM to codegen `unreachable` into an explicit trap instruction."}]}