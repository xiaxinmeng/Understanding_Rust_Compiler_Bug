{"sha": "5c6f7b32aab683276d4feb1810244ccf72bda736", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNmY3YjMyYWFiNjgzMjc2ZDRmZWIxODEwMjQ0Y2NmNzJiZGE3MzY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-01-31T22:02:31Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-05-03T16:24:41Z"}, "message": "Stabilize fn-like proc macros in expression, pattern and statement positions", "tree": {"sha": "6765de04bbb863b97ec196f41f3fdf0a9d26f14a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6765de04bbb863b97ec196f41f3fdf0a9d26f14a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c6f7b32aab683276d4feb1810244ccf72bda736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c6f7b32aab683276d4feb1810244ccf72bda736", "html_url": "https://github.com/rust-lang/rust/commit/5c6f7b32aab683276d4feb1810244ccf72bda736", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c6f7b32aab683276d4feb1810244ccf72bda736/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f35df2c6944b843b08369c4b2ff3bdb0beb2d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f35df2c6944b843b08369c4b2ff3bdb0beb2d2", "html_url": "https://github.com/rust-lang/rust/commit/e5f35df2c6944b843b08369c4b2ff3bdb0beb2d2"}], "stats": {"total": 275, "additions": 73, "deletions": 202}, "files": [{"sha": "519a478ef4198eac67de65ecb7eda40b3ac379c6", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -679,7 +679,6 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         ExpandResult::Ready(match invoc.kind {\n             InvocationKind::Bang { mac, .. } => match ext {\n                 SyntaxExtensionKind::Bang(expander) => {\n-                    self.gate_proc_macro_expansion_kind(span, fragment_kind);\n                     let tok_result = match expander.expand(self.cx, span, mac.args.inner_tokens()) {\n                         Err(_) => return ExpandResult::Ready(fragment_kind.dummy(span)),\n                         Ok(ts) => ts,\n@@ -846,36 +845,6 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n         }\n     }\n \n-    fn gate_proc_macro_expansion_kind(&self, span: Span, kind: AstFragmentKind) {\n-        let kind = match kind {\n-            AstFragmentKind::Expr | AstFragmentKind::OptExpr => \"expressions\",\n-            AstFragmentKind::Pat => \"patterns\",\n-            AstFragmentKind::Stmts => \"statements\",\n-            AstFragmentKind::Ty\n-            | AstFragmentKind::Items\n-            | AstFragmentKind::TraitItems\n-            | AstFragmentKind::ImplItems\n-            | AstFragmentKind::ForeignItems => return,\n-            AstFragmentKind::Arms\n-            | AstFragmentKind::Fields\n-            | AstFragmentKind::FieldPats\n-            | AstFragmentKind::GenericParams\n-            | AstFragmentKind::Params\n-            | AstFragmentKind::StructFields\n-            | AstFragmentKind::Variants => panic!(\"unexpected AST fragment kind\"),\n-        };\n-        if self.cx.ecfg.proc_macro_hygiene() {\n-            return;\n-        }\n-        feature_err(\n-            self.cx.parse_sess,\n-            sym::proc_macro_hygiene,\n-            span,\n-            &format!(\"procedural macros cannot be expanded to {}\", kind),\n-        )\n-        .emit();\n-    }\n-\n     fn parse_ast_fragment(\n         &mut self,\n         toks: TokenStream,"}, {"sha": "98dcf9c1ada6da70a12542fe336ddeb5a8176621", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -430,8 +430,7 @@ declare_features! (\n     /// Allows `#[marker]` on certain traits allowing overlapping implementations.\n     (active, marker_trait_attr, \"1.30.0\", Some(29864), None),\n \n-    /// Allows macro invocations on modules expressions and statements and\n-    /// procedural macros to expand to non-items.\n+    /// Allows macro attributes on expressions, statements and non-inline modules.\n     (active, proc_macro_hygiene, \"1.30.0\", Some(54727), None),\n \n     /// Allows unsized rvalues at arguments and parameters."}, {"sha": "8d3c4ec239a1aaaae6fe9635683771a9e30c6896", "filename": "src/test/ui/auxiliary/cond_plugin.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fcond_plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fcond_plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fcond_plugin.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,7 +2,6 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_hygiene)]\n #![feature(proc_macro_quote)]\n \n extern crate proc_macro;"}, {"sha": "a05b8d54dc10ea75ac19ead4077d8a670045d3a5", "filename": "src/test/ui/auxiliary/hello_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fhello_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fhello_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fhello_macro.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,7 +2,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_hygiene, proc_macro_quote)]\n+#![feature(proc_macro_quote)]\n \n extern crate proc_macro;\n "}, {"sha": "0497e4ae07d9a199e23081ab0312c8e285e8fc89", "filename": "src/test/ui/auxiliary/proc_macro_def.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fproc_macro_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fauxiliary%2Fproc_macro_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fproc_macro_def.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,7 +2,6 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_hygiene)]\n #![feature(proc_macro_quote)]\n \n extern crate proc_macro;"}, {"sha": "48307f4d9ae649e254eae6096a8859eee9f9d7bc", "filename": "src/test/ui/macro-quote-cond.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacro-quote-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacro-quote-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro-quote-cond.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,9 +1,7 @@\n // run-pass\n-\n-#![allow(unused_parens)]\n // aux-build:cond_plugin.rs\n \n-#![feature(proc_macro_hygiene)]\n+#![allow(unused_parens)]\n \n extern crate cond_plugin;\n "}, {"sha": "2ba61acadcb854d73f30f2de59a93897fb53785d", "filename": "src/test/ui/macro-quote-test.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacro-quote-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacro-quote-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro-quote-test.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,10 +1,8 @@\n-// run-pass\n // Test that a macro can emit delimiters with nothing inside - `()`, `{}`\n \n+// run-pass\n // aux-build:hello_macro.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate hello_macro;\n \n fn main() {"}, {"sha": "cb8055de6e3f62b79bec2531cf084312213f0ca5", "filename": "src/test/ui/macros/auxiliary/proc_macro_sequence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fproc_macro_sequence.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,7 +2,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(proc_macro_span, proc_macro_hygiene, proc_macro_quote)]\n+#![feature(proc_macro_span, proc_macro_quote)]\n \n extern crate proc_macro;\n "}, {"sha": "9dcffc3405ead5f8d857b3058b567036a46f501d", "filename": "src/test/ui/proc-macro/attr-invalid-exprs.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,9 @@\n-// aux-build:attr-stmt-expr.rs\n-\n //! Attributes producing expressions in invalid locations\n \n-#![feature(stmt_expr_attributes, proc_macro_hygiene)]\n+// aux-build:attr-stmt-expr.rs\n+\n+#![feature(proc_macro_hygiene)]\n+#![feature(stmt_expr_attributes)]\n \n extern crate attr_stmt_expr;\n use attr_stmt_expr::{duplicate, no_output};"}, {"sha": "bcb54df0ecac75388f3b36ab2cda47f6d197d019", "filename": "src/test/ui/proc-macro/attr-invalid-exprs.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-invalid-exprs.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,11 +1,11 @@\n error: expected expression, found end of macro arguments\n-  --> $DIR/attr-invalid-exprs.rs:11:13\n+  --> $DIR/attr-invalid-exprs.rs:12:13\n    |\n LL |     let _ = #[no_output] \"Hello, world!\";\n    |             ^^^^^^^^^^^^\n \n error: macro expansion ignores token `,` and any following\n-  --> $DIR/attr-invalid-exprs.rs:14:13\n+  --> $DIR/attr-invalid-exprs.rs:15:13\n    |\n LL |     let _ = #[duplicate] \"Hello, world!\";\n    |             ^^^^^^^^^^^^- help: you might be missing a semicolon here: `;`\n@@ -15,7 +15,7 @@ LL |     let _ = #[duplicate] \"Hello, world!\";\n    = note: the usage of `duplicate!` is likely invalid in expression context\n \n error: macro expansion ignores token `,` and any following\n-  --> $DIR/attr-invalid-exprs.rs:23:9\n+  --> $DIR/attr-invalid-exprs.rs:24:9\n    |\n LL |         #[duplicate]\n    |         ^^^^^^^^^^^^- help: you might be missing a semicolon here: `;`"}, {"sha": "3a656d6485e1c957020d2568653624258f0e81ab", "filename": "src/test/ui/proc-macro/auxiliary/count_compound_ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fcount_compound_ops.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,7 @@\n // force-host\n // no-prefer-dynamic\n \n-#![feature(proc_macro_hygiene, proc_macro_quote)]\n+#![feature(proc_macro_quote)]\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;"}, {"sha": "3f3e12eed6c6f05106071dbd6fbbabdf4a30d6a9", "filename": "src/test/ui/proc-macro/auxiliary/generate-dollar-ident.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fgenerate-dollar-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fgenerate-dollar-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fgenerate-dollar-ident.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,6 @@\n // force-host\n // no-prefer-dynamic\n \n-#![feature(proc_macro_hygiene)]\n #![feature(proc_macro_quote)]\n #![crate_type = \"proc-macro\"]\n "}, {"sha": "2bd4d33360f8ae2ae6683329ac02093ef11c1b23", "filename": "src/test/ui/proc-macro/auxiliary/hygiene_example_codegen.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fhygiene_example_codegen.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,7 @@\n // force-host\n // no-prefer-dynamic\n \n-#![feature(proc_macro_quote, proc_macro_hygiene)]\n+#![feature(proc_macro_quote)]\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro as proc_macro_renamed; // This does not break `quote!`"}, {"sha": "c2a49870048602f36bd131f89b56029b4954968b", "filename": "src/test/ui/proc-macro/auxiliary/mixed-site-span.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmixed-site-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmixed-site-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fmixed-site-span.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,6 @@\n // force-host\n // no-prefer-dynamic\n \n-#![feature(proc_macro_hygiene)]\n #![feature(proc_macro_quote)]\n \n #![crate_type = \"proc-macro\"]"}, {"sha": "db660824fbb0b7f2808951a86683ddaf84005b6a", "filename": "src/test/ui/proc-macro/auxiliary/resolved-located-at.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Fresolved-located-at.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -3,7 +3,6 @@\n \n #![feature(proc_macro_def_site)]\n #![feature(proc_macro_diagnostic)]\n-#![feature(proc_macro_hygiene)]\n #![feature(proc_macro_quote)]\n #![crate_type = \"proc-macro\"]\n "}, {"sha": "92810791314df5ea0d3da8ad334c89e4c4b6539b", "filename": "src/test/ui/proc-macro/bang-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fbang-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fbang-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fbang-macro.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,6 @@\n // run-pass\n // aux-build:bang-macro.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate bang_macro;\n use bang_macro::rewrite;\n "}, {"sha": "12c77250c0e72c6d7bb846d97c932627f255bc9d", "filename": "src/test/ui/proc-macro/call-site.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fcall-site.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fcall-site.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcall-site.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,13 +1,7 @@\n-// run-pass\n-\n-#![allow(unused_variables)]\n-#![allow(unused_imports)]\n+// check-pass\n // aux-build:call-site.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate call_site;\n-use call_site::*;\n \n fn main() {\n     let x1 = 10;"}, {"sha": "2cb8718448898d5e4c966e08085fc7de094eec51", "filename": "src/test/ui/proc-macro/count_compound_ops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fcount_compound_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fcount_compound_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fcount_compound_ops.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,6 @@\n // run-pass\n // aux-build:count_compound_ops.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate count_compound_ops;\n use count_compound_ops::count_compound_ops;\n "}, {"sha": "346ed1207cde58f104ce7baf96c66e83329ffb90", "filename": "src/test/ui/proc-macro/hygiene_example.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fhygiene_example.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fhygiene_example.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fhygiene_example.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,11 +1,7 @@\n-// run-pass\n-\n-#![allow(unused_macros)]\n+// check-pass\n // aux-build:hygiene_example_codegen.rs\n // aux-build:hygiene_example.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate hygiene_example;\n use hygiene_example::hello;\n "}, {"sha": "52f7e00d572801dc6a0a6e65af47c851826175f1", "filename": "src/test/ui/proc-macro/is-available.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fis-available.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fis-available.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fis-available.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-#![feature(proc_macro_hygiene, proc_macro_is_available)]\n+#![feature(proc_macro_is_available)]\n \n extern crate proc_macro;\n "}, {"sha": "377a1f25b635c6a2f50e7aaee68a9caf2e22d688", "filename": "src/test/ui/proc-macro/lints_in_proc_macros.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,5 @@\n // aux-build:bang_proc_macro2.rs\n \n-#![feature(proc_macro_hygiene)]\n-#![allow(unused_macros)]\n-\n extern crate bang_proc_macro2;\n \n use bang_proc_macro2::bang_proc_macro2;"}, {"sha": "03c4d19268ceb2454a548388b6249cb5c1dc40c3", "filename": "src/test/ui/proc-macro/lints_in_proc_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,5 +1,5 @@\n error[E0425]: cannot find value `foobar2` in this scope\n-  --> $DIR/lints_in_proc_macros.rs:12:5\n+  --> $DIR/lints_in_proc_macros.rs:9:5\n    |\n LL |     bang_proc_macro2!();\n    |     ^^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `foobar`"}, {"sha": "4a0bf0b2f63ba19dca99dd16fd70ae0301e0ecfc", "filename": "src/test/ui/proc-macro/macro-use-bang.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-use-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-use-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-use-bang.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,6 @@\n // build-pass (FIXME(62277): could be check-pass?)\n // aux-build:test-macros.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n #[macro_use]\n extern crate test_macros;\n "}, {"sha": "0083846568e29cdf9ebe4638ef173b5c37437702", "filename": "src/test/ui/proc-macro/mixed-site-span.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,8 +2,6 @@\n \n // aux-build:mixed-site-span.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n #[macro_use]\n extern crate mixed_site_span;\n "}, {"sha": "c5ce8532d8b13a08d959f4e61abbd37c8e9e80c4", "filename": "src/test/ui/proc-macro/mixed-site-span.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,27 +1,27 @@\n error[E0426]: use of undeclared label `'label_use`\n-  --> $DIR/mixed-site-span.rs:15:9\n+  --> $DIR/mixed-site-span.rs:13:9\n    |\n LL |         proc_macro_rules!();\n    |         ^^^^^^^^^^^^^^^^^^^^ undeclared label `'label_use`\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `local_use` in this scope\n-  --> $DIR/mixed-site-span.rs:15:9\n+  --> $DIR/mixed-site-span.rs:13:9\n    |\n LL |         proc_macro_rules!();\n    |         ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `local_def` in this scope\n-  --> $DIR/mixed-site-span.rs:19:9\n+  --> $DIR/mixed-site-span.rs:17:9\n    |\n LL |         local_def;\n    |         ^^^^^^^^^ not found in this scope\n \n error[E0412]: cannot find type `ItemUse` in crate `$crate`\n-  --> $DIR/mixed-site-span.rs:26:1\n+  --> $DIR/mixed-site-span.rs:24:1\n    |\n LL | pass_dollar_crate!();\n    | ^^^^^^^^^^^^^^^^^^^^^ not found in `$crate`"}, {"sha": "e9e0349f2c2d7e16f05a277bb144df0fdffd77ee", "filename": "src/test/ui/proc-macro/multispan.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,5 @@\n // aux-build:multispan.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate multispan;\n \n use multispan::hello;"}, {"sha": "8dc2f3d12afd6a7d76bbd81ce7bfc9fb352c8e93", "filename": "src/test/ui/proc-macro/multispan.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,89 +1,89 @@\n error: hello to you, too!\n-  --> $DIR/multispan.rs:14:5\n+  --> $DIR/multispan.rs:12:5\n    |\n LL |     hello!(hi);\n    |     ^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:14:12\n+  --> $DIR/multispan.rs:12:12\n    |\n LL |     hello!(hi);\n    |            ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:17:5\n+  --> $DIR/multispan.rs:15:5\n    |\n LL |     hello!(hi hi);\n    |     ^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:17:12\n+  --> $DIR/multispan.rs:15:12\n    |\n LL |     hello!(hi hi);\n    |            ^^ ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:20:5\n+  --> $DIR/multispan.rs:18:5\n    |\n LL |     hello!(hi hi hi);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:20:12\n+  --> $DIR/multispan.rs:18:12\n    |\n LL |     hello!(hi hi hi);\n    |            ^^ ^^ ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:23:5\n+  --> $DIR/multispan.rs:21:5\n    |\n LL |     hello!(hi hey hi yo hi beep beep hi hi);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:23:12\n+  --> $DIR/multispan.rs:21:12\n    |\n LL |     hello!(hi hey hi yo hi beep beep hi hi);\n    |            ^^     ^^    ^^           ^^ ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:24:5\n+  --> $DIR/multispan.rs:22:5\n    |\n LL |     hello!(hi there, hi how are you? hi... hi.);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:24:12\n+  --> $DIR/multispan.rs:22:12\n    |\n LL |     hello!(hi there, hi how are you? hi... hi.);\n    |            ^^        ^^              ^^    ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:25:5\n+  --> $DIR/multispan.rs:23:5\n    |\n LL |     hello!(whoah. hi di hi di ho);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:25:19\n+  --> $DIR/multispan.rs:23:19\n    |\n LL |     hello!(whoah. hi di hi di ho);\n    |                   ^^    ^^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: hello to you, too!\n-  --> $DIR/multispan.rs:26:5\n+  --> $DIR/multispan.rs:24:5\n    |\n LL |     hello!(hi good hi and good bye);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n-  --> $DIR/multispan.rs:26:12\n+  --> $DIR/multispan.rs:24:12\n    |\n LL |     hello!(hi good hi and good bye);\n    |            ^^      ^^"}, {"sha": "2ed3cbc08cd513b473db35eaa289e8adc62abf4c", "filename": "src/test/ui/proc-macro/negative-token.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fnegative-token.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fnegative-token.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnegative-token.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,6 @@\n // run-pass\n // aux-build:negative-token.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate negative_token;\n \n use negative_token::*;"}, {"sha": "354657db4db380f5b068a3f04c1e94793b86a5ef", "filename": "src/test/ui/proc-macro/parent-source-spans.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,5 +1,6 @@\n // aux-build:parent-source-spans.rs\n-#![feature(decl_macro, proc_macro_hygiene)]\n+\n+#![feature(decl_macro)]\n \n extern crate parent_source_spans;\n "}, {"sha": "45a3f31e3ddcf511d300f7310553885f68a37294", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,5 +1,5 @@\n error: first final: \"hello\"\n-  --> $DIR/parent-source-spans.rs:15:12\n+  --> $DIR/parent-source-spans.rs:16:12\n    |\n LL |     three!($a, $b);\n    |            ^^\n@@ -10,7 +10,7 @@ LL |     one!(\"hello\", \"world\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: second final: \"world\"\n-  --> $DIR/parent-source-spans.rs:15:16\n+  --> $DIR/parent-source-spans.rs:16:16\n    |\n LL |     three!($a, $b);\n    |                ^^\n@@ -21,7 +21,7 @@ LL |     one!(\"hello\", \"world\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first parent: \"hello\"\n-  --> $DIR/parent-source-spans.rs:9:5\n+  --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n    |     ^^^^^^^^^^^^^\n@@ -32,7 +32,7 @@ LL |     one!(\"hello\", \"world\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: second parent: \"world\"\n-  --> $DIR/parent-source-spans.rs:9:5\n+  --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n    |     ^^^^^^^^^^^^^\n@@ -43,31 +43,31 @@ LL |     one!(\"hello\", \"world\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first grandparent: \"hello\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second grandparent: \"world\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"hello\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"world\"\n-  --> $DIR/parent-source-spans.rs:35:5\n+  --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"yay\"\n-  --> $DIR/parent-source-spans.rs:15:12\n+  --> $DIR/parent-source-spans.rs:16:12\n    |\n LL |     three!($a, $b);\n    |            ^^\n@@ -78,7 +78,7 @@ LL |     two!(\"yay\", \"rust\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: second final: \"rust\"\n-  --> $DIR/parent-source-spans.rs:15:16\n+  --> $DIR/parent-source-spans.rs:16:16\n    |\n LL |     three!($a, $b);\n    |                ^^\n@@ -89,55 +89,55 @@ LL |     two!(\"yay\", \"rust\");\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first parent: \"yay\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second parent: \"rust\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"yay\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"rust\"\n-  --> $DIR/parent-source-spans.rs:41:5\n+  --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"hip\"\n-  --> $DIR/parent-source-spans.rs:47:12\n+  --> $DIR/parent-source-spans.rs:48:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second final: \"hop\"\n-  --> $DIR/parent-source-spans.rs:47:19\n+  --> $DIR/parent-source-spans.rs:48:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error: first source: \"hip\"\n-  --> $DIR/parent-source-spans.rs:47:12\n+  --> $DIR/parent-source-spans.rs:48:12\n    |\n LL |     three!(\"hip\", \"hop\");\n    |            ^^^^^\n \n error: second source: \"hop\"\n-  --> $DIR/parent-source-spans.rs:47:19\n+  --> $DIR/parent-source-spans.rs:48:19\n    |\n LL |     three!(\"hip\", \"hop\");\n    |                   ^^^^^\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n@@ -153,7 +153,7 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n@@ -169,7 +169,7 @@ LL |     Ok(#[stable(feature = \"rust1\", since = \"1.0.0\")] T),\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `ok` in this scope\n-  --> $DIR/parent-source-spans.rs:28:5\n+  --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`"}, {"sha": "b3b677fa7ffed06647d53fc42f659bfa4ea804f8", "filename": "src/test/ui/proc-macro/proc-macro-gates.rs", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -45,13 +45,4 @@ fn attrs() {\n     //~^ ERROR: custom attributes cannot be applied to expressions\n }\n \n-fn main() {\n-    if let identity!(Some(_x)) = Some(3) {}\n-    //~^ ERROR: procedural macros cannot be expanded to patterns\n-\n-    empty!(struct S;); //~ ERROR: procedural macros cannot be expanded to statements\n-    empty!(let _x = 3;); //~ ERROR: procedural macros cannot be expanded to statements\n-\n-    let _x = identity!(3); //~ ERROR: procedural macros cannot be expanded to expressions\n-    let _x = [empty!(3)]; //~ ERROR: procedural macros cannot be expanded to expressions\n-}\n+fn main() {}"}, {"sha": "c0343495531775b7b2c2f57d44109e1bc24ac4b2", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "modified", "additions": 1, "deletions": 46, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -76,51 +76,6 @@ LL |     let _x = #[identity_attr] println!();\n    = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n    = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n-error[E0658]: procedural macros cannot be expanded to patterns\n-  --> $DIR/proc-macro-gates.rs:49:12\n-   |\n-LL |     if let identity!(Some(_x)) = Some(3) {}\n-   |            ^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n-   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n-\n-error[E0658]: procedural macros cannot be expanded to statements\n-  --> $DIR/proc-macro-gates.rs:52:5\n-   |\n-LL |     empty!(struct S;);\n-   |     ^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n-   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n-\n-error[E0658]: procedural macros cannot be expanded to statements\n-  --> $DIR/proc-macro-gates.rs:53:5\n-   |\n-LL |     empty!(let _x = 3;);\n-   |     ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n-   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n-\n-error[E0658]: procedural macros cannot be expanded to expressions\n-  --> $DIR/proc-macro-gates.rs:55:14\n-   |\n-LL |     let _x = identity!(3);\n-   |              ^^^^^^^^^^^^\n-   |\n-   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n-   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n-\n-error[E0658]: procedural macros cannot be expanded to expressions\n-  --> $DIR/proc-macro-gates.rs:56:15\n-   |\n-LL |     let _x = [empty!(3)];\n-   |               ^^^^^^^^^\n-   |\n-   = note: see issue #54727 <https://github.com/rust-lang/rust/issues/54727> for more information\n-   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n-\n-error: aborting due to 14 previous errors\n+error: aborting due to 9 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "b785573f2031f310ce7d16fee041b9e9eea1e3ff", "filename": "src/test/ui/proc-macro/resolved-located-at.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,5 @@\n // aux-build:resolved-located-at.rs\n \n-#![feature(proc_macro_hygiene)]\n-\n #[macro_use]\n extern crate resolved_located_at;\n "}, {"sha": "e71e79514f2fe7b2bb97f695a2a0f8b3be800b2a", "filename": "src/test/ui/proc-macro/resolved-located-at.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolved-located-at.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,13 +1,13 @@\n error: expected error\n-  --> $DIR/resolved-located-at.rs:9:25\n+  --> $DIR/resolved-located-at.rs:7:25\n    |\n LL |     resolve_located_at!(a b)\n    |                         ^\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0308]: mismatched types\n-  --> $DIR/resolved-located-at.rs:9:27\n+  --> $DIR/resolved-located-at.rs:7:27\n    |\n LL | fn main() {\n    |           - expected `()` because of default return type"}, {"sha": "5c149e4a1e5262928a285a905459b3c62d82bf13", "filename": "src/test/ui/proc-macro/span-api-tests.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,11 +1,8 @@\n // run-pass\n+// ignore-pretty\n // aux-build:span-api-tests.rs\n // aux-build:span-test-macros.rs\n \n-// ignore-pretty\n-\n-#![feature(proc_macro_hygiene)]\n-\n #[macro_use]\n extern crate span_test_macros;\n "}, {"sha": "21b137c99a74c77e50fb08fdd539c19b7ed9753f", "filename": "src/test/ui/proc-macro/three-equals.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,8 +1,5 @@\n // aux-build:three-equals.rs\n \n-\n-#![feature(proc_macro_hygiene)]\n-\n extern crate three_equals;\n \n use three_equals::three_equals;"}, {"sha": "33a8c762a945bc828148710324ee10cdac133ddc", "filename": "src/test/ui/proc-macro/three-equals.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,5 +1,5 @@\n error: found 2 equal signs, need exactly 3\n-  --> $DIR/three-equals.rs:15:5\n+  --> $DIR/three-equals.rs:12:5\n    |\n LL |     three_equals!(==);\n    |     ^^^^^^^^^^^^^^^^^^\n@@ -8,38 +8,38 @@ LL |     three_equals!(==);\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: expected EOF, found `=`.\n-  --> $DIR/three-equals.rs:18:21\n+  --> $DIR/three-equals.rs:15:21\n    |\n LL |     three_equals!(=====);\n    |                     ^^\n    |\n note: last good input was here\n-  --> $DIR/three-equals.rs:18:21\n+  --> $DIR/three-equals.rs:15:21\n    |\n LL |     three_equals!(=====);\n    |                     ^^\n    = help: input must be: `===`\n \n error: expected `=`, found `abc`.\n-  --> $DIR/three-equals.rs:21:19\n+  --> $DIR/three-equals.rs:18:19\n    |\n LL |     three_equals!(abc);\n    |                   ^^^\n \n error: expected `=`, found `!`.\n-  --> $DIR/three-equals.rs:24:19\n+  --> $DIR/three-equals.rs:21:19\n    |\n LL |     three_equals!(!!);\n    |                   ^\n \n error: expected EOF, found `a`.\n-  --> $DIR/three-equals.rs:27:22\n+  --> $DIR/three-equals.rs:24:22\n    |\n LL |     three_equals!(===a);\n    |                      ^\n    |\n note: last good input was here\n-  --> $DIR/three-equals.rs:27:21\n+  --> $DIR/three-equals.rs:24:21\n    |\n LL |     three_equals!(===a);\n    |                     ^"}, {"sha": "66f9cdc5567ca584311f41c82fff9a4b3bd8d35c", "filename": "src/test/ui/proc_macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftest%2Fui%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc_macro.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -2,8 +2,6 @@\n // aux-build:proc_macro_def.rs\n // ignore-cross-compile\n \n-#![feature(proc_macro_hygiene)]\n-\n extern crate proc_macro_def;\n \n use proc_macro_def::{attr_tru, attr_identity, identity, ret_tru, tru};"}, {"sha": "ba946563ec595d1624fb5a6515a11e4d2fcb1233", "filename": "src/tools/clippy/mini-macro/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Fmini-macro%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Fmini-macro%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fmini-macro%2Fsrc%2Flib.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,4 +1,4 @@\n-#![feature(proc_macro_quote, proc_macro_hygiene)]\n+#![feature(proc_macro_quote)]\n #![deny(rust_2018_idioms)]\n // FIXME: Remove this attribute once the weird failure is gone.\n #![allow(unused_extern_crates)]"}, {"sha": "05ffb55f6207e49f1c7dcc7ccdd2ed91a05f1bae", "filename": "src/tools/clippy/tests/ui/auxiliary/proc_macro_derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fauxiliary%2Fproc_macro_derive.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,7 @@\n // no-prefer-dynamic\n \n #![crate_type = \"proc-macro\"]\n-#![feature(repr128, proc_macro_hygiene, proc_macro_quote)]\n+#![feature(repr128, proc_macro_quote)]\n \n extern crate proc_macro;\n "}, {"sha": "a548415da62bdbc880519388be38971a77472cdc", "filename": "src/tools/clippy/tests/ui/crashes/ice-3741.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c6f7b32aab683276d4feb1810244ccf72bda736/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fcrashes%2Fice-3741.rs?ref=5c6f7b32aab683276d4feb1810244ccf72bda736", "patch": "@@ -1,7 +1,6 @@\n // aux-build:proc_macro_crash.rs\n // run-pass\n \n-#![feature(proc_macro_hygiene)]\n #![warn(clippy::suspicious_else_formatting)]\n \n extern crate proc_macro_crash;"}]}