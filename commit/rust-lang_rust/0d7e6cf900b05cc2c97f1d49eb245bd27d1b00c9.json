{"sha": "0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkN2U2Y2Y5MDBiMDVjYzJjOTdmMWQ0OWViMjQ1YmQyN2QxYjAwYzk=", "commit": {"author": {"name": "Freyskeyd", "email": "simon.paitrault@gmail.com", "date": "2017-04-18T11:28:05Z"}, "committer": {"name": "Freyskeyd", "email": "simon.paitrault@gmail.com", "date": "2017-04-28T18:40:11Z"}, "message": "refac Move levenchstein before context dependent check\n\nSigned-off-by: Freyskeyd <simon.paitrault@gmail.com>", "tree": {"sha": "b6d5b3a176fb5f6728f75f3195e6f7739554f6c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6d5b3a176fb5f6728f75f3195e6f7739554f6c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJZA4yLAAoJEFpkXe33kPETzKgH/R2qsrICdd9o6wQEhYKiovCz\ns/KutGXgP//0BmxAvHxBf3Iw78+7T8T8tMlsL8Vn8Bgdirs+xtbHnjQRAKdPOa3R\nrEKzs/G6oc8NRYB5N2HrfbRIUv9SgXnWnjbg57dFUGuWrVhdY/IvQojjSv306Srn\na1mVFt1vimmt2Fn7iyvw90N3HR5S6AHMrXcEGOgsbwALg835c4HBJGroyxj1Y1r2\nevMdGzkkNsV7z1nukopK/H7+QV1MOZUAjNTj/Irz4qVdWnuBIi9efGaS6S++wIXz\ni3ABmCFotZ+VPJkzSRoUjcBLCVplKVIf/sBKNq+UlnOwuWRApWcNQRg7+O+wqH8=\n=TYPW\n-----END PGP SIGNATURE-----", "payload": "tree b6d5b3a176fb5f6728f75f3195e6f7739554f6c2\nparent 0777c757a6832dc5f8f218377f99960f5477311f\nauthor Freyskeyd <simon.paitrault@gmail.com> 1492514885 +0200\ncommitter Freyskeyd <simon.paitrault@gmail.com> 1493404811 +0200\n\nrefac Move levenchstein before context dependent check\n\nSigned-off-by: Freyskeyd <simon.paitrault@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "html_url": "https://github.com/rust-lang/rust/commit/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/comments", "author": {"login": "Freyskeyd", "id": 1394604, "node_id": "MDQ6VXNlcjEzOTQ2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1394604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freyskeyd", "html_url": "https://github.com/Freyskeyd", "followers_url": "https://api.github.com/users/Freyskeyd/followers", "following_url": "https://api.github.com/users/Freyskeyd/following{/other_user}", "gists_url": "https://api.github.com/users/Freyskeyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freyskeyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freyskeyd/subscriptions", "organizations_url": "https://api.github.com/users/Freyskeyd/orgs", "repos_url": "https://api.github.com/users/Freyskeyd/repos", "events_url": "https://api.github.com/users/Freyskeyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Freyskeyd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Freyskeyd", "id": 1394604, "node_id": "MDQ6VXNlcjEzOTQ2MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1394604?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Freyskeyd", "html_url": "https://github.com/Freyskeyd", "followers_url": "https://api.github.com/users/Freyskeyd/followers", "following_url": "https://api.github.com/users/Freyskeyd/following{/other_user}", "gists_url": "https://api.github.com/users/Freyskeyd/gists{/gist_id}", "starred_url": "https://api.github.com/users/Freyskeyd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Freyskeyd/subscriptions", "organizations_url": "https://api.github.com/users/Freyskeyd/orgs", "repos_url": "https://api.github.com/users/Freyskeyd/repos", "events_url": "https://api.github.com/users/Freyskeyd/events{/privacy}", "received_events_url": "https://api.github.com/users/Freyskeyd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0777c757a6832dc5f8f218377f99960f5477311f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0777c757a6832dc5f8f218377f99960f5477311f", "html_url": "https://github.com/rust-lang/rust/commit/0777c757a6832dc5f8f218377f99960f5477311f"}], "stats": {"total": 79, "additions": 65, "deletions": 14}, "files": [{"sha": "a4e9a8be49f4516670466e344e1898d62834a5da", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -2312,6 +2312,14 @@ impl<'a> Resolver<'a> {\n                 }\n             }\n \n+            let mut levenshtein_worked = false;\n+\n+            // Try Levenshtein.\n+            if let Some(candidate) = this.lookup_typo_candidate(path, ns, is_expected) {\n+                err.span_label(ident_span, &format!(\"did you mean `{}`?\", candidate));\n+                levenshtein_worked = true;\n+            }\n+\n             // Try context dependent help if relaxed lookup didn't work.\n             if let Some(def) = def {\n                 match (def, source) {\n@@ -2354,14 +2362,10 @@ impl<'a> Resolver<'a> {\n                 }\n             }\n \n-            // Try Levenshtein if nothing else worked.\n-            if let Some(candidate) = this.lookup_typo_candidate(path, ns, is_expected) {\n-                err.span_label(ident_span, &format!(\"did you mean `{}`?\", candidate));\n-                return err;\n-            }\n-\n             // Fallback label.\n-            err.span_label(base_span, &fallback_label);\n+            if !levenshtein_worked {\n+                err.span_label(base_span, &fallback_label);\n+            }\n             err\n         };\n         let report_errors = |this: &mut Self, def: Option<Def>| {"}, {"sha": "f290a74861d1825b9d622fb23b107f74c7c75af3", "filename": "src/test/ui/resolve/issue-39226.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.rs?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+struct Handle {}\n+\n+struct Something {\n+    handle: Handle\n+}\n+\n+fn main() {\n+    let handle: Handle = Handle {};\n+\n+    let s: Something = Something {\n+        handle: Handle\n+        //~^ ERROR cannot find value `Handle` in this scope\n+        //~| NOTE did you mean `handle`?\n+    };\n+}"}, {"sha": "f6ee0b025bb2e9a78c688d761626b8e03a0b6490", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -0,0 +1,11 @@\n+error[E0423]: expected value, found struct `Handle`\n+  --> $DIR/issue-39226.rs:20:17\n+   |\n+20 |         handle: Handle\n+   |                 ^^^^^^\n+   |                 |\n+   |                 did you mean `handle`?\n+   |                 did you mean `Handle { /* fields */ }`?\n+\n+error: aborting due to previous error\n+"}, {"sha": "19adecc7b4bd2212c9848cf996d70a9af4150316", "filename": "src/test/ui/resolve/issue-5035.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035.stderr?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -8,7 +8,10 @@ error[E0404]: expected trait, found type alias `K`\n   --> $DIR/issue-5035.rs:13:6\n    |\n 13 | impl K for isize {} //~ ERROR expected trait, found type alias `K`\n-   |      ^ type aliases cannot be used for traits\n+   |      ^\n+   |      |\n+   |      type aliases cannot be used for traits\n+   |      did you mean `I`?\n \n error: cannot continue compilation due to previous error\n "}, {"sha": "940e4acabb2c16b8016f45733a08a724e6b033c9", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -5,6 +5,7 @@ error[E0423]: expected value, found struct `Z`\n    |         ^\n    |         |\n    |         did you mean `Z { /* fields */ }`?\n+   |         did you mean `S`?\n    |         constructor is not visible here due to private fields\n    |\n    = help: possible better candidate is found in another module, you can import it into scope:"}, {"sha": "f254ad3d87d86ec8cd7368416c917f88606f1fb3", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -26,8 +26,9 @@ error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:45:5\n    |\n 45 |     a::b.J\n-   |     ^^^^--\n-   |     |\n+   |     ^^^---\n+   |     |  |\n+   |     |  did you mean `I`?\n    |     did you mean `a::b::J`?\n \n error[E0423]: expected value, found module `a`\n@@ -50,8 +51,9 @@ error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:61:5\n    |\n 61 |     a::b.f()\n-   |     ^^^^----\n-   |     |\n+   |     ^^^-----\n+   |     |  |\n+   |     |  did you mean `I`?\n    |     did you mean `a::b::f(...)`?\n \n error[E0423]: expected value, found module `a::b`"}, {"sha": "e2ef8f0e568fcf4f47ca1ed331d22eb9fa5b6dbe", "filename": "src/test/ui/resolve/tuple-struct-alias.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr?ref=0d7e6cf900b05cc2c97f1d49eb245bd27d1b00c9", "patch": "@@ -14,13 +14,19 @@ error[E0423]: expected function, found type alias `A`\n   --> $DIR/tuple-struct-alias.rs:24:13\n    |\n 24 |     let s = A(0, 1);\n-   |             ^ did you mean `A { /* fields */ }`?\n+   |             ^\n+   |             |\n+   |             did you mean `S`?\n+   |             did you mean `A { /* fields */ }`?\n \n error[E0532]: expected tuple struct/variant, found type alias `A`\n   --> $DIR/tuple-struct-alias.rs:26:9\n    |\n 26 |         A(..) => {}\n-   |         ^ did you mean `A { /* fields */ }`?\n+   |         ^\n+   |         |\n+   |         did you mean `S`?\n+   |         did you mean `A { /* fields */ }`?\n \n error: aborting due to 4 previous errors\n "}]}