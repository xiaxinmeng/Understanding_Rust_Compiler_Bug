{"sha": "0833484914981506060b16d9914ca1e9b6592bcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4MzM0ODQ5MTQ5ODE1MDYwNjBiMTZkOTkxNGNhMWU5YjY1OTJiY2M=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-20T20:49:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-20T20:49:17Z"}, "message": "Merge #6259\n\n6259: allow xtask install --client[=CLIENT] to specify client r=Emilgardis a=Emilgardis\n\n\n\nCo-authored-by: Emil Gardstr\u00f6m <emil.gardstrom@gmail.com>", "tree": {"sha": "8fa928a835be1d614d3f6e9e0a93600ea2408b2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fa928a835be1d614d3f6e9e0a93600ea2408b2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0833484914981506060b16d9914ca1e9b6592bcc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfj01NCRBK7hj4Ov3rIwAAdHIIACbgS5bDef0p+uPS66RJcXL+\nNyFjOUnrlXFvqoHWoeU9Ejjl4bdfynDsHwNVMGXb+xNrU4PMuv7IzQPSq6D0OeKD\n1humVtIDZa0VIUTQuDKfZeCQEPh4jKQ/FD/bIJzcfQ2Xl8FmQzKSKG6m9waB0eeY\ncv2/eQrUMa9Bcan5/p6CasYXr5P0QhW7VsOfv1XJERODo2Y+lMtjpWzpRGSSr688\nhrQ2qQoHmyycaIYmeCQgarD7akhOwfbAtqXEq+u/0vbqF5ImVIb8yneLawyToxAS\n8Mhq2xvmFsZoLjP+ch3v4OdM9UwzK7wHm606Wtm5kjFRAQNhj5ebAwDRcHdnf6Y=\n=pdyL\n-----END PGP SIGNATURE-----\n", "payload": "tree 8fa928a835be1d614d3f6e9e0a93600ea2408b2f\nparent 08823c82627540d42de055112eaf8745c694ff47\nparent c5b1c36b2beeb68c2ede28e78a5aa7b8227a0d67\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603226957 +0000\ncommitter GitHub <noreply@github.com> 1603226957 +0000\n\nMerge #6259\n\n6259: allow xtask install --client[=CLIENT] to specify client r=Emilgardis a=Emilgardis\n\n\n\nCo-authored-by: Emil Gardstr\u00f6m <emil.gardstrom@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0833484914981506060b16d9914ca1e9b6592bcc", "html_url": "https://github.com/rust-lang/rust/commit/0833484914981506060b16d9914ca1e9b6592bcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0833484914981506060b16d9914ca1e9b6592bcc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08823c82627540d42de055112eaf8745c694ff47", "url": "https://api.github.com/repos/rust-lang/rust/commits/08823c82627540d42de055112eaf8745c694ff47", "html_url": "https://github.com/rust-lang/rust/commit/08823c82627540d42de055112eaf8745c694ff47"}, {"sha": "c5b1c36b2beeb68c2ede28e78a5aa7b8227a0d67", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5b1c36b2beeb68c2ede28e78a5aa7b8227a0d67", "html_url": "https://github.com/rust-lang/rust/commit/c5b1c36b2beeb68c2ede28e78a5aa7b8227a0d67"}], "stats": {"total": 68, "additions": 51, "deletions": 17}, "files": [{"sha": "78a8af7974a2d54a10b46bb437b86ad6cc1ed26e", "filename": "xtask/src/install.rs", "status": "modified", "additions": 40, "deletions": 9, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/0833484914981506060b16d9914ca1e9b6592bcc/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0833484914981506060b16d9914ca1e9b6592bcc/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=0833484914981506060b16d9914ca1e9b6592bcc", "patch": "@@ -13,8 +13,43 @@ pub struct InstallCmd {\n     pub server: Option<ServerOpt>,\n }\n \n+#[derive(Clone, Copy)]\n pub enum ClientOpt {\n     VsCode,\n+    VsCodeInsiders,\n+    VsCodium,\n+    VsCodeOss,\n+    Any,\n+}\n+\n+impl ClientOpt {\n+    pub const fn as_cmds(&self) -> &'static [&'static str] {\n+        match self {\n+            ClientOpt::VsCode => &[\"code\"],\n+            ClientOpt::VsCodeInsiders => &[\"code-insiders\"],\n+            ClientOpt::VsCodium => &[\"codium\"],\n+            ClientOpt::VsCodeOss => &[\"code-oss\"],\n+            ClientOpt::Any => &[\"code\", \"code-insiders\", \"codium\", \"code-oss\"],\n+        }\n+    }\n+}\n+\n+impl Default for ClientOpt {\n+    fn default() -> Self {\n+        ClientOpt::Any\n+    }\n+}\n+\n+impl std::str::FromStr for ClientOpt {\n+    type Err = anyhow::Error;\n+\n+    fn from_str(s: &str) -> Result<Self, Self::Err> {\n+        [ClientOpt::VsCode, ClientOpt::VsCodeInsiders, ClientOpt::VsCodium, ClientOpt::VsCodeOss]\n+            .iter()\n+            .copied()\n+            .find(|c| [s] == c.as_cmds())\n+            .ok_or_else(|| anyhow::format_err!(\"no such client\"))\n+    }\n }\n \n pub struct ServerOpt {\n@@ -74,17 +109,13 @@ fn fix_path_for_mac() -> Result<()> {\n     Ok(())\n }\n \n-fn install_client(ClientOpt::VsCode: ClientOpt) -> Result<()> {\n-    let _dir = pushd(\"./editors/code\")?;\n+fn install_client(client_opt: ClientOpt) -> Result<()> {\n+    let _dir = pushd(\"./editors/code\");\n \n     let find_code = |f: fn(&str) -> bool| -> Result<&'static str> {\n-        [\"code\", \"code-insiders\", \"codium\", \"code-oss\"]\n-            .iter()\n-            .copied()\n-            .find(|bin| f(bin))\n-            .ok_or_else(|| {\n-                format_err!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")\n-            })\n+        client_opt.as_cmds().iter().copied().find(|bin| f(bin)).ok_or_else(|| {\n+            format_err!(\"Can't execute `code --version`. Perhaps it is not in $PATH?\")\n+        })\n     };\n \n     let installed_extensions = if cfg!(unix) {"}, {"sha": "536a670477f34d7a2696b74317c9f7c148a64b00", "filename": "xtask/src/main.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0833484914981506060b16d9914ca1e9b6592bcc/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0833484914981506060b16d9914ca1e9b6592bcc/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=0833484914981506060b16d9914ca1e9b6592bcc", "patch": "@@ -16,7 +16,7 @@ use xshell::pushd;\n use xtask::{\n     codegen::{self, Mode},\n     dist::DistCmd,\n-    install::{ClientOpt, InstallCmd, Malloc, ServerOpt},\n+    install::{InstallCmd, Malloc, ServerOpt},\n     metrics::MetricsCmd,\n     pre_cache::PreCacheCmd,\n     pre_commit, project_root,\n@@ -46,19 +46,20 @@ USAGE:\n     cargo xtask install [FLAGS]\n \n FLAGS:\n-        --client-code    Install only VS Code plugin\n-        --server         Install only the language server\n-        --mimalloc       Use mimalloc for server\n-    -h, --help           Prints help information\n+        --client[=CLIENT] Install only VS Code plugin.\n+                          CLIENT is one of 'code', 'code-insiders', 'codium', or 'code-oss'\n+        --server          Install only the language server\n+        --mimalloc        Use mimalloc for server\n+    -h, --help            Prints help information\n         \"\n                 );\n                 return Ok(());\n             }\n             let server = args.contains(\"--server\");\n-            let client_code = args.contains(\"--client-code\");\n+            let client_code = args.contains(\"--client\");\n             if server && client_code {\n                 eprintln!(\n-                    \"error: The argument `--server` cannot be used with `--client-code`\\n\\n\\\n+                    \"error: The argument `--server` cannot be used with `--client`\\n\\n\\\n                      For more information try --help\"\n                 );\n                 return Ok(());\n@@ -67,10 +68,12 @@ FLAGS:\n             let malloc =\n                 if args.contains(\"--mimalloc\") { Malloc::Mimalloc } else { Malloc::System };\n \n+            let client_opt = args.opt_value_from_str(\"--client\")?;\n+\n             args.finish()?;\n \n             InstallCmd {\n-                client: if server { None } else { Some(ClientOpt::VsCode) },\n+                client: if server { None } else { Some(client_opt.unwrap_or_default()) },\n                 server: if client_code { None } else { Some(ServerOpt { malloc }) },\n             }\n             .run()"}]}