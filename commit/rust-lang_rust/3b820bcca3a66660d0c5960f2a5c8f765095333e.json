{"sha": "3b820bcca3a66660d0c5960f2a5c8f765095333e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiODIwYmNjYTNhNjY2NjBkMGM1OTYwZjJhNWM4Zjc2NTA5NTMzM2U=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-27T14:35:22Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-27T14:35:22Z"}, "message": "Merge #346\n\n346: add function to completion ctx r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b7e3edf5a0bebb168330ac56a261ed5b0a90d43e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7e3edf5a0bebb168330ac56a261ed5b0a90d43e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b820bcca3a66660d0c5960f2a5c8f765095333e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b820bcca3a66660d0c5960f2a5c8f765095333e", "html_url": "https://github.com/rust-lang/rust/commit/3b820bcca3a66660d0c5960f2a5c8f765095333e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b820bcca3a66660d0c5960f2a5c8f765095333e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "7a1ed6400dbc57656eebc345f7e2ffa963bf808e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1ed6400dbc57656eebc345f7e2ffa963bf808e", "html_url": "https://github.com/rust-lang/rust/commit/7a1ed6400dbc57656eebc345f7e2ffa963bf808e"}, {"sha": "e4de2c8d7f5ced7a24d0a76213ab113218c99d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4de2c8d7f5ced7a24d0a76213ab113218c99d30", "html_url": "https://github.com/rust-lang/rust/commit/e4de2c8d7f5ced7a24d0a76213ab113218c99d30"}], "stats": {"total": 40, "additions": 19, "deletions": 21}, "files": [{"sha": "f24835d17779cacfea67ea7570a719e1ecc1be7f", "filename": "crates/ra_analysis/src/completion/complete_dot.rs", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -6,20 +6,9 @@ use crate::completion::{CompletionContext, Completions, CompletionKind, Completi\n \n /// Complete dot accesses, i.e. fields or methods (currently only fields).\n pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) -> Cancelable<()> {\n-    let module = if let Some(module) = &ctx.module {\n-        module\n-    } else {\n-        return Ok(());\n-    };\n-    let function = if let Some(fn_def) = ctx.enclosing_fn {\n-        hir::source_binder::function_from_module(ctx.db, module, fn_def)\n-    } else {\n-        return Ok(());\n-    };\n-    let receiver = if let Some(receiver) = ctx.dot_receiver {\n-        receiver\n-    } else {\n-        return Ok(());\n+    let (function, receiver) = match (&ctx.function, ctx.dot_receiver) {\n+        (Some(function), Some(receiver)) => (function, receiver),\n+        _ => return Ok(()),\n     };\n     let infer_result = function.infer(ctx.db)?;\n     let receiver_ty = if let Some(ty) = infer_result.type_of_node(receiver.syntax()) {"}, {"sha": "d1e0a20a8eb3206e922fef2afb05f2cf62172c8d", "filename": "crates/ra_analysis/src/completion/complete_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -18,7 +18,7 @@ pub(super) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n     if !ctx.is_trivial_path {\n         return;\n     }\n-    let fn_def = match ctx.enclosing_fn {\n+    let fn_def = match ctx.function_syntax {\n         Some(it) => it,\n         None => return,\n     };"}, {"sha": "514fd2f8848f229df412df3cfa58482ca171e915", "filename": "crates/ra_analysis/src/completion/complete_scope.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -14,8 +14,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n         Some(it) => it,\n         None => return Ok(()),\n     };\n-    if let Some(fn_def) = ctx.enclosing_fn {\n-        let function = hir::source_binder::function_from_module(ctx.db, module, fn_def);\n+    if let Some(function) = &ctx.function {\n         let scopes = function.scopes(ctx.db);\n         complete_fn(acc, &scopes, ctx.offset);\n     }"}, {"sha": "a495751dda02e4c4a3a2fab4f2481147437eca86", "filename": "crates/ra_analysis/src/completion/complete_snippet.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -7,7 +7,7 @@ fn snippet(label: &str, snippet: &str) -> Builder {\n }\n \n pub(super) fn complete_expr_snippet(acc: &mut Completions, ctx: &CompletionContext) {\n-    if !(ctx.is_trivial_path && ctx.enclosing_fn.is_some()) {\n+    if !(ctx.is_trivial_path && ctx.function_syntax.is_some()) {\n         return;\n     }\n     snippet(\"pd\", \"eprintln!(\\\"$0 = {:?}\\\", $0);\").add_to(acc);"}, {"sha": "71bf7fd32d4a351b61507e87c4ab499b111ad5ca", "filename": "crates/ra_analysis/src/completion/completion_context.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -22,7 +22,8 @@ pub(super) struct CompletionContext<'a> {\n     pub(super) offset: TextUnit,\n     pub(super) leaf: SyntaxNodeRef<'a>,\n     pub(super) module: Option<hir::Module>,\n-    pub(super) enclosing_fn: Option<ast::FnDef<'a>>,\n+    pub(super) function: Option<hir::Function>,\n+    pub(super) function_syntax: Option<ast::FnDef<'a>>,\n     pub(super) is_param: bool,\n     /// A single-indent path, like `foo`.\n     pub(super) is_trivial_path: bool,\n@@ -52,7 +53,8 @@ impl<'a> CompletionContext<'a> {\n             leaf,\n             offset: position.offset,\n             module,\n-            enclosing_fn: None,\n+            function: None,\n+            function_syntax: None,\n             is_param: false,\n             is_trivial_path: false,\n             path_prefix: None,\n@@ -112,11 +114,18 @@ impl<'a> CompletionContext<'a> {\n             _ => (),\n         }\n \n-        self.enclosing_fn = self\n+        self.function_syntax = self\n             .leaf\n             .ancestors()\n             .take_while(|it| it.kind() != SOURCE_FILE && it.kind() != MODULE)\n             .find_map(ast::FnDef::cast);\n+        match (&self.module, self.function_syntax) {\n+            (Some(module), Some(fn_def)) => {\n+                let function = source_binder::function_from_module(self.db, module, fn_def);\n+                self.function = Some(function);\n+            }\n+            _ => (),\n+        }\n \n         let parent = match name_ref.syntax().parent() {\n             Some(it) => it,"}, {"sha": "d4159cee23d7aed18c87358bc1fbcb131fc70d35", "filename": "crates/ra_hir/src/function.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_hir%2Fsrc%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b820bcca3a66660d0c5960f2a5c8f765095333e/crates%2Fra_hir%2Fsrc%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ffunction.rs?ref=3b820bcca3a66660d0c5960f2a5c8f765095333e", "patch": "@@ -18,6 +18,7 @@ pub use self::scope::FnScopes;\n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub struct FnId(pub(crate) DefId);\n \n+#[derive(Debug)]\n pub struct Function {\n     pub(crate) fn_id: FnId,\n }"}]}