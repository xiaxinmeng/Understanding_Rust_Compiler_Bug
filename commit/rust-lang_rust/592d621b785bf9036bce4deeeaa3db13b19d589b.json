{"sha": "592d621b785bf9036bce4deeeaa3db13b19d589b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5MmQ2MjFiNzg1YmY5MDM2YmNlNGRlZWVhYTNkYjEzYjE5ZDU4OWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-03T07:41:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-03T07:41:37Z"}, "message": "Auto merge of #1444 - RalfJung:rustup, r=RalfJung\n\nrustup, and adjust timing tests\n\nI saw a timing failure on macOS, so leave some more slack space.", "tree": {"sha": "59ce1e4e32669beb71af585341d371c5f9307e21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59ce1e4e32669beb71af585341d371c5f9307e21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/592d621b785bf9036bce4deeeaa3db13b19d589b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/592d621b785bf9036bce4deeeaa3db13b19d589b", "html_url": "https://github.com/rust-lang/rust/commit/592d621b785bf9036bce4deeeaa3db13b19d589b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/592d621b785bf9036bce4deeeaa3db13b19d589b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faff9a7ad9f2d07c1702bd8be392134d27e3eaf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/faff9a7ad9f2d07c1702bd8be392134d27e3eaf8", "html_url": "https://github.com/rust-lang/rust/commit/faff9a7ad9f2d07c1702bd8be392134d27e3eaf8"}, {"sha": "dcb2b30982352362a0f10cbd45be298b31306eff", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcb2b30982352362a0f10cbd45be298b31306eff", "html_url": "https://github.com/rust-lang/rust/commit/dcb2b30982352362a0f10cbd45be298b31306eff"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "d163c31622820c74d87f8ea32a451845a24a52fb", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/592d621b785bf9036bce4deeeaa3db13b19d589b/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/592d621b785bf9036bce4deeeaa3db13b19d589b/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=592d621b785bf9036bce4deeeaa3db13b19d589b", "patch": "@@ -1 +1 @@\n-d3cba254e464303a6495942f3a831c2bbd7f1768\n+680a4b2fbdca0dc6c5ceec826a8dbeabe28f305d"}, {"sha": "8aa3b210f4b0f6856f06ff2ec396fd09adc2e264", "filename": "tests/run-pass/concurrency/libc_pthread_cond.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/592d621b785bf9036bce4deeeaa3db13b19d589b/tests%2Frun-pass%2Fconcurrency%2Flibc_pthread_cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/592d621b785bf9036bce4deeeaa3db13b19d589b/tests%2Frun-pass%2Fconcurrency%2Flibc_pthread_cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Flibc_pthread_cond.rs?ref=592d621b785bf9036bce4deeeaa3db13b19d589b", "patch": "@@ -25,6 +25,8 @@ fn test_timed_wait_timeout(clock_id: i32) {\n \n         let mut now: libc::timespec = mem::zeroed();\n         assert_eq!(libc::clock_gettime(clock_id, &mut now), 0);\n+        // Waiting for a second... mostly because waiting less requires mich more tricky arithmetic.\n+        // FIXME: wait less.\n         let timeout = libc::timespec { tv_sec: now.tv_sec + 1, tv_nsec: now.tv_nsec };\n \n         assert_eq!(libc::pthread_mutex_lock(&mut mutex as *mut _), 0);"}, {"sha": "b36ad27ebe198226e310d6314164c8fec6ade272", "filename": "tests/run-pass/concurrency/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/592d621b785bf9036bce4deeeaa3db13b19d589b/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/592d621b785bf9036bce4deeeaa3db13b19d589b/tests%2Frun-pass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Fsync.rs?ref=592d621b785bf9036bce4deeeaa3db13b19d589b", "patch": "@@ -109,7 +109,7 @@ fn check_conditional_variables_timed_wait_notimeout() {\n         cvar.notify_one();\n     });\n \n-    let (_guard, timeout) = cvar.wait_timeout(guard, Duration::from_millis(100)).unwrap();\n+    let (_guard, timeout) = cvar.wait_timeout(guard, Duration::from_millis(200)).unwrap();\n     assert!(!timeout.timed_out());\n     handle.join().unwrap();\n }"}]}