{"sha": "999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5OWU3ZWY5YTk3NDMxZDJjNDBlYmUwOWNmMjdlYTdhM2U4MGRlNDA=", "commit": {"author": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-20T15:50:28Z"}, "committer": {"name": "Andrew Paseltiner", "email": "apaseltiner@gmail.com", "date": "2013-03-22T11:15:13Z"}, "message": "syntax: make old `#[deriving_foo]` attribute obsolete", "tree": {"sha": "84c32ee97cbc8fc5e1a709aced4a2f29e046c3fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84c32ee97cbc8fc5e1a709aced4a2f29e046c3fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "html_url": "https://github.com/rust-lang/rust/commit/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/comments", "author": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apasel422", "id": 8644784, "node_id": "MDQ6VXNlcjg2NDQ3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8644784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apasel422", "html_url": "https://github.com/apasel422", "followers_url": "https://api.github.com/users/apasel422/followers", "following_url": "https://api.github.com/users/apasel422/following{/other_user}", "gists_url": "https://api.github.com/users/apasel422/gists{/gist_id}", "starred_url": "https://api.github.com/users/apasel422/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apasel422/subscriptions", "organizations_url": "https://api.github.com/users/apasel422/orgs", "repos_url": "https://api.github.com/users/apasel422/repos", "events_url": "https://api.github.com/users/apasel422/events{/privacy}", "received_events_url": "https://api.github.com/users/apasel422/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2abecd3ab406ce447a8b23c8a7563e9c455f870", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2abecd3ab406ce447a8b23c8a7563e9c455f870", "html_url": "https://github.com/rust-lang/rust/commit/e2abecd3ab406ce447a8b23c8a7563e9c455f870"}], "stats": {"total": 51, "additions": 48, "deletions": 3}, "files": [{"sha": "50f89d37fae8e0576822e2d373a749e4e5ba4bae", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "patch": "@@ -153,13 +153,13 @@ pub fn syntax_expander_table() -> SyntaxEnv {\n                                 ext::deriving::expand_meta_deriving)));\n     syntax_expanders.insert(@~\"deriving_eq\",\n                             @SE(ItemDecorator(\n-                                ext::deriving::eq::expand_deriving_eq)));\n+                                ext::deriving::eq::expand_deriving_obsolete)));\n     syntax_expanders.insert(@~\"deriving_iter_bytes\",\n                             @SE(ItemDecorator(\n-                                ext::deriving::iter_bytes::expand_deriving_iter_bytes)));\n+                                ext::deriving::iter_bytes::expand_deriving_obsolete)));\n     syntax_expanders.insert(@~\"deriving_clone\",\n                             @SE(ItemDecorator(\n-                                ext::deriving::clone::expand_deriving_clone)));\n+                                ext::deriving::clone::expand_deriving_obsolete)));\n \n     // Quasi-quoting expanders\n     syntax_expanders.insert(@~\"quote_tokens\","}, {"sha": "4ab83cb5f1e42e49f842bcb030a7d3bd6c15911f", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "patch": "@@ -39,6 +39,15 @@ pub fn expand_deriving_clone(cx: @ext_ctxt,\n                     expand_deriving_clone_enum_def)\n }\n \n+pub fn expand_deriving_obsolete(cx: @ext_ctxt,\n+                                span: span,\n+                                _mitem: @meta_item,\n+                                in_items: ~[@item])\n+                             -> ~[@item] {\n+    cx.span_err(span, ~\"`#[deriving_clone]` is obsolete; use `#[deriving(Clone)]` instead\");\n+    in_items\n+}\n+\n fn create_derived_clone_impl(cx: @ext_ctxt,\n                              span: span,\n                              type_ident: ident,"}, {"sha": "5e94134f70afe020ffc5a6dfcbf70f3516872643", "filename": "src/libsyntax/ext/deriving/eq.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Feq.rs?ref=999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "patch": "@@ -53,6 +53,15 @@ pub fn expand_deriving_eq(cx: @ext_ctxt,\n                     expand_deriving_eq_enum_def)\n }\n \n+pub fn expand_deriving_obsolete(cx: @ext_ctxt,\n+                                span: span,\n+                                _mitem: @meta_item,\n+                                in_items: ~[@item])\n+                             -> ~[@item] {\n+    cx.span_err(span, ~\"`#[deriving_eq]` is obsolete; use `#[deriving(Eq)]` instead\");\n+    in_items\n+}\n+\n /// Creates a method from the given expression, the signature of which\n /// conforms to the `eq` or `ne` method.\n fn create_eq_method(cx: @ext_ctxt,"}, {"sha": "75d7b396c7e15a7de811b6e00df770099cc059b3", "filename": "src/libsyntax/ext/deriving/iter_bytes.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs?ref=999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "patch": "@@ -39,6 +39,16 @@ pub fn expand_deriving_iter_bytes(cx: @ext_ctxt,\n                     expand_deriving_iter_bytes_enum_def)\n }\n \n+pub fn expand_deriving_obsolete(cx: @ext_ctxt,\n+                                span: span,\n+                                _mitem: @meta_item,\n+                                in_items: ~[@item])\n+                             -> ~[@item] {\n+    cx.span_err(span, ~\"`#[deriving_iter_bytes]` is obsolete; use `#[deriving(IterBytes)]` \\\n+                        instead\");\n+    in_items\n+}\n+\n fn create_derived_iter_bytes_impl(cx: @ext_ctxt,\n                                   span: span,\n                                   type_ident: ident,"}, {"sha": "298dced1e21ed67e948dff8a91cdfd71be5e629e", "filename": "src/test/compile-fail/deriving-obsolete.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Ftest%2Fcompile-fail%2Fderiving-obsolete.rs", "raw_url": "https://github.com/rust-lang/rust/raw/999e7ef9a97431d2c40ebe09cf27ea7a3e80de40/src%2Ftest%2Fcompile-fail%2Fderiving-obsolete.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fderiving-obsolete.rs?ref=999e7ef9a97431d2c40ebe09cf27ea7a3e80de40", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[deriving_clone] //~ ERROR `#[deriving_clone]` is obsolete; use `#[deriving(Clone)]` instead\n+#[deriving_eq] //~ ERROR `#[deriving_eq]` is obsolete; use `#[deriving(Eq)]` instead\n+#[deriving_iter_bytes]\n+//~^ ERROR `#[deriving_iter_bytes]` is obsolete; use `#[deriving(IterBytes)]` instead\n+struct Foo;\n+\n+pub fn main() { }"}]}