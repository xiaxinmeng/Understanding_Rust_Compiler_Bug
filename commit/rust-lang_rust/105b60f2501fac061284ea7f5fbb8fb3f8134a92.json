{"sha": "105b60f2501fac061284ea7f5fbb8fb3f8134a92", "node_id": "C_kwDOAAsO6NoAKDEwNWI2MGYyNTAxZmFjMDYxMjg0ZWE3ZjVmYmI4ZmIzZjgxMzRhOTI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-09-28T22:56:45Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2021-09-28T22:56:45Z"}, "message": "feat(rustc_typeck): avoid erroring with \"wrong number of generics\" if there's other problems\n\nAs shown in the two test requirements that got updated, if there's other problems,\nthen those other problems are probably the root cause of the incorrect generics count.", "tree": {"sha": "d8817bdb1bc03dae64918f8d203cbf7261f71304", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8817bdb1bc03dae64918f8d203cbf7261f71304"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/105b60f2501fac061284ea7f5fbb8fb3f8134a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/105b60f2501fac061284ea7f5fbb8fb3f8134a92", "html_url": "https://github.com/rust-lang/rust/commit/105b60f2501fac061284ea7f5fbb8fb3f8134a92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/105b60f2501fac061284ea7f5fbb8fb3f8134a92/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "befdfb5c7113b3d82d973b1acfdcc2b0d9c14ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/befdfb5c7113b3d82d973b1acfdcc2b0d9c14ab1", "html_url": "https://github.com/rust-lang/rust/commit/befdfb5c7113b3d82d973b1acfdcc2b0d9c14ab1"}], "stats": {"total": 60, "additions": 17, "deletions": 43}, "files": [{"sha": "d952d5a544d7bf53bdc1a5beb3218f9f5bdd8021", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -384,6 +384,16 @@ impl GenericArgs<'_> {\n         self.args.iter().any(|arg| matches!(arg, GenericArg::Type(_)))\n     }\n \n+    pub fn has_err(&self) -> bool {\n+        self.args.iter().any(|arg| match arg {\n+            GenericArg::Type(ty) => matches!(ty.kind, TyKind::Err),\n+            _ => false,\n+        }) || self.bindings.iter().any(|arg| match arg.kind {\n+            TypeBindingKind::Equality { ty } => matches!(ty.kind, TyKind::Err),\n+            _ => false,\n+        })\n+    }\n+\n     #[inline]\n     pub fn num_type_params(&self) -> usize {\n         self.args.iter().filter(|arg| matches!(arg, GenericArg::Type(_))).count()"}, {"sha": "92fc18854ee77090e825f92ff20abe1e02b467a8", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -601,7 +601,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     def_id,\n                 )\n                 .diagnostic()\n-                .emit();\n+                .emit_unless(gen_args.has_err());\n \n                 false\n             };"}, {"sha": "19e0f38d320c4e915bdd9c1c76e10881fb866aeb", "filename": "src/test/ui/const-generics/parser-error-recovery/issue-89013-no-kw.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.rs?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -7,9 +7,8 @@ struct Bar;\n const T: usize = 42;\n \n impl Foo<N = 3> for Bar {\n-//~^ERROR cannot constrain an associated constant to a value\n-//~^^ERROR this trait takes 1 generic argument but 0 generic arguments\n-//~^^^ERROR associated type bindings are not allowed here\n+//~^ ERROR cannot constrain an associated constant to a value\n+//~| ERROR associated type bindings are not allowed here\n     fn do_x(&self) -> [u8; 3] {\n         [0u8; 3]\n     }"}, {"sha": "bbca92ad63a91ab7a0d0ae15859c8211ff534053", "filename": "src/test/ui/const-generics/parser-error-recovery/issue-89013-no-kw.stderr", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013-no-kw.stderr?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -7,29 +7,12 @@ LL | impl Foo<N = 3> for Bar {\n    |          |   ...cannot be constrained to this value\n    |          this associated constant...\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/issue-89013-no-kw.rs:9:6\n-   |\n-LL | impl Foo<N = 3> for Bar {\n-   |      ^^^ expected 1 generic argument\n-   |\n-note: trait defined here, with 1 generic parameter: `N`\n-  --> $DIR/issue-89013-no-kw.rs:1:7\n-   |\n-LL | trait Foo<const N: usize> {\n-   |       ^^^       -\n-help: add missing generic argument\n-   |\n-LL | impl Foo<N, N = 3> for Bar {\n-   |          ++\n-\n error[E0229]: associated type bindings are not allowed here\n   --> $DIR/issue-89013-no-kw.rs:9:10\n    |\n LL | impl Foo<N = 3> for Bar {\n    |          ^^^^^ associated type not allowed here\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0107, E0229.\n-For more information about an error, try `rustc --explain E0107`.\n+For more information about this error, try `rustc --explain E0229`."}, {"sha": "ca1158a2f6d16140cccb9e3578ffa4862be26a90", "filename": "src/test/ui/const-generics/parser-error-recovery/issue-89013.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.rs?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -9,7 +9,6 @@ const T: usize = 42;\n impl Foo<N = const 3> for Bar {\n //~^ ERROR expected lifetime, type, or constant, found keyword `const`\n //~| ERROR cannot constrain an associated constant to a value\n-//~| ERROR this trait takes 1 generic argument but 0 generic arguments\n //~| ERROR associated type bindings are not allowed here\n     fn do_x(&self) -> [u8; 3] {\n         [0u8; 3]"}, {"sha": "85379d3f06e4b46722a0a2d5ed9aac717fb74580", "filename": "src/test/ui/const-generics/parser-error-recovery/issue-89013.stderr", "status": "modified", "additions": 2, "deletions": 19, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/105b60f2501fac061284ea7f5fbb8fb3f8134a92/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fparser-error-recovery%2Fissue-89013.stderr?ref=105b60f2501fac061284ea7f5fbb8fb3f8134a92", "patch": "@@ -19,29 +19,12 @@ LL | impl Foo<N = const 3> for Bar {\n    |          |         ...cannot be constrained to this value\n    |          this associated constant...\n \n-error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/issue-89013.rs:9:6\n-   |\n-LL | impl Foo<N = const 3> for Bar {\n-   |      ^^^ expected 1 generic argument\n-   |\n-note: trait defined here, with 1 generic parameter: `N`\n-  --> $DIR/issue-89013.rs:1:7\n-   |\n-LL | trait Foo<const N: usize> {\n-   |       ^^^       -\n-help: add missing generic argument\n-   |\n-LL | impl Foo<N, N = const 3> for Bar {\n-   |          ++\n-\n error[E0229]: associated type bindings are not allowed here\n   --> $DIR/issue-89013.rs:9:10\n    |\n LL | impl Foo<N = const 3> for Bar {\n    |          ^^^^^^^^^^^ associated type not allowed here\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0107, E0229.\n-For more information about an error, try `rustc --explain E0107`.\n+For more information about this error, try `rustc --explain E0229`."}]}