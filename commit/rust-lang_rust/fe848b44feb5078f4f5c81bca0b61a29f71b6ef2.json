{"sha": "fe848b44feb5078f4f5c81bca0b61a29f71b6ef2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlODQ4YjQ0ZmViNTA3OGY0ZjVjODFiY2EwYjYxYTI5ZjcxYjZlZjI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-05T23:32:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-03-10T07:35:23Z"}, "message": "parse_block_tail: reduce visibility", "tree": {"sha": "574880a7b68a088b2d68348223962d55cc26c10a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/574880a7b68a088b2d68348223962d55cc26c10a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2", "html_url": "https://github.com/rust-lang/rust/commit/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "addbc5b9df3fca76e7c271a78a0568144b9634f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/addbc5b9df3fca76e7c271a78a0568144b9634f9", "html_url": "https://github.com/rust-lang/rust/commit/addbc5b9df3fca76e7c271a78a0568144b9634f9"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "8afc86c704d3511f7cae3d768d14836997ad35f6", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe848b44feb5078f4f5c81bca0b61a29f71b6ef2/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=fe848b44feb5078f4f5c81bca0b61a29f71b6ef2", "patch": "@@ -318,11 +318,7 @@ impl<'a> Parser<'a> {\n \n     /// Parses the rest of a block expression or function body.\n     /// Precondition: already parsed the '{'.\n-    pub(super) fn parse_block_tail(\n-        &mut self,\n-        lo: Span,\n-        s: BlockCheckMode,\n-    ) -> PResult<'a, P<Block>> {\n+    fn parse_block_tail(&mut self, lo: Span, s: BlockCheckMode) -> PResult<'a, P<Block>> {\n         let mut stmts = vec![];\n         while !self.eat(&token::CloseDelim(token::Brace)) {\n             if self.token == token::Eof {"}]}