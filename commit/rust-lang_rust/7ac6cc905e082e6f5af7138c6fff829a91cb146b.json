{"sha": "7ac6cc905e082e6f5af7138c6fff829a91cb146b", "node_id": "C_kwDOAAsO6NoAKDdhYzZjYzkwNWUwODJlNmY1YWY3MTM4YzZmZmY4MjlhOTFjYjE0NmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-23T18:43:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-23T18:43:04Z"}, "message": "Auto merge of #108442 - scottmcm:mir-transmute, r=oli-obk\n\nAdd `CastKind::Transmute` to MIR\n\n~~Nothing actually produces it in this commit, so I don't know how to test it, but it also means it shouldn't be possible for it to break anything.~~\n\nIncludes lowering `transmute` calls to it, so it's used.\n\nZulip Conversation: <https://rust-lang.zulipchat.com/#narrow/stream/189540-t-compiler.2Fwg-mir-opt/topic/Good.20first.20isssue/near/321849610>", "tree": {"sha": "b8041cc4e224cf24cb035ef1a29b878d7e30a0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8041cc4e224cf24cb035ef1a29b878d7e30a0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ac6cc905e082e6f5af7138c6fff829a91cb146b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ac6cc905e082e6f5af7138c6fff829a91cb146b", "html_url": "https://github.com/rust-lang/rust/commit/7ac6cc905e082e6f5af7138c6fff829a91cb146b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ac6cc905e082e6f5af7138c6fff829a91cb146b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60aafee963b04343c3aa80f069aeafd08013124f", "url": "https://api.github.com/repos/rust-lang/rust/commits/60aafee963b04343c3aa80f069aeafd08013124f", "html_url": "https://github.com/rust-lang/rust/commit/60aafee963b04343c3aa80f069aeafd08013124f"}, {"sha": "9558e12965af71ff8ae592e2abe7e3c2358d320c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9558e12965af71ff8ae592e2abe7e3c2358d320c", "html_url": "https://github.com/rust-lang/rust/commit/9558e12965af71ff8ae592e2abe7e3c2358d320c"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "2107ae147e980dbf88e210f5a7818b80088c1d28", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7ac6cc905e082e6f5af7138c6fff829a91cb146b/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac6cc905e082e6f5af7138c6fff829a91cb146b/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=7ac6cc905e082e6f5af7138c6fff829a91cb146b", "patch": "@@ -709,6 +709,10 @@ fn codegen_stmt<'tcx>(\n                     let operand = codegen_operand(fx, operand);\n                     operand.coerce_dyn_star(fx, lval);\n                 }\n+                Rvalue::Cast(CastKind::Transmute, ref operand, _to_ty) => {\n+                    let operand = codegen_operand(fx, operand);\n+                    lval.write_cvalue_transmute(fx, operand);\n+                }\n                 Rvalue::Discriminant(place) => {\n                     let place = codegen_place(fx, place);\n                     let value = place.to_cvalue(fx);"}, {"sha": "03f2a65fccad2444c5097d364b1219cad916751b", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7ac6cc905e082e6f5af7138c6fff829a91cb146b/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ac6cc905e082e6f5af7138c6fff829a91cb146b/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=7ac6cc905e082e6f5af7138c6fff829a91cb146b", "patch": "@@ -557,16 +557,6 @@ fn codegen_regular_intrinsic_call<'tcx>(\n             fx.bcx.ins().band(ptr, mask);\n         }\n \n-        sym::transmute => {\n-            intrinsic_args!(fx, args => (from); intrinsic);\n-\n-            if ret.layout().abi.is_uninhabited() {\n-                crate::base::codegen_panic(fx, \"Transmuting to uninhabited type.\", source_info);\n-                return;\n-            }\n-\n-            ret.write_cvalue_transmute(fx, from);\n-        }\n         sym::write_bytes | sym::volatile_set_memory => {\n             intrinsic_args!(fx, args => (dst, val, count); intrinsic);\n             let val = val.load_scalar(fx);"}]}