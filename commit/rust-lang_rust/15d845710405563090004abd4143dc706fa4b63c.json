{"sha": "15d845710405563090004abd4143dc706fa4b63c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1ZDg0NTcxMDQwNTU2MzA5MDAwNGFiZDQxNDNkYzcwNmZhNGI2M2M=", "commit": {"author": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-09T21:50:01Z"}, "committer": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-09T21:50:01Z"}, "message": "Merge pull request #3700 from erickt/cargo-interner\n\nallow interner cache to be shared across parsers (#3699)", "tree": {"sha": "fc3d9971cddb6aa6ff39087dd1233e2b2d94baa2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc3d9971cddb6aa6ff39087dd1233e2b2d94baa2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d845710405563090004abd4143dc706fa4b63c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d845710405563090004abd4143dc706fa4b63c", "html_url": "https://github.com/rust-lang/rust/commit/15d845710405563090004abd4143dc706fa4b63c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d845710405563090004abd4143dc706fa4b63c/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aa42bc91e08faac450d1850f3b549b78382ccf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aa42bc91e08faac450d1850f3b549b78382ccf4", "html_url": "https://github.com/rust-lang/rust/commit/0aa42bc91e08faac450d1850f3b549b78382ccf4"}, {"sha": "1ac75d226957cf0ec6b596541f4fd688f49bc300", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac75d226957cf0ec6b596541f4fd688f49bc300", "html_url": "https://github.com/rust-lang/rust/commit/1ac75d226957cf0ec6b596541f4fd688f49bc300"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "a7d439b8ce6d0f49ad9f75b266e32f97fa8eaff5", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/15d845710405563090004abd4143dc706fa4b63c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d845710405563090004abd4143dc706fa4b63c/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=15d845710405563090004abd4143dc706fa4b63c", "patch": "@@ -343,28 +343,33 @@ macro_rules! interner_key (\n )\n \n fn mk_ident_interner() -> @ident_interner {\n-    /* the indices here must correspond to the numbers in special_idents */\n-    let init_vec = ~[@~\"_\", @~\"anon\", @~\"drop\", @~\"\", @~\"unary\", @~\"!\",\n-                     @~\"[]\", @~\"unary-\", @~\"__extensions__\", @~\"self\",\n-                     @~\"item\", @~\"block\", @~\"stmt\", @~\"pat\", @~\"expr\",\n-                     @~\"ty\", @~\"ident\", @~\"path\", @~\"tt\", @~\"matchers\",\n-                     @~\"str\", @~\"TyVisitor\", @~\"arg\", @~\"descrim\",\n-                     @~\"__rust_abi\", @~\"__rust_stack_shim\", @~\"TyDesc\",\n-                     @~\"dtor\", @~\"main\", @~\"<opaque>\", @~\"blk\", @~\"static\",\n-                     @~\"intrinsic\", @~\"__foreign_mod__\"];\n-\n-    let rv = @ident_interner {\n-        interner: interner::mk_prefill::<@~str>(init_vec)\n-    };\n-\n-    /* having multiple interners will just confuse the serializer */\n     unsafe {\n-        assert task::local_data::local_data_get(interner_key!()).is_none()\n-    };\n-    unsafe {\n-        task::local_data::local_data_set(interner_key!(), @rv)\n-    };\n-    rv\n+        match task::local_data::local_data_get(interner_key!()) {\n+            Some(interner) => *interner,\n+            None => {\n+                // the indices here must correspond to the numbers in\n+                // special_idents.\n+                let init_vec = ~[\n+                    @~\"_\", @~\"anon\", @~\"drop\", @~\"\", @~\"unary\", @~\"!\",\n+                    @~\"[]\", @~\"unary-\", @~\"__extensions__\", @~\"self\",\n+                    @~\"item\", @~\"block\", @~\"stmt\", @~\"pat\", @~\"expr\",\n+                    @~\"ty\", @~\"ident\", @~\"path\", @~\"tt\", @~\"matchers\",\n+                    @~\"str\", @~\"TyVisitor\", @~\"arg\", @~\"descrim\",\n+                    @~\"__rust_abi\", @~\"__rust_stack_shim\", @~\"TyDesc\",\n+                    @~\"dtor\", @~\"main\", @~\"<opaque>\", @~\"blk\", @~\"static\",\n+                    @~\"intrinsic\", @~\"__foreign_mod__\"\n+                ];\n+\n+                let rv = @ident_interner {\n+                    interner: interner::mk_prefill(init_vec)\n+                };\n+\n+                task::local_data::local_data_set(interner_key!(), @rv);\n+\n+                rv\n+            }\n+        }\n+    }\n }\n \n /* for when we don't care about the contents; doesn't interact with TLD or"}]}