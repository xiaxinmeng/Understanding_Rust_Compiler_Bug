{"sha": "a6daccc2294c376c690722dff5796ee78d143e70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZGFjY2MyMjk0YzM3NmM2OTA3MjJkZmY1Nzk2ZWU3OGQxNDNlNzA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-04-24T14:22:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-24T14:22:55Z"}, "message": "Merge pull request #3523 from topecongiro/issue-3515\n\nAttempt to format attributes if only they exist", "tree": {"sha": "10c697fc878cd12136841e5370836f774c673f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10c697fc878cd12136841e5370836f774c673f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6daccc2294c376c690722dff5796ee78d143e70", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcwHE/CRBK7hj4Ov3rIwAAdHIIADVf6R2d0oOltqEhdHKQ5uBR\nJko03azAy+IBSt4Plz092Yu/bIbJ9d53bPed+QMJMJHUR1PQ1uq9FEoVclNitIxW\nFP8AYpIFLWyPs0h7WVTQCvA8wMQ/73QhtZ/Ca/vpC1ON7RDk8SxHDozuE7+X+31s\n894sZ9AlQ821l71kiNQDtEEvE45C9wK8FaTNfwxsNtRuqLiejeU0TA8FlxXTP1FI\nugKb4aBNiuebwKOrmChydsqCZ6m3wfURBJxeoy2VFVkBGBB2M9vmkpRu1Z2uuR2T\nTvtsC7NYsnoD3vCg2QRA7w3l23rVdqIC8Np2qSwzT0uYZ9Mses0prmJuYFlquf0=\n=O0lb\n-----END PGP SIGNATURE-----\n", "payload": "tree 10c697fc878cd12136841e5370836f774c673f53\nparent aeb556ecb2c5268b5705dc67d23bba2dd346879f\nparent ec0d263117382c2eabc76d69609e154e9e33f597\nauthor Seiichi Uchida <seuchida@gmail.com> 1556115775 -0700\ncommitter GitHub <noreply@github.com> 1556115775 -0700\n\nMerge pull request #3523 from topecongiro/issue-3515\n\nAttempt to format attributes if only they exist"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6daccc2294c376c690722dff5796ee78d143e70", "html_url": "https://github.com/rust-lang/rust/commit/a6daccc2294c376c690722dff5796ee78d143e70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6daccc2294c376c690722dff5796ee78d143e70/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeb556ecb2c5268b5705dc67d23bba2dd346879f", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb556ecb2c5268b5705dc67d23bba2dd346879f", "html_url": "https://github.com/rust-lang/rust/commit/aeb556ecb2c5268b5705dc67d23bba2dd346879f"}, {"sha": "ec0d263117382c2eabc76d69609e154e9e33f597", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0d263117382c2eabc76d69609e154e9e33f597", "html_url": "https://github.com/rust-lang/rust/commit/ec0d263117382c2eabc76d69609e154e9e33f597"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "f54d4d55cd95bb142eef3bcba4e5175addc2e960", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a6daccc2294c376c690722dff5796ee78d143e70/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/a6daccc2294c376c690722dff5796ee78d143e70/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=a6daccc2294c376c690722dff5796ee78d143e70", "patch": "@@ -19,7 +19,6 @@ matrix:\n     - env: CFG_RELEASE_CHANNEL=beta\n     - os: osx\n     - env: INTEGRATION=bitflags\n-    - env: INTEGRATION=cargo\n     - env: INTEGRATION=chalk\n     - env: INTEGRATION=crater\n     - env: INTEGRATION=error-chain\n@@ -41,6 +40,8 @@ matrix:\n     - env: INTEGRATION=rust-semverver\n     # can be moved back to include section after https://github.com/rust-lang-nursery/failure/pull/298 is merged\n     - env: INTEGRATION=failure\n+    # `cargo test` doesn't finish - disabling for now.\n+    # - env: INTEGRATION=cargo\n \n script:\n   - |"}, {"sha": "08647dee490b87adb2c7f652b6c4641bb874adb7", "filename": "src/imports.rs", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a6daccc2294c376c690722dff5796ee78d143e70/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6daccc2294c376c690722dff5796ee78d143e70/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=a6daccc2294c376c690722dff5796ee78d143e70", "patch": "@@ -242,30 +242,31 @@ impl UseTree {\n                     format!(\"{}use {};\", vis, s)\n                 }\n             })?;\n-        if let Some(ref attrs) = self.attrs {\n-            let attr_str = attrs.rewrite(context, shape)?;\n-            let lo = attrs.last().as_ref()?.span().hi();\n-            let hi = self.span.lo();\n-            let span = mk_sp(lo, hi);\n-\n-            let allow_extend = if attrs.len() == 1 {\n-                let line_len = attr_str.len() + 1 + use_str.len();\n-                !attrs.first().unwrap().is_sugared_doc\n-                    && context.config.inline_attribute_width() >= line_len\n-            } else {\n-                false\n-            };\n+        match self.attrs {\n+            Some(ref attrs) if !attrs.is_empty() => {\n+                let attr_str = attrs.rewrite(context, shape)?;\n+                let lo = attrs.last().as_ref()?.span().hi();\n+                let hi = self.span.lo();\n+                let span = mk_sp(lo, hi);\n+\n+                let allow_extend = if attrs.len() == 1 {\n+                    let line_len = attr_str.len() + 1 + use_str.len();\n+                    !attrs.first().unwrap().is_sugared_doc\n+                        && context.config.inline_attribute_width() >= line_len\n+                } else {\n+                    false\n+                };\n \n-            combine_strs_with_missing_comments(\n-                context,\n-                &attr_str,\n-                &use_str,\n-                span,\n-                shape,\n-                allow_extend,\n-            )\n-        } else {\n-            Some(use_str)\n+                combine_strs_with_missing_comments(\n+                    context,\n+                    &attr_str,\n+                    &use_str,\n+                    span,\n+                    shape,\n+                    allow_extend,\n+                )\n+            }\n+            _ => Some(use_str),\n         }\n     }\n "}, {"sha": "9f760cb94e8f866f261a073c9187c36442533cbf", "filename": "tests/source/issue-3515.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Fsource%2Fissue-3515.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Fsource%2Fissue-3515.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3515.rs?ref=a6daccc2294c376c690722dff5796ee78d143e70", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-reorder_imports: false\n+\n+use std :: fmt :: { self , Display } ;\n+use std :: collections :: HashMap ;\n+\n+fn main() {}"}, {"sha": "b59d03c6c82a7709ca0d294da904b88ec0ba73d5", "filename": "tests/target/issue-3515.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Ftarget%2Fissue-3515.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Ftarget%2Fissue-3515.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3515.rs?ref=a6daccc2294c376c690722dff5796ee78d143e70", "patch": "@@ -0,0 +1,6 @@\n+// rustfmt-reorder_imports: false\n+\n+use std::fmt::{self, Display};\n+use std::collections::HashMap;\n+\n+fn main() {}"}, {"sha": "877241e3b6fdbac004590101a9007e12dcc74c2b", "filename": "tests/target/long-use-statement-issue-3154.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Ftarget%2Flong-use-statement-issue-3154.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6daccc2294c376c690722dff5796ee78d143e70/tests%2Ftarget%2Flong-use-statement-issue-3154.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Flong-use-statement-issue-3154.rs?ref=a6daccc2294c376c690722dff5796ee78d143e70", "patch": "@@ -1,3 +1,3 @@\n // rustfmt-reorder_imports: false\n \n-pub use self :: super :: super :: super :: root::mozilla::detail::StringClassFlags as nsTStringRepr_ClassFlags ;\n+pub use self::super::super::super::root::mozilla::detail::StringClassFlags as nsTStringRepr_ClassFlags;"}]}