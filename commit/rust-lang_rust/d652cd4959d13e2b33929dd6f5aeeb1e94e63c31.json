{"sha": "d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "node_id": "C_kwDOAAsO6NoAKGQ2NTJjZDQ5NTlkMTNlMmIzMzkyOWRkNmY1YWVlYjFlOTRlNjNjMzE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2021-07-22T18:26:46Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-04-11T15:11:27Z"}, "message": "add regression tests for opaque types in impl headers", "tree": {"sha": "f8da7c1cbb7f3ef660fb96ed5661f57ad216f4a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8da7c1cbb7f3ef660fb96ed5661f57ad216f4a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "html_url": "https://github.com/rust-lang/rust/commit/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5bbf55f22c91f966a0feb130b5ff476da4f017", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d5bbf55f22c91f966a0feb130b5ff476da4f017", "html_url": "https://github.com/rust-lang/rust/commit/7d5bbf55f22c91f966a0feb130b5ff476da4f017"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "1a0acca7881d12a0bdfd906b531b735e8bfd51fd", "filename": "src/test/ui/type-alias-impl-trait/issue-84660-trait-impl-for-tait.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.rs?ref=d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "patch": "@@ -0,0 +1,23 @@\n+// Regression test for issues #84660 and #86411: both are variations on #76202.\n+// Tests that we don't ICE when we have an opaque type appearing anywhere in an impl header.\n+\n+#![feature(min_type_alias_impl_trait)]\n+\n+trait Foo {}\n+impl Foo for () {}\n+type Bar = impl Foo;\n+fn _defining_use() -> Bar {}\n+\n+trait TraitArg<T> {\n+    fn f();\n+}\n+\n+impl TraitArg<Bar> for () { //~ ERROR cannot implement trait\n+    fn f() {\n+        println!(\"ho\");\n+    }\n+}\n+\n+fn main() {\n+    <() as TraitArg<Bar>>::f();\n+}"}, {"sha": "1b8eee407178c31518d6267f34bc38429609b9f6", "filename": "src/test/ui/type-alias-impl-trait/issue-84660-trait-impl-for-tait.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-trait-impl-for-tait.stderr?ref=d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "patch": "@@ -0,0 +1,14 @@\n+error: cannot implement trait on type alias impl trait\n+  --> $DIR/issue-84660-trait-impl-for-tait.rs:15:1\n+   |\n+LL | impl TraitArg<Bar> for () {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: type alias impl trait defined here\n+  --> $DIR/issue-84660-trait-impl-for-tait.rs:8:12\n+   |\n+LL | type Bar = impl Foo;\n+   |            ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "18213dfbe5bf79a4589de092480d90c3e35b4029", "filename": "src/test/ui/type-alias-impl-trait/issue-84660-unsoundness.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.rs?ref=d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "patch": "@@ -0,0 +1,41 @@\n+// Another example from issue #84660, this time weaponized as a safe transmut: an opaque type in an\n+// impl header being accepted was used to create unsoundness.\n+\n+#![feature(min_type_alias_impl_trait)]\n+\n+trait Foo {}\n+impl Foo for () {}\n+type Bar = impl Foo;\n+fn _defining_use() -> Bar {}\n+\n+trait Trait<T, In> {\n+    type Out;\n+    fn convert(i: In) -> Self::Out;\n+}\n+\n+impl<In, Out> Trait<Bar, In> for Out { //~ ERROR cannot implement trait\n+    type Out = Out;\n+    fn convert(_i: In) -> Self::Out {\n+        unreachable!();\n+    }\n+}\n+\n+impl<In, Out> Trait<(), In> for Out {\n+    type Out = In;\n+    fn convert(i: In) -> Self::Out {\n+        i\n+    }\n+}\n+\n+fn transmute<In, Out>(i: In) -> Out {\n+    <Out as Trait<Bar, In>>::convert(i)\n+}\n+\n+fn main() {\n+    let d;\n+    {\n+        let x = \"Hello World\".to_string();\n+        d = transmute::<&String, &String>(&x);\n+    }\n+    println!(\"{}\", d);\n+}"}, {"sha": "b1128d830f967c19d195b3432ea80f0d649b00ac", "filename": "src/test/ui/type-alias-impl-trait/issue-84660-unsoundness.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d652cd4959d13e2b33929dd6f5aeeb1e94e63c31/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-84660-unsoundness.stderr?ref=d652cd4959d13e2b33929dd6f5aeeb1e94e63c31", "patch": "@@ -0,0 +1,14 @@\n+error: cannot implement trait on type alias impl trait\n+  --> $DIR/issue-84660-unsoundness.rs:16:1\n+   |\n+LL | impl<In, Out> Trait<Bar, In> for Out {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: type alias impl trait defined here\n+  --> $DIR/issue-84660-unsoundness.rs:8:12\n+   |\n+LL | type Bar = impl Foo;\n+   |            ^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}