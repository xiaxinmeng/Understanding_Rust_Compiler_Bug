{"sha": "66b4b8b907a241745930e6ac9af930b403ce9f33", "node_id": "C_kwDOAAsO6NoAKDY2YjRiOGI5MDdhMjQxNzQ1OTMwZTZhYzlhZjkzMGI0MDNjZTlmMzM", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-11-24T12:32:48Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-11-24T12:36:17Z"}, "message": "with_query_mode -> new", "tree": {"sha": "67e0fcf3eabb3ca9b99a69ea4fa5010ce75bc2fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67e0fcf3eabb3ca9b99a69ea4fa5010ce75bc2fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b4b8b907a241745930e6ac9af930b403ce9f33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmN/ZUIACgkQgTGiTgx5\n76+qCg/+PrvyHKAZQu6Z/HSiAR3idE8/9QaXXToDWkUBDPutTMIM1Kw8W+M2NlBk\nt1kAYvgjTo8OSKcHhwR1tYaYWvIu73/G60tJQzpj5r6hZgKz6vVGO+IDANPX5c6y\nrPKYqFUOkXJIF+q6U1Yg04PsAgxVy5p5IKP+0ku+xThbZC3kNHyi9WY4EwdaOho2\nyO7N6SDVOcq0ezPA5ZEklqwNQlmdXPv/o/CL7+8OvGa4mi0+QBWjtZqag4Di9dpn\nE8bVvEL2pLbko+SoL9kN8iMt5pNjKZuxNVJ84KWSswnKB/uOSBFZoXQ8sUhbTJ4H\ndFLN0kgU1g1vcNBvjkQ9nvIRzY5ZvAVDAjYiuX53pJ2AqJIFsQLgTmLP+NPGXoMf\noLGaq7MJuEYvnwDs8PigRiYmEB1K6ayUiaSMzCL57otOYvEYFljIsAFNvl4Jn+dl\nINIrnK1neXcf5eip8MZXvj1JgzcKO1UkFHYCSXiu43l+dJsQEcK/fpligGdPJNMX\nBtL9A2qnYIOVnx6XHZuM1MvTi6OpjjVy6LadIkMOQbF5Yj8YvOenZfimb2mqixTZ\nwokK9EFg6gs8N5PD5jfnJ7vAtyaxR+Mbm1Zt0DO8GeVcyazkpBlzANku3X48s67V\n/RCUyK1dXo0PaGbnBNXBpm+riKrYbxZv0jN93tc/Pq41H3zuilY=\n=IxHp\n-----END PGP SIGNATURE-----", "payload": "tree 67e0fcf3eabb3ca9b99a69ea4fa5010ce75bc2fa\nparent 341d8b8a2c290b4535e965867e876b095461ff6e\nauthor Santiago Pastorino <spastorino@gmail.com> 1669293168 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1669293377 -0300\n\nwith_query_mode -> new\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b4b8b907a241745930e6ac9af930b403ce9f33", "html_url": "https://github.com/rust-lang/rust/commit/66b4b8b907a241745930e6ac9af930b403ce9f33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b4b8b907a241745930e6ac9af930b403ce9f33/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "341d8b8a2c290b4535e965867e876b095461ff6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/341d8b8a2c290b4535e965867e876b095461ff6e", "html_url": "https://github.com/rust-lang/rust/commit/341d8b8a2c290b4535e965867e876b095461ff6e"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "5cb0988919d261bf785f004a51a788d58b1431f6", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/66b4b8b907a241745930e6ac9af930b403ce9f33/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b4b8b907a241745930e6ac9af930b403ce9f33/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=66b4b8b907a241745930e6ac9af930b403ce9f33", "patch": "@@ -2112,10 +2112,7 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 };\n \n                 let obligation = obligation.with(self.tcx, trait_ref.to_poly_trait_predicate());\n-                let mut selcx = SelectionContext::with_query_mode(\n-                    &self,\n-                    crate::traits::TraitQueryMode::Standard,\n-                );\n+                let mut selcx = SelectionContext::new(&self);\n                 match selcx.select_from_obligation(&obligation) {\n                     Ok(None) => {\n                         let impls = ambiguity::recompute_applicable_impls(self.infcx, &obligation);"}, {"sha": "4a419fbe9528856bb2147ae2215588cdec0c2828", "filename": "compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/66b4b8b907a241745930e6ac9af930b403ce9f33/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b4b8b907a241745930e6ac9af930b403ce9f33/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs?ref=66b4b8b907a241745930e6ac9af930b403ce9f33", "patch": "@@ -2,9 +2,7 @@ use rustc_middle::ty;\n \n use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferCtxt;\n-use crate::traits::{\n-    EvaluationResult, OverflowError, PredicateObligation, SelectionContext, TraitQueryMode,\n-};\n+use crate::traits::{EvaluationResult, OverflowError, PredicateObligation, SelectionContext};\n \n pub trait InferCtxtExt<'tcx> {\n     fn predicate_may_hold(&self, obligation: &PredicateObligation<'tcx>) -> bool;\n@@ -97,7 +95,7 @@ impl<'tcx> InferCtxtExt<'tcx> for InferCtxt<'tcx> {\n         match self.evaluate_obligation(obligation) {\n             Ok(result) => result,\n             Err(OverflowError::Canonical) => {\n-                let mut selcx = SelectionContext::with_query_mode(&self, TraitQueryMode::Standard);\n+                let mut selcx = SelectionContext::new(&self);\n                 selcx.evaluate_root_obligation(obligation).unwrap_or_else(|r| match r {\n                     OverflowError::Canonical => {\n                         span_bug!("}]}