{"sha": "b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYjJkYzhlMGE1OTU0MDMwZjFhOWQ1NzYwZmJjMWE3ZDRmMzljNTQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-08-07T03:43:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-07T03:43:14Z"}, "message": "Merge pull request #1859 from porglezomp-misc/master\n\nFix #1858 - \"Don't erase a use with attributes attached\"", "tree": {"sha": "b0422c811cea940d14be796810a35d2cf0e60176", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0422c811cea940d14be796810a35d2cf0e60176"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "html_url": "https://github.com/rust-lang/rust/commit/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc95e2827bbbe241bfbc7fabfd5cb678d8ed1c30", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc95e2827bbbe241bfbc7fabfd5cb678d8ed1c30", "html_url": "https://github.com/rust-lang/rust/commit/fc95e2827bbbe241bfbc7fabfd5cb678d8ed1c30"}, {"sha": "94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94df4f8cca133c638ddd7f51eec7b349b0a12c5a", "html_url": "https://github.com/rust-lang/rust/commit/94df4f8cca133c638ddd7f51eec7b349b0a12c5a"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "a65d8bb066a85b8596179db9f2b37535ccc93464", "filename": "src/imports.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "patch": "@@ -157,12 +157,8 @@ fn rewrite_view_path_prefix(\n }\n \n impl Rewrite for ast::ViewPath {\n-    // Returns an empty string when the ViewPath is empty (like foo::bar::{})\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         match self.node {\n-            ast::ViewPath_::ViewPathList(_, ref path_list) if path_list.is_empty() => {\n-                Some(String::new())\n-            }\n             ast::ViewPath_::ViewPathList(ref path, ref path_list) => {\n                 rewrite_use_list(shape, path, path_list, self.span, context)\n             }\n@@ -250,13 +246,27 @@ impl<'a> FmtVisitor<'a> {\n         self.last_pos = pos_after_last_use_item;\n     }\n \n-    pub fn format_import(&mut self, vis: &ast::Visibility, vp: &ast::ViewPath, span: Span) {\n+    pub fn format_import(\n+        &mut self,\n+        vis: &ast::Visibility,\n+        vp: &ast::ViewPath,\n+        span: Span,\n+        attrs: &[ast::Attribute],\n+    ) {\n         let vis = utils::format_visibility(vis);\n         // 4 = `use `, 1 = `;`\n         let rw = Shape::indented(self.block_indent, self.config)\n             .offset_left(vis.len() + 4)\n             .and_then(|shape| shape.sub_width(1))\n-            .and_then(|shape| vp.rewrite(&self.get_context(), shape));\n+            .and_then(|shape| match vp.node {\n+                // If we have an empty path list with no attributes, we erase it\n+                ast::ViewPath_::ViewPathList(_, ref path_list)\n+                    if path_list.is_empty() && attrs.is_empty() =>\n+                {\n+                    Some(\"\".into())\n+                }\n+                _ => vp.rewrite(&self.get_context(), shape),\n+            });\n         match rw {\n             Some(ref s) if s.is_empty() => {\n                 // Format up to last newline\n@@ -385,7 +395,7 @@ impl<'a> Ord for ImportItem<'a> {\n }\n \n // Pretty prints a multi-item import.\n-// Assumes that path_list.len() > 0.\n+// If the path list is empty, it leaves the braces empty.\n fn rewrite_use_list(\n     shape: Shape,\n     path: &ast::Path,\n@@ -403,7 +413,10 @@ fn rewrite_use_list(\n     ));\n \n     match path_list.len() {\n-        0 => unreachable!(),\n+        0 => {\n+            return rewrite_path(context, PathContext::Import, None, path, shape)\n+                .map(|path_str| format!(\"{}::{{}}\", path_str));\n+        }\n         1 => return Some(rewrite_single_use_list(path_str, &path_list[0])),\n         _ => (),\n     }"}, {"sha": "c9fa70655114d350b1c01f6e2c2b0b6411d0ed0f", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "patch": "@@ -293,7 +293,7 @@ impl<'a> FmtVisitor<'a> {\n \n         match item.node {\n             ast::ItemKind::Use(ref vp) => {\n-                self.format_import(&item.vis, vp, item.span);\n+                self.format_import(&item.vis, vp, item.span, &item.attrs);\n             }\n             ast::ItemKind::Impl(..) => {\n                 self.format_missing_with_indent(source!(self, item.span).lo);"}, {"sha": "debd851d7b7666498dc38408b4765be690602a99", "filename": "tests/source/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/tests%2Fsource%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/tests%2Fsource%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimports.rs?ref=b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "patch": "@@ -72,3 +72,7 @@ use ::*;\n // spaces used to cause glob imports to disappear (#1356)\n use super:: * ;\n use foo::issue_1356:: * ;\n+\n+// We shouldn't remove imports which have attributes attached (#1858)\n+#[cfg(unix)]\n+use self::unix::{};"}, {"sha": "5a2494c50cf691ddcbbc4bf231f6c2e873accd22", "filename": "tests/target/imports.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=b1b2dc8e0a5954030f1a9d5760fbc1a7d4f39c54", "patch": "@@ -67,3 +67,7 @@ use ::*;\n // spaces used to cause glob imports to disappear (#1356)\n use super::*;\n use foo::issue_1356::*;\n+\n+// We shouldn't remove imports which have attributes attached (#1858)\n+#[cfg(unix)]\n+use self::unix::{};"}]}