{"sha": "6c3a2491d8cfdd097c72e1a37970f8a951baf921", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjM2EyNDkxZDhjZmRkMDk3YzcyZTFhMzc5NzBmOGE5NTFiYWY5MjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T21:51:36Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-06-30T21:51:36Z"}, "message": "Add support for parsing COMP_deref lval components (*foo).", "tree": {"sha": "5788cb4d5ace4a7630eee2518265c94c5f6dab05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5788cb4d5ace4a7630eee2518265c94c5f6dab05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c3a2491d8cfdd097c72e1a37970f8a951baf921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c3a2491d8cfdd097c72e1a37970f8a951baf921", "html_url": "https://github.com/rust-lang/rust/commit/6c3a2491d8cfdd097c72e1a37970f8a951baf921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c3a2491d8cfdd097c72e1a37970f8a951baf921/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb3e128da674b9ed70f5590e084abbe9a68fb05", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb3e128da674b9ed70f5590e084abbe9a68fb05", "html_url": "https://github.com/rust-lang/rust/commit/9fb3e128da674b9ed70f5590e084abbe9a68fb05"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "d02a5f6d30e921959ffbe67bb7daf537deabed7e", "filename": "src/boot/fe/pexp.ml", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6c3a2491d8cfdd097c72e1a37970f8a951baf921/src%2Fboot%2Ffe%2Fpexp.ml", "raw_url": "https://github.com/rust-lang/rust/raw/6c3a2491d8cfdd097c72e1a37970f8a951baf921/src%2Fboot%2Ffe%2Fpexp.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fpexp.ml?ref=6c3a2491d8cfdd097c72e1a37970f8a951baf921", "patch": "@@ -41,6 +41,7 @@ and plval =\n   | PLVAL_app of (Ast.ident * (Ast.ty array))\n   | PLVAL_ext_name of (pexp * Ast.name_component)\n   | PLVAL_ext_pexp of (pexp * pexp)\n+  | PLVAL_ext_deref of pexp\n \n and pexp = pexp' Common.identified\n ;;\n@@ -588,6 +589,13 @@ and parse_bottom_pexp (ps:pstate) : pexp =\n                 end\n         end\n \n+\n+    | STAR ->\n+        bump ps;\n+        let inner = parse_pexp ps in\n+        let bpos = lexpos ps in\n+          span ps apos bpos (PEXP_lval (PLVAL_ext_deref inner))\n+\n     | (INT | UINT | CHAR | BOOL) as tok ->\n         begin\n           bump ps;\n@@ -1030,6 +1038,11 @@ let rec desugar_lval (ps:pstate) (pexp:pexp) : (Ast.stmt array * Ast.lval) =\n             (Array.append base_stmts ext_stmts,\n              Ast.LVAL_ext (base_lval, Ast.COMP_atom (clone_atom ps ext_atom)))\n \n+      | PEXP_lval (PLVAL_ext_deref base_pexp) ->\n+          let (base_stmts, base_atom) = desugar_expr_atom ps base_pexp in\n+          let base_lval = atom_lval ps base_atom in\n+            (base_stmts, Ast.LVAL_ext (base_lval, Ast.COMP_deref))\n+\n       | _ ->\n           let (stmts, atom) = desugar_expr_atom ps pexp in\n             (stmts, atom_lval ps atom)"}]}