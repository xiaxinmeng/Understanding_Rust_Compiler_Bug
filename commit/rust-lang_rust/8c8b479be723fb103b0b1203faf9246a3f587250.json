{"sha": "8c8b479be723fb103b0b1203faf9246a3f587250", "node_id": "C_kwDOAAsO6NoAKDhjOGI0NzliZTcyM2ZiMTAzYjBiMTIwM2ZhZjkyNDZhM2Y1ODcyNTA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-01T20:28:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-01T20:28:06Z"}, "message": "Auto merge of #2527 - RalfJung:noffi, r=RalfJung\n\ndisable extern-so ffi support for now due to licensing situation\n\nlibffi depends on abort_on_panic which has a [very unfortunate license situation going on](https://rust-lang.zulipchat.com/#narrow/stream/231349-t-core.2Flicensing). For now, in order to let us update Miri in rustc, I see no way but to disable our FFI support again. Sorry `@emarteca` :(\n\nCc https://github.com/rust-lang/miri/issues/2526", "tree": {"sha": "a01a8361770c6be9c1bf2d6b4d2997ae39a80b89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01a8361770c6be9c1bf2d6b4d2997ae39a80b89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c8b479be723fb103b0b1203faf9246a3f587250", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8b479be723fb103b0b1203faf9246a3f587250", "html_url": "https://github.com/rust-lang/rust/commit/8c8b479be723fb103b0b1203faf9246a3f587250", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c8b479be723fb103b0b1203faf9246a3f587250/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d50443401d04becfa13ad350d2fba1b9819a686", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d50443401d04becfa13ad350d2fba1b9819a686", "html_url": "https://github.com/rust-lang/rust/commit/2d50443401d04becfa13ad350d2fba1b9819a686"}, {"sha": "5f3545e773f930c3345e7166b98bf9d2a76adff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f3545e773f930c3345e7166b98bf9d2a76adff6", "html_url": "https://github.com/rust-lang/rust/commit/5f3545e773f930c3345e7166b98bf9d2a76adff6"}], "stats": {"total": 52, "additions": 7, "deletions": 45}, "files": [{"sha": "a7303421808fabefb8a57002f68c4e983cf90a8d", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -2,12 +2,6 @@\n # It is not intended for manual editing.\n version = 3\n \n-[[package]]\n-name = \"abort_on_panic\"\n-version = \"2.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"955f37ac58af2416bac687c8ab66a4ccba282229bd7422a28d2281a5e66a6116\"\n-\n [[package]]\n name = \"addr2line\"\n version = \"0.17.0\"\n@@ -314,26 +308,6 @@ version = \"0.2.112\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"1b03d17f364a3a042d5e5d46b053bbbf82c92c9430c592dd4c064dc6ee997125\"\n \n-[[package]]\n-name = \"libffi\"\n-version = \"3.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0e08093a2ddeee94bd0c830a53d895ff91f1f3bb0f9b3c8c6b00739cdf76bc1d\"\n-dependencies = [\n- \"abort_on_panic\",\n- \"libc\",\n- \"libffi-sys\",\n-]\n-\n-[[package]]\n-name = \"libffi-sys\"\n-version = \"2.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ab4106b7f09d7b87d021334d5618fac1dfcfb824d4c5fe111ff0074dfd242e15\"\n-dependencies = [\n- \"cc\",\n-]\n-\n [[package]]\n name = \"libloading\"\n version = \"0.7.3\"\n@@ -418,7 +392,6 @@ dependencies = [\n  \"getrandom\",\n  \"lazy_static\",\n  \"libc\",\n- \"libffi\",\n  \"libloading\",\n  \"log\",\n  \"measureme\","}, {"sha": "c0a217b641169bef6c8ade16a44f81f7b8c8aa20", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -20,7 +20,7 @@ doctest = false # and no doc tests\n [dependencies]\n getrandom = { version = \"0.2\", features = [\"std\"] }\n env_logger = \"0.9\"\n-libffi = \"3.0.0\"\n+#FIXME(miri#2526): libffi = \"3.0.0\"\n libloading = \"0.7\"\n log = \"0.4\"\n shell-escape = \"0.1.4\""}, {"sha": "c7a3200dbd90439c7fa7534941b415fd79f941df", "filename": "README.md", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -346,17 +346,6 @@ to Miri failing to detect cases of undefined behavior in a program.\n   this flag is **unsound**.\n * `-Zmiri-disable-weak-memory-emulation` disables the emulation of some C++11 weak\n   memory effects.\n-* `-Zmiri-extern-so-file=<path to a shared object file>` is an experimental flag for providing support\n-  for FFI calls. Functions not provided by that file are still executed via the usual Miri shims.\n-  **WARNING**: If an invalid/incorrect `.so` file is specified, this can cause undefined behaviour in Miri itself!\n-  And of course, Miri cannot do any checks on the actions taken by the external code.\n-  Note that Miri has its own handling of file descriptors, so if you want to replace *some* functions\n-  working on file descriptors, you will have to replace *all* of them, or the two kinds of\n-  file descriptors will be mixed up.\n-  This is **work in progress**; currently, only integer arguments and return values are\n-  supported (and no, pointer/integer casts to work around this limitation will not work;\n-  they will fail horribly).\n-  Follow [the discussion on supporting other types](https://github.com/rust-lang/miri/issues/2365). \n * `-Zmiri-measureme=<name>` enables `measureme` profiling for the interpreted program.\n    This can be used to find which parts of your program are executing slowly under Miri.\n    The profile is written out to a file with the prefix `<name>`, and can be processed"}, {"sha": "bd46e4ae80e22416fb2b2ccee375fbbe62d0b2f0", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -23,7 +23,7 @@ use rustc_target::{\n \n use super::backtrace::EvalContextExt as _;\n use crate::helpers::{convert::Truncate, target_os_is_unix};\n-use crate::shims::ffi_support::EvalContextExt as _;\n+//FIXME(miri#2526): use crate::shims::ffi_support::EvalContextExt as _;\n use crate::*;\n \n /// Returned by `emulate_foreign_item_by_name`.\n@@ -375,9 +375,9 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // An Ok(false) here means that the function being called was not exported\n             // by the specified `.so` file; we should continue and check if it corresponds to\n             // a provided shim.\n-            if this.call_external_c_fct(link_name, dest, args)? {\n+            /*FIXME(miri#2526): if this.call_external_c_fct(link_name, dest, args)? {\n                 return Ok(EmulateByNameResult::NeedsJumping);\n-            }\n+            }*/\n         }\n \n         // When adding a new shim, you should follow the following pattern:"}, {"sha": "8179d09defe39f0a817205c5de917af8f79de48c", "filename": "src/shims/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -1,7 +1,7 @@\n #![warn(clippy::integer_arithmetic)]\n \n mod backtrace;\n-pub mod ffi_support;\n+//FIXME(miri#2526): pub mod ffi_support;\n pub mod foreign_items;\n pub mod intrinsics;\n pub mod unix;"}, {"sha": "0e492c3eecdf34536ed0b712529e4414aead02b1", "filename": "tests/compiletest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c8b479be723fb103b0b1203faf9246a3f587250/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8b479be723fb103b0b1203faf9246a3f587250/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=8c8b479be723fb103b0b1203faf9246a3f587250", "patch": "@@ -212,8 +212,8 @@ fn main() -> Result<()> {\n     ui(Mode::Panic, \"tests/panic\", WithDependencies)?;\n     ui(Mode::Fail { require_patterns: true }, \"tests/fail\", WithDependencies)?;\n     if cfg!(target_os = \"linux\") {\n-        ui(Mode::Pass, \"tests/extern-so/pass\", WithoutDependencies)?;\n-        ui(Mode::Fail { require_patterns: true }, \"tests/extern-so/fail\", WithDependencies)?;\n+        //FIXME(miri#2526): ui(Mode::Pass, \"tests/extern-so/pass\", WithoutDependencies)?;\n+        //FIXME(miri#2526): ui(Mode::Fail { require_patterns: true }, \"tests/extern-so/fail\", WithDependencies)?;\n     }\n \n     Ok(())"}]}