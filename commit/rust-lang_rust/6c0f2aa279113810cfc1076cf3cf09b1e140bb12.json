{"sha": "6c0f2aa279113810cfc1076cf3cf09b1e140bb12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMGYyYWEyNzkxMTM4MTBjZmMxMDc2Y2YzY2YwOWIxZTE0MGJiMTI=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2017-08-08T14:08:08Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2017-08-08T14:08:08Z"}, "message": "fix assertion - trait object pointers don't have infinite fields", "tree": {"sha": "c4a7d30b358dbc0f9bb89d2f45611613b3d6e757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4a7d30b358dbc0f9bb89d2f45611613b3d6e757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c0f2aa279113810cfc1076cf3cf09b1e140bb12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c0f2aa279113810cfc1076cf3cf09b1e140bb12", "html_url": "https://github.com/rust-lang/rust/commit/6c0f2aa279113810cfc1076cf3cf09b1e140bb12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c0f2aa279113810cfc1076cf3cf09b1e140bb12/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcd75d661a421af74b063efa9ac5ac6e0d6529d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcd75d661a421af74b063efa9ac5ac6e0d6529d7", "html_url": "https://github.com/rust-lang/rust/commit/bcd75d661a421af74b063efa9ac5ac6e0d6529d7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4ee9b2e65a782ac79c88ad3062caaeb6e7cb8df3", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c0f2aa279113810cfc1076cf3cf09b1e140bb12/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c0f2aa279113810cfc1076cf3cf09b1e140bb12/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=6c0f2aa279113810cfc1076cf3cf09b1e140bb12", "patch": "@@ -2197,8 +2197,8 @@ impl<'a, 'tcx> TyLayout<'tcx> {\n         let tcx = cx.tcx();\n \n         let ptr_field_type = |pointee: Ty<'tcx>| {\n+            assert!(i < 2);\n             let slice = |element: Ty<'tcx>| {\n-                assert!(i < 2);\n                 if i == 0 {\n                     tcx.mk_mut_ptr(element)\n                 } else {"}]}