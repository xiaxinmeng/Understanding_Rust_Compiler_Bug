{"sha": "e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "node_id": "C_kwDOAAsO6NoAKGUxYjZmMTZmZDRhZTUwN2Q5NDg0ZTIwYmZiZjkzNTVlNTUxYzJiYjI", "commit": {"author": {"name": "Shivani Bhardwaj", "email": "shivanib134@gmail.com", "date": "2021-09-10T18:35:16Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-06-27T08:43:51Z"}, "message": "Fix `rustdoc` argument error", "tree": {"sha": "0a457b19ee2cd53f8ec2cd08d8e93b595bc77fe9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a457b19ee2cd53f8ec2cd08d8e93b595bc77fe9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "html_url": "https://github.com/rust-lang/rust/commit/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/comments", "author": {"login": "inashivb", "id": 57791542, "node_id": "MDQ6VXNlcjU3NzkxNTQy", "avatar_url": "https://avatars.githubusercontent.com/u/57791542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/inashivb", "html_url": "https://github.com/inashivb", "followers_url": "https://api.github.com/users/inashivb/followers", "following_url": "https://api.github.com/users/inashivb/following{/other_user}", "gists_url": "https://api.github.com/users/inashivb/gists{/gist_id}", "starred_url": "https://api.github.com/users/inashivb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/inashivb/subscriptions", "organizations_url": "https://api.github.com/users/inashivb/orgs", "repos_url": "https://api.github.com/users/inashivb/repos", "events_url": "https://api.github.com/users/inashivb/events{/privacy}", "received_events_url": "https://api.github.com/users/inashivb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7036449c774860a5b348dbbe01c20704c557382e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7036449c774860a5b348dbbe01c20704c557382e", "html_url": "https://github.com/rust-lang/rust/commit/7036449c774860a5b348dbbe01c20704c557382e"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "3096af90d47702d481f7d39934c4784a1c6ec6c5", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "patch": "@@ -932,7 +932,7 @@ fn describe_codegen_flags() {\n     print_flag_list(\"-C\", config::CG_OPTIONS);\n }\n \n-fn print_flag_list<T>(\n+pub fn print_flag_list<T>(\n     cmdline_opt: &str,\n     flag_list: &[(&'static str, T, &'static str, &'static str)],\n ) {"}, {"sha": "52e616c9f3dc403171945d7fc6b943310de32a4b", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "patch": "@@ -6,6 +6,7 @@ use std::path::PathBuf;\n use std::str::FromStr;\n \n use rustc_data_structures::fx::FxHashMap;\n+use rustc_driver::print_flag_list;\n use rustc_session::config::{\n     self, parse_crate_types_from_list, parse_externs, parse_target_triple, CrateType,\n };\n@@ -310,11 +311,12 @@ impl RenderOptions {\n impl Options {\n     /// Parses the given command-line for options. If an error message or other early-return has\n     /// been printed, returns `Err` with the exit code.\n-    pub(crate) fn from_matches(matches: &getopts::Matches) -> Result<Options, i32> {\n+    pub(crate) fn from_matches(matches: &getopts::Matches, args: Vec<String>) -> Result<Options, i32> {\n+        let args = &args[1..];\n         // Check for unstable options.\n         nightly_options::check_nightly_options(matches, &opts());\n \n-        if matches.opt_present(\"h\") || matches.opt_present(\"help\") {\n+        if args.is_empty() || matches.opt_present(\"h\") || matches.opt_present(\"help\") {\n             crate::usage(\"rustdoc\");\n             return Err(0);\n         } else if matches.opt_present(\"version\") {\n@@ -335,6 +337,21 @@ impl Options {\n         // check for deprecated options\n         check_deprecated_options(matches, &diag);\n \n+        let z_flags = matches.opt_strs(\"Z\");\n+        if z_flags.iter().any(|x| *x == \"help\") {\n+            print_flag_list(\"-Z\", config::DB_OPTIONS);\n+            return Err(0);\n+        }\n+        let c_flags = matches.opt_strs(\"C\");\n+        if c_flags.iter().any(|x| *x == \"help\") {\n+            print_flag_list(\"-C\", config::CG_OPTIONS);\n+            return Err(0);\n+        }\n+        let w_flags = matches.opt_strs(\"W\");\n+        if w_flags.iter().any(|x| *x == \"help\") {\n+            print_flag_list(\"-W\", config::DB_OPTIONS);\n+            return Err(0);\n+        }\n         if matches.opt_strs(\"passes\") == [\"list\"] {\n             println!(\"Available passes for running rustdoc:\");\n             for pass in passes::PASSES {\n@@ -415,6 +432,7 @@ impl Options {\n             }\n             return Err(0);\n         }\n+        let (_lint_opts, _describe_lints, _lint_cap) = get_cmd_lint_options(matches, error_format);\n \n         if matches.free.is_empty() {\n             diag.struct_err(\"missing file operand\").emit();"}, {"sha": "db4c3d102370097d35eab949f29208ca70911f88", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=e1b6f16fd4ae507d9484e20bfbf9355e551c2bb2", "patch": "@@ -686,7 +686,7 @@ fn main_args(at_args: &[String]) -> MainResult {\n \n     // Note that we discard any distinction between different non-zero exit\n     // codes from `from_matches` here.\n-    let options = match config::Options::from_matches(&matches) {\n+    let options = match config::Options::from_matches(&matches, args) {\n         Ok(opts) => opts,\n         Err(code) => {\n             return if code == 0 {"}]}