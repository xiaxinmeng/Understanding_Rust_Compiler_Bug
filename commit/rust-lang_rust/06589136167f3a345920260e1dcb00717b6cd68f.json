{"sha": "06589136167f3a345920260e1dcb00717b6cd68f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NTg5MTM2MTY3ZjNhMzQ1OTIwMjYwZTFkY2IwMDcxN2I2Y2Q2OGY=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-02-18T04:43:32Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-02-19T04:42:29Z"}, "message": "rustdoc: Only inject extern crates if not present", "tree": {"sha": "4ea08d24eb7b5edc2685e913fc38b0a8f0f638a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ea08d24eb7b5edc2685e913fc38b0a8f0f638a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06589136167f3a345920260e1dcb00717b6cd68f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06589136167f3a345920260e1dcb00717b6cd68f", "html_url": "https://github.com/rust-lang/rust/commit/06589136167f3a345920260e1dcb00717b6cd68f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06589136167f3a345920260e1dcb00717b6cd68f/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03c5342419fe49d060f2ea26f77ae3e716945a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c5342419fe49d060f2ea26f77ae3e716945a90", "html_url": "https://github.com/rust-lang/rust/commit/03c5342419fe49d060f2ea26f77ae3e716945a90"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "12b632559589c46fea54ed26c5ed875af8a6e5c1", "filename": "src/libextra/json.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/06589136167f3a345920260e1dcb00717b6cd68f/src%2Flibextra%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06589136167f3a345920260e1dcb00717b6cd68f/src%2Flibextra%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fjson.rs?ref=06589136167f3a345920260e1dcb00717b6cd68f", "patch": "@@ -59,6 +59,7 @@ the code for these traits: `#[deriving(Decodable, Encodable)]`\n To encode using Encodable :\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use extra::json;\n use std::io;\n@@ -98,6 +99,7 @@ A basic `ToJson` example using a TreeMap of attribute name / attribute value:\n \n \n ```rust\n+extern crate extra;\n extern crate collections;\n \n use extra::json;\n@@ -128,6 +130,7 @@ fn main() {\n To decode a json string using `Decodable` trait :\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use serialize::Decodable;\n \n@@ -154,6 +157,7 @@ Create a struct called TestStruct1 and serialize and deserialize it to and from\n using the serialization API, using the derived serialization code.\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n use extra::json;\n use serialize::{Encodable, Decodable};\n@@ -186,6 +190,7 @@ This example use the ToJson impl to unserialize the json string.\n Example of `ToJson` trait implementation for TestStruct1.\n \n ```rust\n+extern crate extra;\n extern crate serialize;\n extern crate collections;\n "}, {"sha": "db4842b79a04bbd23a7599d1f2b2755460418adf", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/06589136167f3a345920260e1dcb00717b6cd68f/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06589136167f3a345920260e1dcb00717b6cd68f/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=06589136167f3a345920260e1dcb00717b6cd68f", "patch": "@@ -144,11 +144,13 @@ fn maketest(s: &str, cratename: &str) -> ~str {\n #[deny(warnings)];\n #[allow(unused_variable, dead_assignment, unused_mut, attribute_usage, dead_code)];\n \";\n-    if s.contains(\"extra\") {\n-        prog.push_str(\"extern crate extra;\\n\");\n-    }\n-    if s.contains(cratename) {\n-        prog.push_str(format!(\"extern crate {};\\n\", cratename));\n+    if !s.contains(\"extern crate\") {\n+        if s.contains(\"extra\") {\n+            prog.push_str(\"extern crate extra;\\n\");\n+        }\n+        if s.contains(cratename) {\n+            prog.push_str(format!(\"extern crate {};\\n\", cratename));\n+        }\n     }\n     if s.contains(\"fn main\") {\n         prog.push_str(s);"}]}