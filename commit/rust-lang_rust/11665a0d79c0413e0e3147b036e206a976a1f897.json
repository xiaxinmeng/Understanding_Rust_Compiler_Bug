{"sha": "11665a0d79c0413e0e3147b036e206a976a1f897", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNjY1YTBkNzljMDQxM2UwZTMxNDdiMDM2ZTIwNmE5NzZhMWY4OTc=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T23:53:21Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-09T22:08:14Z"}, "message": "Dogfood", "tree": {"sha": "7b370340c354aa489f13d58e5243c3c7f28e09d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b370340c354aa489f13d58e5243c3c7f28e09d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11665a0d79c0413e0e3147b036e206a976a1f897", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXWejUAAoJEF5CfHlMukXoUjcP+gLQVvdrP//AkKjhfCUG+WJz\nYxvLBhyNWBBEHdu+8IgTb/NLqp3xfeOc5KQDskUVDgC+4pbPFUJnbqcFMGERoVcl\nOTRxL5w23thaZ205xyL2vC8m8z/hWxMJpnZnL5ae6olGwPqrL+X2kaOTxPOd6kbI\njRDYR4vwcRWbgOnZPkhjr7T9ZsAfigcF//TAYfI57AXy/BhpM/k4Zssck0MGHCHL\nvjJ9xGf1aTEB7YehXBVSBlvER9CXyTrgL43iqDcrc6v3gZprpA+IJpsPRa9c/hWx\n0qdhAWrRKVmlzVknKt5AiYricTDir4GM9cIODYjAKNQfrZ4Irn3fiylo++r5H8Ex\nC37prlLGSekoNyMgp4U15uICnm+KoS7n1lCjaQv1mgTkmRWW6WulJofWI2J5xDwl\nycYkCXa5XOn4Sh/YXCrC5qXAkWA+ReYvZjfrC31vGWe4Y5j1XAQggYAjuPCWey+S\nzCRE0kiYFYClUijgkOXlXTo49/RjIncSWlmDYRXwhrvHcyFcOcihP3gjgqykIwlt\nHzA6JQ8EhYx2UCHGL35TQ58QtzgjwYF+SpEEr97lKcNzF24CunrcvNvtkIxwOc8I\nVxnIZopeN8wWAkBF51BdAFEfsQ8KNpxZRUwvJsMF2KjlMoYQQXohhVMk2iaFGUjs\nEp9CveiOC/RcOOULtyZ9\n=V7Gs\n-----END PGP SIGNATURE-----", "payload": "tree 7b370340c354aa489f13d58e5243c3c7f28e09d8\nparent 90453fd893c1f1ad739a8f79516591db1af6d307\nauthor mcarton <cartonmartin+git@gmail.com> 1465170801 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465510094 +0200\n\nDogfood\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11665a0d79c0413e0e3147b036e206a976a1f897", "html_url": "https://github.com/rust-lang/rust/commit/11665a0d79c0413e0e3147b036e206a976a1f897", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11665a0d79c0413e0e3147b036e206a976a1f897/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90453fd893c1f1ad739a8f79516591db1af6d307", "url": "https://api.github.com/repos/rust-lang/rust/commits/90453fd893c1f1ad739a8f79516591db1af6d307", "html_url": "https://github.com/rust-lang/rust/commit/90453fd893c1f1ad739a8f79516591db1af6d307"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "fb2fffab67d275e0fe92683bd45a307cbee09ea3", "filename": "src/main.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/11665a0d79c0413e0e3147b036e206a976a1f897/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11665a0d79c0413e0e3147b036e206a976a1f897/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=11665a0d79c0413e0e3147b036e206a976a1f897", "patch": "@@ -115,20 +115,19 @@ pub fn main() {\n \n     let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n     let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-    let sys_root = match (home, toolchain) {\n-        (Some(home), Some(toolchain)) => format!(\"{}/toolchains/{}\", home, toolchain),\n-        _ => {\n-            option_env!(\"SYSROOT\")\n-                .map(|s| s.to_owned())\n-                .or(Command::new(\"rustc\")\n-                    .arg(\"--print\")\n-                    .arg(\"sysroot\")\n-                    .output()\n-                    .ok()\n-                    .and_then(|out| String::from_utf8(out.stdout).ok())\n-                    .map(|s| s.trim().to_owned()))\n-                .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\")\n-        }\n+    let sys_root = if let (Some(home), Some(toolchain)) = (home, toolchain) {\n+        format!(\"{}/toolchains/{}\", home, toolchain)\n+    } else {\n+        option_env!(\"SYSROOT\")\n+            .map(|s| s.to_owned())\n+            .or(Command::new(\"rustc\")\n+                .arg(\"--print\")\n+                .arg(\"sysroot\")\n+                .output()\n+                .ok()\n+                .and_then(|out| String::from_utf8(out.stdout).ok())\n+                .map(|s| s.trim().to_owned()))\n+            .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\")\n     };\n \n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {"}]}