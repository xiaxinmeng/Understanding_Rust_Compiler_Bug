{"sha": "73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZDVkODk1NjdlZjE1NWRjMTJlZTdkN2VkNjFlMjA2ZTQzYmY3NGU=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-02-03T06:03:39Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-02-03T07:11:24Z"}, "message": "lint: Warn about no-mangled statics that are not exported", "tree": {"sha": "1fae973f7059d9a49e7f842234a9aa4ae359d670", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fae973f7059d9a49e7f842234a9aa4ae359d670"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "html_url": "https://github.com/rust-lang/rust/commit/73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73d5d89567ef155dc12ee7d7ed61e206e43bf74e/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51ed1ecefd016bd90b09fea399b9a989d756609d", "url": "https://api.github.com/repos/rust-lang/rust/commits/51ed1ecefd016bd90b09fea399b9a989d756609d", "html_url": "https://github.com/rust-lang/rust/commit/51ed1ecefd016bd90b09fea399b9a989d756609d"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "697810fa0e95e8f20150ff609ad858becfdc6f98", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73d5d89567ef155dc12ee7d7ed61e206e43bf74e/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d5d89567ef155dc12ee7d7ed61e206e43bf74e/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "patch": "@@ -2065,6 +2065,12 @@ declare_lint! {\n     \"functions marked #[no_mangle] should be exported\"\n }\n \n+declare_lint! {\n+    PRIVATE_NO_MANGLE_STATICS,\n+    Warn,\n+    \"statics marked #[no_mangle] should be exported\"\n+}\n+\n declare_lint! {\n     NO_MANGLE_CONST_ITEMS,\n     Deny,\n@@ -2077,6 +2083,7 @@ pub struct InvalidNoMangleItems;\n impl LintPass for InvalidNoMangleItems {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(PRIVATE_NO_MANGLE_FNS,\n+                    PRIVATE_NO_MANGLE_STATICS,\n                     NO_MANGLE_CONST_ITEMS)\n     }\n \n@@ -2090,6 +2097,14 @@ impl LintPass for InvalidNoMangleItems {\n                     cx.span_lint(PRIVATE_NO_MANGLE_FNS, it.span, msg.as_slice());\n                 }\n             },\n+            ast::ItemStatic(..) => {\n+                if attr::contains_name(it.attrs.as_slice(), \"no_mangle\") &&\n+                       !cx.exported_items.contains(&it.id) {\n+                    let msg = format!(\"static {} is marked #[no_mangle], but not exported\",\n+                                      it.ident);\n+                    cx.span_lint(PRIVATE_NO_MANGLE_STATICS, it.span, msg.as_slice());\n+                }\n+            },\n             ast::ItemConst(..) => {\n                 if attr::contains_name(it.attrs.as_slice(), \"no_mangle\") {\n                     let msg = \"const items should never be #[no_mangle]\";"}, {"sha": "216fcf9353578a594c00febb75c97bca216daee9", "filename": "src/test/compile-fail/lint-unexported-no-mangle.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/73d5d89567ef155dc12ee7d7ed61e206e43bf74e/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d5d89567ef155dc12ee7d7ed61e206e43bf74e/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unexported-no-mangle.rs?ref=73d5d89567ef155dc12ee7d7ed61e206e43bf74e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// compile-flags:-F private_no_mangle_fns -F no_mangle_const_items\n+// compile-flags:-F private_no_mangle_fns -F no_mangle_const_items -F private_no_mangle_statics\n \n // FIXME(#19495) no_mangle'ing main ICE's.\n #[no_mangle]\n@@ -26,6 +26,14 @@ pub const PUB_FOO: u64 = 1; //~ ERROR const items should never be #[no_mangle]\n pub fn bar()  {\n }\n \n+#[no_mangle]\n+pub static BAR: u64 = 1;\n+\n+#[allow(dead_code)]\n+#[no_mangle]\n+static PRIVATE_BAR: u64 = 1; //~ ERROR static PRIVATE_BAR is marked #[no_mangle], but not exported\n+\n+\n fn main() {\n     foo();\n     bar();"}]}