{"sha": "075588a4939acb47feea79779a9bdacce702d9c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NTU4OGE0OTM5YWNiNDdmZWVhNzk3NzlhOWJkYWNjZTcwMmQ5YzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-02T18:58:19Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-02T18:58:19Z"}, "message": "rollup merge of #21825: kmcallister/ttdelim-span", "tree": {"sha": "b73a5f0bbe1ac7c651b7ad28a8f9c6bcddc6853e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b73a5f0bbe1ac7c651b7ad28a8f9c6bcddc6853e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/075588a4939acb47feea79779a9bdacce702d9c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/075588a4939acb47feea79779a9bdacce702d9c5", "html_url": "https://github.com/rust-lang/rust/commit/075588a4939acb47feea79779a9bdacce702d9c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/075588a4939acb47feea79779a9bdacce702d9c5/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10de0d9898a55e167f866cffaa0b6a48a8cd0a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/10de0d9898a55e167f866cffaa0b6a48a8cd0a64", "html_url": "https://github.com/rust-lang/rust/commit/10de0d9898a55e167f866cffaa0b6a48a8cd0a64"}, {"sha": "cedc6753f2bb8aedf527245ba9874e85cf669ac2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cedc6753f2bb8aedf527245ba9874e85cf669ac2", "html_url": "https://github.com/rust-lang/rust/commit/cedc6753f2bb8aedf527245ba9874e85cf669ac2"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "b919f70c3cd6a762d7fa55ab5aa62745371ded6f", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/075588a4939acb47feea79779a9bdacce702d9c5/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075588a4939acb47feea79779a9bdacce702d9c5/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=075588a4939acb47feea79779a9bdacce702d9c5", "patch": "@@ -755,6 +755,7 @@ mod test {\n     use ast;\n     use abi;\n     use attr::{first_attr_value_str_by_name, AttrMetaMethods};\n+    use parse;\n     use parse::parser::Parser;\n     use parse::token::{str_to_ident};\n     use print::pprust::item_to_string;\n@@ -1214,4 +1215,26 @@ mod test {\n         let doc = first_attr_value_str_by_name(item.attrs.as_slice(), \"doc\").unwrap();\n         assert_eq!(doc.get(), \"/** doc comment\\n *  with CRLF */\");\n     }\n+\n+    #[test]\n+    fn ttdelim_span() {\n+        let sess = parse::new_parse_sess();\n+        let expr = parse::parse_expr_from_source_str(\"foo\".to_string(),\n+            \"foo!( fn main() { body } )\".to_string(), vec![], &sess);\n+\n+        let tts = match expr.node {\n+            ast::ExprMac(ref mac) => {\n+                let ast::MacInvocTT(_, ref tts, _) = mac.node;\n+                tts.clone()\n+            }\n+            _ => panic!(\"not a macro\"),\n+        };\n+\n+        let span = tts.iter().rev().next().unwrap().get_span();\n+\n+        match sess.span_diagnostic.cm.span_to_snippet(span) {\n+            Some(s) => assert_eq!(&s[], \"{ body }\"),\n+            None => panic!(\"could not get snippet\"),\n+        }\n+    }\n }"}, {"sha": "0ed85a014efbf195dabff5dc179a07852a58f52d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/075588a4939acb47feea79779a9bdacce702d9c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/075588a4939acb47feea79779a9bdacce702d9c5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=075588a4939acb47feea79779a9bdacce702d9c5", "patch": "@@ -2742,7 +2742,7 @@ impl<'a> Parser<'a> {\n                 self.open_braces.pop().unwrap();\n \n                 // Expand to cover the entire delimited token tree\n-                let span = Span { hi: self.span.hi, ..pre_span };\n+                let span = Span { hi: close_span.hi, ..pre_span };\n \n                 TtDelimited(span, Rc::new(Delimited {\n                     delim: delim,"}]}