{"sha": "ec7010a1a8ae59a7538e649218665497306eb8b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNzAxMGExYThhZTU5YTc1MzhlNjQ5MjE4NjY1NDk3MzA2ZWI4YjE=", "commit": {"author": {"name": "Matt Cooper", "email": "mattc@xbox.com", "date": "2020-03-10T17:46:39Z"}, "committer": {"name": "Matt Cooper", "email": "mattc@xbox.com", "date": "2020-03-10T17:46:39Z"}, "message": "establish immutable source for RUST_CONFIGURE_ARGS", "tree": {"sha": "96a3b3f6be5196cb069f4277c534bd505712b169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96a3b3f6be5196cb069f4277c534bd505712b169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec7010a1a8ae59a7538e649218665497306eb8b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec7010a1a8ae59a7538e649218665497306eb8b1", "html_url": "https://github.com/rust-lang/rust/commit/ec7010a1a8ae59a7538e649218665497306eb8b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec7010a1a8ae59a7538e649218665497306eb8b1/comments", "author": {"login": "vtbassmatt", "id": 714283, "node_id": "MDQ6VXNlcjcxNDI4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/714283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtbassmatt", "html_url": "https://github.com/vtbassmatt", "followers_url": "https://api.github.com/users/vtbassmatt/followers", "following_url": "https://api.github.com/users/vtbassmatt/following{/other_user}", "gists_url": "https://api.github.com/users/vtbassmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtbassmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtbassmatt/subscriptions", "organizations_url": "https://api.github.com/users/vtbassmatt/orgs", "repos_url": "https://api.github.com/users/vtbassmatt/repos", "events_url": "https://api.github.com/users/vtbassmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/vtbassmatt/received_events", "type": "User", "site_admin": true}, "committer": {"login": "vtbassmatt", "id": 714283, "node_id": "MDQ6VXNlcjcxNDI4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/714283?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vtbassmatt", "html_url": "https://github.com/vtbassmatt", "followers_url": "https://api.github.com/users/vtbassmatt/followers", "following_url": "https://api.github.com/users/vtbassmatt/following{/other_user}", "gists_url": "https://api.github.com/users/vtbassmatt/gists{/gist_id}", "starred_url": "https://api.github.com/users/vtbassmatt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vtbassmatt/subscriptions", "organizations_url": "https://api.github.com/users/vtbassmatt/orgs", "repos_url": "https://api.github.com/users/vtbassmatt/repos", "events_url": "https://api.github.com/users/vtbassmatt/events{/privacy}", "received_events_url": "https://api.github.com/users/vtbassmatt/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "dd155df0a69338757ca39a2a606a6accb7b8d342", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd155df0a69338757ca39a2a606a6accb7b8d342", "html_url": "https://github.com/rust-lang/rust/commit/dd155df0a69338757ca39a2a606a6accb7b8d342"}], "stats": {"total": 53, "additions": 30, "deletions": 23}, "files": [{"sha": "f00d3c6da62db9c2f0cf58a1043f8dab227abecd", "filename": "src/ci/azure-pipelines/auto.yml", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fazure-pipelines%2Fauto.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fazure-pipelines%2Fauto.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Fauto.yml?ref=ec7010a1a8ae59a7538e649218665497306eb8b1", "patch": "@@ -76,7 +76,7 @@ jobs:\n       # version that we're using, 8.2, cannot compile LLVM for OSX 10.7.\n       x86_64-apple:\n         SCRIPT: ./x.py test\n-        RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-apple-darwin --enable-sanitizers --enable-profiler --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.8\n         MACOSX_STD_DEPLOYMENT_TARGET: 10.7\n@@ -85,7 +85,7 @@ jobs:\n \n       dist-x86_64-apple:\n         SCRIPT: ./x.py dist\n-        RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n+        IINTIAL_RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.7\n         NO_LLVM_ASSERTIONS: 1\n@@ -94,7 +94,7 @@ jobs:\n \n       dist-x86_64-apple-alt:\n         SCRIPT: ./x.py dist\n-        RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n+        INITIAL_RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n         MACOSX_DEPLOYMENT_TARGET: 10.7\n         NO_LLVM_ASSERTIONS: 1\n@@ -111,41 +111,41 @@ jobs:\n     matrix:\n       # 32/64 bit MSVC tests\n       x86_64-msvc-1:\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-msvc-2:\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-profiler\n         SCRIPT: make ci-subset-2\n       i686-msvc-1:\n-        RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-msvc-2:\n-        RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=i686-pc-windows-msvc\n         SCRIPT: make ci-subset-2\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC aux tests\n       x86_64-msvc-aux:\n         RUST_CHECK_TARGET: check-aux EXCLUDE_CARGO=1\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n       x86_64-msvc-cargo:\n         SCRIPT: python x.py test src/tools/cargotest src/tools/cargo\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n         VCVARS_BAT: vcvars64.bat\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       # MSVC tools tests\n       x86_64-msvc-tools:\n         SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstate/toolstates.json\n \n       # 32/64-bit MinGW builds.\n       #\n@@ -161,57 +161,57 @@ jobs:\n       # came from the mingw-w64 SourceForge download site. Unfortunately\n       # SourceForge is notoriously flaky, so we mirror it on our own infrastructure.\n       i686-mingw-1:\n-        RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-1\n         CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       i686-mingw-2:\n-        RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu\n         SCRIPT: make ci-mingw-subset-2\n         CUSTOM_MINGW: 1\n       x86_64-mingw-1:\n         SCRIPT: make ci-mingw-subset-1\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n         CUSTOM_MINGW: 1\n         # FIXME(#59637)\n         NO_DEBUG_ASSERTIONS: 1\n         NO_LLVM_ASSERTIONS: 1\n       x86_64-mingw-2:\n         SCRIPT: make ci-mingw-subset-2\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu\n         CUSTOM_MINGW: 1\n \n       # 32/64 bit MSVC and GNU deployment\n       dist-x86_64-msvc:\n-        RUST_CONFIGURE_ARGS: >-\n+        INITIAL_RUST_CONFIGURE_ARGS: >-\n           --build=x86_64-pc-windows-msvc\n           --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n           --enable-full-tools\n           --enable-profiler\n         SCRIPT: python x.py dist\n         DIST_REQUIRE_ALL_TOOLS: 1\n       dist-i686-msvc:\n-        RUST_CONFIGURE_ARGS: >-\n+        INITIAL_RUST_CONFIGURE_ARGS: >-\n           --build=i686-pc-windows-msvc\n           --target=i586-pc-windows-msvc\n           --enable-full-tools\n           --enable-profiler\n         SCRIPT: python x.py dist\n         DIST_REQUIRE_ALL_TOOLS: 1\n       dist-i686-mingw:\n-        RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=i686-pc-windows-gnu --enable-full-tools --enable-profiler\n         SCRIPT: python x.py dist\n         CUSTOM_MINGW: 1\n         DIST_REQUIRE_ALL_TOOLS: 1\n       dist-x86_64-mingw:\n         SCRIPT: python x.py dist\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-gnu --enable-full-tools --enable-profiler\n         CUSTOM_MINGW: 1\n         DIST_REQUIRE_ALL_TOOLS: 1\n \n       # \"alternate\" deployment, see .travis.yml for more info\n       dist-x86_64-msvc-alt:\n-        RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n+        INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n         SCRIPT: python x.py dist"}, {"sha": "698608795e24d828c897957108e27f4fe5a22430", "filename": "src/ci/azure-pipelines/try.yml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fazure-pipelines%2Ftry.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fazure-pipelines%2Ftry.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fazure-pipelines%2Ftry.yml?ref=ec7010a1a8ae59a7538e649218665497306eb8b1", "patch": "@@ -32,7 +32,7 @@ jobs:\n #     matrix:\n #       dist-x86_64-apple:\n #         SCRIPT: ./x.py dist\n-#         RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n+#         INITIAL_RUST_CONFIGURE_ARGS: --target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-full-tools --enable-sanitizers --enable-profiler --set rust.jemalloc\n #         DEPLOY: 1\n #         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n #         MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -42,7 +42,7 @@ jobs:\n #\n #       dist-x86_64-apple-alt:\n #         SCRIPT: ./x.py dist\n-#         RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n+#         INITIAL_RUST_CONFIGURE_ARGS: --enable-extended --enable-profiler --set rust.jemalloc\n #         DEPLOY_ALT: 1\n #         RUSTC_RETRY_LINKER_ON_SEGFAULT: 1\n #         MACOSX_DEPLOYMENT_TARGET: 10.7\n@@ -58,7 +58,7 @@ jobs:\n #   strategy:\n #     matrix:\n #       dist-x86_64-msvc:\n-#         RUST_CONFIGURE_ARGS: >\n+#         INITIAL_RUST_CONFIGURE_ARGS: >\n #           --build=x86_64-pc-windows-msvc\n #           --target=x86_64-pc-windows-msvc,aarch64-pc-windows-msvc\n #           --enable-full-tools\n@@ -68,6 +68,6 @@ jobs:\n #         DEPLOY: 1\n #\n #       dist-x86_64-msvc-alt:\n-#         RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n+#         INITIAL_RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --enable-extended --enable-profiler\n #         SCRIPT: python x.py dist\n #         DEPLOY_ALT: 1"}, {"sha": "9fd07a37fcc48623d729e40a567d86bd41969e81", "filename": "src/ci/scripts/setup-environment.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fscripts%2Fsetup-environment.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ec7010a1a8ae59a7538e649218665497306eb8b1/src%2Fci%2Fscripts%2Fsetup-environment.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fscripts%2Fsetup-environment.sh?ref=ec7010a1a8ae59a7538e649218665497306eb8b1", "patch": "@@ -8,6 +8,13 @@ IFS=$'\\n\\t'\n \n source \"$(cd \"$(dirname \"$0\")\" && pwd)/../shared.sh\"\n \n+# Since matrix variables are readonly in Azure Pipelines, we take\n+# INITIAL_RUST_CONFIGURE_ARGS and establish RUST_CONFIGURE_ARGS\n+# which downstream steps can alter\n+if [[ -n \"${INITIAL_RUST_CONFIGURE_ARGS}\" ]]; then\n+    ciCommandSetEnv RUST_CONFIGURE_ARGS \"${INITIAL_RUST_CONFIGURE_ARGS}\"\n+fi\n+\n # Builders starting with `dist-` are dist builders, but if they also end with\n # `-alt` they are alternate dist builders.\n if [[ \"${CI_JOB_NAME}\" = dist-* ]]; then"}]}