{"sha": "8c09865b66f5e2865037e6ce1396ba0a653136e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMDk4NjViNjZmNWUyODY1MDM3ZTZjZTEzOTZiYTBhNjUzMTM2ZTA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-27T20:36:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-08-27T20:49:06Z"}, "message": "Remove remnants of implicit self", "tree": {"sha": "c2570bed0ab34f84deeaf19a3027aa7810eb5840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2570bed0ab34f84deeaf19a3027aa7810eb5840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c09865b66f5e2865037e6ce1396ba0a653136e0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c09865b66f5e2865037e6ce1396ba0a653136e0", "html_url": "https://github.com/rust-lang/rust/commit/8c09865b66f5e2865037e6ce1396ba0a653136e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c09865b66f5e2865037e6ce1396ba0a653136e0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35a41775505b9c7bb7b5ad9bfe1b7b7a6afb27b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/35a41775505b9c7bb7b5ad9bfe1b7b7a6afb27b8", "html_url": "https://github.com/rust-lang/rust/commit/35a41775505b9c7bb7b5ad9bfe1b7b7a6afb27b8"}], "stats": {"total": 52, "additions": 15, "deletions": 37}, "files": [{"sha": "c9727db3f5bca543ad22ea57624a15cd97156c6c", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -383,7 +383,7 @@ impl tr for ast::def {\n             ast::def_method(did0.tr(xcx), did1.map(|did1| did1.tr(xcx)))\n           }\n           ast::def_self_ty(nid) => { ast::def_self_ty(xcx.tr_id(nid)) }\n-          ast::def_self(nid, i) => { ast::def_self(xcx.tr_id(nid), i) }\n+          ast::def_self(nid) => { ast::def_self(xcx.tr_id(nid)) }\n           ast::def_mod(did) => { ast::def_mod(did.tr(xcx)) }\n           ast::def_foreign_mod(did) => { ast::def_foreign_mod(did.tr(xcx)) }\n           ast::def_static(did, m) => { ast::def_static(did.tr(xcx), m) }"}, {"sha": "df918caac373e4a45bb3e9fcec7f0bca2a2e8dbc", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -352,7 +352,6 @@ impl<'self> CheckLoanCtxt<'self> {\n \n                     mc::cat_rvalue(*) |\n                     mc::cat_static_item |\n-                    mc::cat_implicit_self |\n                     mc::cat_copied_upvar(*) |\n                     mc::cat_deref(_, _, mc::unsafe_ptr(*)) |\n                     mc::cat_deref(_, _, mc::gc_ptr(*)) |\n@@ -435,7 +434,6 @@ impl<'self> CheckLoanCtxt<'self> {\n                     mc::cat_self(*) |\n                     mc::cat_deref(_, _, mc::unsafe_ptr(*)) |\n                     mc::cat_static_item(*) |\n-                    mc::cat_implicit_self(*) |\n                     mc::cat_deref(_, _, mc::gc_ptr(_)) |\n                     mc::cat_deref(_, _, mc::region_ptr(m_const, _)) |\n                     mc::cat_deref(_, _, mc::region_ptr(m_imm, _)) => {"}, {"sha": "d6f9d1db7df8830220d1b321f8366b2c63638709", "filename": "src/librustc/middle/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -100,7 +100,6 @@ fn check_is_legal_to_move_from(bccx: @BorrowckCtxt,\n                                cmt0: mc::cmt,\n                                cmt: mc::cmt) -> bool {\n     match cmt.cat {\n-        mc::cat_implicit_self(*) |\n         mc::cat_deref(_, _, mc::region_ptr(*)) |\n         mc::cat_deref(_, _, mc::gc_ptr(*)) |\n         mc::cat_deref(_, _, mc::unsafe_ptr(*)) => {"}, {"sha": "1dcfc515139bb7169c21f84fd0f0ce38f20946cb", "filename": "src/librustc/middle/borrowck/gather_loans/lifetime.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Flifetime.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -68,7 +68,6 @@ impl GuaranteeLifetimeContext {\n \n         match cmt.cat {\n             mc::cat_rvalue(*) |\n-            mc::cat_implicit_self |\n             mc::cat_copied_upvar(*) |                  // L-Local\n             mc::cat_local(*) |                         // L-Local\n             mc::cat_arg(*) |                           // L-Local\n@@ -301,7 +300,6 @@ impl GuaranteeLifetimeContext {\n             }\n             mc::cat_rvalue(*) |\n             mc::cat_static_item |\n-            mc::cat_implicit_self |\n             mc::cat_copied_upvar(*) |\n             mc::cat_deref(*) => {\n                 false\n@@ -328,7 +326,6 @@ impl GuaranteeLifetimeContext {\n             mc::cat_rvalue(cleanup_scope_id) => {\n                 ty::re_scope(cleanup_scope_id)\n             }\n-            mc::cat_implicit_self |\n             mc::cat_copied_upvar(_) => {\n                 ty::re_scope(self.item_scope_id)\n             }"}, {"sha": "ccfef63d9bcba378224d8cdcb8cb407cd5edcd31", "filename": "src/librustc/middle/borrowck/gather_loans/restrictions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -115,7 +115,6 @@ impl RestrictionsContext {\n \n             mc::cat_copied_upvar(*) | // FIXME(#2152) allow mutation of upvars\n             mc::cat_static_item(*) |\n-            mc::cat_implicit_self(*) |\n             mc::cat_deref(_, _, mc::region_ptr(m_imm, _)) |\n             mc::cat_deref(_, _, mc::gc_ptr(m_imm)) => {\n                 // R-Deref-Imm-Borrowed"}, {"sha": "4490fe65d91817e5fde4c4b3f53d6cd1b20ffef8", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -284,8 +284,7 @@ pub fn opt_loan_path(cmt: mc::cmt) -> Option<@LoanPath> {\n     match cmt.cat {\n         mc::cat_rvalue(*) |\n         mc::cat_static_item |\n-        mc::cat_copied_upvar(_) |\n-        mc::cat_implicit_self => {\n+        mc::cat_copied_upvar(_) => {\n             None\n         }\n "}, {"sha": "8be9a5db8bbbb7df69777fad3cabc6045c4313c6", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -61,7 +61,6 @@ use syntax::print::pprust;\n pub enum categorization {\n     cat_rvalue(ast::NodeId),           // temporary val, argument is its scope\n     cat_static_item,\n-    cat_implicit_self,\n     cat_copied_upvar(CopiedUpvar),     // upvar copied into @fn or ~fn env\n     cat_stack_upvar(cmt),              // by ref upvar from &fn\n     cat_local(ast::NodeId),            // local variable\n@@ -493,17 +492,11 @@ impl mem_categorization_ctxt {\n             }\n           }\n \n-          ast::def_self(self_id, is_implicit) => {\n-            let cat = if is_implicit {\n-                cat_implicit_self\n-            } else {\n-                cat_self(self_id)\n-            };\n-\n+          ast::def_self(self_id) => {\n             @cmt_ {\n                 id:id,\n                 span:span,\n-                cat:cat,\n+                cat:cat_self(self_id),\n                 mutbl: McImmutable,\n                 ty:expr_ty\n             }\n@@ -1016,9 +1009,6 @@ impl mem_categorization_ctxt {\n           cat_static_item => {\n               ~\"static item\"\n           }\n-          cat_implicit_self => {\n-              ~\"self reference\"\n-          }\n           cat_copied_upvar(_) => {\n               ~\"captured outer variable in a heap closure\"\n           }\n@@ -1121,7 +1111,6 @@ impl cmt_ {\n         match self.cat {\n             cat_rvalue(*) |\n             cat_static_item |\n-            cat_implicit_self |\n             cat_copied_upvar(*) |\n             cat_local(*) |\n             cat_self(*) |\n@@ -1167,8 +1156,7 @@ impl cmt_ {\n             }\n \n             cat_copied_upvar(CopiedUpvar {onceness: ast::Many, _}) |\n-            cat_static_item(*) |\n-            cat_implicit_self(*) => {\n+            cat_static_item(*) => {\n                 Some(AliasableOther)\n             }\n \n@@ -1206,7 +1194,6 @@ impl Repr for categorization {\n     fn repr(&self, tcx: ty::ctxt) -> ~str {\n         match *self {\n             cat_static_item |\n-            cat_implicit_self |\n             cat_rvalue(*) |\n             cat_copied_upvar(*) |\n             cat_local(*) |"}, {"sha": "ebd9b2b2223442cbfbadd2bb4c7a49ddeb7f476f", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -218,7 +218,7 @@ pub fn moved_variable_node_id_from_def(def: def) -> Option<NodeId> {\n       def_binding(nid, _) |\n       def_arg(nid, _) |\n       def_local(nid, _) |\n-      def_self(nid, _) => Some(nid),\n+      def_self(nid) => Some(nid),\n \n       _ => None\n     }"}, {"sha": "351f4f8277a02eb4f628c981e096da78ca159e1f", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -125,7 +125,7 @@ pub enum Mutability {\n \n pub enum SelfBinding {\n     NoSelfBinding,\n-    HasSelfBinding(NodeId, bool /* is implicit */)\n+    HasSelfBinding(NodeId)\n }\n \n struct ResolveVisitor {\n@@ -3769,9 +3769,8 @@ impl Resolver {\n                 NoSelfBinding => {\n                     // Nothing to do.\n                 }\n-                HasSelfBinding(self_node_id, is_implicit) => {\n-                    let def_like = dl_def(def_self(self_node_id,\n-                                                   is_implicit));\n+                HasSelfBinding(self_node_id) => {\n+                    let def_like = dl_def(def_self(self_node_id));\n                     *function_value_rib.self_binding = Some(def_like);\n                 }\n             }\n@@ -3915,7 +3914,7 @@ impl Resolver {\n         // we only have self ty if it is a non static method\n         let self_binding = match method.explicit_self.node {\n           sty_static => { NoSelfBinding }\n-          _ => { HasSelfBinding(method.self_id, false) }\n+          _ => { HasSelfBinding(method.self_id) }\n         };\n \n         self.resolve_function(rib_kind,"}, {"sha": "4b31b9123532ce95f91006019185410f610eb364", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -1088,7 +1088,7 @@ pub fn trans_local_var(bcx: @mut Block, def: ast::def) -> Datum {\n         ast::def_local(nid, _) | ast::def_binding(nid, _) => {\n             take_local(bcx, bcx.fcx.lllocals, nid)\n         }\n-        ast::def_self(nid, _) => {\n+        ast::def_self(nid) => {\n             let self_info: ValSelfData = match bcx.fcx.llself {\n                 Some(ref self_info) => *self_info,\n                 None => {"}, {"sha": "8f7d8ac186ee60c1f4d495e3ae2b75f6d952f313", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -3094,7 +3094,7 @@ pub fn ty_param_bounds_and_ty_for_def(fcx: @mut FnCtxt,\n                                    -> ty_param_bounds_and_ty {\n \n     match defn {\n-      ast::def_arg(nid, _) | ast::def_local(nid, _) | ast::def_self(nid, _) |\n+      ast::def_arg(nid, _) | ast::def_local(nid, _) | ast::def_self(nid) |\n       ast::def_binding(nid, _) => {\n           let typ = fcx.local_ty(sp, nid);\n           return no_params(typ);"}, {"sha": "b25d81056b0c06ffd7412ff8b8f85ec45909b707", "filename": "src/librustc/middle/typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fregionck.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -58,7 +58,7 @@ fn encl_region_of_def(fcx: @mut FnCtxt, def: ast::def) -> ty::Region {\n     let tcx = fcx.tcx();\n     match def {\n         def_local(node_id, _) | def_arg(node_id, _) |\n-        def_self(node_id, _) | def_binding(node_id, _) => {\n+        def_self(node_id) | def_binding(node_id, _) => {\n             tcx.region_maps.encl_region(node_id)\n         }\n         def_upvar(_, subdef, closure_id, body_id) => {"}, {"sha": "f09c7427ecc7f1c1241f955842a220ab71bbce87", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -171,7 +171,7 @@ pub enum def {\n     def_static_method(/* method */ def_id,\n                       /* trait */  Option<def_id>,\n                       purity),\n-    def_self(NodeId, bool /* is_implicit */),\n+    def_self(NodeId),\n     def_self_ty(/* trait id */ NodeId),\n     def_mod(def_id),\n     def_foreign_mod(def_id),"}, {"sha": "a39da4301ba332a873a48edf2d58ef45eda3916c", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c09865b66f5e2865037e6ce1396ba0a653136e0/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=8c09865b66f5e2865037e6ce1396ba0a653136e0", "patch": "@@ -64,7 +64,7 @@ pub fn def_id_of_def(d: def) -> def_id {\n       def_use(id) | def_struct(id) | def_trait(id) | def_method(id, _) => {\n         id\n       }\n-      def_arg(id, _) | def_local(id, _) | def_self(id, _) | def_self_ty(id)\n+      def_arg(id, _) | def_local(id, _) | def_self(id) | def_self_ty(id)\n       | def_upvar(id, _, _, _) | def_binding(id, _) | def_region(id)\n       | def_typaram_binder(id) | def_label(id) => {\n         local_def(id)"}]}