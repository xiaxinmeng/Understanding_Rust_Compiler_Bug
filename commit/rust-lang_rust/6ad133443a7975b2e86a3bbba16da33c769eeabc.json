{"sha": "6ad133443a7975b2e86a3bbba16da33c769eeabc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZDEzMzQ0M2E3OTc1YjJlODZhM2JiYmExNmRhMzNjNzY5ZWVhYmM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-01-25T19:08:46Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:28Z"}, "message": "add benchmark to cover in-place extend", "tree": {"sha": "1050dba10459da9d491496f57cc16e1d5f32a2d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1050dba10459da9d491496f57cc16e1d5f32a2d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad133443a7975b2e86a3bbba16da33c769eeabc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad133443a7975b2e86a3bbba16da33c769eeabc", "html_url": "https://github.com/rust-lang/rust/commit/6ad133443a7975b2e86a3bbba16da33c769eeabc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad133443a7975b2e86a3bbba16da33c769eeabc/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7a8b52e918500a36b48f0b123b20fd53a159403", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7a8b52e918500a36b48f0b123b20fd53a159403", "html_url": "https://github.com/rust-lang/rust/commit/a7a8b52e918500a36b48f0b123b20fd53a159403"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "1019503a8417aabc9bb3a685c89d7d1d5623fd77", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6ad133443a7975b2e86a3bbba16da33c769eeabc/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad133443a7975b2e86a3bbba16da33c769eeabc/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=6ad133443a7975b2e86a3bbba16da33c769eeabc", "patch": "@@ -236,6 +236,20 @@ fn do_bench_extend_from_slice(b: &mut Bencher, dst_len: usize, src_len: usize) {\n     });\n }\n \n+#[bench]\n+fn bench_extend_recycle(b: &mut Bencher) {\n+    let mut data = vec![0; 1000];\n+\n+    b.iter(|| {\n+        let tmp = std::mem::replace(&mut data, Vec::new());\n+        let mut to_extend = black_box(Vec::new());\n+        to_extend.extend(tmp.into_iter());\n+        std::mem::replace(&mut data, black_box(to_extend));\n+    });\n+\n+    black_box(data);\n+}\n+\n #[bench]\n fn bench_extend_from_slice_0000_0000(b: &mut Bencher) {\n     do_bench_extend_from_slice(b, 0, 0)"}]}