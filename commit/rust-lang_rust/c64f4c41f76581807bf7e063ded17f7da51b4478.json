{"sha": "c64f4c41f76581807bf7e063ded17f7da51b4478", "node_id": "C_kwDOAAsO6NoAKGM2NGY0YzQxZjc2NTgxODA3YmY3ZTA2M2RlZDE3ZjdkYTUxYjQ0Nzg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-01-27T15:23:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-27T15:23:16Z"}, "message": "Rollup merge of #107357 - GuillaumeGomez:fix-infinite-loop-in-rustdoc-get_all_import_attributes, r=notriddle\n\nFix infinite loop in rustdoc get_all_import_attributes function\n\nFixes https://github.com/rust-lang/rust/issues/107350.\n\nWe'll also need to backport this fix to beta.\n\nr? `@notriddle`", "tree": {"sha": "f43de35b2376ccebaa6bcfa5863a555104b9d360", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f43de35b2376ccebaa6bcfa5863a555104b9d360"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c64f4c41f76581807bf7e063ded17f7da51b4478", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0+xkCRBK7hj4Ov3rIwAAvxYIAGQ8/ypfzVkvZbBy4Tx/pZQ7\n5c207GqFIUXa/1ICYvO7RwVCBPGrvNyOY9FoIRXKADHwbttUT9DREAmP8yW5NczE\npohZGYFepvBdREQrtdxnJDdFQBbSQIulgEGzHHI75izuDmrm6ZwGlCejtKvmXx+T\nJ1kx0BTezafEylNqELOpNB/tJmRD6n2HnIfqU4LSmbPkSGu95Skrb6ySjw9fZlsv\nGhKFYu9zNewnt22jb56YATxbbOfgp6688owgBnMDbBUPuEuhLqF16Sfydqy/O31I\n3h/FkCcaHabH37yinfa/ZR2J9gUZMETn6AcsCHDdohuswAGVSzd0CRmXuCTsMvs=\n=YcZC\n-----END PGP SIGNATURE-----\n", "payload": "tree f43de35b2376ccebaa6bcfa5863a555104b9d360\nparent 85dc93b4d346a8138f343c6d9b0b803b4b55a8a6\nparent 1b64e16643eb3322b61f916c8cfec436e30e7bf3\nauthor Yuki Okushi <jtitor@2k36.org> 1674832996 +0900\ncommitter GitHub <noreply@github.com> 1674832996 +0900\n\nRollup merge of #107357 - GuillaumeGomez:fix-infinite-loop-in-rustdoc-get_all_import_attributes, r=notriddle\n\nFix infinite loop in rustdoc get_all_import_attributes function\n\nFixes https://github.com/rust-lang/rust/issues/107350.\n\nWe'll also need to backport this fix to beta.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c64f4c41f76581807bf7e063ded17f7da51b4478", "html_url": "https://github.com/rust-lang/rust/commit/c64f4c41f76581807bf7e063ded17f7da51b4478", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c64f4c41f76581807bf7e063ded17f7da51b4478/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85dc93b4d346a8138f343c6d9b0b803b4b55a8a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/85dc93b4d346a8138f343c6d9b0b803b4b55a8a6", "html_url": "https://github.com/rust-lang/rust/commit/85dc93b4d346a8138f343c6d9b0b803b4b55a8a6"}, {"sha": "1b64e16643eb3322b61f916c8cfec436e30e7bf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b64e16643eb3322b61f916c8cfec436e30e7bf3", "html_url": "https://github.com/rust-lang/rust/commit/1b64e16643eb3322b61f916c8cfec436e30e7bf3"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "4b1cd78c4adf9cc424f114bef74b8030b81a1d95", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c64f4c41f76581807bf7e063ded17f7da51b4478/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c64f4c41f76581807bf7e063ded17f7da51b4478/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=c64f4c41f76581807bf7e063ded17f7da51b4478", "patch": "@@ -2112,10 +2112,12 @@ fn get_all_import_attributes<'hir>(\n ) {\n     let hir_map = tcx.hir();\n     let mut visitor = OneLevelVisitor::new(hir_map, target_def_id);\n+    let mut visited = FxHashSet::default();\n     // If the item is an import and has at least a path with two parts, we go into it.\n     while let hir::ItemKind::Use(path, _) = item.kind &&\n         path.segments.len() > 1 &&\n-        let hir::def::Res::Def(_, def_id) = path.segments[path.segments.len() - 2].res\n+        let hir::def::Res::Def(_, def_id) = path.segments[path.segments.len() - 2].res &&\n+        visited.insert(def_id)\n     {\n         if let Some(hir::Node::Item(parent_item)) = hir_map.get_if_local(def_id) {\n             // We add the attributes from this import into the list."}, {"sha": "75f378ed2498022ec86af45af51007e73adf675c", "filename": "tests/rustdoc/issue-107350.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c64f4c41f76581807bf7e063ded17f7da51b4478/tests%2Frustdoc%2Fissue-107350.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c64f4c41f76581807bf7e063ded17f7da51b4478/tests%2Frustdoc%2Fissue-107350.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-107350.rs?ref=c64f4c41f76581807bf7e063ded17f7da51b4478", "patch": "@@ -0,0 +1,18 @@\n+// This is a regression test for <https://github.com/rust-lang/rust/issues/107350>.\n+// It shouldn't loop indefinitely.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/oops/enum.OhNo.html'\n+\n+pub mod oops {\n+    pub use crate::oops::OhNo;\n+\n+    mod inner {\n+        pub enum OhNo {\n+            Item = 1,\n+        }\n+    }\n+\n+    pub use self::inner::*;\n+}"}]}