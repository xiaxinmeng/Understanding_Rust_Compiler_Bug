{"sha": "a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YmVhYTNiM2MwZjUzMDcxOTdiM2Q4ZDQyMWQwYWMwNWMwZDdhNmU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-11-09T00:13:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-09T00:13:48Z"}, "message": "Rollup merge of #78878 - shepmaster:intersecting-ignores, r=Mark-Simulacrum\n\nAvoid overlapping cfg attributes when both macOS and aarch64\n\nr? ``@Mark-Simulacrum``", "tree": {"sha": "8eddc7cb235e1b80463f9bf68d4b51838bee9458", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8eddc7cb235e1b80463f9bf68d4b51838bee9458"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfqIm9CRBK7hj4Ov3rIwAAdHIIAJ7KzOJjkZrs/b9kPHUiX6pf\ntQQHZy1XVEUJ/YbAJH7V2sa7elDPEuLvkznUbWooz6PMkVuT6XDfJ/AUyD2T3Kky\n7LsLYbJxYy6q5HrASZ9J1Xq/+9sgfJtnAMk3D2iJBmSYrrKmbb+J/so0coEWXJJp\nIi1riQh0fqKI25bLCDiqiffmGkIEnguWC9JKqif9bcLCctB5yur+2baQLorwG096\nh7dmp9DdcDJkbe7qOwdScJ47VAxvj/RBKcQk6ohAwRu0bOdEfdg9aAJVD9eDCs0h\ntXyybZX/oa8HSc5XgfOuWYRclo6hBQfEYxsP7vPdMPVc/f6AdIQ70DjaKRzmXqw=\n=uR1j\n-----END PGP SIGNATURE-----\n", "payload": "tree 8eddc7cb235e1b80463f9bf68d4b51838bee9458\nparent 479817acb0a9bbd88b9cb8da9b1fad530fae410a\nparent b13817a79566cf313b4bebed3a5caf5ea8879f4e\nauthor Dylan DPC <dylan.dpc@gmail.com> 1604880828 +0100\ncommitter GitHub <noreply@github.com> 1604880828 +0100\n\nRollup merge of #78878 - shepmaster:intersecting-ignores, r=Mark-Simulacrum\n\nAvoid overlapping cfg attributes when both macOS and aarch64\n\nr? ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "html_url": "https://github.com/rust-lang/rust/commit/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "479817acb0a9bbd88b9cb8da9b1fad530fae410a", "url": "https://api.github.com/repos/rust-lang/rust/commits/479817acb0a9bbd88b9cb8da9b1fad530fae410a", "html_url": "https://github.com/rust-lang/rust/commit/479817acb0a9bbd88b9cb8da9b1fad530fae410a"}, {"sha": "b13817a79566cf313b4bebed3a5caf5ea8879f4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b13817a79566cf313b4bebed3a5caf5ea8879f4e", "html_url": "https://github.com/rust-lang/rust/commit/b13817a79566cf313b4bebed3a5caf5ea8879f4e"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "10aa34e9443b70c4dbb866289ceedca846f0282f", "filename": "library/std/src/sys/unix/process/process_common/tests.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common%2Ftests.rs?ref=a8beaa3b3c0f5307197b3d8d421d0ac05c0d7a6e", "patch": "@@ -14,17 +14,22 @@ macro_rules! t {\n     };\n }\n \n-// See #14232 for more information, but it appears that signal delivery to a\n-// newly spawned process may just be raced in the macOS, so to prevent this\n-// test from being flaky we ignore it on macOS.\n #[test]\n-#[cfg_attr(target_os = \"macos\", ignore)]\n-// When run under our current QEMU emulation test suite this test fails,\n-// although the reason isn't very clear as to why. For now this test is\n-// ignored there.\n-#[cfg_attr(target_arch = \"arm\", ignore)]\n-#[cfg_attr(target_arch = \"aarch64\", ignore)]\n-#[cfg_attr(target_arch = \"riscv64\", ignore)]\n+#[cfg_attr(\n+    any(\n+        // See #14232 for more information, but it appears that signal delivery to a\n+        // newly spawned process may just be raced in the macOS, so to prevent this\n+        // test from being flaky we ignore it on macOS.\n+        target_os = \"macos\",\n+        // When run under our current QEMU emulation test suite this test fails,\n+        // although the reason isn't very clear as to why. For now this test is\n+        // ignored there.\n+        target_arch = \"arm\",\n+        target_arch = \"aarch64\",\n+        target_arch = \"riscv64\",\n+    ),\n+    ignore\n+)]\n fn test_process_mask() {\n     unsafe {\n         // Test to make sure that a signal mask does not get inherited."}]}