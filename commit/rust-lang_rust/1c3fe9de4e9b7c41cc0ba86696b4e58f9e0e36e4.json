{"sha": "1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjM2ZlOWRlNGU5YjdjNDFjYzBiYTg2Njk2YjRlNThmOWUwZTM2ZTQ=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-02T23:49:45Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-01-10T00:46:14Z"}, "message": "Parse `impl const Trait for Ty` syntax", "tree": {"sha": "146fc88b39bc95299db9146be5409b9d3a1ad8f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/146fc88b39bc95299db9146be5409b9d3a1ad8f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4", "html_url": "https://github.com/rust-lang/rust/commit/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd4a6a12136c5b5d6bce4081e95890df1fd1febd", "html_url": "https://github.com/rust-lang/rust/commit/fd4a6a12136c5b5d6bce4081e95890df1fd1febd"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "86ab8bf57a3e3ec3e62ea35258d5b900d932fb4b", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=1c3fe9de4e9b7c41cc0ba86696b4e58f9e0e36e4", "patch": "@@ -542,10 +542,11 @@ impl<'a> Parser<'a> {\n     ///    impl<'a, T> TYPE { /* impl items */ }\n     ///    impl<'a, T> TRAIT for TYPE { /* impl items */ }\n     ///    impl<'a, T> !TRAIT for TYPE { /* impl items */ }\n+    ///    impl<'a, T> const TRAIT for TYPE { /* impl items */ }\n     ///\n     /// We actually parse slightly more relaxed grammar for better error reporting and recovery.\n-    ///     `impl` GENERICS `!`? TYPE `for`? (TYPE | `..`) (`where` PREDICATES)? `{` BODY `}`\n-    ///     `impl` GENERICS `!`? TYPE (`where` PREDICATES)? `{` BODY `}`\n+    ///   `impl` GENERICS `const`? `!`? TYPE `for`? (TYPE | `..`) (`where` PREDICATES)? `{` BODY `}`\n+    ///   `impl` GENERICS `const`? `!`? TYPE (`where` PREDICATES)? `{` BODY `}`\n     fn parse_item_impl(\n         &mut self,\n         unsafety: Unsafety,\n@@ -558,6 +559,13 @@ impl<'a> Parser<'a> {\n             Generics::default()\n         };\n \n+        let constness = if self.eat_keyword(kw::Const) {\n+            self.sess.gated_spans.gate(sym::const_trait_impl, self.prev_span);\n+            Some(Constness::Const)\n+        } else {\n+            None\n+        };\n+\n         // Disambiguate `impl !Trait for Type { ... }` and `impl ! { ... }` for the never type.\n         let polarity = if self.check(&token::Not) && self.look_ahead(1, |t| t.can_begin_type()) {\n             self.bump(); // `!`\n@@ -618,7 +626,7 @@ impl<'a> Parser<'a> {\n                         err_path(ty_first.span)\n                     }\n                 };\n-                let trait_ref = TraitRef { path, ref_id: ty_first.id };\n+                let trait_ref = TraitRef { path, constness, ref_id: ty_first.id };\n \n                 ItemKind::Impl(\n                     unsafety,"}]}