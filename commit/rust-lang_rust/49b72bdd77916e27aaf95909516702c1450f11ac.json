{"sha": "49b72bdd77916e27aaf95909516702c1450f11ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YjcyYmRkNzc5MTZlMjdhYWY5NTkwOTUxNjcwMmMxNDUwZjExYWM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-17T17:51:54Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-19T21:18:50Z"}, "message": "std::rt: Use a constant 4 threads for multithreaded sched tests. #7772\n\nToo much overcommit here exhausts the low fd limit on OS X.", "tree": {"sha": "ad655b89d4c4978b852eeb28f263e11c630f3bd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad655b89d4c4978b852eeb28f263e11c630f3bd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49b72bdd77916e27aaf95909516702c1450f11ac", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49b72bdd77916e27aaf95909516702c1450f11ac", "html_url": "https://github.com/rust-lang/rust/commit/49b72bdd77916e27aaf95909516702c1450f11ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49b72bdd77916e27aaf95909516702c1450f11ac/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c270c63d158805a068b8e7ced660df1051c3ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c270c63d158805a068b8e7ced660df1051c3ca", "html_url": "https://github.com/rust-lang/rust/commit/93c270c63d158805a068b8e7ced660df1051c3ca"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "70620cf59da24c67d9f2f9dcf8e42af7cebd6acf", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/49b72bdd77916e27aaf95909516702c1450f11ac/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49b72bdd77916e27aaf95909516702c1450f11ac/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=49b72bdd77916e27aaf95909516702c1450f11ac", "patch": "@@ -64,18 +64,17 @@ pub fn run_in_mt_newsched_task(f: ~fn()) {\n     use os;\n     use from_str::FromStr;\n     use rt::sched::Shutdown;\n-    use rt::util;\n \n     let f_cell = Cell::new(f);\n \n     do run_in_bare_thread {\n         let nthreads = match os::getenv(\"RUST_TEST_THREADS\") {\n             Some(nstr) => FromStr::from_str(nstr).get(),\n             None => {\n-                // Using more threads than cores in test code\n-                // to force the OS to preempt them frequently.\n-                // Assuming that this help stress test concurrent types.\n-                util::num_cpus() * 2\n+                // A reasonable number of threads for testing\n+                // multithreading. NB: It's easy to exhaust OS X's\n+                // low maximum fd limit by setting this too high (#7772)\n+                4\n             }\n         };\n "}]}