{"sha": "902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "node_id": "C_kwDOAAsO6NoAKDkwMmZkNmRkY2RkNGUzYWQwM2M3YTkwOTlmMGIzYjFkN2U2YTk1ZTg", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2022-07-29T00:27:16Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2022-07-29T15:24:05Z"}, "message": "fix: complete path of existing record expr", "tree": {"sha": "cf73e16c9cbc0df2bf5e7b24bddb9d6ad983dacf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf73e16c9cbc0df2bf5e7b24bddb9d6ad983dacf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "html_url": "https://github.com/rust-lang/rust/commit/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec3586eab943d7c6c83d211f629a691fc8c14603", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3586eab943d7c6c83d211f629a691fc8c14603", "html_url": "https://github.com/rust-lang/rust/commit/ec3586eab943d7c6c83d211f629a691fc8c14603"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "22ec7cead4988cc54d33b9f8c49e6c4b34cd1d88", "filename": "crates/ide-completion/src/context/analysis.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext%2Fanalysis.rs?ref=902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "patch": "@@ -939,10 +939,12 @@ impl<'a> CompletionContext<'a> {\n                             ast::Meta(meta) => make_path_kind_attr(meta)?,\n                             ast::Visibility(it) => PathKind::Vis { has_in_token: it.in_token().is_some() },\n                             ast::UseTree(_) => PathKind::Use,\n+                            ast::RecordExpr(it) => make_path_kind_expr(it.into()),\n                             _ => return None,\n                         }\n                     }\n                 },\n+                ast::RecordExpr(it) => make_path_kind_expr(it.into()),\n                 _ => return None,\n             }\n         };"}, {"sha": "925081ebf66025552c5a5a1e03bbbf0c2e058176", "filename": "crates/ide-completion/src/tests/expression.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs?ref=902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "patch": "@@ -651,3 +651,22 @@ fn main() {\n         \"]],\n     );\n }\n+\n+#[test]\n+fn complete_record_expr_path() {\n+    check(\n+        r#\"\n+struct Zulu;\n+impl Zulu {\n+    fn test() -> Self { }\n+}\n+fn boi(val: Zulu) { }\n+fn main() {\n+    boi(Zulu:: $0 {});\n+}\n+\"#,\n+        expect![[r#\"\n+            fn test() fn() -> Zulu\n+        \"#]],\n+    );\n+}"}, {"sha": "8de5d33a1936d42479470854e39bee711f1916a2", "filename": "crates/parser/src/grammar/paths.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fpaths.rs?ref=902fd6ddcdd4e3ad03c7a9099f0b3b1d7e6a95e8", "patch": "@@ -54,7 +54,7 @@ fn path_for_qualifier(\n     mut qual: CompletedMarker,\n ) -> CompletedMarker {\n     loop {\n-        let use_tree = matches!(p.nth(2), T![*] | T!['{']);\n+        let use_tree = mode == Mode::Use && matches!(p.nth(2), T![*] | T!['{']);\n         if p.at(T![::]) && !use_tree {\n             let path = qual.precede(p);\n             p.bump(T![::]);"}]}