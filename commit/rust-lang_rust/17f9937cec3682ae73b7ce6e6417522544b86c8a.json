{"sha": "17f9937cec3682ae73b7ce6e6417522544b86c8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3Zjk5MzdjZWMzNjgyYWU3M2I3Y2U2ZTY0MTc1MjI1NDRiODZjOGE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-08-21T21:21:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-21T21:21:13Z"}, "message": "rustc: Fix outdated comment", "tree": {"sha": "b1a9ebfc49eab968e72eb94bc503f5a98ffed50f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1a9ebfc49eab968e72eb94bc503f5a98ffed50f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17f9937cec3682ae73b7ce6e6417522544b86c8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17f9937cec3682ae73b7ce6e6417522544b86c8a", "html_url": "https://github.com/rust-lang/rust/commit/17f9937cec3682ae73b7ce6e6417522544b86c8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17f9937cec3682ae73b7ce6e6417522544b86c8a/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "490189634b656dcca9e41e6b52093569c03bd4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/490189634b656dcca9e41e6b52093569c03bd4df", "html_url": "https://github.com/rust-lang/rust/commit/490189634b656dcca9e41e6b52093569c03bd4df"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "189150d426463f4835af37c86cde53e43245dfbf", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/17f9937cec3682ae73b7ce6e6417522544b86c8a/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17f9937cec3682ae73b7ce6e6417522544b86c8a/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=17f9937cec3682ae73b7ce6e6417522544b86c8a", "patch": "@@ -23,9 +23,8 @@ use syntax::ast::NodeId;\n pub enum AccessLevel {\n     // Exported items + items participating in various kinds of public interfaces,\n     // but not directly nameable. For example, if function `fn f() -> T {...}` is\n-    // public, then type `T` is exported. Its values can be obtained by other crates\n-    // even if the type itseld is not nameable.\n-    // FIXME: Mostly unimplemented. Only `type` aliases export items currently.\n+    // public, then type `T` is reachable. Its values can be obtained by other crates\n+    // even if the type itself is not nameable.\n     Reachable,\n     // Public items + items accessible to other crates with help of `pub use` reexports\n     Exported,"}]}