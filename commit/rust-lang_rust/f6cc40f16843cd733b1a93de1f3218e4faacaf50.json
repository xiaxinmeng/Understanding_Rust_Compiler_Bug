{"sha": "f6cc40f16843cd733b1a93de1f3218e4faacaf50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2Y2M0MGYxNjg0M2NkNzMzYjFhOTNkZTFmMzIxOGU0ZmFhY2FmNTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-21T22:06:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-21T22:06:08Z"}, "message": "Auto merge of #41904 - sfackler:1.18-stabilization, r=alexcrichton\n\nStabilize library features for 1.18.0\n\nCloses #38863\nCloses #38980\nCloses #38903\nCloses #36648\n\nr? @alexcrichton\n\n@rust-lang/libs", "tree": {"sha": "ea810c7409fcfc928596eaef1925a988f451ae93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea810c7409fcfc928596eaef1925a988f451ae93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6cc40f16843cd733b1a93de1f3218e4faacaf50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6cc40f16843cd733b1a93de1f3218e4faacaf50", "html_url": "https://github.com/rust-lang/rust/commit/f6cc40f16843cd733b1a93de1f3218e4faacaf50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6cc40f16843cd733b1a93de1f3218e4faacaf50/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f30da6132c25543da1f06c32a8c5699d3e5747", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f30da6132c25543da1f06c32a8c5699d3e5747", "html_url": "https://github.com/rust-lang/rust/commit/14f30da6132c25543da1f06c32a8c5699d3e5747"}, {"sha": "7c2cd93b2bf3c84b97ea798617105a6f85529d23", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2cd93b2bf3c84b97ea798617105a6f85529d23", "html_url": "https://github.com/rust-lang/rust/commit/7c2cd93b2bf3c84b97ea798617105a6f85529d23"}], "stats": {"total": 104, "additions": 27, "deletions": 77}, "files": [{"sha": "f3fa49f4ef9d67603dd1fdb6b04d31a1b77be7a6", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -104,7 +104,6 @@\n     - [alloc](library-features/alloc.md)\n     - [as_c_str](library-features/as-c-str.md)\n     - [ascii_ctype](library-features/ascii-ctype.md)\n-    - [binary_heap_peek_mut_pop](library-features/binary-heap-peek-mut-pop.md)\n     - [box_heap](library-features/box-heap.md)\n     - [c_void_variant](library-features/c-void-variant.md)\n     - [char_escape_debug](library-features/char-escape-debug.md)\n@@ -175,17 +174,14 @@\n     - [panic_abort](library-features/panic-abort.md)\n     - [panic_unwind](library-features/panic-unwind.md)\n     - [pattern](library-features/pattern.md)\n-    - [peek](library-features/peek.md)\n     - [placement_in](library-features/placement-in.md)\n     - [placement_new_protocol](library-features/placement-new-protocol.md)\n     - [print_internals](library-features/print-internals.md)\n     - [proc_macro_internals](library-features/proc-macro-internals.md)\n-    - [process_try_wait](library-features/process-try-wait.md)\n     - [question_mark_carrier](library-features/question-mark-carrier.md)\n     - [rand](library-features/rand.md)\n     - [range_contains](library-features/range-contains.md)\n     - [raw](library-features/raw.md)\n-    - [retain_hash_collection](library-features/retain-hash-collection.md)\n     - [reverse_cmp_key](library-features/reverse-cmp-key.md)\n     - [rt](library-features/rt.md)\n     - [rustc_private](library-features/rustc-private.md)"}, {"sha": "f3863ab2a2abb4f98d65648b503c8ac32f09d3bb", "filename": "src/doc/unstable-book/src/library-features/binary-heap-peek-mut-pop.md", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fbinary-heap-peek-mut-pop.md", "raw_url": "https://github.com/rust-lang/rust/raw/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fbinary-heap-peek-mut-pop.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fbinary-heap-peek-mut-pop.md?ref=14f30da6132c25543da1f06c32a8c5699d3e5747", "patch": "@@ -1,7 +0,0 @@\n-# `binary_heap_peek_mut_pop`\n-\n-The tracking issue for this feature is: [#38863]\n-\n-[#38863]: https://github.com/rust-lang/rust/issues/38863\n-\n-------------------------"}, {"sha": "c42b4e995ec58179ca5b25e7efeb9258acf24a13", "filename": "src/doc/unstable-book/src/library-features/peek.md", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fpeek.md", "raw_url": "https://github.com/rust-lang/rust/raw/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fpeek.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fpeek.md?ref=14f30da6132c25543da1f06c32a8c5699d3e5747", "patch": "@@ -1,7 +0,0 @@\n-# `peek`\n-\n-The tracking issue for this feature is: [#38980]\n-\n-[#38980]: https://github.com/rust-lang/rust/issues/38980\n-\n-------------------------"}, {"sha": "3593b6423495aa9fb5ee7c459bf72f20e5c2c5d6", "filename": "src/doc/unstable-book/src/library-features/process-try-wait.md", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fprocess-try-wait.md", "raw_url": "https://github.com/rust-lang/rust/raw/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fprocess-try-wait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fprocess-try-wait.md?ref=14f30da6132c25543da1f06c32a8c5699d3e5747", "patch": "@@ -1,7 +0,0 @@\n-# `process_try_wait`\n-\n-The tracking issue for this feature is: [#38903]\n-\n-[#38903]: https://github.com/rust-lang/rust/issues/38903\n-\n-------------------------"}, {"sha": "c9ba5acf02003a92ea3ebd017f3c35d0c521a329", "filename": "src/doc/unstable-book/src/library-features/retain-hash-collection.md", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fretain-hash-collection.md", "raw_url": "https://github.com/rust-lang/rust/raw/14f30da6132c25543da1f06c32a8c5699d3e5747/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fretain-hash-collection.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fretain-hash-collection.md?ref=14f30da6132c25543da1f06c32a8c5699d3e5747", "patch": "@@ -1,7 +0,0 @@\n-# `retain_hash_collection`\n-\n-The tracking issue for this feature is: [#36648]\n-\n-[#36648]: https://github.com/rust-lang/rust/issues/36648\n-\n-------------------------"}, {"sha": "4e9dea09f79a0d0a654e882a9699dc12f27b9ce7", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -268,7 +268,7 @@ impl<'a, T: Ord> DerefMut for PeekMut<'a, T> {\n \n impl<'a, T: Ord> PeekMut<'a, T> {\n     /// Removes the peeked value from the heap and returns it.\n-    #[unstable(feature = \"binary_heap_peek_mut_pop\", issue = \"38863\")]\n+    #[stable(feature = \"binary_heap_peek_mut_pop\", since = \"1.18.0\")]\n     pub fn pop(mut this: PeekMut<'a, T>) -> T {\n         let value = this.heap.pop().unwrap();\n         this.sift = false;"}, {"sha": "cda8c6d59987efc42e652802aaa7f82e1f9ceee7", "filename": "src/libcollections/tests/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibcollections%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibcollections%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftests%2Flib.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -10,7 +10,6 @@\n \n #![deny(warnings)]\n \n-#![feature(binary_heap_peek_mut_pop)]\n #![feature(box_syntax)]\n #![feature(inclusive_range_syntax)]\n #![feature(collection_placement)]"}, {"sha": "8c4cbb66b454d2e52a5d1989efc745998d5b6593", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -1231,14 +1231,13 @@ impl<K, V, S> HashMap<K, V, S>\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(retain_hash_collection)]\n     /// use std::collections::HashMap;\n     ///\n     /// let mut map: HashMap<isize, isize> = (0..8).map(|x|(x, x*10)).collect();\n     /// map.retain(|&k, _| k % 2 == 0);\n     /// assert_eq!(map.len(), 4);\n     /// ```\n-    #[unstable(feature = \"retain_hash_collection\", issue = \"36648\")]\n+    #[stable(feature = \"retain_hash_collection\", since = \"1.18.0\")]\n     pub fn retain<F>(&mut self, mut f: F)\n         where F: FnMut(&K, &mut V) -> bool\n     {"}, {"sha": "d80df5f18b610ba3f6df437aba1ac522371aa7f1", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 21, "deletions": 32, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -116,8 +116,6 @@ use super::map::{self, HashMap, Keys, RandomState};\n /// [`HashMap`]: struct.HashMap.html\n /// [`PartialEq`]: ../../std/cmp/trait.PartialEq.html\n /// [`RefCell`]: ../../std/cell/struct.RefCell.html\n-\n-\n #[derive(Clone)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct HashSet<T, S = RandomState> {\n@@ -658,15 +656,14 @@ impl<T, S> HashSet<T, S>\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(retain_hash_collection)]\n     /// use std::collections::HashSet;\n     ///\n     /// let xs = [1,2,3,4,5,6];\n     /// let mut set: HashSet<isize> = xs.iter().cloned().collect();\n     /// set.retain(|&k| k % 2 == 0);\n     /// assert_eq!(set.len(), 3);\n     /// ```\n-    #[unstable(feature = \"retain_hash_collection\", issue = \"36648\")]\n+    #[stable(feature = \"retain_hash_collection\", since = \"1.18.0\")]\n     pub fn retain<F>(&mut self, mut f: F)\n         where F: FnMut(&T) -> bool\n     {\n@@ -1041,9 +1038,7 @@ impl<'a, K> FusedIterator for Iter<'a, K> {}\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: fmt::Debug> fmt::Debug for Iter<'a, K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list()\n-            .entries(self.clone())\n-            .finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -1070,10 +1065,11 @@ impl<K> FusedIterator for IntoIter<K> {}\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<K: fmt::Debug> fmt::Debug for IntoIter<K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        let entries_iter = self.iter.inner.iter().map(|(k, _)| k);\n-        f.debug_list()\n-            .entries(entries_iter)\n-            .finish()\n+        let entries_iter = self.iter\n+            .inner\n+            .iter()\n+            .map(|(k, _)| k);\n+        f.debug_list().entries(entries_iter).finish()\n     }\n }\n \n@@ -1100,10 +1096,11 @@ impl<'a, K> FusedIterator for Drain<'a, K> {}\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, K: fmt::Debug> fmt::Debug for Drain<'a, K> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        let entries_iter = self.iter.inner.iter().map(|(k, _)| k);\n-        f.debug_list()\n-            .entries(entries_iter)\n-            .finish()\n+        let entries_iter = self.iter\n+            .inner\n+            .iter()\n+            .map(|(k, _)| k);\n+        f.debug_list().entries(entries_iter).finish()\n     }\n }\n \n@@ -1143,12 +1140,10 @@ impl<'a, T, S> Iterator for Intersection<'a, T, S>\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Intersection<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n-          S: BuildHasher,\n+          S: BuildHasher\n {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list()\n-            .entries(self.clone())\n-            .finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -1202,12 +1197,10 @@ impl<'a, T, S> FusedIterator for Difference<'a, T, S>\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Difference<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n-          S: BuildHasher,\n+          S: BuildHasher\n {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list()\n-            .entries(self.clone())\n-            .finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -1243,12 +1236,10 @@ impl<'a, T, S> FusedIterator for SymmetricDifference<'a, T, S>\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for SymmetricDifference<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n-          S: BuildHasher,\n+          S: BuildHasher\n {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list()\n-            .entries(self.clone())\n-            .finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -1269,12 +1260,10 @@ impl<'a, T, S> FusedIterator for Union<'a, T, S>\n #[stable(feature = \"std_debug\", since = \"1.16.0\")]\n impl<'a, T, S> fmt::Debug for Union<'a, T, S>\n     where T: fmt::Debug + Eq + Hash,\n-          S: BuildHasher,\n+          S: BuildHasher\n {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_list()\n-            .entries(self.clone())\n-            .finish()\n+        f.debug_list().entries(self.clone()).finish()\n     }\n }\n \n@@ -1698,7 +1687,7 @@ mod test_set {\n \n     #[test]\n     fn test_retain() {\n-        let xs = [1,2,3,4,5,6];\n+        let xs = [1, 2, 3, 4, 5, 6];\n         let mut set: HashSet<isize> = xs.iter().cloned().collect();\n         set.retain(|&k| k % 2 == 0);\n         assert_eq!(set.len(), 3);"}, {"sha": "c1493c9c6f4ff43a56b37baebe91f8e6a367a5c6", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -343,15 +343,14 @@ impl TcpStream {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(peek)]\n     /// use std::net::TcpStream;\n     ///\n     /// let stream = TcpStream::connect(\"127.0.0.1:8000\")\n     ///                        .expect(\"couldn't bind to address\");\n     /// let mut buf = [0; 10];\n     /// let len = stream.peek(&mut buf).expect(\"peek failed\");\n     /// ```\n-    #[unstable(feature = \"peek\", issue = \"38980\")]\n+    #[stable(feature = \"peek\", since = \"1.18.0\")]\n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n         self.0.peek(buf)\n     }"}, {"sha": "80151dc2b4455a758c9be39ac379db73f7979bb1", "filename": "src/libstd/net/udp.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fudp.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -112,15 +112,14 @@ impl UdpSocket {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(peek)]\n     /// use std::net::UdpSocket;\n     ///\n     /// let socket = UdpSocket::bind(\"127.0.0.1:34254\").expect(\"couldn't bind to address\");\n     /// let mut buf = [0; 10];\n     /// let (number_of_bytes, src_addr) = socket.peek_from(&mut buf)\n     ///                                         .expect(\"Didn't receive data\");\n     /// ```\n-    #[unstable(feature = \"peek\", issue = \"38980\")]\n+    #[stable(feature = \"peek\", since = \"1.18.0\")]\n     pub fn peek_from(&self, buf: &mut [u8]) -> io::Result<(usize, SocketAddr)> {\n         self.0.peek_from(buf)\n     }\n@@ -638,7 +637,6 @@ impl UdpSocket {\n     /// # Examples\n     ///\n     /// ```no_run\n-    /// #![feature(peek)]\n     /// use std::net::UdpSocket;\n     ///\n     /// let socket = UdpSocket::bind(\"127.0.0.1:34254\").expect(\"couldn't bind to address\");\n@@ -649,7 +647,7 @@ impl UdpSocket {\n     ///     Err(e) => println!(\"peek function failed: {:?}\", e),\n     /// }\n     /// ```\n-    #[unstable(feature = \"peek\", issue = \"38980\")]\n+    #[stable(feature = \"peek\", since = \"1.18.0\")]\n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n         self.0.peek(buf)\n     }"}, {"sha": "da64704efbaa9452ec78a3976b9c043803bbb170", "filename": "src/libstd/process.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6cc40f16843cd733b1a93de1f3218e4faacaf50/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=f6cc40f16843cd733b1a93de1f3218e4faacaf50", "patch": "@@ -928,8 +928,6 @@ impl Child {\n     /// Basic usage:\n     ///\n     /// ```no_run\n-    /// #![feature(process_try_wait)]\n-    ///\n     /// use std::process::Command;\n     ///\n     /// let mut child = Command::new(\"ls\").spawn().unwrap();\n@@ -944,7 +942,7 @@ impl Child {\n     ///     Err(e) => println!(\"error attempting to wait: {}\", e),\n     /// }\n     /// ```\n-    #[unstable(feature = \"process_try_wait\", issue = \"38903\")]\n+    #[stable(feature = \"process_try_wait\", since = \"1.18.0\")]\n     pub fn try_wait(&mut self) -> io::Result<Option<ExitStatus>> {\n         Ok(self.handle.try_wait()?.map(ExitStatus))\n     }"}]}