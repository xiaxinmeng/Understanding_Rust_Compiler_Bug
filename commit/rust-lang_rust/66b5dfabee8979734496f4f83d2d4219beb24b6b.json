{"sha": "66b5dfabee8979734496f4f83d2d4219beb24b6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YjVkZmFiZWU4OTc5NzM0NDk2ZjRmODNkMmQ0MjE5YmViMjRiNmI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T20:32:16Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-09T20:32:16Z"}, "message": "Remove redundant trans_drop_str, fix buggy branch in trans_if. Un-XFAIL drop-on-ret.rs.", "tree": {"sha": "c5286d34a681a73169c76d1fae30f45e2faf6d01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5286d34a681a73169c76d1fae30f45e2faf6d01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b5dfabee8979734496f4f83d2d4219beb24b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b5dfabee8979734496f4f83d2d4219beb24b6b", "html_url": "https://github.com/rust-lang/rust/commit/66b5dfabee8979734496f4f83d2d4219beb24b6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b5dfabee8979734496f4f83d2d4219beb24b6b/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "440e637edfc58f50365f658e28c86ae51c1327b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/440e637edfc58f50365f658e28c86ae51c1327b2", "html_url": "https://github.com/rust-lang/rust/commit/440e637edfc58f50365f658e28c86ae51c1327b2"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "dda6c77cbaae5db3ff8eaa4521e20f367d32d07d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/66b5dfabee8979734496f4f83d2d4219beb24b6b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b5dfabee8979734496f4f83d2d4219beb24b6b/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=66b5dfabee8979734496f4f83d2d4219beb24b6b", "patch": "@@ -893,14 +893,7 @@ fn copy_ty(@block_ctxt cx,\n     fail;\n }\n \n-fn trans_drop_str(@block_ctxt cx, ValueRef v) -> result {\n-    ret decr_refcnt_and_if_zero(cx, v,\n-                                bind trans_non_gc_free(_, v),\n-                                \"free string\",\n-                                T_int(), C_int(0));\n-}\n-\n-impure fn trans_lit(@block_ctxt cx, &ast.lit lit) -> result {\n+impure fn trans_lit(@block_ctxt cx, &ast.lit lit, &ast.ann ann) -> result {\n     alt (lit.node) {\n         case (ast.lit_int(?i)) {\n             ret res(cx, C_int(i));\n@@ -945,8 +938,9 @@ impure fn trans_lit(@block_ctxt cx, &ast.lit lit) -> result {\n                                         C_int(len)));\n             sub.val = sub.bcx.build.IntToPtr(sub.val,\n                                              T_ptr(T_str()));\n+            auto t = node_ann_type(cx.fcx.ccx, ann);\n             find_scope_cx(cx).cleanups +=\n-                clean(bind trans_drop_str(_, sub.val));\n+                clean(bind drop_ty(_, sub.val, t));\n             ret sub;\n         }\n     }\n@@ -1183,8 +1177,8 @@ impure fn trans_if(@block_ctxt cx, @ast.expr cond,\n     }\n \n     cond_res.bcx.build.CondBr(cond_res.val,\n-                              then_res.bcx.llbb,\n-                              else_res.bcx.llbb);\n+                              then_cx.llbb,\n+                              else_cx.llbb);\n \n     // FIXME: use inferred type when available.\n     ret join_results(cx, T_nil(),\n@@ -1462,8 +1456,8 @@ impure fn trans_rec(@block_ctxt cx, vec[ast.field] fields,\n \n impure fn trans_expr(@block_ctxt cx, @ast.expr e) -> result {\n     alt (e.node) {\n-        case (ast.expr_lit(?lit, _)) {\n-            ret trans_lit(cx, *lit);\n+        case (ast.expr_lit(?lit, ?ann)) {\n+            ret trans_lit(cx, *lit, ann);\n         }\n \n         case (ast.expr_unary(?op, ?x, ?ann)) {"}]}