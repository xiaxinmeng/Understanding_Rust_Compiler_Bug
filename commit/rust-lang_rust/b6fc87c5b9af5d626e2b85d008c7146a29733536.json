{"sha": "b6fc87c5b9af5d626e2b85d008c7146a29733536", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2ZmM4N2M1YjlhZjVkNjI2ZTJiODVkMDA4YzcxNDZhMjk3MzM1MzY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-30T14:09:42Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T03:33:34Z"}, "message": "de-fatalize some errors", "tree": {"sha": "7362dedf9b529e3a04647734c3fd80b209aeb444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7362dedf9b529e3a04647734c3fd80b209aeb444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6fc87c5b9af5d626e2b85d008c7146a29733536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6fc87c5b9af5d626e2b85d008c7146a29733536", "html_url": "https://github.com/rust-lang/rust/commit/b6fc87c5b9af5d626e2b85d008c7146a29733536", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6fc87c5b9af5d626e2b85d008c7146a29733536/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2091062bf685ec2a64cafdffb72ae8479ff41890", "url": "https://api.github.com/repos/rust-lang/rust/commits/2091062bf685ec2a64cafdffb72ae8479ff41890", "html_url": "https://github.com/rust-lang/rust/commit/2091062bf685ec2a64cafdffb72ae8479ff41890"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "2e58b702d925b0c27b14827aa6fb96cd1387b680", "filename": "src/librustc_parse/parser/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fdiagnostics.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -177,10 +177,6 @@ impl<'a> Parser<'a> {\n         self.sess.span_diagnostic.span_bug(self.token.span, m)\n     }\n \n-    pub(super) fn span_err<S: Into<MultiSpan>>(&self, sp: S, m: &str) {\n-        self.sess.span_diagnostic.span_err(sp, m)\n-    }\n-\n     pub fn struct_span_err<S: Into<MultiSpan>>(&self, sp: S, m: &str) -> DiagnosticBuilder<'a> {\n         self.sess.span_diagnostic.struct_span_err(sp, m)\n     }"}, {"sha": "f5cefeca3391afa474e43366c78213f93174e183", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -822,7 +822,11 @@ impl<'a> Parser<'a> {\n         } else {\n             // Field access `expr.f`\n             if let Some(args) = segment.args {\n-                self.span_err(args.span(), \"field expressions may not have generic arguments\");\n+                self.struct_span_err(\n+                    args.span(),\n+                    \"field expressions may not have generic arguments\",\n+                )\n+                .emit();\n             }\n \n             let span = lo.to(self.prev_span);"}, {"sha": "64482f09edec79ca45919a89bb15f058cfca25bb", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -617,7 +617,7 @@ impl<'a> Parser<'a> {\n                     // This notably includes paths passed through `ty` macro fragments (#46438).\n                     TyKind::Path(None, path) => path,\n                     _ => {\n-                        self.span_err(ty_first.span, \"expected a trait, found type\");\n+                        self.struct_span_err(ty_first.span, \"expected a trait, found type\").emit();\n                         err_path(ty_first.span)\n                     }\n                 };"}, {"sha": "6f24dfcd027c59dc7fb5710b41cd6010329cb03c", "filename": "src/librustc_parse/parser/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fpath.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -93,7 +93,7 @@ impl<'a> Parser<'a> {\n         maybe_whole!(self, NtPath, |path| {\n             if style == PathStyle::Mod && path.segments.iter().any(|segment| segment.args.is_some())\n             {\n-                self.diagnostic().span_err(path.span, \"unexpected generic arguments in path\");\n+                self.struct_span_err(path.span, \"unexpected generic arguments in path\").emit();\n             }\n             path\n         });"}, {"sha": "1d0897a3cf3f76a183df471b387b7bb9387f3295", "filename": "src/librustc_parse/parser/stmt.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Flibrustc_parse%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fstmt.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -193,7 +193,8 @@ impl<'a> Parser<'a> {\n             if self.prev_token_kind == PrevTokenKind::DocComment {\n                 self.span_fatal_err(self.prev_span, Error::UselessDocComment).emit();\n             } else if attrs.iter().any(|a| a.style == AttrStyle::Outer) {\n-                self.span_err(self.token.span, \"expected statement after outer attribute\");\n+                self.struct_span_err(self.token.span, \"expected statement after outer attribute\")\n+                    .emit();\n             }\n         }\n     }"}, {"sha": "f6d2bee0e15600a300d1d8e4de5915ba78e7bfb3", "filename": "src/test/ui/parser/attr-stmt-expr-attr-bad.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.rs?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -112,3 +112,4 @@ fn main() {}\n #[cfg(FALSE)] fn e() { { fn foo() { #[attr]; } } }\n //~^ ERROR expected statement after outer attribute\n #[cfg(FALSE)] fn e() { { fn foo() { #[attr] } } }\n+//~^ ERROR expected statement after outer attribute"}, {"sha": "0123006418a3a71545846f7bcc420649e7155a25", "filename": "src/test/ui/parser/attr-stmt-expr-attr-bad.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b6fc87c5b9af5d626e2b85d008c7146a29733536/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-stmt-expr-attr-bad.stderr?ref=b6fc87c5b9af5d626e2b85d008c7146a29733536", "patch": "@@ -410,5 +410,11 @@ error: expected statement after outer attribute\n LL | #[cfg(FALSE)] fn e() { { fn foo() { #[attr]; } } }\n    |                                            ^\n \n-error: aborting due to 56 previous errors\n+error: expected statement after outer attribute\n+  --> $DIR/attr-stmt-expr-attr-bad.rs:114:45\n+   |\n+LL | #[cfg(FALSE)] fn e() { { fn foo() { #[attr] } } }\n+   |                                             ^\n+\n+error: aborting due to 57 previous errors\n "}]}