{"sha": "80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZmU4NmY4Yzc4YjUyZjE5YWEzNmU4ZDk4NDVlY2RjNzcyNzdlNTU=", "commit": {"author": {"name": "bgermann", "email": "bgermann@users.noreply.github.com", "date": "2017-10-03T12:48:39Z"}, "committer": {"name": "bgermann", "email": "bgermann@users.noreply.github.com", "date": "2017-10-03T12:48:39Z"}, "message": "Add build environment for Solaris\n\nThis can be used to build rust-std.\n\nThe dilos illumos distribution was chosen, because illumos is free software\nas opposed to Oracle Solaris and dilos is the only illumos distribution that\nsupports x86_64 and sparcv9 at the same level.", "tree": {"sha": "75f19ea24a0a953eab020da12ffab190bfec8b3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f19ea24a0a953eab020da12ffab190bfec8b3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "html_url": "https://github.com/rust-lang/rust/commit/80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/comments", "author": {"login": "bgermann", "id": 9329107, "node_id": "MDQ6VXNlcjkzMjkxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9329107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgermann", "html_url": "https://github.com/bgermann", "followers_url": "https://api.github.com/users/bgermann/followers", "following_url": "https://api.github.com/users/bgermann/following{/other_user}", "gists_url": "https://api.github.com/users/bgermann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgermann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgermann/subscriptions", "organizations_url": "https://api.github.com/users/bgermann/orgs", "repos_url": "https://api.github.com/users/bgermann/repos", "events_url": "https://api.github.com/users/bgermann/events{/privacy}", "received_events_url": "https://api.github.com/users/bgermann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bgermann", "id": 9329107, "node_id": "MDQ6VXNlcjkzMjkxMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9329107?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bgermann", "html_url": "https://github.com/bgermann", "followers_url": "https://api.github.com/users/bgermann/followers", "following_url": "https://api.github.com/users/bgermann/following{/other_user}", "gists_url": "https://api.github.com/users/bgermann/gists{/gist_id}", "starred_url": "https://api.github.com/users/bgermann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bgermann/subscriptions", "organizations_url": "https://api.github.com/users/bgermann/orgs", "repos_url": "https://api.github.com/users/bgermann/repos", "events_url": "https://api.github.com/users/bgermann/events{/privacy}", "received_events_url": "https://api.github.com/users/bgermann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61bad301f136fb6f4cb543014ed02034007e4bd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/61bad301f136fb6f4cb543014ed02034007e4bd2", "html_url": "https://github.com/rust-lang/rust/commit/61bad301f136fb6f4cb543014ed02034007e4bd2"}], "stats": {"total": 145, "additions": 145, "deletions": 0}, "files": [{"sha": "a60c9956b752865ee8c2771860b00b5f16ac7067", "filename": "src/ci/docker/dist-solaris/Dockerfile", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Fci%2Fdocker%2Fdist-solaris%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Fci%2Fdocker%2Fdist-solaris%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-solaris%2FDockerfile?ref=80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "patch": "@@ -0,0 +1,29 @@\n+FROM ubuntu:16.04\n+\n+COPY scripts/cross-apt-packages.sh /scripts/\n+RUN sh /scripts/cross-apt-packages.sh\n+\n+RUN apt-get install -y --no-install-recommends \\\n+                    software-properties-common libgmp-dev libmpfr-dev libmpc-dev libisl-dev\n+RUN apt-key adv --batch --yes --keyserver keyserver.ubuntu.com --recv-keys 74DA7924C5513486\n+RUN add-apt-repository -y 'deb http://apt.dilos.org/dilos dilos2-testing main'\n+\n+COPY dist-solaris/build-toolchain.sh /tmp/\n+RUN /tmp/build-toolchain.sh x86_64  amd64   solaris-i386\n+RUN /tmp/build-toolchain.sh sparcv9 sparcv9 solaris-sparc\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+ENV \\\n+    AR_sparcv9_sun_solaris=sparcv9-sun-solaris2.11-ar      \\\n+    CC_sparcv9_sun_solaris=sparcv9-sun-solaris2.11-sysroot \\\n+    CXX_sparcv9_sun_solaris=sparcv9-sun-solaris2.11-g++    \\\n+    AR_x86_64_sun_solaris=x86_64-sun-solaris2.11-ar        \\\n+    CC_x86_64_sun_solaris=x86_64-sun-solaris2.11-sysroot   \\\n+    CXX_x86_64_sun_solaris=x86_64-sun-solaris2.11-g++\n+\n+ENV TARGETS=sparcv9-sun-solaris,x86_64-sun-solaris\n+\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS --enable-extended\n+ENV SCRIPT python2.7 ../x.py dist --target $TARGETS"}, {"sha": "c0d839a5fb7537647367d63f11fe1d848ac35462", "filename": "src/ci/docker/dist-solaris/build-toolchain.sh", "status": "added", "additions": 114, "deletions": 0, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Fci%2Fdocker%2Fdist-solaris%2Fbuild-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Fci%2Fdocker%2Fdist-solaris%2Fbuild-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-solaris%2Fbuild-toolchain.sh?ref=80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "patch": "@@ -0,0 +1,114 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+ARCH=$1\n+LIB_ARCH=$2\n+APT_ARCH=$3\n+BINUTILS=2.28.1\n+GCC=6.4.0\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  set -x\n+}\n+\n+# First up, build binutils\n+mkdir binutils\n+cd binutils\n+\n+curl https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS.tar.xz | tar xJf -\n+mkdir binutils-build\n+cd binutils-build\n+hide_output ../binutils-$BINUTILS/configure --target=$ARCH-sun-solaris2.11\n+hide_output make -j10\n+hide_output make install\n+\n+cd ../..\n+rm -rf binutils\n+\n+# Next, download and install the relevant solaris packages\n+mkdir solaris\n+cd solaris\n+\n+dpkg --add-architecture $APT_ARCH\n+apt-get update\n+apt-get download           \\\n+  libc:$APT_ARCH           \\\n+  libc-dev:$APT_ARCH       \\\n+  libm:$APT_ARCH           \\\n+  libm-dev:$APT_ARCH       \\\n+  libpthread:$APT_ARCH     \\\n+  libpthread-dev:$APT_ARCH \\\n+  librt:$APT_ARCH          \\\n+  librt-dev:$APT_ARCH      \\\n+  system-crt:$APT_ARCH     \\\n+  system-header:$APT_ARCH\n+\n+for deb in *$APT_ARCH.deb; do\n+  dpkg -x $deb .\n+done\n+\n+mkdir                  /usr/local/$ARCH-sun-solaris2.11/usr\n+mv usr/include         /usr/local/$ARCH-sun-solaris2.11/usr/include\n+mv usr/lib/$LIB_ARCH/* /usr/local/$ARCH-sun-solaris2.11/lib\n+mv     lib/$LIB_ARCH/* /usr/local/$ARCH-sun-solaris2.11/lib\n+\n+ln -s /usr/local/$ARCH-sun-solaris2.11/usr/include /usr/local/$ARCH-sun-solaris2.11/sys-include\n+ln -s /usr/local/$ARCH-sun-solaris2.11/usr/include /usr/local/$ARCH-sun-solaris2.11/include\n+\n+cd ..\n+rm -rf solaris\n+\n+# Finally, download and build gcc to target solaris\n+mkdir gcc\n+cd gcc\n+\n+curl https://ftp.gnu.org/gnu/gcc/gcc-$GCC/gcc-$GCC.tar.xz | tar xJf -\n+cd gcc-$GCC\n+\n+mkdir ../gcc-build\n+cd ../gcc-build\n+hide_output ../gcc-$GCC/configure \\\n+  --enable-languages=c,c++        \\\n+  --target=$ARCH-sun-solaris2.11  \\\n+  --with-gnu-as                   \\\n+  --with-gnu-ld                   \\\n+  --disable-multilib              \\\n+  --disable-nls                   \\\n+  --disable-libgomp               \\\n+  --disable-libquadmath           \\\n+  --disable-libssp                \\\n+  --disable-libvtv                \\\n+  --disable-libcilkrts            \\\n+  --disable-libada                \\\n+  --disable-libsanitizer          \\\n+  --disable-libquadmath-support   \\\n+  --disable-lto                   \\\n+  --with-sysroot=/usr/local/$ARCH-sun-solaris2.11\n+\n+hide_output make -j10\n+hide_output make install\n+\n+cd ../..\n+rm -rf gcc"}, {"sha": "daeac35a0170a03afa59498ff13af869e03faa19", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fe86f8c78b52f19aa36e8d9845ecdc77277e55/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=80fe86f8c78b52f19aa36e8d9845ecdc77277e55", "patch": "@@ -83,13 +83,15 @@ static TARGETS: &'static [&'static str] = &[\n     \"powerpc64le-unknown-linux-gnu\",\n     \"s390x-unknown-linux-gnu\",\n     \"sparc64-unknown-linux-gnu\",\n+    \"sparcv9-sun-solaris\",\n     \"wasm32-unknown-emscripten\",\n     \"x86_64-linux-android\",\n     \"x86_64-apple-darwin\",\n     \"x86_64-apple-ios\",\n     \"x86_64-pc-windows-gnu\",\n     \"x86_64-pc-windows-msvc\",\n     \"x86_64-rumprun-netbsd\",\n+    \"x86_64-sun-solaris\",\n     \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-fuchsia\",\n     \"x86_64-unknown-linux-gnu\","}]}