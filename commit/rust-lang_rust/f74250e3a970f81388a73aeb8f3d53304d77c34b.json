{"sha": "f74250e3a970f81388a73aeb8f3d53304d77c34b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3NDI1MGUzYTk3MGY4MTM4OGE3M2FlYjhmM2Q1MzMwNGQ3N2MzNGI=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-10T01:59:30Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-10T02:05:42Z"}, "message": "vec::with_capacity: do one alloc for non-managed", "tree": {"sha": "11f09e9cf29767eaac299c1f01ee1b260d7bf640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11f09e9cf29767eaac299c1f01ee1b260d7bf640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f74250e3a970f81388a73aeb8f3d53304d77c34b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f74250e3a970f81388a73aeb8f3d53304d77c34b", "html_url": "https://github.com/rust-lang/rust/commit/f74250e3a970f81388a73aeb8f3d53304d77c34b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f74250e3a970f81388a73aeb8f3d53304d77c34b/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "137d1fb210a844a76f89d7355a1aaf9f7a88af33", "url": "https://api.github.com/repos/rust-lang/rust/commits/137d1fb210a844a76f89d7355a1aaf9f7a88af33", "html_url": "https://github.com/rust-lang/rust/commit/137d1fb210a844a76f89d7355a1aaf9f7a88af33"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "0b29caacb7a3553b7c5e4d62f26ea473428ab2c4", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f74250e3a970f81388a73aeb8f3d53304d77c34b/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f74250e3a970f81388a73aeb8f3d53304d77c34b/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=f74250e3a970f81388a73aeb8f3d53304d77c34b", "patch": "@@ -27,7 +27,7 @@ use option::{None, Option, Some};\n use ptr::to_unsafe_ptr;\n use ptr;\n use ptr::RawPtr;\n-use rt::global_heap::realloc_raw;\n+use rt::global_heap::{malloc_raw, realloc_raw};\n use sys;\n use sys::size_of;\n use uint;\n@@ -101,12 +101,31 @@ pub fn to_owned<T:Copy>(t: &[T]) -> ~[T] {\n }\n \n /// Creates a new vector with a capacity of `capacity`\n+#[cfg(stage0)]\n pub fn with_capacity<T>(capacity: uint) -> ~[T] {\n     let mut vec = ~[];\n     vec.reserve(capacity);\n     vec\n }\n \n+/// Creates a new vector with a capacity of `capacity`\n+#[cfg(not(stage0))]\n+pub fn with_capacity<T>(capacity: uint) -> ~[T] {\n+    unsafe {\n+        if contains_managed::<T>() {\n+            let mut vec = ~[];\n+            vec.reserve(capacity);\n+            vec\n+        } else {\n+            let alloc = capacity * sys::nonzero_size_of::<T>();\n+            let ptr = malloc_raw(alloc + size_of::<raw::VecRepr>()) as *mut raw::VecRepr;\n+            (*ptr).unboxed.alloc = alloc;\n+            (*ptr).unboxed.fill = 0;\n+            cast::transmute(ptr)\n+        }\n+    }\n+}\n+\n /**\n  * Builds a vector by calling a provided function with an argument\n  * function that pushes an element to the back of a vector."}]}