{"sha": "8cd9bf3162da67600fbd6046893cc4f23b90a1b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZDliZjMxNjJkYTY3NjAwZmJkNjA0Njg5M2NjNGYyM2I5MGExYjM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-22T09:45:54Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-22T09:45:54Z"}, "message": "Use *_imm in some places", "tree": {"sha": "c8baecb4d6ae96f7493d2d3e2606a843af03bd9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8baecb4d6ae96f7493d2d3e2606a843af03bd9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cd9bf3162da67600fbd6046893cc4f23b90a1b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cd9bf3162da67600fbd6046893cc4f23b90a1b3", "html_url": "https://github.com/rust-lang/rust/commit/8cd9bf3162da67600fbd6046893cc4f23b90a1b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cd9bf3162da67600fbd6046893cc4f23b90a1b3/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "954d1e7bf2fb7a7660cefec47e78e92016615f81", "url": "https://api.github.com/repos/rust-lang/rust/commits/954d1e7bf2fb7a7660cefec47e78e92016615f81", "html_url": "https://github.com/rust-lang/rust/commit/954d1e7bf2fb7a7660cefec47e78e92016615f81"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "ffb984c7c11e22764dd1a2a8cf916e400621ac1e", "filename": "src/common.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8cd9bf3162da67600fbd6046893cc4f23b90a1b3/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cd9bf3162da67600fbd6046893cc4f23b90a1b3/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=8cd9bf3162da67600fbd6046893cc4f23b90a1b3", "patch": "@@ -68,8 +68,7 @@ fn codegen_field<'a, 'tcx: 'a>(\n     let field_offset = layout.fields.offset(field.index());\n     let field_ty = layout.field(&*fx, field.index());\n     if field_offset.bytes() > 0 {\n-        let field_offset = fx.bcx.ins().iconst(fx.module.pointer_type(), field_offset.bytes() as i64);\n-        (fx.bcx.ins().iadd(base, field_offset), field_ty)\n+        (fx.bcx.ins().iadd_imm(base, field_offset.bytes() as i64), field_ty)\n     } else {\n         (base, field_ty)\n     }\n@@ -305,11 +304,7 @@ impl<'a, 'tcx: 'a> CPlace<'tcx> {\n         match layout.ty.sty {\n             TypeVariants::TyArray(elem_ty, _) => {\n                 let elem_layout = fx.layout_of(elem_ty);\n-                let size = fx\n-                    .bcx\n-                    .ins()\n-                    .iconst(fx.module.pointer_type(), elem_layout.size.bytes() as i64);\n-                let offset = fx.bcx.ins().imul(size, index);\n+                let offset = fx.bcx.ins().imul_imm(index, elem_layout.size.bytes() as i64);\n                 CPlace::Addr(fx.bcx.ins().iadd(addr, offset), elem_layout)\n             }\n             TypeVariants::TySlice(_elem_ty) => unimplemented!(\"place_index(TySlice)\"),"}]}