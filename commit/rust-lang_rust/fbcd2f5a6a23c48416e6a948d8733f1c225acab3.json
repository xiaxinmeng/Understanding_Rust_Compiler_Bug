{"sha": "fbcd2f5a6a23c48416e6a948d8733f1c225acab3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiY2QyZjVhNmEyM2M0ODQxNmU2YTk0OGQ4NzMzZjFjMjI1YWNhYjM=", "commit": {"author": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-03-08T21:16:31Z"}, "committer": {"name": "Maxim Nazarenko", "email": "nz.phone@mail.ru", "date": "2018-03-08T21:16:31Z"}, "message": "tidy. Again", "tree": {"sha": "fb295af96f319cc5340300555867b67e428d8524", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb295af96f319cc5340300555867b67e428d8524"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbcd2f5a6a23c48416e6a948d8733f1c225acab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcd2f5a6a23c48416e6a948d8733f1c225acab3", "html_url": "https://github.com/rust-lang/rust/commit/fbcd2f5a6a23c48416e6a948d8733f1c225acab3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbcd2f5a6a23c48416e6a948d8733f1c225acab3/comments", "author": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "NovemberZulu", "id": 897004, "node_id": "MDQ6VXNlcjg5NzAwNA==", "avatar_url": "https://avatars.githubusercontent.com/u/897004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NovemberZulu", "html_url": "https://github.com/NovemberZulu", "followers_url": "https://api.github.com/users/NovemberZulu/followers", "following_url": "https://api.github.com/users/NovemberZulu/following{/other_user}", "gists_url": "https://api.github.com/users/NovemberZulu/gists{/gist_id}", "starred_url": "https://api.github.com/users/NovemberZulu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NovemberZulu/subscriptions", "organizations_url": "https://api.github.com/users/NovemberZulu/orgs", "repos_url": "https://api.github.com/users/NovemberZulu/repos", "events_url": "https://api.github.com/users/NovemberZulu/events{/privacy}", "received_events_url": "https://api.github.com/users/NovemberZulu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe557eee7de236e767a81a123c5de9b52d5e9a2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe557eee7de236e767a81a123c5de9b52d5e9a2a", "html_url": "https://github.com/rust-lang/rust/commit/fe557eee7de236e767a81a123c5de9b52d5e9a2a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "98f08676722ea5097289d66406034f455e89ff66", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fbcd2f5a6a23c48416e6a948d8733f1c225acab3/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbcd2f5a6a23c48416e6a948d8733f1c225acab3/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=fbcd2f5a6a23c48416e6a948d8733f1c225acab3", "patch": "@@ -1167,7 +1167,7 @@ impl<'a, T: ?Sized + fmt::Display> fmt::Display for RefMut<'a, T> {\n /// feature to work around this restriction. All other types that allow internal mutability, such as\n /// `Cell<T>` and `RefCell<T>` use `UnsafeCell` to wrap their internal data.\n ///\n-/// The `UnsafeCell` API itself is technically very simple: it gives you a raw pointer `*mut T` to \n+/// The `UnsafeCell` API itself is technically very simple: it gives you a raw pointer `*mut T` to\n /// its contents. It is up to _you_ as the abstraction designer to use that raw pointer correctly.\n ///\n /// The precise Rust aliasing rules are somewhat in flux, but the main points are not contentious:\n@@ -1182,7 +1182,7 @@ impl<'a, T: ?Sized + fmt::Display> fmt::Display for RefMut<'a, T> {\n /// that reference expires. \n ///\n /// - At all times, you must avoid data races, meaning that if multiple threads have access to\n-/// the same `UnsafeCell`, then any writes must have a proper happens-before relation to all other \n+/// the same `UnsafeCell`, then any writes must have a proper happens-before relation to all other\n /// accesses (or use atomics).\n ///\n /// To assist with proper design, the following scenarios are explicitly declared legal"}]}