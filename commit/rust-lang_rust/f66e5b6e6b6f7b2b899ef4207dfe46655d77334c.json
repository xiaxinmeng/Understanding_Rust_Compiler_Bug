{"sha": "f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NmU1YjZlNmI2ZjdiMmI4OTllZjQyMDdkZmU0NjY1NWQ3NzMzNGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-28T00:31:50Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-28T00:31:50Z"}, "message": "move ids to HIR", "tree": {"sha": "ab85d22708e1f1e994e1337b851ce8d094e13d7a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab85d22708e1f1e994e1337b851ce8d094e13d7a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "html_url": "https://github.com/rust-lang/rust/commit/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11168c464cd962af3336a2cc68295496066edd6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/11168c464cd962af3336a2cc68295496066edd6c", "html_url": "https://github.com/rust-lang/rust/commit/11168c464cd962af3336a2cc68295496066edd6c"}], "stats": {"total": 151, "additions": 71, "deletions": 80}, "files": [{"sha": "2bc1c8f8f32f20135338ec690542350447245934", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -5,9 +5,8 @@ use salsa::{self, Database};\n use ra_db::{LocationIntener, BaseDatabase};\n \n use crate::{\n-    hir,\n+    hir::{self, DefId, DefLoc, FnId, SourceItemId},\n     symbol_index,\n-    loc2id::{IdMaps, DefId, DefLoc, FnId},\n };\n \n #[derive(Debug)]\n@@ -21,6 +20,12 @@ pub(crate) struct RootDatabase {\n     id_maps: Arc<IdMaps>,\n }\n \n+#[derive(Debug, Default)]\n+struct IdMaps {\n+    fns: LocationIntener<SourceItemId, FnId>,\n+    defs: LocationIntener<DefLoc, DefId>,\n+}\n+\n impl salsa::Database for RootDatabase {\n     fn salsa_runtime(&self) -> &salsa::Runtime<RootDatabase> {\n         &self.runtime"}, {"sha": "c8ae551c5662b75bbeeb30f2d2c108faaf838f0a", "filename": "crates/ra_analysis/src/hir/db.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fdb.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -9,13 +9,13 @@ use ra_db::{SourceRootId, LocationIntener, SyntaxDatabase};\n use crate::{\n     FileId,\n     hir::{\n+        DefLoc, DefId, FnId,\n         SourceFileItems, SourceItemId,\n         query_definitions,\n         function::{FnScopes},\n         module::{ModuleId, ModuleTree, ModuleSource,\n         nameres::{ItemMap, InputModuleItems}},\n     },\n-    loc2id::{DefLoc, DefId, FnId},\n     Cancelable,\n };\n "}, {"sha": "a399d2a9e1698dbec0d26df986604756258caa2f", "filename": "crates/ra_analysis/src/hir/function/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Ffunction%2Fmod.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -11,12 +11,11 @@ use ra_syntax::{\n };\n \n use crate::{\n-    hir::{HirDatabase, SourceItemId},\n+    hir::{FnId, HirDatabase, SourceItemId},\n     FileId,\n };\n \n pub(crate) use self::scope::FnScopes;\n-pub(crate) use crate::loc2id::FnId;\n \n impl FnId {\n     pub(crate) fn get(db: &impl HirDatabase, file_id: FileId, fn_def: ast::FnDef) -> FnId {"}, {"sha": "83131384d576e3f11c2dba7ee6817d9b3aa61e55", "filename": "crates/ra_analysis/src/hir/mod.rs", "status": "modified", "additions": 44, "deletions": 1, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmod.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -14,11 +14,11 @@ mod path;\n use std::ops::Index;\n \n use ra_syntax::{SyntaxNodeRef, SyntaxNode};\n+use ra_db::{LocationIntener, SourceRootId};\n \n use crate::{\n     FileId,\n     hir::db::HirDatabase,\n-    loc2id::{DefId, DefLoc},\n     Cancelable,\n     arena::{Arena, Id},\n };\n@@ -31,6 +31,49 @@ pub(crate) use self::{\n \n pub use self::function::FnSignatureInfo;\n \n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub(crate) struct FnId(u32);\n+ra_db::impl_numeric_id!(FnId);\n+\n+impl FnId {\n+    pub(crate) fn from_loc(\n+        db: &impl AsRef<LocationIntener<SourceItemId, FnId>>,\n+        loc: &SourceItemId,\n+    ) -> FnId {\n+        db.as_ref().loc2id(loc)\n+    }\n+    pub(crate) fn loc(self, db: &impl AsRef<LocationIntener<SourceItemId, FnId>>) -> SourceItemId {\n+        db.as_ref().id2loc(self)\n+    }\n+}\n+\n+#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n+pub(crate) struct DefId(u32);\n+ra_db::impl_numeric_id!(DefId);\n+\n+#[derive(Clone, Debug, PartialEq, Eq, Hash)]\n+pub(crate) enum DefLoc {\n+    Module {\n+        id: ModuleId,\n+        source_root: SourceRootId,\n+    },\n+    Item {\n+        source_item_id: SourceItemId,\n+    },\n+}\n+\n+impl DefId {\n+    pub(crate) fn loc(self, db: &impl AsRef<LocationIntener<DefLoc, DefId>>) -> DefLoc {\n+        db.as_ref().id2loc(self)\n+    }\n+}\n+\n+impl DefLoc {\n+    pub(crate) fn id(&self, db: &impl AsRef<LocationIntener<DefLoc, DefId>>) -> DefId {\n+        db.as_ref().loc2id(&self)\n+    }\n+}\n+\n pub(crate) enum Def {\n     Module(Module),\n     Item,"}, {"sha": "d2096b01e73ca0d52438616f17f777a9d1443eda", "filename": "crates/ra_analysis/src/hir/module/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fmod.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -15,9 +15,8 @@ use relative_path::RelativePathBuf;\n \n use crate::{\n     FileId, FilePosition, Cancelable,\n-    hir::{Path, PathKind, HirDatabase, SourceItemId},\n+    hir::{DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId},\n     arena::{Arena, Id},\n-    loc2id::{DefLoc, DefId},\n };\n \n pub(crate) use self::nameres::ModuleScope;"}, {"sha": "d4ecc010b1c81670704f4812cac92a155480c4be", "filename": "crates/ra_analysis/src/hir/module/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fmodule%2Fnameres.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -28,8 +28,8 @@ use ra_db::SourceRootId;\n \n use crate::{\n     Cancelable, FileId,\n-    loc2id::{DefId, DefLoc},\n     hir::{\n+        DefId, DefLoc,\n         SourceItemId, SourceFileItemId, SourceFileItems,\n         Path, PathKind,\n         HirDatabase,"}, {"sha": "00237b633a5c589bb51efc72e769bdf9470318f4", "filename": "crates/ra_analysis/src/hir/query_definitions.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fhir%2Fquery_definitions.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -13,9 +13,10 @@ use ra_db::SourceRootId;\n use crate::{\n     FileId, Cancelable,\n     hir::{\n+        FnId,\n         SourceFileItems, SourceItemId,\n         db::HirDatabase,\n-        function::{FnId, FnScopes},\n+        function::FnScopes,\n         module::{\n             ModuleSource, ModuleSourceNode, ModuleId,\n             imp::Submodule,"}, {"sha": "5b6e4df8cd7a790495f87174819f54887baec2cd", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -20,7 +20,6 @@ macro_rules! ctry {\n \n mod arena;\n mod db;\n-mod loc2id;\n mod imp;\n mod completion;\n mod hir;"}, {"sha": "7956431ab059d4a87f15740bc1c2ec2e5c0ca171", "filename": "crates/ra_analysis/src/loc2id.rs", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/11168c464cd962af3336a2cc68295496066edd6c/crates%2Fra_analysis%2Fsrc%2Floc2id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11168c464cd962af3336a2cc68295496066edd6c/crates%2Fra_analysis%2Fsrc%2Floc2id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Floc2id.rs?ref=11168c464cd962af3336a2cc68295496066edd6c", "patch": "@@ -1,69 +0,0 @@\n-use ra_db::SourceRootId;\n-\n-use crate::{\n-    hir::{SourceItemId, ModuleId},\n-};\n-\n-use ra_db::{NumericId, LocationIntener};\n-\n-macro_rules! impl_numeric_id {\n-    ($id:ident) => {\n-        impl NumericId for $id {\n-            fn from_u32(id: u32) -> Self {\n-                $id(id)\n-            }\n-            fn to_u32(self) -> u32 {\n-                self.0\n-            }\n-        }\n-    };\n-}\n-\n-#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub(crate) struct FnId(u32);\n-impl_numeric_id!(FnId);\n-\n-impl FnId {\n-    pub(crate) fn from_loc(\n-        db: &impl AsRef<LocationIntener<SourceItemId, FnId>>,\n-        loc: &SourceItemId,\n-    ) -> FnId {\n-        db.as_ref().loc2id(loc)\n-    }\n-    pub(crate) fn loc(self, db: &impl AsRef<LocationIntener<SourceItemId, FnId>>) -> SourceItemId {\n-        db.as_ref().id2loc(self)\n-    }\n-}\n-\n-#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub(crate) struct DefId(u32);\n-impl_numeric_id!(DefId);\n-\n-#[derive(Clone, Debug, PartialEq, Eq, Hash)]\n-pub(crate) enum DefLoc {\n-    Module {\n-        id: ModuleId,\n-        source_root: SourceRootId,\n-    },\n-    Item {\n-        source_item_id: SourceItemId,\n-    },\n-}\n-\n-impl DefId {\n-    pub(crate) fn loc(self, db: &impl AsRef<LocationIntener<DefLoc, DefId>>) -> DefLoc {\n-        db.as_ref().id2loc(self)\n-    }\n-}\n-\n-impl DefLoc {\n-    pub(crate) fn id(&self, db: &impl AsRef<LocationIntener<DefLoc, DefId>>) -> DefId {\n-        db.as_ref().loc2id(&self)\n-    }\n-}\n-\n-#[derive(Debug, Default)]\n-pub(crate) struct IdMaps {\n-    pub(crate) fns: LocationIntener<SourceItemId, FnId>,\n-    pub(crate) defs: LocationIntener<DefLoc, DefId>,\n-}"}, {"sha": "c5587c950af900ec5f56fd919d106545d11c144d", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f66e5b6e6b6f7b2b899ef4207dfe46655d77334c/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=f66e5b6e6b6f7b2b899ef4207dfe46655d77334c", "patch": "@@ -38,6 +38,20 @@ pub use crate::{\n     loc2id::{LocationIntener, NumericId},\n };\n \n+#[macro_export]\n+macro_rules! impl_numeric_id {\n+    ($id:ident) => {\n+        impl $crate::NumericId for $id {\n+            fn from_u32(id: u32) -> Self {\n+                $id(id)\n+            }\n+            fn to_u32(self) -> u32 {\n+                self.0\n+            }\n+        }\n+    };\n+}\n+\n pub trait BaseDatabase: salsa::Database {\n     fn check_canceled(&self) -> Cancelable<()> {\n         if self.salsa_runtime().is_current_revision_canceled() {"}]}