{"sha": "be762ccccd5a86632e60351518528d078785a3e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNzYyY2NjY2Q1YTg2NjMyZTYwMzUxNTE4NTI4ZDA3ODc4NWEzZTI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-20T10:36:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-20T10:36:28Z"}, "message": "Merge #6294\n\n6294: Add a hacky remidy for #6038 r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7ebc1b5d72a14704dfe8539a039b2acda29bdf64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ebc1b5d72a14704dfe8539a039b2acda29bdf64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be762ccccd5a86632e60351518528d078785a3e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfjr2sCRBK7hj4Ov3rIwAAdHIIAG+fH6sEU4FWouob35bEgT9c\nEVGJrWKbE/8mUoirgEu7jAQQgCNQDWFhUNWM7ad/m9ewTaXBxzBrZ/ubL0OacgSW\nUSXKN3K8blPPS+VxLGlwLrOqMuGr0N9C1zonTi4utdvnl0f0wEsJpNfUENi+NMSj\nKck8h21pk2vM7Hpi+Aiywr9Qi9DSi0g+gdE1p8BYMTSvzeYJ5vwh2FcVpKp76ZGw\nWMQ4HKiZnGm+HnC2cRp9J/7bMaIYsVCyVVXsmSp9t2p7xbRZvYa/ht6qD2W5u1xi\nW8/FarWlc4r/CSUWxhm1ys0WIrzvJiwPPHUAxB0AeqWebjlNBJfCc/ZcLPqK6yw=\n=UjY6\n-----END PGP SIGNATURE-----\n", "payload": "tree 7ebc1b5d72a14704dfe8539a039b2acda29bdf64\nparent 4c00bdea675d33d578cff1c0d7cc3967303e6653\nparent 7a21e9302e194d5ed2a008417130c54cfa52ca24\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1603190188 +0000\ncommitter GitHub <noreply@github.com> 1603190188 +0000\n\nMerge #6294\n\n6294: Add a hacky remidy for #6038 r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be762ccccd5a86632e60351518528d078785a3e2", "html_url": "https://github.com/rust-lang/rust/commit/be762ccccd5a86632e60351518528d078785a3e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be762ccccd5a86632e60351518528d078785a3e2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c00bdea675d33d578cff1c0d7cc3967303e6653", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c00bdea675d33d578cff1c0d7cc3967303e6653", "html_url": "https://github.com/rust-lang/rust/commit/4c00bdea675d33d578cff1c0d7cc3967303e6653"}, {"sha": "7a21e9302e194d5ed2a008417130c54cfa52ca24", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a21e9302e194d5ed2a008417130c54cfa52ca24", "html_url": "https://github.com/rust-lang/rust/commit/7a21e9302e194d5ed2a008417130c54cfa52ca24"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "b870e2ceedfc70d08fd2ad04651e7a31b2262d38", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/be762ccccd5a86632e60351518528d078785a3e2/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be762ccccd5a86632e60351518528d078785a3e2/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=be762ccccd5a86632e60351518528d078785a3e2", "patch": "@@ -290,6 +290,29 @@ impl CrateGraph {\n         }\n         false\n     }\n+\n+    // Work around for https://github.com/rust-analyzer/rust-analyzer/issues/6038.\n+    // As hacky as it gets.\n+    pub fn patch_cfg_if(&mut self) -> bool {\n+        let cfg_if = self.hacky_find_crate(\"cfg_if\");\n+        let std = self.hacky_find_crate(\"std\");\n+        match (cfg_if, std) {\n+            (Some(cfg_if), Some(std)) => {\n+                self.arena.get_mut(&cfg_if).unwrap().dependencies.clear();\n+                self.arena\n+                    .get_mut(&std)\n+                    .unwrap()\n+                    .dependencies\n+                    .push(Dependency { crate_id: cfg_if, name: CrateName::new(\"cfg_if\").unwrap() });\n+                true\n+            }\n+            _ => false,\n+        }\n+    }\n+\n+    fn hacky_find_crate(&self, declaration_name: &str) -> Option<CrateId> {\n+        self.iter().find(|it| self[*it].declaration_name.as_deref() == Some(declaration_name))\n+    }\n }\n \n impl ops::Index<CrateId> for CrateGraph {"}, {"sha": "ea95d1c7716f0f1a604323cc9442724cf0958915", "filename": "crates/project_model/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/be762ccccd5a86632e60351518528d078785a3e2/crates%2Fproject_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be762ccccd5a86632e60351518528d078785a3e2/crates%2Fproject_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Flib.rs?ref=be762ccccd5a86632e60351518528d078785a3e2", "patch": "@@ -485,6 +485,11 @@ impl ProjectWorkspace {\n                 }\n             }\n         }\n+        if crate_graph.patch_cfg_if() {\n+            log::debug!(\"Patched std to depend on cfg-if\")\n+        } else {\n+            log::debug!(\"Did not patch std to depend on cfg-if\")\n+        }\n         crate_graph\n     }\n }"}]}