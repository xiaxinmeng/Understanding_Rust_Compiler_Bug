{"sha": "f07c335e90d2705f2db5a18f0b912a08652610f5", "node_id": "C_kwDOAAsO6NoAKGYwN2MzMzVlOTBkMjcwNWYyZGI1YTE4ZjBiOTEyYTA4NjUyNjEwZjU", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-13T02:41:12Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-04-14T01:28:16Z"}, "message": "Remove another use of `BrAnon(Some(_))`.", "tree": {"sha": "891066970903dcec86ddfa36af33d0c0be222a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/891066970903dcec86ddfa36af33d0c0be222a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f07c335e90d2705f2db5a18f0b912a08652610f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f07c335e90d2705f2db5a18f0b912a08652610f5", "html_url": "https://github.com/rust-lang/rust/commit/f07c335e90d2705f2db5a18f0b912a08652610f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f07c335e90d2705f2db5a18f0b912a08652610f5/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dbd2e2370897c8363f4b17eb87a3a376811deaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dbd2e2370897c8363f4b17eb87a3a376811deaa", "html_url": "https://github.com/rust-lang/rust/commit/7dbd2e2370897c8363f4b17eb87a3a376811deaa"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "f3971080443332490a928ac749f293e8847f07a1", "filename": "compiler/rustc_hir_typeck/src/generator_interior/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f07c335e90d2705f2db5a18f0b912a08652610f5/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f07c335e90d2705f2db5a18f0b912a08652610f5/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fgenerator_interior%2Fmod.rs?ref=f07c335e90d2705f2db5a18f0b912a08652610f5", "patch": "@@ -256,15 +256,14 @@ pub fn resolve_interior<'a, 'tcx>(\n                             _ => mk_bound_region(ty::BrAnon(None)),\n                         }\n                     }\n-                    // FIXME: these should use `BrNamed`\n                     ty::ReEarlyBound(region) => {\n                         mk_bound_region(ty::BrNamed(region.def_id, region.name))\n                     }\n                     ty::ReLateBound(_, ty::BoundRegion { kind, .. })\n                     | ty::ReFree(ty::FreeRegion { bound_region: kind, .. }) => match kind {\n                         ty::BoundRegionKind::BrAnon(span) => mk_bound_region(ty::BrAnon(span)),\n-                        ty::BoundRegionKind::BrNamed(def_id, _) => {\n-                            mk_bound_region(ty::BrAnon(Some(fcx.tcx.def_span(def_id))))\n+                        ty::BoundRegionKind::BrNamed(def_id, sym) => {\n+                            mk_bound_region(ty::BrNamed(def_id, sym))\n                         }\n                         ty::BoundRegionKind::BrEnv => mk_bound_region(ty::BrAnon(None)),\n                     },"}, {"sha": "86dbad84d99d8930a245fd10532bc66328f038a0", "filename": "tests/ui/generic-associated-types/bugs/issue-100013.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f07c335e90d2705f2db5a18f0b912a08652610f5/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-100013.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f07c335e90d2705f2db5a18f0b912a08652610f5/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-100013.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-100013.stderr?ref=f07c335e90d2705f2db5a18f0b912a08652610f5", "patch": "@@ -28,12 +28,12 @@ LL | |         async {}.await; // a yield point\n LL | |     }\n    | |_____^\n    |\n-note: the lifetime defined here...\n+note: the lifetime `'b` defined here...\n   --> $DIR/issue-100013.rs:21:14\n    |\n LL | fn call2<'a, 'b, I: FutureIterator>() -> impl Send {\n    |              ^^\n-note: ...must outlive the lifetime defined here\n+note: ...must outlive the lifetime `'a` defined here\n   --> $DIR/issue-100013.rs:21:10\n    |\n LL | fn call2<'a, 'b, I: FutureIterator>() -> impl Send {"}]}