{"sha": "40f44736e805d0576918bb7679e2737a704590f1", "node_id": "C_kwDOAAsO6NoAKDQwZjQ0NzM2ZTgwNWQwNTc2OTE4YmI3Njc5ZTI3MzdhNzA0NTkwZjE", "commit": {"author": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-08-23T17:20:01Z"}, "committer": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-08-25T17:06:45Z"}, "message": "replace some usages of [Span]FatalError with error-specific types", "tree": {"sha": "4e17e7d4dc2115a892598ddd5bac6efa58256b53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e17e7d4dc2115a892598ddd5bac6efa58256b53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40f44736e805d0576918bb7679e2737a704590f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40f44736e805d0576918bb7679e2737a704590f1", "html_url": "https://github.com/rust-lang/rust/commit/40f44736e805d0576918bb7679e2737a704590f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40f44736e805d0576918bb7679e2737a704590f1/comments", "author": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "137f20c11265ea70e3ed3ed7798662b9abfbaad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/137f20c11265ea70e3ed3ed7798662b9abfbaad2", "html_url": "https://github.com/rust-lang/rust/commit/137f20c11265ea70e3ed3ed7798662b9abfbaad2"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "48ddb54b79e795eb3c67f96b69bb5dda24e32f01", "filename": "compiler/rustc_error_messages/locales/en-US/monomorphize.ftl", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmonomorphize.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmonomorphize.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmonomorphize.ftl?ref=40f44736e805d0576918bb7679e2737a704590f1", "patch": "@@ -11,6 +11,10 @@ monomorphize_consider_type_length_limit =\n \n monomorphize_fatal_error = {$error_message}\n \n+monomorphize_unknown_partition_strategy = unknown partitioning strategy\n+\n+monomorphize_symbol_already_defined = symbol `{$symbol}` is already defined\n+\n monomorphize_unused_generic_params = item has unused generic parameters\n \n monomorphize_large_assignments ="}, {"sha": "fa7655f262425947d417674d54f81f36d2e110b5", "filename": "compiler/rustc_monomorphize/src/errors.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Ferrors.rs?ref=40f44736e805d0576918bb7679e2737a704590f1", "patch": "@@ -39,14 +39,6 @@ pub struct FatalError {\n     pub error_message: String,\n }\n \n-#[derive(SessionDiagnostic)]\n-#[diag(monomorphize::fatal_error)]\n-pub struct SpanFatalError {\n-    #[primary_span]\n-    pub span: Span,\n-    pub error_message: String,\n-}\n-\n pub struct UnusedGenericParams {\n     pub span: Span,\n     pub param_spans: Vec<Span>,\n@@ -79,3 +71,15 @@ pub struct LargeAssignmentsLint {\n     pub size: u64,\n     pub limit: u64,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(monomorphize::unknown_partition_strategy)]\n+pub struct UnknownPartitionStrategy;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(monomorphize::symbol_already_defined)]\n+pub struct SymbolAlreadyDefined {\n+    #[primary_span]\n+    pub span: Option<Span>,\n+    pub symbol: String,\n+}"}, {"sha": "3d9197c7549c7d1e1dc831730917792e7f5b79aa", "filename": "compiler/rustc_monomorphize/src/partitioning/mod.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40f44736e805d0576918bb7679e2737a704590f1/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs?ref=40f44736e805d0576918bb7679e2737a704590f1", "patch": "@@ -108,7 +108,7 @@ use rustc_span::symbol::Symbol;\n \n use crate::collector::InliningMap;\n use crate::collector::{self, MonoItemCollectionMode};\n-use crate::errors::{FatalError, SpanFatalError};\n+use crate::errors::{SymbolAlreadyDefined, UnknownPartitionStrategy};\n \n pub struct PartitioningCx<'a, 'tcx> {\n     tcx: TyCtxt<'tcx>,\n@@ -151,8 +151,7 @@ fn get_partitioner<'tcx>(tcx: TyCtxt<'tcx>) -> Box<dyn Partitioner<'tcx>> {\n     match strategy {\n         \"default\" => Box::new(default::DefaultPartitioning),\n         _ => {\n-            let error_message = \"unknown partitioning strategy\".to_string();\n-            tcx.sess.emit_fatal(FatalError { error_message: error_message.clone() });\n+            tcx.sess.emit_fatal(UnknownPartitionStrategy);\n         }\n     }\n }\n@@ -335,13 +334,7 @@ where\n                 (span1, span2) => span1.or(span2),\n             };\n \n-            let error_message = format!(\"symbol `{}` is already defined\", sym1);\n-\n-            if let Some(span) = span {\n-                tcx.sess.emit_fatal(SpanFatalError { span, error_message: error_message.clone() });\n-            } else {\n-                tcx.sess.emit_fatal(FatalError { error_message: error_message.clone() });\n-            }\n+            tcx.sess.emit_fatal(SymbolAlreadyDefined { span, symbol: sym1.to_string() });\n         }\n     }\n }"}]}