{"sha": "4695ddf510b8cc8727497be4702ed1859bee2cca", "node_id": "C_kwDOAAsO6NoAKDQ2OTVkZGY1MTBiOGNjODcyNzQ5N2JlNDcwMmVkMTg1OWJlZTJjY2E", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-28T16:26:41Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-03-28T18:11:05Z"}, "message": "privacy: Support `#![rustc_effective_visibility]` on the crate root", "tree": {"sha": "58dd1207e840557468503e5b992bfe1aa238bc38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58dd1207e840557468503e5b992bfe1aa238bc38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4695ddf510b8cc8727497be4702ed1859bee2cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4695ddf510b8cc8727497be4702ed1859bee2cca", "html_url": "https://github.com/rust-lang/rust/commit/4695ddf510b8cc8727497be4702ed1859bee2cca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4695ddf510b8cc8727497be4702ed1859bee2cca/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf57e8ada6dc62369d1cee7ab055fb4074bd2d10", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf57e8ada6dc62369d1cee7ab055fb4074bd2d10", "html_url": "https://github.com/rust-lang/rust/commit/bf57e8ada6dc62369d1cee7ab055fb4074bd2d10"}], "stats": {"total": 62, "additions": 38, "deletions": 24}, "files": [{"sha": "51a0a3e9a197c5d7998f69385f5bbc93335ad72c", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4695ddf510b8cc8727497be4702ed1859bee2cca/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4695ddf510b8cc8727497be4702ed1859bee2cca/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=4695ddf510b8cc8727497be4702ed1859bee2cca", "patch": "@@ -2149,6 +2149,7 @@ fn effective_visibilities(tcx: TyCtxt<'_>, (): ()) -> &EffectiveVisibilities {\n \n     let mut check_visitor =\n         TestReachabilityVisitor { tcx, effective_visibilities: &visitor.effective_visibilities };\n+    check_visitor.effective_visibility_diagnostic(CRATE_DEF_ID);\n     tcx.hir().visit_all_item_likes_in_crate(&mut check_visitor);\n \n     tcx.arena.alloc(visitor.effective_visibilities)"}, {"sha": "3e9eef462306cb33c0b17e43e8dfcc4d68e360a6", "filename": "tests/ui/privacy/effective_visibilities.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4695ddf510b8cc8727497be4702ed1859bee2cca/tests%2Fui%2Fprivacy%2Feffective_visibilities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4695ddf510b8cc8727497be4702ed1859bee2cca/tests%2Fui%2Fprivacy%2Feffective_visibilities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Feffective_visibilities.rs?ref=4695ddf510b8cc8727497be4702ed1859bee2cca", "patch": "@@ -1,3 +1,4 @@\n+#![rustc_effective_visibility] //~ ERROR Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n #![feature(rustc_attrs)]\n \n #[rustc_effective_visibility]"}, {"sha": "2618fc427e917c5e7e84648ac7e561d24b86ee59", "filename": "tests/ui/privacy/effective_visibilities.stderr", "status": "modified", "additions": 36, "deletions": 24, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/4695ddf510b8cc8727497be4702ed1859bee2cca/tests%2Fui%2Fprivacy%2Feffective_visibilities.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4695ddf510b8cc8727497be4702ed1859bee2cca/tests%2Fui%2Fprivacy%2Feffective_visibilities.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprivacy%2Feffective_visibilities.stderr?ref=4695ddf510b8cc8727497be4702ed1859bee2cca", "patch": "@@ -1,140 +1,152 @@\n+error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n+  --> $DIR/effective_visibilities.rs:1:1\n+   |\n+LL | / #![rustc_effective_visibility]\n+LL | | #![feature(rustc_attrs)]\n+LL | |\n+LL | | #[rustc_effective_visibility]\n+...  |\n+LL | |\n+LL | | fn main() {}\n+   | |____________^\n+\n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub(crate), ReachableThroughImplTrait: pub(crate)\n-  --> $DIR/effective_visibilities.rs:4:1\n+  --> $DIR/effective_visibilities.rs:5:1\n    |\n LL | mod outer {\n    | ^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:6:5\n+  --> $DIR/effective_visibilities.rs:7:5\n    |\n LL |     pub mod inner1 {\n    |     ^^^^^^^^^^^^^^\n \n error: not in the table\n-  --> $DIR/effective_visibilities.rs:9:9\n+  --> $DIR/effective_visibilities.rs:10:9\n    |\n LL |         extern \"C\" {}\n    |         ^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:12:9\n+  --> $DIR/effective_visibilities.rs:13:9\n    |\n LL |         pub trait PubTrait {\n    |         ^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(self), Reexported: pub(self), Reachable: pub(self), ReachableThroughImplTrait: pub(self)\n-  --> $DIR/effective_visibilities.rs:20:9\n+  --> $DIR/effective_visibilities.rs:21:9\n    |\n LL |         struct PrivStruct;\n    |         ^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(self), Reexported: pub(self), Reachable: pub(self), ReachableThroughImplTrait: pub(self)\n-  --> $DIR/effective_visibilities.rs:20:9\n+  --> $DIR/effective_visibilities.rs:21:9\n    |\n LL |         struct PrivStruct;\n    |         ^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:24:9\n+  --> $DIR/effective_visibilities.rs:25:9\n    |\n LL |         pub union PubUnion {\n    |         ^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(self), Reexported: pub(self), Reachable: pub(self), ReachableThroughImplTrait: pub(self)\n-  --> $DIR/effective_visibilities.rs:26:13\n+  --> $DIR/effective_visibilities.rs:27:13\n    |\n LL |             a: u8,\n    |             ^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:28:13\n+  --> $DIR/effective_visibilities.rs:29:13\n    |\n LL |             pub b: u8,\n    |             ^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:32:9\n+  --> $DIR/effective_visibilities.rs:33:9\n    |\n LL |         pub enum Enum {\n    |         ^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:34:13\n+  --> $DIR/effective_visibilities.rs:35:13\n    |\n LL |             A(\n    |             ^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:34:13\n+  --> $DIR/effective_visibilities.rs:35:13\n    |\n LL |             A(\n    |             ^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:37:17\n+  --> $DIR/effective_visibilities.rs:38:17\n    |\n LL |                 PubUnion,\n    |                 ^^^^^^^^\n \n error: not in the table\n-  --> $DIR/effective_visibilities.rs:43:5\n+  --> $DIR/effective_visibilities.rs:44:5\n    |\n LL |     macro_rules! none_macro {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(self), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:49:5\n+  --> $DIR/effective_visibilities.rs:50:5\n    |\n LL |     macro_rules! public_macro {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:54:5\n+  --> $DIR/effective_visibilities.rs:55:5\n    |\n LL |     pub struct ReachableStruct {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:56:9\n+  --> $DIR/effective_visibilities.rs:57:9\n    |\n LL |         pub a: u8,\n    |         ^^^^^^^^^\n \n error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:61:9\n+  --> $DIR/effective_visibilities.rs:62:9\n    |\n LL | pub use outer::inner1;\n    |         ^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:67:5\n+  --> $DIR/effective_visibilities.rs:68:5\n    |\n LL |     pub type HalfPublicImport = u8;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub(crate), Reachable: pub(crate), ReachableThroughImplTrait: pub(crate)\n-  --> $DIR/effective_visibilities.rs:70:5\n+  --> $DIR/effective_visibilities.rs:71:5\n    |\n LL |     pub(crate) const HalfPublicImport: u8 = 0;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub, Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:74:9\n+  --> $DIR/effective_visibilities.rs:75:9\n    |\n LL | pub use half_public_import::HalfPublicImport;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:14:13\n+  --> $DIR/effective_visibilities.rs:15:13\n    |\n LL |             const A: i32;\n    |             ^^^^^^^^^^^^\n \n error: Direct: pub(crate), Reexported: pub, Reachable: pub, ReachableThroughImplTrait: pub\n-  --> $DIR/effective_visibilities.rs:16:13\n+  --> $DIR/effective_visibilities.rs:17:13\n    |\n LL |             type B;\n    |             ^^^^^^\n \n-error: aborting due to 23 previous errors\n+error: aborting due to 24 previous errors\n "}]}