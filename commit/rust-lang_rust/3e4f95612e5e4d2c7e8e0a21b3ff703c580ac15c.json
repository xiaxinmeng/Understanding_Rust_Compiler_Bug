{"sha": "3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "node_id": "C_kwDOAAsO6NoAKDNlNGY5NTYxMmU1ZTRkMmM3ZThlMGEyMWIzZmY3MDNjNTgwYWMxNWM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-10-09T15:08:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-09T15:08:38Z"}, "message": "Rollup merge of #87528 - :stack_overflow_obsd, r=joshtriplett\n\nstack overflow handler specific openbsd change.", "tree": {"sha": "0df3cfd06b88fa638660833e5bf4d9aaf81e2991", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0df3cfd06b88fa638660833e5bf4d9aaf81e2991"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYbB3CRBK7hj4Ov3rIwAAD50IAI6Yz4SMXnEYe+kqCRH/QhQd\n3pnO/dpSaNeYa6W7YfLxCndxoY4abJlGxetdwAAsYx08ycUZxMTQIlF3xX+Cm8/E\nUsioomqAdARlaAeF5BDEZqCC7NqXY8N1cwGg6tdHC3LO0QXCgGstNA2ngxkbAgXm\nSVPVkgbbDPzaTAPG09fuxxxMlHaB0iJkm/kZuErJfr01wE05uPr5RfSK1PWceVyv\nbCokQjgpIlwyUI2RvQItluhCq9RkWLarokusfAsexbwTqOoLfQ+8to5PrnBejKOI\nOg0B37T0e08Ksj5EN5kglIBXSkCLOy2V5EW6ZkQ940NT3HiuisTY8UYDDnIBNuM=\n=Bgsi\n-----END PGP SIGNATURE-----\n", "payload": "tree 0df3cfd06b88fa638660833e5bf4d9aaf81e2991\nparent 86bf3ce8591343bcc2442e95d6432f3b78e07cc5\nparent 853ffc7400bae30881a03adb74efc2ac3f48590f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1633792118 +0200\ncommitter GitHub <noreply@github.com> 1633792118 +0200\n\nRollup merge of #87528 - :stack_overflow_obsd, r=joshtriplett\n\nstack overflow handler specific openbsd change.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "html_url": "https://github.com/rust-lang/rust/commit/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86bf3ce8591343bcc2442e95d6432f3b78e07cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/86bf3ce8591343bcc2442e95d6432f3b78e07cc5", "html_url": "https://github.com/rust-lang/rust/commit/86bf3ce8591343bcc2442e95d6432f3b78e07cc5"}, {"sha": "853ffc7400bae30881a03adb74efc2ac3f48590f", "url": "https://api.github.com/repos/rust-lang/rust/commits/853ffc7400bae30881a03adb74efc2ac3f48590f", "html_url": "https://github.com/rust-lang/rust/commit/853ffc7400bae30881a03adb74efc2ac3f48590f"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "db1a2a26a8903c21797fce7449b14749c400aec6", "filename": "library/std/src/sys/unix/stack_overflow.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fstack_overflow.rs?ref=3e4f95612e5e4d2c7e8e0a21b3ff703c580ac15c", "patch": "@@ -143,14 +143,15 @@ mod imp {\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n-        let stackp = mmap(\n-            ptr::null_mut(),\n-            SIGSTKSZ + page_size(),\n-            PROT_READ | PROT_WRITE,\n-            MAP_PRIVATE | MAP_ANON,\n-            -1,\n-            0,\n-        );\n+        // OpenBSD requires this flag for stack mapping\n+        // otherwise the said mapping will fail as a no-op on most systems\n+        // and has a different meaning on FreeBSD\n+        #[cfg(any(target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"linux\",))]\n+        let flags = MAP_PRIVATE | MAP_ANON | libc::MAP_STACK;\n+        #[cfg(not(any(target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"linux\",)))]\n+        let flags = MAP_PRIVATE | MAP_ANON;\n+        let stackp =\n+            mmap(ptr::null_mut(), SIGSTKSZ + page_size(), PROT_READ | PROT_WRITE, flags, -1, 0);\n         if stackp == MAP_FAILED {\n             panic!(\"failed to allocate an alternative stack: {}\", io::Error::last_os_error());\n         }"}]}