{"sha": "9f0b16b2bbadc091d1524b5556d8ed0249871346", "node_id": "C_kwDOAAsO6NoAKDlmMGIxNmIyYmJhZGMwOTFkMTUyNGI1NTU2ZDhlZDAyNDk4NzEzNDY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-19T04:35:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-19T04:35:35Z"}, "message": "Rollup merge of #110498 - kylematsuda:earlybinder-rpitit-tys, r=compiler-errors\n\nSwitch to `EarlyBinder` for `collect_return_position_impl_trait_in_trait_tys`\n\nPart of the work to finish https://github.com/rust-lang/rust/issues/105779.\n\nThis PR adds `EarlyBinder` to the return type of the `collect_return_position_impl_trait_in_trait_tys` query and removes `bound_return_position_impl_trait_in_trait_tys`.\n\nr? `@lcnr`", "tree": {"sha": "66c6646cea309d99fd192e1a38c279089bc620c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66c6646cea309d99fd192e1a38c279089bc620c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f0b16b2bbadc091d1524b5556d8ed0249871346", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkP2+XCRBK7hj4Ov3rIwAAW6kIAKFJXO8JGDCjXEFJ2exmE3Yp\n9s3M/Ljl/zYClEMfFanq7Ys58bw9QqMleEabFTE35QTPlTKJOVbVFy3/KftYDWvj\nQ/NZF6fDfIvAX1S/4kiEriZ981JlKXi3YhlWMCGO75OnepqiAM2+wazod+ZcLf7a\n3Z8Nmi3p7wiSMIYupFKi5iCmrhskrBJvP4vmwNUjFUHI3XyeWXmUS8kV1nLX8rLq\nalLtuo/Gz4WIbRm0GgBk0BCTvOBWJrMK4Wb9Ned86F9FAlSNUXURSntc8AhbLa3U\nETdzvTiN8Oz+h5Mcf0jD5+9KHPLrR7als4jb6dm6Hh4P4Pt2hy/IdR1x3aGxAf8=\n=cibN\n-----END PGP SIGNATURE-----\n", "payload": "tree 66c6646cea309d99fd192e1a38c279089bc620c6\nparent f20da94ccfc4b62a668dbaeb563e39452eb07a06\nparent 522bc5f817696c113a03a462a5dbec794263dfcb\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681878935 +0200\ncommitter GitHub <noreply@github.com> 1681878935 +0200\n\nRollup merge of #110498 - kylematsuda:earlybinder-rpitit-tys, r=compiler-errors\n\nSwitch to `EarlyBinder` for `collect_return_position_impl_trait_in_trait_tys`\n\nPart of the work to finish https://github.com/rust-lang/rust/issues/105779.\n\nThis PR adds `EarlyBinder` to the return type of the `collect_return_position_impl_trait_in_trait_tys` query and removes `bound_return_position_impl_trait_in_trait_tys`.\n\nr? `@lcnr`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f0b16b2bbadc091d1524b5556d8ed0249871346", "html_url": "https://github.com/rust-lang/rust/commit/9f0b16b2bbadc091d1524b5556d8ed0249871346", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f0b16b2bbadc091d1524b5556d8ed0249871346/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f20da94ccfc4b62a668dbaeb563e39452eb07a06", "url": "https://api.github.com/repos/rust-lang/rust/commits/f20da94ccfc4b62a668dbaeb563e39452eb07a06", "html_url": "https://github.com/rust-lang/rust/commit/f20da94ccfc4b62a668dbaeb563e39452eb07a06"}, {"sha": "522bc5f817696c113a03a462a5dbec794263dfcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/522bc5f817696c113a03a462a5dbec794263dfcb", "html_url": "https://github.com/rust-lang/rust/commit/522bc5f817696c113a03a462a5dbec794263dfcb"}], "stats": {"total": 38, "additions": 18, "deletions": 20}, "files": [{"sha": "fe87aae8ed1110810aa1a718825f2df102448498", "filename": "compiler/rustc_hir_analysis/src/check/compare_impl_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_impl_item.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -579,7 +579,7 @@ fn compare_asyncness<'tcx>(\n pub(super) fn collect_return_position_impl_trait_in_trait_tys<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     impl_m_def_id: LocalDefId,\n-) -> Result<&'tcx FxHashMap<DefId, Ty<'tcx>>, ErrorGuaranteed> {\n+) -> Result<&'tcx FxHashMap<DefId, ty::EarlyBinder<Ty<'tcx>>>, ErrorGuaranteed> {\n     let impl_m = tcx.opt_associated_item(impl_m_def_id.to_def_id()).unwrap();\n     let trait_m = tcx.opt_associated_item(impl_m.trait_item_def_id.unwrap()).unwrap();\n     let impl_trait_ref =\n@@ -782,14 +782,14 @@ pub(super) fn collect_return_position_impl_trait_in_trait_tys<'tcx>(\n                     })\n                 });\n                 debug!(%ty);\n-                collected_tys.insert(def_id, ty);\n+                collected_tys.insert(def_id, ty::EarlyBinder(ty));\n             }\n             Err(err) => {\n                 let reported = tcx.sess.delay_span_bug(\n                     return_span,\n                     format!(\"could not fully resolve: {ty} => {err:?}\"),\n                 );\n-                collected_tys.insert(def_id, tcx.ty_error(reported));\n+                collected_tys.insert(def_id, ty::EarlyBinder(tcx.ty_error(reported)));\n             }\n         }\n     }"}, {"sha": "f82fad474224be20ee4bdccf7a025590596504e5", "filename": "compiler/rustc_hir_analysis/src/collect/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Ftype_of.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -251,7 +251,7 @@ pub(super) fn type_of(tcx: TyCtxt<'_>, def_id: LocalDefId) -> ty::EarlyBinder<Ty\n         match tcx.collect_return_position_impl_trait_in_trait_tys(fn_def_id) {\n             Ok(map) => {\n                 let assoc_item = tcx.associated_item(def_id);\n-                return ty::EarlyBinder(map[&assoc_item.trait_item_def_id.unwrap()]);\n+                return map[&assoc_item.trait_item_def_id.unwrap()];\n             }\n             Err(_) => {\n                 return ty::EarlyBinder(tcx.ty_error_with_message("}, {"sha": "a6a34765324fe0929d2f0e7f23137fafa0f46bf4", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -416,7 +416,7 @@ define_tables! {\n     macro_definition: Table<DefIndex, LazyValue<ast::DelimArgs>>,\n     proc_macro: Table<DefIndex, MacroKind>,\n     deduced_param_attrs: Table<DefIndex, LazyArray<DeducedParamAttrs>>,\n-    trait_impl_trait_tys: Table<DefIndex, LazyValue<FxHashMap<DefId, Ty<'static>>>>,\n+    trait_impl_trait_tys: Table<DefIndex, LazyValue<FxHashMap<DefId, ty::EarlyBinder<Ty<'static>>>>>,\n     doc_link_resolutions: Table<DefIndex, LazyValue<DocLinkResMap>>,\n     doc_link_traits_in_scope: Table<DefIndex, LazyArray<DefId>>,\n }"}, {"sha": "60d7cf59d04702d675cca287076532adf4c278d7", "filename": "compiler/rustc_middle/src/arena.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Farena.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -114,7 +114,11 @@ macro_rules! arena_types {\n \n             [] dep_kind: rustc_middle::dep_graph::DepKindStruct<'tcx>,\n \n-            [decode] trait_impl_trait_tys: rustc_data_structures::fx::FxHashMap<rustc_hir::def_id::DefId, rustc_middle::ty::Ty<'tcx>>,\n+            [decode] trait_impl_trait_tys:\n+                rustc_data_structures::fx::FxHashMap<\n+                    rustc_hir::def_id::DefId,\n+                    rustc_middle::ty::EarlyBinder<rustc_middle::ty::Ty<'tcx>>\n+                >,\n             [] bit_set_u32: rustc_index::bit_set::BitSet<u32>,\n             [] external_constraints: rustc_middle::traits::solve::ExternalConstraintsData<'tcx>,\n             [decode] doc_link_resolutions: rustc_hir::def::DocLinkResMap,"}, {"sha": "7e26e05025ff15592c6e14d4dbc3d82e9a76fc7d", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -181,7 +181,7 @@ rustc_queries! {\n     }\n \n     query collect_return_position_impl_trait_in_trait_tys(key: DefId)\n-        -> Result<&'tcx FxHashMap<DefId, Ty<'tcx>>, ErrorGuaranteed>\n+        -> Result<&'tcx FxHashMap<DefId, ty::EarlyBinder<Ty<'tcx>>>, ErrorGuaranteed>\n     {\n         desc { \"comparing an impl and trait method signature, inferring any hidden `impl Trait` types in the process\" }\n         cache_on_disk_if { key.is_local() }"}, {"sha": "dbe2eebe3360417958e34211de1e52d7ac2af97e", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -694,13 +694,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         if visitor.found_recursion { Err(expanded_type) } else { Ok(expanded_type) }\n     }\n \n-    pub fn bound_return_position_impl_trait_in_trait_tys(\n-        self,\n-        def_id: DefId,\n-    ) -> ty::EarlyBinder<Result<&'tcx FxHashMap<DefId, Ty<'tcx>>, ErrorGuaranteed>> {\n-        ty::EarlyBinder(self.collect_return_position_impl_trait_in_trait_tys(def_id))\n-    }\n-\n     pub fn bound_explicit_item_bounds(\n         self,\n         def_id: DefId,"}, {"sha": "40869fdc467ddeef5fbbed15b77e51edb3883e26", "filename": "compiler/rustc_query_impl/src/on_disk_cache.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fon_disk_cache.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -807,7 +807,9 @@ impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>> for &'tcx UnordSet<LocalDefId>\n     }\n }\n \n-impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>> for &'tcx FxHashMap<DefId, Ty<'tcx>> {\n+impl<'a, 'tcx> Decodable<CacheDecoder<'a, 'tcx>>\n+    for &'tcx FxHashMap<DefId, ty::EarlyBinder<Ty<'tcx>>>\n+{\n     fn decode(d: &mut CacheDecoder<'a, 'tcx>) -> Self {\n         RefDecodable::decode(d)\n     }"}, {"sha": "5e042ffc6036744d89064a12f93b152ef7b70f1e", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f0b16b2bbadc091d1524b5556d8ed0249871346/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=9f0b16b2bbadc091d1524b5556d8ed0249871346", "patch": "@@ -2277,11 +2277,10 @@ fn confirm_impl_trait_in_trait_candidate<'tcx>(\n         obligation.param_env,\n         cause.clone(),\n         obligation.recursion_depth + 1,\n-        tcx.bound_return_position_impl_trait_in_trait_tys(impl_fn_def_id)\n-            .map_bound(|tys| {\n-                tys.map_or_else(|guar| tcx.ty_error(guar), |tys| tys[&obligation.predicate.def_id])\n-            })\n-            .subst(tcx, impl_fn_substs),\n+        tcx.collect_return_position_impl_trait_in_trait_tys(impl_fn_def_id).map_or_else(\n+            |guar| tcx.ty_error(guar),\n+            |tys| tys[&obligation.predicate.def_id].subst(tcx, impl_fn_substs),\n+        ),\n         &mut obligations,\n     );\n "}]}