{"sha": "62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyMTY2ZWQ5YzhjZDFiNDk1YmRkYzNmY2ZiMDJmNDhkM2ZhMGUwNDM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-01T08:58:18Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-01T08:59:17Z"}, "message": "Correctly implement atomic_nand_* intrinsics\n\nFixes #639", "tree": {"sha": "bf43cfd37d68eb4813b241e4db29d136d27f12ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf43cfd37d68eb4813b241e4db29d136d27f12ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043", "html_url": "https://github.com/rust-lang/rust/commit/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc914cd43b88794ae8d65534a2ba6c86336dcf8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc914cd43b88794ae8d65534a2ba6c86336dcf8a", "html_url": "https://github.com/rust-lang/rust/commit/bc914cd43b88794ae8d65534a2ba6c86336dcf8a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "8fee0fa457d93b09a5f32af4fde99a50733caa45", "filename": "src/intrinsics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=62166ed9c8cd1b495bddc3fcfb02f48d3fa0e043", "patch": "@@ -810,7 +810,12 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             atomic_binop_return_old! (fx, band<T>(ptr, src) -> ret);\n         };\n         _ if intrinsic.starts_with(\"atomic_nand\"), <T> (v ptr, v src) {\n-            atomic_binop_return_old! (fx, band_not<T>(ptr, src) -> ret);\n+            let clif_ty = fx.clif_type(T).unwrap();\n+            let old = fx.bcx.ins().load(clif_ty, MemFlags::new(), ptr, 0);\n+            let and = fx.bcx.ins().band(old, src);\n+            let new = fx.bcx.ins().bnot(and);\n+            fx.bcx.ins().store(MemFlags::new(), new, ptr, 0);\n+            ret.write_cvalue(fx, CValue::by_val(old, fx.layout_of(T)));\n         };\n         _ if intrinsic.starts_with(\"atomic_or\"), <T> (v ptr, v src) {\n             atomic_binop_return_old! (fx, bor<T>(ptr, src) -> ret);"}]}