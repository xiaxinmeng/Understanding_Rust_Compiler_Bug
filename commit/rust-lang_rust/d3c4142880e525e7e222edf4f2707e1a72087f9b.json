{"sha": "d3c4142880e525e7e222edf4f2707e1a72087f9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzQxNDI4ODBlNTI1ZTdlMjIyZWRmNGYyNzA3ZTFhNzIwODdmOWI=", "commit": {"author": {"name": "Maik Klein", "email": "maikklein@googlemail.com", "date": "2017-10-27T08:55:31Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-18T15:08:49Z"}, "message": "Fix some comments to refer to `MonoItem`", "tree": {"sha": "c59fb7eea0eed09276fca23552b0e9a33ccb9fb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c59fb7eea0eed09276fca23552b0e9a33ccb9fb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c4142880e525e7e222edf4f2707e1a72087f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c4142880e525e7e222edf4f2707e1a72087f9b", "html_url": "https://github.com/rust-lang/rust/commit/d3c4142880e525e7e222edf4f2707e1a72087f9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c4142880e525e7e222edf4f2707e1a72087f9b/comments", "author": {"login": "MaikKlein", "id": 1994306, "node_id": "MDQ6VXNlcjE5OTQzMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1994306?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaikKlein", "html_url": "https://github.com/MaikKlein", "followers_url": "https://api.github.com/users/MaikKlein/followers", "following_url": "https://api.github.com/users/MaikKlein/following{/other_user}", "gists_url": "https://api.github.com/users/MaikKlein/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaikKlein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaikKlein/subscriptions", "organizations_url": "https://api.github.com/users/MaikKlein/orgs", "repos_url": "https://api.github.com/users/MaikKlein/repos", "events_url": "https://api.github.com/users/MaikKlein/events{/privacy}", "received_events_url": "https://api.github.com/users/MaikKlein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c06e3aa446aa7f6681bd3ffc2a7078f43bab5ded", "url": "https://api.github.com/repos/rust-lang/rust/commits/c06e3aa446aa7f6681bd3ffc2a7078f43bab5ded", "html_url": "https://github.com/rust-lang/rust/commit/c06e3aa446aa7f6681bd3ffc2a7078f43bab5ded"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d6321c7577c9ced154714689bf3be1b57b5d53fa", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d3c4142880e525e7e222edf4f2707e1a72087f9b/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c4142880e525e7e222edf4f2707e1a72087f9b/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=d3c4142880e525e7e222edf4f2707e1a72087f9b", "patch": "@@ -842,7 +842,7 @@ fn create_fn_trans_item<'a, 'tcx>(instance: Instance<'tcx>) -> MonoItem<'tcx> {\n     MonoItem::Fn(instance)\n }\n \n-/// Creates a `TransItem` for each method that is referenced by the vtable for\n+/// Creates a `MonoItem` for each method that is referenced by the vtable for\n /// the given trait/impl pair.\n fn create_mono_items_for_vtable_methods<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                                   trait_ty: Ty<'tcx>,"}, {"sha": "a81808d8afc18f15090d619d878ed2cc01cbbfd4", "filename": "src/librustc_mir/monomorphize/item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d3c4142880e525e7e222edf4f2707e1a72087f9b/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c4142880e525e7e222edf4f2707e1a72087f9b/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fitem.rs?ref=d3c4142880e525e7e222edf4f2707e1a72087f9b", "patch": "@@ -58,7 +58,7 @@ pub fn linkage_by_name(name: &str) -> Option<Linkage> {\n /// Describes how a translation item will be instantiated in object files.\n #[derive(PartialEq, Eq, Clone, Copy, Debug, Hash)]\n pub enum InstantiationMode {\n-    /// There will be exactly one instance of the given TransItem. It will have\n+    /// There will be exactly one instance of the given MonoItem. It will have\n     /// external linkage so that it can be linked to from other codegen units.\n     GloballyShared {\n         /// In some compilation scenarios we may decide to take functions that\n@@ -75,7 +75,7 @@ pub enum InstantiationMode {\n         may_conflict: bool,\n     },\n \n-    /// Each codegen unit containing a reference to the given TransItem will\n+    /// Each codegen unit containing a reference to the given MonoItem will\n     /// have its own private copy of the function (with internal linkage).\n     LocalCopy,\n }\n@@ -229,7 +229,7 @@ impl<'a, 'tcx> MonoItemExt<'a, 'tcx> for MonoItem<'tcx> {\n }\n \n //=-----------------------------------------------------------------------------\n-// TransItem String Keys\n+// MonoItem String Keys\n //=-----------------------------------------------------------------------------\n \n // The code below allows for producing a unique string key for a trans item."}]}