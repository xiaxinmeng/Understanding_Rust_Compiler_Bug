{"sha": "934e37aeb4c3dfd220e044827b91dcc106dd331b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNGUzN2FlYjRjM2RmZDIyMGUwNDQ4MjdiOTFkY2MxMDZkZDMzMWI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-15T12:26:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-15T12:26:59Z"}, "message": "Rollup merge of #50632 - GuillaumeGomez:minification, r=ollie27\n\nAdd minification process\n\nr? @QuietMisdreavus", "tree": {"sha": "6a3d46248ee900492ef497569bbc6e6ab2c3b349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a3d46248ee900492ef497569bbc6e6ab2c3b349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/934e37aeb4c3dfd220e044827b91dcc106dd331b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa+tITCRBK7hj4Ov3rIwAAdHIIAGbjj/EzySn1kyfcN0D1Bw57\nMy+ssda3PsQn5nQZoXWU1hsOXs6ClKvI8mu6Hz9OanVAnQunqJlkZaaqUNemkeyL\nf5OXksjLdR1BF2/4z0tyBOkIkrLa7y4OZCdcUoxed+8L7WWEd+4NsGXf09egC3C/\nHY8E1EnUAnp5x7hopqp/aHkDI+mZy9BhjogeMRr8dW0xxcAFMsVugUye+nf22E1d\nAz8AdSdq4La9oM3eohbFt1mUFMrXiYZbTjTHjkSK6bvugcR2+g9Cr3szBYsABi+A\nGXqdyQi7bhGOfu5Q/ZyKbie4DjX2kNIfGbmc+4lMNDco1Kz2bGiQdDkjjVeP3Tc=\n=10ZU\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a3d46248ee900492ef497569bbc6e6ab2c3b349\nparent 91c648b9c1ea2a12882d0e1a643586c71f71bb11\nparent e2db0a5630a39fc1725cae1e804120cff75dc1cb\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1526387219 +0200\ncommitter GitHub <noreply@github.com> 1526387219 +0200\n\nRollup merge of #50632 - GuillaumeGomez:minification, r=ollie27\n\nAdd minification process\n\nr? @QuietMisdreavus\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/934e37aeb4c3dfd220e044827b91dcc106dd331b", "html_url": "https://github.com/rust-lang/rust/commit/934e37aeb4c3dfd220e044827b91dcc106dd331b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/934e37aeb4c3dfd220e044827b91dcc106dd331b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91c648b9c1ea2a12882d0e1a643586c71f71bb11", "url": "https://api.github.com/repos/rust-lang/rust/commits/91c648b9c1ea2a12882d0e1a643586c71f71bb11", "html_url": "https://github.com/rust-lang/rust/commit/91c648b9c1ea2a12882d0e1a643586c71f71bb11"}, {"sha": "e2db0a5630a39fc1725cae1e804120cff75dc1cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2db0a5630a39fc1725cae1e804120cff75dc1cb", "html_url": "https://github.com/rust-lang/rust/commit/e2db0a5630a39fc1725cae1e804120cff75dc1cb"}], "stats": {"total": 230, "additions": 170, "deletions": 60}, "files": [{"sha": "ce9fc63230d7cde2e59a38e38d92ec185806149e", "filename": "src/Cargo.lock", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -1198,6 +1198,14 @@ name = \"memoffset\"\n version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"minifier\"\n+version = \"0.0.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"regex 0.2.10 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"miniz-sys\"\n version = \"0.1.10\"\n@@ -2279,6 +2287,7 @@ dependencies = [\n name = \"rustdoc\"\n version = \"0.0.0\"\n dependencies = [\n+ \"minifier 0.0.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -3119,6 +3128,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum mdbook 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90b5a8d7e341ceee5db3882a06078d42661ddcfa2b3687319cc5da76ec4e782f\"\n \"checksum memchr 2.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"796fba70e76612589ed2ce7f45282f5af869e0fdd7cc6199fa1aa1f1d591ba9d\"\n \"checksum memoffset 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0f9dc261e2b62d7a622bf416ea3c5245cdd5d9a7fcc428c0d06804dfce1775b3\"\n+\"checksum minifier 0.0.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"26f3e36a4db1981b16567e4abfd6ddc3641bc9b950bdc868701f656bf9b74bdd\"\n \"checksum miniz-sys 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)\" = \"609ce024854aeb19a0ef7567d348aaa5a746b32fb72e336df7fcc16869d7e2b4\"\n \"checksum miow 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9224c91f82b3c47cf53dcf78dfaa20d6888fbcc5d272d5f2fcdf8a697f3c987d\"\n \"checksum nibble_vec 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c8d77f3db4bce033f4d04db08079b2ef1c3d02b44e86f25d08886fafa7756ffa\""}, {"sha": "96a2194eeeefda76809b53d0d986462a17ca6e71", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -10,3 +10,4 @@ path = \"lib.rs\"\n [dependencies]\n pulldown-cmark = { version = \"0.1.2\", default-features = false }\n tempdir = \"0.3\"\n+minifier = \"0.0.11\""}, {"sha": "ab3af73cf17474a699d44160ac5502782227b754", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -76,6 +76,8 @@ use html::item_type::ItemType;\n use html::markdown::{self, Markdown, MarkdownHtml, MarkdownSummaryLine};\n use html::{highlight, layout};\n \n+use minifier;\n+\n /// A pair of name and its optional document.\n pub type NameDoc = (String, Option<String>);\n \n@@ -513,7 +515,8 @@ pub fn run(mut krate: clean::Crate,\n            css_file_extension: Option<PathBuf>,\n            renderinfo: RenderInfo,\n            sort_modules_alphabetically: bool,\n-           themes: Vec<PathBuf>) -> Result<(), Error> {\n+           themes: Vec<PathBuf>,\n+           enable_minification: bool) -> Result<(), Error> {\n     let src_root = match krate.src {\n         FileName::Real(ref p) => match p.parent() {\n             Some(p) => p.to_path_buf(),\n@@ -665,7 +668,7 @@ pub fn run(mut krate: clean::Crate,\n     CACHE_KEY.with(|v| *v.borrow_mut() = cache.clone());\n     CURRENT_LOCATION_KEY.with(|s| s.borrow_mut().clear());\n \n-    write_shared(&cx, &krate, &*cache, index)?;\n+    write_shared(&cx, &krate, &*cache, index, enable_minification)?;\n \n     // And finally render the whole crate's documentation\n     cx.krate(krate)\n@@ -744,7 +747,8 @@ fn build_index(krate: &clean::Crate, cache: &mut Cache) -> String {\n fn write_shared(cx: &Context,\n                 krate: &clean::Crate,\n                 cache: &Cache,\n-                search_index: String) -> Result<(), Error> {\n+                search_index: String,\n+                enable_minification: bool) -> Result<(), Error> {\n     // Write out the shared files. Note that these are shared among all rustdoc\n     // docs placed in the output directory, so this needs to be a synchronized\n     // operation with respect to all other rustdocs running around.\n@@ -836,16 +840,20 @@ themePicker.onblur = handleThemeButtonsBlur;\n                        .join(\",\")).as_bytes(),\n     )?;\n \n-    write(cx.dst.join(&format!(\"main{}.js\", cx.shared.resource_suffix)),\n-                      include_bytes!(\"static/main.js\"))?;\n-    write(cx.dst.join(&format!(\"settings{}.js\", cx.shared.resource_suffix)),\n-                      include_bytes!(\"static/settings.js\"))?;\n+    write_minify(cx.dst.join(&format!(\"main{}.js\", cx.shared.resource_suffix)),\n+                 include_str!(\"static/main.js\"),\n+                 enable_minification)?;\n+    write_minify(cx.dst.join(&format!(\"settings{}.js\", cx.shared.resource_suffix)),\n+                 include_str!(\"static/settings.js\"),\n+                 enable_minification)?;\n \n     {\n         let mut data = format!(\"var resourcesSuffix = \\\"{}\\\";\\n\",\n-                               cx.shared.resource_suffix).into_bytes();\n-        data.extend_from_slice(include_bytes!(\"static/storage.js\"));\n-        write(cx.dst.join(&format!(\"storage{}.js\", cx.shared.resource_suffix)), &data)?;\n+                               cx.shared.resource_suffix);\n+        data.push_str(include_str!(\"static/storage.js\"));\n+        write_minify(cx.dst.join(&format!(\"storage{}.js\", cx.shared.resource_suffix)),\n+                     &data,\n+                     enable_minification)?;\n     }\n \n     if let Some(ref css) = cx.shared.css_file_extension {\n@@ -1042,6 +1050,14 @@ fn write(dst: PathBuf, contents: &[u8]) -> Result<(), Error> {\n     Ok(try_err!(fs::write(&dst, contents), &dst))\n }\n \n+fn write_minify(dst: PathBuf, contents: &str, enable_minification: bool) -> Result<(), Error> {\n+    if enable_minification {\n+        write(dst, minifier::js::minify(contents).as_bytes())\n+    } else {\n+        write(dst, contents.as_bytes())\n+    }\n+}\n+\n /// Takes a path to a source file and cleans the path to it. This canonicalizes\n /// things like \"..\" to components which preserve the \"top down\" hierarchy of a\n /// static HTML tree. Each component in the cleaned path will be passed as an"}, {"sha": "e0235bfc6945c38bf304ee47ee78423c1092c270", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -202,7 +202,7 @@\n                 onEach(e.getElementsByTagName('span'), function(i_e) {\n                     removeClass(i_e, 'line-highlighted');\n                 });\n-            })\n+            });\n             for (i = from; i <= to; ++i) {\n                 addClass(document.getElementById(i), 'line-highlighted');\n             }\n@@ -1972,7 +1972,7 @@\n               hasClass(next.nextElementSibling, 'docblock')))) {\n             insertAfter(toggle.cloneNode(true), e.childNodes[e.childNodes.length - 1]);\n         }\n-    }\n+    };\n     onEach(document.getElementsByClassName('method'), func);\n     onEach(document.getElementsByClassName('impl'), func);\n     onEach(document.getElementsByClassName('impl-items'), function(e) {"}, {"sha": "d4244bfdba075fd2e84666489ab15b37a9a85f2a", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -48,6 +48,7 @@ extern crate test as testing;\n extern crate rustc_errors as errors;\n extern crate pulldown_cmark;\n extern crate tempdir;\n+extern crate minifier;\n \n extern crate serialize as rustc_serialize; // used by deriving\n \n@@ -299,6 +300,11 @@ pub fn opts() -> Vec<RustcOptGroup> {\n                      \"How errors and other messages are produced\",\n                      \"human|json|short\")\n         }),\n+        unstable(\"disable-minification\", |o| {\n+             o.optflag(\"\",\n+                       \"disable-minification\",\n+                       \"Disable minification applied on JS files\")\n+        }),\n     ]\n }\n \n@@ -480,6 +486,7 @@ pub fn main_args(args: &[String]) -> isize {\n     let linker = matches.opt_str(\"linker\").map(PathBuf::from);\n     let sort_modules_alphabetically = !matches.opt_present(\"sort-modules-by-appearance\");\n     let resource_suffix = matches.opt_str(\"resource-suffix\");\n+    let enable_minification = !matches.opt_present(\"disable-minification\");\n \n     let edition = matches.opt_str(\"edition\").unwrap_or(\"2015\".to_string());\n     let edition = match edition.parse() {\n@@ -523,7 +530,8 @@ pub fn main_args(args: &[String]) -> isize {\n                                   css_file_extension,\n                                   renderinfo,\n                                   sort_modules_alphabetically,\n-                                  themes)\n+                                  themes,\n+                                  enable_minification)\n                     .expect(\"failed to generate documentation\");\n                 0\n             }"}, {"sha": "bc4503903d665589ab3bf1c0beb887bf8eb795ed", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 122, "deletions": 47, "changes": 169, "blob_url": "https://github.com/rust-lang/rust/blob/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/934e37aeb4c3dfd220e044827b91dcc106dd331b/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=934e37aeb4c3dfd220e044827b91dcc106dd331b", "patch": "@@ -12,73 +12,148 @@ const fs = require('fs');\n \n const TEST_FOLDER = 'src/test/rustdoc-js/';\n \n+function getNextStep(content, pos, stop) {\n+    while (pos < content.length && content[pos] !== stop &&\n+           (content[pos] === ' ' || content[pos] === '\\t' || content[pos] === '\\n')) {\n+        pos += 1;\n+    }\n+    if (pos >= content.length) {\n+        return null;\n+    }\n+    if (content[pos] !== stop) {\n+        return pos * -1;\n+    }\n+    return pos;\n+}\n+\n // Stupid function extractor based on indent.\n function extractFunction(content, functionName) {\n-    var x = content.split('\\n');\n-    var in_func = false;\n     var indent = 0;\n-    var lines = [];\n-\n-    for (var i = 0; i < x.length; ++i) {\n-        if (in_func === false) {\n-            var splitter = \"function \" + functionName + \"(\";\n-            if (x[i].trim().startsWith(splitter)) {\n-                in_func = true;\n-                indent = x[i].split(splitter)[0].length;\n-                lines.push(x[i]);\n-            }\n-        } else {\n-            lines.push(x[i]);\n-            if (x[i].trim() === \"}\" && x[i].split(\"}\")[0].length === indent) {\n-                return lines.join(\"\\n\");\n+    var splitter = \"function \" + functionName + \"(\";\n+\n+    while (true) {\n+        var start = content.indexOf(splitter);\n+        if (start === -1) {\n+            break;\n+        }\n+        var pos = start;\n+        while (pos < content.length && content[pos] !== ')') {\n+            pos += 1;\n+        }\n+        if (pos >= content.length) {\n+            break;\n+        }\n+        pos = getNextStep(content, pos + 1, '{');\n+        if (pos === null) {\n+            break;\n+        } else if (pos < 0) {\n+            content = content.slice(-pos);\n+            continue;\n+        }\n+        while (pos < content.length) {\n+            if (content[pos] === '\"' || content[pos] === \"'\") {\n+                var stop = content[pos];\n+                var is_escaped = false;\n+                do {\n+                    if (content[pos] === '\\\\') {\n+                        pos += 2;\n+                    } else {\n+                        pos += 1;\n+                    }\n+                } while (pos < content.length &&\n+                         (content[pos] !== stop || content[pos - 1] === '\\\\'));\n+            } else if (content[pos] === '{') {\n+                indent += 1;\n+            } else if (content[pos] === '}') {\n+                indent -= 1;\n+                if (indent === 0) {\n+                    return content.slice(start, pos + 1);\n+                }\n             }\n+            pos += 1;\n         }\n+        content = content.slice(start + 1);\n     }\n     return null;\n }\n \n // Stupid function extractor for array.\n function extractArrayVariable(content, arrayName) {\n-    var x = content.split('\\n');\n-    var found_var = false;\n-    var lines = [];\n-\n-    for (var i = 0; i < x.length; ++i) {\n-        if (found_var === false) {\n-            var splitter = \"var \" + arrayName + \" = [\";\n-            if (x[i].trim().startsWith(splitter)) {\n-                found_var = true;\n-                i -= 1;\n-            }\n-        } else {\n-            lines.push(x[i]);\n-            if (x[i].endsWith('];')) {\n-                return lines.join(\"\\n\");\n+    var splitter = \"var \" + arrayName;\n+    while (true) {\n+        var start = content.indexOf(splitter);\n+        if (start === -1) {\n+            break;\n+        }\n+        var pos = getNextStep(content, start, '=');\n+        if (pos === null) {\n+            break;\n+        } else if (pos < 0) {\n+            content = content.slice(-pos);\n+            continue;\n+        }\n+        pos = getNextStep(content, pos, '[');\n+        if (pos === null) {\n+            break;\n+        } else if (pos < 0) {\n+            content = content.slice(-pos);\n+            continue;\n+        }\n+        while (pos < content.length) {\n+            if (content[pos] === '\"' || content[pos] === \"'\") {\n+                var stop = content[pos];\n+                do {\n+                    if (content[pos] === '\\\\') {\n+                        pos += 2;\n+                    } else {\n+                        pos += 1;\n+                    }\n+                } while (pos < content.length &&\n+                         (content[pos] !== stop || content[pos - 1] === '\\\\'));\n+            } else if (content[pos] === ']' &&\n+                       pos + 1 < content.length &&\n+                       content[pos + 1] === ';') {\n+                return content.slice(start, pos + 2);\n             }\n+            pos += 1;\n         }\n+        content = content.slice(start + 1);\n     }\n     return null;\n }\n \n // Stupid function extractor for variable.\n function extractVariable(content, varName) {\n-    var x = content.split('\\n');\n-    var found_var = false;\n-    var lines = [];\n-\n-    for (var i = 0; i < x.length; ++i) {\n-        if (found_var === false) {\n-            var splitter = \"var \" + varName + \" = \";\n-            if (x[i].trim().startsWith(splitter)) {\n-                found_var = true;\n-                i -= 1;\n-            }\n-        } else {\n-            lines.push(x[i]);\n-            if (x[i].endsWith(';')) {\n-                return lines.join(\"\\n\");\n+    var splitter = \"var \" + varName;\n+    while (true) {\n+        var start = content.indexOf(splitter);\n+        if (start === -1) {\n+            break;\n+        }\n+        var pos = getNextStep(content, start, '=');\n+        if (pos === null) {\n+            break;\n+        } else if (pos < 0) {\n+            content = content.slice(-pos);\n+            continue;\n+        }\n+        while (pos < content.length) {\n+            if (content[pos] === '\"' || content[pos] === \"'\") {\n+                var stop = content[pos];\n+                do {\n+                    if (content[pos] === '\\\\') {\n+                        pos += 2;\n+                    } else {\n+                        pos += 1;\n+                    }\n+                } while (pos < content.length &&\n+                         (content[pos] !== stop || content[pos - 1] === '\\\\'));\n+            } else if (content[pos] === ';') {\n+                return content.slice(start, pos + 1);\n             }\n+            pos += 1;\n         }\n+        content = content.slice(start + 1);\n     }\n     return null;\n }\n@@ -101,7 +176,7 @@ function loadThings(thingsToLoad, kindOfLoad, funcToCall, fileContent) {\n     for (var i = 0; i < thingsToLoad.length; ++i) {\n         var tmp = funcToCall(fileContent, thingsToLoad[i]);\n         if (tmp === null) {\n-            console.error('enable to find ' + kindOfLoad + ' \"' + thingsToLoad[i] + '\"');\n+            console.error('unable to find ' + kindOfLoad + ' \"' + thingsToLoad[i] + '\"');\n             process.exit(1);\n         }\n         content += tmp;"}]}