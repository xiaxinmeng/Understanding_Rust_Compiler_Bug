{"sha": "45afc214af3ad47be4252b82832a78e6280f3708", "node_id": "C_kwDOAAsO6NoAKDQ1YWZjMjE0YWYzYWQ0N2JlNDI1MmI4MjgzMmE3OGU2MjgwZjM3MDg", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-18T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-07-18T10:02:11Z"}, "message": "Update invalid atomic ordering lint\n\nThe restriction that success ordering must be at least as strong as its\nfailure ordering in compare-exchange operations was lifted in #98383.", "tree": {"sha": "d7ccbb1b15272ee39dc1e4c0fed074e020dfad01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7ccbb1b15272ee39dc1e4c0fed074e020dfad01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45afc214af3ad47be4252b82832a78e6280f3708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45afc214af3ad47be4252b82832a78e6280f3708", "html_url": "https://github.com/rust-lang/rust/commit/45afc214af3ad47be4252b82832a78e6280f3708", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45afc214af3ad47be4252b82832a78e6280f3708/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "880416180b0a9ee1141c07d4d17667edb77daebd", "url": "https://api.github.com/repos/rust-lang/rust/commits/880416180b0a9ee1141c07d4d17667edb77daebd", "html_url": "https://github.com/rust-lang/rust/commit/880416180b0a9ee1141c07d4d17667edb77daebd"}], "stats": {"total": 357, "additions": 60, "deletions": 297}, "files": [{"sha": "55e96e58e468866e7b93f1e265ee72d48250586f", "filename": "compiler/rustc_error_messages/locales/en-US/lint.ftl", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Flint.ftl?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -247,11 +247,6 @@ lint-atomic-ordering-invalid = `{$method}`'s failure ordering may not be `Releas\n     .label = invalid failure ordering\n     .help = consider using `Acquire` or `Relaxed` failure ordering instead\n \n-lint-atomic-ordering-invalid-fail-success = `{$method}`'s success ordering must be at least as strong as its failure ordering\n-    .fail-label = `{$fail_ordering}` failure ordering\n-    .success-label = `{$success_ordering}` success ordering\n-    .suggestion = consider using `{$success_suggestion}` success ordering instead\n-\n lint-unused-op = unused {$op} that must be used\n     .label = the {$op} produces a value\n     .suggestion = use `let _ = ...` to ignore the resulting value"}, {"sha": "5c07afeb7aa8f73f0794bbb3ba26c5a55131ee2f", "filename": "compiler/rustc_lint/src/types.rs", "status": "modified", "additions": 3, "deletions": 38, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Ftypes.rs?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -1434,10 +1434,6 @@ declare_lint! {\n     /// - Passing `Ordering::Release` or `Ordering::AcqRel` as the failure\n     ///   ordering for any of `AtomicType::compare_exchange`,\n     ///   `AtomicType::compare_exchange_weak`, or `AtomicType::fetch_update`.\n-    ///\n-    /// - Passing in a pair of orderings to `AtomicType::compare_exchange`,\n-    ///   `AtomicType::compare_exchange_weak`, or `AtomicType::fetch_update`\n-    ///   where the failure ordering is stronger than the success ordering.\n     INVALID_ATOMIC_ORDERING,\n     Deny,\n     \"usage of invalid atomic ordering in atomic operations and memory fences\"\n@@ -1544,9 +1540,9 @@ impl InvalidAtomicOrdering {\n         let Some((method, args)) = Self::inherent_atomic_method_call(cx, expr, &[sym::fetch_update, sym::compare_exchange, sym::compare_exchange_weak])\n             else {return };\n \n-        let (success_order_arg, fail_order_arg) = match method {\n-            sym::fetch_update => (&args[1], &args[2]),\n-            sym::compare_exchange | sym::compare_exchange_weak => (&args[3], &args[4]),\n+        let fail_order_arg = match method {\n+            sym::fetch_update => &args[2],\n+            sym::compare_exchange | sym::compare_exchange_weak => &args[4],\n             _ => return,\n         };\n \n@@ -1568,37 +1564,6 @@ impl InvalidAtomicOrdering {\n                 InvalidAtomicOrderingDiag { method, fail_order_arg_span: fail_order_arg.span },\n             );\n         }\n-\n-        let Some(success_ordering) = Self::match_ordering(cx, success_order_arg) else { return };\n-\n-        if matches!(\n-            (success_ordering, fail_ordering),\n-            (sym::Relaxed | sym::Release, sym::Acquire)\n-                | (sym::Relaxed | sym::Release | sym::Acquire | sym::AcqRel, sym::SeqCst)\n-        ) {\n-            let success_suggestion =\n-                if success_ordering == sym::Release && fail_ordering == sym::Acquire {\n-                    sym::AcqRel\n-                } else {\n-                    fail_ordering\n-                };\n-            cx.struct_span_lint(INVALID_ATOMIC_ORDERING, success_order_arg.span, |diag| {\n-                diag.build(fluent::lint::atomic_ordering_invalid_fail_success)\n-                    .set_arg(\"method\", method)\n-                    .set_arg(\"fail_ordering\", fail_ordering)\n-                    .set_arg(\"success_ordering\", success_ordering)\n-                    .set_arg(\"success_suggestion\", success_suggestion)\n-                    .span_label(fail_order_arg.span, fluent::lint::fail_label)\n-                    .span_label(success_order_arg.span, fluent::lint::success_label)\n-                    .span_suggestion_short(\n-                        success_order_arg.span,\n-                        fluent::lint::suggestion,\n-                        format!(\"std::sync::atomic::Ordering::{success_suggestion}\"),\n-                        Applicability::MaybeIncorrect,\n-                    )\n-                    .emit();\n-            });\n-        }\n     }\n }\n "}, {"sha": "63204c725c3dc27e035c4ecba032ec83708d18c5", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange-weak.rs", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -9,11 +9,17 @@ fn main() {\n \n     // Allowed ordering combos\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Relaxed);\n-    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Relaxed);\n+    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Acquire);\n+    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Relaxed);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Acquire);\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::SeqCst);\n@@ -41,22 +47,4 @@ fn main() {\n     //~^ ERROR `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Release);\n     //~^ ERROR `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`\n-\n-    // Release success order forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n-\n-    // Relaxed success order also forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n-\n-    // Acquire/AcqRel forbids failure order of SeqCst\n-    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange_weak`'s success ordering must be at least as strong as\n }"}, {"sha": "021654cf35eed92b195a3b10b62e9e46a2824271", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange-weak.stderr", "status": "modified", "additions": 11, "deletions": 65, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -1,5 +1,5 @@\n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:22:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:28:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Relaxed, Ordering::AcqRel);\n    |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n@@ -8,130 +8,76 @@ LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Relaxed, Ordering:\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:24:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:30:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::AcqRel);\n    |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:26:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:32:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::AcqRel);\n    |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:28:66\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:34:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::AcqRel);\n    |                                                                  ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:30:66\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:36:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::SeqCst, Ordering::AcqRel);\n    |                                                                  ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:34:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:40:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Release);\n    |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:36:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:42:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Release);\n    |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:38:67\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:44:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Release);\n    |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:40:66\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:46:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Release);\n    |                                                                  ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange_weak`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange_weak` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:42:66\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:48:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Release);\n    |                                                                  ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:46:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n-   |                                                ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                                                |\n-   |                                                `Release` success ordering\n-   |                                                help: consider using `AcqRel` success ordering instead\n-\n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:48:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n-   |                                                ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                                |\n-   |                                                `Release` success ordering\n-   |                                                help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:52:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n-   |                                                ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                                |\n-   |                                                `Relaxed` success ordering\n-   |                                                help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:54:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n-   |                                                ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                                                |\n-   |                                                `Relaxed` success ordering\n-   |                                                help: consider using `Acquire` success ordering instead\n-\n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:58:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n-   |                                                ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                                |\n-   |                                                `Acquire` success ordering\n-   |                                                help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange_weak`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:60:48\n-   |\n-LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n-   |                                                ^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                                |\n-   |                                                `AcqRel` success ordering\n-   |                                                help: consider using `SeqCst` success ordering instead\n-\n-error: aborting due to 16 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "488d268eee81000e2c38375bf8e4b7d7bdc8b5ee", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange.rs", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -7,11 +7,17 @@ fn main() {\n \n     // Allowed ordering combos\n     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Relaxed);\n-    let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::Relaxed);\n+    let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Relaxed);\n-    let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::Relaxed);\n+    let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::Acquire);\n+    let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Relaxed);\n     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Acquire);\n     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::SeqCst);\n@@ -39,22 +45,4 @@ fn main() {\n     //~^ ERROR `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`\n     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Release);\n     //~^ ERROR `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`\n-\n-    // Release success order forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n-\n-    // Relaxed success order also forbids failure order of Acquire or SeqCst\n-    let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n-\n-    // Acquire/AcqRel forbids failure order of SeqCst\n-    let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n-    let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-    //~^ ERROR `compare_exchange`'s success ordering must be at least as strong as\n }"}, {"sha": "f6f8f88e88457c1eef9ed5f10edebccbc3915193", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange.stderr", "status": "modified", "additions": 11, "deletions": 65, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -1,5 +1,5 @@\n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:20:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:26:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::AcqRel);\n    |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n@@ -8,130 +8,76 @@ LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::AcqRel);\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:22:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:28:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::AcqRel);\n    |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:24:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:30:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::AcqRel);\n    |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:26:56\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:32:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::AcqRel);\n    |                                                        ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:28:56\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:34:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::AcqRel);\n    |                                                        ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:32:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:38:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Release);\n    |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:34:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:40:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::Release);\n    |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:36:57\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:42:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Release);\n    |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:38:56\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:44:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::Release);\n    |                                                        ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `compare_exchange`'s failure ordering may not be `Release` or `AcqRel`, since a failed `compare_exchange` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:40:56\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:46:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Release);\n    |                                                        ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:44:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n-   |                                      ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                                      |\n-   |                                      `Release` success ordering\n-   |                                      help: consider using `AcqRel` success ordering instead\n-\n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:46:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n-   |                                      ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                      |\n-   |                                      `Release` success ordering\n-   |                                      help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:50:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-   |                                      ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                      |\n-   |                                      `Relaxed` success ordering\n-   |                                      help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:52:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-   |                                      ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                                      |\n-   |                                      `Relaxed` success ordering\n-   |                                      help: consider using `Acquire` success ordering instead\n-\n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:56:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-   |                                      ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                      |\n-   |                                      `Acquire` success ordering\n-   |                                      help: consider using `SeqCst` success ordering instead\n-\n-error: `compare_exchange`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:58:38\n-   |\n-LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-   |                                      ^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                                      |\n-   |                                      `AcqRel` success ordering\n-   |                                      help: consider using `SeqCst` success ordering instead\n-\n-error: aborting due to 16 previous errors\n+error: aborting due to 10 previous errors\n "}, {"sha": "734b63324af257c56148a6c490a703fc9217c8e1", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-fetch-update.rs", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -7,11 +7,17 @@ fn main() {\n \n     // Allowed ordering combos\n     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Relaxed, |old| Some(old + 1));\n-    let _ = x.fetch_update(Ordering::Acquire, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::Acquire, Ordering::Relaxed, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Acquire, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::Release, Ordering::Relaxed, |old| Some(old + 1));\n-    let _ = x.fetch_update(Ordering::AcqRel, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::AcqRel, Ordering::Relaxed, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::AcqRel, Ordering::Acquire, |old| Some(old + 1));\n+    let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Relaxed, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Acquire, |old| Some(old + 1));\n     let _ = x.fetch_update(Ordering::SeqCst, Ordering::SeqCst, |old| Some(old + 1));\n@@ -40,21 +46,4 @@ fn main() {\n     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Release, |old| Some(old + 1));\n     //~^ ERROR `fetch_update`'s failure ordering may not be `Release` or `AcqRel`\n \n-    // Release success order forbids failure order of Acquire or SeqCst\n-    let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n-    let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n-\n-    // Relaxed success order also forbids failure order of Acquire or SeqCst\n-    let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n-    let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n-\n-    // Acquire/AcqRel forbids failure order of SeqCst\n-    let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n-    let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR `fetch_update`'s success ordering must be at least as strong as\n }"}, {"sha": "267b1c706ef17b824304c7eb7de524cbcd47cbb6", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-fetch-update.stderr", "status": "modified", "additions": 11, "deletions": 65, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45afc214af3ad47be4252b82832a78e6280f3708/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr?ref=45afc214af3ad47be4252b82832a78e6280f3708", "patch": "@@ -1,5 +1,5 @@\n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:20:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:26:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::AcqRel, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n@@ -8,130 +8,76 @@ LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::AcqRel, |old| Some(\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:22:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:28:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::AcqRel, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:24:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:30:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::AcqRel, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:26:46\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:32:46\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::AcqRel, |old| Some(old + 1));\n    |                                              ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:28:46\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:34:46\n    |\n LL |     let _ = x.fetch_update(Ordering::SeqCst, Ordering::AcqRel, |old| Some(old + 1));\n    |                                              ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:32:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:38:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Release, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:34:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:40:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::Release, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:36:47\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:42:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::Release, |old| Some(old + 1));\n    |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:38:46\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:44:46\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::Release, |old| Some(old + 1));\n    |                                              ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n error: `fetch_update`'s failure ordering may not be `Release` or `AcqRel`, since a failed `fetch_update` does not result in a write\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:40:46\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:46:46\n    |\n LL |     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Release, |old| Some(old + 1));\n    |                                              ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = help: consider using `Acquire` or `Relaxed` failure ordering instead\n \n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:44:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                            |\n-   |                            `Release` success ordering\n-   |                            help: consider using `AcqRel` success ordering instead\n-\n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:46:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                            |\n-   |                            `Release` success ordering\n-   |                            help: consider using `SeqCst` success ordering instead\n-\n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:50:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                            |\n-   |                            `Relaxed` success ordering\n-   |                            help: consider using `SeqCst` success ordering instead\n-\n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:52:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^^  ----------------- `Acquire` failure ordering\n-   |                            |\n-   |                            `Relaxed` success ordering\n-   |                            help: consider using `Acquire` success ordering instead\n-\n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:56:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                            |\n-   |                            `Acquire` success ordering\n-   |                            help: consider using `SeqCst` success ordering instead\n-\n-error: `fetch_update`'s success ordering must be at least as strong as its failure ordering\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:58:28\n-   |\n-LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));\n-   |                            ^^^^^^^^^^^^^^^^  ---------------- `SeqCst` failure ordering\n-   |                            |\n-   |                            `AcqRel` success ordering\n-   |                            help: consider using `SeqCst` success ordering instead\n-\n-error: aborting due to 16 previous errors\n+error: aborting due to 10 previous errors\n "}]}