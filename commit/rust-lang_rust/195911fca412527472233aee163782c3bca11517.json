{"sha": "195911fca412527472233aee163782c3bca11517", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NTkxMWZjYTQxMjUyNzQ3MjIzM2FlZTE2Mzc4MmMzYmNhMTE1MTc=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-26T02:08:29Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-04-26T18:07:57Z"}, "message": "tutorial-ffi: add example of a custom destructor", "tree": {"sha": "12917a1714b58003530e60ced4fac990a29c0039", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12917a1714b58003530e60ced4fac990a29c0039"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/195911fca412527472233aee163782c3bca11517", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/195911fca412527472233aee163782c3bca11517", "html_url": "https://github.com/rust-lang/rust/commit/195911fca412527472233aee163782c3bca11517", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/195911fca412527472233aee163782c3bca11517/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "721e1143a560e01694f88b53ddd9cfea1c6c7077", "url": "https://api.github.com/repos/rust-lang/rust/commits/721e1143a560e01694f88b53ddd9cfea1c6c7077", "html_url": "https://github.com/rust-lang/rust/commit/721e1143a560e01694f88b53ddd9cfea1c6c7077"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "127f81589234f8e2ae392105c0ec73968f5e9773", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/195911fca412527472233aee163782c3bca11517/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/195911fca412527472233aee163782c3bca11517/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=195911fca412527472233aee163782c3bca11517", "patch": "@@ -139,6 +139,74 @@ pub fn uncompress(src: &[u8]) -> Option<~[u8]> {\n For reference, the examples used here are also available as an [library on\n GitHub](https://github.com/thestinger/rust-snappy).\n \n+# Destructors\n+\n+Foreign libraries often hand off ownership of resources to the calling code,\n+which should be wrapped in a destructor to provide safety and guarantee their\n+release.\n+\n+A type with the same functionality as owned boxes can be implemented by\n+wrapping `malloc` and `free`:\n+\n+~~~~\n+use core::libc::{c_void, size_t, malloc, free};\n+\n+#[abi = \"rust-intrinsic\"]\n+extern \"rust-intrinsic\" mod rusti {\n+    fn init<T>() -> T;\n+}\n+\n+// a wrapper around the handle returned by the foreign code\n+pub struct Unique<T> {\n+    priv ptr: *mut T\n+}\n+\n+pub impl<'self, T: Owned> Unique<T> {\n+    fn new(value: T) -> Unique<T> {\n+        unsafe {\n+            let ptr = malloc(core::sys::size_of::<T>() as size_t) as *mut T;\n+            assert!(!ptr::is_null(ptr));\n+            *ptr = value;\n+            Unique{ptr: ptr}\n+        }\n+    }\n+\n+    // the 'self lifetime results in the same semantics as `&*x` with ~T\n+    fn borrow(&self) -> &'self T {\n+        unsafe { cast::transmute(self.ptr) }\n+    }\n+\n+    // the 'self lifetime results in the same semantics as `&mut *x` with ~T\n+    fn borrow_mut(&mut self) -> &'self mut T {\n+        unsafe { cast::transmute(self.ptr) }\n+    }\n+}\n+\n+#[unsafe_destructor]\n+impl<T: Owned> Drop for Unique<T> {\n+    fn finalize(&self) {\n+        unsafe {\n+            let mut x = rusti::init(); // dummy value to swap in\n+            x <-> *self.ptr; // moving the object out is needed to call the destructor\n+            free(self.ptr as *c_void)\n+        }\n+    }\n+}\n+\n+// A comparison between the built-in ~ and this reimplementation\n+fn main() {\n+    {\n+        let mut x = ~5;\n+        *x = 10;\n+    } // `x` is freed here\n+\n+    {\n+        let mut y = Unique::new(5);\n+        *y.borrow_mut() = 10;\n+    } // `y` is freed here\n+}\n+~~~~\n+\n # Linking\n \n In addition to the `#[link_args]` attribute for explicitly passing arguments to the linker, an"}]}