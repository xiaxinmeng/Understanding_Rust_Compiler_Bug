{"sha": "fdfbf7c68b7372474003fe3fe0abff0c22103bd8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZmJmN2M2OGI3MzcyNDc0MDAzZmUzZmUwYWJmZjBjMjIxMDNiZDg=", "commit": {"author": {"name": "Lokathor", "email": "zefria@gmail.com", "date": "2020-09-27T16:55:49Z"}, "committer": {"name": "Lokathor", "email": "zefria@gmail.com", "date": "2020-09-27T16:55:49Z"}, "message": "resolve https://github.com/rust-lang/stdsimd/pull/8#discussion_r495584133", "tree": {"sha": "afe92cee4f8e0f69a8774375f5d77d5fe9510455", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afe92cee4f8e0f69a8774375f5d77d5fe9510455"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdfbf7c68b7372474003fe3fe0abff0c22103bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdfbf7c68b7372474003fe3fe0abff0c22103bd8", "html_url": "https://github.com/rust-lang/rust/commit/fdfbf7c68b7372474003fe3fe0abff0c22103bd8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdfbf7c68b7372474003fe3fe0abff0c22103bd8/comments", "author": {"login": "Lokathor", "id": 5456384, "node_id": "MDQ6VXNlcjU0NTYzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5456384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lokathor", "html_url": "https://github.com/Lokathor", "followers_url": "https://api.github.com/users/Lokathor/followers", "following_url": "https://api.github.com/users/Lokathor/following{/other_user}", "gists_url": "https://api.github.com/users/Lokathor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lokathor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lokathor/subscriptions", "organizations_url": "https://api.github.com/users/Lokathor/orgs", "repos_url": "https://api.github.com/users/Lokathor/repos", "events_url": "https://api.github.com/users/Lokathor/events{/privacy}", "received_events_url": "https://api.github.com/users/Lokathor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Lokathor", "id": 5456384, "node_id": "MDQ6VXNlcjU0NTYzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5456384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lokathor", "html_url": "https://github.com/Lokathor", "followers_url": "https://api.github.com/users/Lokathor/followers", "following_url": "https://api.github.com/users/Lokathor/following{/other_user}", "gists_url": "https://api.github.com/users/Lokathor/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lokathor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lokathor/subscriptions", "organizations_url": "https://api.github.com/users/Lokathor/orgs", "repos_url": "https://api.github.com/users/Lokathor/repos", "events_url": "https://api.github.com/users/Lokathor/events{/privacy}", "received_events_url": "https://api.github.com/users/Lokathor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "656312e33c529ba78a483e1532a6c6ae044a2003", "url": "https://api.github.com/repos/rust-lang/rust/commits/656312e33c529ba78a483e1532a6c6ae044a2003", "html_url": "https://github.com/rust-lang/rust/commit/656312e33c529ba78a483e1532a6c6ae044a2003"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "a39243170fc5185dfbb304b51553dfff8e2f92fe", "filename": "beginners-guide.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fdfbf7c68b7372474003fe3fe0abff0c22103bd8/beginners-guide.md", "raw_url": "https://github.com/rust-lang/rust/raw/fdfbf7c68b7372474003fe3fe0abff0c22103bd8/beginners-guide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/beginners-guide.md?ref=fdfbf7c68b7372474003fe3fe0abff0c22103bd8", "patch": "@@ -33,7 +33,7 @@ SIMD has a few special vocabulary terms you should know:\n \n When using SIMD, you should be familiar with the CPU feature set that you're targeting.\n \n-On `arm` and `aarch64` it's fairly simple. There's just one CPU feature that controls if SIMD is available: `neon` (or \"NEON\", all caps, as the ARM docs often put it). Neon registers are 128-bit, but they can also operate as 64-bit (the high lanes are just zeroed out).\n+On `arm` and `aarch64` it's fairly simple. There's just one CPU feature that controls if SIMD is available: `neon` (or \"NEON\", all caps, as the ARM docs often put it). Neon registers can be used as 64-bit or 128-bit. When doing 128-bit operations it just uses two 64-bit registers as a single 128-bit register.\n \n > By default, the `aarch64`, `arm`, and `thumb` Rust targets generally do not enable `neon` unless it's in the target string.\n \n@@ -42,6 +42,8 @@ On `x86` and `x86_64` it's slightly more complicated. The SIMD support is split\n * 256-bit (mostly): `avx`, `avx2`, `fma`\n * 512-bit (mostly): a *wide* range of `avx512` variations\n \n+The list notes the bit widths available at each feature level, though the operations of the more advanced features can generally be used with the smaller register sizes as well. For example, new operations introduced in `avx` generally have a 128-bit form as well as a 256-bit form. This means that even if you only do 128-bit work you can still benefit from the later feature levels.\n+\n > By default, the `i686` and `x86_64` Rust targets enable `sse` and `sse2`.\n \n ### Selecting Additional Target Features"}]}