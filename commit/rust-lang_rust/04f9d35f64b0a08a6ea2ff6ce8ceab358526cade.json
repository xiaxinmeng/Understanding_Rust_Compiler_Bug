{"sha": "04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZjlkMzVmNjRiMGEwOGE2ZWEyZmY2Y2U4Y2VhYjM1ODUyNmNhZGU=", "commit": {"author": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2016-01-27T19:23:59Z"}, "committer": {"name": "Florian Hartwig", "email": "florian.j.hartwig@gmail.com", "date": "2016-01-27T19:23:59Z"}, "message": "Add a lint for casts from char literals to u8", "tree": {"sha": "e66df6f70b8832dab0e85878a23bfb1ad0f1c68c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e66df6f70b8832dab0e85878a23bfb1ad0f1c68c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "html_url": "https://github.com/rust-lang/rust/commit/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/comments", "author": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhartwig", "id": 83271, "node_id": "MDQ6VXNlcjgzMjcx", "avatar_url": "https://avatars.githubusercontent.com/u/83271?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhartwig", "html_url": "https://github.com/fhartwig", "followers_url": "https://api.github.com/users/fhartwig/followers", "following_url": "https://api.github.com/users/fhartwig/following{/other_user}", "gists_url": "https://api.github.com/users/fhartwig/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhartwig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhartwig/subscriptions", "organizations_url": "https://api.github.com/users/fhartwig/orgs", "repos_url": "https://api.github.com/users/fhartwig/repos", "events_url": "https://api.github.com/users/fhartwig/events{/privacy}", "received_events_url": "https://api.github.com/users/fhartwig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f17b38bf26a2124c7c8ae9695c20abafafd53b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f17b38bf26a2124c7c8ae9695c20abafafd53b9", "html_url": "https://github.com/rust-lang/rust/commit/5f17b38bf26a2124c7c8ae9695c20abafafd53b9"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "731778db606212c09ef04c75f22a1052f3ccdda5", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "patch": "@@ -140,6 +140,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n     reg.register_late_lint_pass(box panic::PanicPass);\n     reg.register_late_lint_pass(box strings::StringLitAsBytes);\n     reg.register_late_lint_pass(box derive::Derive);\n+    reg.register_late_lint_pass(box types::CharLitAsU8);\n \n \n     reg.register_lint_group(\"clippy_pedantic\", vec!["}, {"sha": "42824c36ec661fcd34a64df85a38a07b3e901362", "filename": "src/types.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "patch": "@@ -517,3 +517,41 @@ impl<'v> Visitor<'v> for TypeComplexityVisitor {\n         self.nest -= sub_nest;\n     }\n }\n+\n+/// **What it does:** This lint points out expressions where a character literal is casted to u8 and suggests using a byte literal instead.\n+///\n+/// **Why is this bad?** In general, casting values to smaller types is error-prone and should be avoided where possible. In the particular case of converting a character literal to u8, it is easy to avoid by just using a byte literal instead. As an added bonus, `b'a'` is even slightly shorter than `'a' as u8`.\n+///\n+/// **Known problems:** None\n+///\n+/// **Example:** `'x' as u8`\n+declare_lint!(pub CHAR_LIT_AS_U8, Warn,\n+              \"Casting a character literal to u8\");\n+\n+pub struct CharLitAsU8;\n+\n+impl LintPass for CharLitAsU8 {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(CHAR_LIT_AS_U8)\n+    }\n+}\n+\n+impl LateLintPass for CharLitAsU8 {\n+    fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n+        use syntax::ast::{Lit_, UintTy};\n+\n+        if let ExprCast(ref e, _) = expr.node {\n+            if let ExprLit(ref l) = e.node {\n+                if let Lit_::LitChar(_) = l.node {\n+                    if ty::TyUint(UintTy::TyU8) == cx.tcx.expr_ty(expr).sty && !in_macro(cx, expr.span) {\n+                        let msg = \"casting character literal to u8.\";\n+                        let help = format!(\"Consider using a byte literal \\\n+                                            instead:\\nb{}\",\n+                                          snippet(cx, e.span, \"'x'\"));\n+                        span_help_and_lint(cx, CHAR_LIT_AS_U8, expr.span, msg, &help);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "4fca878c4daf2eadbc3b0aca1ab6903f36dfe2d4", "filename": "tests/compile-fail/char_lit_as_u8.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/tests%2Fcompile-fail%2Fchar_lit_as_u8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04f9d35f64b0a08a6ea2ff6ce8ceab358526cade/tests%2Fcompile-fail%2Fchar_lit_as_u8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fchar_lit_as_u8.rs?ref=04f9d35f64b0a08a6ea2ff6ce8ceab358526cade", "patch": "@@ -0,0 +1,8 @@\n+#![feature(plugin)]\n+#![plugin(clippy)]\n+\n+#![deny(char_lit_as_u8)]\n+#![allow(unused_variables)]\n+fn main() {\n+    let c = 'a' as u8; //~ERROR casting character literal\n+}"}]}