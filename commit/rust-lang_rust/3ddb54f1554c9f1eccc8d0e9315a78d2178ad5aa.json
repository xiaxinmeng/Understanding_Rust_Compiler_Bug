{"sha": "3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "node_id": "C_kwDOAAsO6NoAKDNkZGI1NGYxNTU0YzlmMWVjY2M4ZDBlOTMxNWE3OGQyMTc4YWQ1YWE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-07T11:55:29Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-01-23T10:35:21Z"}, "message": "Prefer queries over Compiler methods", "tree": {"sha": "eff819f5fac6a9c6595474841f435a9d4b5adf0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eff819f5fac6a9c6595474841f435a9d4b5adf0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "html_url": "https://github.com/rust-lang/rust/commit/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcc8b05d5cf792d44b854a0097e9654021ad3177", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcc8b05d5cf792d44b854a0097e9654021ad3177", "html_url": "https://github.com/rust-lang/rust/commit/bcc8b05d5cf792d44b854a0097e9654021ad3177"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "862931da00998295113ae80ba1ecc0c7a845eed7", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "patch": "@@ -296,9 +296,8 @@ fn run_compiler(\n \n             if let Some(ppm) = &sess.opts.pretty {\n                 if ppm.needs_ast_map() {\n-                    let expanded_crate = queries.expansion()?.borrow().0.clone();\n                     queries.global_ctxt()?.enter(|tcx| {\n-                        pretty::print_after_hir_lowering(tcx, &*expanded_crate, *ppm);\n+                        pretty::print_after_hir_lowering(tcx, *ppm);\n                         Ok(())\n                     })?;\n                 } else {"}, {"sha": "022051e008e32cfa192c60e88655f2c6f42670ae", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=3ddb54f1554c9f1eccc8d0e9315a78d2178ad5aa", "patch": "@@ -403,7 +403,7 @@ pub fn print_after_parsing(sess: &Session, krate: &ast::Crate, ppm: PpMode) {\n     write_or_print(&out, sess);\n }\n \n-pub fn print_after_hir_lowering<'tcx>(tcx: TyCtxt<'tcx>, krate: &ast::Crate, ppm: PpMode) {\n+pub fn print_after_hir_lowering<'tcx>(tcx: TyCtxt<'tcx>, ppm: PpMode) {\n     if ppm.needs_analysis() {\n         abort_on_err(print_with_analysis(tcx, ppm), tcx.sess);\n         return;\n@@ -420,7 +420,7 @@ pub fn print_after_hir_lowering<'tcx>(tcx: TyCtxt<'tcx>, krate: &ast::Crate, ppm\n                 let parse = &sess.parse_sess;\n                 pprust::print_crate(\n                     sess.source_map(),\n-                    krate,\n+                    &tcx.resolver_for_lowering(()).borrow().1,\n                     src_name,\n                     src,\n                     annotation.pp_ann(),\n@@ -433,7 +433,7 @@ pub fn print_after_hir_lowering<'tcx>(tcx: TyCtxt<'tcx>, krate: &ast::Crate, ppm\n \n         AstTree(PpAstTreeMode::Expanded) => {\n             debug!(\"pretty-printing expanded AST\");\n-            format!(\"{krate:#?}\")\n+            format!(\"{:#?}\", tcx.resolver_for_lowering(()).borrow().1)\n         }\n \n         Hir(s) => call_with_pp_support_hir(&s, tcx, move |annotation, hir_map| {"}]}