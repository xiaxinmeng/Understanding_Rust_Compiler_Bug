{"sha": "209991f8b29698f0dba9baa5e31d501bc7931229", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOTk5MWY4YjI5Njk4ZjBkYmE5YmFhNWUzMWQ1MDFiYzc5MzEyMjk=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-07-16T21:09:51Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-07-16T21:09:51Z"}, "message": "Don't assign `()` to `!` MIR locals", "tree": {"sha": "95cc8945a0b88740b2c7c1a666356afdcc6c291c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95cc8945a0b88740b2c7c1a666356afdcc6c291c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/209991f8b29698f0dba9baa5e31d501bc7931229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/209991f8b29698f0dba9baa5e31d501bc7931229", "html_url": "https://github.com/rust-lang/rust/commit/209991f8b29698f0dba9baa5e31d501bc7931229", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/209991f8b29698f0dba9baa5e31d501bc7931229/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e11379f3b4c376fbb9a6c4d44f3286ccc28d149", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e11379f3b4c376fbb9a6c4d44f3286ccc28d149", "html_url": "https://github.com/rust-lang/rust/commit/7e11379f3b4c376fbb9a6c4d44f3286ccc28d149"}], "stats": {"total": 27, "additions": 11, "deletions": 16}, "files": [{"sha": "eaef6bb37faa591a40ee9b4e4bafbeabe52eb474", "filename": "src/librustc_mir_build/build/expr/into.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/209991f8b29698f0dba9baa5e31d501bc7931229/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/209991f8b29698f0dba9baa5e31d501bc7931229/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Finto.rs?ref=209991f8b29698f0dba9baa5e31d501bc7931229", "patch": "@@ -188,10 +188,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                     let ptr_ty = ptr.ty;\n                     // Create an *internal* temp for the pointer, so that unsafety\n                     // checking won't complain about the raw pointer assignment.\n-                    let ptr_temp = this.local_decls.push(LocalDecl::with_source_info(\n-                        ptr_ty,\n-                        source_info,\n-                    ).internal());\n+                    let ptr_temp = this\n+                        .local_decls\n+                        .push(LocalDecl::with_source_info(ptr_ty, source_info).internal());\n                     let ptr_temp = Place::from(ptr_temp);\n                     let block = unpack!(this.into(ptr_temp, block, ptr));\n                     this.into(this.hir.tcx().mk_place_deref(ptr_temp), block, val)\n@@ -224,7 +223,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                                 Some((destination, success))\n                             },\n                             from_hir_call,\n-                            fn_span\n+                            fn_span,\n                         },\n                     );\n                     success.unit()\n@@ -387,15 +386,18 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             // These cases don't actually need a destination\n             ExprKind::Assign { .. }\n             | ExprKind::AssignOp { .. }\n-            | ExprKind::Continue { .. }\n-            | ExprKind::Break { .. }\n-            | ExprKind::LlvmInlineAsm { .. }\n-            | ExprKind::Return { .. } => {\n+            | ExprKind::LlvmInlineAsm { .. } => {\n                 unpack!(block = this.stmt_expr(block, expr, None));\n                 this.cfg.push_assign_unit(block, source_info, destination, this.hir.tcx());\n                 block.unit()\n             }\n \n+            ExprKind::Continue { .. } | ExprKind::Break { .. } | ExprKind::Return { .. } => {\n+                unpack!(block = this.stmt_expr(block, expr, None));\n+                // No assign, as these have type `!`.\n+                block.unit()\n+            }\n+\n             // Avoid creating a temporary\n             ExprKind::VarRef { .. }\n             | ExprKind::SelfRef"}, {"sha": "918dc5ec38701789962880be5ce27c1919b049c6", "filename": "src/test/mir-opt/issue-49232/rustc.main.mir_map.0.mir", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/209991f8b29698f0dba9baa5e31d501bc7931229/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "raw_url": "https://github.com/rust-lang/rust/raw/209991f8b29698f0dba9baa5e31d501bc7931229/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-49232%2Frustc.main.mir_map.0.mir?ref=209991f8b29698f0dba9baa5e31d501bc7931229", "patch": "@@ -79,13 +79,6 @@ fn main() -> () {\n     }\n \n     bb10: {\n-        _4 = const ();                   // scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n-                                         // ty::Const\n-                                         // + ty: ()\n-                                         // + val: Value(Scalar(<ZST>))\n-                                         // mir::Constant\n-                                         // + span: $DIR/issue-49232.rs:10:25: 10:30\n-                                         // + literal: Const { ty: (), val: Value(Scalar(<ZST>)) }\n         unreachable;                     // scope 0 at $DIR/issue-49232.rs:10:25: 10:30\n     }\n "}]}