{"sha": "1d53babd2f23439975518fda94d9122b15e779c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkNTNiYWJkMmYyMzQzOTk3NTUxOGZkYTk0ZDkxMjJiMTVlNzc5Yzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-25T01:36:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-25T01:36:30Z"}, "message": "auto merge of #6051 : thestinger/rust/iterator, r=catamorphism,pcwalton", "tree": {"sha": "9f4681eed0288f670fa1df04d911ca2046099497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f4681eed0288f670fa1df04d911ca2046099497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d53babd2f23439975518fda94d9122b15e779c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d53babd2f23439975518fda94d9122b15e779c9", "html_url": "https://github.com/rust-lang/rust/commit/1d53babd2f23439975518fda94d9122b15e779c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d53babd2f23439975518fda94d9122b15e779c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6f9a889b7807ce5d793c3005d2ef8d150dd838", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6f9a889b7807ce5d793c3005d2ef8d150dd838", "html_url": "https://github.com/rust-lang/rust/commit/0c6f9a889b7807ce5d793c3005d2ef8d150dd838"}, {"sha": "11d04d452fa8fd8adde10f8de902bfffc59ab704", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d04d452fa8fd8adde10f8de902bfffc59ab704", "html_url": "https://github.com/rust-lang/rust/commit/11d04d452fa8fd8adde10f8de902bfffc59ab704"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "8bbf843085809ffa1cb02349efc6601b5b5a3c09", "filename": "src/libcore/iterator.rs", "status": "modified", "additions": 37, "deletions": 8, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/1d53babd2f23439975518fda94d9122b15e779c9/src%2Flibcore%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d53babd2f23439975518fda94d9122b15e779c9/src%2Flibcore%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiterator.rs?ref=1d53babd2f23439975518fda94d9122b15e779c9", "patch": "@@ -312,6 +312,19 @@ impl<A, T: Iterator<A>> Iterator<A> for TakeIterator<T> {\n     }\n }\n \n+pub struct ScanIterator<'self, A, B, T, St> {\n+    priv iter: T,\n+    priv f: &'self fn(&mut St, A) -> Option<B>,\n+    state: St\n+}\n+\n+impl<'self, A, B, T: Iterator<A>, St> Iterator<B> for ScanIterator<'self, A, B, T, St> {\n+    #[inline]\n+    fn next(&mut self) -> Option<B> {\n+        self.iter.next().chain(|a| (self.f)(&mut self.state, a))\n+    }\n+}\n+\n pub struct UnfoldrIterator<'self, A, St> {\n     priv f: &'self fn(&mut St) -> Option<A>,\n     state: St\n@@ -335,16 +348,25 @@ impl<'self, A, St> Iterator<A> for UnfoldrIterator<'self, A, St> {\n     }\n }\n \n-pub struct ScanIterator<'self, A, B, T, St> {\n-    priv iter: T,\n-    priv f: &'self fn(&mut St, A) -> Option<B>,\n-    state: St\n+/// An infinite iterator starting at `start` and advancing by `step` with each iteration\n+pub struct Counter<A> {\n+    state: A,\n+    step: A\n }\n \n-impl<'self, A, B, T: Iterator<A>, St> Iterator<B> for ScanIterator<'self, A, B, T, St> {\n-    #[inline]\n-    fn next(&mut self) -> Option<B> {\n-        self.iter.next().chain(|a| (self.f)(&mut self.state, a))\n+pub impl<A> Counter<A> {\n+    #[inline(always)]\n+    fn new(start: A, step: A) -> Counter<A> {\n+        Counter{state: start, step: step}\n+    }\n+}\n+\n+impl<A: Add<A, A> + Clone> Iterator<A> for Counter<A> {\n+    #[inline(always)]\n+    fn next(&mut self) -> Option<A> {\n+        let result = self.state.clone();\n+        self.state = self.state.add(&self.step); // FIXME: #6050\n+        Some(result)\n     }\n }\n \n@@ -353,6 +375,13 @@ mod tests {\n     use super::*;\n     use prelude::*;\n \n+    #[test]\n+    fn test_counter_to_vec() {\n+        let mut it = Counter::new(0, 5).take(10);\n+        let xs = iter::iter_to_vec(|f| it.advance(f));\n+        assert_eq!(xs, ~[0, 5, 10, 15, 20, 25, 30, 35, 40, 45]);\n+    }\n+\n     #[test]\n     fn test_iterator_chain() {\n         let xs = [0u, 1, 2, 3, 4, 5];"}]}