{"sha": "d58555323ff5b6aaf7b95876f256a6f1d2fe0e03", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODU1NTMyM2ZmNWI2YWFmN2I5NTg3NmYyNTZhNmYxZDJmZTBlMDM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-01-07T21:47:35Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-01-08T03:48:16Z"}, "message": "Build LLVM with -static-libstdc++ on dist builds\n\nThis commit is intended on fixing a regression from #57286 where the\ndistributed LLVM shared library unfortunately depends on a dynamic copy\nof libstdc++, meaning we're no longer as binary compatible as we\nthought! This tweaks the build of LLVM as out distribution is slightly\ndifferent now, and is hoped to fix the issue.\n\nCloses #57426", "tree": {"sha": "5629105d5e2c2fc609b9e91e9b08b2c59a9a3dfd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5629105d5e2c2fc609b9e91e9b08b2c59a9a3dfd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03", "html_url": "https://github.com/rust-lang/rust/commit/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e70f27756a57b16a48bd7262e67fda01744701", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e70f27756a57b16a48bd7262e67fda01744701", "html_url": "https://github.com/rust-lang/rust/commit/59e70f27756a57b16a48bd7262e67fda01744701"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7ddfc385fc0fe9afd8af391d5601d774997657d5", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58555323ff5b6aaf7b95876f256a6f1d2fe0e03/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=d58555323ff5b6aaf7b95876f256a6f1d2fe0e03", "patch": "@@ -235,7 +235,7 @@ impl Step for Llvm {\n             cfg.define(\"PYTHON_EXECUTABLE\", python);\n         }\n \n-        configure_cmake(builder, target, &mut cfg, false);\n+        configure_cmake(builder, target, &mut cfg);\n \n         // FIXME: we don't actually need to build all LLVM tools and all LLVM\n         //        libraries here, e.g., we just want a few components and a few\n@@ -277,8 +277,7 @@ fn check_llvm_version(builder: &Builder, llvm_config: &Path) {\n \n fn configure_cmake(builder: &Builder,\n                    target: Interned<String>,\n-                   cfg: &mut cmake::Config,\n-                   building_dist_binaries: bool) {\n+                   cfg: &mut cmake::Config) {\n     if builder.config.ninja {\n         cfg.generator(\"Ninja\");\n     }\n@@ -363,10 +362,11 @@ fn configure_cmake(builder: &Builder,\n     cfg.build_arg(\"-j\").build_arg(builder.jobs().to_string());\n     cfg.define(\"CMAKE_C_FLAGS\", builder.cflags(target, GitRepo::Llvm).join(\" \"));\n     let mut cxxflags = builder.cflags(target, GitRepo::Llvm).join(\" \");\n-    if building_dist_binaries {\n-        if builder.config.llvm_static_stdcpp && !target.contains(\"windows\") {\n-            cxxflags.push_str(\" -static-libstdc++\");\n-        }\n+    if builder.config.llvm_static_stdcpp &&\n+        !target.contains(\"windows\") &&\n+        !target.contains(\"netbsd\")\n+    {\n+        cxxflags.push_str(\" -static-libstdc++\");\n     }\n     cfg.define(\"CMAKE_CXX_FLAGS\", cxxflags);\n     if let Some(ar) = builder.ar(target) {\n@@ -431,7 +431,7 @@ impl Step for Lld {\n         t!(fs::create_dir_all(&out_dir));\n \n         let mut cfg = cmake::Config::new(builder.src.join(\"src/tools/lld\"));\n-        configure_cmake(builder, target, &mut cfg, true);\n+        configure_cmake(builder, target, &mut cfg);\n \n         // This is an awful, awful hack. Discovered when we migrated to using\n         // clang-cl to compile LLVM/LLD it turns out that LLD, when built out of"}]}