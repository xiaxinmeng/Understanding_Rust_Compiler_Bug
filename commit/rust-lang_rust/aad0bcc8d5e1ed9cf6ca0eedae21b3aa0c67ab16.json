{"sha": "aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhZDBiY2M4ZDVlMWVkOWNmNmNhMGVlZGFlMjFiM2FhMGM2N2FiMTY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T22:53:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T22:53:47Z"}, "message": "rustc: Make AST tuple types use interior vectors", "tree": {"sha": "6b2cf72623e772a7e24cb71ba0fe4994d176fe4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b2cf72623e772a7e24cb71ba0fe4994d176fe4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "html_url": "https://github.com/rust-lang/rust/commit/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "401b6362d7f99a3cebc863cb1b8906d62e9ba79b", "url": "https://api.github.com/repos/rust-lang/rust/commits/401b6362d7f99a3cebc863cb1b8906d62e9ba79b", "html_url": "https://github.com/rust-lang/rust/commit/401b6362d7f99a3cebc863cb1b8906d62e9ba79b"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "0a90b657cc5671b547aab624563c37692f27ca00", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "patch": "@@ -315,11 +315,7 @@ fn ast_ty_to_ty(&ty::ctxt tcx, &ty_getter getter, &@ast::ty ast_ty) -> ty::t {\n             typ = ty::mk_chan(tcx, ast_ty_to_ty(tcx, getter, t));\n         }\n         case (ast::ty_tup(?fields)) {\n-            let ty::mt[] flds = ~[];\n-            ivec::reserve(flds, vec::len(fields));\n-            for (ast::mt field in fields) {\n-                flds += ~[ast_mt_to_mt(tcx, getter, field)];\n-            }\n+            auto flds = ivec::map(bind ast_mt_to_mt(tcx, getter, _), fields);\n             typ = ty::mk_tup(tcx, flds);\n         }\n         case (ast::ty_rec(?fields)) {"}, {"sha": "f785a00a69cded82c0a4f8e4c7dfe65ffd454f68", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "patch": "@@ -401,7 +401,7 @@ tag ty_ {\n     ty_task;\n     ty_port(@ty);\n     ty_chan(@ty);\n-    ty_tup(vec[mt]);\n+    ty_tup(mt[]);\n     ty_rec(vec[ty_field]);\n     ty_fn(proto, vec[ty_arg], @ty, controlflow, vec[@constr]);\n     ty_obj(vec[ty_method]);"}, {"sha": "ae102027f0a45fe734be7a565e70c71bb56bc948", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "patch": "@@ -520,8 +520,8 @@ fn parse_ty(&parser p) -> @ast::ty {\n         expect(p, token::RBRACKET);\n     } else if (eat_word(p, \"tup\")) {\n         auto elems =\n-            parse_seq(token::LPAREN, token::RPAREN, some(token::COMMA),\n-                      parse_mt, p);\n+            parse_seq_ivec(token::LPAREN, token::RPAREN, some(token::COMMA),\n+                           parse_mt, p);\n         hi = elems.span.hi;\n         t = ast::ty_tup(elems.node);\n     } else if (eat_word(p, \"rec\")) {"}, {"sha": "83f27f7560f199ce688cab985db0e34e815995ac", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=aad0bcc8d5e1ed9cf6ca0eedae21b3aa0c67ab16", "patch": "@@ -301,7 +301,7 @@ fn print_type(&ps s, &ast::ty ty) {\n         case (ast::ty_tup(?elts)) {\n             word(s.s, \"tup\");\n             popen(s);\n-            commasep(s, inconsistent, elts, print_mt);\n+            commasep_ivec(s, inconsistent, elts, print_mt);\n             pclose(s);\n         }\n         case (ast::ty_rec(?fields)) {"}]}