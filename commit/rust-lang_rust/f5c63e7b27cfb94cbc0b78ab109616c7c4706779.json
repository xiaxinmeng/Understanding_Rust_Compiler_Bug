{"sha": "f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YzYzZTdiMjdjZmI5NGNiYzBiNzhhYjEwOTYxNmM3YzQ3MDY3Nzk=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-29T10:57:30Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-12-29T15:21:55Z"}, "message": "Introduce librustc/middle/mod.rs", "tree": {"sha": "e404c02acadba66d27c1956495757deed1012c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e404c02acadba66d27c1956495757deed1012c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "html_url": "https://github.com/rust-lang/rust/commit/f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5c63e7b27cfb94cbc0b78ab109616c7c4706779/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57681628f9138a76302d0eb41cac69c44b00f75a", "url": "https://api.github.com/repos/rust-lang/rust/commits/57681628f9138a76302d0eb41cac69c44b00f75a", "html_url": "https://github.com/rust-lang/rust/commit/57681628f9138a76302d0eb41cac69c44b00f75a"}], "stats": {"total": 75, "additions": 36, "deletions": 39}, "files": [{"sha": "76588dfa5e25e041afde0d71cb5873be8ff0a8b9", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 39, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f5c63e7b27cfb94cbc0b78ab109616c7c4706779/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c63e7b27cfb94cbc0b78ab109616c7c4706779/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "patch": "@@ -95,45 +95,7 @@ pub mod hir;\n pub mod ich;\n pub mod infer;\n pub mod lint;\n-\n-pub mod middle {\n-    pub mod cstore;\n-    pub mod dependency_format;\n-    pub mod exported_symbols;\n-    pub mod free_region;\n-    pub mod lang_items;\n-    pub mod lib_features {\n-        use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-        use syntax::symbol::Symbol;\n-\n-        #[derive(HashStable)]\n-        pub struct LibFeatures {\n-            // A map from feature to stabilisation version.\n-            pub stable: FxHashMap<Symbol, Symbol>,\n-            pub unstable: FxHashSet<Symbol>,\n-        }\n-\n-        impl LibFeatures {\n-            pub fn to_vec(&self) -> Vec<(Symbol, Option<Symbol>)> {\n-                let mut all_features: Vec<_> = self\n-                    .stable\n-                    .iter()\n-                    .map(|(f, s)| (*f, Some(*s)))\n-                    .chain(self.unstable.iter().map(|f| (*f, None)))\n-                    .collect();\n-                all_features.sort_unstable_by_key(|f| f.0.as_str());\n-                all_features\n-            }\n-        }\n-    }\n-    pub mod privacy;\n-    pub mod recursion_limit;\n-    pub mod region;\n-    pub mod resolve_lifetime;\n-    pub mod stability;\n-    pub mod weak_lang_items;\n-}\n-\n+pub mod middle;\n pub mod mir;\n pub use rustc_session as session;\n pub mod traits;"}, {"sha": "030bcf3bf42314d9660e8a10276e02ba9d9b44bd", "filename": "src/librustc/middle/mod.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f5c63e7b27cfb94cbc0b78ab109616c7c4706779/src%2Flibrustc%2Fmiddle%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c63e7b27cfb94cbc0b78ab109616c7c4706779/src%2Flibrustc%2Fmiddle%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmod.rs?ref=f5c63e7b27cfb94cbc0b78ab109616c7c4706779", "patch": "@@ -0,0 +1,35 @@\n+pub mod cstore;\n+pub mod dependency_format;\n+pub mod exported_symbols;\n+pub mod free_region;\n+pub mod lang_items;\n+pub mod lib_features {\n+    use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+    use syntax::symbol::Symbol;\n+\n+    #[derive(HashStable)]\n+    pub struct LibFeatures {\n+        // A map from feature to stabilisation version.\n+        pub stable: FxHashMap<Symbol, Symbol>,\n+        pub unstable: FxHashSet<Symbol>,\n+    }\n+\n+    impl LibFeatures {\n+        pub fn to_vec(&self) -> Vec<(Symbol, Option<Symbol>)> {\n+            let mut all_features: Vec<_> = self\n+                .stable\n+                .iter()\n+                .map(|(f, s)| (*f, Some(*s)))\n+                .chain(self.unstable.iter().map(|f| (*f, None)))\n+                .collect();\n+            all_features.sort_unstable_by_key(|f| f.0.as_str());\n+            all_features\n+        }\n+    }\n+}\n+pub mod privacy;\n+pub mod recursion_limit;\n+pub mod region;\n+pub mod resolve_lifetime;\n+pub mod stability;\n+pub mod weak_lang_items;"}]}