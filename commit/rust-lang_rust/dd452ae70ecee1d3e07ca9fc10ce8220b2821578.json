{"sha": "dd452ae70ecee1d3e07ca9fc10ce8220b2821578", "node_id": "C_kwDOAAsO6NoAKGRkNDUyYWU3MGVjZWUxZDNlMDdjYTlmYzEwY2U4MjIwYjI4MjE1Nzg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-15T16:05:19Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-22T12:30:36Z"}, "message": "Simplify logic.", "tree": {"sha": "0e62620853d3a341191c64fcac4a24f3feb8a9c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e62620853d3a341191c64fcac4a24f3feb8a9c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd452ae70ecee1d3e07ca9fc10ce8220b2821578", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd452ae70ecee1d3e07ca9fc10ce8220b2821578", "html_url": "https://github.com/rust-lang/rust/commit/dd452ae70ecee1d3e07ca9fc10ce8220b2821578", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd452ae70ecee1d3e07ca9fc10ce8220b2821578/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "629cdb42d364a7de2845d24204c7018e1f9cd406", "url": "https://api.github.com/repos/rust-lang/rust/commits/629cdb42d364a7de2845d24204c7018e1f9cd406", "html_url": "https://github.com/rust-lang/rust/commit/629cdb42d364a7de2845d24204c7018e1f9cd406"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "3fdf556e15ea27f583f5e011aa605a8a8c990bfb", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd452ae70ecee1d3e07ca9fc10ce8220b2821578/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd452ae70ecee1d3e07ca9fc10ce8220b2821578/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=dd452ae70ecee1d3e07ca9fc10ce8220b2821578", "patch": "@@ -157,12 +157,10 @@ impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'_, 'tcx> {\n                 // Flood everything now, so we can use `insert_value_idx` directly later.\n                 state.flood(target.as_ref(), self.map());\n \n-                let target = self.map().find(target.as_ref());\n+                let Some(target) = self.map().find(target.as_ref()) else { return };\n \n-                let value_target = target\n-                    .and_then(|target| self.map().apply(target, TrackElem::Field(0_u32.into())));\n-                let overflow_target = target\n-                    .and_then(|target| self.map().apply(target, TrackElem::Field(1_u32.into())));\n+                let value_target = self.map().apply(target, TrackElem::Field(0_u32.into()));\n+                let overflow_target = self.map().apply(target, TrackElem::Field(1_u32.into()));\n \n                 if value_target.is_some() || overflow_target.is_some() {\n                     let (val, overflow) = self.binary_op(state, *op, left, right);"}]}