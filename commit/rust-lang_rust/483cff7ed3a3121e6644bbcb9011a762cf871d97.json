{"sha": "483cff7ed3a3121e6644bbcb9011a762cf871d97", "node_id": "C_kwDOAAsO6NoAKDQ4M2NmZjdlZDNhMzEyMWU2NjQ0YmJjYjkwMTFhNzYyY2Y4NzFkOTc", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-11-04T16:55:25Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-11-16T18:52:58Z"}, "message": "Add SourceMap::indentation_before.", "tree": {"sha": "ee7a7a22c781610b1424c4d542ee3d35d05b8747", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7a7a22c781610b1424c4d542ee3d35d05b8747"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/483cff7ed3a3121e6644bbcb9011a762cf871d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/483cff7ed3a3121e6644bbcb9011a762cf871d97", "html_url": "https://github.com/rust-lang/rust/commit/483cff7ed3a3121e6644bbcb9011a762cf871d97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/483cff7ed3a3121e6644bbcb9011a762cf871d97/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d914f17ca71a33a89b2dc3436fca51b1a091559e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d914f17ca71a33a89b2dc3436fca51b1a091559e", "html_url": "https://github.com/rust-lang/rust/commit/d914f17ca71a33a89b2dc3436fca51b1a091559e"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "7414d201f511d099b79cba7748fdfc8abe47fe79", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/483cff7ed3a3121e6644bbcb9011a762cf871d97/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/483cff7ed3a3121e6644bbcb9011a762cf871d97/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=483cff7ed3a3121e6644bbcb9011a762cf871d97", "patch": "@@ -593,14 +593,19 @@ impl SourceMap {\n     }\n \n     pub fn span_to_margin(&self, sp: Span) -> Option<usize> {\n-        match self.span_to_prev_source(sp) {\n-            Err(_) => None,\n-            Ok(source) => {\n-                let last_line = source.rsplit_once('\\n').unwrap_or((\"\", &source)).1;\n+        Some(self.indentation_before(sp)?.len())\n+    }\n \n-                Some(last_line.len() - last_line.trim_start().len())\n-            }\n-        }\n+    pub fn indentation_before(&self, sp: Span) -> Option<String> {\n+        self.span_to_source(sp, |src, start_index, _| {\n+            let before = &src[..start_index];\n+            let last_line = before.rsplit_once('\\n').map_or(before, |(_, last)| last);\n+            Ok(last_line\n+                .split_once(|c: char| !c.is_whitespace())\n+                .map_or(last_line, |(indent, _)| indent)\n+                .to_string())\n+        })\n+        .ok()\n     }\n \n     /// Returns the source snippet as `String` before the given `Span`."}]}