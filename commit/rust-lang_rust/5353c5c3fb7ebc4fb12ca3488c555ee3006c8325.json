{"sha": "5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNTNjNWMzZmI3ZWJjNGZiMTJjYTM0ODhjNTU1ZWUzMDA2YzgzMjU=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-05-14T01:54:46Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2021-05-14T01:54:46Z"}, "message": "Move `std::memchr` to `sys_common`", "tree": {"sha": "aec0f5bdfdab27d01b798ea692a5e4fd6fa381df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aec0f5bdfdab27d01b798ea692a5e4fd6fa381df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "html_url": "https://github.com/rust-lang/rust/commit/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17b60b8738735d8d64d03601d1dad4001d1e5733", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b60b8738735d8d64d03601d1dad4001d1e5733", "html_url": "https://github.com/rust-lang/rust/commit/17b60b8738735d8d64d03601d1dad4001d1e5733"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "a828a57fc8fb5cb04cc549d8e61437a1b64d860f", "filename": "library/std/src/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fc_str.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -10,7 +10,6 @@ use crate::error::Error;\n use crate::fmt::{self, Write};\n use crate::io;\n use crate::mem;\n-use crate::memchr;\n use crate::num::NonZeroU8;\n use crate::ops;\n use crate::os::raw::c_char;\n@@ -20,6 +19,7 @@ use crate::slice;\n use crate::str::{self, Utf8Error};\n use crate::sync::Arc;\n use crate::sys;\n+use crate::sys_common::memchr;\n \n /// A type representing an owned, C-compatible, nul-terminated string with no nul bytes in the\n /// middle."}, {"sha": "0175d2693e894c9361a33eeb626815311b3a1443", "filename": "library/std/src/io/buffered/linewritershim.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewritershim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewritershim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fbuffered%2Flinewritershim.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -1,5 +1,5 @@\n use crate::io::{self, BufWriter, IoSlice, Write};\n-use crate::memchr;\n+use crate::sys_common::memchr;\n \n /// Private helper struct for implementing the line-buffered writing logic.\n /// This shim temporarily wraps a BufWriter, and uses its internals to"}, {"sha": "47a414fad391ac616a65bd93dada49fbde4b736c", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -253,12 +253,12 @@ mod tests;\n \n use crate::cmp;\n use crate::fmt;\n-use crate::memchr;\n use crate::ops::{Deref, DerefMut};\n use crate::ptr;\n use crate::slice;\n use crate::str;\n use crate::sys;\n+use crate::sys_common::memchr;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::buffered::IntoInnerError;"}, {"sha": "3b86025cbba30fb6d9cf1150c1f6fe8e56dcf6eb", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -530,7 +530,6 @@ mod sys;\n pub mod alloc;\n \n // Private support modules\n-mod memchr;\n mod panicking;\n \n // The runtime entry point and a few unstable public functions used by the"}, {"sha": "40bd393098f5731d37db8127529f36883105d884", "filename": "library/std/src/sys/hermit/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fos.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -4,11 +4,11 @@ use crate::ffi::{CStr, OsStr, OsString};\n use crate::fmt;\n use crate::io;\n use crate::marker::PhantomData;\n-use crate::memchr;\n use crate::path::{self, PathBuf};\n use crate::str;\n use crate::sync::Mutex;\n use crate::sys::hermit::abi;\n+use crate::sys::memchr;\n use crate::sys::unsupported;\n use crate::sys_common::os_str_bytes::*;\n use crate::vec;"}, {"sha": "bbc4691d963c6405ff08bb5156fd4e092b082d97", "filename": "library/std/src/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fos.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -13,13 +13,13 @@ use crate::fmt;\n use crate::io;\n use crate::iter;\n use crate::mem;\n-use crate::memchr;\n use crate::path::{self, PathBuf};\n use crate::ptr;\n use crate::slice;\n use crate::str;\n use crate::sys::cvt;\n use crate::sys::fd;\n+use crate::sys::memchr;\n use crate::sys::rwlock::{RWLockReadGuard, StaticRWLock};\n use crate::sys_common::mutex::{StaticMutex, StaticMutexGuard};\n use crate::vec;"}, {"sha": "b219e87891264060f1ee3d87a0c9fcb617d0a010", "filename": "library/std/src/sys_common/memchr.rs", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -1,6 +1,8 @@\n // Original implementation taken from rust-memchr.\n // Copyright 2015 Andrew Gallant, bluss and Nicolas Koch\n \n+use crate::sys::memchr as sys;\n+\n #[cfg(test)]\n mod tests;\n \n@@ -25,7 +27,7 @@ mod tests;\n /// ```\n #[inline]\n pub fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n-    crate::sys::memchr::memchr(needle, haystack)\n+    sys::memchr(needle, haystack)\n }\n \n /// A safe interface to `memrchr`.\n@@ -45,5 +47,5 @@ pub fn memchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n /// ```\n #[inline]\n pub fn memrchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n-    crate::sys::memchr::memrchr(needle, haystack)\n+    sys::memrchr(needle, haystack)\n }", "previous_filename": "library/std/src/memchr.rs"}, {"sha": "557d749c7f63e2f2c3e0976f8b7abb610764bfc3", "filename": "library/std/src/sys_common/memchr/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmemchr%2Ftests.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "previous_filename": "library/std/src/memchr/tests.rs"}, {"sha": "5d2136ae74488d117599dc0e1bf8a3f393da18bf", "filename": "library/std/src/sys_common/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5353c5c3fb7ebc4fb12ca3488c555ee3006c8325/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fmod.rs?ref=5353c5c3fb7ebc4fb12ca3488c555ee3006c8325", "patch": "@@ -25,6 +25,7 @@ pub mod bytestring;\n pub mod condvar;\n pub mod fs;\n pub mod io;\n+pub mod memchr;\n pub mod mutex;\n // `doc` is required because `sys/mod.rs` imports `unix/ext/mod.rs` on Windows\n // when generating documentation."}]}