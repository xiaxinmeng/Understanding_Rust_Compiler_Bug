{"sha": "19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YjlhZDc0NDRhYTE3NDVhZjllMGMxZDI5ODI0OTdlNWMzOWIxNmU=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-12-01T03:05:32Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-12-04T09:16:22Z"}, "message": "Implement `Clone` for `[T; 0]` to `[T; 32]` if `T: Clone`", "tree": {"sha": "bbc43d634e80f85d98f3306ed44104ee39ff0731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbc43d634e80f85d98f3306ed44104ee39ff0731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "html_url": "https://github.com/rust-lang/rust/commit/19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19b9ad7444aa1745af9e0c1d2982497e5c39b16e/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f6fe3ee8ebd79109b919a9248cebe02195b2c3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6fe3ee8ebd79109b919a9248cebe02195b2c3d", "html_url": "https://github.com/rust-lang/rust/commit/4f6fe3ee8ebd79109b919a9248cebe02195b2c3d"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "1d8a78201df004ff4541bbb9c0f0ae1511a5cccd", "filename": "src/libcore/array.rs", "status": "modified", "additions": 29, "deletions": 8, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/19b9ad7444aa1745af9e0c1d2982497e5c39b16e/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19b9ad7444aa1745af9e0c1d2982497e5c39b16e/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "patch": "@@ -27,7 +27,7 @@ use default::Default;\n use fmt;\n use hash::{Hash, self};\n use iter::IntoIterator;\n-use marker::{Copy, Sized, Unsize};\n+use marker::{Sized, Unsize};\n use option::Option;\n use slice::{Iter, IterMut, SliceExt};\n \n@@ -94,13 +94,6 @@ macro_rules! array_impls {\n                 }\n             }\n \n-            #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-            impl<T:Copy> Clone for [T; $N] {\n-                fn clone(&self) -> [T; $N] {\n-                    *self\n-                }\n-            }\n-\n             #[stable(feature = \"rust1\", since = \"1.0.0\")]\n             impl<T: Hash> Hash for [T; $N] {\n                 fn hash<H: hash::Hasher>(&self, state: &mut H) {\n@@ -210,3 +203,31 @@ macro_rules! array_impl_default {\n }\n \n array_impl_default!{32, T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T T}\n+\n+macro_rules! array_impl_clone {\n+    {$n:expr, $t:ident $($ts:ident)*} => {\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        impl<T: Clone> Clone for [T; $n] {\n+            fn clone(&self) -> [T; $n] {\n+                let &[ref $t, $(ref $ts),*] = self;\n+                [$t.clone(), $($ts.clone()),*]\n+            }\n+        }\n+        array_impl_clone!{($n - 1), $($ts)*}\n+    };\n+    {$n:expr,} => {\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        impl<T: Clone> Clone for [T; 0] {\n+            fn clone(&self) -> [T; 0] {\n+                []\n+            }\n+        }\n+    };\n+}\n+\n+array_impl_clone! { 32,\n+    t00 t01 t02 t03 t04 t05 t06 t07 t08 t09\n+    t10 t11 t12 t13 t14 t15 t16 t17 t18 t19\n+    t20 t21 t22 t23 t24 t25 t26 t27 t28 t29\n+    t30 t31\n+}"}, {"sha": "d65f9d60710fbea72bd2cf70d6ccbb4da6731bda", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19b9ad7444aa1745af9e0c1d2982497e5c39b16e/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19b9ad7444aa1745af9e0c1d2982497e5c39b16e/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=19b9ad7444aa1745af9e0c1d2982497e5c39b16e", "patch": "@@ -85,6 +85,7 @@\n #![feature(unwind_attributes)]\n #![cfg_attr(stage0, feature(simd))]\n #![cfg_attr(not(stage0), feature(repr_simd, platform_intrinsics))]\n+#![feature(slice_patterns)]\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n "}]}