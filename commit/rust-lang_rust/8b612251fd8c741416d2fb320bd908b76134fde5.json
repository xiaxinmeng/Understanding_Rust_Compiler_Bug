{"sha": "8b612251fd8c741416d2fb320bd908b76134fde5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNjEyMjUxZmQ4Yzc0MTQxNmQyZmIzMjBiZDkwOGI3NjEzNGZkZTU=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-14T19:58:17Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-26T19:44:50Z"}, "message": "Remove extra inference test", "tree": {"sha": "2577629235b23c2ec51d412abf04059ba836f51b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2577629235b23c2ec51d412abf04059ba836f51b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b612251fd8c741416d2fb320bd908b76134fde5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b612251fd8c741416d2fb320bd908b76134fde5", "html_url": "https://github.com/rust-lang/rust/commit/8b612251fd8c741416d2fb320bd908b76134fde5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b612251fd8c741416d2fb320bd908b76134fde5/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44cf7b34fe1a486168590f7fead442f12602c419", "url": "https://api.github.com/repos/rust-lang/rust/commits/44cf7b34fe1a486168590f7fead442f12602c419", "html_url": "https://github.com/rust-lang/rust/commit/44cf7b34fe1a486168590f7fead442f12602c419"}], "stats": {"total": 26, "additions": 0, "deletions": 26}, "files": [{"sha": "f450aef9fd08c1f09a3fe47b0d391870a53d8aaf", "filename": "crates/ra_hir/src/marks.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmarks.rs?ref=8b612251fd8c741416d2fb320bd908b76134fde5", "patch": "@@ -11,7 +11,6 @@ test_utils::marks!(\n     match_ergonomics_ref\n     trait_resolution_on_fn_type\n     infer_while_let\n-    match_complex_arm_ty\n     match_first_arm_never\n     match_second_arm_never\n     match_all_arms_never"}, {"sha": "7b59ebfe732a5a80e6fc1d822c2f1417f7bfcd3a", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=8b612251fd8c741416d2fb320bd908b76134fde5", "patch": "@@ -1121,7 +1121,6 @@ impl<'a, D: HirDatabase> InferenceContext<'a, D> {\n                     match_ty.clone()\n                 } else {\n                     tested_by!(match_no_never_arms);\n-                    tested_by!(match_complex_arm_ty);\n                     expected.ty\n                 }\n             }"}, {"sha": "195514f104b11de2dd16da293deec151cc83b1eb", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b612251fd8c741416d2fb320bd908b76134fde5/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=8b612251fd8c741416d2fb320bd908b76134fde5", "patch": "@@ -3599,30 +3599,6 @@ mod branching_with_never_tests {\n     use super::type_at;\n     use test_utils::covers;\n \n-    #[test]\n-    fn match_complex_arm_ty() {\n-        covers!(match_complex_arm_ty);\n-        let t = type_at(\n-            r#\"\n-//- /main.rs\n-enum Option<T> {\n-    Some(T),\n-    None\n-}\n-\n-fn test(a: i32) {\n-    let i = match a {\n-        2 => Option::Some(2.0),\n-        _ => loop {},\n-    };\n-    i<|>\n-    ()\n-}\n-\"#,\n-        );\n-        assert_eq!(t, \"Option<f64>\");\n-    }\n-\n     #[test]\n     fn match_first_arm_never() {\n         covers!(match_first_arm_never);"}]}