{"sha": "5c5741bf76f5b8144f656045997b9d11602e12fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNTc0MWJmNzZmNWI4MTQ0ZjY1NjA0NTk5N2I5ZDExNjAyZTEyZmQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-29T17:02:13Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-09T18:14:41Z"}, "message": "add some comments", "tree": {"sha": "56862b5a730df9d8844546173c5c34b9fbf8129a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56862b5a730df9d8844546173c5c34b9fbf8129a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c5741bf76f5b8144f656045997b9d11602e12fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5741bf76f5b8144f656045997b9d11602e12fd", "html_url": "https://github.com/rust-lang/rust/commit/5c5741bf76f5b8144f656045997b9d11602e12fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c5741bf76f5b8144f656045997b9d11602e12fd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6a98db7cba2a761a1372a5b176f09a812708333", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a98db7cba2a761a1372a5b176f09a812708333", "html_url": "https://github.com/rust-lang/rust/commit/d6a98db7cba2a761a1372a5b176f09a812708333"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "0e945ad33419e0b35f073a31375e3ee36f6eddcc", "filename": "src/librustc_mir/borrow_check/nll/type_check/relate_tys.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5c5741bf76f5b8144f656045997b9d11602e12fd/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c5741bf76f5b8144f656045997b9d11602e12fd/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs?ref=5c5741bf76f5b8144f656045997b9d11602e12fd", "patch": "@@ -194,6 +194,14 @@ impl<'cx, 'bccx, 'gcx, 'tcx> TypeRelating<'cx, 'bccx, 'gcx, 'tcx> {\n         scope\n     }\n \n+    /// When we encounter binders during the type traversal, we record\n+    /// the value to substitute for each of the things contained in\n+    /// that binder. (This will be either a universal placeholder or\n+    /// an existential inference variable.) Given the debruijn index\n+    /// `debruijn` (and name `br`) of some binder we have now\n+    /// encountered, this routine finds the value that we instantiated\n+    /// the region with; to do so, it indexes backwards into the list\n+    /// of ambient scopes `scopes`.\n     fn lookup_bound_region(\n         &self,\n         debruijn: ty::DebruijnIndex,\n@@ -211,6 +219,9 @@ impl<'cx, 'bccx, 'gcx, 'tcx> TypeRelating<'cx, 'bccx, 'gcx, 'tcx> {\n         scope.map[br]\n     }\n \n+    /// If `r` is a bound region, find the scope in which it is bound\n+    /// (from `scopes`) and return the value that we instantiated it\n+    /// with. Otherwise just return `r`.\n     fn replace_bound_region(\n         &self,\n         universal_regions: &UniversalRegions<'tcx>,\n@@ -226,6 +237,8 @@ impl<'cx, 'bccx, 'gcx, 'tcx> TypeRelating<'cx, 'bccx, 'gcx, 'tcx> {\n         }\n     }\n \n+    /// Push a new outlives requirement into our output set of\n+    /// constraints.\n     fn push_outlives(&mut self, sup: RegionVid, sub: RegionVid) {\n         debug!(\"push_outlives({:?}: {:?})\", sup, sub);\n \n@@ -243,6 +256,9 @@ impl<'cx, 'bccx, 'gcx, 'tcx> TypeRelating<'cx, 'bccx, 'gcx, 'tcx> {\n         }\n     }\n \n+    /// When we encounter a canonical variable `var` in the output,\n+    /// equate it with `kind`. If the variable has been previously\n+    /// equated, then equate it again.\n     fn equate_var(\n         &mut self,\n         var: CanonicalVar,"}]}