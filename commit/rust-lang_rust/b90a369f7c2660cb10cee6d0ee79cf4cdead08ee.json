{"sha": "b90a369f7c2660cb10cee6d0ee79cf4cdead08ee", "node_id": "C_kwDOAAsO6NoAKGI5MGEzNjlmN2MyNjYwY2IxMGNlZTZkMGVlNzljZjRjZGVhZDA4ZWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-13T05:44:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-13T05:44:16Z"}, "message": "Rollup merge of #93885 - Badel2:error-download-ci-llvm, r=Mark-Simulacrum\n\nbootstrap.py: Suggest disabling download-ci-llvm option if url fails to download\n\nI got an error when trying to build the compiler using an old commit, and it turns out it was because the option `download-ci-llvm` was implicitly set to true. So this pull request tries to add a help message for other people that may run into the same problem.\n\nTo reproduce my error:\n\n```\ngit checkout 8d7707f3c4f72e6eb334d897354beca692b265d1\n./x.py test\n[...]\nspurious failure, trying again\ndownloading https://ci-artifacts.rust-lang.org/rustc-builds/db002a06ae9154a35d410550bc5132df883d7baa/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\ncurl: (22) The requested URL returned error: 404\n\nfailed to run: curl -# -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmp8g13rb4n https://ci-artifacts.rust-lang.org/rustc-builds/db002a06ae9154a35d410550bc5132df883d7baa/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nBuild completed unsuccessfully in 0:00:46\n```\n\nThis is my `config.toml`:\n\n```\n# Includes one of the default files in src/bootstrap/defaults\nprofile = \"compiler\"\nchangelog-seen = 2\n\n[rust]\ndebug = true\n```\n\nTo reproduce an error with this branch:\n\nChange line 618 of bootstrap.py to\n```\n        url = \"rustc-builds-error404/{}\".format(llvm_sha)\n```\n\nDelete llvm and cached tarball, and set `llvm.download-ci-llvm=true` in config.toml.\n\n```\n./x.py test\n[...]\nspurious failure, trying again\ndownloading https://ci-artifacts.rust-lang.org/rustc-builds-error404/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\ncurl: (22) The requested URL returned error: 404\n\nfailed to run: curl -# -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmpesl1ydvo https://ci-artifacts.rust-lang.org/rustc-builds-error404/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nerror: failed to download llvm from ci\nhelp: old builds get deleted after a certain time\nhelp: if trying to compile an old commit of rustc, disable `download-ci-llvm` in config.toml:\n\n[llvm]\ndownload-ci-llvm = false\n\nBuild completed unsuccessfully in 0:00:01\n```\n\nRegarding the implementation, I expected to be able to use a try/catch block in `_download_ci_llvm`, but the `run` function calls `sys.exit` instead of raising an exception so that's not possible. Also, suggestions for better wording of the help message are welcome.", "tree": {"sha": "f60777e485dda32a2bda7b24d725138e1e1059aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f60777e485dda32a2bda7b24d725138e1e1059aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiCJqwCRBK7hj4Ov3rIwAAMlMIAIGg/vRLjcm0BU7DfmAJTps+\nNmac7AEOeUSoQJbh/lmOkmzoiXMHOpXPbQarUATC3n1w9dKtJEu4TiUh6uQtoAlu\nUdPK+r5bFvmtaRHRu8M5AsCB6MauIUl5odWYEF62DgoKTGckjke9HkjNwiSroU09\nkyi0tX4DKRbK4uW9u5yUGE2kGLyhHg6m9BhZYQTOFra9daNQaBbxtuAf6eZ4IBS/\nxX72jZFvizStfEgy94L7jGzd9hnNE0rGXkurWYLhrTg3UGFMJO+jUW+tDo2dbeuU\nvHglHbRXRjsKYzmCC104YzfuEAJNy/ZM18YoXgXqVsyqCe/A9lWAfrGlZAtclX4=\n=wOxi\n-----END PGP SIGNATURE-----\n", "payload": "tree f60777e485dda32a2bda7b24d725138e1e1059aa\nparent 783b56ba68c5737d9593c6e9bb964b44b6889ddc\nparent 410145e0a7dfac0f9a09ac0cde7301f69a5e64b3\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1644731056 +0100\ncommitter GitHub <noreply@github.com> 1644731056 +0100\n\nRollup merge of #93885 - Badel2:error-download-ci-llvm, r=Mark-Simulacrum\n\nbootstrap.py: Suggest disabling download-ci-llvm option if url fails to download\n\nI got an error when trying to build the compiler using an old commit, and it turns out it was because the option `download-ci-llvm` was implicitly set to true. So this pull request tries to add a help message for other people that may run into the same problem.\n\nTo reproduce my error:\n\n```\ngit checkout 8d7707f3c4f72e6eb334d897354beca692b265d1\n./x.py test\n[...]\nspurious failure, trying again\ndownloading https://ci-artifacts.rust-lang.org/rustc-builds/db002a06ae9154a35d410550bc5132df883d7baa/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\ncurl: (22) The requested URL returned error: 404\n\nfailed to run: curl -# -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmp8g13rb4n https://ci-artifacts.rust-lang.org/rustc-builds/db002a06ae9154a35d410550bc5132df883d7baa/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nBuild completed unsuccessfully in 0:00:46\n```\n\nThis is my `config.toml`:\n\n```\n# Includes one of the default files in src/bootstrap/defaults\nprofile = \"compiler\"\nchangelog-seen = 2\n\n[rust]\ndebug = true\n```\n\nTo reproduce an error with this branch:\n\nChange line 618 of bootstrap.py to\n```\n        url = \"rustc-builds-error404/{}\".format(llvm_sha)\n```\n\nDelete llvm and cached tarball, and set `llvm.download-ci-llvm=true` in config.toml.\n\n```\n./x.py test\n[...]\nspurious failure, trying again\ndownloading https://ci-artifacts.rust-lang.org/rustc-builds-error404/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\ncurl: (22) The requested URL returned error: 404\n\nfailed to run: curl -# -y 30 -Y 10 --connect-timeout 30 --retry 3 -Sf -o /tmp/tmpesl1ydvo https://ci-artifacts.rust-lang.org/rustc-builds-error404/719b04ca99be0c78e09a8ec5e2eda082a5d8ccae/rust-dev-nightly-x86_64-unknown-linux-gnu.tar.xz\nerror: failed to download llvm from ci\nhelp: old builds get deleted after a certain time\nhelp: if trying to compile an old commit of rustc, disable `download-ci-llvm` in config.toml:\n\n[llvm]\ndownload-ci-llvm = false\n\nBuild completed unsuccessfully in 0:00:01\n```\n\nRegarding the implementation, I expected to be able to use a try/catch block in `_download_ci_llvm`, but the `run` function calls `sys.exit` instead of raising an exception so that's not possible. Also, suggestions for better wording of the help message are welcome.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee", "html_url": "https://github.com/rust-lang/rust/commit/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783b56ba68c5737d9593c6e9bb964b44b6889ddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/783b56ba68c5737d9593c6e9bb964b44b6889ddc", "html_url": "https://github.com/rust-lang/rust/commit/783b56ba68c5737d9593c6e9bb964b44b6889ddc"}, {"sha": "410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3", "html_url": "https://github.com/rust-lang/rust/commit/410145e0a7dfac0f9a09ac0cde7301f69a5e64b3"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "6c1128b393fed9207bb2662cdc5beeffa0f69260", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 20, "deletions": 8, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/b90a369f7c2660cb10cee6d0ee79cf4cdead08ee/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=b90a369f7c2660cb10cee6d0ee79cf4cdead08ee", "patch": "@@ -63,7 +63,7 @@ def support_xz():\n     except tarfile.CompressionError:\n         return False\n \n-def get(base, url, path, checksums, verbose=False, do_verify=True):\n+def get(base, url, path, checksums, verbose=False, do_verify=True, help_on_error=None):\n     with tempfile.NamedTemporaryFile(delete=False) as temp_file:\n         temp_path = temp_file.name\n \n@@ -82,7 +82,7 @@ def get(base, url, path, checksums, verbose=False, do_verify=True):\n                         print(\"ignoring already-download file\",\n                             path, \"due to failed verification\")\n                     os.unlink(path)\n-        download(temp_path, \"{}/{}\".format(base, url), True, verbose)\n+        download(temp_path, \"{}/{}\".format(base, url), True, verbose, help_on_error=help_on_error)\n         if do_verify and not verify(temp_path, sha256, verbose):\n             raise RuntimeError(\"failed verification\")\n         if verbose:\n@@ -95,17 +95,17 @@ def get(base, url, path, checksums, verbose=False, do_verify=True):\n             os.unlink(temp_path)\n \n \n-def download(path, url, probably_big, verbose):\n+def download(path, url, probably_big, verbose, help_on_error=None):\n     for _ in range(0, 4):\n         try:\n-            _download(path, url, probably_big, verbose, True)\n+            _download(path, url, probably_big, verbose, True, help_on_error=help_on_error)\n             return\n         except RuntimeError:\n             print(\"\\nspurious failure, trying again\")\n-    _download(path, url, probably_big, verbose, False)\n+    _download(path, url, probably_big, verbose, False, help_on_error=help_on_error)\n \n \n-def _download(path, url, probably_big, verbose, exception):\n+def _download(path, url, probably_big, verbose, exception, help_on_error=None):\n     if probably_big or verbose:\n         print(\"downloading {}\".format(url))\n     # see https://serverfault.com/questions/301128/how-to-download\n@@ -126,7 +126,8 @@ def _download(path, url, probably_big, verbose, exception):\n              \"--connect-timeout\", \"30\",  # timeout if cannot connect within 30 seconds\n              \"--retry\", \"3\", \"-Sf\", \"-o\", path, url],\n             verbose=verbose,\n-            exception=exception)\n+            exception=exception,\n+            help_on_error=help_on_error)\n \n \n def verify(path, expected, verbose):\n@@ -167,7 +168,7 @@ def unpack(tarball, tarball_suffix, dst, verbose=False, match=None):\n     shutil.rmtree(os.path.join(dst, fname))\n \n \n-def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n+def run(args, verbose=False, exception=False, is_bootstrap=False, help_on_error=None, **kwargs):\n     \"\"\"Run a child program in a new process\"\"\"\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n@@ -178,6 +179,8 @@ def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n     code = ret.wait()\n     if code != 0:\n         err = \"failed to run: \" + ' '.join(args)\n+        if help_on_error is not None:\n+            err += \"\\n\" + help_on_error\n         if verbose or exception:\n             raise RuntimeError(err)\n         # For most failures, we definitely do want to print this error, or the user will have no\n@@ -624,13 +627,22 @@ def _download_ci_llvm(self, llvm_sha, llvm_assertions):\n         filename = \"rust-dev-nightly-\" + self.build + tarball_suffix\n         tarball = os.path.join(rustc_cache, filename)\n         if not os.path.exists(tarball):\n+            help_on_error = \"error: failed to download llvm from ci\"\n+            help_on_error += \"\\nhelp: old builds get deleted after a certain time\"\n+            help_on_error += \"\\nhelp: if trying to compile an old commit of rustc,\"\n+            help_on_error += \" disable `download-ci-llvm` in config.toml:\"\n+            help_on_error += \"\\n\"\n+            help_on_error += \"\\n[llvm]\"\n+            help_on_error += \"\\ndownload-ci-llvm = false\"\n+            help_on_error += \"\\n\"\n             get(\n                 base,\n                 \"{}/{}\".format(url, filename),\n                 tarball,\n                 self.checksums_sha256,\n                 verbose=self.verbose,\n                 do_verify=False,\n+                help_on_error=help_on_error,\n             )\n         unpack(tarball, tarball_suffix, self.llvm_root(),\n                 match=\"rust-dev\","}]}