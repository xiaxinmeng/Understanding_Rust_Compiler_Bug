{"sha": "f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNzRjYzhhNGM1ZGQ0MDM4ZjhjODMzODliNzgzNGQzMDgxOWE5ZjE=", "commit": {"author": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-06-11T00:39:48Z"}, "committer": {"name": "David Renshaw", "email": "david@sandstorm.io", "date": "2017-06-11T00:39:48Z"}, "message": "tcx.infer_ctxt() no longer takes an argument", "tree": {"sha": "a5ac3be3c1fc5b25f72ee32b46715d07a33c1023", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5ac3be3c1fc5b25f72ee32b46715d07a33c1023"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "html_url": "https://github.com/rust-lang/rust/commit/f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f174cc8a4c5dd4038f8c83389b7834d30819a9f1/comments", "author": null, "committer": null, "parents": [{"sha": "2daf62f7146f3861fd30ca838036e33a42a75387", "url": "https://api.github.com/repos/rust-lang/rust/commits/2daf62f7146f3861fd30ca838036e33a42a75387", "html_url": "https://github.com/rust-lang/rust/commit/2daf62f7146f3861fd30ca838036e33a42a75387"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6bb764035650192e1034d88309b7f52909050272", "filename": "src/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f174cc8a4c5dd4038f8c83389b7834d30819a9f1/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f174cc8a4c5dd4038f8c83389b7834d30819a9f1/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "patch": "@@ -2032,7 +2032,7 @@ fn fulfill_obligation<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n     // Do the initial selection for the obligation. This yields the\n     // shallow result we are looking for -- that is, what specific impl.\n-    tcx.infer_ctxt(()).enter(|infcx| {\n+    tcx.infer_ctxt().enter(|infcx| {\n         let mut selcx = traits::SelectionContext::new(&infcx);\n \n         let obligation_cause = traits::ObligationCause::misc(span,"}, {"sha": "9c4e60a299f4a4cad99e1f73fefe5a45f0538c1f", "filename": "src/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f174cc8a4c5dd4038f8c83389b7834d30819a9f1/src%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f174cc8a4c5dd4038f8c83389b7834d30819a9f1/src%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftraits.rs?ref=f174cc8a4c5dd4038f8c83389b7834d30819a9f1", "patch": "@@ -16,7 +16,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     pub(crate) fn fulfill_obligation(&self, trait_ref: ty::PolyTraitRef<'tcx>) -> traits::Vtable<'tcx, ()> {\n         // Do the initial selection for the obligation. This yields the shallow result we are\n         // looking for -- that is, what specific impl.\n-        self.tcx.infer_ctxt(()).enter(|infcx| {\n+        self.tcx.infer_ctxt().enter(|infcx| {\n             let mut selcx = traits::SelectionContext::new(&infcx);\n \n             let obligation = traits::Obligation::new("}]}