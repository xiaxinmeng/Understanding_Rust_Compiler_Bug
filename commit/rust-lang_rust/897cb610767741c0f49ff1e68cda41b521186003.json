{"sha": "897cb610767741c0f49ff1e68cda41b521186003", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5N2NiNjEwNzY3NzQxYzBmNDlmZjFlNjhjZGE0MWI1MjExODYwMDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-02-16T08:57:21Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-02-16T08:58:35Z"}, "message": "validation: fix invalid-fn-ptr error message", "tree": {"sha": "7722f4e8176edfe81b3262befa12f54cef82a529", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7722f4e8176edfe81b3262befa12f54cef82a529"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/897cb610767741c0f49ff1e68cda41b521186003", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/897cb610767741c0f49ff1e68cda41b521186003", "html_url": "https://github.com/rust-lang/rust/commit/897cb610767741c0f49ff1e68cda41b521186003", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/897cb610767741c0f49ff1e68cda41b521186003/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "090dac0c3892a2d21afb0f82aa72920760e08078", "url": "https://api.github.com/repos/rust-lang/rust/commits/090dac0c3892a2d21afb0f82aa72920760e08078", "html_url": "https://github.com/rust-lang/rust/commit/090dac0c3892a2d21afb0f82aa72920760e08078"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "64e7a4d9ca758ea793bc0c1cdf25016744cfade4", "filename": "compiler/rustc_mir/src/interpret/validity.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/897cb610767741c0f49ff1e68cda41b521186003/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/897cb610767741c0f49ff1e68cda41b521186003/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs?ref=897cb610767741c0f49ff1e68cda41b521186003", "patch": "@@ -586,8 +586,11 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                     self.path,\n                     err_unsup!(ReadPointerAsBytes) => { \"part of a pointer\" } expected { \"a proper pointer or integer value\" },\n                 );\n+                // Make sure we print a `ScalarMaybeUninit` (and not an `ImmTy`) in the error\n+                // message below.\n+                let value = value.to_scalar_or_uninit();\n                 let _fn = try_validation!(\n-                    value.to_scalar().and_then(|ptr| self.ecx.memory.get_fn(ptr)),\n+                    value.check_init().and_then(|ptr| self.ecx.memory.get_fn(ptr)),\n                     self.path,\n                     err_ub!(DanglingIntPointer(..)) |\n                     err_ub!(InvalidFunctionPointer(..)) |"}]}