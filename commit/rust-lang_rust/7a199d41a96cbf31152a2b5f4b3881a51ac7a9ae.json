{"sha": "7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMTk5ZDQxYTk2Y2JmMzExNTJhMmI1ZjRiMzg4MWE1MWFjN2E5YWU=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T04:42:01Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-03-27T14:04:15Z"}, "message": "syntax: fix pretty printing __log stmts", "tree": {"sha": "8dcce2e35606435f93f0933ab4eda8fde0cc6f9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dcce2e35606435f93f0933ab4eda8fde0cc6f9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "html_url": "https://github.com/rust-lang/rust/commit/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e0b363a7f8fc4f481eec48e104573f95b52ef6f", "html_url": "https://github.com/rust-lang/rust/commit/2e0b363a7f8fc4f481eec48e104573f95b52ef6f"}], "stats": {"total": 47, "additions": 17, "deletions": 30}, "files": [{"sha": "5b5f4690e9d812500621ab17b212065f7f8aa3d0", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -1335,7 +1335,7 @@ pub impl Liveness {\n             self.propagate_through_expr(l, ln)\n           }\n \n-          expr_log(_, l, r) |\n+          expr_log(l, r) |\n           expr_index(l, r) |\n           expr_binary(_, l, r) => {\n             self.propagate_through_exprs(~[l, r], succ)"}, {"sha": "9d0a2c338fca1a1fc690d9ae555a8554215d8a92", "filename": "src/librustc/middle/moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Fmoves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmoves.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -567,7 +567,7 @@ pub impl VisitContext {\n                 self.consume_block(blk, visitor);\n             }\n \n-            expr_log(_, a_expr, b_expr) => {\n+            expr_log(a_expr, b_expr) => {\n                 self.consume_expr(a_expr, visitor);\n                 self.use_expr(b_expr, Read, visitor);\n             }"}, {"sha": "6fa2b273746a9dc79bbaee0ee0bf7d0cc94e5052", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -507,7 +507,7 @@ fn trans_rvalue_stmt_unadjusted(bcx: block, expr: @ast::expr) -> block {\n         ast::expr_ret(ex) => {\n             return controlflow::trans_ret(bcx, ex);\n         }\n-        ast::expr_log(_, lvl, a) => {\n+        ast::expr_log(lvl, a) => {\n             return controlflow::trans_log(expr, lvl, bcx, a);\n         }\n         ast::expr_while(cond, ref body) => {"}, {"sha": "1d9e57ce8ce1537e78358cb7097725faf901bc1b", "filename": "src/librustc/middle/trans/type_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_use.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -329,7 +329,7 @@ pub fn mark_for_expr(cx: Context, e: @expr) {\n         type_needs(cx, use_repr, ty::type_autoderef(cx.ccx.tcx, base_ty));\n         mark_for_method_call(cx, e.id, e.callee_id);\n       }\n-      expr_log(_, _, val) => {\n+      expr_log(_, val) => {\n         node_type_needs(cx, use_tydesc, val.id);\n       }\n       expr_call(f, _, _) => {"}, {"sha": "adb8fd82883c04f68430db0996c7cc8da0525029", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -2402,7 +2402,7 @@ pub fn check_expr_with_unifier(fcx: @mut FnCtxt,\n         }\n         fcx.write_bot(id);\n       }\n-      ast::expr_log(_, lv, e) => {\n+      ast::expr_log(lv, e) => {\n         check_expr_has_type(fcx, lv,\n                                   ty::mk_mach_uint(tcx, ast::ty_u32));\n "}, {"sha": "f873d6b6bb43ebb3e88cc01ced4779476eb23e97", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -543,12 +543,6 @@ pub struct expr {\n     span: span,\n }\n \n-#[auto_encode]\n-#[auto_decode]\n-#[deriving(Eq)]\n-pub enum log_level { error, debug, log_other }\n-// 0 = error, 1 = debug, 2 = log_other\n-\n #[auto_encode]\n #[auto_decode]\n #[deriving(Eq)]\n@@ -598,7 +592,7 @@ pub enum expr_ {\n     expr_break(Option<ident>),\n     expr_again(Option<ident>),\n     expr_ret(Option<@expr>),\n-    expr_log(log_level, @expr, @expr),\n+    expr_log(@expr, @expr),\n \n     expr_inline_asm(@~str,              // asm\n                     ~[(@~str, @expr)],  // inputs"}, {"sha": "5e56bf18fa8c7899b18b8a13003f851e57b99028", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -552,9 +552,8 @@ pub fn noop_fold_expr(e: &expr_, fld: @ast_fold) -> expr_ {\n         expr_ret(ref e) => {\n             expr_ret(e.map(|x| fld.fold_expr(*x)))\n         }\n-        expr_log(i, lv, e) => {\n+        expr_log(lv, e) => {\n             expr_log(\n-                i,\n                 fld.fold_expr(lv),\n                 fld.fold_expr(e)\n             )"}, {"sha": "d7af59910b4cca03d58a09d0389357ba92f27188", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -1230,7 +1230,7 @@ pub impl Parser {\n             let lvl = self.parse_expr();\n             self.expect(&token::COMMA);\n             let e = self.parse_expr();\n-            ex = expr_log(ast::log_other, lvl, e);\n+            ex = expr_log(lvl, e);\n             hi = self.span.hi;\n             self.expect(&token::RPAREN);\n         } else if self.eat_keyword(&~\"return\") {"}, {"sha": "bda5b3671a9c3be9212730a4d9047593cd432b26", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -1386,20 +1386,14 @@ pub fn print_expr(s: @ps, &&expr: @ast::expr) {\n           _ => ()\n         }\n       }\n-      ast::expr_log(lvl, lexp, expr) => {\n-        match lvl {\n-          ast::debug => { word_nbsp(s, ~\"log\"); print_expr(s, expr); }\n-          ast::error => { word_nbsp(s, ~\"log_err\"); print_expr(s, expr); }\n-          ast::log_other => {\n-            word_nbsp(s, ~\"log\");\n-            popen(s);\n-            print_expr(s, lexp);\n-            word(s.s, ~\",\");\n-            space_if_not_bol(s);\n-            print_expr(s, expr);\n-            pclose(s);\n-          }\n-        }\n+      ast::expr_log(lexp, expr) => {\n+        word(s.s, ~\"__log\");\n+        popen(s);\n+        print_expr(s, lexp);\n+        word(s.s, ~\",\");\n+        space_if_not_bol(s);\n+        print_expr(s, expr);\n+        pclose(s);\n       }\n       ast::expr_inline_asm(a, in, out, c, v, _) => {\n         if v {"}, {"sha": "2bdf26fba586270bf2032bba8430b75d4cb40e74", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=7a199d41a96cbf31152a2b5f4b3881a51ac7a9ae", "patch": "@@ -559,7 +559,7 @@ pub fn visit_expr<E>(ex: @expr, e: E, v: vt<E>) {\n         expr_break(_) => (),\n         expr_again(_) => (),\n         expr_ret(eo) => visit_expr_opt(eo, e, v),\n-        expr_log(_, lv, x) => {\n+        expr_log(lv, x) => {\n             (v.visit_expr)(lv, e, v);\n             (v.visit_expr)(x, e, v);\n         }"}]}