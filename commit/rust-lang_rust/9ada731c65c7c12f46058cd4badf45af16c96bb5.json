{"sha": "9ada731c65c7c12f46058cd4badf45af16c96bb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZGE3MzFjNjVjN2MxMmY0NjA1OGNkNGJhZGY0NWFmMTZjOTZiYjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-23T18:44:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-23T18:44:12Z"}, "message": "Rollup merge of #84444 - notriddle:num-docs-from-undocumented-items-toggle, r=yaahc\n\ndoc: Get rid of \"[+] show undocumented items\" toggle on numeric From impls\n\nOn most From implementations, the docstring is attached to the function. This is also how people have been [recommended] to do it.\n\nScreenshots:\n\n* [before](https://user-images.githubusercontent.com/1593513/115767662-323c5480-a35e-11eb-9918-98aba83e9183.png)\n* [after](https://user-images.githubusercontent.com/1593513/115767675-35374500-a35e-11eb-964f-c28eeb6c807a.png)\n\n[recommended]: https://github.com/rust-lang/rust/issues/51430#issuecomment-398322434", "tree": {"sha": "6cee3a26a8589d1a52340ab9d898ad97c1736927", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cee3a26a8589d1a52340ab9d898ad97c1736927"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ada731c65c7c12f46058cd4badf45af16c96bb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJggxV9CRBK7hj4Ov3rIwAAadkIABCWa365URlripj5LQ2j/v1K\nXQQjp0N/pN4EgrCB3zWmk1mMM07vv2JYa501Rk3BSVxrScoc9/JiE56fWNzH470j\ncmmdEg2M9BIeMdrt1QyVKieafW8oxCGAyKh4d3AhjDyRV3YIa85gBaNrzD98xC+d\nI/IsPzSrxhHMxbmDLGXe18W71q1UJ03bwW6mPKeM8cIx37xBWS64D8U3LvgCeywG\nZR8Jizktd8qupDsfqS91+BTxiiuCYwouUBhz4uXCdy+Aew/VMhKXmIy9e/ieQ5V2\nFAxx8oK2danO1ZVLQ76KcC3gyLpC1P9RpzjL35doWJ5DYo1C4e0fz9Hh3wPLb7U=\n=SR5x\n-----END PGP SIGNATURE-----\n", "payload": "tree 6cee3a26a8589d1a52340ab9d898ad97c1736927\nparent a50f502766a508e18ead740d5ec1b6df42beb394\nparent c247055032000e8e67b9f471178c96a31bf9464d\nauthor Yuki Okushi <jtitor@2k36.org> 1619203452 +0900\ncommitter GitHub <noreply@github.com> 1619203452 +0900\n\nRollup merge of #84444 - notriddle:num-docs-from-undocumented-items-toggle, r=yaahc\n\ndoc: Get rid of \"[+] show undocumented items\" toggle on numeric From impls\n\nOn most From implementations, the docstring is attached to the function. This is also how people have been [recommended] to do it.\n\nScreenshots:\n\n* [before](https://user-images.githubusercontent.com/1593513/115767662-323c5480-a35e-11eb-9918-98aba83e9183.png)\n* [after](https://user-images.githubusercontent.com/1593513/115767675-35374500-a35e-11eb-964f-c28eeb6c807a.png)\n\n[recommended]: https://github.com/rust-lang/rust/issues/51430#issuecomment-398322434\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ada731c65c7c12f46058cd4badf45af16c96bb5", "html_url": "https://github.com/rust-lang/rust/commit/9ada731c65c7c12f46058cd4badf45af16c96bb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ada731c65c7c12f46058cd4badf45af16c96bb5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a50f502766a508e18ead740d5ec1b6df42beb394", "url": "https://api.github.com/repos/rust-lang/rust/commits/a50f502766a508e18ead740d5ec1b6df42beb394", "html_url": "https://github.com/rust-lang/rust/commit/a50f502766a508e18ead740d5ec1b6df42beb394"}, {"sha": "c247055032000e8e67b9f471178c96a31bf9464d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c247055032000e8e67b9f471178c96a31bf9464d", "html_url": "https://github.com/rust-lang/rust/commit/c247055032000e8e67b9f471178c96a31bf9464d"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "a522b7da3bd1c64df67e67a9e29557d5e06c85c5", "filename": "library/core/src/convert/num.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9ada731c65c7c12f46058cd4badf45af16c96bb5/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ada731c65c7c12f46058cd4badf45af16c96bb5/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fnum.rs?ref=9ada731c65c7c12f46058cd4badf45af16c96bb5", "patch": "@@ -45,8 +45,10 @@ impl_float_to_int!(f64 => u8 u16 u32 u64 u128 usize i8 i16 i32 i64 i128 isize);\n macro_rules! impl_from {\n     ($Small: ty, $Large: ty, #[$attr:meta], $doc: expr) => {\n         #[$attr]\n-        #[doc = $doc]\n         impl From<$Small> for $Large {\n+            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n+            // Rustdocs on functions do not.\n+            #[doc = $doc]\n             #[inline]\n             fn from(small: $Small) -> Self {\n                 small as Self\n@@ -383,8 +385,10 @@ use crate::num::NonZeroUsize;\n macro_rules! nzint_impl_from {\n     ($Small: ty, $Large: ty, #[$attr:meta], $doc: expr) => {\n         #[$attr]\n-        #[doc = $doc]\n         impl From<$Small> for $Large {\n+            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n+            // Rustdocs on functions do not.\n+            #[doc = $doc]\n             #[inline]\n             fn from(small: $Small) -> Self {\n                 // SAFETY: input type guarantees the value is non-zero\n@@ -450,10 +454,12 @@ nzint_impl_from! { NonZeroU64, NonZeroI128, #[stable(feature = \"nz_int_conv\", si\n macro_rules! nzint_impl_try_from_int {\n     ($Int: ty, $NonZeroInt: ty, #[$attr:meta], $doc: expr) => {\n         #[$attr]\n-        #[doc = $doc]\n         impl TryFrom<$Int> for $NonZeroInt {\n             type Error = TryFromIntError;\n \n+            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n+            // Rustdocs on functions do not.\n+            #[doc = $doc]\n             #[inline]\n             fn try_from(value: $Int) -> Result<Self, Self::Error> {\n                 Self::new(value).ok_or(TryFromIntError(()))\n@@ -489,10 +495,12 @@ nzint_impl_try_from_int! { isize, NonZeroIsize, #[stable(feature = \"nzint_try_fr\n macro_rules! nzint_impl_try_from_nzint {\n     ($From:ty => $To:ty, $doc: expr) => {\n         #[stable(feature = \"nzint_try_from_nzint_conv\", since = \"1.49.0\")]\n-        #[doc = $doc]\n         impl TryFrom<$From> for $To {\n             type Error = TryFromIntError;\n \n+            // Rustdocs on the impl block show a \"[+] show undocumented items\" toggle.\n+            // Rustdocs on functions do not.\n+            #[doc = $doc]\n             #[inline]\n             fn try_from(value: $From) -> Result<Self, Self::Error> {\n                 TryFrom::try_from(value.get()).map(|v| {"}]}