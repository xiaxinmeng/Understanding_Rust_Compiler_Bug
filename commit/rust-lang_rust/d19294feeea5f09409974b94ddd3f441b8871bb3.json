{"sha": "d19294feeea5f09409974b94ddd3f441b8871bb3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOTI5NGZlZWVhNWYwOTQwOTk3NGI5NGRkZDNmNDQxYjg4NzFiYjM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-01-16T00:27:43Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-01-16T00:27:43Z"}, "message": "Add new literal type Err", "tree": {"sha": "08504d7a92808e66bb8ae9e4442b7b81f2c4a45d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08504d7a92808e66bb8ae9e4442b7b81f2c4a45d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d19294feeea5f09409974b94ddd3f441b8871bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d19294feeea5f09409974b94ddd3f441b8871bb3", "html_url": "https://github.com/rust-lang/rust/commit/d19294feeea5f09409974b94ddd3f441b8871bb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d19294feeea5f09409974b94ddd3f441b8871bb3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2f221c75932de7a29845c8d6f1f73536ad00c41", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f221c75932de7a29845c8d6f1f73536ad00c41", "html_url": "https://github.com/rust-lang/rust/commit/e2f221c75932de7a29845c8d6f1f73536ad00c41"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "6ffb771ffcc4e837a5c4b7e75f9b41c9adcf33de", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=d19294feeea5f09409974b94ddd3f441b8871bb3", "patch": "@@ -329,6 +329,7 @@ fn hash_token<'a, 'gcx, W: StableHasherResult>(\n             match *lit {\n                 token::Lit::Byte(val) |\n                 token::Lit::Char(val) |\n+                token::Lit::Err(val) |\n                 token::Lit::Integer(val) |\n                 token::Lit::Float(val) |\n                 token::Lit::Str_(val) |"}, {"sha": "17c88a30bcd0b2d1853a17c0500416796fecc934", "filename": "src/libsyntax/ext/quote.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fext%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fext%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fquote.rs?ref=d19294feeea5f09409974b94ddd3f441b8871bb3", "patch": "@@ -646,6 +646,7 @@ fn expr_mk_token(cx: &ExtCtxt, sp: Span, tok: &token::Token) -> P<ast::Expr> {\n \n         token::Literal(token::Byte(i), suf) => return mk_lit!(\"Byte\", suf, i),\n         token::Literal(token::Char(i), suf) => return mk_lit!(\"Char\", suf, i),\n+        token::Literal(token::Err(i), suf) => return mk_lit!(\"Err\", suf, i),\n         token::Literal(token::Integer(i), suf) => return mk_lit!(\"Integer\", suf, i),\n         token::Literal(token::Float(i), suf) => return mk_lit!(\"Float\", suf, i),\n         token::Literal(token::Str_(i), suf) => return mk_lit!(\"Str_\", suf, i),"}, {"sha": "cbb503f56bc4ad31829b8d3abfecfbb109f704bf", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=d19294feeea5f09409974b94ddd3f441b8871bb3", "patch": "@@ -466,6 +466,7 @@ crate fn lit_token(lit: token::Lit, suf: Option<Symbol>, diag: Option<(Span, &Ha\n     match lit {\n        token::Byte(i) => (true, Some(LitKind::Byte(byte_lit(&i.as_str()).0))),\n        token::Char(i) => (true, Some(LitKind::Char(char_lit(&i.as_str(), diag).0))),\n+       token::Err(i) => (true, Some(LitKind::Char(char_lit(&i.as_str(), diag).0))),\n \n         // There are some valid suffixes for integer and float literals,\n         // so all the handling is done internally."}, {"sha": "69e934d64c6cde15edc121653434dd9c417f011b", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=d19294feeea5f09409974b94ddd3f441b8871bb3", "patch": "@@ -60,6 +60,7 @@ impl DelimToken {\n pub enum Lit {\n     Byte(ast::Name),\n     Char(ast::Name),\n+    Err(ast::Name),\n     Integer(ast::Name),\n     Float(ast::Name),\n     Str_(ast::Name),\n@@ -73,6 +74,7 @@ impl Lit {\n         match *self {\n             Byte(_) => \"byte literal\",\n             Char(_) => \"char literal\",\n+            Err(_) => \"error literal\",\n             Integer(_) => \"integer literal\",\n             Float(_) => \"float literal\",\n             Str_(_) | StrRaw(..) => \"string literal\","}, {"sha": "123f9b49692d97217c6770ef4ca9d96b242f6e54", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19294feeea5f09409974b94ddd3f441b8871bb3/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=d19294feeea5f09409974b94ddd3f441b8871bb3", "patch": "@@ -224,6 +224,7 @@ pub fn token_to_string(tok: &Token) -> String {\n             let mut out = match lit {\n                 token::Byte(b)           => format!(\"b'{}'\", b),\n                 token::Char(c)           => format!(\"'{}'\", c),\n+                token::Err(c)            => format!(\"'{}'\", c),\n                 token::Float(c)          |\n                 token::Integer(c)        => c.to_string(),\n                 token::Str_(s)           => format!(\"\\\"{}\\\"\", s),"}]}