{"sha": "3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "node_id": "C_kwDOAAsO6NoAKDNjOGI2NDRkMGQ3ZDZmY2Q1NmRiMjE4NGQ0YjU2MjJkOWU1MGNhMzc", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-11-26T15:14:16Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-11-27T17:33:55Z"}, "message": "Only check for errors in predicate when skipping impl assembly\n\nPrior to PR #91205, checking for errors in the overall obligation\nwould check checking the `ParamEnv`, due to an incorrect\n`super_visit_with` impl. With this bug fixed, we will now\nbail out of impl candidate assembly if the `ParamEnv` contains\nany error types.\n\nIn practice, this appears to be overly conservative - when an error\noccurs early in compilation, we end up giving up early for some\npredicates that we could have successfully evaluated without overflow.\nBy only checking for errors in the predicate itself, we avoid causing\nadditional spurious 'type annotations needed' errors after a 'real'\nerror has already occurred.\n\nWith this PR, the diagnostic changes caused by PR #91205 are reverted.", "tree": {"sha": "a26f6b93e0549a4750338f6739ac2d36f2be1593", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a26f6b93e0549a4750338f6739ac2d36f2be1593"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "html_url": "https://github.com/rust-lang/rust/commit/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b997b657657f7c63cf2e377dfc60d38da5bfe1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b997b657657f7c63cf2e377dfc60d38da5bfe1d", "html_url": "https://github.com/rust-lang/rust/commit/6b997b657657f7c63cf2e377dfc60d38da5bfe1d"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "c8239897f3abb5b7032d8f574aeae103599b1e71", "filename": "tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=3c8b644d0d7d6fcd56db2184d4b5622d9e50ca37", "patch": "@@ -21,15 +21,16 @@ LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n    |          |\n    |          help: you might be missing a type parameter: `, VAL`\n \n-error[E0283]: type annotations needed\n-  --> $DIR/ice-6252.rs:10:12\n+error[E0046]: not all trait items implemented, missing: `VAL`\n+  --> $DIR/ice-6252.rs:10:1\n    |\n+LL |     const VAL: T;\n+   |     ------------- `VAL` from trait\n+...\n LL | impl<N, M> TypeVal<usize> for Multiply<N, M> where N: TypeVal<VAL> {}\n-   |            ^^^^^^^^^^^^^^ cannot infer type for struct `Multiply<N, M>`\n-   |\n-   = note: cannot satisfy `Multiply<N, M>: TypeVal<usize>`\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ missing `VAL` in implementation\n \n error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0283, E0412.\n-For more information about an error, try `rustc --explain E0283`.\n+Some errors have detailed explanations: E0046, E0412.\n+For more information about an error, try `rustc --explain E0046`."}]}