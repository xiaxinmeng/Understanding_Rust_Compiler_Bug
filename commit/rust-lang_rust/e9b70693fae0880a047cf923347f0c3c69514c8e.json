{"sha": "e9b70693fae0880a047cf923347f0c3c69514c8e", "node_id": "C_kwDOAAsO6NoAKGU5YjcwNjkzZmFlMDg4MGEwNDdjZjkyMzM0N2YwYzNjNjk1MTRjOGU", "commit": {"author": {"name": "nils", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-12T14:44:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-12T14:44:53Z"}, "message": "Rollup merge of #106751 - clubby789:const-intrinsic, r=GuillaumeGomez\n\nFix rendering 'const' in header for intrinsics\n\nFixes #99398", "tree": {"sha": "517f10980c4d6e52da498805e23ea550c2b9b5ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/517f10980c4d6e52da498805e23ea550c2b9b5ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9b70693fae0880a047cf923347f0c3c69514c8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwBzlCRBK7hj4Ov3rIwAAdecIAGXEX8MNNGwZjs8bTHWIipFt\nb5v9baPJi1TNRetV0128xzAwlq2dvWrv9QxldP/zuoxNCO6C8Nvpnz9PnsWkhbok\nc5UVLxQYjdTsxGIVtKZ3/Cq4YyyPrXma6BmEMKQ39bTX0N6g4pK4kBWhpL66xXhZ\na0T2dS0cVcCrmDuIcbxR40IKb9fga3smi4t82cNUqXuURJrC+sQtLT76BYjMdLc7\nIyMOyaW1MfeN/86P8UL2V5nqfraKYVRC0w8LTP/CXUBSBF+S+YXubhAsjh6PQmcz\ntRJ0BEhTiCze82ZjDbQYU07W1fEUnQJ2xzScU6oCTbg0i+37GP/6tA/TUcp/waQ=\n=1Xis\n-----END PGP SIGNATURE-----\n", "payload": "tree 517f10980c4d6e52da498805e23ea550c2b9b5ed\nparent c61f29ca52e137e18a4b64e4388741cc2dc4f926\nparent 740f6aaf95e12ad265eb54f78bd56fe3891827bd\nauthor nils <48135649+Nilstrieb@users.noreply.github.com> 1673534693 +0100\ncommitter GitHub <noreply@github.com> 1673534693 +0100\n\nRollup merge of #106751 - clubby789:const-intrinsic, r=GuillaumeGomez\n\nFix rendering 'const' in header for intrinsics\n\nFixes #99398\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b70693fae0880a047cf923347f0c3c69514c8e", "html_url": "https://github.com/rust-lang/rust/commit/e9b70693fae0880a047cf923347f0c3c69514c8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9b70693fae0880a047cf923347f0c3c69514c8e/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c61f29ca52e137e18a4b64e4388741cc2dc4f926", "url": "https://api.github.com/repos/rust-lang/rust/commits/c61f29ca52e137e18a4b64e4388741cc2dc4f926", "html_url": "https://github.com/rust-lang/rust/commit/c61f29ca52e137e18a4b64e4388741cc2dc4f926"}, {"sha": "740f6aaf95e12ad265eb54f78bd56fe3891827bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/740f6aaf95e12ad265eb54f78bd56fe3891827bd", "html_url": "https://github.com/rust-lang/rust/commit/740f6aaf95e12ad265eb54f78bd56fe3891827bd"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "87de41fde63c5e27ce9b4b333c81814347eaf33d", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e9b70693fae0880a047cf923347f0c3c69514c8e/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b70693fae0880a047cf923347f0c3c69514c8e/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=e9b70693fae0880a047cf923347f0c3c69514c8e", "patch": "@@ -676,15 +676,23 @@ impl Item {\n         }\n         let header = match *self.kind {\n             ItemKind::ForeignFunctionItem(_) => {\n-                let abi = tcx.fn_sig(self.item_id.as_def_id().unwrap()).abi();\n+                let def_id = self.item_id.as_def_id().unwrap();\n+                let abi = tcx.fn_sig(def_id).abi();\n                 hir::FnHeader {\n                     unsafety: if abi == Abi::RustIntrinsic {\n                         intrinsic_operation_unsafety(tcx, self.item_id.as_def_id().unwrap())\n                     } else {\n                         hir::Unsafety::Unsafe\n                     },\n                     abi,\n-                    constness: hir::Constness::NotConst,\n+                    constness: if abi == Abi::RustIntrinsic\n+                        && tcx.is_const_fn(def_id)\n+                        && is_unstable_const_fn(tcx, def_id).is_none()\n+                    {\n+                        hir::Constness::Const\n+                    } else {\n+                        hir::Constness::NotConst\n+                    },\n                     asyncness: hir::IsAsync::NotAsync,\n                 }\n             }"}, {"sha": "2fc486d01dae02b1ed7f2260b001690d96a82fb5", "filename": "tests/rustdoc/const-intrinsic.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e9b70693fae0880a047cf923347f0c3c69514c8e/tests%2Frustdoc%2Fconst-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9b70693fae0880a047cf923347f0c3c69514c8e/tests%2Frustdoc%2Fconst-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fconst-intrinsic.rs?ref=e9b70693fae0880a047cf923347f0c3c69514c8e", "patch": "@@ -0,0 +1,25 @@\n+#![feature(intrinsics)]\n+#![feature(staged_api)]\n+\n+#![crate_name = \"foo\"]\n+#![stable(since=\"1.0.0\", feature=\"rust1\")]\n+\n+extern \"rust-intrinsic\" {\n+    // @has 'foo/fn.transmute.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub const unsafe extern \"rust-intrinsic\" fn transmute<T, U>(_: T) -> U'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    #[rustc_const_stable(feature = \"const_transmute\", since = \"1.56.0\")]\n+    pub fn transmute<T, U>(_: T) -> U;\n+\n+    // @has 'foo/fn.unreachable.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub unsafe extern \"rust-intrinsic\" fn unreachable() -> !'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    pub fn unreachable() -> !;\n+}\n+\n+extern \"C\" {\n+    // @has 'foo/fn.needs_drop.html'\n+    // @has - '//pre[@class=\"rust fn\"]' 'pub unsafe extern \"C\" fn needs_drop() -> !'\n+    #[stable(since=\"1.0.0\", feature=\"rust1\")]\n+    pub fn needs_drop() -> !;\n+}"}]}