{"sha": "194d357e03dcee73bfdb32a45175c97f4c3ce422", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NGQzNTdlMDNkY2VlNzNiZmRiMzJhNDUxNzVjOTdmNGMzY2U0MjI=", "commit": {"author": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-09-03T22:42:58Z"}, "committer": {"name": "Charles Gleason", "email": "charles_gleason@alumni.brown.edu", "date": "2019-09-16T15:46:44Z"}, "message": "Document `From` trait for `LhsExpr`", "tree": {"sha": "e82d2d8d6ca4ac30f842a731c2e453f00c1a5e27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e82d2d8d6ca4ac30f842a731c2e453f00c1a5e27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194d357e03dcee73bfdb32a45175c97f4c3ce422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194d357e03dcee73bfdb32a45175c97f4c3ce422", "html_url": "https://github.com/rust-lang/rust/commit/194d357e03dcee73bfdb32a45175c97f4c3ce422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194d357e03dcee73bfdb32a45175c97f4c3ce422/comments", "author": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crgl", "id": 36055314, "node_id": "MDQ6VXNlcjM2MDU1MzE0", "avatar_url": "https://avatars.githubusercontent.com/u/36055314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crgl", "html_url": "https://github.com/crgl", "followers_url": "https://api.github.com/users/crgl/followers", "following_url": "https://api.github.com/users/crgl/following{/other_user}", "gists_url": "https://api.github.com/users/crgl/gists{/gist_id}", "starred_url": "https://api.github.com/users/crgl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crgl/subscriptions", "organizations_url": "https://api.github.com/users/crgl/orgs", "repos_url": "https://api.github.com/users/crgl/repos", "events_url": "https://api.github.com/users/crgl/events{/privacy}", "received_events_url": "https://api.github.com/users/crgl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9de4ef89e0e53099a084001b26ec3207c5f8391", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9de4ef89e0e53099a084001b26ec3207c5f8391", "html_url": "https://github.com/rust-lang/rust/commit/b9de4ef89e0e53099a084001b26ec3207c5f8391"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c38b134154d62c78c3d6b037c7b4e0a325b07cbb", "filename": "src/libsyntax/parse/parser/expr.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/194d357e03dcee73bfdb32a45175c97f4c3ce422/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/194d357e03dcee73bfdb32a45175c97f4c3ce422/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fexpr.rs?ref=194d357e03dcee73bfdb32a45175c97f4c3ce422", "patch": "@@ -66,6 +66,10 @@ pub(super) enum LhsExpr {\n }\n \n impl From<Option<ThinVec<Attribute>>> for LhsExpr {\n+    /// Converts `Some(attrs)` into `LhsExpr::AttributesParsed(attrs)`\n+    /// and `None` into `LhsExpr::NotYetParsed`.\n+    ///\n+    /// This conversion does not allocate.\n     fn from(o: Option<ThinVec<Attribute>>) -> Self {\n         if let Some(attrs) = o {\n             LhsExpr::AttributesParsed(attrs)\n@@ -76,6 +80,9 @@ impl From<Option<ThinVec<Attribute>>> for LhsExpr {\n }\n \n impl From<P<Expr>> for LhsExpr {\n+    /// Converts the `expr: P<Expr>` into `LhsExpr::AlreadyParsed(expr)`.\n+    ///\n+    /// This conversion does not allocate.\n     fn from(expr: P<Expr>) -> Self {\n         LhsExpr::AlreadyParsed(expr)\n     }"}]}