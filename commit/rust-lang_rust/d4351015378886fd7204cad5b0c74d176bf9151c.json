{"sha": "d4351015378886fd7204cad5b0c74d176bf9151c", "node_id": "C_kwDOAAsO6NoAKGQ0MzUxMDE1Mzc4ODg2ZmQ3MjA0Y2FkNWIwYzc0ZDE3NmJmOTE1MWM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-05T12:32:08Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-13T10:53:44Z"}, "message": "Use a label instead of a note for member constraint errors", "tree": {"sha": "76def35004272ee4bc7101f0aed723e61460d85c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76def35004272ee4bc7101f0aed723e61460d85c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4351015378886fd7204cad5b0c74d176bf9151c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4351015378886fd7204cad5b0c74d176bf9151c", "html_url": "https://github.com/rust-lang/rust/commit/d4351015378886fd7204cad5b0c74d176bf9151c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4351015378886fd7204cad5b0c74d176bf9151c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15f93473f1db46d12cf0dd959c06b006c0847023", "url": "https://api.github.com/repos/rust-lang/rust/commits/15f93473f1db46d12cf0dd959c06b006c0847023", "html_url": "https://github.com/rust-lang/rust/commit/15f93473f1db46d12cf0dd959c06b006c0847023"}], "stats": {"total": 59, "additions": 30, "deletions": 29}, "files": [{"sha": "a48e01b1da2df7729febb0731ce85077322e3fdb", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d4351015378886fd7204cad5b0c74d176bf9151c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4351015378886fd7204cad5b0c74d176bf9151c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=d4351015378886fd7204cad5b0c74d176bf9151c", "patch": "@@ -116,7 +116,7 @@ pub(super) fn note_and_explain_region(\n     emit_msg_span(err, prefix, description, span, suffix);\n }\n \n-pub(super) fn note_and_explain_free_region(\n+fn explain_free_region(\n     tcx: TyCtxt<'tcx>,\n     err: &mut DiagnosticBuilder<'_>,\n     prefix: &str,\n@@ -125,7 +125,7 @@ pub(super) fn note_and_explain_free_region(\n ) {\n     let (description, span) = msg_span_from_free_region(tcx, region, None);\n \n-    emit_msg_span(err, prefix, description, span, suffix);\n+    label_msg_span(err, prefix, description, span, suffix);\n }\n \n fn msg_span_from_free_region(\n@@ -210,6 +210,22 @@ fn emit_msg_span(\n     }\n }\n \n+fn label_msg_span(\n+    err: &mut DiagnosticBuilder<'_>,\n+    prefix: &str,\n+    description: String,\n+    span: Option<Span>,\n+    suffix: &str,\n+) {\n+    let message = format!(\"{}{}{}\", prefix, description, suffix);\n+\n+    if let Some(span) = span {\n+        err.span_label(span, &message);\n+    } else {\n+        err.note(&message);\n+    }\n+}\n+\n pub fn unexpected_hidden_region_diagnostic(\n     tcx: TyCtxt<'tcx>,\n     span: Span,\n@@ -244,7 +260,7 @@ pub fn unexpected_hidden_region_diagnostic(\n             //\n             // (*) if not, the `tainted_by_errors` field would be set to\n             // `Some(ErrorReported)` in any case, so we wouldn't be here at all.\n-            note_and_explain_free_region(\n+            explain_free_region(\n                 tcx,\n                 &mut err,\n                 &format!(\"hidden type `{}` captures \", hidden_ty),"}, {"sha": "ba192aa4ab23149a9e110372a046e522e213d1c9", "filename": "src/test/ui/impl-trait/hidden-lifetimes.stderr", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fhidden-lifetimes.stderr?ref=d4351015378886fd7204cad5b0c74d176bf9151c", "patch": "@@ -2,25 +2,17 @@ error[E0700]: hidden type for `impl Trait` captures lifetime that does not appea\n   --> $DIR/hidden-lifetimes.rs:28:54\n    |\n LL | fn hide_ref<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl Swap + 'a {\n-   |                                                      ^^^^^^^^^^^^^^\n-   |\n-note: hidden type `&'a mut &'b T` captures the lifetime `'b` as defined here\n-  --> $DIR/hidden-lifetimes.rs:28:17\n-   |\n-LL | fn hide_ref<'a, 'b, T: 'static>(x: &'a mut &'b T) -> impl Swap + 'a {\n-   |                 ^^\n+   |                 --                                   ^^^^^^^^^^^^^^\n+   |                 |\n+   |                 hidden type `&'a mut &'b T` captures the lifetime `'b` as defined here\n \n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n   --> $DIR/hidden-lifetimes.rs:45:70\n    |\n LL | fn hide_rc_refcell<'a, 'b: 'a, T: 'static>(x: Rc<RefCell<&'b T>>) -> impl Swap + 'a {\n-   |                                                                      ^^^^^^^^^^^^^^\n-   |\n-note: hidden type `Rc<RefCell<&'b T>>` captures the lifetime `'b` as defined here\n-  --> $DIR/hidden-lifetimes.rs:45:24\n-   |\n-LL | fn hide_rc_refcell<'a, 'b: 'a, T: 'static>(x: Rc<RefCell<&'b T>>) -> impl Swap + 'a {\n-   |                        ^^\n+   |                        --                                            ^^^^^^^^^^^^^^\n+   |                        |\n+   |                        hidden type `Rc<RefCell<&'b T>>` captures the lifetime `'b` as defined here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "cee71400094af6ec3f4b2cb40fa6f1abf8a4a90e", "filename": "src/test/ui/impl-trait/multiple-lifetimes/error-handling-2.stderr", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Ferror-handling-2.stderr?ref=d4351015378886fd7204cad5b0c74d176bf9151c", "patch": "@@ -2,13 +2,9 @@ error[E0700]: hidden type for `impl Trait` captures lifetime that does not appea\n   --> $DIR/error-handling-2.rs:13:60\n    |\n LL | fn foo<'a: 'b, 'b, 'c>(x: &'static i32, mut y: &'a i32) -> E<'b, 'c> {\n-   |                                                            ^^^^^^^^^\n-   |\n-note: hidden type `*mut &'a i32` captures the lifetime `'a` as defined here\n-  --> $DIR/error-handling-2.rs:13:8\n-   |\n-LL | fn foo<'a: 'b, 'b, 'c>(x: &'static i32, mut y: &'a i32) -> E<'b, 'c> {\n-   |        ^^\n+   |        --                                                  ^^^^^^^^^\n+   |        |\n+   |        hidden type `*mut &'a i32` captures the lifetime `'a` as defined here\n \n error: aborting due to previous error\n "}, {"sha": "b935945527857694a252e35676bcacc1ba122a83", "filename": "src/test/ui/impl-trait/region-escape-via-bound.stderr", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fregion-escape-via-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4351015378886fd7204cad5b0c74d176bf9151c/src%2Ftest%2Fui%2Fimpl-trait%2Fregion-escape-via-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fregion-escape-via-bound.stderr?ref=d4351015378886fd7204cad5b0c74d176bf9151c", "patch": "@@ -3,12 +3,9 @@ error[E0700]: hidden type for `impl Trait` captures lifetime that does not appea\n    |\n LL | fn foo(x: Cell<&'x u32>) -> impl Trait<'y>\n    |                             ^^^^^^^^^^^^^^\n-   |\n-note: hidden type `Cell<&'x u32>` captures the lifetime `'x` as defined here\n-  --> $DIR/region-escape-via-bound.rs:17:7\n-   |\n+LL |\n LL | where 'x: 'y\n-   |       ^^\n+   |       -- hidden type `Cell<&'x u32>` captures the lifetime `'x` as defined here\n \n error: aborting due to previous error\n "}]}