{"sha": "0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMGE3MWEzOTMxYmJmZTVjMjk2ZTlmNTVhZGFiYjI1ODU5NzRjMmM=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-04-03T22:40:08Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-04-15T18:34:23Z"}, "message": "Add test case", "tree": {"sha": "d159a0c73621565698edecac4f3a033a85d37266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d159a0c73621565698edecac4f3a033a85d37266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "html_url": "https://github.com/rust-lang/rust/commit/0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e0a71a3931bbfe5c296e9f55adabb2585974c2c/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df768c5c8fcb361c4dc94b4c776d6a78c12862e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/df768c5c8fcb361c4dc94b4c776d6a78c12862e1", "html_url": "https://github.com/rust-lang/rust/commit/df768c5c8fcb361c4dc94b4c776d6a78c12862e1"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "aa5bc345359eb179260b30313c8c7da371700312", "filename": "src/test/mir-opt/simplify-locals-fixedpoint.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0e0a71a3931bbfe5c296e9f55adabb2585974c2c/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e0a71a3931bbfe5c296e9f55adabb2585974c2c/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint.rs?ref=0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "patch": "@@ -0,0 +1,15 @@\n+// compile-flags: -Zmir-opt-level=1\n+\n+fn foo<T>() {\n+    if let (Some(a), None) = (Option::<u8>::None, Option::<T>::None) {\n+        if a > 42u8 {\n+\n+        }\n+    }\n+}\n+\n+fn main() {\n+    foo::<()>();\n+}\n+\n+// EMIT_MIR rustc.foo.SimplifyLocals.diff"}, {"sha": "89326e8e3f6753207ab50118e525fa838a4b5a01", "filename": "src/test/mir-opt/simplify-locals-fixedpoint/rustc.foo.SimplifyLocals.diff", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/0e0a71a3931bbfe5c296e9f55adabb2585974c2c/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint%2Frustc.foo.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/0e0a71a3931bbfe5c296e9f55adabb2585974c2c/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint%2Frustc.foo.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-locals-fixedpoint%2Frustc.foo.SimplifyLocals.diff?ref=0e0a71a3931bbfe5c296e9f55adabb2585974c2c", "patch": "@@ -0,0 +1,65 @@\n+- // MIR for `foo` before SimplifyLocals\n++ // MIR for `foo` after SimplifyLocals\n+  \n+  fn foo() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals-fixedpoint.rs:3:13: 3:13\n+      let mut _1: (std::option::Option<u8>, std::option::Option<T>); // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:30: 4:69\n+      let mut _2: std::option::Option<u8>; // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:31: 4:49\n+      let mut _3: std::option::Option<T>;  // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:51: 4:68\n+      let mut _4: isize;                   // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+      let mut _5: isize;                   // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n+      let _6: u8;                          // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n+      let mut _7: bool;                    // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+      let mut _8: u8;                      // in scope 0 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+      scope 1 {\n+          debug a => _6;                   // in scope 1 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n+      }\n+  \n+      bb0: {\n+          StorageLive(_1);                 // bb0[0]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:30: 4:69\n+          StorageLive(_2);                 // bb0[1]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:31: 4:49\n+          discriminant(_2) = 0;            // bb0[2]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:31: 4:49\n+          StorageLive(_3);                 // bb0[3]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:51: 4:68\n+          discriminant(_3) = 0;            // bb0[4]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:51: 4:68\n+          (_1.0: std::option::Option<u8>) = move _2; // bb0[5]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:30: 4:69\n+          (_1.1: std::option::Option<T>) = move _3; // bb0[6]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:30: 4:69\n+          StorageDead(_3);                 // bb0[7]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:68: 4:69\n+          StorageDead(_2);                 // bb0[8]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:68: 4:69\n+          _5 = discriminant((_1.0: std::option::Option<u8>)); // bb0[9]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n+          switchInt(move _5) -> [1isize: bb1, otherwise: bb3]; // bb0[10]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:13: 4:20\n+      }\n+  \n+      bb1: {\n+          _4 = discriminant((_1.1: std::option::Option<T>)); // bb1[0]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+          switchInt(move _4) -> [0isize: bb2, otherwise: bb3]; // bb1[1]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:22: 4:26\n+      }\n+  \n+      bb2: {\n+          StorageLive(_6);                 // bb2[0]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n+          _6 = (((_1.0: std::option::Option<u8>) as Some).0: u8); // bb2[1]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:18: 4:19\n+          StorageLive(_7);                 // bb2[2]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+          StorageLive(_8);                 // bb2[3]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+          _8 = _6;                         // bb2[4]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:13\n+          _7 = Gt(move _8, const 42u8);    // bb2[5]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:12: 5:20\n+                                           // ty::Const\n+                                           // + ty: u8\n+                                           // + val: Value(Scalar(0x2a))\n+                                           // mir::Constant\n+                                           // + span: $DIR/simplify-locals-fixedpoint.rs:5:16: 5:20\n+                                           // + literal: Const { ty: u8, val: Value(Scalar(0x2a)) }\n+          StorageDead(_8);                 // bb2[6]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:5:19: 5:20\n+          StorageDead(_7);                 // bb2[7]: scope 1 at $DIR/simplify-locals-fixedpoint.rs:8:5: 8:6\n+          StorageDead(_6);                 // bb2[8]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:8:5: 8:6\n+          goto -> bb3;                     // bb2[9]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:4:5: 8:6\n+      }\n+  \n+      bb3: {\n+          drop(_1) -> bb4;                 // bb3[0]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:1: 9:2\n+      }\n+  \n+      bb4: {\n+          StorageDead(_1);                 // bb4[0]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:1: 9:2\n+          return;                          // bb4[1]: scope 0 at $DIR/simplify-locals-fixedpoint.rs:9:2: 9:2\n+      }\n+  }\n+  "}]}