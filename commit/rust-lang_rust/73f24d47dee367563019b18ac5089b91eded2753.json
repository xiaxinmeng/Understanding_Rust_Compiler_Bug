{"sha": "73f24d47dee367563019b18ac5089b91eded2753", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZjI0ZDQ3ZGVlMzY3NTYzMDE5YjE4YWM1MDg5YjkxZWRlZDI3NTM=", "commit": {"author": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-15T03:56:06Z"}, "committer": {"name": "Jeremy Soller", "email": "jackpot51@gmail.com", "date": "2016-11-15T03:56:06Z"}, "message": "Simple implementation of read2", "tree": {"sha": "de10f1f250b5e9348d929f6f7c08fab41c6fa555", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de10f1f250b5e9348d929f6f7c08fab41c6fa555"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73f24d47dee367563019b18ac5089b91eded2753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73f24d47dee367563019b18ac5089b91eded2753", "html_url": "https://github.com/rust-lang/rust/commit/73f24d47dee367563019b18ac5089b91eded2753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73f24d47dee367563019b18ac5089b91eded2753/comments", "author": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackpot51", "id": 7741236, "node_id": "MDQ6VXNlcjc3NDEyMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/7741236?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackpot51", "html_url": "https://github.com/jackpot51", "followers_url": "https://api.github.com/users/jackpot51/followers", "following_url": "https://api.github.com/users/jackpot51/following{/other_user}", "gists_url": "https://api.github.com/users/jackpot51/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackpot51/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackpot51/subscriptions", "organizations_url": "https://api.github.com/users/jackpot51/orgs", "repos_url": "https://api.github.com/users/jackpot51/repos", "events_url": "https://api.github.com/users/jackpot51/events{/privacy}", "received_events_url": "https://api.github.com/users/jackpot51/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de68aced95ab53bc0f69ff4d6867a03d2dd0f8d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/de68aced95ab53bc0f69ff4d6867a03d2dd0f8d7", "html_url": "https://github.com/rust-lang/rust/commit/de68aced95ab53bc0f69ff4d6867a03d2dd0f8d7"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "fff4a10f913d2dfac22177e72b971ccb70c1c43d", "filename": "src/libstd/sys/redox/pipe.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/73f24d47dee367563019b18ac5089b91eded2753/src%2Flibstd%2Fsys%2Fredox%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73f24d47dee367563019b18ac5089b91eded2753/src%2Flibstd%2Fsys%2Fredox%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Fpipe.rs?ref=73f24d47dee367563019b18ac5089b91eded2753", "patch": "@@ -23,9 +23,7 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n \n     libc::pipe2(&mut fds, libc::O_CLOEXEC).map_err(|err| io::Error::from_raw_os_error(err.errno))?;\n \n-    let fd0 = FileDesc::new(fds[0]);\n-    let fd1 = FileDesc::new(fds[1]);\n-    Ok((AnonPipe::from_fd(fd0)?, AnonPipe::from_fd(fd1)?))\n+    Ok((AnonPipe(FileDesc::new(fds[0])), AnonPipe(FileDesc::new(fds[1]))))\n }\n \n impl AnonPipe {\n@@ -50,12 +48,18 @@ impl AnonPipe {\n     pub fn into_fd(self) -> FileDesc { self.0 }\n }\n \n-pub fn read2(_p1: AnonPipe,\n-             _v1: &mut Vec<u8>,\n-             _p2: AnonPipe,\n-             _v2: &mut Vec<u8>) -> io::Result<()> {\n-    ::sys_common::util::dumb_print(format_args!(\"read2\\n\"));\n-    unimplemented!();\n+pub fn read2(p1: AnonPipe,\n+             v1: &mut Vec<u8>,\n+             p2: AnonPipe,\n+             v2: &mut Vec<u8>) -> io::Result<()> {\n+    //TODO: Use event based I/O multiplexing\n+    //unimplemented!()\n+\n+    p1.read_to_end(v1)?;\n+    p2.read_to_end(v2)?;\n+\n+    Ok(())\n+\n     /*\n     // Set both pipes into nonblocking mode as we're gonna be reading from both\n     // in the `select` loop below, and we wouldn't want one to block the other!\n@@ -64,7 +68,6 @@ pub fn read2(_p1: AnonPipe,\n     p1.set_nonblocking(true)?;\n     p2.set_nonblocking(true)?;\n \n-    let max = cmp::max(p1.raw(), p2.raw());\n     loop {\n         // wait for either pipe to become readable using `select`\n         cvt_r(|| unsafe {"}]}