{"sha": "4846affedb3c05cb692f41398b986ad7ed1844aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NDZhZmZlZGIzYzA1Y2I2OTJmNDEzOThiOTg2YWQ3ZWQxODQ0YWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-31T00:09:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-31T00:10:07Z"}, "message": "rustc: \"extern mod { ... }\" should be written \"extern { ... }\" instead", "tree": {"sha": "7f3a2e6d264d9a5201aff6cdd1e878cdbd7b0b76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3a2e6d264d9a5201aff6cdd1e878cdbd7b0b76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4846affedb3c05cb692f41398b986ad7ed1844aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4846affedb3c05cb692f41398b986ad7ed1844aa", "html_url": "https://github.com/rust-lang/rust/commit/4846affedb3c05cb692f41398b986ad7ed1844aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4846affedb3c05cb692f41398b986ad7ed1844aa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ac0f8fd95a6521c46ea32d1a7866635f96e921", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ac0f8fd95a6521c46ea32d1a7866635f96e921", "html_url": "https://github.com/rust-lang/rust/commit/c3ac0f8fd95a6521c46ea32d1a7866635f96e921"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "c83e6893e3cd1d8544c28855dcf1d4e0559783a3", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4846affedb3c05cb692f41398b986ad7ed1844aa", "patch": "@@ -2915,15 +2915,34 @@ struct parser {\n                               attrs: ~[attribute],\n                               items_allowed: bool)\n                            -> item_or_view_item {\n+\n+        let mut must_be_named_mod = false;\n         if self.is_keyword(~\"mod\") {\n+            must_be_named_mod = true;\n             self.expect_keyword(~\"mod\");\n-        } else {\n+        } else if self.is_keyword(~\"module\") {\n+            must_be_named_mod = true;\n             self.expect_keyword(~\"module\");\n+        } else if self.token != token::LBRACE {\n+            self.span_fatal(copy self.span,\n+                            fmt!(\"expected `{` or `mod` but found %s\",\n+                                 token_to_str(self.reader, self.token)));\n         }\n+\n         let (sort, ident) = match self.token {\n-                token::IDENT(*) => (ast::named, self.parse_ident()),\n-                _ => (ast::anonymous,\n-                      token::special_idents::clownshoes_foreign_mod)\n+            token::IDENT(*) => (ast::named, self.parse_ident()),\n+            _ => {\n+                if must_be_named_mod {\n+                    self.span_fatal(copy self.span,\n+                                    fmt!(\"expected foreign module name but \\\n+                                          found %s\",\n+                                         token_to_str(self.reader,\n+                                                      self.token)));\n+                }\n+\n+                (ast::anonymous,\n+                 token::special_idents::clownshoes_foreign_mod)\n+            }\n         };\n \n         // extern mod { ... }"}, {"sha": "a22b425c277ab55f6e93bd0a3d3b07ca04797629", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=4846affedb3c05cb692f41398b986ad7ed1844aa", "patch": "@@ -823,7 +823,6 @@ fn encode_info_for_foreign_item(ecx: @encode_ctxt, ebml_w: ebml::Writer,\n         encode_type(ecx, ebml_w, node_id_to_type(ecx.tcx, nitem.id));\n         encode_symbol(ecx, ebml_w, nitem.id);\n         encode_path(ecx, ebml_w, path, ast_map::path_name(nitem.ident));\n-        ebml_w.end_tag();\n       }\n     }\n     ebml_w.end_tag();"}, {"sha": "0c00752289e342e8d49eb3dc273d482fa2a942f8", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=4846affedb3c05cb692f41398b986ad7ed1844aa", "patch": "@@ -5528,7 +5528,6 @@ fn get_item_val(ccx: @crate_ctxt, id: ast::node_id) -> ValueRef {\n                     let g = do str::as_c_str(*ident) |buf| {\n                         llvm::LLVMAddGlobal(ccx.llmod, type_of(ccx, typ), buf)\n                     };\n-                    ccx.item_symbols.insert(ni.id, copy *ident);\n                     g\n                 }\n             }"}, {"sha": "a13397c227a1cdd0c515047c583a21ac3fb8906a", "filename": "src/test/run-pass/anon-extern-mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4846affedb3c05cb692f41398b986ad7ed1844aa/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs?ref=4846affedb3c05cb692f41398b986ad7ed1844aa", "patch": "@@ -1,9 +1,9 @@\n #[abi = \"cdecl\"]\n #[link_name = \"rustrt\"]\n-extern mod {\n+extern {\n   fn last_os_error() -> ~str;\n }\n \n fn main() {\n   last_os_error();\n-}\n\\ No newline at end of file\n+}"}]}