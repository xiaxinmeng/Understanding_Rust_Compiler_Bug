{"sha": "635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98", "node_id": "C_kwDOAAsO6NoAKDYzNWZmOGUyYThlZTFhY2MzYmM1MTQ0NjA2ZDlkMTJmOWFjNjJkOTg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-04T15:56:21Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-04T15:56:50Z"}, "message": "Support parallel compiler.", "tree": {"sha": "a372114322c4f584c40fd477ddf41f7c4fd97a47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a372114322c4f584c40fd477ddf41f7c4fd97a47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98", "html_url": "https://github.com/rust-lang/rust/commit/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "128f2224afa6bf135a674fc14e5c825f2c76c93f", "url": "https://api.github.com/repos/rust-lang/rust/commits/128f2224afa6bf135a674fc14e5c825f2c76c93f", "html_url": "https://github.com/rust-lang/rust/commit/128f2224afa6bf135a674fc14e5c825f2c76c93f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ffc413d15f52b0528d7c294b554be089940df5fc", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=635ff8e2a8ee1acc3bc5144606d9d12f9ac62d98", "patch": "@@ -404,9 +404,9 @@ where\n         }\n         #[cfg(parallel_compiler)]\n         TryGetJob::JobCompleted(query_blocked_prof_timer) => {\n-            let (v, index) = cache\n-                .lookup(&key, |value, index| (value.clone(), index))\n-                .unwrap_or_else(|_| panic!(\"value must be in cache after waiting\"));\n+            let Some((v, index)) = cache.lookup(&key) else {\n+                panic!(\"value must be in cache after waiting\")\n+            };\n \n             if std::intrinsics::unlikely(qcx.dep_context().profiler().enabled()) {\n                 qcx.dep_context().profiler().query_cache_hit(index.into());"}]}