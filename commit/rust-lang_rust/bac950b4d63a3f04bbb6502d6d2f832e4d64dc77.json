{"sha": "bac950b4d63a3f04bbb6502d6d2f832e4d64dc77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYzk1MGI0ZDYzYTNmMDRiYmI2NTAyZDZkMmY4MzJlNGQ2NGRjNzc=", "commit": {"author": {"name": "Camille TJHOA", "email": "camille.tjhoa@outlook.com", "date": "2015-04-28T19:50:04Z"}, "committer": {"name": "Camille TJHOA", "email": "camille.tjhoa@outlook.com", "date": "2015-05-18T10:22:45Z"}, "message": "Fix and improve README", "tree": {"sha": "ab79b11434e6a7ce5ca9edf4769f096e6579afa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab79b11434e6a7ce5ca9edf4769f096e6579afa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77", "html_url": "https://github.com/rust-lang/rust/commit/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77/comments", "author": {"login": "ctjhoa", "id": 1716173, "node_id": "MDQ6VXNlcjE3MTYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctjhoa", "html_url": "https://github.com/ctjhoa", "followers_url": "https://api.github.com/users/ctjhoa/followers", "following_url": "https://api.github.com/users/ctjhoa/following{/other_user}", "gists_url": "https://api.github.com/users/ctjhoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctjhoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctjhoa/subscriptions", "organizations_url": "https://api.github.com/users/ctjhoa/orgs", "repos_url": "https://api.github.com/users/ctjhoa/repos", "events_url": "https://api.github.com/users/ctjhoa/events{/privacy}", "received_events_url": "https://api.github.com/users/ctjhoa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ctjhoa", "id": 1716173, "node_id": "MDQ6VXNlcjE3MTYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctjhoa", "html_url": "https://github.com/ctjhoa", "followers_url": "https://api.github.com/users/ctjhoa/followers", "following_url": "https://api.github.com/users/ctjhoa/following{/other_user}", "gists_url": "https://api.github.com/users/ctjhoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctjhoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctjhoa/subscriptions", "organizations_url": "https://api.github.com/users/ctjhoa/orgs", "repos_url": "https://api.github.com/users/ctjhoa/repos", "events_url": "https://api.github.com/users/ctjhoa/events{/privacy}", "received_events_url": "https://api.github.com/users/ctjhoa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b82a28ce71f9118dc297cf7c3e6ea5db96ec9e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b82a28ce71f9118dc297cf7c3e6ea5db96ec9e4", "html_url": "https://github.com/rust-lang/rust/commit/3b82a28ce71f9118dc297cf7c3e6ea5db96ec9e4"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "4190005175a1d69947779ff10b8d34938f0a0002", "filename": "README.md", "status": "modified", "additions": 47, "deletions": 7, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/bac950b4d63a3f04bbb6502d6d2f832e4d64dc77/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=bac950b4d63a3f04bbb6502d6d2f832e4d64dc77", "patch": "@@ -1,14 +1,14 @@\n-rust-clippy\n-===========\n+#rust-clippy\n+[![Build Status](https://travis-ci.org/Manishearth/rust-clippy.svg?branch=master)](https://travis-ci.org/Manishearth/rust-clippy)\n \n A collection of lints that give helpful tips to newbies and catch oversights.\n \n-\n+##Lints\n Lints included in this crate:\n \n  - `single_match`: Warns when a match statement with a single nontrivial arm (i.e, where the other arm is `_ => {}`) is used, and recommends `if let` instead.\n  - `box_vec`: Warns on usage of `Box<Vec<T>>`\n- - `dlist`: Warns on usage of `DList`\n+ - `linkedlist`: Warns on usage of `LinkedList`\n  - `str_to_string`: Warns on usage of `str::to_string()`\n  - `toplevel_ref_arg`: Warns when a function argument is declared `ref` (i.e. `fn foo(ref x: u8)`, but not `fn foo((ref x, ref y): (u8, u8))`)\n  - `eq_op`: Warns on equal operands on both sides of a comparison or bitwise combination\n@@ -31,10 +31,50 @@ To use, add the following lines to your Cargo.toml:\n clippy = \"*\"\n ```\n \n-In your code, you may add `#![plugin(clippy)]` to use it (you may also need to include a `#![feature(plugin)]` line)\n+More to come, please [file an issue](https://github.com/Manishearth/rust-clippy/issues) if you have ideas!\n \n-You can allow/warn/deny the whole set using the `clippy` lint group (`#[allow(clippy)]`, etc)\n+##Usage\n+Add in your `Cargo.toml`:\n+```\n+[dependencies.clippy]\n+git = \"https://github.com/Manishearth/rust-clippy\"\n+```\n \n-More to come, please [file an issue](https://github.com/Manishearth/rust-clippy/issues) if you have ideas!\n+Sample `main.rs`:\n+```\n+#![feature(plugin)]\n+\n+#![plugin(clippy)]\n+// OPTIONS GO HERE\n+\n+fn main(){\n+    let x = Some(1u8);\n+    match x {\n+        Some(y) => println!(\"{:?}\", y),\n+        _ => ()\n+    }\n+}\n+```\n+\n+Produce this warning:\n+```\n+src/main.rs:8:5: 11:6 warning: You seem to be trying to use match for destructuring a single type. Did you mean to use `if let`?, #[warn(single_match)] on by default\n+src/main.rs:8     match x {\n+src/main.rs:9         Some(y) => println!(\"{:?}\", y),\n+src/main.rs:10         _ => ()\n+src/main.rs:11     }\n+src/main.rs:8:5: 11:6 note: Try if let Some(y) = x { ... }\n+src/main.rs:8     match x {\n+src/main.rs:9         Some(y) => println!(\"{:?}\", y),\n+src/main.rs:10         _ => ()\n+src/main.rs:11     }\n+```\n+\n+You can add `OPTIONS` to `allow`/`warn`/`deny`:\n+- the whole set using the `clippy` lint group (`#[deny(clippy)]`, etc)\n+- only some lints (`#[deny(single_match, box_vec)]`, etc)\n+\n+*`deny` produce error instead of warnings*\n \n+##License\n Licensed under [MPL](https://www.mozilla.org/MPL/2.0/). If you're having issues with the license, let me know and I'll try to change it to something more permissive."}]}