{"sha": "a854874e6a089f67a658a4f5bb4b0d7150535573", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NTQ4NzRlNmEwODlmNjdhNjU4YTRmNWJiNGIwZDcxNTA1MzU1NzM=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-18T18:25:43Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-18T18:25:43Z"}, "message": "Fix latest nightly breakage\n\nI'm not sure if there are better ways to use the RwLock API, though. But\nit seems to work.", "tree": {"sha": "c7bc83eee10c9b1bba6426b058b15d57986938fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7bc83eee10c9b1bba6426b058b15d57986938fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a854874e6a089f67a658a4f5bb4b0d7150535573", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJa143dAAoJELb6Bqbg4mZbBxAQAK15pMyZrY6uTs4usx9x5ylL\nZggLHel4GfEoy31EZrooK7ijDjaZvBcpkcwhkF3IqpczaL40hURkUHF/3ykCUh8r\neytuCK1VQz4q30mUHH9xe+pjpTsG9o9Su9PBcIENvI+D/fKm37FbwsGguggkDPss\nzxxC2HM2HWDY05eRQdRsD4+GqJg/lXAJqcmzH4rL4roo2KZ4luevvquC4/lQHFQS\n9obVthL/cjcVTPYQ5vqjdPhhVA40I052ZE08NK0ochXSki1/6imlveZHPFLfHhvg\ngYtzCAdXXtAZlMD9+rOeypBlCXmEm8/9aFryYKLoW3y9LTjhczEQoZBXLd74UBLr\neUvcm5FoZ3yISWmhga2clbz3E5CTUr7azvN4OuR2HPjAZCDvfep5FJzvLFqGkTYc\ntVRz4ZXkJkX+skq1DsuJmwJLciSK3AcCkCdF5Ya7NsDR6Z1TePCF0zYfSGUoNnA2\noOLw7QKpvPkbFTcbN8I9YJV0x9PGTollxpx9RQxfmcJnJpPb9R6VNoPcfotkGShT\nkH3QTmtKNUQI3x7mLJgqST5DljpF9T52Ednl3wU8eEZ+t1kxYk9+FnuQ8ZoiuGqP\nifRSw3wxWuwzYrXyH43zT7Vp6YAXu+Lhd0+Y24oTHlFdNELN+RHEP4hRDkCAQgfK\nGP6/se4nQW/3fYHlZZRg\n=WLXt\n-----END PGP SIGNATURE-----", "payload": "tree c7bc83eee10c9b1bba6426b058b15d57986938fd\nparent 0c665f4a31fc8d2bfb93e54e743fd8087980f67b\nauthor Philipp Hansch <dev@phansch.net> 1524075943 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1524075943 +0200\n\nFix latest nightly breakage\n\nI'm not sure if there are better ways to use the RwLock API, though. But\nit seems to work.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a854874e6a089f67a658a4f5bb4b0d7150535573", "html_url": "https://github.com/rust-lang/rust/commit/a854874e6a089f67a658a4f5bb4b0d7150535573", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a854874e6a089f67a658a4f5bb4b0d7150535573/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c665f4a31fc8d2bfb93e54e743fd8087980f67b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c665f4a31fc8d2bfb93e54e743fd8087980f67b", "html_url": "https://github.com/rust-lang/rust/commit/0c665f4a31fc8d2bfb93e54e743fd8087980f67b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "515bd8976b95476bd5d78b2a8b8e9b75f547a9a2", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a854874e6a089f67a658a4f5bb4b0d7150535573/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a854874e6a089f67a658a4f5bb4b0d7150535573/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=a854874e6a089f67a658a4f5bb4b0d7150535573", "patch": "@@ -1798,7 +1798,7 @@ fn is_ref_iterable_type(cx: &LateContext, e: &Expr) -> bool {\n fn is_iterable_array(ty: Ty) -> bool {\n     // IntoIterator is currently only implemented for array sizes <= 32 in rustc\n     match ty.sty {\n-        ty::TyArray(_, n) => (0..=32).contains(n.val.to_raw_bits().expect(\"array length\")),\n+        ty::TyArray(_, n) => (0..=32).contains(&n.val.to_raw_bits().expect(\"array length\")),\n         _ => false,\n     }\n }"}, {"sha": "f8682884a50ee3e9a3bf469ff697be258a3b6a4b", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a854874e6a089f67a658a4f5bb4b0d7150535573/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a854874e6a089f67a658a4f5bb4b0d7150535573/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=a854874e6a089f67a658a4f5bb4b0d7150535573", "patch": "@@ -12,7 +12,7 @@ extern crate clippy_lints;\n \n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n-    if let Ok(lint_store) = reg.sess.lint_store.try_borrow() {\n+    reg.sess.lint_store.with_read_lock(|lint_store| {\n         for (lint, _, _) in lint_store.get_lint_groups() {\n             if lint == \"clippy\" {\n                 reg.sess\n@@ -21,7 +21,7 @@ pub fn plugin_registrar(reg: &mut Registry) {\n                 return;\n             }\n         }\n-    }\n+    });\n \n     clippy_lints::register_plugins(reg);\n }"}]}