{"sha": "097c04cf433048585dd9e3f63b30e03cc3509e4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5N2MwNGNmNDMzMDQ4NTg1ZGQ5ZTNmNjNiMzBlMDNjYzM1MDllNGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-24T14:15:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-02-24T14:15:55Z"}, "message": "Auto merge of #58315 - gnzlbg:returns_twice, r=alexcrichton\n\nImplement unstable ffi_return_twice attribute\n\nThis PR implements [RFC2633](https://github.com/rust-lang/rfcs/pull/2633)\n\nr? @eddyb", "tree": {"sha": "2eede5dc9fa313a4df57e6215f019f5e08028568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2eede5dc9fa313a4df57e6215f019f5e08028568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/097c04cf433048585dd9e3f63b30e03cc3509e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/097c04cf433048585dd9e3f63b30e03cc3509e4b", "html_url": "https://github.com/rust-lang/rust/commit/097c04cf433048585dd9e3f63b30e03cc3509e4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/097c04cf433048585dd9e3f63b30e03cc3509e4b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e17c48e2f21eefd59748e364234efc7037a3ec96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e17c48e2f21eefd59748e364234efc7037a3ec96", "html_url": "https://github.com/rust-lang/rust/commit/e17c48e2f21eefd59748e364234efc7037a3ec96"}, {"sha": "94aa74004efddf0cfb6fe4bb65eee9effbe40ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/94aa74004efddf0cfb6fe4bb65eee9effbe40ae8", "html_url": "https://github.com/rust-lang/rust/commit/94aa74004efddf0cfb6fe4bb65eee9effbe40ae8"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "df02b91996f346a4b5cd34e90b4086f6f70ece34", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -2518,6 +2518,9 @@ bitflags! {\n         /// `#[used]`: indicates that LLVM can't eliminate this function (but the\n         /// linker can!).\n         const USED                      = 1 << 9;\n+        /// #[ffi_returns_twice], indicates that an extern function can return\n+        /// multiple times\n+        const FFI_RETURNS_TWICE = 1 << 10;\n     }\n }\n "}, {"sha": "dab5cab65cd02f130677c53241d5966c5ac18013", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -223,6 +223,9 @@ pub fn from_fn_attrs(\n     if codegen_fn_attrs.flags.contains(CodegenFnAttrFlags::COLD) {\n         Attribute::Cold.apply_llfn(Function, llfn);\n     }\n+    if codegen_fn_attrs.flags.contains(CodegenFnAttrFlags::FFI_RETURNS_TWICE) {\n+        Attribute::ReturnsTwice.apply_llfn(Function, llfn);\n+    }\n     if codegen_fn_attrs.flags.contains(CodegenFnAttrFlags::NAKED) {\n         naked(llfn, true);\n     }"}, {"sha": "fe2664118f798c64ec34143b38edfb44566804d1", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -114,6 +114,7 @@ pub enum Attribute {\n     SanitizeMemory  = 22,\n     NonLazyBind     = 23,\n     OptimizeNone    = 24,\n+    ReturnsTwice    = 25,\n }\n \n /// LLVMIntPredicate"}, {"sha": "ba3df76050a8b3d633fe96d1fb5af60ae72832a1", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -2388,6 +2388,18 @@ fn codegen_fn_attrs<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, id: DefId) -> Codegen\n             codegen_fn_attrs.flags |= CodegenFnAttrFlags::ALLOCATOR;\n         } else if attr.check_name(\"unwind\") {\n             codegen_fn_attrs.flags |= CodegenFnAttrFlags::UNWIND;\n+        } else if attr.check_name(\"ffi_returns_twice\") {\n+            if tcx.is_foreign_item(id) {\n+                codegen_fn_attrs.flags |= CodegenFnAttrFlags::FFI_RETURNS_TWICE;\n+            } else {\n+                // `#[ffi_returns_twice]` is only allowed `extern fn`s\n+                struct_span_err!(\n+                    tcx.sess,\n+                    attr.span,\n+                    E0724,\n+                    \"`#[ffi_returns_twice]` may only be used on foreign functions\"\n+                ).emit();\n+            }\n         } else if attr.check_name(\"rustc_allocator_nounwind\") {\n             codegen_fn_attrs.flags |= CodegenFnAttrFlags::RUSTC_ALLOCATOR_NOUNWIND;\n         } else if attr.check_name(\"naked\") {"}, {"sha": "caad342c138f03ea6268e7358191ce769e78c0bf", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -4738,4 +4738,5 @@ register_diagnostics! {\n     E0698, // type inside generator must be known in this context\n     E0719, // duplicate values for associated type binding\n     E0722, // Malformed #[optimize] attribute\n+    E0724, // `#[ffi_returns_twice]` is only allowed in foreign functions\n }"}, {"sha": "c9b441193b76dbb563778b8ff5d0cdded837d6bb", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -290,6 +290,9 @@ declare_features! (\n     // The `repr(i128)` annotation for enums.\n     (active, repr128, \"1.16.0\", Some(35118), None),\n \n+    // Allows the use of `#[ffi_returns_twice]` on foreign functions.\n+    (active, ffi_returns_twice, \"1.34.0\", Some(58314), None),\n+\n     // The `unadjusted` ABI; perma-unstable.\n     //\n     // rustc internal\n@@ -1128,6 +1131,11 @@ pub const BUILTIN_ATTRIBUTES: &[(&str, AttributeType, AttributeTemplate, Attribu\n                                  \"the `#[naked]` attribute \\\n                                   is an experimental feature\",\n                                  cfg_fn!(naked_functions))),\n+    (\"ffi_returns_twice\", Whitelisted, template!(Word), Gated(Stability::Unstable,\n+                                 \"ffi_returns_twice\",\n+                                 \"the `#[ffi_returns_twice]` attribute \\\n+                                  is an experimental feature\",\n+                                 cfg_fn!(ffi_returns_twice))),\n     (\"target_feature\", Whitelisted, template!(List: r#\"enable = \"name\"\"#), Ungated),\n     (\"export_name\", Whitelisted, template!(NameValueStr: \"name\"), Ungated),\n     (\"inline\", Whitelisted, template!(Word, List: \"always|never\"), Ungated),"}, {"sha": "a00417a3629278d40770864d8eff18c57d78a6b7", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -190,6 +190,8 @@ static Attribute::AttrKind fromRust(LLVMRustAttribute Kind) {\n     return Attribute::NonLazyBind;\n   case OptimizeNone:\n     return Attribute::OptimizeNone;\n+  case ReturnsTwice:\n+    return Attribute::ReturnsTwice;\n   }\n   report_fatal_error(\"bad AttributeKind\");\n }"}, {"sha": "a9d267cdb317589a06261d46463a48ce98fd39f7", "filename": "src/rustllvm/rustllvm.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Frustllvm%2Frustllvm.h", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Frustllvm%2Frustllvm.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.h?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -85,6 +85,7 @@ enum LLVMRustAttribute {\n   SanitizeMemory = 22,\n   NonLazyBind = 23,\n   OptimizeNone = 24,\n+  ReturnsTwice = 25,\n };\n \n typedef struct OpaqueRustString *RustStringRef;"}, {"sha": "4db328f1cdfafa2881c6a75f0a3285b0acb04a3c", "filename": "src/test/codegen/ffi-returns-twice.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fcodegen%2Fffi-returns-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fcodegen%2Fffi-returns-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fffi-returns-twice.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: -C no-prepopulate-passes\n+#![crate_type = \"lib\"]\n+#![feature(ffi_returns_twice)]\n+\n+pub fn bar() { unsafe { foo() } }\n+\n+extern {\n+    // CHECK-LABEL: declare void @foo()\n+    // CHECK-SAME: [[ATTRS:#[0-9]+]]\n+    // CHECK-DAG: attributes [[ATTRS]] = { {{.*}}returns_twice{{.*}} }\n+    #[ffi_returns_twice] pub fn foo();\n+}"}, {"sha": "d3df6e5a852b514fe6dabbaaf6ccaabae20c425a", "filename": "src/test/ui/feature-gates/feature-gate-ffi_returns_twice.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -0,0 +1,7 @@\n+// ignore-tidy-linelength\n+#![crate_type = \"lib\"]\n+\n+extern {\n+    #[ffi_returns_twice] //~ ERROR the `#[ffi_returns_twice]` attribute is an experimental feature (see issue #58314)\n+    pub fn foo();\n+}"}, {"sha": "5c111fe78f48a9319c2809af2fbe79330f7e8f93", "filename": "src/test/ui/feature-gates/feature-gate-ffi_returns_twice.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -0,0 +1,11 @@\n+error[E0658]: the `#[ffi_returns_twice]` attribute is an experimental feature (see issue #58314)\n+  --> $DIR/feature-gate-ffi_returns_twice.rs:5:5\n+   |\n+LL |     #[ffi_returns_twice] //~ ERROR the `#[ffi_returns_twice]` attribute is an experimental feature (see issue #58314)\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(ffi_returns_twice)] to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "93c372e1d83dc63323c05d5074fd8e5114a06df5", "filename": "src/test/ui/ffi_returns_twice.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Fffi_returns_twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Fffi_returns_twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_returns_twice.rs?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -0,0 +1,6 @@\n+// ignore-tidy-linelength\n+#![feature(ffi_returns_twice)]\n+#![crate_type = \"lib\"]\n+\n+#[ffi_returns_twice] //~ ERROR `#[ffi_returns_twice]` may only be used on foreign functions\n+pub fn foo() {}"}, {"sha": "c2105ae1dac7c20f95f9e2d31a05c26279f80422", "filename": "src/test/ui/ffi_returns_twice.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Fffi_returns_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/097c04cf433048585dd9e3f63b30e03cc3509e4b/src%2Ftest%2Fui%2Fffi_returns_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fffi_returns_twice.stderr?ref=097c04cf433048585dd9e3f63b30e03cc3509e4b", "patch": "@@ -0,0 +1,9 @@\n+error[E0724]: `#[ffi_returns_twice]` may only be used on foreign functions\n+  --> $DIR/ffi_returns_twice.rs:5:1\n+   |\n+LL | #[ffi_returns_twice] //~ ERROR `#[ffi_returns_twice]` may only be used on foreign functions\n+   | ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0724`."}]}