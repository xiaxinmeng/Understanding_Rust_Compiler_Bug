{"sha": "3dfe256b5f85a05f29a55e07d8327f5d95e12719", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZmUyNTZiNWY4NWEwNWYyOWE1NWUwN2Q4MzI3ZjVkOTVlMTI3MTk=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-22T15:00:26Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2017-12-22T15:01:47Z"}, "message": "Added 'move occurs because `X` is not `Copy`' note.", "tree": {"sha": "4847902eb963b84373434460f50e1dd6527567f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4847902eb963b84373434460f50e1dd6527567f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dfe256b5f85a05f29a55e07d8327f5d95e12719", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlo9HlsACgkQAXYLT59T\n8VROvxAAjGUnG+UncDtqMOEAKQjCo6ZtgH/25y+12nQBuqiDGB10uMrugHqkSzA/\nByMQFkbSUL9MO/zMNIchkKlrmLMHpCRnC+fJlyRxzJYvljhsiyQyJrvpfVnx+xUb\nXDz1B01SHoMWlv0LC25SUu6y/RJMNmgYDpoK1uxi0YjInAsB8jU3VIUkRrsiyrsq\nfh4V4osdG24szUxuLB+daKazujSnKM8j6+3oVpdUMKD8mfDXEUJKENCPJDrWrA+P\n2QrSHlmJ6IfxjS0L1MepdzN2rv+U+e9aH8pJncIfDlAnrnynC6vTupjO2823rZoa\n9XrGb9nFTrxe3yZVLUNFa7vF5F9quXx+Qqft+qzkdhpD3cAuchjSr2FX7TNA2rZy\n8BtUyN2Ts5x7t3PdoGpBiA1iPkonkdGBVJrs5p2xENj3uzOEwXSaMM28JGPl36Di\nfOiac0DubD+0yxjSlmohVlccuf98gZL6S8Wu1ed/O66awQ1GYugGgEZtjOUYDQDP\nUQiWjqnA8DQkxs9QG4zwtFxp7wYA77eb1spMFlYrk8AV1q9ylP/Owzf0xv7QJdqd\n14XvtANJdPmZgJtp7V62meJYo6iy84OHCoMyBp+0EJrCyW3bqlb3AchUZlkPmI9m\nWeZvWoEadVqHi0AnjoHo4kQg2RsrifzwhLxhyzK8IlfleubkHrc=\n=v4vR\n-----END PGP SIGNATURE-----", "payload": "tree 4847902eb963b84373434460f50e1dd6527567f7\nparent c428b7d9c1e771d7a7184c99fd8c6471a00ddf2e\nauthor David Wood <david@davidtw.co> 1513954826 +0000\ncommitter David Wood <david@davidtw.co> 1513954907 +0000\n\nAdded 'move occurs because `X` is not `Copy`' note.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dfe256b5f85a05f29a55e07d8327f5d95e12719", "html_url": "https://github.com/rust-lang/rust/commit/3dfe256b5f85a05f29a55e07d8327f5d95e12719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dfe256b5f85a05f29a55e07d8327f5d95e12719/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c428b7d9c1e771d7a7184c99fd8c6471a00ddf2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c428b7d9c1e771d7a7184c99fd8c6471a00ddf2e", "html_url": "https://github.com/rust-lang/rust/commit/c428b7d9c1e771d7a7184c99fd8c6471a00ddf2e"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "87b8a6ae584eaa2b4745b43b3a81412038bab984", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/3dfe256b5f85a05f29a55e07d8327f5d95e12719/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dfe256b5f85a05f29a55e07d8327f5d95e12719/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=3dfe256b5f85a05f29a55e07d8327f5d95e12719", "patch": "@@ -81,7 +81,34 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     err.span_label(move_span, format!(\"value moved{} here\", move_msg));\n                 };\n             }\n-            //FIXME: add note for closure\n+\n+            if let Some(ty) = self.retrieve_type_for_place(place) {\n+                let needs_note = match ty.sty {\n+                    ty::TypeVariants::TyClosure(id, _) => {\n+                        let tables = self.tcx.typeck_tables_of(id);\n+                        let node_id = self.tcx.hir.as_local_node_id(id).unwrap();\n+                        let hir_id = self.tcx.hir.node_to_hir_id(node_id);\n+                        if let Some(_) = tables.closure_kind_origins().get(hir_id) {\n+                            false\n+                        } else {\n+                            true\n+                        }\n+                    },\n+                    _ => true,\n+                };\n+\n+                if needs_note {\n+                    let note_msg = match self.describe_place(place) {\n+                        Some(name) => format!(\"`{}`\", name),\n+                        None => \"value\".to_owned(),\n+                    };\n+\n+                    err.note(&format!(\"move occurs because {} has type `{}`, \\\n+                                       which does not implement the `Copy` trait\",\n+                                       note_msg, ty));\n+                }\n+            }\n+\n             err.emit();\n         }\n     }\n@@ -655,4 +682,21 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     fn retrieve_borrow_span(&self, borrow: &BorrowData) -> Span {\n         self.mir.source_info(borrow.location).span\n     }\n+\n+    // Retrieve type of a place for the current MIR representation\n+    fn retrieve_type_for_place(&self, place: &Place<'tcx>) -> Option<ty::Ty> {\n+        match place {\n+            Place::Local(local) => {\n+                let local = &self.mir.local_decls[*local];\n+                Some(local.ty)\n+            },\n+            Place::Static(ref st) => Some(st.ty),\n+            Place::Projection(ref proj) => {\n+                match proj.elem {\n+                    ProjectionElem::Field(_, ty) => Some(ty),\n+                    _ => None,\n+                }\n+            },\n+        }\n+    }\n }"}]}