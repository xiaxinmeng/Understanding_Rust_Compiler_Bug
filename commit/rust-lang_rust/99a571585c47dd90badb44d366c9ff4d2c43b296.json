{"sha": "99a571585c47dd90badb44d366c9ff4d2c43b296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YTU3MTU4NWM0N2RkOTBiYWRiNDRkMzY2YzlmZjRkMmM0M2IyOTY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-08T23:26:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-09T01:19:26Z"}, "message": "syntax: Pretty print impls with new syntax", "tree": {"sha": "947d31390a056cfa58b23a6f402098094ca68ada", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/947d31390a056cfa58b23a6f402098094ca68ada"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99a571585c47dd90badb44d366c9ff4d2c43b296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99a571585c47dd90badb44d366c9ff4d2c43b296", "html_url": "https://github.com/rust-lang/rust/commit/99a571585c47dd90badb44d366c9ff4d2c43b296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99a571585c47dd90badb44d366c9ff4d2c43b296/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "436a90e3d78a81379e36c8acec49e170bb1cd0e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/436a90e3d78a81379e36c8acec49e170bb1cd0e6", "html_url": "https://github.com/rust-lang/rust/commit/436a90e3d78a81379e36c8acec49e170bb1cd0e6"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "60c310100a12b507962e8f97167f3457845d4d0d", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/99a571585c47dd90badb44d366c9ff4d2c43b296/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99a571585c47dd90badb44d366c9ff4d2c43b296/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=99a571585c47dd90badb44d366c9ff4d2c43b296", "patch": "@@ -496,19 +496,20 @@ fn print_item(s: ps, &&item: @ast::item) {\n       }\n       ast::item_impl(tps, traits, ty, methods) => {\n         head(s, ~\"impl\");\n-        word(s.s, *item.ident);\n-        print_type_params(s, tps);\n-        space(s.s);\n+        if tps.is_not_empty() {\n+            print_type_params(s, tps);\n+            space(s.s);\n+        }\n+        print_type(s, ty);\n+\n         if vec::len(traits) != 0u {\n-            word_nbsp(s, ~\"of\");\n+            word_space(s, ~\":\");\n             do commasep(s, inconsistent, traits) |s, p| {\n                 print_path(s, p.path, false);\n             }\n-            space(s.s);\n         }\n-        word_nbsp(s, ~\"for\");\n-        print_type(s, ty);\n         space(s.s);\n+\n         bopen(s);\n         for methods.each |meth| {\n            print_method(s, meth);"}]}