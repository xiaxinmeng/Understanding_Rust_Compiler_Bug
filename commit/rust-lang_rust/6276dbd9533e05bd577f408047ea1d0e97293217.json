{"sha": "6276dbd9533e05bd577f408047ea1d0e97293217", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNzZkYmQ5NTMzZTA1YmQ1NzdmNDA4MDQ3ZWExZDBlOTcyOTMyMTc=", "commit": {"author": {"name": "Lance Roy", "email": "ldr709@gmail.com", "date": "2017-09-04T06:27:20Z"}, "committer": {"name": "Lance Roy", "email": "ldr709@gmail.com", "date": "2017-09-04T08:00:15Z"}, "message": "Derive std::mem::ManuallyDrop from Clone and Copy.\n\nAlthough types that don't implement Drop can't be Copyable, this can\nstill be useful when ManuallyDrop is used inside a generic type. This\ndoesn't derive from Copy as that would require T: Copy + Clone, instead\nit provides an impl of Clone for T: Clone.", "tree": {"sha": "64df64ac16ba0b1b7bc1ae4637bacc6b71eff960", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64df64ac16ba0b1b7bc1ae4637bacc6b71eff960"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6276dbd9533e05bd577f408047ea1d0e97293217", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6276dbd9533e05bd577f408047ea1d0e97293217", "html_url": "https://github.com/rust-lang/rust/commit/6276dbd9533e05bd577f408047ea1d0e97293217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6276dbd9533e05bd577f408047ea1d0e97293217/comments", "author": {"login": "ldr709", "id": 8682972, "node_id": "MDQ6VXNlcjg2ODI5NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8682972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldr709", "html_url": "https://github.com/ldr709", "followers_url": "https://api.github.com/users/ldr709/followers", "following_url": "https://api.github.com/users/ldr709/following{/other_user}", "gists_url": "https://api.github.com/users/ldr709/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldr709/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldr709/subscriptions", "organizations_url": "https://api.github.com/users/ldr709/orgs", "repos_url": "https://api.github.com/users/ldr709/repos", "events_url": "https://api.github.com/users/ldr709/events{/privacy}", "received_events_url": "https://api.github.com/users/ldr709/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ldr709", "id": 8682972, "node_id": "MDQ6VXNlcjg2ODI5NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/8682972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldr709", "html_url": "https://github.com/ldr709", "followers_url": "https://api.github.com/users/ldr709/followers", "following_url": "https://api.github.com/users/ldr709/following{/other_user}", "gists_url": "https://api.github.com/users/ldr709/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldr709/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldr709/subscriptions", "organizations_url": "https://api.github.com/users/ldr709/orgs", "repos_url": "https://api.github.com/users/ldr709/repos", "events_url": "https://api.github.com/users/ldr709/events{/privacy}", "received_events_url": "https://api.github.com/users/ldr709/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e22a3cf7e12b622b143694942504c66a544dc4c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e22a3cf7e12b622b143694942504c66a544dc4c5", "html_url": "https://github.com/rust-lang/rust/commit/e22a3cf7e12b622b143694942504c66a544dc4c5"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "4cc0a5e49d94e8b89255afa5a04de3458020b603", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6276dbd9533e05bd577f408047ea1d0e97293217/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6276dbd9533e05bd577f408047ea1d0e97293217/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=6276dbd9533e05bd577f408047ea1d0e97293217", "patch": "@@ -821,6 +821,7 @@ pub fn discriminant<T>(v: &T) -> Discriminant<T> {\n /// ```\n #[stable(feature = \"manually_drop\", since = \"1.20.0\")]\n #[allow(unions_with_drop_fields)]\n+#[derive(Copy)]\n pub union ManuallyDrop<T>{ value: T }\n \n impl<T> ManuallyDrop<T> {\n@@ -899,6 +900,19 @@ impl<T: ::fmt::Debug> ::fmt::Debug for ManuallyDrop<T> {\n     }\n }\n \n+#[stable(feature = \"manually_drop\", since = \"1.20.0\")]\n+impl<T: Clone> Clone for ManuallyDrop<T> {\n+    fn clone(&self) -> Self {\n+        use ::ops::Deref;\n+        ManuallyDrop::new(self.deref().clone())\n+    }\n+\n+    fn clone_from(&mut self, source: &Self) {\n+        use ::ops::DerefMut;\n+        self.deref_mut().clone_from(source);\n+    }\n+}\n+\n /// Tells LLVM that this point in the code is not reachable, enabling further\n /// optimizations.\n ///"}]}