{"sha": "1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlODc5MDhjNTI4NGJkOWQ5ZDk1MmEwY2U5OGJmYWMyYzAzMzlhNDA=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-07T23:16:37Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Accept whitespace between `&` and `mut`", "tree": {"sha": "7d5c73f346810c2027438532155fcfeeaed7ec73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d5c73f346810c2027438532155fcfeeaed7ec73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "html_url": "https://github.com/rust-lang/rust/commit/1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e87908c5284bd9d9d952a0ce98bfac2c0339a40/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5812bdd97ee0ad961fa6680f91f26c34a94018", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5812bdd97ee0ad961fa6680f91f26c34a94018", "html_url": "https://github.com/rust-lang/rust/commit/3a5812bdd97ee0ad961fa6680f91f26c34a94018"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c641e960ac5aaf24826034c58b9c973f8bb42da3", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e87908c5284bd9d9d952a0ce98bfac2c0339a40/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e87908c5284bd9d9d952a0ce98bfac2c0339a40/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=1e87908c5284bd9d9d952a0ce98bfac2c0339a40", "patch": "@@ -404,7 +404,7 @@ impl<'a, 'gcx, 'tcx> MirBorrowckCtxt<'a, 'gcx, 'tcx> {\n                     .span_to_snippet(pat_span)\n                     .unwrap();\n                 if pat_snippet.starts_with('&') {\n-                    let pat_snippet = &pat_snippet[1..];\n+                    let pat_snippet = pat_snippet[1..].trim_left();\n                     let suggestion;\n                     if pat_snippet.starts_with(\"mut\")\n                         && pat_snippet[\"mut\".len()..].starts_with(Pattern_White_Space)"}]}