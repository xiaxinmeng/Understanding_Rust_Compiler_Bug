{"sha": "c18c7c7059cb1c63aad9892ecbed58c229c74098", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxOGM3YzcwNTljYjFjNjNhYWQ5ODkyZWNiZWQ1OGMyMjljNzQwOTg=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-15T03:28:24Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-12-16T02:22:15Z"}, "message": "Remove redundant assignment\n\n`crate.name` is already set by `tcx.crate_name`, there's no need to\noverride it.", "tree": {"sha": "2598c2f0f84cd56dadab064de95291c9d44ce1f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2598c2f0f84cd56dadab064de95291c9d44ce1f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18c7c7059cb1c63aad9892ecbed58c229c74098", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18c7c7059cb1c63aad9892ecbed58c229c74098", "html_url": "https://github.com/rust-lang/rust/commit/c18c7c7059cb1c63aad9892ecbed58c229c74098", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18c7c7059cb1c63aad9892ecbed58c229c74098/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f76ecd0668fcdb289456cdc72a39ad15467cc454", "url": "https://api.github.com/repos/rust-lang/rust/commits/f76ecd0668fcdb289456cdc72a39ad15467cc454", "html_url": "https://github.com/rust-lang/rust/commit/f76ecd0668fcdb289456cdc72a39ad15467cc454"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "24045b4e29dc93c03da3f1661d97ef4695bd51fc", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c18c7c7059cb1c63aad9892ecbed58c229c74098/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18c7c7059cb1c63aad9892ecbed58c229c74098/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=c18c7c7059cb1c63aad9892ecbed58c229c74098", "patch": "@@ -519,17 +519,12 @@ fn main_options(options: config::Options) -> MainResult {\n     // compiler all the way through the analysis passes. The rustdoc output is\n     // then generated from the cleaned AST of the crate. This runs all the\n     // plug/cleaning passes.\n-    let crate_name = options.crate_name.clone();\n     let crate_version = options.crate_version.clone();\n     let output_format = options.output_format;\n     let (mut krate, renderinfo, renderopts, sess) = core::run_core(options);\n \n     info!(\"finished with rustc\");\n \n-    if let Some(name) = crate_name {\n-        krate.name = name\n-    }\n-\n     krate.version = crate_version;\n \n     if show_coverage {"}]}