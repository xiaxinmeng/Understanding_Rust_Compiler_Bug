{"sha": "c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "node_id": "C_kwDOAAsO6NoAKGMxNDBlMjVlYzhiNWRhMzA2MmFlMmNiZGNjNTU4YjY4MmJjOGFiZDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-13T19:58:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-13T19:58:39Z"}, "message": "Rollup merge of #110283 - saethlin:check-panics-before-alignment, r=bjorn3\n\nOnly emit alignment checks if we have a panic_impl\n\nFixes https://github.com/rust-lang/rust/issues/109996\n\nr? `@bjorn3` because you commented that this situation could impact you as well", "tree": {"sha": "5702abc84e30617a4eab712db6ecd65331b79870", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5702abc84e30617a4eab712db6ecd65331b79870"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkOF7vCRBK7hj4Ov3rIwAAaEIIAGBsO3wrlkmRt8+TO+udiFWJ\nEEWxCvaFfE7GJniDMAvfy7twg7A+mWDDCODOmMozyszIBXMLriyLlBFBGHshqZXG\n5DC/o9VsQEIHtaU6mhh+FMn67OVA6mASqdAxAXN6q9Tly86p+HPFVqbIp3b5bg67\nHwmqx1tMijrI7vijl0KG64W03xlT4iY7bphI82TD8Yhgnn73NgnrVeSL//ACbEcH\nE/qyk//vG/2Ed5EVamoKvvtI1CkICSQKbsr7uKiAhWgzD/Ztg2STPlV0x2E5Dmm5\nJEkvRDJI7mMPPBDZ2A08z63DLlyg8N4q1qEDNEcX/ClZYIVVhFwjp7d6u4QIw3U=\n=E+F2\n-----END PGP SIGNATURE-----\n", "payload": "tree 5702abc84e30617a4eab712db6ecd65331b79870\nparent 759d4e86514de200a6d335518e4e912816f12477\nparent 4061eb589797ab4498f00ba0be337e4a1355cb49\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681415919 +0200\ncommitter GitHub <noreply@github.com> 1681415919 +0200\n\nRollup merge of #110283 - saethlin:check-panics-before-alignment, r=bjorn3\n\nOnly emit alignment checks if we have a panic_impl\n\nFixes https://github.com/rust-lang/rust/issues/109996\n\nr? `@bjorn3` because you commented that this situation could impact you as well\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "html_url": "https://github.com/rust-lang/rust/commit/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759d4e86514de200a6d335518e4e912816f12477", "url": "https://api.github.com/repos/rust-lang/rust/commits/759d4e86514de200a6d335518e4e912816f12477", "html_url": "https://github.com/rust-lang/rust/commit/759d4e86514de200a6d335518e4e912816f12477"}, {"sha": "4061eb589797ab4498f00ba0be337e4a1355cb49", "url": "https://api.github.com/repos/rust-lang/rust/commits/4061eb589797ab4498f00ba0be337e4a1355cb49", "html_url": "https://github.com/rust-lang/rust/commit/4061eb589797ab4498f00ba0be337e4a1355cb49"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c76dc56065c32763399a471bba06c48745e58b00", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "patch": "@@ -1,5 +1,6 @@\n use crate::MirPass;\n use rustc_hir::def_id::DefId;\n+use rustc_hir::lang_items::LangItem;\n use rustc_index::vec::IndexVec;\n use rustc_middle::mir::*;\n use rustc_middle::mir::{\n@@ -17,6 +18,12 @@ impl<'tcx> MirPass<'tcx> for CheckAlignment {\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        // This pass emits new panics. If for whatever reason we do not have a panic\n+        // implementation, running this pass may cause otherwise-valid code to not compile.\n+        if tcx.lang_items().get(LangItem::PanicImpl).is_none() {\n+            return;\n+        }\n+\n         let basic_blocks = body.basic_blocks.as_mut();\n         let local_decls = &mut body.local_decls;\n "}, {"sha": "04f410b77a3b079fe687303ad84dd657c474ab73", "filename": "tests/ui/mir/checks_without_panic_impl.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2/tests%2Fui%2Fmir%2Fchecks_without_panic_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c140e25ec8b5da3062ae2cbdcc558b682bc8abd2/tests%2Fui%2Fmir%2Fchecks_without_panic_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmir%2Fchecks_without_panic_impl.rs?ref=c140e25ec8b5da3062ae2cbdcc558b682bc8abd2", "patch": "@@ -0,0 +1,17 @@\n+// Ensures that the alignment check we insert for raw pointer dereferences\n+// does not prevent crates without a panic_impl from compiling.\n+// See rust-lang/rust#109996\n+\n+// build-pass\n+// compile-flags: -Cdebug-assertions=yes\n+\n+#![crate_type = \"lib\"]\n+\n+#![feature(lang_items)]\n+#![feature(no_core)]\n+#![no_core]\n+\n+#[lang = \"sized\"]\n+trait Foo {}\n+\n+pub unsafe fn foo(x: *const i32) -> &'static i32 { unsafe { &*x } }"}]}