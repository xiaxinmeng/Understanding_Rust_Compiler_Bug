{"sha": "a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MTgxYmZkYjc0YmE4MjhkZjgzYzZlZDZhNzBlNjgzOThlNWFkODY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T13:35:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-19T13:35:10Z"}, "message": "internal: more focused tests for const arguments", "tree": {"sha": "6536d9bd185b208585a6c2869ed7f70c6cb75e22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6536d9bd185b208585a6c2869ed7f70c6cb75e22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "html_url": "https://github.com/rust-lang/rust/commit/a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09531b703d0ac1d408945aaf7d402beecc05cbae", "url": "https://api.github.com/repos/rust-lang/rust/commits/09531b703d0ac1d408945aaf7d402beecc05cbae", "html_url": "https://github.com/rust-lang/rust/commit/09531b703d0ac1d408945aaf7d402beecc05cbae"}], "stats": {"total": 497, "additions": 321, "deletions": 176}, "files": [{"sha": "b47912d07d493da2bdf3dc177af3bde583260ceb", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -23,25 +23,29 @@ pub(super) fn opt_generic_arg_list(p: &mut Parser, colon_colon_required: bool) {\n     m.complete(p, GENERIC_ARG_LIST);\n }\n \n-// test type_arg\n-// type A = B<'static, i32, 1, { 2 }, Item=u64, true, false>;\n+// test generic_arg\n+// type T = S<i32>;\n fn generic_arg(p: &mut Parser) {\n     match p.current() {\n         LIFETIME_IDENT => lifetime_arg(p),\n+        T!['{'] | T![true] | T![false] | T![-] => const_arg(p),\n+        k if k.is_literal() => const_arg(p),\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item, Item::Item, Item::<true>, Item: Display, Item<'a> = Item>>(printables: T) {}\n         IDENT if [T![<], T![=], T![:]].contains(&p.nth(1)) => {\n             let m = p.start();\n             name_ref(p);\n             opt_generic_arg_list(p, false);\n             match p.current() {\n-                // NameRef<...> =\n+                // test assoc_type_eq\n+                // type T = StreamingIterator<Item<'a> = &'a T>;\n                 T![=] => {\n                     p.bump_any();\n                     types::type_(p);\n                     m.complete(p, ASSOC_TYPE_ARG);\n                 }\n-                // NameRef<...>:\n+                // test assoc_type_bound\n+                // type T = StreamingIterator<Item<'a>: Clone>;\n                 T![:] if !p.at(T![::]) => {\n                     generic_params::bounds(p);\n                     m.complete(p, ASSOC_TYPE_ARG);\n@@ -53,42 +57,52 @@ fn generic_arg(p: &mut Parser) {\n                 }\n             }\n         }\n-        // test const_generic_negated_literal\n-        // fn f() { S::<-1> }\n-        T!['{'] | T![true] | T![false] | T![-] => const_arg(p),\n-        k if k.is_literal() => const_arg(p),\n         _ => type_arg(p),\n     }\n }\n \n+// test lifetime_arg\n+// type T = S<'static>;\n fn lifetime_arg(p: &mut Parser) {\n     let m = p.start();\n     lifetime(p);\n     m.complete(p, LIFETIME_ARG);\n }\n \n+// test const_arg\n+// type T = S<92>;\n pub(super) fn const_arg(p: &mut Parser) {\n     let m = p.start();\n     match p.current() {\n+        // test const_arg_block\n+        // type T = S<{90 + 2}>;\n         T!['{'] => {\n             expressions::block_expr(p);\n             m.complete(p, CONST_ARG);\n         }\n+        // test const_arg_literal\n+        // type T = S<\"hello\", 0xdeadbeef>;\n         k if k.is_literal() => {\n             expressions::literal(p);\n             m.complete(p, CONST_ARG);\n         }\n+        // test const_arg_bool_literal\n+        // type T = S<true>;\n         T![true] | T![false] => {\n             expressions::literal(p);\n             m.complete(p, CONST_ARG);\n         }\n+        // test const_arg_negative_number\n+        // type T = S<-92>;\n         T![-] => {\n             let lm = p.start();\n             p.bump(T![-]);\n             expressions::literal(p);\n             lm.complete(p, PREFIX_EXPR);\n             m.complete(p, CONST_ARG);\n         }\n+        // test const_arg_path\n+        // struct S<const N: u32 = u32::MAX>;\n         _ => {\n             let lm = p.start();\n             paths::use_path(p);"}, {"sha": "5414b3b20df03db00a219cc7f9a4080b7a0aee21", "filename": "crates/parser/src/grammar/generic_params.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_params.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -81,8 +81,6 @@ fn const_param(p: &mut Parser, m: Marker) {\n     if p.at(T![=]) {\n         // test const_param_defaults\n         // struct A<const N: i32 = -1>;\n-        // struct B<const N: i32 = {}>;\n-        // struct C<const N: i32 = some::CONST>;\n         p.bump(T![=]);\n         generic_args::const_arg(p);\n     }"}, {"sha": "11efa23a421b83c602e47214bdc3d80f5fdebce6", "filename": "crates/syntax/test_data/parser/inline/ok/0039_type_arg.rast", "status": "removed", "additions": 0, "deletions": 66, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast?ref=09531b703d0ac1d408945aaf7d402beecc05cbae", "patch": "@@ -1,66 +0,0 @@\n-SOURCE_FILE@0..59\n-  TYPE_ALIAS@0..58\n-    TYPE_KW@0..4 \"type\"\n-    WHITESPACE@4..5 \" \"\n-    NAME@5..6\n-      IDENT@5..6 \"A\"\n-    WHITESPACE@6..7 \" \"\n-    EQ@7..8 \"=\"\n-    WHITESPACE@8..9 \" \"\n-    PATH_TYPE@9..57\n-      PATH@9..57\n-        PATH_SEGMENT@9..57\n-          NAME_REF@9..10\n-            IDENT@9..10 \"B\"\n-          GENERIC_ARG_LIST@10..57\n-            L_ANGLE@10..11 \"<\"\n-            LIFETIME_ARG@11..18\n-              LIFETIME@11..18\n-                LIFETIME_IDENT@11..18 \"'static\"\n-            COMMA@18..19 \",\"\n-            WHITESPACE@19..20 \" \"\n-            TYPE_ARG@20..23\n-              PATH_TYPE@20..23\n-                PATH@20..23\n-                  PATH_SEGMENT@20..23\n-                    NAME_REF@20..23\n-                      IDENT@20..23 \"i32\"\n-            COMMA@23..24 \",\"\n-            WHITESPACE@24..25 \" \"\n-            CONST_ARG@25..26\n-              LITERAL@25..26\n-                INT_NUMBER@25..26 \"1\"\n-            COMMA@26..27 \",\"\n-            WHITESPACE@27..28 \" \"\n-            CONST_ARG@28..33\n-              BLOCK_EXPR@28..33\n-                L_CURLY@28..29 \"{\"\n-                WHITESPACE@29..30 \" \"\n-                LITERAL@30..31\n-                  INT_NUMBER@30..31 \"2\"\n-                WHITESPACE@31..32 \" \"\n-                R_CURLY@32..33 \"}\"\n-            COMMA@33..34 \",\"\n-            WHITESPACE@34..35 \" \"\n-            ASSOC_TYPE_ARG@35..43\n-              NAME_REF@35..39\n-                IDENT@35..39 \"Item\"\n-              EQ@39..40 \"=\"\n-              PATH_TYPE@40..43\n-                PATH@40..43\n-                  PATH_SEGMENT@40..43\n-                    NAME_REF@40..43\n-                      IDENT@40..43 \"u64\"\n-            COMMA@43..44 \",\"\n-            WHITESPACE@44..45 \" \"\n-            CONST_ARG@45..49\n-              LITERAL@45..49\n-                TRUE_KW@45..49 \"true\"\n-            COMMA@49..50 \",\"\n-            WHITESPACE@50..51 \" \"\n-            CONST_ARG@51..56\n-              LITERAL@51..56\n-                FALSE_KW@51..56 \"false\"\n-            R_ANGLE@56..57 \">\"\n-    SEMICOLON@57..58 \";\"\n-  WHITESPACE@58..59 \"\\n\""}, {"sha": "6a8721a73e23a47eccac82d21e1de610487bf058", "filename": "crates/syntax/test_data/parser/inline/ok/0039_type_arg.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rs?ref=09531b703d0ac1d408945aaf7d402beecc05cbae", "patch": "@@ -1 +0,0 @@\n-type A = B<'static, i32, 1, { 2 }, Item=u64, true, false>;"}, {"sha": "b20e523dc1b503a9e58702ee8c5bb5dde774a9ab", "filename": "crates/syntax/test_data/parser/inline/ok/0164_const_generic_negated_literal.rast", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rast", "raw_url": "https://github.com/rust-lang/rust/raw/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rast?ref=09531b703d0ac1d408945aaf7d402beecc05cbae", "patch": "@@ -1,30 +0,0 @@\n-SOURCE_FILE@0..19\n-  FN@0..18\n-    FN_KW@0..2 \"fn\"\n-    WHITESPACE@2..3 \" \"\n-    NAME@3..4\n-      IDENT@3..4 \"f\"\n-    PARAM_LIST@4..6\n-      L_PAREN@4..5 \"(\"\n-      R_PAREN@5..6 \")\"\n-    WHITESPACE@6..7 \" \"\n-    BLOCK_EXPR@7..18\n-      L_CURLY@7..8 \"{\"\n-      WHITESPACE@8..9 \" \"\n-      PATH_EXPR@9..16\n-        PATH@9..16\n-          PATH_SEGMENT@9..16\n-            NAME_REF@9..10\n-              IDENT@9..10 \"S\"\n-            GENERIC_ARG_LIST@10..16\n-              COLON2@10..12 \"::\"\n-              L_ANGLE@12..13 \"<\"\n-              CONST_ARG@13..15\n-                PREFIX_EXPR@13..15\n-                  MINUS@13..14 \"-\"\n-                  LITERAL@14..15\n-                    INT_NUMBER@14..15 \"1\"\n-              R_ANGLE@15..16 \">\"\n-      WHITESPACE@16..17 \" \"\n-      R_CURLY@17..18 \"}\"\n-  WHITESPACE@18..19 \"\\n\""}, {"sha": "8a81d05cd94d1c6eea9ea4e6af223370777d5c77", "filename": "crates/syntax/test_data/parser/inline/ok/0164_const_generic_negated_literal.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09531b703d0ac1d408945aaf7d402beecc05cbae/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0164_const_generic_negated_literal.rs?ref=09531b703d0ac1d408945aaf7d402beecc05cbae", "patch": "@@ -1 +0,0 @@\n-fn f() { S::<-1> }"}, {"sha": "8677f8ae2c810c8a5a81b2f05f8da00ccc166228", "filename": "crates/syntax/test_data/parser/inline/ok/0165_const_param_defaults.rast", "status": "modified", "additions": 1, "deletions": 66, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@0..96\n+SOURCE_FILE@0..29\n   STRUCT@0..28\n     STRUCT_KW@0..6 \"struct\"\n     WHITESPACE@6..7 \" \"\n@@ -29,68 +29,3 @@ SOURCE_FILE@0..96\n       R_ANGLE@26..27 \">\"\n     SEMICOLON@27..28 \";\"\n   WHITESPACE@28..29 \"\\n\"\n-  STRUCT@29..57\n-    STRUCT_KW@29..35 \"struct\"\n-    WHITESPACE@35..36 \" \"\n-    NAME@36..37\n-      IDENT@36..37 \"B\"\n-    GENERIC_PARAM_LIST@37..56\n-      L_ANGLE@37..38 \"<\"\n-      CONST_PARAM@38..55\n-        CONST_KW@38..43 \"const\"\n-        WHITESPACE@43..44 \" \"\n-        NAME@44..45\n-          IDENT@44..45 \"N\"\n-        COLON@45..46 \":\"\n-        WHITESPACE@46..47 \" \"\n-        PATH_TYPE@47..50\n-          PATH@47..50\n-            PATH_SEGMENT@47..50\n-              NAME_REF@47..50\n-                IDENT@47..50 \"i32\"\n-        WHITESPACE@50..51 \" \"\n-        EQ@51..52 \"=\"\n-        WHITESPACE@52..53 \" \"\n-        CONST_ARG@53..55\n-          BLOCK_EXPR@53..55\n-            L_CURLY@53..54 \"{\"\n-            R_CURLY@54..55 \"}\"\n-      R_ANGLE@55..56 \">\"\n-    SEMICOLON@56..57 \";\"\n-  WHITESPACE@57..58 \"\\n\"\n-  STRUCT@58..95\n-    STRUCT_KW@58..64 \"struct\"\n-    WHITESPACE@64..65 \" \"\n-    NAME@65..66\n-      IDENT@65..66 \"C\"\n-    GENERIC_PARAM_LIST@66..94\n-      L_ANGLE@66..67 \"<\"\n-      CONST_PARAM@67..93\n-        CONST_KW@67..72 \"const\"\n-        WHITESPACE@72..73 \" \"\n-        NAME@73..74\n-          IDENT@73..74 \"N\"\n-        COLON@74..75 \":\"\n-        WHITESPACE@75..76 \" \"\n-        PATH_TYPE@76..79\n-          PATH@76..79\n-            PATH_SEGMENT@76..79\n-              NAME_REF@76..79\n-                IDENT@76..79 \"i32\"\n-        WHITESPACE@79..80 \" \"\n-        EQ@80..81 \"=\"\n-        WHITESPACE@81..82 \" \"\n-        CONST_ARG@82..93\n-          PATH_EXPR@82..93\n-            PATH@82..93\n-              PATH@82..86\n-                PATH_SEGMENT@82..86\n-                  NAME_REF@82..86\n-                    IDENT@82..86 \"some\"\n-              COLON2@86..88 \"::\"\n-              PATH_SEGMENT@88..93\n-                NAME_REF@88..93\n-                  IDENT@88..93 \"CONST\"\n-      R_ANGLE@93..94 \">\"\n-    SEMICOLON@94..95 \";\"\n-  WHITESPACE@95..96 \"\\n\""}, {"sha": "879ecffa75d3a89e322e5cbae4e74e274392a710", "filename": "crates/syntax/test_data/parser/inline/ok/0165_const_param_defaults.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0165_const_param_defaults.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -1,3 +1 @@\n struct A<const N: i32 = -1>;\n-struct B<const N: i32 = {}>;\n-struct C<const N: i32 = some::CONST>;"}, {"sha": "9020d1b86178961f896b623c2141195e170a2301", "filename": "crates/syntax/test_data/parser/inline/ok/0183_const_arg_block.rast", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,31 @@\n+SOURCE_FILE@0..22\n+  TYPE_ALIAS@0..21\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..20\n+      PATH@9..20\n+        PATH_SEGMENT@9..20\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..20\n+            L_ANGLE@10..11 \"<\"\n+            CONST_ARG@11..19\n+              BLOCK_EXPR@11..19\n+                L_CURLY@11..12 \"{\"\n+                BIN_EXPR@12..18\n+                  LITERAL@12..14\n+                    INT_NUMBER@12..14 \"90\"\n+                  WHITESPACE@14..15 \" \"\n+                  PLUS@15..16 \"+\"\n+                  WHITESPACE@16..17 \" \"\n+                  LITERAL@17..18\n+                    INT_NUMBER@17..18 \"2\"\n+                R_CURLY@18..19 \"}\"\n+            R_ANGLE@19..20 \">\"\n+    SEMICOLON@20..21 \";\"\n+  WHITESPACE@21..22 \"\\n\""}, {"sha": "1c279db289c2fdca7c2d977a6c6004de02f4b9e4", "filename": "crates/syntax/test_data/parser/inline/ok/0183_const_arg_block.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0183_const_arg_block.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<{90 + 2}>;"}, {"sha": "15bfcb26efbff94ae6d9fa75f2abdf9e757380a3", "filename": "crates/syntax/test_data/parser/inline/ok/0184_const_arg.rast", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,22 @@\n+SOURCE_FILE@0..16\n+  TYPE_ALIAS@0..15\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..14\n+      PATH@9..14\n+        PATH_SEGMENT@9..14\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..14\n+            L_ANGLE@10..11 \"<\"\n+            CONST_ARG@11..13\n+              LITERAL@11..13\n+                INT_NUMBER@11..13 \"92\"\n+            R_ANGLE@13..14 \">\"\n+    SEMICOLON@14..15 \";\"\n+  WHITESPACE@15..16 \"\\n\""}, {"sha": "8b5e5dbe13c224f3b4deb7c956d94baba485df05", "filename": "crates/syntax/test_data/parser/inline/ok/0184_const_arg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0184_const_arg.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<92>;"}, {"sha": "24519dc84198838da2535e18fa3583029e413514", "filename": "crates/syntax/test_data/parser/inline/ok/0185_assoc_type_bound.rast", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,37 @@\n+SOURCE_FILE@0..45\n+  TYPE_ALIAS@0..44\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..43\n+      PATH@9..43\n+        PATH_SEGMENT@9..43\n+          NAME_REF@9..26\n+            IDENT@9..26 \"StreamingIterator\"\n+          GENERIC_ARG_LIST@26..43\n+            L_ANGLE@26..27 \"<\"\n+            ASSOC_TYPE_ARG@27..42\n+              NAME_REF@27..31\n+                IDENT@27..31 \"Item\"\n+              GENERIC_ARG_LIST@31..35\n+                L_ANGLE@31..32 \"<\"\n+                LIFETIME_ARG@32..34\n+                  LIFETIME@32..34\n+                    LIFETIME_IDENT@32..34 \"'a\"\n+                R_ANGLE@34..35 \">\"\n+              COLON@35..36 \":\"\n+              WHITESPACE@36..37 \" \"\n+              TYPE_BOUND_LIST@37..42\n+                TYPE_BOUND@37..42\n+                  PATH_TYPE@37..42\n+                    PATH@37..42\n+                      PATH_SEGMENT@37..42\n+                        NAME_REF@37..42\n+                          IDENT@37..42 \"Clone\"\n+            R_ANGLE@42..43 \">\"\n+    SEMICOLON@43..44 \";\"\n+  WHITESPACE@44..45 \"\\n\""}, {"sha": "daae97e4fd50a3216d28897f356cdc838a8b717f", "filename": "crates/syntax/test_data/parser/inline/ok/0185_assoc_type_bound.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0185_assoc_type_bound.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = StreamingIterator<Item<'a>: Clone>;"}, {"sha": "812d222211ce66c97ce61ef70375cb0b90a92a62", "filename": "crates/syntax/test_data/parser/inline/ok/0186_lifetime_arg.rast", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,22 @@\n+SOURCE_FILE@0..21\n+  TYPE_ALIAS@0..20\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..19\n+      PATH@9..19\n+        PATH_SEGMENT@9..19\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..19\n+            L_ANGLE@10..11 \"<\"\n+            LIFETIME_ARG@11..18\n+              LIFETIME@11..18\n+                LIFETIME_IDENT@11..18 \"'static\"\n+            R_ANGLE@18..19 \">\"\n+    SEMICOLON@19..20 \";\"\n+  WHITESPACE@20..21 \"\\n\""}, {"sha": "41715aa273fb8dcbf2b8cfc69d9916a23763f805", "filename": "crates/syntax/test_data/parser/inline/ok/0186_lifetime_arg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0186_lifetime_arg.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<'static>;"}, {"sha": "308cea77f55ba1bd0e9448aae4e5de319ea671ee", "filename": "crates/syntax/test_data/parser/inline/ok/0187_assoc_type_eq.rast", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,41 @@\n+SOURCE_FILE@0..46\n+  TYPE_ALIAS@0..45\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..44\n+      PATH@9..44\n+        PATH_SEGMENT@9..44\n+          NAME_REF@9..26\n+            IDENT@9..26 \"StreamingIterator\"\n+          GENERIC_ARG_LIST@26..44\n+            L_ANGLE@26..27 \"<\"\n+            ASSOC_TYPE_ARG@27..43\n+              NAME_REF@27..31\n+                IDENT@27..31 \"Item\"\n+              GENERIC_ARG_LIST@31..35\n+                L_ANGLE@31..32 \"<\"\n+                LIFETIME_ARG@32..34\n+                  LIFETIME@32..34\n+                    LIFETIME_IDENT@32..34 \"'a\"\n+                R_ANGLE@34..35 \">\"\n+              WHITESPACE@35..36 \" \"\n+              EQ@36..37 \"=\"\n+              WHITESPACE@37..38 \" \"\n+              REF_TYPE@38..43\n+                AMP@38..39 \"&\"\n+                LIFETIME@39..41\n+                  LIFETIME_IDENT@39..41 \"'a\"\n+                WHITESPACE@41..42 \" \"\n+                PATH_TYPE@42..43\n+                  PATH@42..43\n+                    PATH_SEGMENT@42..43\n+                      NAME_REF@42..43\n+                        IDENT@42..43 \"T\"\n+            R_ANGLE@43..44 \">\"\n+    SEMICOLON@44..45 \";\"\n+  WHITESPACE@45..46 \"\\n\""}, {"sha": "3591417473e93265a0ca13aabb88a66aaea27e4c", "filename": "crates/syntax/test_data/parser/inline/ok/0187_assoc_type_eq.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0187_assoc_type_eq.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = StreamingIterator<Item<'a> = &'a T>;"}, {"sha": "8da0121001ee9a7537ff484fcae61a6149825c73", "filename": "crates/syntax/test_data/parser/inline/ok/0188_const_arg_path.rast", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,37 @@\n+SOURCE_FILE@0..35\n+  STRUCT@0..34\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"S\"\n+    GENERIC_PARAM_LIST@8..33\n+      L_ANGLE@8..9 \"<\"\n+      CONST_PARAM@9..32\n+        CONST_KW@9..14 \"const\"\n+        WHITESPACE@14..15 \" \"\n+        NAME@15..16\n+          IDENT@15..16 \"N\"\n+        COLON@16..17 \":\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"u32\"\n+        WHITESPACE@21..22 \" \"\n+        EQ@22..23 \"=\"\n+        WHITESPACE@23..24 \" \"\n+        CONST_ARG@24..32\n+          PATH_EXPR@24..32\n+            PATH@24..32\n+              PATH@24..27\n+                PATH_SEGMENT@24..27\n+                  NAME_REF@24..27\n+                    IDENT@24..27 \"u32\"\n+              COLON2@27..29 \"::\"\n+              PATH_SEGMENT@29..32\n+                NAME_REF@29..32\n+                  IDENT@29..32 \"MAX\"\n+      R_ANGLE@32..33 \">\"\n+    SEMICOLON@33..34 \";\"\n+  WHITESPACE@34..35 \"\\n\""}, {"sha": "ee075f3e50f317440006dd74f71ac1f755c94600", "filename": "crates/syntax/test_data/parser/inline/ok/0188_const_arg_path.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0188_const_arg_path.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+struct S<const N: u32 = u32::MAX>;"}, {"sha": "a94cd256aaa8c7da62c7626d8d2d132961451ba1", "filename": "crates/syntax/test_data/parser/inline/ok/0189_const_arg_literal.rast", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,27 @@\n+SOURCE_FILE@0..33\n+  TYPE_ALIAS@0..32\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..31\n+      PATH@9..31\n+        PATH_SEGMENT@9..31\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..31\n+            L_ANGLE@10..11 \"<\"\n+            CONST_ARG@11..18\n+              LITERAL@11..18\n+                STRING@11..18 \"\\\"hello\\\"\"\n+            COMMA@18..19 \",\"\n+            WHITESPACE@19..20 \" \"\n+            CONST_ARG@20..30\n+              LITERAL@20..30\n+                INT_NUMBER@20..30 \"0xdeadbeef\"\n+            R_ANGLE@30..31 \">\"\n+    SEMICOLON@31..32 \";\"\n+  WHITESPACE@32..33 \"\\n\""}, {"sha": "7eacada73ada8a28eb852da417555dbd70f17008", "filename": "crates/syntax/test_data/parser/inline/ok/0189_const_arg_literal.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0189_const_arg_literal.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<\"hello\", 0xdeadbeef>;"}, {"sha": "c41d29071bd67ac1330f9d45ecabe3e3087d4128", "filename": "crates/syntax/test_data/parser/inline/ok/0190_generic_arg.rast", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,25 @@\n+SOURCE_FILE@0..17\n+  TYPE_ALIAS@0..16\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..15\n+      PATH@9..15\n+        PATH_SEGMENT@9..15\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..15\n+            L_ANGLE@10..11 \"<\"\n+            TYPE_ARG@11..14\n+              PATH_TYPE@11..14\n+                PATH@11..14\n+                  PATH_SEGMENT@11..14\n+                    NAME_REF@11..14\n+                      IDENT@11..14 \"i32\"\n+            R_ANGLE@14..15 \">\"\n+    SEMICOLON@15..16 \";\"\n+  WHITESPACE@16..17 \"\\n\""}, {"sha": "f2ccc558bb5da93b550d6a29165d8985cc49f8d6", "filename": "crates/syntax/test_data/parser/inline/ok/0190_generic_arg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0190_generic_arg.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<i32>;"}, {"sha": "87ff6cb7bf2162a7802b899c5c5997536711256d", "filename": "crates/syntax/test_data/parser/inline/ok/0191_const_arg_negative_number.rast", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,24 @@\n+SOURCE_FILE@0..17\n+  TYPE_ALIAS@0..16\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..15\n+      PATH@9..15\n+        PATH_SEGMENT@9..15\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..15\n+            L_ANGLE@10..11 \"<\"\n+            CONST_ARG@11..14\n+              PREFIX_EXPR@11..14\n+                MINUS@11..12 \"-\"\n+                LITERAL@12..14\n+                  INT_NUMBER@12..14 \"92\"\n+            R_ANGLE@14..15 \">\"\n+    SEMICOLON@15..16 \";\"\n+  WHITESPACE@16..17 \"\\n\""}, {"sha": "d0a87bdc03963dddadb7f3195d6c61481bed5b3e", "filename": "crates/syntax/test_data/parser/inline/ok/0191_const_arg_negative_number.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0191_const_arg_negative_number.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<-92>;"}, {"sha": "7c44c6b82d451774f43dbf5e399b7685c6bb9aca", "filename": "crates/syntax/test_data/parser/inline/ok/0192_const_arg_bool_literal.rast", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rast", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rast?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1,22 @@\n+SOURCE_FILE@0..18\n+  TYPE_ALIAS@0..17\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"T\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..16\n+      PATH@9..16\n+        PATH_SEGMENT@9..16\n+          NAME_REF@9..10\n+            IDENT@9..10 \"S\"\n+          GENERIC_ARG_LIST@10..16\n+            L_ANGLE@10..11 \"<\"\n+            CONST_ARG@11..15\n+              LITERAL@11..15\n+                TRUE_KW@11..15 \"true\"\n+            R_ANGLE@15..16 \">\"\n+    SEMICOLON@16..17 \";\"\n+  WHITESPACE@17..18 \"\\n\""}, {"sha": "4b92e2d487acef5cdcb961938458fded4693917f", "filename": "crates/syntax/test_data/parser/inline/ok/0192_const_arg_bool_literal.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6181bfdb74ba828df83c6ed6a70e68398e5ad86/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0192_const_arg_bool_literal.rs?ref=a6181bfdb74ba828df83c6ed6a70e68398e5ad86", "patch": "@@ -0,0 +1 @@\n+type T = S<true>;"}]}