{"sha": "786e3ea31a5ca19651612e56f5d2df84a3845638", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NmUzZWEzMWE1Y2ExOTY1MTYxMmU1NmY1ZDJkZjg0YTM4NDU2Mzg=", "commit": {"author": {"name": "Will Crozier", "email": "willcrozi@gmail.com", "date": "2020-10-17T09:56:54Z"}, "committer": {"name": "Will Crozier", "email": "willcrozi@gmail.com", "date": "2020-10-17T10:03:45Z"}, "message": "Fix grammar in note for orphan-rule error [E0210]", "tree": {"sha": "c35d610a147689781bbadf03698158f3df75c21d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c35d610a147689781bbadf03698158f3df75c21d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/786e3ea31a5ca19651612e56f5d2df84a3845638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/786e3ea31a5ca19651612e56f5d2df84a3845638", "html_url": "https://github.com/rust-lang/rust/commit/786e3ea31a5ca19651612e56f5d2df84a3845638", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/786e3ea31a5ca19651612e56f5d2df84a3845638/comments", "author": {"login": "willcrozi", "id": 8547876, "node_id": "MDQ6VXNlcjg1NDc4NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/8547876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrozi", "html_url": "https://github.com/willcrozi", "followers_url": "https://api.github.com/users/willcrozi/followers", "following_url": "https://api.github.com/users/willcrozi/following{/other_user}", "gists_url": "https://api.github.com/users/willcrozi/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrozi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrozi/subscriptions", "organizations_url": "https://api.github.com/users/willcrozi/orgs", "repos_url": "https://api.github.com/users/willcrozi/repos", "events_url": "https://api.github.com/users/willcrozi/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrozi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrozi", "id": 8547876, "node_id": "MDQ6VXNlcjg1NDc4NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/8547876?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrozi", "html_url": "https://github.com/willcrozi", "followers_url": "https://api.github.com/users/willcrozi/followers", "following_url": "https://api.github.com/users/willcrozi/following{/other_user}", "gists_url": "https://api.github.com/users/willcrozi/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrozi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrozi/subscriptions", "organizations_url": "https://api.github.com/users/willcrozi/orgs", "repos_url": "https://api.github.com/users/willcrozi/repos", "events_url": "https://api.github.com/users/willcrozi/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrozi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a51185fd4600e96cc79a3db9da3c4bf927f2281", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a51185fd4600e96cc79a3db9da3c4bf927f2281", "html_url": "https://github.com/rust-lang/rust/commit/5a51185fd4600e96cc79a3db9da3c4bf927f2281"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "b2009962aba2ec9b00d97300f22115b203d6214f", "filename": "compiler/rustc_typeck/src/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcoherence%2Forphan.rs?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -110,7 +110,7 @@ impl ItemLikeVisitor<'v> for OrphanChecker<'tcx> {\n                             )\n                             .note(\n                                 \"implementing a foreign trait is only possible if at \\\n-                                    least one of the types for which is it implemented is local, \\\n+                                    least one of the types for which it is implemented is local, \\\n                                     and no uncovered type parameters appear before that first \\\n                                     local type\",\n                             )\n@@ -135,7 +135,7 @@ impl ItemLikeVisitor<'v> for OrphanChecker<'tcx> {\n                                 local type\",\n                                 param_ty,\n                             )).note(\"implementing a foreign trait is only possible if at \\\n-                                    least one of the types for which is it implemented is local\"\n+                                    least one of the types for which it is implemented is local\"\n                             ).note(\"only traits defined in the current crate can be \\\n                                     implemented for a type parameter\"\n                             ).emit();"}, {"sha": "7eca41753395456fde964488736e7c4d20c607cc", "filename": "src/test/ui/coherence/coherence-all-remote.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-all-remote.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<T> for isize { }\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "e8d74c917e465d5cab0bf8d411a4b1b4fc183a56", "filename": "src/test/ui/coherence/coherence-bigint-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-bigint-param.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<T> Remote1<BigInt> for T { }\n    |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`BigInt`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error: aborting due to previous error"}, {"sha": "827d26ab43443100f5eab56caba21ee06ff8b674", "filename": "src/test/ui/coherence/coherence-cross-crate-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -13,7 +13,7 @@ error[E0210]: type parameter `A` must be used as the type parameter for some loc\n LL | impl<A> Foo for A {\n    |      ^ type parameter `A` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "ef5b088365381f120787a8356a4deee93eeb5ad7", "filename": "src/test/ui/coherence/coherence-lone-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-lone-type-parameter.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote for T { }\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "249a5c44c79cd2ede6d8ad98cbc4af34df765992", "filename": "src/test/ui/coherence/impl[t]-foreign-for-fundamental[t].stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign-for-fundamental%5Bt%5D.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote for Box<T> {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "95a20cc5b0f5c4820129dfaa1037634ce215db8b", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-fundamental[t].stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-fundamental%5Bt%5D.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<u32> for Box<T> {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<'a, T> Remote1<u32> for &'a T {\n    |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "aed184767a0bd0425965439a348beb6ae4cbd5ce", "filename": "src/test/ui/coherence/impl[t]-foreign[foreign]-for-t.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bforeign%5D-for-t.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<u32> for T {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "73b1e2c6ed2488f8c0a85cd03b20b403868c3f00", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-foreign.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-foreign.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<Box<T>> for u32 {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<'a, T> Remote1<&'a T> for u32 {\n    |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "5f89a7aa469c1f9b6641c2a0305e6d63c0f5ead2", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-fundamental[t].stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-fundamental%5Bt%5D.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<'a, T> Remote1<Box<T>> for &'a T {\n    |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<'a, T> Remote1<&'a T> for Box<T> {\n    |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "45559d8b62d3777df297cbc76035c6b8156abe9b", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]]-for-t.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D%5D-for-t.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<Box<T>> for T {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `T` must be used as the type parameter for some local type (e.g., `MyStruct<T>`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<'a, T> Remote1<&'a T> for T {\n    |          ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "f94f04c8df5c165d513059990ad340e279d0f3ab", "filename": "src/test/ui/coherence/impl[t]-foreign[fundamental[t]_local]-for-foreign.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bfundamental%5Bt%5D_local%5D-for-foreign.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<T> Remote2<Box<T>, Local> for u32 {\n    |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error[E0210]: type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<'a, T> Remote2<&'a T, Local> for u32 {\n    |          ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error: aborting due to 2 previous errors"}, {"sha": "e68f2fe585637db06718acfc04447b1fafb3f05e", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-fundamental[t].stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-fundamental%5Bt%5D.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<T> Remote1<Local> for Box<T> {\n    |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error[E0210]: type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<T> Remote1<Local> for &T {\n    |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error: aborting due to 2 previous errors"}, {"sha": "d97e85dcb3c3ed7be8776de86059327d257c716b", "filename": "src/test/ui/coherence/impl[t]-foreign[local]-for-t.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Blocal%5D-for-t.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be covered by another type when it appears\n LL | impl<T> Remote1<Local> for T {\n    |      ^ type parameter `T` must be covered by another type when it appears before the first local type (`Local`)\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local, and no uncovered type parameters appear before that first local type\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local, and no uncovered type parameters appear before that first local type\n    = note: in this case, 'before' refers to the following order: `impl<..> ForeignTrait<T1, ..., Tn> for T0`, where `T0` is the first and `Tn` is the last\n \n error: aborting due to previous error"}, {"sha": "44e3b7eedb40c3150156d7d86dde00665d29005c", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-foreign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-foreign.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<T> for u32 {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "80fb5dbec8662d2b492b59d8e51f1974da23ef4c", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-fundamental.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-fundamental.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<T> for Box<T> {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error[E0210]: type parameter `B` must be used as the type parameter for some local type (e.g., `MyStruct<B>`)\n@@ -13,7 +13,7 @@ error[E0210]: type parameter `B` must be used as the type parameter for some loc\n LL | impl<'a, A, B> Remote1<A> for &'a B {\n    |             ^ type parameter `B` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "ff72969dc52aebd45a4e4521203b76eca08aae63", "filename": "src/test/ui/coherence/impl[t]-foreign[t]-for-t.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fimpl%5Bt%5D-foreign%5Bt%5D-for-t.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Remote1<T> for T {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "e12dd7623310dc55a1777fcc5c7c15399a77b641", "filename": "src/test/ui/error-codes/e0119/issue-28981.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -14,7 +14,7 @@ error[E0210]: type parameter `Foo` must be used as the type parameter for some l\n LL | impl<Foo> Deref for Foo { }\n    |      ^^^ type parameter `Foo` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}, {"sha": "a092c94b9d5634d66c50de46893068488416a29b", "filename": "src/test/ui/issues/issue-41974.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -21,7 +21,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> Drop for T where T: A {\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 3 previous errors"}, {"sha": "7a7cea56307ded2df061d0792085959154778c8b", "filename": "src/test/ui/orphan-check-diagnostics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Forphan-check-diagnostics.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -4,7 +4,7 @@ error[E0210]: type parameter `T` must be used as the type parameter for some loc\n LL | impl<T> RemoteTrait for T where T: LocalTrait {}\n    |      ^ type parameter `T` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to previous error"}, {"sha": "eafbd2ad0725b1429f1daaf04006861951017984", "filename": "src/test/ui/type-alias-impl-trait/incoherent-assoc-imp-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/786e3ea31a5ca19651612e56f5d2df84a3845638/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.stderr?ref=786e3ea31a5ca19651612e56f5d2df84a3845638", "patch": "@@ -14,7 +14,7 @@ error[E0210]: type parameter `F` must be used as the type parameter for some loc\n LL | impl<F> FnOnce<()> for &F {\n    |      ^ type parameter `F` must be used as the type parameter for some local type\n    |\n-   = note: implementing a foreign trait is only possible if at least one of the types for which is it implemented is local\n+   = note: implementing a foreign trait is only possible if at least one of the types for which it is implemented is local\n    = note: only traits defined in the current crate can be implemented for a type parameter\n \n error: aborting due to 2 previous errors"}]}