{"sha": "17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3MDE1Y2Q1YWZkNDhlYmRhOWY0Zjc3ZTJkNTdlMThlN2FlZGUxYWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-16T06:24:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-16T06:24:56Z"}, "message": "Rollup merge of #76534 - notriddle:doc-comments, r=jyn514\n\nAdd doc comments for From impls\n\nhttps://github.com/rust-lang/rust/issues/51430", "tree": {"sha": "68525a98003318cf92d58f91a5e457a92b2343f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68525a98003318cf92d58f91a5e457a92b2343f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYa+5CRBK7hj4Ov3rIwAAdHIIAB/HpNmTR4couAwZLCxr5RI1\niD/i9zGNYPC7zFeoyCSK2h8foHCKghkcXTOTARND5vrShHyB5y+2yGCHj5+SbcbD\nN5TtW2FBYQgV2z9NyxDwFH0hJp0s3/57q/o/1/OXKkxxqle1bDPiE8JuifPxKnWT\nxFH7K9jAw0hgor2Hok5doWcCrtVifikBQf1zspYKXIyc04vkqp4SR/Cw7cPXecK9\nzRIIjzaN1gKuSHZEy7RQ8jyAl79Q16G5XUpXpLkY3ou2/v9+AJKIQyUB5vYdRclK\nOV8WhN6vxPOWupwbqM76J4RrgDvsQuOfe4qce0mRWBV7k1SmYOqAhW8BETdbWg4=\n=1u+p\n-----END PGP SIGNATURE-----\n", "payload": "tree 68525a98003318cf92d58f91a5e457a92b2343f9\nparent 3a4de42a8d97043f99f9710a92d51208d41193a8\nparent 8b0d0a0cadbaaf0e7f4114e289a71981872c8587\nauthor Ralf Jung <post@ralfj.de> 1600237496 +0200\ncommitter GitHub <noreply@github.com> 1600237496 +0200\n\nRollup merge of #76534 - notriddle:doc-comments, r=jyn514\n\nAdd doc comments for From impls\n\nhttps://github.com/rust-lang/rust/issues/51430\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "html_url": "https://github.com/rust-lang/rust/commit/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a4de42a8d97043f99f9710a92d51208d41193a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a4de42a8d97043f99f9710a92d51208d41193a8", "html_url": "https://github.com/rust-lang/rust/commit/3a4de42a8d97043f99f9710a92d51208d41193a8"}, {"sha": "8b0d0a0cadbaaf0e7f4114e289a71981872c8587", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0d0a0cadbaaf0e7f4114e289a71981872c8587", "html_url": "https://github.com/rust-lang/rust/commit/8b0d0a0cadbaaf0e7f4114e289a71981872c8587"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "24d17fdd880ba8bc9585f93ce7c4e08dbaf7b59e", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "patch": "@@ -1343,6 +1343,10 @@ impl<T: Ord> From<Vec<T>> for BinaryHeap<T> {\n \n #[stable(feature = \"binary_heap_extras_15\", since = \"1.5.0\")]\n impl<T> From<BinaryHeap<T>> for Vec<T> {\n+    /// Converts a `BinaryHeap<T>` into a `Vec<T>`.\n+    ///\n+    /// This conversion requires no data movement or allocation, and has\n+    /// constant time complexity.\n     fn from(heap: BinaryHeap<T>) -> Vec<T> {\n         heap.data\n     }"}, {"sha": "4e987a53b2cb236f12fd3618c80c579431bc56b5", "filename": "library/core/src/task/poll.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17015cd5afd48ebda9f4f77e2d57e18e7aede1ab/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fpoll.rs?ref=17015cd5afd48ebda9f4f77e2d57e18e7aede1ab", "patch": "@@ -112,6 +112,14 @@ impl<T, E> Poll<Option<Result<T, E>>> {\n \n #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n impl<T> From<T> for Poll<T> {\n+    /// Convert to a `Ready` variant.\n+    ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// # use core::task::Poll;\n+    /// assert_eq!(Poll::from(true), Poll::Ready(true));\n+    /// ```\n     fn from(t: T) -> Poll<T> {\n         Poll::Ready(t)\n     }"}]}