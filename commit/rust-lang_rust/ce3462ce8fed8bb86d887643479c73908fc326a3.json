{"sha": "ce3462ce8fed8bb86d887643479c73908fc326a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMzQ2MmNlOGZlZDhiYjg2ZDg4NzY0MzQ3OWM3MzkwOGZjMzI2YTM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T17:38:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T17:38:36Z"}, "message": "struct literals", "tree": {"sha": "f6999e706291b7e39da48259728efd8ec85c848c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6999e706291b7e39da48259728efd8ec85c848c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce3462ce8fed8bb86d887643479c73908fc326a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce3462ce8fed8bb86d887643479c73908fc326a3", "html_url": "https://github.com/rust-lang/rust/commit/ce3462ce8fed8bb86d887643479c73908fc326a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce3462ce8fed8bb86d887643479c73908fc326a3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba1e8a334a707645701db48fddc61acad7b2dbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba1e8a334a707645701db48fddc61acad7b2dbc", "html_url": "https://github.com/rust-lang/rust/commit/eba1e8a334a707645701db48fddc61acad7b2dbc"}], "stats": {"total": 144, "additions": 143, "deletions": 1}, "files": [{"sha": "5642492001a4dc859b6e127cd1352d4f7f8e6245", "filename": "src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=ce3462ce8fed8bb86d887643479c73908fc326a3", "patch": "@@ -129,6 +129,8 @@ Grammar(\n         \"METHOD_CALL_EXPR\",\n         \"FIELD_EXPR\",\n         \"REF_EXPR\",\n+        \"STRUCT_LIT\",\n+        \"STRUCT_LIT_FIELD\",\n \n         \"EXTERN_BLOCK\",\n         \"ENUM_VARIANT\","}, {"sha": "5b18e2294dbca0313a497b46677bea1ff6ed87bf", "filename": "src/parser/grammar/expressions.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fparser%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fparser%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fexpressions.rs?ref=ce3462ce8fed8bb86d887643479c73908fc326a3", "patch": "@@ -154,5 +154,42 @@ fn path_expr(p: &mut Parser) -> CompletedMarker {\n     assert!(paths::is_path_start(p));\n     let m = p.start();\n     paths::expr_path(p);\n-    m.complete(p, PATH_EXPR)\n+    if p.at(L_CURLY) {\n+        struct_lit(p);\n+        m.complete(p, STRUCT_LIT)\n+    } else {\n+        m.complete(p, PATH_EXPR)\n+    }\n+}\n+\n+// test struct_lit\n+// fn foo() {\n+//     S {};\n+//     S { x, y: 32, };\n+//     S { x, y: 32, ..Default::default() };\n+// }\n+fn struct_lit(p: &mut Parser) {\n+    assert!(p.at(L_CURLY));\n+    p.bump();\n+    while !p.at(EOF) && !p.at(R_CURLY) {\n+        match p.current() {\n+            IDENT => {\n+                let m = p.start();\n+                name_ref(p);\n+                if p.eat(COLON) {\n+                    expr(p);\n+                }\n+                m.complete(p, STRUCT_LIT_FIELD);\n+            },\n+            DOTDOT => {\n+                p.bump();\n+                expr(p);\n+            },\n+            _ => p.err_and_bump(\"expected identifier\"),\n+        }\n+        if !p.at(R_CURLY) {\n+            p.expect(COMMA);\n+        }\n+    }\n+    p.expect(R_CURLY);\n }"}, {"sha": "6557645288eb2e6ddf3fe37820b70b663abe7371", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3462ce8fed8bb86d887643479c73908fc326a3/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=ce3462ce8fed8bb86d887643479c73908fc326a3", "patch": "@@ -120,6 +120,8 @@ pub enum SyntaxKind {\n     METHOD_CALL_EXPR,\n     FIELD_EXPR,\n     REF_EXPR,\n+    STRUCT_LIT,\n+    STRUCT_LIT_FIELD,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n     NAMED_FIELD,\n@@ -277,6 +279,8 @@ impl SyntaxKind {\n             METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n             FIELD_EXPR => &SyntaxInfo { name: \"FIELD_EXPR\" },\n             REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n+            STRUCT_LIT => &SyntaxInfo { name: \"STRUCT_LIT\" },\n+            STRUCT_LIT_FIELD => &SyntaxInfo { name: \"STRUCT_LIT_FIELD\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },"}, {"sha": "eb711f68a13048fda45c24baf81d65b314c55ad4", "filename": "tests/data/parser/inline/0061_struct_lit.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce3462ce8fed8bb86d887643479c73908fc326a3/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce3462ce8fed8bb86d887643479c73908fc326a3/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.rs?ref=ce3462ce8fed8bb86d887643479c73908fc326a3", "patch": "@@ -0,0 +1,5 @@\n+fn foo() {\n+    S {};\n+    S { x, y: 32, };\n+    S { x, y: 32, ..Default::default() };\n+}"}, {"sha": "9a63d8fb2fcbeda42284eec41042902a41cc3607", "filename": "tests/data/parser/inline/0061_struct_lit.txt", "status": "added", "additions": 94, "deletions": 0, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/ce3462ce8fed8bb86d887643479c73908fc326a3/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ce3462ce8fed8bb86d887643479c73908fc326a3/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0061_struct_lit.txt?ref=ce3462ce8fed8bb86d887643479c73908fc326a3", "patch": "@@ -0,0 +1,94 @@\n+FILE@[0; 86)\n+  FN_ITEM@[0; 86)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK@[9; 86)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 25)\n+        STRUCT_LIT@[10; 19)\n+          PATH@[10; 17)\n+            PATH_SEGMENT@[10; 17)\n+              NAME_REF@[10; 17)\n+                WHITESPACE@[10; 15)\n+                IDENT@[15; 16) \"S\"\n+                WHITESPACE@[16; 17)\n+          L_CURLY@[17; 18)\n+          R_CURLY@[18; 19)\n+        SEMI@[19; 20)\n+        WHITESPACE@[20; 25)\n+      EXPR_STMT@[25; 46)\n+        STRUCT_LIT@[25; 40)\n+          PATH@[25; 27)\n+            PATH_SEGMENT@[25; 27)\n+              NAME_REF@[25; 27)\n+                IDENT@[25; 26) \"S\"\n+                WHITESPACE@[26; 27)\n+          L_CURLY@[27; 28)\n+          STRUCT_LIT_FIELD@[28; 30)\n+            NAME_REF@[28; 30)\n+              WHITESPACE@[28; 29)\n+              IDENT@[29; 30) \"x\"\n+          COMMA@[30; 31)\n+          STRUCT_LIT_FIELD@[31; 37)\n+            NAME_REF@[31; 33)\n+              WHITESPACE@[31; 32)\n+              IDENT@[32; 33) \"y\"\n+            COLON@[33; 34)\n+            LITERAL@[34; 37)\n+              WHITESPACE@[34; 35)\n+              INT_NUMBER@[35; 37)\n+          COMMA@[37; 38)\n+          WHITESPACE@[38; 39)\n+          R_CURLY@[39; 40)\n+        SEMI@[40; 41)\n+        WHITESPACE@[41; 46)\n+      EXPR_STMT@[46; 84)\n+        STRUCT_LIT@[46; 82)\n+          PATH@[46; 48)\n+            PATH_SEGMENT@[46; 48)\n+              NAME_REF@[46; 48)\n+                IDENT@[46; 47) \"S\"\n+                WHITESPACE@[47; 48)\n+          L_CURLY@[48; 49)\n+          STRUCT_LIT_FIELD@[49; 51)\n+            NAME_REF@[49; 51)\n+              WHITESPACE@[49; 50)\n+              IDENT@[50; 51) \"x\"\n+          COMMA@[51; 52)\n+          STRUCT_LIT_FIELD@[52; 58)\n+            NAME_REF@[52; 54)\n+              WHITESPACE@[52; 53)\n+              IDENT@[53; 54) \"y\"\n+            COLON@[54; 55)\n+            LITERAL@[55; 58)\n+              WHITESPACE@[55; 56)\n+              INT_NUMBER@[56; 58)\n+          COMMA@[58; 59)\n+          WHITESPACE@[59; 60)\n+          DOTDOT@[60; 62)\n+          CALL_EXPR@[62; 81)\n+            PATH_EXPR@[62; 78)\n+              PATH@[62; 78)\n+                PATH@[62; 69)\n+                  PATH_SEGMENT@[62; 69)\n+                    NAME_REF@[62; 69)\n+                      IDENT@[62; 69) \"Default\"\n+                COLONCOLON@[69; 71)\n+                PATH_SEGMENT@[71; 78)\n+                  NAME_REF@[71; 78)\n+                    IDENT@[71; 78) \"default\"\n+            ARG_LIST@[78; 81)\n+              L_PAREN@[78; 79)\n+              R_PAREN@[79; 80)\n+              WHITESPACE@[80; 81)\n+          R_CURLY@[81; 82)\n+        SEMI@[82; 83)\n+        WHITESPACE@[83; 84)\n+      R_CURLY@[84; 85)\n+      WHITESPACE@[85; 86)"}]}