{"sha": "fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMmQzMzJmNWY2YWE0NWViMjgyYWViZGQwMWRlNGJjMGVmOGEzOWU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-16T10:50:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-16T10:50:34Z"}, "message": "Merge #6250\n\n6250: Expand code order section r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "99975f0b718382cba76cc2ba7219cc78614fcaaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99975f0b718382cba76cc2ba7219cc78614fcaaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfiXr6CRBK7hj4Ov3rIwAAdHIIADaq9CbRbQZxNbHWdIX+948v\nyDgGt8us86IFldmsI23xxI8JcB6HeSnJjafhnjnUKQqRL0njVpBkQJQpxEMf0SBk\n95q/Bt9T0kV6ZbfsGjJAPwGLCYxbVes7CNmswBycwZrRdQFfWeZwRtzVqRBUvMBY\nFYMyxT0xb6v4Ybexzjj/lJ22BaheiaSGtLul6EpvDGBzn2yLqVOHZO4ON9GHHCNk\nEgXTBbAoEYK5mpLatKvc92kF0b8DFj7PiprKM2bKlLHt6z/g4DgNqoNLW7jbjn3T\n10KI1WukoldIHXvJ4ZOxK85P6jkGtwyCqbW0hm2ZmL44QXhIIK3dShKegej2C5c=\n=1g9y\n-----END PGP SIGNATURE-----\n", "payload": "tree 99975f0b718382cba76cc2ba7219cc78614fcaaa\nparent 0d45802d671f94cb768b93a64882733396cfbe2d\nparent 0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602845434 +0000\ncommitter GitHub <noreply@github.com> 1602845434 +0000\n\nMerge #6250\n\n6250: Expand code order section r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "html_url": "https://github.com/rust-lang/rust/commit/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d45802d671f94cb768b93a64882733396cfbe2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d45802d671f94cb768b93a64882733396cfbe2d", "html_url": "https://github.com/rust-lang/rust/commit/0d45802d671f94cb768b93a64882733396cfbe2d"}, {"sha": "0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb", "html_url": "https://github.com/rust-lang/rust/commit/0c67edc0f7ebb7e6a265d4a925bc368e460cd8cb"}], "stats": {"total": 61, "additions": 50, "deletions": 11}, "files": [{"sha": "7a64a0d228c7105e49211fb455b3852681ca9228", "filename": "docs/dev/style.md", "status": "modified", "additions": 50, "deletions": 11, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e/docs%2Fdev%2Fstyle.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e/docs%2Fdev%2Fstyle.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Fstyle.md?ref=fb2d332f5f6aa45eb282aebdd01de4bc0ef8a39e", "patch": "@@ -366,27 +366,66 @@ People read things from top to bottom, so place most important things first.\n \n Specifically, if all items except one are private, always put the non-private item on top.\n \n-Put `struct`s and `enum`s first, functions and impls last.\n-\n-Do\n-\n ```rust\n // Good\n-struct Foo {\n-    bars: Vec<Bar>\n+pub(crate) fn frobnicate() {\n+    Helper::act()\n+}\n+\n+#[derive(Default)]\n+struct Helper { stuff: i32 }\n+\n+impl Helper {\n+    fn act(&self) {\n+\n+    }\n+}\n+\n+// Not as good\n+#[derive(Default)]\n+struct Helper { stuff: i32 }\n+\n+pub(crate) fn frobnicate() {\n+    Helper::act()\n }\n \n-struct Bar;\n+impl Helper {\n+    fn act(&self) {\n+\n+    }\n+}\n ```\n \n-rather than\n+If there's a mixture of private and public items, put public items first.\n+If function bodies are folded in the editor, the source code should read as documentation for the public API.\n+\n+Put `struct`s and `enum`s first, functions and impls last. Order types declarations in top-down manner.\n \n ```rust\n+// Good\n+struct Parent {\n+    children: Vec<Child>\n+}\n+\n+struct Child;\n+\n+impl Parent {\n+}\n+\n+impl Child {\n+}\n+\n // Not as good\n-struct Bar;\n+struct Child;\n \n-struct Foo {\n-    bars: Vec<Bar>\n+impl Child {\n+}\n+\n+struct Parent {\n+    children: Vec<Child>\n+}\n+\n+impl Parent {\n }\n ```\n "}]}