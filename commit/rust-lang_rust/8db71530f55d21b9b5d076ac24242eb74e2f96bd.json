{"sha": "8db71530f55d21b9b5d076ac24242eb74e2f96bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYjcxNTMwZjU1ZDIxYjliNWQwNzZhYzI0MjQyZWI3NGUyZjk2YmQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-07T07:45:31Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-07T08:41:40Z"}, "message": "Forbid passing dynamically-sized types by value\n\nIssue #1008", "tree": {"sha": "935388061c1d3240db844f829bc783cf1db959f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935388061c1d3240db844f829bc783cf1db959f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db71530f55d21b9b5d076ac24242eb74e2f96bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db71530f55d21b9b5d076ac24242eb74e2f96bd", "html_url": "https://github.com/rust-lang/rust/commit/8db71530f55d21b9b5d076ac24242eb74e2f96bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db71530f55d21b9b5d076ac24242eb74e2f96bd/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff89469d43a3da326d7da50e4a97fb9c0ba359b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff89469d43a3da326d7da50e4a97fb9c0ba359b", "html_url": "https://github.com/rust-lang/rust/commit/2ff89469d43a3da326d7da50e4a97fb9c0ba359b"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "27021c2a20824d968dc4c37139319217675d2e04", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8db71530f55d21b9b5d076ac24242eb74e2f96bd/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db71530f55d21b9b5d076ac24242eb74e2f96bd/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=8db71530f55d21b9b5d076ac24242eb74e2f96bd", "patch": "@@ -57,9 +57,18 @@ fn check_crate(tcx: ty::ctxt, crate: @ast::crate) -> copy_map {\n     ret cx.copy_map;\n }\n \n-fn visit_fn(cx: @ctx, f: ast::_fn, _tp: [ast::ty_param], _sp: span,\n-            _name: fn_ident, _id: ast::node_id, sc: scope, v: vt<scope>) {\n+fn visit_fn(cx: @ctx, f: ast::_fn, _tp: [ast::ty_param], sp: span,\n+            _name: fn_ident, id: ast::node_id, sc: scope, v: vt<scope>) {\n     visit::visit_fn_decl(f.decl, sc, v);\n+    let args = ty::ty_fn_args(cx.tcx, ty::node_id_to_type(cx.tcx, id));\n+    for arg in args {\n+        if arg.mode == ast::by_val &&\n+           ty::type_has_dynamic_size(cx.tcx, arg.ty) {\n+            cx.tcx.sess.span_err\n+                (sp, \"can not pass a dynamically-sized type by value\");\n+        }\n+    }\n+\n     let bs = alt f.proto {\n       // Blocks need to obey any restrictions from the enclosing scope.\n       ast::proto_block. | ast::proto_closure. { sc.bs }"}]}