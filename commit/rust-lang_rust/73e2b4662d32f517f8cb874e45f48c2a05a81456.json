{"sha": "73e2b4662d32f517f8cb874e45f48c2a05a81456", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZTJiNDY2MmQzMmY1MTdmOGNiODc0ZTQ1ZjQ4YzJhMDVhODE0NTY=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-31T11:46:51Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:47:35Z"}, "message": "Prepare miri for unsized locals", "tree": {"sha": "06283616359cbede9998435d4e2dbbca6b3ac9f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06283616359cbede9998435d4e2dbbca6b3ac9f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73e2b4662d32f517f8cb874e45f48c2a05a81456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73e2b4662d32f517f8cb874e45f48c2a05a81456", "html_url": "https://github.com/rust-lang/rust/commit/73e2b4662d32f517f8cb874e45f48c2a05a81456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73e2b4662d32f517f8cb874e45f48c2a05a81456/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f970486183084634b08f516531c55d2286a38af", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f970486183084634b08f516531c55d2286a38af", "html_url": "https://github.com/rust-lang/rust/commit/0f970486183084634b08f516531c55d2286a38af"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "b7bc4867307fb2b0aafe1eed27eed631da3c786a", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/73e2b4662d32f517f8cb874e45f48c2a05a81456/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e2b4662d32f517f8cb874e45f48c2a05a81456/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=73e2b4662d32f517f8cb874e45f48c2a05a81456", "patch": "@@ -880,9 +880,16 @@ where\n         layout: TyLayout<'tcx>,\n         kind: MemoryKind<M::MemoryKinds>,\n     ) -> EvalResult<'tcx, MPlaceTy<'tcx, M::PointerTag>> {\n-        assert!(!layout.is_unsized(), \"cannot alloc memory for unsized type\");\n-        let ptr = self.memory.allocate(layout.size, layout.align, kind)?;\n-        Ok(MPlaceTy::from_aligned_ptr(ptr, layout))\n+        if layout.is_unsized() {\n+            assert!(self.tcx.features().unsized_locals, \"cannot alloc memory for unsized type\");\n+            // allocate a fat pointer slot instead\n+            let fat = self.tcx.mk_mut_ptr(layout.ty);\n+            let fat = self.layout_of(fat)?;\n+            self.allocate(fat, kind)\n+        } else {\n+            let ptr = self.memory.allocate(layout.size, layout.align, kind)?;\n+            Ok(MPlaceTy::from_aligned_ptr(ptr, layout))\n+        }\n     }\n \n     pub fn write_discriminant_index("}]}