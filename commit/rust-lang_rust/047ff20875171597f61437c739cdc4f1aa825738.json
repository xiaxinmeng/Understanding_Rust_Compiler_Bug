{"sha": "047ff20875171597f61437c739cdc4f1aa825738", "node_id": "C_kwDOAAsO6NoAKDA0N2ZmMjA4NzUxNzE1OTdmNjE0MzdjNzM5Y2RjNGYxYWE4MjU3Mzg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-07T05:28:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-07T05:28:10Z"}, "message": "Rollup merge of #102720 - lyming2007:issue-102397-fix, r=compiler-errors\n\ndo not reverse the expected type and found type for ObligationCauseCo\u2026\n\n\u2026de of IfExpressionWithNoElse\n\nthis will fix #102397", "tree": {"sha": "8f921d206d3f569219ca9f7687f30132e1e86177", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f921d206d3f569219ca9f7687f30132e1e86177"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/047ff20875171597f61437c739cdc4f1aa825738", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjP7jqCRBK7hj4Ov3rIwAAZsIIAIyZr3JYtPQxc5hu3C00Jc5i\n92G8eRMmV9ku0TXqhmUuMHfLnprE9P/4GFzOGAXFB1uzqmxBYpJ9ExMXS4f1gzs2\nFkf3SIK4cN48KZz3Hs/wY2gOvnIqY0XZrpv6f+sPlRhs7CNbUft0YpSpBGgiSXpD\nQsGzx75j94DWnwsyb0Mt2/bS5gDPIP1O2+AUKP0vHuWBl/2vdFLd+onC+pijBTcm\nfQDw5l8t2AmYBY8P9zk2oFt8sEBA6guj62jda6VCSqsCKocP5IXg4/bp4FgxKffU\nzuQGsnZlEaqdcO/RHdmxVUzrpIKzOzfHPNlpZwAZ2bt3Tn2tYLKmz0Qt+6PAVGU=\n=GqV+\n-----END PGP SIGNATURE-----\n", "payload": "tree 8f921d206d3f569219ca9f7687f30132e1e86177\nparent 1a2a3249bc739de6f6bc4c8ccd6ab41ae3f5500e\nparent 0501d615bb1484fbbd6e2035cff4c3c44e94f10d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665120490 +0200\ncommitter GitHub <noreply@github.com> 1665120490 +0200\n\nRollup merge of #102720 - lyming2007:issue-102397-fix, r=compiler-errors\n\ndo not reverse the expected type and found type for ObligationCauseCo\u2026\n\n\u2026de of IfExpressionWithNoElse\n\nthis will fix #102397\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/047ff20875171597f61437c739cdc4f1aa825738", "html_url": "https://github.com/rust-lang/rust/commit/047ff20875171597f61437c739cdc4f1aa825738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/047ff20875171597f61437c739cdc4f1aa825738/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a2a3249bc739de6f6bc4c8ccd6ab41ae3f5500e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a2a3249bc739de6f6bc4c8ccd6ab41ae3f5500e", "html_url": "https://github.com/rust-lang/rust/commit/1a2a3249bc739de6f6bc4c8ccd6ab41ae3f5500e"}, {"sha": "0501d615bb1484fbbd6e2035cff4c3c44e94f10d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0501d615bb1484fbbd6e2035cff4c3c44e94f10d", "html_url": "https://github.com/rust-lang/rust/commit/0501d615bb1484fbbd6e2035cff4c3c44e94f10d"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "143508b785f1e55891fbea3ce5be6698c2012c37", "filename": "compiler/rustc_hir_analysis/src/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2F_match.rs?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -259,7 +259,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 err.help(\"consider adding an `else` block that evaluates to the expected type\");\n                 error = true;\n             },\n-            ret_reason.is_none(),\n+            false,\n         );\n         error\n     }"}, {"sha": "8155fcb56b697694f610fb589cb35f2be2da6807", "filename": "src/test/ui/async-await/issue-66387-if-without-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-66387-if-without-else.stderr?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -4,7 +4,7 @@ error[E0317]: `if` may be missing an `else` clause\n LL | /     if true {\n LL | |         return 0;\n LL | |     }\n-   | |_____^ expected `()`, found `i32`\n+   | |_____^ expected `i32`, found `()`\n    |\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type"}, {"sha": "a931c89f47e72b801baac1eb50888c22314e6318", "filename": "src/test/ui/consts/control-flow/issue-50577.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-50577.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-50577.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fcontrol-flow%2Fissue-50577.stderr?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -2,7 +2,7 @@ error[E0317]: `if` may be missing an `else` clause\n   --> $DIR/issue-50577.rs:3:16\n    |\n LL |         Drop = assert_eq!(1, 1),\n-   |                ^^^^^^^^^^^^^^^^ expected `()`, found `isize`\n+   |                ^^^^^^^^^^^^^^^^ expected `isize`, found `()`\n    |\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type"}, {"sha": "95604758a6b3e57f4bfbfa87bfe0642103d0928a", "filename": "src/test/ui/expr/if/if-without-else-result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.rs?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -1,6 +1,6 @@\n fn main() {\n     let a = if true { true };\n     //~^ ERROR `if` may be missing an `else` clause [E0317]\n-    //~| expected `()`, found `bool`\n+    //~| expected `bool`, found `()`\n     println!(\"{}\", a);\n }"}, {"sha": "317faf7c619f679635f00c7dcd33c716ddfb6d1d", "filename": "src/test/ui/expr/if/if-without-else-result.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-without-else-result.stderr?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -5,7 +5,7 @@ LL |     let a = if true { true };\n    |             ^^^^^^^^^^----^^\n    |             |         |\n    |             |         found here\n-   |             expected `()`, found `bool`\n+   |             expected `bool`, found `()`\n    |\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type"}, {"sha": "59c465b9e14925ab977a00909a179249fe8bf916", "filename": "src/test/ui/expr/if/issue-4201.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.rs?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -3,7 +3,7 @@ fn main() {\n         0\n     } else if false {\n //~^ ERROR `if` may be missing an `else` clause\n-//~| expected `()`, found integer\n+//~| expected integer, found `()`\n         1\n     };\n }"}, {"sha": "612fe77642ce5f7dcf3bf44f3e713aeb80b566eb", "filename": "src/test/ui/expr/if/issue-4201.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fif%2Fissue-4201.stderr?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -8,7 +8,7 @@ LL | |\n LL | |         1\n    | |         - found here\n LL | |     };\n-   | |_____^ expected `()`, found integer\n+   | |_____^ expected integer, found `()`\n    |\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type"}, {"sha": "dd0efa972ba3e2753efe820f3c8dfb4691c608b1", "filename": "src/test/ui/issues/issue-19991.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fissues%2Fissue-19991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fissues%2Fissue-19991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19991.rs?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -3,7 +3,7 @@\n \n fn main() {\n     if let Some(homura) = Some(\"madoka\") { //~  ERROR missing an `else` clause\n-                                           //~| expected `()`, found integer\n+                                           //~| expected integer, found `()`\n         765\n     };\n }"}, {"sha": "57b0882b636e3a70e7532ccba5c7232487a5988e", "filename": "src/test/ui/issues/issue-19991.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fissues%2Fissue-19991.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/047ff20875171597f61437c739cdc4f1aa825738/src%2Ftest%2Fui%2Fissues%2Fissue-19991.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19991.stderr?ref=047ff20875171597f61437c739cdc4f1aa825738", "patch": "@@ -6,7 +6,7 @@ LL | |\n LL | |         765\n    | |         --- found here\n LL | |     };\n-   | |_____^ expected `()`, found integer\n+   | |_____^ expected integer, found `()`\n    |\n    = note: `if` expressions without `else` evaluate to `()`\n    = help: consider adding an `else` block that evaluates to the expected type"}]}