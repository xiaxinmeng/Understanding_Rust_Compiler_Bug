{"sha": "b831bd1d1d16c2733b2c26196163f68c74f3c271", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4MzFiZDFkMWQxNmMyNzMzYjJjMjYxOTYxNjNmNjhjNzRmM2MyNzE=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-12T08:53:14Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-12T08:53:14Z"}, "message": "len_zero: display full suggested expr in message", "tree": {"sha": "eabe59c1dda225dec826af036bb651ca64609c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eabe59c1dda225dec826af036bb651ca64609c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b831bd1d1d16c2733b2c26196163f68c74f3c271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b831bd1d1d16c2733b2c26196163f68c74f3c271", "html_url": "https://github.com/rust-lang/rust/commit/b831bd1d1d16c2733b2c26196163f68c74f3c271", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b831bd1d1d16c2733b2c26196163f68c74f3c271/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcd95aec1ce4f2a328a2b1d4b2a1e44d36e02436", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcd95aec1ce4f2a328a2b1d4b2a1e44d36e02436", "html_url": "https://github.com/rust-lang/rust/commit/bcd95aec1ce4f2a328a2b1d4b2a1e44d36e02436"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "298522ed24cea51d558d7fa8c9b7cdaf61169819", "filename": "src/len_zero.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b831bd1d1d16c2733b2c26196163f68c74f3c271/src%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b831bd1d1d16c2733b2c26196163f68c74f3c271/src%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flen_zero.rs?ref=b831bd1d1d16c2733b2c26196163f68c74f3c271", "patch": "@@ -9,7 +9,7 @@ use rustc::middle::ty::{self, TypeVariants, TypeAndMut, MethodTraitItemId, ImplO\n use rustc::middle::def::{DefTy, DefStruct, DefTrait};\n use syntax::codemap::{Span, Spanned};\n use syntax::ast::*;\n-use utils::{span_lint, walk_ptrs_ty};\n+use utils::{span_lint, walk_ptrs_ty, snippet};\n \n declare_lint!(pub LEN_ZERO, Warn,\n               \"Warn when .is_empty() could be used instead of checking .len()\");\n@@ -92,24 +92,24 @@ fn is_self_sig(sig: &MethodSig) -> bool {\n         false } else { sig.decl.inputs.len() == 1 }\n }\n \n-fn check_cmp(cx: &Context, span: Span, left: &Expr, right: &Expr, empty: &str) {\n+fn check_cmp(cx: &Context, span: Span, left: &Expr, right: &Expr, op: &str) {\n     match (&left.node, &right.node) {\n         (&ExprLit(ref lit), &ExprMethodCall(ref method, _, ref args)) =>\n-            check_len_zero(cx, span, method, args, lit, empty),\n+            check_len_zero(cx, span, method, args, lit, op),\n         (&ExprMethodCall(ref method, _, ref args), &ExprLit(ref lit)) =>\n-            check_len_zero(cx, span, method, args, lit, empty),\n+            check_len_zero(cx, span, method, args, lit, op),\n         _ => ()\n     }\n }\n \n fn check_len_zero(cx: &Context, span: Span, method: &SpannedIdent,\n-                  args: &[P<Expr>], lit: &Lit, empty: &str) {\n+                  args: &[P<Expr>], lit: &Lit, op: &str) {\n     if let &Spanned{node: LitInt(0, _), ..} = lit {\n         if method.node.name == \"len\" && args.len() == 1 &&\n             has_is_empty(cx, &*args[0]) {\n                 span_lint(cx, LEN_ZERO, span, &format!(\n-                    \"consider replacing the len comparison with `{}_.is_empty()`\",\n-                    empty))\n+                    \"consider replacing the len comparison with `{}{}.is_empty()`\",\n+                    op, snippet(cx, args[0].span, \"_\")))\n             }\n     }\n }"}, {"sha": "626e5557fb64835fab8abf28f8c18aa579b045c3", "filename": "tests/compile-fail/len_zero.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b831bd1d1d16c2733b2c26196163f68c74f3c271/tests%2Fcompile-fail%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b831bd1d1d16c2733b2c26196163f68c74f3c271/tests%2Fcompile-fail%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flen_zero.rs?ref=b831bd1d1d16c2733b2c26196163f68c74f3c271", "patch": "@@ -87,6 +87,12 @@ fn main() {\n     if hie.len() == 0 { //~ERROR consider replacing the len comparison\n         println!(\"Or this!\");\n     }\n+    if hie.len() != 0 { //~ERROR consider replacing the len comparison\n+        println!(\"Or this!\");\n+    }\n+    if hie.len() > 0 { //~ERROR consider replacing the len comparison\n+        println!(\"Or this!\");\n+    }\n     assert!(!hie.is_empty());\n \n     let wie : &WithIsEmpty = &Wither;"}]}