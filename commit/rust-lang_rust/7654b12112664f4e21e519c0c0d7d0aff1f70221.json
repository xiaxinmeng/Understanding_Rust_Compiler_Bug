{"sha": "7654b12112664f4e21e519c0c0d7d0aff1f70221", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NTRiMTIxMTI2NjRmNGUyMWU1MTljMGMwZDdkMGFmZjFmNzAyMjE=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-12-08T14:37:39Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2020-12-08T14:56:15Z"}, "message": "Simplify visit_{foreign,trait}_item\n\nUsing an `if` seems like a better semantic fit and saves a few lines.", "tree": {"sha": "9d70b4f4e30a99df523203d89da882cbd4b0f1b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d70b4f4e30a99df523203d89da882cbd4b0f1b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7654b12112664f4e21e519c0c0d7d0aff1f70221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7654b12112664f4e21e519c0c0d7d0aff1f70221", "html_url": "https://github.com/rust-lang/rust/commit/7654b12112664f4e21e519c0c0d7d0aff1f70221", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7654b12112664f4e21e519c0c0d7d0aff1f70221/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5019791e2d4ac67b4c5c56853600a02f4b84e515", "url": "https://api.github.com/repos/rust-lang/rust/commits/5019791e2d4ac67b4c5c56853600a02f4b84e515", "html_url": "https://github.com/rust-lang/rust/commit/5019791e2d4ac67b4c5c56853600a02f4b84e515"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "00152878d6d9bef999b1cb685d0d20fa44c85c2d", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7654b12112664f4e21e519c0c0d7d0aff1f70221/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7654b12112664f4e21e519c0c0d7d0aff1f70221/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=7654b12112664f4e21e519c0c0d7d0aff1f70221", "patch": "@@ -423,15 +423,11 @@ impl<'v, 'k, 'tcx> ItemLikeVisitor<'v> for LifeSeeder<'k, 'tcx> {\n     }\n \n     fn visit_trait_item(&mut self, trait_item: &hir::TraitItem<'_>) {\n-        match trait_item.kind {\n-            hir::TraitItemKind::Const(_, Some(_))\n-            | hir::TraitItemKind::Fn(_, hir::TraitFn::Provided(_)) => {\n-                if has_allow_dead_code_or_lang_attr(self.tcx, trait_item.hir_id, &trait_item.attrs)\n-                {\n-                    self.worklist.push(trait_item.hir_id);\n-                }\n-            }\n-            _ => {}\n+        use hir::TraitItemKind::{Const, Fn};\n+        if matches!(trait_item.kind, Const(_, Some(_)) | Fn(_, hir::TraitFn::Provided(_)))\n+            && has_allow_dead_code_or_lang_attr(self.tcx, trait_item.hir_id, &trait_item.attrs)\n+        {\n+            self.worklist.push(trait_item.hir_id);\n         }\n     }\n \n@@ -440,17 +436,11 @@ impl<'v, 'k, 'tcx> ItemLikeVisitor<'v> for LifeSeeder<'k, 'tcx> {\n     }\n \n     fn visit_foreign_item(&mut self, foreign_item: &hir::ForeignItem<'_>) {\n-        match foreign_item.kind {\n-            hir::ForeignItemKind::Static(..) | hir::ForeignItemKind::Fn(..) => {\n-                if has_allow_dead_code_or_lang_attr(\n-                    self.tcx,\n-                    foreign_item.hir_id,\n-                    &foreign_item.attrs,\n-                ) {\n-                    self.worklist.push(foreign_item.hir_id);\n-                }\n-            }\n-            _ => {}\n+        use hir::ForeignItemKind::{Fn, Static};\n+        if matches!(foreign_item.kind, Static(..) | Fn(..))\n+            && has_allow_dead_code_or_lang_attr(self.tcx, foreign_item.hir_id, &foreign_item.attrs)\n+        {\n+            self.worklist.push(foreign_item.hir_id);\n         }\n     }\n }"}]}