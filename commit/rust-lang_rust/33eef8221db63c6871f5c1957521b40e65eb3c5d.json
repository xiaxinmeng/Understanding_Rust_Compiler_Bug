{"sha": "33eef8221db63c6871f5c1957521b40e65eb3c5d", "node_id": "C_kwDOAAsO6NoAKDMzZWVmODIyMWRiNjNjNjg3MWY1YzE5NTc1MjFiNDBlNjVlYjNjNWQ", "commit": {"author": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-05-29T19:29:50Z"}, "committer": {"name": "Obei Sideg", "email": "obei.sideg@gmail.com", "date": "2023-05-29T19:29:50Z"}, "message": "Avoid ICE on `#![doc(test(...)]` with literal parameter", "tree": {"sha": "aff79410e6ca45bb15f2cf3aa0ea1068c5daf191", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aff79410e6ca45bb15f2cf3aa0ea1068c5daf191"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33eef8221db63c6871f5c1957521b40e65eb3c5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33eef8221db63c6871f5c1957521b40e65eb3c5d", "html_url": "https://github.com/rust-lang/rust/commit/33eef8221db63c6871f5c1957521b40e65eb3c5d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33eef8221db63c6871f5c1957521b40e65eb3c5d/comments", "author": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "obeis", "id": 54103142, "node_id": "MDQ6VXNlcjU0MTAzMTQy", "avatar_url": "https://avatars.githubusercontent.com/u/54103142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/obeis", "html_url": "https://github.com/obeis", "followers_url": "https://api.github.com/users/obeis/followers", "following_url": "https://api.github.com/users/obeis/following{/other_user}", "gists_url": "https://api.github.com/users/obeis/gists{/gist_id}", "starred_url": "https://api.github.com/users/obeis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/obeis/subscriptions", "organizations_url": "https://api.github.com/users/obeis/orgs", "repos_url": "https://api.github.com/users/obeis/repos", "events_url": "https://api.github.com/users/obeis/events{/privacy}", "received_events_url": "https://api.github.com/users/obeis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c03fb65268e3331f381714c664a581a6e86b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c03fb65268e3331f381714c664a581a6e86b8c", "html_url": "https://github.com/rust-lang/rust/commit/39c03fb65268e3331f381714c664a581a6e86b8c"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "139df68bb63d979551b9dbb6bee6598096531e2d", "filename": "compiler/rustc_passes/messages.ftl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fmessages.ftl?ref=33eef8221db63c6871f5c1957521b40e65eb3c5d", "patch": "@@ -214,6 +214,8 @@ passes_doc_keyword_only_impl =\n passes_doc_test_takes_list =\n     `#[doc(test(...)]` takes a list of attributes\n \n+passes_doc_test_literal = `#![doc(test(...)]` does not take a literal\n+\n passes_doc_test_unknown =\n     unknown `doc(test)` attribute `{$path}`\n "}, {"sha": "c35c7da2664291d4e909eb4b04d07492011fa923", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=33eef8221db63c6871f5c1957521b40e65eb3c5d", "patch": "@@ -944,21 +944,28 @@ impl CheckAttrVisitor<'_> {\n         let mut is_valid = true;\n         if let Some(metas) = meta.meta_item_list() {\n             for i_meta in metas {\n-                match i_meta.name_or_empty() {\n-                    sym::attr | sym::no_crate_inject => {}\n-                    _ => {\n+                match (i_meta.name_or_empty(), i_meta.meta_item()) {\n+                    (sym::attr | sym::no_crate_inject, _) => {}\n+                    (_, Some(m)) => {\n                         self.tcx.emit_spanned_lint(\n                             INVALID_DOC_ATTRIBUTES,\n                             hir_id,\n                             i_meta.span(),\n                             errors::DocTestUnknown {\n-                                path: rustc_ast_pretty::pprust::path_to_string(\n-                                    &i_meta.meta_item().unwrap().path,\n-                                ),\n+                                path: rustc_ast_pretty::pprust::path_to_string(&m.path),\n                             },\n                         );\n                         is_valid = false;\n                     }\n+                    (_, None) => {\n+                        self.tcx.emit_spanned_lint(\n+                            INVALID_DOC_ATTRIBUTES,\n+                            hir_id,\n+                            i_meta.span(),\n+                            errors::DocTestLiteral,\n+                        );\n+                        is_valid = false;\n+                    }\n                 }\n             }\n         } else {"}, {"sha": "ae624dbc9c953b09e48ea236d36ce077f39bd1f2", "filename": "compiler/rustc_passes/src/errors.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33eef8221db63c6871f5c1957521b40e65eb3c5d/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs?ref=33eef8221db63c6871f5c1957521b40e65eb3c5d", "patch": "@@ -281,6 +281,10 @@ pub struct DocTestUnknown {\n     pub path: String,\n }\n \n+#[derive(LintDiagnostic)]\n+#[diag(passes_doc_test_literal)]\n+pub struct DocTestLiteral;\n+\n #[derive(LintDiagnostic)]\n #[diag(passes_doc_test_takes_list)]\n pub struct DocTestTakesList;"}]}