{"sha": "f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMjExYjE1NzhkYzYxZmFlZTFmNmEwY2ZiMmU2ZmQ2NTUyNmVlMTE=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-09-26T01:44:37Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-10-02T15:36:20Z"}, "message": "Add a method to test span containment", "tree": {"sha": "bad023efd4bbdac41dc168050b95552d932ad1a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bad023efd4bbdac41dc168050b95552d932ad1a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "html_url": "https://github.com/rust-lang/rust/commit/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5180a7ccc55bb9973ca1f9441b39563c14f7ca9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5180a7ccc55bb9973ca1f9441b39563c14f7ca9f", "html_url": "https://github.com/rust-lang/rust/commit/5180a7ccc55bb9973ca1f9441b39563c14f7ca9f"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a8f20815a9a8b872e126e4f3835834cf1fafa6c6", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "patch": "@@ -281,11 +281,10 @@ fn check_for_static_nan(cx: &MatchCheckCtxt, pat: &Pat) {\n                 Ok(_) => {}\n \n                 Err(err) => {\n-                    let subspan = p.span.lo <= err.span.lo && err.span.hi <= p.span.hi;\n                     span_err!(cx.tcx.sess, err.span, E0471,\n                               \"constant evaluation error: {}\",\n                               err.description());\n-                    if !subspan {\n+                    if !p.span.contains(err.span) {\n                         cx.tcx.sess.span_note(p.span,\n                                               \"in pattern here\")\n                     }"}, {"sha": "a05d9b19d23213ab51b8d8aa3f0674f4037ed726", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "patch": "@@ -1692,12 +1692,10 @@ pub fn ast_ty_to_ty<'tcx>(this: &AstConv<'tcx>,\n                     }\n                 }\n                 Err(ref r) => {\n-                    let subspan  =\n-                        ast_ty.span.lo <= r.span.lo && r.span.hi <= ast_ty.span.hi;\n                     span_err!(tcx.sess, r.span, E0250,\n                               \"array length constant evaluation error: {}\",\n                               r.description());\n-                    if !subspan {\n+                    if !ast_ty.span.contains(r.span) {\n                         span_note!(tcx.sess, ast_ty.span, \"for array length here\")\n                     }\n                     this.tcx().types.err"}, {"sha": "aa4dd1d53c502c07a17bb0faaeae08e95e8cd540", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3211b1578dc61faee1f6a0cfb2e6fd65526ee11/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=f3211b1578dc61faee1f6a0cfb2e6fd65526ee11", "patch": "@@ -142,6 +142,10 @@ impl Span {\n     pub fn substitute_dummy(self, other: Span) -> Span {\n         if self == DUMMY_SP { other } else { self }\n     }\n+\n+    pub fn contains(self, other: Span) -> bool {\n+        self.lo <= other.lo && other.hi <= self.hi\n+    }\n }\n \n #[derive(Clone, PartialEq, Eq, RustcEncodable, RustcDecodable, Hash, Debug, Copy)]\n@@ -1011,7 +1015,7 @@ impl CodeMap {\n \n                     let span_comes_from_this_expansion =\n                         info.callee.span.map_or(span == info.call_site, |mac_span| {\n-                            mac_span.lo <= span.lo && span.hi <= mac_span.hi\n+                            mac_span.contains(span)\n                         });\n \n                     debug!(\"span_allows_unstable: span: {:?} call_site: {:?} callee: {:?}\","}]}