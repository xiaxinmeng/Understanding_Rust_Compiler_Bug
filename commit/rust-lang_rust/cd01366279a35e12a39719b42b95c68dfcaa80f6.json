{"sha": "cd01366279a35e12a39719b42b95c68dfcaa80f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkMDEzNjYyNzlhMzVlMTJhMzk3MTliNDJiOTVjNjhkZmNhYTgwZjY=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-01-21T18:47:38Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-02-11T13:24:48Z"}, "message": "Add `SocketAddr{,V4,V6}::set_port`.\n\nAs demonstrated in the `resolve_socket_addr` change, this is less awkward\nthan re-creating a new address from the other parts.", "tree": {"sha": "8787ed79b09eee3fc1428f1f5c10e0af91308b89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8787ed79b09eee3fc1428f1f5c10e0af91308b89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd01366279a35e12a39719b42b95c68dfcaa80f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd01366279a35e12a39719b42b95c68dfcaa80f6", "html_url": "https://github.com/rust-lang/rust/commit/cd01366279a35e12a39719b42b95c68dfcaa80f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd01366279a35e12a39719b42b95c68dfcaa80f6/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5f8e0bfbeee2abc425f26a3ad36430f23010e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5f8e0bfbeee2abc425f26a3ad36430f23010e69", "html_url": "https://github.com/rust-lang/rust/commit/f5f8e0bfbeee2abc425f26a3ad36430f23010e69"}], "stats": {"total": 53, "additions": 43, "deletions": 10}, "files": [{"sha": "6679201b3a5656736ea3cf22123191afcd1a7953", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 43, "deletions": 10, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/cd01366279a35e12a39719b42b95c68dfcaa80f6/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd01366279a35e12a39719b42b95c68dfcaa80f6/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=cd01366279a35e12a39719b42b95c68dfcaa80f6", "patch": "@@ -75,6 +75,15 @@ impl SocketAddr {\n             SocketAddr::V6(ref a) => a.port(),\n         }\n     }\n+\n+    /// Change the port number associated with this socket address.\n+    #[unstable(feature = \"sockaddr_set_port\", reason = \"recent addition\", issue = \"0\")]  // FIXME add tracking issue\n+    pub fn set_port(&mut self, new_port: u16) {\n+        match *self {\n+            SocketAddr::V4(ref mut a) => a.set_port(new_port),\n+            SocketAddr::V6(ref mut a) => a.set_port(new_port),\n+        }\n+    }\n }\n \n impl SocketAddrV4 {\n@@ -102,6 +111,10 @@ impl SocketAddrV4 {\n     /// Returns the port number associated with this socket address.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 { ntoh(self.inner.sin_port) }\n+\n+    /// Change the port number associated with this socket address.\n+    #[unstable(feature = \"sockaddr_set_port\", reason = \"recent addition\", issue = \"0\")]  // FIXME add tracking issue\n+    pub fn set_port(&mut self, new_port: u16) { self.inner.sin_port = hton(new_port) }\n }\n \n impl SocketAddrV6 {\n@@ -134,6 +147,10 @@ impl SocketAddrV6 {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn port(&self) -> u16 { ntoh(self.inner.sin6_port) }\n \n+    /// Change the port number associated with this socket address.\n+    #[unstable(feature = \"sockaddr_set_port\", reason = \"recent addition\", issue = \"0\")]  // FIXME add tracking issue\n+    pub fn set_port(&mut self, new_port: u16) { self.inner.sin6_port = hton(new_port) }\n+\n     /// Returns the flow information associated with this address,\n     /// corresponding to the `sin6_flowinfo` field in C.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -385,16 +402,9 @@ impl ToSocketAddrs for (Ipv6Addr, u16) {\n fn resolve_socket_addr(s: &str, p: u16) -> io::Result<vec::IntoIter<SocketAddr>> {\n     let ips = try!(lookup_host(s));\n     let v: Vec<_> = try!(ips.map(|a| {\n-        a.map(|a| {\n-            match a {\n-                SocketAddr::V4(ref a) => {\n-                    SocketAddr::V4(SocketAddrV4::new(*a.ip(), p))\n-                }\n-                SocketAddr::V6(ref a) => {\n-                    SocketAddr::V6(SocketAddrV6::new(*a.ip(), p, a.flowinfo(),\n-                                                     a.scope_id()))\n-                }\n-            }\n+        a.map(|mut a| {\n+            a.set_port(p);\n+            a\n         })\n     }).collect());\n     Ok(v.into_iter())\n@@ -511,4 +521,27 @@ mod tests {\n     fn to_socket_addr_str_bad() {\n         assert!(tsa(\"1200::AB00:1234::2552:7777:1313:34300\").is_err());\n     }\n+\n+    #[test]\n+    fn set_port() {\n+        let mut v4 = SocketAddrV4::new(Ipv4Addr::new(77, 88, 21, 11), 80);\n+        assert_eq!(v4.port(), 80);\n+        v4.set_port(443);\n+        assert_eq!(v4.port(), 443);\n+\n+        let mut addr = SocketAddr::V4(v4);\n+        assert_eq!(addr.port(), 443);\n+        addr.set_port(8080);\n+        assert_eq!(addr.port(), 8080);\n+\n+        let mut v6 = SocketAddrV6::new(Ipv6Addr::new(0x2a02, 0x6b8, 0, 1, 0, 0, 0, 1), 80, 0, 0);\n+        assert_eq!(v6.port(), 80);\n+        v6.set_port(443);\n+        assert_eq!(v6.port(), 443);\n+\n+        let mut addr = SocketAddr::V6(v6);\n+        assert_eq!(addr.port(), 443);\n+        addr.set_port(8080);\n+        assert_eq!(addr.port(), 8080);\n+    }\n }"}]}