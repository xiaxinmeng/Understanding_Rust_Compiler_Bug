{"sha": "3e933b199c69e1b6c32ecb65bb8f06127cfb8312", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlOTMzYjE5OWM2OWUxYjZjMzJlY2I2NWJiOGYwNjEyN2NmYjgzMTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-06T15:32:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-06T15:32:10Z"}, "message": "auto merge of #7194 : jensnockert/rust/endian, r=cmr\n\nThey simply byte-swap an integer to a specific endian, like the hton* functions in C.\r\n\r\nThese intrinsics are synthesized, so maybe they should be in another file. But since they are just a single line of code each, based on the bswap intrinsics and aren't really intended for public consumption I thought they would fit in the intrinsics file.\r\n\r\nThe next step working on this could be to expose a trait / generic function for byteswapping.", "tree": {"sha": "8f28a9f7ecf7bd331be9fceade75ddb283831bb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f28a9f7ecf7bd331be9fceade75ddb283831bb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e933b199c69e1b6c32ecb65bb8f06127cfb8312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e933b199c69e1b6c32ecb65bb8f06127cfb8312", "html_url": "https://github.com/rust-lang/rust/commit/3e933b199c69e1b6c32ecb65bb8f06127cfb8312", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e933b199c69e1b6c32ecb65bb8f06127cfb8312/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9897cd08a069342c1aae67faa04b119968b44eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9897cd08a069342c1aae67faa04b119968b44eb", "html_url": "https://github.com/rust-lang/rust/commit/e9897cd08a069342c1aae67faa04b119968b44eb"}, {"sha": "bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8", "html_url": "https://github.com/rust-lang/rust/commit/bc6848d352dd234ffb9c6cb97e2fbcf6c878c8d8"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "97e3cba92db2fe5c07c221077e4e5563fb22e5e4", "filename": "src/libstd/unstable/intrinsics.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e933b199c69e1b6c32ecb65bb8f06127cfb8312/src%2Flibstd%2Funstable%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e933b199c69e1b6c32ecb65bb8f06127cfb8312/src%2Flibstd%2Funstable%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fintrinsics.rs?ref=3e933b199c69e1b6c32ecb65bb8f06127cfb8312", "patch": "@@ -417,3 +417,17 @@ pub extern \"rust-intrinsic\" {\n     pub fn bswap32(x: i32) -> i32;\n     pub fn bswap64(x: i64) -> i64;\n }\n+\n+#[cfg(target_endian = \"little\")] pub fn to_le16(x: i16) -> i16 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le16(x: i16) -> i16 { unsafe { bswap16(x) } }\n+#[cfg(target_endian = \"little\")] pub fn to_le32(x: i32) -> i32 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le32(x: i32) -> i32 { unsafe { bswap32(x) } }\n+#[cfg(target_endian = \"little\")] pub fn to_le64(x: i64) -> i64 { x }\n+#[cfg(target_endian = \"big\")]    pub fn to_le64(x: i64) -> i64 { unsafe { bswap64(x) } }\n+\n+#[cfg(target_endian = \"little\")] pub fn to_be16(x: i16) -> i16 { unsafe { bswap16(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be16(x: i16) -> i16 { x }\n+#[cfg(target_endian = \"little\")] pub fn to_be32(x: i32) -> i32 { unsafe { bswap32(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be32(x: i32) -> i32 { x }\n+#[cfg(target_endian = \"little\")] pub fn to_be64(x: i64) -> i64 { unsafe { bswap64(x) } }\n+#[cfg(target_endian = \"big\")]    pub fn to_be64(x: i64) -> i64 { x }"}]}