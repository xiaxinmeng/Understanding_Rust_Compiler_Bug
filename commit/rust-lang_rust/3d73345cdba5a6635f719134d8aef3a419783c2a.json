{"sha": "3d73345cdba5a6635f719134d8aef3a419783c2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNzMzNDVjZGJhNWE2NjM1ZjcxOTEzNGQ4YWVmM2E0MTk3ODNjMmE=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-28T21:25:29Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-28T21:48:37Z"}, "message": "Simplify", "tree": {"sha": "f994a81f64b4641f0ddcc331ad052a8bc2db3318", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f994a81f64b4641f0ddcc331ad052a8bc2db3318"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d73345cdba5a6635f719134d8aef3a419783c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d73345cdba5a6635f719134d8aef3a419783c2a", "html_url": "https://github.com/rust-lang/rust/commit/3d73345cdba5a6635f719134d8aef3a419783c2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d73345cdba5a6635f719134d8aef3a419783c2a/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c2d4135db867efe335a0654d86429bea7bb9caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2d4135db867efe335a0654d86429bea7bb9caf", "html_url": "https://github.com/rust-lang/rust/commit/1c2d4135db867efe335a0654d86429bea7bb9caf"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "c3d92a268fdad0e6707300b5e724a05309ed14d6", "filename": "crates/ra_hir_ty/src/display.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3d73345cdba5a6635f719134d8aef3a419783c2a/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d73345cdba5a6635f719134d8aef3a419783c2a/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdisplay.rs?ref=3d73345cdba5a6635f719134d8aef3a419783c2a", "patch": "@@ -159,20 +159,13 @@ impl HirDisplay for ApplicationTy {\n             }\n             TypeCtor::FnDef(def) => {\n                 let sig = f.db.callable_item_signature(def).subst(&self.parameters);\n-                let name = match def {\n-                    CallableDef::FunctionId(ff) => f.db.function_data(ff).name.clone(),\n-                    CallableDef::StructId(s) => f.db.struct_data(s).name.clone(),\n+                match def {\n+                    CallableDef::FunctionId(ff) => write!(f, \"fn {}\", f.db.function_data(ff).name)?,\n+                    CallableDef::StructId(s) => write!(f, \"{}\", f.db.struct_data(s).name)?,\n                     CallableDef::EnumVariantId(e) => {\n-                        let enum_data = f.db.enum_data(e.parent);\n-                        enum_data.variants[e.local_id].name.clone()\n+                        write!(f, \"{}\", f.db.enum_data(e.parent).variants[e.local_id].name)?\n                     }\n                 };\n-                match def {\n-                    CallableDef::FunctionId(_) => write!(f, \"fn {}\", name)?,\n-                    CallableDef::StructId(_) | CallableDef::EnumVariantId(_) => {\n-                        write!(f, \"{}\", name)?\n-                    }\n-                }\n                 if self.parameters.len() > 0 {\n                     let generics = generics(f.db.upcast(), def.into());\n                     let (parent_params, self_param, type_params, _impl_trait_params) ="}]}