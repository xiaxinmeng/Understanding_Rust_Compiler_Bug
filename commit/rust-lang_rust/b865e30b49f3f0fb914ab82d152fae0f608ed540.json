{"sha": "b865e30b49f3f0fb914ab82d152fae0f608ed540", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NjVlMzBiNDlmM2YwZmI5MTRhYjgyZDE1MmZhZTBmNjA4ZWQ1NDA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-09T20:56:49Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-12-09T20:56:49Z"}, "message": "Upgrade rust to rustc 1.6.0-nightly (462ec0576 2015-12-09)", "tree": {"sha": "64c642e39cc00731a702a97e06c86ed1e02d1434", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64c642e39cc00731a702a97e06c86ed1e02d1434"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b865e30b49f3f0fb914ab82d152fae0f608ed540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b865e30b49f3f0fb914ab82d152fae0f608ed540", "html_url": "https://github.com/rust-lang/rust/commit/b865e30b49f3f0fb914ab82d152fae0f608ed540", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b865e30b49f3f0fb914ab82d152fae0f608ed540/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fbe762a99783bfd0554f69e4a2231880e318143", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fbe762a99783bfd0554f69e4a2231880e318143", "html_url": "https://github.com/rust-lang/rust/commit/2fbe762a99783bfd0554f69e4a2231880e318143"}], "stats": {"total": 39, "additions": 18, "deletions": 21}, "files": [{"sha": "c70e43ed78d6c190c60d005cca1a9885b20bbf4e", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.29\"\n+version = \"0.0.30\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\","}, {"sha": "7636267bcd8b9156a84f9c47e4463adc25976e0d", "filename": "src/eq_op.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feq_op.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -66,7 +66,6 @@ fn is_path_equal(left : &Path, right : &Path) -> bool {\n     // we have to be explicit about hygiene\n     left.global == right.global && over(&left.segments, &right.segments,\n         |l, r| l.identifier.name == r.identifier.name\n-              && l.identifier.ctxt == r.identifier.ctxt\n                && l.parameters == r.parameters)\n }\n "}, {"sha": "c501ceb66fa2458f2f26a459b9f9bcba5ac21edd", "filename": "src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flen_zero.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -50,7 +50,7 @@ impl LateLintPass for LenZero {\n     }\n }\n \n-fn check_trait_items(cx: &LateContext, item: &Item, trait_items: &[P<TraitItem>]) {\n+fn check_trait_items(cx: &LateContext, item: &Item, trait_items: &[TraitItem]) {\n     fn is_named_self(item: &TraitItem, name: &str) -> bool {\n         item.name.as_str() == name && if let MethodTraitItem(ref sig, _) =\n             item.node { is_self_sig(sig) } else { false }\n@@ -69,7 +69,7 @@ fn check_trait_items(cx: &LateContext, item: &Item, trait_items: &[P<TraitItem>]\n     }\n }\n \n-fn check_impl_items(cx: &LateContext, item: &Item, impl_items: &[P<ImplItem>]) {\n+fn check_impl_items(cx: &LateContext, item: &Item, impl_items: &[ImplItem]) {\n     fn is_named_self(item: &ImplItem, name: &str) -> bool {\n         item.name.as_str() == name && if let ImplItemKind::Method(ref sig, _) =\n             item.node { is_self_sig(sig) } else { false }"}, {"sha": "03e0cbea19c1907cee65128dde727bc03189c215", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -1,5 +1,5 @@\n #![feature(plugin_registrar, box_syntax)]\n-#![feature(rustc_private, core, collections)]\n+#![feature(rustc_private, collections)]\n #![feature(num_bits_bytes, iter_arith)]\n #![allow(unknown_lints)]\n \n@@ -68,7 +68,7 @@ pub mod escape;\n pub mod misc_early;\n \n mod reexport {\n-    pub use syntax::ast::{Name, Ident, NodeId};\n+    pub use syntax::ast::{Name, NodeId};\n }\n \n #[plugin_registrar]"}, {"sha": "d9719df0b6f2eefb93e910ad5279728b39d24eb0", "filename": "src/map_clone.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmap_clone.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -1,6 +1,5 @@\n use rustc::lint::*;\n use rustc_front::hir::*;\n-use syntax::ast::Ident;\n use utils::{CLONE_PATH, OPTION_PATH};\n use utils::{is_adjusted, match_path, match_trait_method, match_type, snippet, span_help_and_lint};\n use utils::{walk_ptrs_ty, walk_ptrs_ty_depth};"}, {"sha": "b9f60e0e01a66165edd09c3e19e8402ab8a8d25b", "filename": "src/shadow.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/src%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshadow.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -39,7 +39,7 @@ fn check_fn(cx: &LateContext, decl: &FnDecl, block: &Block) {\n     let mut bindings = Vec::new();\n     for arg in &decl.inputs {\n         if let PatIdent(_, ident, _) = arg.pat.node {\n-            bindings.push((ident.node.name, ident.span))\n+            bindings.push((ident.node.unhygienic_name, ident.span))\n         }\n     }\n     check_block(cx, block, &mut bindings);\n@@ -85,7 +85,7 @@ fn check_pat(cx: &LateContext, pat: &Pat, init: &Option<&Expr>, span: Span,\n     //TODO: match more stuff / destructuring\n     match pat.node {\n         PatIdent(_, ref ident, ref inner) => {\n-            let name = ident.node.name;\n+            let name = ident.node.unhygienic_name;\n             if is_binding(cx, pat) {\n                 let mut new_binding = true;\n                 for tup in bindings.iter_mut() {\n@@ -266,7 +266,7 @@ fn is_self_shadow(name: Name, expr: &Expr) -> bool {\n \n fn path_eq_name(name: Name, path: &Path) -> bool {\n     !path.global && path.segments.len() == 1 &&\n-        path.segments[0].identifier.name == name\n+        path.segments[0].identifier.unhygienic_name == name\n }\n \n struct ContainsSelf {\n@@ -275,8 +275,8 @@ struct ContainsSelf {\n }\n \n impl<'v> Visitor<'v> for ContainsSelf {\n-    fn visit_name(&mut self, _: Span, name: Name) {\n-        if self.name == name {\n+    fn visit_ident(&mut self, _: Span, ident: Ident) {\n+        if self.name == ident.unhygienic_name {\n             self.result = true;\n         }\n     }"}, {"sha": "0a52a9829aef5b3fa77391a5306f0ee7530d9420", "filename": "tests/compile-fail/shadow.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/tests%2Fcompile-fail%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/tests%2Fcompile-fail%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fshadow.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -10,15 +10,15 @@ fn first(x: (isize, isize)) -> isize { x.0 }\n \n fn main() {\n     let mut x = 1;\n-    let x = &mut x; //~ERROR: x is shadowed by itself in &mut x\n-    let x = { x }; //~ERROR: x is shadowed by itself in { x }\n-    let x = (&*x); //~ERROR: x is shadowed by itself in &*x\n-    let x = { *x + 1 }; //~ERROR: x is shadowed by { *x + 1 } which reuses\n-    let x = id(x); //~ERROR: x is shadowed by id(x) which reuses\n-    let x = (1, x); //~ERROR: x is shadowed by (1, x) which reuses\n-    let x = first(x); //~ERROR: x is shadowed by first(x) which reuses\n+    let x = &mut x; //~ERROR x is shadowed by itself in &mut x\n+    let x = { x }; //~ERROR x is shadowed by itself in { x }\n+    let x = (&*x); //~ERROR x is shadowed by itself in &*x\n+    let x = { *x + 1 }; //~ERROR x is shadowed by { *x + 1 } which reuses\n+    let x = id(x); //~ERROR x is shadowed by id(x) which reuses\n+    let x = (1, x); //~ERROR x is shadowed by (1, x) which reuses\n+    let x = first(x); //~ERROR x is shadowed by first(x) which reuses\n     let y = 1;\n-    let x = y; //~ERROR: x is shadowed by y\n+    let x = y; //~ERROR x is shadowed by y\n \n     let o = Some(1u8);\n "}, {"sha": "94dd3a1854927fa80d04ef1514fa88748f1c3983", "filename": "tests/compile-fail/transmute.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b865e30b49f3f0fb914ab82d152fae0f608ed540/tests%2Fcompile-fail%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b865e30b49f3f0fb914ab82d152fae0f608ed540/tests%2Fcompile-fail%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftransmute.rs?ref=b865e30b49f3f0fb914ab82d152fae0f608ed540", "patch": "@@ -1,4 +1,3 @@\n-#![feature(core)]\n #![feature(plugin)]\n #![plugin(clippy)]\n #![deny(useless_transmute)]"}]}