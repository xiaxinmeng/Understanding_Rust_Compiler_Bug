{"sha": "0d7d5e994fca984a71303b170acc24cfbd26474a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkN2Q1ZTk5NGZjYTk4NGE3MTMwM2IxNzBhY2MyNGNmYmQyNjQ3NGE=", "commit": {"author": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2018-05-30T21:27:11Z"}, "committer": {"name": "Linus F\u00e4rnstrand", "email": "faern@faern.net", "date": "2018-05-31T17:18:42Z"}, "message": "Rewrite numeric_intrinsic without macro", "tree": {"sha": "5596f3d37022d1db66bb9f7421f3dfc42f8e36a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5596f3d37022d1db66bb9f7421f3dfc42f8e36a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d7d5e994fca984a71303b170acc24cfbd26474a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d7d5e994fca984a71303b170acc24cfbd26474a", "html_url": "https://github.com/rust-lang/rust/commit/0d7d5e994fca984a71303b170acc24cfbd26474a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d7d5e994fca984a71303b170acc24cfbd26474a/comments", "author": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "committer": {"login": "faern", "id": 332294, "node_id": "MDQ6VXNlcjMzMjI5NA==", "avatar_url": "https://avatars.githubusercontent.com/u/332294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/faern", "html_url": "https://github.com/faern", "followers_url": "https://api.github.com/users/faern/followers", "following_url": "https://api.github.com/users/faern/following{/other_user}", "gists_url": "https://api.github.com/users/faern/gists{/gist_id}", "starred_url": "https://api.github.com/users/faern/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/faern/subscriptions", "organizations_url": "https://api.github.com/users/faern/orgs", "repos_url": "https://api.github.com/users/faern/repos", "events_url": "https://api.github.com/users/faern/events{/privacy}", "received_events_url": "https://api.github.com/users/faern/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12c330c4bf53af24d7c10a8e2270e34f3d0b8efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/12c330c4bf53af24d7c10a8e2270e34f3d0b8efb", "html_url": "https://github.com/rust-lang/rust/commit/12c330c4bf53af24d7c10a8e2270e34f3d0b8efb"}], "stats": {"total": 39, "additions": 11, "deletions": 28}, "files": [{"sha": "baaca5f8307873ab667ddaab5c997fc9d8af95eb", "filename": "src/librustc_mir/interpret/const_eval.rs", "status": "modified", "additions": 11, "deletions": 28, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/0d7d5e994fca984a71303b170acc24cfbd26474a/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d7d5e994fca984a71303b170acc24cfbd26474a/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fconst_eval.rs?ref=0d7d5e994fca984a71303b170acc24cfbd26474a", "patch": "@@ -596,34 +596,17 @@ fn numeric_intrinsic<'tcx>(\n     bytes: u128,\n     kind: Primitive,\n ) -> EvalResult<'tcx, Scalar> {\n-    macro_rules! integer_intrinsic {\n-        ($method:ident) => ({\n-            use rustc_target::abi::Integer;\n-            let (bits, defined) = match kind {\n-                Primitive::Int(Integer::I8, true) => ((bytes as i8).$method() as u128, 8),\n-                Primitive::Int(Integer::I8, false) => ((bytes as u8).$method() as u128, 8),\n-                Primitive::Int(Integer::I16, true) => ((bytes as i16).$method() as u128, 16),\n-                Primitive::Int(Integer::I16, false) => ((bytes as u16).$method() as u128, 16),\n-                Primitive::Int(Integer::I32, true) => ((bytes as i32).$method() as u128, 32),\n-                Primitive::Int(Integer::I32, false) => ((bytes as u32).$method() as u128, 32),\n-                Primitive::Int(Integer::I64, true) => ((bytes as i64).$method() as u128, 64),\n-                Primitive::Int(Integer::I64, false) => ((bytes as u64).$method() as u128, 64),\n-                Primitive::Int(Integer::I128, true) => ((bytes as i128).$method() as u128, 128),\n-                Primitive::Int(Integer::I128, false) => (bytes.$method() as u128, 128),\n-                _ => bug!(\"invalid `{}` argument: {:?}\", name, bytes),\n-            };\n-\n-            Scalar::Bits { bits, defined }\n-        });\n-    }\n-\n-    let result_val = match name {\n-        \"bswap\" => integer_intrinsic!(swap_bytes),\n-        \"ctlz\" => integer_intrinsic!(leading_zeros),\n-        \"ctpop\" => integer_intrinsic!(count_ones),\n-        \"cttz\" => integer_intrinsic!(trailing_zeros),\n+    let defined = match kind {\n+        Primitive::Int(integer, _) => integer.size().bits() as u8,\n+        _ => bug!(\"invalid `{}` argument: {:?}\", name, bytes),\n+    };\n+    let extra = 128 - defined as u128;\n+    let bytes_out = match name {\n+        \"ctpop\" => bytes.count_ones() as u128,\n+        \"ctlz\" => bytes.leading_zeros() as u128 - extra,\n+        \"cttz\" => (bytes << extra).trailing_zeros() as u128 - extra,\n+        \"bswap\" => (bytes << extra).swap_bytes(),\n         _ => bug!(\"not a numeric intrinsic: {}\", name),\n     };\n-\n-    Ok(result_val)\n+    Ok(Scalar::Bits { bits: bytes_out, defined })\n }"}]}