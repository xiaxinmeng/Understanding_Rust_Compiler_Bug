{"sha": "d3c831ba4a4a2284f73e4f9147aa4900cab56815", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYzgzMWJhNGE0YTIyODRmNzNlNGY5MTQ3YWE0OTAwY2FiNTY4MTU=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-07T12:32:49Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-04-08T23:57:49Z"}, "message": "std: use a `match` in `assert_eq!` to extend the lifetime of the args.\n\nThis enables\n\n    assert_eq!(foo.collect::<Vec<...>>().as_slice(), &[1,2,3,4]);\n\nto work, by extending the lifetime of the .as_slice() rvalue.", "tree": {"sha": "bfd1846f8959003af8cec15f0275bebe62750221", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfd1846f8959003af8cec15f0275bebe62750221"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3c831ba4a4a2284f73e4f9147aa4900cab56815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c831ba4a4a2284f73e4f9147aa4900cab56815", "html_url": "https://github.com/rust-lang/rust/commit/d3c831ba4a4a2284f73e4f9147aa4900cab56815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3c831ba4a4a2284f73e4f9147aa4900cab56815/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8801d891c4674f335fcdc67cb34237902d89a5ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/8801d891c4674f335fcdc67cb34237902d89a5ec", "html_url": "https://github.com/rust-lang/rust/commit/8801d891c4674f335fcdc67cb34237902d89a5ec"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "9d06e38dd8e9caad47154f8d20f2e0bfebfca468", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d3c831ba4a4a2284f73e4f9147aa4900cab56815/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3c831ba4a4a2284f73e4f9147aa4900cab56815/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=d3c831ba4a4a2284f73e4f9147aa4900cab56815", "patch": "@@ -117,13 +117,15 @@ macro_rules! assert(\n #[macro_export]\n macro_rules! assert_eq(\n     ($given:expr , $expected:expr) => ({\n-        let given_val = &($given);\n-        let expected_val = &($expected);\n-        // check both directions of equality....\n-        if !((*given_val == *expected_val) &&\n-             (*expected_val == *given_val)) {\n-            fail!(\"assertion failed: `(left == right) && (right == left)` \\\n-                   (left: `{}`, right: `{}`)\", *given_val, *expected_val)\n+        match (&($given), &($expected)) {\n+            (given_val, expected_val) => {\n+                // check both directions of equality....\n+                if !((*given_val == *expected_val) &&\n+                     (*expected_val == *given_val)) {\n+                    fail!(\"assertion failed: `(left == right) && (right == left)` \\\n+                           (left: `{}`, right: `{}`)\", *given_val, *expected_val)\n+                }\n+            }\n         }\n     })\n )"}]}