{"sha": "bc4e33e6c1250a51fb1b57af085a0dc89853eb17", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNGUzM2U2YzEyNTBhNTFmYjFiNTdhZjA4NWEwZGM4OTg1M2ViMTc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-07-05T13:27:24Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-07-17T13:35:59Z"}, "message": "Add #[inline] to Arguments::as_str().", "tree": {"sha": "1aac97342b17b34325c2ece849096b69eb20b2d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aac97342b17b34325c2ece849096b69eb20b2d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc4e33e6c1250a51fb1b57af085a0dc89853eb17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4e33e6c1250a51fb1b57af085a0dc89853eb17", "html_url": "https://github.com/rust-lang/rust/commit/bc4e33e6c1250a51fb1b57af085a0dc89853eb17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc4e33e6c1250a51fb1b57af085a0dc89853eb17/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e73a23fa969abd6fcf4ded3ad866fe1164e1268b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e73a23fa969abd6fcf4ded3ad866fe1164e1268b", "html_url": "https://github.com/rust-lang/rust/commit/e73a23fa969abd6fcf4ded3ad866fe1164e1268b"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "fdebf785b31fc482dd734270987e81924ad1ba01", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc4e33e6c1250a51fb1b57af085a0dc89853eb17/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc4e33e6c1250a51fb1b57af085a0dc89853eb17/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=bc4e33e6c1250a51fb1b57af085a0dc89853eb17", "patch": "@@ -439,6 +439,7 @@ impl<'a> Arguments<'a> {\n     /// assert_eq!(format_args!(\"{}\", 1).as_str(), None);\n     /// ```\n     #[unstable(feature = \"fmt_as_str\", issue = \"none\")]\n+    #[inline]\n     pub fn as_str(&self) -> Option<&'a str> {\n         if self.args.is_empty() && self.pieces.len() == 1 { Some(self.pieces[0]) } else { None }\n     }"}]}