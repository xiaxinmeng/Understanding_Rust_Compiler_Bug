{"sha": "efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYWVkOGUwYzBiYzY3ZDQ2YTY0N2EwY2ViOTRiNGIwOTVjZTA0ZGI=", "commit": {"author": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-29T20:25:40Z"}, "committer": {"name": "Alex Hamilton", "email": "alex.hamilton@ou.edu", "date": "2019-01-29T21:33:04Z"}, "message": "wildcard_match_arm: lint only enum matches.", "tree": {"sha": "8df95c6fd74f7cec2f63e250e9e15d62ef591f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8df95c6fd74f7cec2f63e250e9e15d62ef591f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "html_url": "https://github.com/rust-lang/rust/commit/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/comments", "author": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aehmlo", "id": 1622250, "node_id": "MDQ6VXNlcjE2MjIyNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1622250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aehmlo", "html_url": "https://github.com/Aehmlo", "followers_url": "https://api.github.com/users/Aehmlo/followers", "following_url": "https://api.github.com/users/Aehmlo/following{/other_user}", "gists_url": "https://api.github.com/users/Aehmlo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aehmlo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aehmlo/subscriptions", "organizations_url": "https://api.github.com/users/Aehmlo/orgs", "repos_url": "https://api.github.com/users/Aehmlo/repos", "events_url": "https://api.github.com/users/Aehmlo/events{/privacy}", "received_events_url": "https://api.github.com/users/Aehmlo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c676578097eb785cc3933ce363a93affc726ff51", "url": "https://api.github.com/repos/rust-lang/rust/commits/c676578097eb785cc3933ce363a93affc726ff51", "html_url": "https://github.com/rust-lang/rust/commit/c676578097eb785cc3933ce363a93affc726ff51"}], "stats": {"total": 56, "additions": 32, "deletions": 24}, "files": [{"sha": "71066aadfcbdcbde0df4f54d6ba25d3adb3605db", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "patch": "@@ -1028,7 +1028,7 @@ All notable changes to this project will be documented in this file.\n [`while_let_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n [`while_let_on_iterator`]: https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator\n [`wildcard_dependencies`]: https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_dependencies\n-[`wildcard_match_arm`]: https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_match_arm\n+[`wildcard_enum_match_arm`]: https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm\n [`write_literal`]: https://rust-lang.github.io/rust-clippy/master/index.html#write_literal\n [`write_with_newline`]: https://rust-lang.github.io/rust-clippy/master/index.html#write_with_newline\n [`writeln_empty_string`]: https://rust-lang.github.io/rust-clippy/master/index.html#writeln_empty_string"}, {"sha": "52cc2a88da4aaa4e1c1f3feb23506675be6184a8", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "patch": "@@ -499,7 +499,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>, conf: &Conf) {\n         indexing_slicing::INDEXING_SLICING,\n         inherent_impl::MULTIPLE_INHERENT_IMPL,\n         literal_representation::DECIMAL_LITERAL_REPRESENTATION,\n-        matches::WILDCARD_MATCH_ARM,\n+        matches::WILDCARD_ENUM_MATCH_ARM,\n         mem_forget::MEM_FORGET,\n         methods::CLONE_ON_REF_PTR,\n         methods::OPTION_UNWRAP_USED,"}, {"sha": "e0094b19998a962310dadb37a76a2ca0505a06c9", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "patch": "@@ -187,9 +187,9 @@ declare_clippy_lint! {\n     \"a match on an Option value instead of using `as_ref()` or `as_mut`\"\n }\n \n-/// **What it does:** Checks for wildcard matches using `_`.\n+/// **What it does:** Checks for wildcard enum matches using `_`.\n ///\n-/// **Why is this bad?** New variants added by library updates can be missed.\n+/// **Why is this bad?** New enum variants added by library updates can be missed.\n ///\n /// **Known problems:** None.\n ///\n@@ -201,9 +201,9 @@ declare_clippy_lint! {\n /// }\n /// ```\n declare_clippy_lint! {\n-    pub WILDCARD_MATCH_ARM,\n+    pub WILDCARD_ENUM_MATCH_ARM,\n     restriction,\n-    \"a wildcard match arm using `_`\"\n+    \"a wildcard enum match arm using `_`\"\n }\n \n #[allow(missing_copy_implementations)]\n@@ -219,7 +219,7 @@ impl LintPass for MatchPass {\n             MATCH_OVERLAPPING_ARM,\n             MATCH_WILD_ERR_ARM,\n             MATCH_AS_REF,\n-            WILDCARD_MATCH_ARM\n+            WILDCARD_ENUM_MATCH_ARM\n         )\n     }\n \n@@ -238,7 +238,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MatchPass {\n             check_match_bool(cx, ex, arms, expr);\n             check_overlapping_arms(cx, ex, arms);\n             check_wild_err_arm(cx, ex, arms);\n-            check_wild_match(cx, arms);\n+            check_wild_enum_match(cx, ex, arms);\n             check_match_as_ref(cx, ex, arms, expr);\n         }\n         if let ExprKind::Match(ref ex, ref arms, _) = expr.node {\n@@ -463,17 +463,19 @@ fn check_wild_err_arm(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm]) {\n     }\n }\n \n-fn check_wild_match(cx: &LateContext<'_, '_>, arms: &[Arm]) {\n-    for arm in arms {\n-        if is_wild(&arm.pats[0]) {\n-            span_note_and_lint(\n-                cx,\n-                WILDCARD_MATCH_ARM,\n-                arm.pats[0].span,\n-                \"wildcard match will miss any future added variants.\",\n-                arm.pats[0].span,\n-                \"to resolve, match each variant explicitly\",\n-            );\n+fn check_wild_enum_match(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm]) {\n+    if cx.tables.expr_ty(ex).is_enum() {\n+        for arm in arms {\n+            if is_wild(&arm.pats[0]) {\n+                span_note_and_lint(\n+                    cx,\n+                    WILDCARD_ENUM_MATCH_ARM,\n+                    arm.pats[0].span,\n+                    \"wildcard match will miss any future added variants.\",\n+                    arm.pats[0].span,\n+                    \"to resolve, match each variant explicitly\",\n+                );\n+            }\n         }\n     }\n }"}, {"sha": "58daabf4268645b01a309a5993826029ffd680e2", "filename": "tests/ui/wildcard_enum_match_arm.rs", "status": "renamed", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/tests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/tests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.rs?ref=efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "patch": "@@ -1,4 +1,4 @@\n-#![deny(clippy::wildcard_match_arm)]\n+#![deny(clippy::wildcard_enum_match_arm)]\n \n #[derive(Clone, Copy, Debug, Eq, PartialEq)]\n enum Color {\n@@ -33,4 +33,10 @@ fn main() {\n         c if c.is_monochrome() => {},\n         Color::Rgb(_, _, _) => {},\n     };\n+    let x: u8 = unimplemented!();\n+    match x {\n+        0 => {},\n+        140 => {},\n+        _ => {},\n+    };\n }", "previous_filename": "tests/ui/wildcard_match_arm.rs"}, {"sha": "6319a3f3d46c3a763d0bb8dd6174bd82ba1d1a01", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/efaed8e0c0bc67d46a647a0ceb94b4b095ce04db/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=efaed8e0c0bc67d46a647a0ceb94b4b095ce04db", "patch": "@@ -1,14 +1,14 @@\n error: wildcard match will miss any future added variants.\n-  --> $DIR/wildcard_match_arm.rs:26:9\n+  --> $DIR/wildcard_enum_match_arm.rs:26:9\n    |\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^\n    |\n note: lint level defined here\n-  --> $DIR/wildcard_match_arm.rs:1:9\n+  --> $DIR/wildcard_enum_match_arm.rs:1:9\n    |\n-LL | #![deny(clippy::wildcard_match_arm)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::wildcard_enum_match_arm)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: to resolve, match each variant explicitly\n \n error: aborting due to previous error", "previous_filename": "tests/ui/wildcard_match_arm.stderr"}]}