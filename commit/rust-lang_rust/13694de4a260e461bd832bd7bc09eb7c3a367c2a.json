{"sha": "13694de4a260e461bd832bd7bc09eb7c3a367c2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNjk0ZGU0YTI2MGU0NjFiZDgzMmJkN2JjMDllYjdjM2EzNjdjMmE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-13T23:05:28Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:16Z"}, "message": "Comment on a few odd things that we should look at", "tree": {"sha": "66eed17dd275e935a6f2ad535db882e9bf47d68c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66eed17dd275e935a6f2ad535db882e9bf47d68c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13694de4a260e461bd832bd7bc09eb7c3a367c2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13694de4a260e461bd832bd7bc09eb7c3a367c2a", "html_url": "https://github.com/rust-lang/rust/commit/13694de4a260e461bd832bd7bc09eb7c3a367c2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13694de4a260e461bd832bd7bc09eb7c3a367c2a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1ecee5b6d96a8b045a6f44c85d738429b3d6c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1ecee5b6d96a8b045a6f44c85d738429b3d6c4", "html_url": "https://github.com/rust-lang/rust/commit/bb1ecee5b6d96a8b045a6f44c85d738429b3d6c4"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "7a26857c560e0d6470be57fadd29a3464bcfc3c4", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/13694de4a260e461bd832bd7bc09eb7c3a367c2a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13694de4a260e461bd832bd7bc09eb7c3a367c2a/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=13694de4a260e461bd832bd7bc09eb7c3a367c2a", "patch": "@@ -761,6 +761,8 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // FIXME(oli-obk): make this check an assertion that it's not a static here\n         // FIXME(RalfJ, oli-obk): document that `Place::Static` can never be anything but a static\n         // and `ConstValue::Unevaluated` can never be a static\n+        // FIXME(oli-obk, spastorino): the above FIXME is not true anymore, PlaceBase::Static does\n+        // not exist anymore (except for promoteds but it's going away soon).\n         let param_env = if self.tcx.is_static(gid.instance.def_id()) {\n             ty::ParamEnv::reveal_all()\n         } else {"}, {"sha": "82974f338d2abda103acd1b4fb17273a5cda8b31", "filename": "src/librustc_mir/interpret/operand.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/13694de4a260e461bd832bd7bc09eb7c3a367c2a/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13694de4a260e461bd832bd7bc09eb7c3a367c2a/src%2Flibrustc_mir%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Foperand.rs?ref=13694de4a260e461bd832bd7bc09eb7c3a367c2a", "patch": "@@ -578,13 +578,10 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             ty::ConstKind::Param(_) => throw_inval!(TooGeneric),\n             ty::ConstKind::Unevaluated(def_id, substs) => {\n                 let instance = self.resolve(def_id, substs)?;\n+                // FIXME: don't use `const_eval_raw` for regular constants, instead use `const_eval`\n+                // which immediately validates the result before we continue with it here.\n                 return Ok(OpTy::from(self.const_eval_raw(GlobalId { instance, promoted: None })?));\n             }\n-            ty::ConstKind::Infer(..)\n-            | ty::ConstKind::Bound(..)\n-            | ty::ConstKind::Placeholder(..) => {\n-                bug!(\"eval_const_to_op: Unexpected ConstKind {:?}\", val)\n-            }\n             ty::ConstKind::Value(val_val) => val_val,\n         };\n         // Other cases need layout."}]}