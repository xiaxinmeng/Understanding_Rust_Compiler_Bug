{"sha": "cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNWRjZmFhZGE1NTZjNWIyOGY3ZTk1YTI2ZDQyMTE5YmQ1ZTk4Y2M=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-03T23:25:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-03T23:25:51Z"}, "message": "Rollup merge of #65057 - mathstuf:fix-warning-typo, r=Centril\n\ntypo: fix typo in E0392\n\nSee #64931.\n\n---\nCc: @Centril @estebank", "tree": {"sha": "715665644e650d0e3b22ced38a144b586a3616bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/715665644e650d0e3b22ced38a144b586a3616bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdloN/CRBK7hj4Ov3rIwAAdHIIAI/kP9igKnXbfFDAxLNdiKc3\ngPedbuKMzrYoS45Qu/wHofX/qvguv4lTaEIe9tEg/zkHiM29fgSWQBCqzjOUc/Ru\nqIH8ZZBJfEso4Ft/daK5EQleoNlRlkCBlFNG0qbWDt6MbzjBBPgctJChH0gSIplN\n45Ph1sRJ+li6kzaoZtRHiDHtFxfT+ykUgTw68VRrz5mAYNsYWL05mGbG31P+ZWUm\n4NQl9PKRvchFVUWdpQKu//3jKfufKQoI/ulnxNK/HnW1NE2oWInhDGDpLScEpLMz\ndWhDlCLzX4iYOwvauw5lvIhAb6V/d4ws3Pjg+NDCWSRLe0uRRybkfUZPpfkRVEo=\n=sfC/\n-----END PGP SIGNATURE-----\n", "payload": "tree 715665644e650d0e3b22ced38a144b586a3616bf\nparent 4a25c3c1ec2594b249dffc826b1e937df137d267\nparent 126bf3b1dd483a8320239760536a8b7dd49b2f2b\nauthor Tyler Mandry <tmandry@gmail.com> 1570145151 -0700\ncommitter GitHub <noreply@github.com> 1570145151 -0700\n\nRollup merge of #65057 - mathstuf:fix-warning-typo, r=Centril\n\ntypo: fix typo in E0392\n\nSee #64931.\n\n---\nCc: @Centril @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "html_url": "https://github.com/rust-lang/rust/commit/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a25c3c1ec2594b249dffc826b1e937df137d267", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a25c3c1ec2594b249dffc826b1e937df137d267", "html_url": "https://github.com/rust-lang/rust/commit/4a25c3c1ec2594b249dffc826b1e937df137d267"}, {"sha": "126bf3b1dd483a8320239760536a8b7dd49b2f2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/126bf3b1dd483a8320239760536a8b7dd49b2f2b", "html_url": "https://github.com/rust-lang/rust/commit/126bf3b1dd483a8320239760536a8b7dd49b2f2b"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "e736a55a5f51cead6cbbfd6c23ce733c387cdfec", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -1001,12 +1001,12 @@ fn report_bivariance(tcx: TyCtxt<'_>, span: Span, param_name: ast::Name) {\n     // Help is available only in presence of lang items.\n     let msg = if let Some(def_id) = suggested_marker_id {\n         format!(\n-            \"consider removing `{}`, refering to it in a field, or using a marker such as `{}`\",\n+            \"consider removing `{}`, referring to it in a field, or using a marker such as `{}`\",\n             param_name,\n             tcx.def_path_str(def_id),\n         )\n     } else {\n-        format!( \"consider removing `{}` or refering to it in a field\", param_name)\n+        format!( \"consider removing `{}` or referring to it in a field\", param_name)\n     };\n     err.help(&msg);\n     err.emit();"}, {"sha": "db14f9c9bf6950b68aaa8b65a7b09d277f762bd8", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -18,7 +18,7 @@ error[E0392]: parameter `T` is never used\n LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                      ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7b0bfe372757a361f76881515f71673897a9f79c", "filename": "src/test/ui/error-codes/E0392.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Foo<T> { Bar }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "dfc663e4a79f84b88916c81b63d08dd643077aa3", "filename": "src/test/ui/inner-static-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -14,7 +14,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Bar<T> { What }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "25f32b661031f0a0cf31b30d3007ec120cbba9fa", "filename": "src/test/ui/issues/issue-17904-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T> where T: Copy;\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "6ecb4e736acd926e68e05d9c57824647d3f5e628", "filename": "src/test/ui/issues/issue-20413.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct NoData<T>;\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0275]: overflow evaluating the requirement `NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<T>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>: Foo`\n   --> $DIR/issue-20413.rs:8:1"}, {"sha": "a9516b8e5e51b8d22c77bdc2254391d3bf3c91a1", "filename": "src/test/ui/issues/issue-36299.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Foo<'a, A> {}\n    |            ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/issue-36299.rs:1:16\n    |\n LL | struct Foo<'a, A> {}\n    |                ^ unused parameter\n    |\n-   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fe48ea158de64651a51f0f87795d7e6c0975b381", "filename": "src/test/ui/issues/issue-36638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -16,7 +16,7 @@ error[E0392]: parameter `Self` is never used\n LL | struct Foo<Self>(Self);\n    |            ^^^^ unused parameter\n    |\n-   = help: consider removing `Self`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `Self`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "fadb9cdd1a3d19f55e551fad6b10888c702b6b48", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -20,7 +20,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T: ?Hash> { }\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "751a4c1021ebb85ddb2def05bc6fa79ebaaa20d3", "filename": "src/test/ui/regions/region-bounds-on-objects-and-type-parameters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -27,7 +27,7 @@ error[E0392]: parameter `'c` is never used\n LL | struct Foo<'a,'b,'c> {\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'c`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'c`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "0af24dcedfbea2328f058edf013a09933b986c6f", "filename": "src/test/ui/self/self_type_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -76,7 +76,7 @@ error[E0392]: parameter `'Self` is never used\n LL | struct Bar<'Self>;\n    |            ^^^^^ unused parameter\n    |\n-   = help: consider removing `'Self`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'Self`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "cf375ccae873012e84c7b16dff696afdf921ac93", "filename": "src/test/ui/variance/variance-regions-unused-direct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Bivariant<'a>;\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'d` is never used\n   --> $DIR/variance-regions-unused-direct.rs:7:19\n    |\n LL | struct Struct<'a, 'd> {\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'d`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'d`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7c7ba69db211029fae205a81fd1a9313c6e5d5d8", "filename": "src/test/ui/variance/variance-regions-unused-indirect.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | enum Foo<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-regions-unused-indirect.rs:7:10\n    |\n LL | enum Bar<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4cd31358031d7e3542199afd9a177137f892ae73", "filename": "src/test/ui/variance/variance-unused-region-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct SomeStruct<'a> { x: u32 }\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-unused-region-param.rs:4:15\n    |\n LL | enum SomeEnum<'a> { Nothing }\n    |               ^^ unused parameter\n    |\n-   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b648e3c1d5f52adba4958281b0a3096d1260ef79", "filename": "src/test/ui/variance/variance-unused-type-param.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cc5dcfaada556c5b28f7e95a26d42119bd5e98cc/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr?ref=cc5dcfaada556c5b28f7e95a26d42119bd5e98cc", "patch": "@@ -4,23 +4,23 @@ error[E0392]: parameter `A` is never used\n LL | struct SomeStruct<A> { x: u32 }\n    |                   ^ unused parameter\n    |\n-   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/variance-unused-type-param.rs:9:15\n    |\n LL | enum SomeEnum<A> { Nothing }\n    |               ^ unused parameter\n    |\n-   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `T` is never used\n   --> $DIR/variance-unused-type-param.rs:13:15\n    |\n LL | enum ListCell<T> {\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, referring to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}]}