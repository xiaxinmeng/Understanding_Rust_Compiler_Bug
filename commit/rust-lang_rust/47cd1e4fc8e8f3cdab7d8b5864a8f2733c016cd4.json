{"sha": "47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3Y2QxZTRmYzhlOGYzY2RhYjdkOGI1ODY0YThmMjczM2MwMTZjZDQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-30T01:38:20Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-30T01:38:20Z"}, "message": "librustdoc: Fix a bunch of rustdoc tests. rs=bustage", "tree": {"sha": "82b407c76f51f22aeee68bb442e6d4674756694e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82b407c76f51f22aeee68bb442e6d4674756694e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "html_url": "https://github.com/rust-lang/rust/commit/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5245aceba9fd94110de35ed7b75a30822b401d79", "url": "https://api.github.com/repos/rust-lang/rust/commits/5245aceba9fd94110de35ed7b75a30822b401d79", "html_url": "https://github.com/rust-lang/rust/commit/5245aceba9fd94110de35ed7b75a30822b401d79"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "83516a589b5f521f762b108671389ca02c8fdf1d", "filename": "src/librustdoc/astsrv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fastsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fastsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fastsrv.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -21,6 +21,7 @@ use parse;\n use util;\n \n use core::oldcomm;\n+use core::vec;\n use rustc::back::link;\n use rustc::driver::driver;\n use rustc::driver::session::Session;"}, {"sha": "e47bdbb00daab06f2e9e8883777ac6bba46029a3", "filename": "src/librustdoc/attr_parser.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fattr_parser.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -31,6 +31,9 @@ pub type CrateAttrs = {\n mod test {\n     #[legacy_exports];\n \n+    use syntax::ast;\n+    use syntax;\n+\n     fn parse_attributes(+source: ~str) -> ~[ast::attribute] {\n         use syntax::parse;\n         use syntax::parse::parser;"}, {"sha": "812185ec34d483c1600e99c691d3dafd1f5c5cc5", "filename": "src/librustdoc/attr_pass.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fattr_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -310,6 +310,11 @@ fn should_extract_impl_method_docs() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "2c3998cecee2cebc27ffa7736e8c09d422d96f2e", "filename": "src/librustdoc/desc_to_brief_pass.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdesc_to_brief_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -100,6 +100,12 @@ fn should_promote_impl_method_desc() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use attr_pass;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "8f2c61ba26ee9f4bc5c004472156cd02ddef6b5f", "filename": "src/librustdoc/extract.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fextract.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fextract.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fextract.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -344,6 +344,12 @@ fn should_extract_struct_fields() {\n mod test {\n     #[legacy_exports];\n \n+    use astsrv;\n+    use doc;\n+    use parse;\n+\n+    use core::vec;\n+\n     fn mk_doc(+source: ~str) -> doc::Doc {\n         let ast = parse::from_str(source);\n         extract(ast, ~\"\")"}, {"sha": "deb6af224e5d4bac50a3fc2a003a39926f9d0b83", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -8,7 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+use astsrv;\n use doc;\n+use extract;\n+use parse;\n \n use core::vec;\n use std::par;"}, {"sha": "1408ae874168ede461b9c9fe6ce9951d46066329", "filename": "src/librustdoc/markdown_index_pass.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_index_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_index_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_index_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -252,6 +252,15 @@ fn should_index_foreign_mod_contents() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use attr_pass;\n+    use config;\n+    use desc_to_brief_pass;\n+    use doc;\n+    use extract;\n+    use path_pass;\n+\n     fn mk_doc(output_style: config::OutputStyle, +source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let config = {"}, {"sha": "6ed2e98010c9ecb6008de0adcb94ad241c4dc86d", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -11,15 +11,28 @@\n //! Generate markdown from a document tree\n \n use astsrv;\n+use attr_pass;\n+use config;\n+use desc_to_brief_pass;\n use doc::ItemUtils;\n use doc;\n+use extract;\n use fold;\n+use markdown_index_pass;\n use markdown_pass;\n use markdown_writer::Writer;\n use markdown_writer::WriterUtils;\n use markdown_writer::WriterFactory;\n+use markdown_writer;\n+use page_pass;\n+use path_pass;\n+use sectionalize_pass;\n use sort_pass;\n+use trim_pass;\n+use unindent_pass;\n \n+use core::iter;\n+use core::oldcomm;\n use core::str;\n use core::vec;\n use std::par;\n@@ -817,6 +830,24 @@ fn should_write_struct_header() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use attr_pass;\n+    use config;\n+    use desc_to_brief_pass;\n+    use doc;\n+    use extract;\n+    use markdown_index_pass;\n+    use markdown_writer;\n+    use path_pass;\n+    use sectionalize_pass;\n+    use trim_pass;\n+    use tystr_pass;\n+    use unindent_pass;\n+\n+    use core::oldcomm;\n+    use core::str;\n+\n     fn render(+source: ~str) -> ~str {\n         let (srv, doc) = create_doc_srv(source);\n         let markdown = write_markdown_str_srv(srv, doc);"}, {"sha": "f4e5db304e7d63607a6606e97616667f3822dad4", "filename": "src/librustdoc/markdown_writer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fmarkdown_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_writer.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -267,6 +267,12 @@ fn should_name_mod_file_names_by_path() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use doc;\n+    use extract;\n+    use path_pass;\n+\n     fn mk_doc(+name: ~str, +source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, name);"}, {"sha": "0709cc5dc55eb1ba6dac24ad9d9dc766aa571305", "filename": "src/librustdoc/page_pass.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpage_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpage_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpage_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -183,6 +183,12 @@ fn should_remove_foreign_mods_from_containing_mods() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use config;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc_(\n         output_style: config::OutputStyle,\n         source: ~str"}, {"sha": "967dcd8f49f8e0678b14166a2ec3d78920f1bb98", "filename": "src/librustdoc/pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -10,6 +10,7 @@\n \n use astsrv;\n use doc;\n+use extract;\n \n use core::vec;\n "}, {"sha": "4227ce230963b33c70b4b4a3c0369b740a1dee3d", "filename": "src/librustdoc/path_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpath_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fpath_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpath_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -13,6 +13,7 @@\n use astsrv;\n use doc::ItemUtils;\n use doc;\n+use extract;\n use fold::Fold;\n use fold;\n "}, {"sha": "da3c6bd7f2b5593d6f0e5dfe22906745ae8df175", "filename": "src/librustdoc/prune_hidden_pass.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fprune_hidden_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fprune_hidden_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fprune_hidden_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -71,6 +71,11 @@ fn should_prune_hidden_items() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "5017f889d5a6d0a99809a21cfb38b2f79104a7c7", "filename": "src/librustdoc/prune_private_pass.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fprune_private_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fprune_private_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fprune_private_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -18,6 +18,7 @@ use fold::Fold;\n use fold;\n \n use core::util;\n+use core::vec;\n use syntax::ast;\n \n export mk_pass;\n@@ -75,6 +76,10 @@ fn should_prune_items_without_pub_modifier() {\n \n #[cfg(test)]\n mod test {\n+    use astsrv;\n+    use doc;\n+    use extract;\n+\n     pub fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "c5933ba3dfc1cb9104fdd493df3d48535238b4b2", "filename": "src/librustdoc/sectionalize_pass.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fsectionalize_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fsectionalize_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fsectionalize_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -11,12 +11,15 @@\n //! Breaks rustdocs into sections according to their headers\n \n use astsrv;\n+use attr_pass;\n use doc::ItemUtils;\n use doc;\n+use extract;\n use fold::Fold;\n use fold;\n \n use core::str;\n+use core::vec;\n use std::par;\n \n pub fn mk_pass() -> Pass {"}, {"sha": "fcf878dbf8d81f386dcf1eb7f75f44fd36143cd0", "filename": "src/librustdoc/sort_pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fsort_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Fsort_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fsort_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -13,6 +13,7 @@\n use astsrv;\n use doc::ItemUtils;\n use doc;\n+use extract;\n use fold::Fold;\n use fold;\n use util::NominalOp;"}, {"sha": "ae205883902ad5f262d79335d856a121fd0b7074", "filename": "src/librustdoc/text_pass.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftext_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftext_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftext_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -289,6 +289,16 @@ fn should_execute_on_impl_method_section_bodies() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use attr_pass;\n+    use desc_to_brief_pass;\n+    use doc;\n+    use extract;\n+    use sectionalize_pass;\n+\n+    use core::str;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "d03d31c754c1b513b62147e66626179119e6841c", "filename": "src/librustdoc/trim_pass.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftrim_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftrim_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftrim_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -36,6 +36,12 @@ fn should_trim_text() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astrsrv;\n+    use attr_pass;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}, {"sha": "92f2e0a5e8b0dd7516714537cd1def880d86c382", "filename": "src/librustdoc/tystr_pass.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4/src%2Flibrustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftystr_pass.rs?ref=47cd1e4fc8e8f3cdab7d8b5864a8f2733c016cd4", "patch": "@@ -407,6 +407,11 @@ fn should_not_serialize_struct_attrs() {\n #[cfg(test)]\n mod test {\n     #[legacy_exports];\n+\n+    use astsrv;\n+    use doc;\n+    use extract;\n+\n     fn mk_doc(source: ~str) -> doc::Doc {\n         do astsrv::from_str(source) |srv| {\n             let doc = extract::from_srv(srv, ~\"\");"}]}