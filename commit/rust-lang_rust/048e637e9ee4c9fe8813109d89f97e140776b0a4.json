{"sha": "048e637e9ee4c9fe8813109d89f97e140776b0a4", "node_id": "C_kwDOAAsO6NoAKDA0OGU2MzdlOWVlNGM5ZmU4ODEzMTA5ZDg5Zjk3ZTE0MDc3NmIwYTQ", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-10-08T13:52:59Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-10-08T15:48:02Z"}, "message": "handle late-bound vars from inner binders correctly and add test", "tree": {"sha": "c997227d97e9b3be55e9df642158145653d205b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c997227d97e9b3be55e9df642158145653d205b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/048e637e9ee4c9fe8813109d89f97e140776b0a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/048e637e9ee4c9fe8813109d89f97e140776b0a4", "html_url": "https://github.com/rust-lang/rust/commit/048e637e9ee4c9fe8813109d89f97e140776b0a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/048e637e9ee4c9fe8813109d89f97e140776b0a4/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e83dcf4ecd678bac474d6aaca1cf0294bcbcd1b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e83dcf4ecd678bac474d6aaca1cf0294bcbcd1b3", "html_url": "https://github.com/rust-lang/rust/commit/e83dcf4ecd678bac474d6aaca1cf0294bcbcd1b3"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "659bd884556a35b727bfe9ea1ff24ca3b4aba5a5", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/048e637e9ee4c9fe8813109d89f97e140776b0a4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048e637e9ee4c9fe8813109d89f97e140776b0a4/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=048e637e9ee4c9fe8813109d89f97e140776b0a4", "patch": "@@ -2093,7 +2093,7 @@ impl<'a, 'tcx> ty::TypeFolder<'tcx> for RegionFolder<'a, 'tcx> {\n     fn fold_region(&mut self, r: ty::Region<'tcx>) -> ty::Region<'tcx> {\n         let name = &mut self.name;\n         let region = match *r {\n-            ty::ReLateBound(db, br) => {\n+            ty::ReLateBound(db, br) if db >= self.current_index => {\n                 *self.region_map.entry(br).or_insert_with(|| name(Some(db), self.current_index, br))\n             }\n             ty::RePlaceholder(ty::PlaceholderRegion { name: kind, .. }) => {"}, {"sha": "f97f349fd824359bae7db0d561a396e82035718c", "filename": "src/test/ui/lifetimes/nested-binder-print.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/048e637e9ee4c9fe8813109d89f97e140776b0a4/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.rs", "raw_url": "https://github.com/rust-lang/rust/raw/048e637e9ee4c9fe8813109d89f97e140776b0a4/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.rs?ref=048e637e9ee4c9fe8813109d89f97e140776b0a4", "patch": "@@ -0,0 +1,10 @@\n+struct TwoLt<'a, 'b>(&'a (), &'b ());\n+type Foo<'a> = fn(TwoLt<'_, 'a>);\n+\n+fn foo() {\n+    let y: for<'a> fn(Foo<'a>);\n+    let x: u32 = y;\n+    //~^ ERROR mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "32dd896932d2e0646f325d8184133b42744fb4fe", "filename": "src/test/ui/lifetimes/nested-binder-print.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/048e637e9ee4c9fe8813109d89f97e140776b0a4/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/048e637e9ee4c9fe8813109d89f97e140776b0a4/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fnested-binder-print.stderr?ref=048e637e9ee4c9fe8813109d89f97e140776b0a4", "patch": "@@ -0,0 +1,14 @@\n+error[E0308]: mismatched types\n+  --> $DIR/nested-binder-print.rs:6:18\n+   |\n+LL |     let x: u32 = y;\n+   |            ---   ^ expected `u32`, found fn pointer\n+   |            |\n+   |            expected due to this\n+   |\n+   = note:    expected type `u32`\n+           found fn pointer `for<'a> fn(for<'b> fn(TwoLt<'b, 'a>))`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}