{"sha": "f6401bad24d2fb1e1f959595c2f57cb4964e7082", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDAxYmFkMjRkMmZiMWUxZjk1OTU5NWMyZjU3Y2I0OTY0ZTcwODI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-08T22:26:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-15T19:19:14Z"}, "message": "core: Use a global lock instead of runtime lock for os::getenv, etc. #4726", "tree": {"sha": "b8f1043af856875b64df032de0d82f39ba025c74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8f1043af856875b64df032de0d82f39ba025c74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6401bad24d2fb1e1f959595c2f57cb4964e7082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6401bad24d2fb1e1f959595c2f57cb4964e7082", "html_url": "https://github.com/rust-lang/rust/commit/f6401bad24d2fb1e1f959595c2f57cb4964e7082", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6401bad24d2fb1e1f959595c2f57cb4964e7082/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ad366519137122871b04b407370dab4a97c645", "url": "https://api.github.com/repos/rust-lang/rust/commits/36ad366519137122871b04b407370dab4a97c645", "html_url": "https://github.com/rust-lang/rust/commit/36ad366519137122871b04b407370dab4a97c645"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "a198b495127e7f6b8256543999a3e57fcad8691f", "filename": "src/libcore/os.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=f6401bad24d2fb1e1f959595c2f57cb4964e7082", "patch": "@@ -147,23 +147,25 @@ pub mod win32 {\n \n /*\n Accessing environment variables is not generally threadsafe.\n-This uses a per-runtime lock to serialize access.\n-FIXME #4726: It would probably be appropriate to make this a real global\n+Serialize access through a global lock.\n */\n fn with_env_lock<T>(f: &fn() -> T) -> T {\n-    use unstable::global::global_data_clone_create;\n-    use unstable::sync::{Exclusive, exclusive};\n-\n-    struct SharedValue(());\n-    type ValueMutex = Exclusive<SharedValue>;\n-    fn key(_: ValueMutex) { }\n+    use unstable::finally::Finally;\n \n     unsafe {\n-        let lock: ValueMutex = global_data_clone_create(key, || {\n-            ~exclusive(SharedValue(()))\n-        });\n+        return do (|| {\n+            rust_take_env_lock();\n+            f()\n+        }).finally {\n+            rust_drop_env_lock();\n+        };\n+    }\n \n-        lock.with_imm(|_| f() )\n+    extern {\n+        #[fast_ffi]\n+        fn rust_take_env_lock();\n+        #[fast_ffi]\n+        fn rust_drop_env_lock();\n     }\n }\n "}, {"sha": "218ab86721eefd7b7e97fa6d9f95a80a1fa8686c", "filename": "src/libuv", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuv?ref=f6401bad24d2fb1e1f959595c2f57cb4964e7082", "patch": "@@ -1 +1 @@\n-Subproject commit 97ac7c087a0caf6b0f611b80e14f7fe3cb18bb27\n+Subproject commit 218ab86721eefd7b7e97fa6d9f95a80a1fa8686c"}, {"sha": "ed38be3550f74f1ab6ce1d2a0654e2e316e39200", "filename": "src/rt/rust_env.cpp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Frt%2Frust_env.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Frt%2Frust_env.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_env.cpp?ref=f6401bad24d2fb1e1f959595c2f57cb4964e7082", "patch": "@@ -13,6 +13,7 @@\n // that might come from the environment is loaded here, once, during\n // init.\n \n+#include \"sync/lock_and_signal.h\"\n #include \"rust_env.h\"\n \n // The environment variables that the runtime knows about\n@@ -26,6 +27,18 @@\n #define RUST_DEBUG_MEM \"RUST_DEBUG_MEM\"\n #define RUST_DEBUG_BORROW \"RUST_DEBUG_BORROW\"\n \n+static lock_and_signal env_lock;\n+\n+extern \"C\" CDECL void\n+rust_take_env_lock() {\n+    env_lock.lock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_drop_env_lock() {\n+    env_lock.unlock();\n+}\n+\n #if defined(__WIN32__)\n static int\n get_num_cpus() {\n@@ -119,6 +132,8 @@ copyenv(const char* name) {\n \n rust_env*\n load_env(int argc, char **argv) {\n+    scoped_lock with(env_lock);\n+\n     rust_env *env = (rust_env*)malloc(sizeof(rust_env));\n \n     env->num_sched_threads = (size_t)get_num_threads();\n@@ -141,3 +156,4 @@ free_env(rust_env *env) {\n     free(env->rust_seed);\n     free(env);\n }\n+"}, {"sha": "958b31eb3429b1ae60a1616a9585628cba8612de", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/f6401bad24d2fb1e1f959595c2f57cb4964e7082/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=f6401bad24d2fb1e1f959595c2f57cb4964e7082", "patch": "@@ -235,4 +235,7 @@ rust_begin_unwind\n rust_take_task_borrow_list\n rust_set_task_borrow_list\n rust_valgrind_stack_register\n-rust_valgrind_stack_deregister\n\\ No newline at end of file\n+rust_valgrind_stack_deregister\n+rust_take_env_lock\n+rust_drop_env_lock\n+"}]}