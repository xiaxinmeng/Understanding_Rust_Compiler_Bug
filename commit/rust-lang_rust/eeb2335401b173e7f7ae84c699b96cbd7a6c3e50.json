{"sha": "eeb2335401b173e7f7ae84c699b96cbd7a6c3e50", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYjIzMzU0MDFiMTczZTdmN2FlODRjNjk5Yjk2Y2JkN2E2YzNlNTA=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-07-26T11:01:12Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-07-29T08:03:54Z"}, "message": "moving remaining variants to UnsupportedInfo", "tree": {"sha": "d9be98221450d2cb17a6754bc1107425dd73457d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9be98221450d2cb17a6754bc1107425dd73457d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50", "html_url": "https://github.com/rust-lang/rust/commit/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc48f3e824333f1dc8166f9760795a8b67c84714", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc48f3e824333f1dc8166f9760795a8b67c84714", "html_url": "https://github.com/rust-lang/rust/commit/fc48f3e824333f1dc8166f9760795a8b67c84714"}], "stats": {"total": 47, "additions": 22, "deletions": 25}, "files": [{"sha": "d0f3df800e4d0ee841f500029df6ccb8a6aca121", "filename": "src/librustc/mir/interpret/error.rs", "status": "modified", "additions": 22, "deletions": 25, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb2335401b173e7f7ae84c699b96cbd7a6c3e50/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Ferror.rs?ref=eeb2335401b173e7f7ae84c699b96cbd7a6c3e50", "patch": "@@ -359,31 +359,6 @@ pub enum UnsupportedInfo<'tcx> {\n     UnimplementedTraitSelection,\n     CalledClosureAsFunction,\n     NoMirFor(String),\n-}\n-\n-#[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n-pub enum ResourceExhaustionInfo {\n-    StackFrameLimitReached,\n-    InfiniteLoop,\n-}\n-\n-#[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n-pub enum InterpError<'tcx> {\n-    /// The program panicked.\n-    Panic(PanicMessage<u64>),\n-    /// The program caused undefined behavior.\n-    UndefinedBehaviour(UndefinedBehaviourInfo),\n-    /// The program did something the interpreter does not support (some of these *might* be UB\n-    /// but the interpreter is not sure).\n-    Unsupported(UnsupportedInfo<'tcx>),\n-    /// The program was invalid (ill-typed, not sufficiently monomorphized, ...).\n-    InvalidProgram(InvalidProgramInfo<'tcx>),\n-    /// The program exhausted the interpreter's resources (stack/heap too big,\n-    /// execution takes too long, ..).\n-    ResourceExhaustion(ResourceExhaustionInfo),\n-\n-    /// THe above 5 variants are what we want to group all the remaining InterpError variants into\n-\n     /// This variant is used by machines to signal their own errors that do not\n     /// match an existing variant.\n     MachineError(String),\n@@ -421,6 +396,28 @@ pub enum InterpError<'tcx> {\n     PathNotFound(Vec<String>),\n }\n \n+#[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n+pub enum ResourceExhaustionInfo {\n+    StackFrameLimitReached,\n+    InfiniteLoop,\n+}\n+\n+#[derive(Clone, RustcEncodable, RustcDecodable, HashStable)]\n+pub enum InterpError<'tcx> {\n+    /// The program panicked.\n+    Panic(PanicMessage<u64>),\n+    /// The program caused undefined behavior.\n+    UndefinedBehaviour(UndefinedBehaviourInfo),\n+    /// The program did something the interpreter does not support (some of these *might* be UB\n+    /// but the interpreter is not sure).\n+    Unsupported(UnsupportedInfo<'tcx>),\n+    /// The program was invalid (ill-typed, not sufficiently monomorphized, ...).\n+    InvalidProgram(InvalidProgramInfo<'tcx>),\n+    /// The program exhausted the interpreter's resources (stack/heap too big,\n+    /// execution takes too long, ..).\n+    ResourceExhaustion(ResourceExhaustionInfo),\n+}\n+\n pub type InterpResult<'tcx, T = ()> = Result<T, InterpErrorInfo<'tcx>>;\n \n impl fmt::Display for InterpError<'_> {"}]}