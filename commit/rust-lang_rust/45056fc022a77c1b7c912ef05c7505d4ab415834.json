{"sha": "45056fc022a77c1b7c912ef05c7505d4ab415834", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDU2ZmMwMjJhNzdjMWI3YzkxMmVmMDVjNzUwNWQ0YWI0MTU4MzQ=", "commit": {"author": {"name": "Ralph Giles", "email": "giles@thaumas.net", "date": "2010-10-19T19:05:22Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-21T23:06:15Z"}, "message": "Update llvm version detection for the 2.8 release.\n\nThe LLVM project recently released version 2.8, and updated\nthe SVN tree version to 2.9svn, obsoleting the simple check\nfor 'llvm-config --version' returning 2.8svn.\n\nWith this commit we instead check for the substrings 2.8 and 2.9\nin the output of 'llvm-config --version', since we (currently)\nsupport both the svn and released varieties of those versions.\n\nA stable release also complicates our check for the ocaml bindings.\nPreviously we looked in `llvm-config --libdir`/ocaml which is\nappropriate for local compiles, but distribution packagers are\nlikely to put the bindings in the default search path, e.g.\n/usr/lib/ocaml/llvm. We now fall back to trying variations on\nthe standard library path returned by 'ocamlc -config' if we\ndon't find it under 'llvm-config --libdir'.\n\nWith this change, rust builds against LLVM 2.8 as packaged\nin Ubuntu 10.10 as well as LLVM 2.9svn compiled locally.\n(cherry picked from commit b606b65756f087c403180abd5418fe7dce469758)", "tree": {"sha": "5f8b88cdd730ce92f4e34374b44b550a3d1da54c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f8b88cdd730ce92f4e34374b44b550a3d1da54c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45056fc022a77c1b7c912ef05c7505d4ab415834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45056fc022a77c1b7c912ef05c7505d4ab415834", "html_url": "https://github.com/rust-lang/rust/commit/45056fc022a77c1b7c912ef05c7505d4ab415834", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45056fc022a77c1b7c912ef05c7505d4ab415834/comments", "author": {"login": "rillian", "id": 225102, "node_id": "MDQ6VXNlcjIyNTEwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/225102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rillian", "html_url": "https://github.com/rillian", "followers_url": "https://api.github.com/users/rillian/followers", "following_url": "https://api.github.com/users/rillian/following{/other_user}", "gists_url": "https://api.github.com/users/rillian/gists{/gist_id}", "starred_url": "https://api.github.com/users/rillian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rillian/subscriptions", "organizations_url": "https://api.github.com/users/rillian/orgs", "repos_url": "https://api.github.com/users/rillian/repos", "events_url": "https://api.github.com/users/rillian/events{/privacy}", "received_events_url": "https://api.github.com/users/rillian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7599a79681e98be65cd24bbeef771edc0534409", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7599a79681e98be65cd24bbeef771edc0534409", "html_url": "https://github.com/rust-lang/rust/commit/a7599a79681e98be65cd24bbeef771edc0534409"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "9984393ab4437bc2938321d5ea9c4f368cf1559d", "filename": "src/Makefile", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/45056fc022a77c1b7c912ef05c7505d4ab415834/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/45056fc022a77c1b7c912ef05c7505d4ab415834/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=45056fc022a77c1b7c912ef05c7505d4ab415834", "patch": "@@ -167,16 +167,30 @@ ifneq ($(CFG_LLVM_CONFIG),)\n endif\n ifneq ($(CFG_LLVM_CONFIG),)\n   CFG_LLVM_VERSION := $(shell $(CFG_LLVM_CONFIG) --version)\n-  ifeq ($(CFG_LLVM_VERSION),2.8svn)\n-    $(info cfg: using LLVM version 2.8svn)\n-    WHERE := $(shell $(CFG_LLVM_CONFIG) --libdir)/ocaml\n-    ifneq ($(shell test -e $(WHERE)/llvm.cma && echo ok),ok)\n-      CFG_LLVM_CONFIG := $(info cfg: LLVM ocaml bindings not found)\n-    endif\n+  $(info cfg: found llvm-config at $(CFG_LLVM_CONFIG))\n+  ifneq ($(findstring 2.8,$(CFG_LLVM_VERSION)),)\n+    $(info cfg: using LLVM version $(CFG_LLVM_VERSION))\n+  else ifneq ($(findstring 2.9,$(CFG_LLVM_VERSION)),)\n+    $(info cfg: using LLVM version $(CFG_LLVM_VERSION))\n   else\n     CFG_LLVM_CONFIG :=\n     $(info cfg: incompatible LLVM version $(CFG_LLVM_VERSION), \\\n-      expected 2.8svn)\n+      expected 2.8)\n+  endif\n+endif\n+ifneq ($(CFG_LLVM_CONFIG),)\n+  CFG_OCAML_LIBPATH := $(lastword \\\n+    $(shell ocamlc$(OPT) -config | grep standard_library:))\n+  CFG_OCAML_LLVM := $(shell \\\n+      for path in $(shell $(CFG_LLVM_CONFIG) --libdir)/ocaml \\\n+          $(CFG_OCAML_LIBPATH)/llvm \\\n+          $(CFG_OCAML_LIBPATH)/llvm-$(CFG_LLVM_VERSION) ; do \\\n+        if test -e $${path}/llvm.cma; then echo $${path}; break; fi \\\n+      done)\n+  ifneq ($(CFG_OCAML_LLVM),)\n+    $(info cfg: found LLVM ocaml bindings in $(CFG_OCAML_LLVM))\n+  else \n+    CFG_LLVM_CONFIG := $(info cfg: LLVM ocaml bindings not found)\n   endif\n endif\n ifdef CFG_LLVM_CONFIG\n@@ -185,13 +199,12 @@ ifdef CFG_LLVM_CONFIG\n   LLVM_NATIVE_LIBS := llvm.cmxa llvm_bitwriter.cmxa\n   LLVM_CLIBS := $(shell for c in `$(CFG_LLVM_CONFIG) --ldflags --libs` \\\n     -lllvm -lllvm_bitwriter; do echo -cclib && echo $$c; done | xargs echo)\n-  LLVM_INCS := -I boot/llvm -I $(WHERE)\n+  LLVM_INCS := -I boot/llvm -I $(CFG_OCAML_LLVM)\n   LLVM_MLS := $(addprefix boot/llvm/, llabi.ml llasm.ml llfinal.ml \\\n     lltrans.ml llemit.ml)\n   LLC := \"$(shell $(CFG_LLVM_CONFIG) --bindir)/llc\"\n   CFG_LLC_CFLAGS := -march=x86\n   LLVM-DIS := \"$(shell $(CFG_LLVM_CONFIG) --bindir)/llvm-dis\"\n-  $(info cfg: found llvm-config at $(CFG_LLVM_CONFIG))\n else\n   VARIANT=x86\n   LLVM_CLIBS :="}]}