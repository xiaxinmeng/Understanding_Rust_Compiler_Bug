{"sha": "cbb561fdab663993e483479db3be612771746b26", "node_id": "C_kwDOAAsO6NoAKGNiYjU2MWZkYWI2NjM5OTNlNDgzNDc5ZGIzYmU2MTI3NzE3NDZiMjY", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-10-08T03:26:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-08T03:26:10Z"}, "message": "Rollup merge of #88137 - joshtriplett:osx-strip-symbols-no-option, r=michaelwoerister\n\nOn macOS, make strip=\"symbols\" not pass any options to strip\n\nThis makes the output with `strip=\"symbols\"` match the result of just\ncalling `strip` on the output binary, minimizing the size of the binary.", "tree": {"sha": "a38f6330c7b0ec57fa7b55aab039f4991a7b6c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38f6330c7b0ec57fa7b55aab039f4991a7b6c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbb561fdab663993e483479db3be612771746b26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhX7pSCRBK7hj4Ov3rIwAA7OcIAFBwtVPdBf75wDa2sjarUg+W\nxYOxyEg7mAJNowzH6nx1WsWY0vwEhH6Z0Gv0LORJQ+E11pyD9ZRV4fCCVOz/g8tz\n1HAhadftOSrEEnE7YKNwaTUR9qzbB8C90LVuQsUv/pLIwBUTh+kafQe5BCQLYgAX\nNYaM3hjLsYtxlYh8Ay5l/uy/u4slx8Ct4il9bDafShdGSJewQDPp0ZAI13r6T/tC\nU0D4kvsmczYtHGtVtH2agGn2ffvo6wytSILxCVnP1z6HTcbzoSZy6JoTm5XqFZeW\n9QoxHS9lbcUq9yxj6rsKC5ry6v83hlNfIWf9iaYCXBc9Xd/JlaFAnANqr+yCY7E=\n=sSHh\n-----END PGP SIGNATURE-----\n", "payload": "tree a38f6330c7b0ec57fa7b55aab039f4991a7b6c9f\nparent 6c2d4bf3f7df75c60b6d81e9206a58aa30b0f8aa\nparent ff697c613c2fa52819a045fb82b7cb3daa45c1f6\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1633663570 -0700\ncommitter GitHub <noreply@github.com> 1633663570 -0700\n\nRollup merge of #88137 - joshtriplett:osx-strip-symbols-no-option, r=michaelwoerister\n\nOn macOS, make strip=\"symbols\" not pass any options to strip\n\nThis makes the output with `strip=\"symbols\"` match the result of just\ncalling `strip` on the output binary, minimizing the size of the binary.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbb561fdab663993e483479db3be612771746b26", "html_url": "https://github.com/rust-lang/rust/commit/cbb561fdab663993e483479db3be612771746b26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbb561fdab663993e483479db3be612771746b26/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2d4bf3f7df75c60b6d81e9206a58aa30b0f8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2d4bf3f7df75c60b6d81e9206a58aa30b0f8aa", "html_url": "https://github.com/rust-lang/rust/commit/6c2d4bf3f7df75c60b6d81e9206a58aa30b0f8aa"}, {"sha": "ff697c613c2fa52819a045fb82b7cb3daa45c1f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff697c613c2fa52819a045fb82b7cb3daa45c1f6", "html_url": "https://github.com/rust-lang/rust/commit/ff697c613c2fa52819a045fb82b7cb3daa45c1f6"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "3fdfb08f5847b21b62027250ed2bb558345940f1", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/cbb561fdab663993e483479db3be612771746b26/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbb561fdab663993e483479db3be612771746b26/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=cbb561fdab663993e483479db3be612771746b26", "patch": "@@ -1024,14 +1024,20 @@ fn link_natively<'a, B: ArchiveBuilder<'a>>(\n     }\n \n     if sess.target.is_like_osx {\n-        if let Some(option) = osx_strip_opt(sess.opts.debugging_opts.strip) {\n-            strip_symbols_in_osx(sess, &out_filename, option);\n+        match sess.opts.debugging_opts.strip {\n+            Strip::Debuginfo => strip_symbols_in_osx(sess, &out_filename, Some(\"-S\")),\n+            Strip::Symbols => strip_symbols_in_osx(sess, &out_filename, None),\n+            Strip::None => {}\n         }\n     }\n }\n \n-fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: &str) {\n-    let prog = Command::new(\"strip\").arg(option).arg(out_filename).output();\n+fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: Option<&str>) {\n+    let mut cmd = Command::new(\"strip\");\n+    if let Some(option) = option {\n+        cmd.arg(option);\n+    }\n+    let prog = cmd.arg(out_filename).output();\n     match prog {\n         Ok(prog) => {\n             if !prog.status.success() {\n@@ -1049,14 +1055,6 @@ fn strip_symbols_in_osx<'a>(sess: &'a Session, out_filename: &Path, option: &str\n     }\n }\n \n-fn osx_strip_opt<'a>(strip: Strip) -> Option<&'a str> {\n-    match strip {\n-        Strip::Debuginfo => Some(\"-S\"),\n-        Strip::Symbols => Some(\"-x\"),\n-        Strip::None => None,\n-    }\n-}\n-\n fn escape_string(s: &[u8]) -> String {\n     str::from_utf8(s).map(|s| s.to_owned()).unwrap_or_else(|_| {\n         let mut x = \"Non-UTF-8 output: \".to_string();"}]}