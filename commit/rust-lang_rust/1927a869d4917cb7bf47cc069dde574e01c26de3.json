{"sha": "1927a869d4917cb7bf47cc069dde574e01c26de3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MjdhODY5ZDQ5MTdjYjdiZjQ3Y2MwNjlkZGU1NzRlMDFjMjZkZTM=", "commit": {"author": {"name": "Peter Reid", "email": "peter.d.reid@gmail.com", "date": "2015-09-05T02:10:39Z"}, "committer": {"name": "Peter Reid", "email": "peter.d.reid@gmail.com", "date": "2015-09-05T02:15:57Z"}, "message": "Fix for issue #28012: pow overflow inconsistency\n\nOverflows in integer pow() computations would be missed if they\npreceded a 0 bit of the exponent being processed. This made\ncalls such as 2i32.pow(1024) not trigger an overflow.", "tree": {"sha": "c81a8229f8f57e052f343b0d05c9b7a6e8ae0f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c81a8229f8f57e052f343b0d05c9b7a6e8ae0f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1927a869d4917cb7bf47cc069dde574e01c26de3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1927a869d4917cb7bf47cc069dde574e01c26de3", "html_url": "https://github.com/rust-lang/rust/commit/1927a869d4917cb7bf47cc069dde574e01c26de3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1927a869d4917cb7bf47cc069dde574e01c26de3/comments", "author": {"login": "PeterReid", "id": 890971, "node_id": "MDQ6VXNlcjg5MDk3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/890971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterReid", "html_url": "https://github.com/PeterReid", "followers_url": "https://api.github.com/users/PeterReid/followers", "following_url": "https://api.github.com/users/PeterReid/following{/other_user}", "gists_url": "https://api.github.com/users/PeterReid/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterReid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterReid/subscriptions", "organizations_url": "https://api.github.com/users/PeterReid/orgs", "repos_url": "https://api.github.com/users/PeterReid/repos", "events_url": "https://api.github.com/users/PeterReid/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterReid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "PeterReid", "id": 890971, "node_id": "MDQ6VXNlcjg5MDk3MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/890971?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PeterReid", "html_url": "https://github.com/PeterReid", "followers_url": "https://api.github.com/users/PeterReid/followers", "following_url": "https://api.github.com/users/PeterReid/following{/other_user}", "gists_url": "https://api.github.com/users/PeterReid/gists{/gist_id}", "starred_url": "https://api.github.com/users/PeterReid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PeterReid/subscriptions", "organizations_url": "https://api.github.com/users/PeterReid/orgs", "repos_url": "https://api.github.com/users/PeterReid/repos", "events_url": "https://api.github.com/users/PeterReid/events{/privacy}", "received_events_url": "https://api.github.com/users/PeterReid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1110f1e873e9c082333b8239422e482b66d6645f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1110f1e873e9c082333b8239422e482b66d6645f", "html_url": "https://github.com/rust-lang/rust/commit/1110f1e873e9c082333b8239422e482b66d6645f"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "127f8d3b5a2d89ac832bc8bd293181fa43bd5318", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/1927a869d4917cb7bf47cc069dde574e01c26de3/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1927a869d4917cb7bf47cc069dde574e01c26de3/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=1927a869d4917cb7bf47cc069dde574e01c26de3", "patch": "@@ -537,25 +537,21 @@ macro_rules! int_impl {\n             let mut base = self;\n             let mut acc = Self::one();\n \n-            let mut prev_base = self;\n-            let mut base_oflo = false;\n-            while exp > 0 {\n+            while exp > 1 {\n                 if (exp & 1) == 1 {\n-                    if base_oflo {\n-                        // ensure overflow occurs in the same manner it\n-                        // would have otherwise (i.e. signal any exception\n-                        // it would have otherwise).\n-                        acc = acc * (prev_base * prev_base);\n-                    } else {\n-                        acc = acc * base;\n-                    }\n+                    acc = acc * base;\n                 }\n-                prev_base = base;\n-                let (new_base, new_base_oflo) = base.overflowing_mul(base);\n-                base = new_base;\n-                base_oflo = new_base_oflo;\n                 exp /= 2;\n+                base = base * base;\n+            }\n+\n+            // Deal with the final bit of the exponent separately, since\n+            // squaring the base afterwards is not necessary and may cause a\n+            // needless overflow.\n+            if exp == 1 {\n+                acc = acc * base;\n             }\n+\n             acc\n         }\n "}]}