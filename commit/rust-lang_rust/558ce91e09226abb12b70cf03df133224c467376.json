{"sha": "558ce91e09226abb12b70cf03df133224c467376", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OGNlOTFlMDkyMjZhYmIxMmI3MGNmMDNkZjEzMzIyNGM0NjczNzY=", "commit": {"author": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-07-04T13:14:08Z"}, "committer": {"name": "Stjepan Glavina", "email": "stjepang@gmail.com", "date": "2017-07-04T13:14:08Z"}, "message": "Minor fix in docs for Vec", "tree": {"sha": "3260913b3e8a9a11a8a15b083246103391adfbf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3260913b3e8a9a11a8a15b083246103391adfbf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/558ce91e09226abb12b70cf03df133224c467376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/558ce91e09226abb12b70cf03df133224c467376", "html_url": "https://github.com/rust-lang/rust/commit/558ce91e09226abb12b70cf03df133224c467376", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/558ce91e09226abb12b70cf03df133224c467376/comments", "author": null, "committer": null, "parents": [{"sha": "d41b791c1af56b1f538cc6f77e597b7ad5b4d223", "url": "https://api.github.com/repos/rust-lang/rust/commits/d41b791c1af56b1f538cc6f77e597b7ad5b4d223", "html_url": "https://github.com/rust-lang/rust/commit/d41b791c1af56b1f538cc6f77e597b7ad5b4d223"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6918e057ab10452b78a78b44cff879eb85b4871b", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/558ce91e09226abb12b70cf03df133224c467376/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558ce91e09226abb12b70cf03df133224c467376/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=558ce91e09226abb12b70cf03df133224c467376", "patch": "@@ -221,7 +221,7 @@ use raw_vec::RawVec;\n /// on an empty Vec, it will not allocate memory. Similarly, if you store zero-sized\n /// types inside a `Vec`, it will not allocate space for them. *Note that in this case\n /// the `Vec` may not report a [`capacity`] of 0*. `Vec` will allocate if and only\n-/// if [`mem::size_of::<T>`]` * capacity() > 0`. In general, `Vec`'s allocation\n+/// if [`mem::size_of::<T>`]`() * capacity() > 0`. In general, `Vec`'s allocation\n /// details are subtle enough that it is strongly recommended that you only\n /// free memory allocated by a `Vec` by creating a new `Vec` and dropping it.\n ///"}]}