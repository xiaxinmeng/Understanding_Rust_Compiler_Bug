{"sha": "f2a8a712669911eb36166c35199fe18ce19ed7e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYThhNzEyNjY5OTExZWIzNjE2NmMzNTE5OWZlMThjZTE5ZWQ3ZTk=", "commit": {"author": {"name": "Mikko Perttunen", "email": "cyndis@kapsi.fi", "date": "2013-02-11T16:13:18Z"}, "committer": {"name": "Mikko Perttunen", "email": "cyndis@kapsi.fi", "date": "2013-02-11T18:23:40Z"}, "message": "Use topmost span for macro expansion location. Fixes behaviour of file!, line! and col!", "tree": {"sha": "3a2047b29bec2a56af3da12fc8f03ea60357bdaf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a2047b29bec2a56af3da12fc8f03ea60357bdaf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2a8a712669911eb36166c35199fe18ce19ed7e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a8a712669911eb36166c35199fe18ce19ed7e9", "html_url": "https://github.com/rust-lang/rust/commit/f2a8a712669911eb36166c35199fe18ce19ed7e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2a8a712669911eb36166c35199fe18ce19ed7e9/comments", "author": {"login": "cyndis", "id": 154330, "node_id": "MDQ6VXNlcjE1NDMzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/154330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyndis", "html_url": "https://github.com/cyndis", "followers_url": "https://api.github.com/users/cyndis/followers", "following_url": "https://api.github.com/users/cyndis/following{/other_user}", "gists_url": "https://api.github.com/users/cyndis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyndis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyndis/subscriptions", "organizations_url": "https://api.github.com/users/cyndis/orgs", "repos_url": "https://api.github.com/users/cyndis/repos", "events_url": "https://api.github.com/users/cyndis/events{/privacy}", "received_events_url": "https://api.github.com/users/cyndis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cyndis", "id": 154330, "node_id": "MDQ6VXNlcjE1NDMzMA==", "avatar_url": "https://avatars.githubusercontent.com/u/154330?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyndis", "html_url": "https://github.com/cyndis", "followers_url": "https://api.github.com/users/cyndis/followers", "following_url": "https://api.github.com/users/cyndis/following{/other_user}", "gists_url": "https://api.github.com/users/cyndis/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyndis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyndis/subscriptions", "organizations_url": "https://api.github.com/users/cyndis/orgs", "repos_url": "https://api.github.com/users/cyndis/repos", "events_url": "https://api.github.com/users/cyndis/events{/privacy}", "received_events_url": "https://api.github.com/users/cyndis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f04df8522cc93dfcdc0eb49f8403d305a508e58", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f04df8522cc93dfcdc0eb49f8403d305a508e58", "html_url": "https://github.com/rust-lang/rust/commit/0f04df8522cc93dfcdc0eb49f8403d305a508e58"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "aa05e9a51198b791d8f84e6503016c8845f01b02", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 28, "deletions": 7, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f2a8a712669911eb36166c35199fe18ce19ed7e9/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2a8a712669911eb36166c35199fe18ce19ed7e9/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=f2a8a712669911eb36166c35199fe18ce19ed7e9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use codemap;\n-use codemap::{FileMap, Loc, Pos, span};\n+use codemap::{FileMap, Loc, Pos, ExpandedFrom, span};\n use ext::base::*;\n use ext::base;\n use ext::build::{mk_base_vec_e, mk_uint, mk_u8, mk_base_str};\n@@ -21,20 +21,39 @@ use core::result;\n use core::str;\n use core::vec;\n \n+fn topmost_expn_info(expn_info: @codemap::ExpnInfo) -> @codemap::ExpnInfo {\n+    let ExpandedFrom({call_site, _}) = *expn_info;\n+    match call_site.expn_info {\n+        Some(next_expn_info) => {\n+            let ExpandedFrom({callie: {name, _}, _}) = *next_expn_info;\n+            // Don't recurse into file using \"include!\"\n+            if name == ~\"include\" { return expn_info; }\n+\n+            topmost_expn_info(next_expn_info)\n+        },\n+        None => expn_info\n+    }\n+}\n+\n /* line!(): expands to the current line number */\n pub fn expand_line(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"line!\");\n-    let loc = cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_uint(cx, sp, loc.line))\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n+    let loc = cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+\n+    base::MRExpr(mk_uint(cx, topmost.call_site, loc.line))\n }\n \n /* col!(): expands to the current column number */\n pub fn expand_col(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"col!\");\n-    let loc = cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_uint(cx, sp, loc.col.to_uint()))\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n+    let loc = cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+    base::MRExpr(mk_uint(cx, topmost.call_site, loc.col.to_uint()))\n }\n \n /* file!(): expands to the current filename */\n@@ -43,9 +62,11 @@ pub fn expand_col(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n pub fn expand_file(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])\n     -> base::MacResult {\n     base::check_zero_tts(cx, sp, tts, \"file!\");\n+\n+    let topmost = topmost_expn_info(cx.backtrace().get());\n     let Loc { file: @FileMap { name: filename, _ }, _ } =\n-        cx.codemap().lookup_char_pos(sp.lo);\n-    base::MRExpr(mk_base_str(cx, sp, filename))\n+        cx.codemap().lookup_char_pos(topmost.call_site.lo);\n+    base::MRExpr(mk_base_str(cx, topmost.call_site, filename))\n }\n \n pub fn expand_stringify(cx: ext_ctxt, sp: span, tts: ~[ast::token_tree])"}]}