{"sha": "e1607c87f0bb96c1c59d84a2789b7f7d2b69e182", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNjA3Yzg3ZjBiYjk2YzFjNTlkODRhMjc4OWI3ZjdkMmI2OWUxODI=", "commit": {"author": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-09-14T20:13:02Z"}, "committer": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-09-14T20:13:02Z"}, "message": "clean up comment text a bit\n\nCo-authored-by: Esteban K\u00fcber <esteban@kuber.com.ar>", "tree": {"sha": "8d245ccdf65d21566fb259302c8192008fd5ac7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d245ccdf65d21566fb259302c8192008fd5ac7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182", "html_url": "https://github.com/rust-lang/rust/commit/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182/comments", "author": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0eac38b7a65c29734f4b2d34f35ee0aa9cb00a74", "url": "https://api.github.com/repos/rust-lang/rust/commits/0eac38b7a65c29734f4b2d34f35ee0aa9cb00a74", "html_url": "https://github.com/rust-lang/rust/commit/0eac38b7a65c29734f4b2d34f35ee0aa9cb00a74"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "715319747e3900adf34732b690bc1e93a05ee94c", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1607c87f0bb96c1c59d84a2789b7f7d2b69e182/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=e1607c87f0bb96c1c59d84a2789b7f7d2b69e182", "patch": "@@ -204,7 +204,7 @@ pub fn suggest_constraining_type_param(\n         //                                          - insert: `, T: Zar`\n         //\n         // Additionally, there may be no `where` clause whatsoever in the case that this was\n-        // reached becauase the generic parameter has a default:\n+        // reached because the generic parameter has a default:\n         //\n         //    Message:\n         //      trait Foo<T=()> {... }\n@@ -217,8 +217,8 @@ pub fn suggest_constraining_type_param(\n         if matches!(param.kind, hir::GenericParamKind::Type { default: Some(_), .. })\n             && generics.where_clause.predicates.len() == 0\n         {\n-            // Suggest a bound, but there are no existing where clauses for this `<T=Foo>`, so\n-            // suggest adding one.\n+            // Suggest a bound, but there is no existing `where` clause *and* the type param has a\n+            // default (`<T=Foo>`), so we suggest adding `where T: Bar`.\n             err.span_suggestion_verbose(\n                 generics.where_clause.tail_span_for_suggestion(),\n                 &msg_restrict_type_further,"}]}