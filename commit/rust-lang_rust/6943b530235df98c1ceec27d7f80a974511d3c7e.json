{"sha": "6943b530235df98c1ceec27d7f80a974511d3c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NDNiNTMwMjM1ZGY5OGMxY2VlYzI3ZDdmODBhOTc0NTExZDNjN2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-04T17:09:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-04T17:09:12Z"}, "message": "Merge #6722\n\n6722: Minor proc macro cleanups r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "cea2580dd236403e6dbf3f6d9a9a69322f06275c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cea2580dd236403e6dbf3f6d9a9a69322f06275c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6943b530235df98c1ceec27d7f80a974511d3c7e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfym04CRBK7hj4Ov3rIwAAdHIIADYAFlp/SRK/0fCw8bz7y73U\nLytd7xXmw1AuaukAjb/d3bQ0m5edWZ43hys8QLdW1xke+1qjkhSETqjpIIdPFIlg\n22PxPsNOLK8VnNLjKeElyQ0Knlqq5nfcU4ZptE66boRnha821OV+6ADFA42/VBgR\nmvITrQN0bXxboLPx+DiZ89xJywKAyI/v8K+FekmvL4uPqmlrCBypbSqx0y0rQEn2\nV+gFxmaD6tk41z18AWSEoqWnUBF1xwEfjHjoRVjur4GDiGHBTFhNd6QXOSq/pdQo\nrcSMDQAYrbm3Fnllx6s4hutCTU1+fQ8voGRaC0MdBFiTtfYfy+xGAdT0R+TVQxQ=\n=VwJv\n-----END PGP SIGNATURE-----\n", "payload": "tree cea2580dd236403e6dbf3f6d9a9a69322f06275c\nparent b988c6f84e06bdc5562c70f28586b9eeaae3a39c\nparent b85714972081ac7d19d98008b7466d37f6d38432\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607101752 +0000\ncommitter GitHub <noreply@github.com> 1607101752 +0000\n\nMerge #6722\n\n6722: Minor proc macro cleanups r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6943b530235df98c1ceec27d7f80a974511d3c7e", "html_url": "https://github.com/rust-lang/rust/commit/6943b530235df98c1ceec27d7f80a974511d3c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6943b530235df98c1ceec27d7f80a974511d3c7e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b988c6f84e06bdc5562c70f28586b9eeaae3a39c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b988c6f84e06bdc5562c70f28586b9eeaae3a39c", "html_url": "https://github.com/rust-lang/rust/commit/b988c6f84e06bdc5562c70f28586b9eeaae3a39c"}, {"sha": "b85714972081ac7d19d98008b7466d37f6d38432", "url": "https://api.github.com/repos/rust-lang/rust/commits/b85714972081ac7d19d98008b7466d37f6d38432", "html_url": "https://github.com/rust-lang/rust/commit/b85714972081ac7d19d98008b7466d37f6d38432"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "b66613c38dc38d7ed52dca593d3f813b2fc51674", "filename": "crates/proc_macro_api/src/process.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6943b530235df98c1ceec27d7f80a974511d3c7e/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6943b530235df98c1ceec27d7f80a974511d3c7e/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Fprocess.rs?ref=6943b530235df98c1ceec27d7f80a974511d3c7e", "patch": "@@ -19,7 +19,7 @@ use crate::{\n \n #[derive(Debug, Default)]\n pub(crate) struct ProcMacroProcessSrv {\n-    inner: Option<Weak<Sender<Task>>>,\n+    inner: Weak<Sender<Task>>,\n }\n \n #[derive(Debug)]\n@@ -42,7 +42,7 @@ impl ProcMacroProcessSrv {\n         });\n \n         let task_tx = Arc::new(task_tx);\n-        let srv = ProcMacroProcessSrv { inner: Some(Arc::downgrade(&task_tx)) };\n+        let srv = ProcMacroProcessSrv { inner: Arc::downgrade(&task_tx) };\n         let thread = ProcMacroProcessThread { handle, sender: task_tx };\n \n         Ok((thread, srv))\n@@ -79,13 +79,8 @@ impl ProcMacroProcessSrv {\n     where\n         R: TryFrom<Response, Error = &'static str>,\n     {\n-        let sender = match &self.inner {\n-            None => return Err(tt::ExpansionError::Unknown(\"No sender is found.\".to_string())),\n-            Some(it) => it,\n-        };\n-\n         let (result_tx, result_rx) = bounded(0);\n-        let sender = match sender.upgrade() {\n+        let sender = match self.inner.upgrade() {\n             None => {\n                 return Err(tt::ExpansionError::Unknown(\"Proc macro process is closed.\".into()))\n             }\n@@ -109,14 +104,9 @@ impl ProcMacroProcessSrv {\n }\n \n fn client_loop(task_rx: Receiver<Task>, mut process: Process) {\n-    let (mut stdin, mut stdout) = match process.stdio() {\n-        None => return,\n-        Some(it) => it,\n-    };\n-\n-    for task in task_rx {\n-        let Task { req, result_tx } = task;\n+    let (mut stdin, mut stdout) = process.stdio().expect(\"couldn't access child stdio\");\n \n+    for Task { req, result_tx } in task_rx {\n         match send_request(&mut stdin, &mut stdout, req) {\n             Ok(res) => result_tx.send(res).unwrap(),\n             Err(_err) => {"}]}