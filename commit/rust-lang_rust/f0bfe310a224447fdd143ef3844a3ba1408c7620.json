{"sha": "f0bfe310a224447fdd143ef3844a3ba1408c7620", "node_id": "C_kwDOAAsO6NoAKGYwYmZlMzEwYTIyNDQ0N2ZkZDE0M2VmMzg0NGEzYmExNDA4Yzc2MjA", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-29T10:36:22Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2021-11-29T10:36:22Z"}, "message": "add a test", "tree": {"sha": "f2cb6e99f5d079453b12824d32b0354c9a6955e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2cb6e99f5d079453b12824d32b0354c9a6955e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0bfe310a224447fdd143ef3844a3ba1408c7620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bfe310a224447fdd143ef3844a3ba1408c7620", "html_url": "https://github.com/rust-lang/rust/commit/f0bfe310a224447fdd143ef3844a3ba1408c7620", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0bfe310a224447fdd143ef3844a3ba1408c7620/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97105e1288fbeeea5dc814f0b5dad09deb6dfff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/97105e1288fbeeea5dc814f0b5dad09deb6dfff1", "html_url": "https://github.com/rust-lang/rust/commit/97105e1288fbeeea5dc814f0b5dad09deb6dfff1"}], "stats": {"total": 526, "additions": 523, "deletions": 3}, "files": [{"sha": "3751f44cf4e72fc77fc9b0dd6c232b2edda852a2", "filename": "crates/base_db/src/fixture.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fbase_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Ffixture.rs?ref=f0bfe310a224447fdd143ef3844a3ba1408c7620", "patch": "@@ -18,8 +18,8 @@ use crate::{\n pub const WORKSPACE: SourceRootId = SourceRootId(0);\n \n pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n-    fn with_single_file(text: &str) -> (Self, FileId) {\n-        let fixture = ChangeFixture::parse(text);\n+    fn with_single_file(ra_fixture: &str) -> (Self, FileId) {\n+        let fixture = ChangeFixture::parse(ra_fixture);\n         let mut db = Self::default();\n         fixture.change.apply(&mut db);\n         assert_eq!(fixture.files.len(), 1);"}, {"sha": "becef49564c4dc45fc3ab4b72eb4b2073f3178b6", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=f0bfe310a224447fdd143ef3844a3ba1408c7620", "patch": "@@ -103,7 +103,6 @@ pub use {\n     hir_def::{\n         adt::StructKind,\n         attr::{Attr, Attrs, AttrsWithOwner, Documentation},\n-        data::TraitData,\n         find_path::PrefixKind,\n         import_map,\n         item_scope::ItemScope,"}, {"sha": "d264c083d74366fb809c9bdf916f8aedb8a89c9f", "filename": "crates/ide_db/src/symbol_index.rs", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsymbol_index.rs?ref=f0bfe310a224447fdd143ef3844a3ba1408c7620", "patch": "@@ -710,3 +710,67 @@ impl<'a> SymbolCollector<'a> {\n         }\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+\n+    use base_db::fixture::WithFixture;\n+    use expect_test::expect_file;\n+\n+    use super::*;\n+\n+    #[test]\n+    fn test_symbol_index_collection() {\n+        let (db, _) = RootDatabase::with_many_files(\n+            r#\"\n+//- /main.rs\n+\n+macro_rules! macro_rules_macro {\n+    () => {}\n+};\n+\n+macro Macro { }\n+\n+struct Struct;\n+enum Enum {\n+    A, B\n+}\n+union Union {}\n+\n+impl Struct {\n+    fn impl_fn() {}\n+}\n+\n+trait Trait {\n+    fn trait_fn(&self);\n+}\n+\n+fn main() {\n+    struct StructInFn;\n+}\n+\n+const CONST: u32 = 1;\n+static STATIC: &'static str = \"2\";\n+type Alias = Struct;\n+\n+mod a_mod {\n+    struct StructInModA;\n+}\n+\n+mod b_mod;\n+\n+//- /b_mod.rs\n+struct StructInModB;\n+        \"#,\n+        );\n+\n+        let symbols: Vec<_> = module_ids_for_crate(db.upcast(), db.test_crate())\n+            .into_iter()\n+            .map(|module_id| {\n+                (module_id, SymbolCollector::collect(&db as &dyn SymbolsDatabase, module_id))\n+            })\n+            .collect();\n+\n+        expect_file![\"./test_data/test_symbol_index_collection.txt\"].assert_debug_eq(&symbols);\n+    }\n+}"}, {"sha": "33f2f2dc7f5778cb759f79c7553c1487e5c598fd", "filename": "crates/ide_db/src/test_data/test_symbol_index_collection.txt", "status": "added", "additions": 457, "deletions": 0, "changes": 457, "blob_url": "https://github.com/rust-lang/rust/blob/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt", "raw_url": "https://github.com/rust-lang/rust/raw/f0bfe310a224447fdd143ef3844a3ba1408c7620/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Ftest_data%2Ftest_symbol_index_collection.txt?ref=f0bfe310a224447fdd143ef3844a3ba1408c7620", "patch": "@@ -0,0 +1,457 @@\n+[\n+    (\n+        ModuleId {\n+            krate: CrateId(\n+                0,\n+            ),\n+            block: None,\n+            local_id: Idx::<ModuleData>(0),\n+        },\n+        [\n+            FileSymbol {\n+                name: \"Struct\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 68..82,\n+                        kind: STRUCT,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 75..81,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Struct,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"Enum\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 83..105,\n+                        kind: ENUM,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 88..92,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Enum,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"Union\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 106..120,\n+                        kind: UNION,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 112..117,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Union,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"Trait\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 159..198,\n+                        kind: TRAIT,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 165..170,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Trait,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"trait_fn\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 177..196,\n+                        kind: FN,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 180..188,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Function,\n+                container_name: Some(\n+                    \"Trait\",\n+                ),\n+            },\n+            FileSymbol {\n+                name: \"main\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 200..236,\n+                        kind: FN,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 203..207,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Function,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"proc_macro\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 238..270,\n+                        kind: FN,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 255..265,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Function,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"CONST\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 272..293,\n+                        kind: CONST,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 278..283,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Const,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"STATIC\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 294..328,\n+                        kind: STATIC,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 301..307,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Static,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"Alias\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 329..349,\n+                        kind: TYPE_ALIAS,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 334..339,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: TypeAlias,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"a_mod\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 351..389,\n+                        kind: MODULE,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 355..360,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Module,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"b_mod\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 391..401,\n+                        kind: MODULE,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 395..400,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Module,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"impl_fn\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 140..155,\n+                        kind: FN,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 143..150,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Function,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"macro_rules_macro\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 1..48,\n+                        kind: MACRO_RULES,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 14..31,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Macro,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"Macro\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 51..66,\n+                        kind: MACRO_DEF,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 57..62,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Macro,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"proc_macro\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 238..270,\n+                        kind: FN,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 255..265,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Macro,\n+                container_name: None,\n+            },\n+            FileSymbol {\n+                name: \"StructInFn\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 216..234,\n+                        kind: STRUCT,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 223..233,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Struct,\n+                container_name: Some(\n+                    \"main\",\n+                ),\n+            },\n+        ],\n+    ),\n+    (\n+        ModuleId {\n+            krate: CrateId(\n+                0,\n+            ),\n+            block: None,\n+            local_id: Idx::<ModuleData>(1),\n+        },\n+        [\n+            FileSymbol {\n+                name: \"StructInModA\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                0,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 367..387,\n+                        kind: STRUCT,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 374..386,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Struct,\n+                container_name: None,\n+            },\n+        ],\n+    ),\n+    (\n+        ModuleId {\n+            krate: CrateId(\n+                0,\n+            ),\n+            block: None,\n+            local_id: Idx::<ModuleData>(2),\n+        },\n+        [\n+            FileSymbol {\n+                name: \"StructInModB\",\n+                loc: DeclarationLocation {\n+                    hir_file_id: HirFileId(\n+                        FileId(\n+                            FileId(\n+                                1,\n+                            ),\n+                        ),\n+                    ),\n+                    ptr: SyntaxNodePtr {\n+                        range: 0..20,\n+                        kind: STRUCT,\n+                    },\n+                    name_ptr: SyntaxNodePtr {\n+                        range: 7..19,\n+                        kind: NAME,\n+                    },\n+                },\n+                kind: Struct,\n+                container_name: None,\n+            },\n+        ],\n+    ),\n+]"}]}