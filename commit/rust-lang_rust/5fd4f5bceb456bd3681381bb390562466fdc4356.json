{"sha": "5fd4f5bceb456bd3681381bb390562466fdc4356", "node_id": "C_kwDOAAsO6NoAKDVmZDRmNWJjZWI0NTZiZDM2ODEzODFiYjM5MDU2MjQ2NmZkYzQzNTY", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2023-01-27T19:45:03Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2023-02-01T15:43:01Z"}, "message": "Add candidates for DiscriminantKind builtin", "tree": {"sha": "a5493f8130a24ba0f1b651476623a26fe7e22d6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5493f8130a24ba0f1b651476623a26fe7e22d6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fd4f5bceb456bd3681381bb390562466fdc4356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd4f5bceb456bd3681381bb390562466fdc4356", "html_url": "https://github.com/rust-lang/rust/commit/5fd4f5bceb456bd3681381bb390562466fdc4356", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fd4f5bceb456bd3681381bb390562466fdc4356/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11d96b59307b1702fffe871bfc2d0145d070881e", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d96b59307b1702fffe871bfc2d0145d070881e", "html_url": "https://github.com/rust-lang/rust/commit/11d96b59307b1702fffe871bfc2d0145d070881e"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "ccdf6246083cc59787129366e46b47c2748edd91", "filename": "compiler/rustc_trait_selection/src/solve/assembly.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fassembly.rs?ref=5fd4f5bceb456bd3681381bb390562466fdc4356", "patch": "@@ -81,6 +81,7 @@ pub(super) enum CandidateSource {\n     AliasBound,\n }\n \n+/// Methods used to assemble candidates for either trait or projection goals.\n pub(super) trait GoalKind<'tcx>: TypeFoldable<'tcx> + Copy + Eq {\n     fn self_ty(self) -> Ty<'tcx>;\n \n@@ -188,6 +189,11 @@ pub(super) trait GoalKind<'tcx>: TypeFoldable<'tcx> + Copy + Eq {\n         ecx: &mut EvalCtxt<'_, 'tcx>,\n         goal: Goal<'tcx, Self>,\n     ) -> Vec<CanonicalResponse<'tcx>>;\n+\n+    fn consider_builtin_discriminant_kind_candidate(\n+        ecx: &mut EvalCtxt<'_, 'tcx>,\n+        goal: Goal<'tcx, Self>,\n+    ) -> QueryResult<'tcx>;\n }\n \n impl<'tcx> EvalCtxt<'_, 'tcx> {\n@@ -320,6 +326,8 @@ impl<'tcx> EvalCtxt<'_, 'tcx> {\n             G::consider_builtin_generator_candidate(self, goal)\n         } else if lang_items.unsize_trait() == Some(trait_def_id) {\n             G::consider_builtin_unsize_candidate(self, goal)\n+        } else if lang_items.discriminant_kind_trait() == Some(trait_def_id) {\n+            G::consider_builtin_discriminant_kind_candidate(self, goal)\n         } else {\n             Err(NoSolution)\n         };"}, {"sha": "48627ee6096f36d5e417d66c8173eabdca8e491e", "filename": "compiler/rustc_trait_selection/src/solve/project_goals.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Fproject_goals.rs?ref=5fd4f5bceb456bd3681381bb390562466fdc4356", "patch": "@@ -581,6 +581,26 @@ impl<'tcx> assembly::GoalKind<'tcx> for ProjectionPredicate<'tcx> {\n     ) -> Vec<super::CanonicalResponse<'tcx>> {\n         bug!(\"`Unsize` does not have an associated type: {:?}\", goal);\n     }\n+\n+    fn consider_builtin_discriminant_kind_candidate(\n+        ecx: &mut EvalCtxt<'_, 'tcx>,\n+        goal: Goal<'tcx, Self>,\n+    ) -> QueryResult<'tcx> {\n+        let self_ty = goal.predicate.self_ty();\n+\n+        let tcx = ecx.tcx();\n+        let term = self_ty.discriminant_ty(tcx).into();\n+\n+        Self::consider_assumption(\n+            ecx,\n+            goal,\n+            ty::Binder::dummy(ty::ProjectionPredicate {\n+                projection_ty: tcx.mk_alias_ty(goal.predicate.def_id(), [self_ty]),\n+                term,\n+            })\n+            .to_predicate(tcx),\n+        )\n+    }\n }\n \n /// This behavior is also implemented in `rustc_ty_utils` and in the old `project` code."}, {"sha": "0003dfeaee78117ca8a4426dfa48a052808c4ab2", "filename": "compiler/rustc_trait_selection/src/solve/trait_goals.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd4f5bceb456bd3681381bb390562466fdc4356/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fsolve%2Ftrait_goals.rs?ref=5fd4f5bceb456bd3681381bb390562466fdc4356", "patch": "@@ -439,6 +439,14 @@ impl<'tcx> assembly::GoalKind<'tcx> for TraitPredicate<'tcx> {\n \n         responses\n     }\n+\n+    fn consider_builtin_discriminant_kind_candidate(\n+        ecx: &mut EvalCtxt<'_, 'tcx>,\n+        _goal: Goal<'tcx, Self>,\n+    ) -> QueryResult<'tcx> {\n+        // `DiscriminantKind` is automatically implemented for every type.\n+        ecx.make_canonical_response(Certainty::Yes)\n+    }\n }\n \n impl<'tcx> EvalCtxt<'_, 'tcx> {"}]}