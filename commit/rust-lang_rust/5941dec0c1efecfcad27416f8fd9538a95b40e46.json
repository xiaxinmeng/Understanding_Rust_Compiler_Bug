{"sha": "5941dec0c1efecfcad27416f8fd9538a95b40e46", "node_id": "C_kwDOAAsO6NoAKDU5NDFkZWMwYzFlZmVjZmNhZDI3NDE2ZjhmZDk1MzhhOTViNDBlNDY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-13T14:12:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-13T14:12:38Z"}, "message": "Auto merge of #13010 - Veykril:build-script-probes, r=Veykril\n\nDo not unconditionally succeed RUSTC_WRAPPER checks when run by build scripts\n\nrust-analyzer's RUSTC_WRAPPER unconditionally succeeds `cargo check`\ninvocations tripping up build scripts using `cargo check` to probe for\nsuccessful compilations. To prevent this from happening the RUSTC_WRAPPER\nnow checks if it's run from a build script by looking for the\n`CARGO_CFG_TARGET_ARCH` env var that cargo sets only when running build\nscripts.", "tree": {"sha": "06bbcdbe152d9c1a2187af9e1e9be3f6d3155e68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06bbcdbe152d9c1a2187af9e1e9be3f6d3155e68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5941dec0c1efecfcad27416f8fd9538a95b40e46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5941dec0c1efecfcad27416f8fd9538a95b40e46", "html_url": "https://github.com/rust-lang/rust/commit/5941dec0c1efecfcad27416f8fd9538a95b40e46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5941dec0c1efecfcad27416f8fd9538a95b40e46/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f982c7616196b433bd65a1df1d07ee0d249701c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f982c7616196b433bd65a1df1d07ee0d249701c0", "html_url": "https://github.com/rust-lang/rust/commit/f982c7616196b433bd65a1df1d07ee0d249701c0"}, {"sha": "72ae308c73a2d9d71715ec35ba1f644989338761", "url": "https://api.github.com/repos/rust-lang/rust/commits/72ae308c73a2d9d71715ec35ba1f644989338761", "html_url": "https://github.com/rust-lang/rust/commit/72ae308c73a2d9d71715ec35ba1f644989338761"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "38e9c7dd7e11c33ade9108eda5ac4f9b164fd810", "filename": "crates/rust-analyzer/src/bin/rustc_wrapper.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5941dec0c1efecfcad27416f8fd9538a95b40e46/crates%2Frust-analyzer%2Fsrc%2Fbin%2Frustc_wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5941dec0c1efecfcad27416f8fd9538a95b40e46/crates%2Frust-analyzer%2Fsrc%2Fbin%2Frustc_wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Frustc_wrapper.rs?ref=5941dec0c1efecfcad27416f8fd9538a95b40e46", "patch": "@@ -17,6 +17,11 @@ pub(crate) fn run_rustc_skipping_cargo_checking(\n     rustc_executable: OsString,\n     args: Vec<OsString>,\n ) -> io::Result<ExitCode> {\n+    // `CARGO_CFG_TARGET_ARCH` is only set by cargo when executing build scripts\n+    // We don't want to exit out checks unconditionally with success if a build\n+    // script tries to invoke checks themselves\n+    // See https://github.com/rust-lang/rust-analyzer/issues/12973 for context\n+    let not_invoked_by_build_script = std::env::var_os(\"CARGO_CFG_TARGET_ARCH\").is_none();\n     let is_cargo_check = args.iter().any(|arg| {\n         let arg = arg.to_string_lossy();\n         // `cargo check` invokes `rustc` with `--emit=metadata` argument.\n@@ -29,7 +34,7 @@ pub(crate) fn run_rustc_skipping_cargo_checking(\n         //            The default output filename is CRATE_NAME.rmeta.\n         arg.starts_with(\"--emit=\") && arg.contains(\"metadata\") && !arg.contains(\"link\")\n     });\n-    if is_cargo_check {\n+    if not_invoked_by_build_script && is_cargo_check {\n         return Ok(ExitCode(Some(0)));\n     }\n     run_rustc(rustc_executable, args)"}]}