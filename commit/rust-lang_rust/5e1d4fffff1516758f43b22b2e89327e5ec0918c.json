{"sha": "5e1d4fffff1516758f43b22b2e89327e5ec0918c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMWQ0ZmZmZmYxNTE2NzU4ZjQzYjIyYjJlODkzMjdlNWVjMDkxOGM=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-26T15:27:57Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-26T15:27:57Z"}, "message": "Add a way to assert the number of occurrences to htmldocck", "tree": {"sha": "c8e65257d2d393eed473d1614c1e946e2a79835b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e65257d2d393eed473d1614c1e946e2a79835b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e1d4fffff1516758f43b22b2e89327e5ec0918c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1d4fffff1516758f43b22b2e89327e5ec0918c", "html_url": "https://github.com/rust-lang/rust/commit/5e1d4fffff1516758f43b22b2e89327e5ec0918c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e1d4fffff1516758f43b22b2e89327e5ec0918c/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7aafcced8d7374ddbe50a509cb0bcec959254c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7aafcced8d7374ddbe50a509cb0bcec959254c4", "html_url": "https://github.com/rust-lang/rust/commit/f7aafcced8d7374ddbe50a509cb0bcec959254c4"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "a212e3a04357eccc564097ab90b203d1afc38a8f", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5e1d4fffff1516758f43b22b2e89327e5ec0918c/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/5e1d4fffff1516758f43b22b2e89327e5ec0918c/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=5e1d4fffff1516758f43b22b2e89327e5ec0918c", "patch": "@@ -96,6 +96,9 @@\n   highlights for example. If you want to simply check the presence of\n   given node or attribute, use an empty string (`\"\"`) as a `PATTERN`.\n \n+* `@count PATH XPATH COUNT' checks for the occurrence of given XPath\n+  in the given file. The number of occurrences must match the given count.\n+\n All conditions can be negated with `!`. `@!has foo/type.NoSuch.html`\n checks if the given file does not exist, for example.\n \n@@ -333,6 +336,11 @@ def check_tree_text(tree, path, pat, regexp):\n     return ret\n \n \n+def check_tree_count(tree, path, count):\n+    path = normalize_xpath(path)\n+    return len(tree.findall(path)) == count\n+\n+\n def check(target, commands):\n     cache = CachedFiles(target)\n     for c in commands:\n@@ -360,6 +368,13 @@ def check(target, commands):\n                 raise RuntimeError('Invalid number of @{} arguments \\\n                                     at line {}'.format(c.cmd, c.lineno))\n \n+        elif c.cmd == 'count': # count test\n+            if len(c.args) == 3: # @count <path> <pat> <count> = count test\n+                ret = check_tree_count(cache.get_tree(c.args[0]), c.args[1], int(c.args[2]))\n+            else:\n+                raise RuntimeError('Invalid number of @{} arguments \\\n+                                    at line {}'.format(c.cmd, c.lineno))\n+\n         elif c.cmd == 'valid-html':\n             raise RuntimeError('Unimplemented @valid-html at line {}'.format(c.lineno))\n "}]}