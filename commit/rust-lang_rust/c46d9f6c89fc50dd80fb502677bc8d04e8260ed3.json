{"sha": "c46d9f6c89fc50dd80fb502677bc8d04e8260ed3", "node_id": "C_kwDOAAsO6NoAKGM0NmQ5ZjZjODlmYzUwZGQ4MGZiNTAyNjc3YmM4ZDA0ZTgyNjBlZDM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-02-23T22:18:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-23T22:18:42Z"}, "message": "Update library/std/src/io/error.rs\n\nCo-authored-by: Josh Triplett <josh@joshtriplett.org>", "tree": {"sha": "f8723cd6b1308e5514adfcab99f6ab9747c94271", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8723cd6b1308e5514adfcab99f6ab9747c94271"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiFrLCCRBK7hj4Ov3rIwAAekoIABt6I0WjdufQ4ycRb29rSmW9\nxU/0tzHOe30xJXVMhv7u0OhG2XteOPrf7YOHEW6ML+idzghaSXwMcOmRuHlsXzE4\nPAGf9Ji5TcqUucktbaruDl85HXaHYY2W+PNVOgnCTLk0Mn7eZnQa124Mzjus1Wqx\nnGSNNFoMH3Lzygp+y0cCAuKmqM+YJK0iW81pIhA37vEb8RxDp8GFGvb+BMW7woyZ\nXflNzYOu5zbLUyGw74mD3jHoT0chZp29NWe3u+KrH+VL3o5fPby5DRP/TEMRoFVX\nHvNuZe+Kub0yLDleCuoSglSJhxFrQH0opS5u1BwToN+hJEGtdmYXxSDfcGA+UfQ=\n=udKZ\n-----END PGP SIGNATURE-----\n", "payload": "tree f8723cd6b1308e5514adfcab99f6ab9747c94271\nparent 057dc09eaea610c5a14d0908764696d9d416d544\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1645654722 +0100\ncommitter GitHub <noreply@github.com> 1645654722 +0100\n\nUpdate library/std/src/io/error.rs\n\nCo-authored-by: Josh Triplett <josh@joshtriplett.org>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3", "html_url": "https://github.com/rust-lang/rust/commit/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "057dc09eaea610c5a14d0908764696d9d416d544", "url": "https://api.github.com/repos/rust-lang/rust/commits/057dc09eaea610c5a14d0908764696d9d416d544", "html_url": "https://github.com/rust-lang/rust/commit/057dc09eaea610c5a14d0908764696d9d416d544"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3df3749d676e8d77dfcf0137adcd75b9cc9fd441", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c46d9f6c89fc50dd80fb502677bc8d04e8260ed3/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=c46d9f6c89fc50dd80fb502677bc8d04e8260ed3", "patch": "@@ -148,7 +148,7 @@ struct Custom {\n /// \"all other errors\".\n ///\n /// In comprehensive and thorough tests that want to verify that a test doesn't return any known incorrect error kind,\n-/// you may want to cut-and-paste the current list of errors from here into your test code. This seems counterintuitive,\n+/// you may want to cut-and-paste the current full list of errors from here into your test code, and then match `_` as the correct case. This seems counterintuitive,\n /// but it will make your tests more robust. In particular, if you want to verify that your code does produce an\n /// unrecognized error kind, the robust solution is to check for all the recognized error kinds and fail in those cases.\n #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]"}]}