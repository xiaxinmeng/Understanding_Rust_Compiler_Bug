{"sha": "a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NmJmNTI0YzI5OGZmMTc3YzNkMzA0NmZmOGYyZDAyYTgxZTRiYzk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-02T20:10:05Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-04T20:24:35Z"}, "message": "Add extra check for #[doc(test(...)] attribute", "tree": {"sha": "750eb4f4431102e607dfbba61f156367d82d1cd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/750eb4f4431102e607dfbba61f156367d82d1cd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "html_url": "https://github.com/rust-lang/rust/commit/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f32e3e187cfdf29ef7c785c644c95aee2897364", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f32e3e187cfdf29ef7c785c644c95aee2897364", "html_url": "https://github.com/rust-lang/rust/commit/6f32e3e187cfdf29ef7c785c644c95aee2897364"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "b099dcf0300dd5737c68fcf0ea291bf2a63cab48", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "patch": "@@ -3061,14 +3061,17 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `invalid_doc_attributes` lint detects when the `#[doc(...)]` is\n+    /// The `invalid_doc_attribute` lint detects when the `#[doc(...)]` is\n     /// misused.\n     ///\n     /// ### Example\n     ///\n     /// ```rust,compile_fail\n     /// #![deny(warnings)]\n-    /// #[doc(test(no_crate_inject))]\n+    ///\n+    /// pub mod submodule {\n+    ///     #![doc(test(no_crate_inject))]\n+    /// }\n     /// ```\n     ///\n     /// {{produces}}\n@@ -3083,6 +3086,6 @@ declare_lint! {\n     \"detects invalid `#[doc(...)]` attributes\",\n     @future_incompatible = FutureIncompatibleInfo {\n         reference: \"issue #82730 <https://github.com/rust-lang/rust/issues/82730>\",\n-        edition: Some(Edition::Edition2021),\n+        edition: None,\n     };\n }"}, {"sha": "c84d29428ad35cd5ec44d8428b2c743944e11016", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66bf524c298ff177c3d3046ff8f2d02a81e4bc9/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=a66bf524c298ff177c3d3046ff8f2d02a81e4bc9", "patch": "@@ -17,7 +17,9 @@ use rustc_hir::{\n     self, FnSig, ForeignItem, ForeignItemKind, HirId, Item, ItemKind, TraitItem, CRATE_HIR_ID,\n };\n use rustc_hir::{MethodKind, Target};\n-use rustc_session::lint::builtin::{CONFLICTING_REPR_HINTS, UNUSED_ATTRIBUTES};\n+use rustc_session::lint::builtin::{\n+    CONFLICTING_REPR_HINTS, INVALID_DOC_ATTRIBUTE, UNUSED_ATTRIBUTES,\n+};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{Span, DUMMY_SP};\n@@ -544,6 +546,21 @@ impl CheckAttrVisitor<'tcx> {\n                         {\n                             return false;\n                         }\n+                    } else if meta.has_name(sym::test) {\n+                        if CRATE_HIR_ID != hir_id {\n+                            self.tcx.struct_span_lint_hir(\n+                                INVALID_DOC_ATTRIBUTE,\n+                                hir_id,\n+                                meta.span(),\n+                                |lint| {\n+                                    lint.build(\n+                                        \"`#![doc(test(...)]` is only allowed as a crate level attribute\"\n+                                    )\n+                                    .emit();\n+                                },\n+                            );\n+                            return false;\n+                        }\n                     } else if let Some(i_meta) = meta.meta_item() {\n                         if ![\n                             sym::cfg,"}]}