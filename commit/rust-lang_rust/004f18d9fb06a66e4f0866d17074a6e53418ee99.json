{"sha": "004f18d9fb06a66e4f0866d17074a6e53418ee99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNGYxOGQ5ZmIwNmE2NmU0ZjA4NjZkMTcwNzRhNmU1MzQxOGVlOTk=", "commit": {"author": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2017-01-14T14:38:12Z"}, "committer": {"name": "Ruud van Asseldonk", "email": "dev@veniogames.com", "date": "2017-01-14T14:38:12Z"}, "message": "Fix covered-switch-default warnings in RustWrapper\n\nThese switch statements cover all possible values, so the default case\nis dead code (it contains an llvm_unreachable anyway), triggering a\n-Wcovered-switch-default warning. Moving the unreachable after the\nswitch resolves these warnings. This keeps the build output clean.", "tree": {"sha": "fc68800f8f6bb21fc1edd9bb65d408e82b25026a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc68800f8f6bb21fc1edd9bb65d408e82b25026a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/004f18d9fb06a66e4f0866d17074a6e53418ee99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/004f18d9fb06a66e4f0866d17074a6e53418ee99", "html_url": "https://github.com/rust-lang/rust/commit/004f18d9fb06a66e4f0866d17074a6e53418ee99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/004f18d9fb06a66e4f0866d17074a6e53418ee99/comments", "author": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ruuda", "id": 506953, "node_id": "MDQ6VXNlcjUwNjk1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/506953?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ruuda", "html_url": "https://github.com/ruuda", "followers_url": "https://api.github.com/users/ruuda/followers", "following_url": "https://api.github.com/users/ruuda/following{/other_user}", "gists_url": "https://api.github.com/users/ruuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/ruuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ruuda/subscriptions", "organizations_url": "https://api.github.com/users/ruuda/orgs", "repos_url": "https://api.github.com/users/ruuda/repos", "events_url": "https://api.github.com/users/ruuda/events{/privacy}", "received_events_url": "https://api.github.com/users/ruuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d82d95af9c54c3947f6c6e21a6d632d9ee468de", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d82d95af9c54c3947f6c6e21a6d632d9ee468de", "html_url": "https://github.com/rust-lang/rust/commit/7d82d95af9c54c3947f6c6e21a6d632d9ee468de"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "bd0ff9e8d83ccc40c675538e7310887decb614f9", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/004f18d9fb06a66e4f0866d17074a6e53418ee99/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/004f18d9fb06a66e4f0866d17074a6e53418ee99/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=004f18d9fb06a66e4f0866d17074a6e53418ee99", "patch": "@@ -148,9 +148,8 @@ static Attribute::AttrKind fromRust(LLVMRustAttribute Kind) {\n     return Attribute::ZExt;\n   case InReg:\n     return Attribute::InReg;\n-  default:\n-    llvm_unreachable(\"bad AttributeKind\");\n   }\n+  llvm_unreachable(\"bad AttributeKind\");\n }\n \n extern \"C\" void LLVMRustAddCallSiteAttribute(LLVMValueRef Instr, unsigned Index,\n@@ -1233,9 +1232,8 @@ static LLVMLinkage fromRust(LLVMRustLinkage Linkage) {\n     return LLVMExternalWeakLinkage;\n   case LLVMRustLinkage::CommonLinkage:\n     return LLVMCommonLinkage;\n-  default:\n-    llvm_unreachable(\"Invalid LLVMRustLinkage value!\");\n   }\n+  llvm_unreachable(\"Invalid LLVMRustLinkage value!\");\n }\n \n extern \"C\" LLVMRustLinkage LLVMRustGetLinkage(LLVMValueRef V) {\n@@ -1282,10 +1280,8 @@ static LLVMRustVisibility toRust(LLVMVisibility Vis) {\n     return LLVMRustVisibility::Hidden;\n   case LLVMProtectedVisibility:\n     return LLVMRustVisibility::Protected;\n-\n-  default:\n-    llvm_unreachable(\"Invalid LLVMRustVisibility value!\");\n   }\n+  llvm_unreachable(\"Invalid LLVMRustVisibility value!\");\n }\n \n static LLVMVisibility fromRust(LLVMRustVisibility Vis) {\n@@ -1296,10 +1292,8 @@ static LLVMVisibility fromRust(LLVMRustVisibility Vis) {\n     return LLVMHiddenVisibility;\n   case LLVMRustVisibility::Protected:\n     return LLVMProtectedVisibility;\n-\n-  default:\n-    llvm_unreachable(\"Invalid LLVMRustVisibility value!\");\n   }\n+  llvm_unreachable(\"Invalid LLVMRustVisibility value!\");\n }\n \n extern \"C\" LLVMRustVisibility LLVMRustGetVisibility(LLVMValueRef V) {"}]}