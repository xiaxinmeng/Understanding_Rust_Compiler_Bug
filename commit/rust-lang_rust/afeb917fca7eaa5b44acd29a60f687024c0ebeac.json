{"sha": "afeb917fca7eaa5b44acd29a60f687024c0ebeac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZWI5MTdmY2E3ZWFhNWI0NGFjZDI5YTYwZjY4NzAyNGMwZWJlYWM=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-08-31T23:21:48Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-08-31T23:51:32Z"}, "message": "Fix a fp in `transmute_ptr_to_ptr`\n\nAvoid firing the lint when `transmute` in const contexts\nas dereferencing raw pointers in consts is unstable. cc #5959", "tree": {"sha": "378d802211f1c319910a8702bf5faf0f5ddb178e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378d802211f1c319910a8702bf5faf0f5ddb178e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afeb917fca7eaa5b44acd29a60f687024c0ebeac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afeb917fca7eaa5b44acd29a60f687024c0ebeac", "html_url": "https://github.com/rust-lang/rust/commit/afeb917fca7eaa5b44acd29a60f687024c0ebeac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afeb917fca7eaa5b44acd29a60f687024c0ebeac/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67e18c2d5cb56a7b34312265ec6d4c780028cfe9", "url": "https://api.github.com/repos/rust-lang/rust/commits/67e18c2d5cb56a7b34312265ec6d4c780028cfe9", "html_url": "https://github.com/rust-lang/rust/commit/67e18c2d5cb56a7b34312265ec6d4c780028cfe9"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "789d124eae273b72fe4f8f9573d3e1c14f350bff", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/afeb917fca7eaa5b44acd29a60f687024c0ebeac/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afeb917fca7eaa5b44acd29a60f687024c0ebeac/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=afeb917fca7eaa5b44acd29a60f687024c0ebeac", "patch": "@@ -331,8 +331,9 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n             if let Some(def_id) = cx.qpath_res(qpath, path_expr.hir_id).opt_def_id();\n             if match_def_path(cx, def_id, &paths::TRANSMUTE);\n             then {\n-                // Avoid suggesting from/to bits in const contexts.\n+                // Avoid suggesting from/to bits and dereferencing raw pointers in const contexts.\n                 // See https://github.com/rust-lang/rust/issues/73736 for progress on making them `const fn`.\n+                // And see https://github.com/rust-lang/rust/issues/51911 for dereferencing raw pointers.\n                 let const_context = in_constant(cx, e.hir_id);\n \n                 let from_ty = cx.typeck_results().expr_ty(&args[0]);\n@@ -486,7 +487,8 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                                     Applicability::Unspecified,\n                                 );\n                             } else {\n-                                if cx.tcx.erase_regions(&from_ty) != cx.tcx.erase_regions(&to_ty) {\n+                                if (cx.tcx.erase_regions(&from_ty) != cx.tcx.erase_regions(&to_ty))\n+                                    && !const_context {\n                                     span_lint_and_then(\n                                         cx,\n                                         TRANSMUTE_PTR_TO_PTR,"}, {"sha": "26b03bdc74055665d927efde9bbd8ae50ccd6f71", "filename": "tests/ui/transmute_ptr_to_ptr.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/afeb917fca7eaa5b44acd29a60f687024c0ebeac/tests%2Fui%2Ftransmute_ptr_to_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afeb917fca7eaa5b44acd29a60f687024c0ebeac/tests%2Fui%2Ftransmute_ptr_to_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute_ptr_to_ptr.rs?ref=afeb917fca7eaa5b44acd29a60f687024c0ebeac", "patch": "@@ -51,4 +51,12 @@ fn transmute_ptr_to_ptr() {\n     let _: &GenericParam<&LifetimeParam<'static>> = unsafe { std::mem::transmute(&GenericParam { t: &lp }) };\n }\n \n+// dereferencing raw pointers in const contexts, should not lint as it's unstable (issue 5959)\n+const _: &() = {\n+    struct ZST;\n+    let zst = &ZST;\n+\n+    unsafe { std::mem::transmute::<&'static ZST, &'static ()>(zst) }\n+};\n+\n fn main() {}"}]}