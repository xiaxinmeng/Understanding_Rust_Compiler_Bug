{"sha": "56d0c81c750fa3cbe63f20bb30570cf084b9b98c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZDBjODFjNzUwZmEzY2JlNjNmMjBiYjMwNTcwY2YwODRiOWI5OGM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-01T12:53:10Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-04-01T12:53:10Z"}, "message": "s/subrepo/subtree/", "tree": {"sha": "7113a0ffae6dd1ae3ce1fe18023c0827e9aac226", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7113a0ffae6dd1ae3ce1fe18023c0827e9aac226"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56d0c81c750fa3cbe63f20bb30570cf084b9b98c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56d0c81c750fa3cbe63f20bb30570cf084b9b98c", "html_url": "https://github.com/rust-lang/rust/commit/56d0c81c750fa3cbe63f20bb30570cf084b9b98c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56d0c81c750fa3cbe63f20bb30570cf084b9b98c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c8191719761dd8617fb84a86fe114ed7ac6eab", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c8191719761dd8617fb84a86fe114ed7ac6eab", "html_url": "https://github.com/rust-lang/rust/commit/04c8191719761dd8617fb84a86fe114ed7ac6eab"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "fb1d43c87112c3bc798b2dc8d84dc4ace7ff1535", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/56d0c81c750fa3cbe63f20bb30570cf084b9b98c/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/56d0c81c750fa3cbe63f20bb30570cf084b9b98c/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=56d0c81c750fa3cbe63f20bb30570cf084b9b98c", "patch": "@@ -188,7 +188,7 @@ with one another are rolled up.\n Speaking of tests, Rust has a comprehensive test suite. More information about\n it can be found [here][rctd].\n \n-### External Dependencies (subrepo)\n+### External Dependencies (subtree)\n \n As a developer to this repository, you don't have to treat the following external projects\n differently from other crates that are directly in this repo:\n@@ -198,39 +198,39 @@ differently from other crates that are directly in this repo:\n They are just regular files and directories. This is in contrast to `submodule` dependencies\n (see below for those).\n \n-If you want to synchronize or otherwise work with subrepos, install the `git subrepo` command via\n-instructions found at https://github.com/ingydotnet/git-subrepo\n+If you want to synchronize or otherwise work with subtrees, install the `git subtree` command via\n+instructions found at https://github.com/ingydotnet/git-subtree\n \n-#### Synchronizing a subrepo\n+#### Synchronizing a subtree\n \n-There are two synchronization directions: `subrepo push` and `subrepo pull`. Both operations create\n-a synchronization commit in the rustc repo.\n-This commit is very important in order to make future synchronizations work.\n-Do not rebase this commit under any circumstances.\n-Prefer to merge in case of conflicts or redo the operation if you really need to rebase.\n+There are two synchronization directions: `subtree push` and `subtree pull`.\n \n-A `git subrepo push src/tools/clippy`\n+A `git subtree push -P src/tools/clippy`\n takes all the changes that\n happened to the copy in this repo and creates commits on the remote repo that match the local\n-changes (so every local commit that touched the subrepo causes a commit on the remote repo).\n+changes (so every local commit that touched the subtree causes a commit on the remote repo).\n \n-A `git subrepo pull src/tools/clippy` takes all changes since the last `subrepo pull` from the clippy\n+A `git subtree pull -P src/tools/clippy` takes all changes since the last `subtree pull` from the clippy\n repo and creates a single commit in the rustc repo with all the changes.\n \n-#### Creating a new subrepo dependency\n+You always need to specifiy the `-P` prefix to the subtree directory. If you specify the wrong directory\n+you'll get very fun merges that try to push the wrong directory to the remote repository. Luckily you\n+can just abort this without any consequences.\n \n-If you want to create a new subrepo dependency from an existing repository, call (from this\n+#### Creating a new subtree dependency\n+\n+If you want to create a new subtree dependency from an existing repository, call (from this\n repository's root directory!!)\n \n ```\n-git subrepo clone https://github.com/rust-lang/rust-clippy.git src/tools/clippy\n+git subtree add -P src/tools/clippy https://github.com/rust-lang/rust-clippy.git master\n ```\n \n This will create a new commit, which you may not rebase under any circumstances! Delete the commit\n and redo the operation if you need to rebase.\n \n Now you're done, the `src/tools/clippy` directory behaves as if clippy were part of the rustc\n-monorepo, so no one but you (or others that synchronize subrepos) needs to have `git subrepo`\n+monorepo, so no one but you (or others that synchronize subtrees) needs to have `git subtree`\n installed.\n \n "}]}