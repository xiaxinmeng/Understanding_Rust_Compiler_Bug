{"sha": "2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZmY2YjM2ZDdlZDVjMjU3MDA2NjlhOTJiNGE0MzIwMGVlMGZlNmI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T17:49:54Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T22:32:03Z"}, "message": "pre-expansion gate box_patterns", "tree": {"sha": "fbb55f5b4abf4983da47d266412712d1d70439c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbb55f5b4abf4983da47d266412712d1d70439c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "html_url": "https://github.com/rust-lang/rust/commit/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f470ceac2202ecffe8a15acc1139edb9ad4a03b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f470ceac2202ecffe8a15acc1139edb9ad4a03b", "html_url": "https://github.com/rust-lang/rust/commit/1f470ceac2202ecffe8a15acc1139edb9ad4a03b"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "7c4668122a4c2e6b219ff917b647739513a7d7df", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -510,10 +510,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         visit::walk_expr(self, e)\n     }\n \n-    fn visit_arm(&mut self, arm: &'a ast::Arm) {\n-        visit::walk_arm(self, arm)\n-    }\n-\n     fn visit_pat(&mut self, pattern: &'a ast::Pat) {\n         match &pattern.kind {\n             PatKind::Slice(pats) => {\n@@ -533,11 +529,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                     }\n                 }\n             }\n-            PatKind::Box(..) => {\n-                gate_feature_post!(&self, box_patterns,\n-                                  pattern.span,\n-                                  \"box pattern syntax is experimental\");\n-            }\n             PatKind::Range(_, _, Spanned { node: RangeEnd::Excluded, .. }) => {\n                 gate_feature_post!(&self, exclusive_range_pattern, pattern.span,\n                                    \"exclusive range pattern syntax is experimental\");\n@@ -547,11 +538,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n         visit::walk_pat(self, pattern)\n     }\n \n-    fn visit_fn(&mut self,\n-                fn_kind: FnKind<'a>,\n-                fn_decl: &'a ast::FnDecl,\n-                span: Span,\n-                _node_id: NodeId) {\n+    fn visit_fn(&mut self, fn_kind: FnKind<'a>, fn_decl: &'a ast::FnDecl, span: Span, _: NodeId) {\n         if let Some(header) = fn_kind.header() {\n             // Stability of const fn methods are covered in\n             // `visit_trait_item` and `visit_impl_item` below; this is\n@@ -827,6 +814,7 @@ pub fn check_crate(krate: &ast::Crate,\n     gate_all!(crate_visibility_modifier, \"`crate` visibility modifier is experimental\");\n     gate_all!(const_generics, \"const generics are unstable\");\n     gate_all!(decl_macro, \"`macro` is experimental\");\n+    gate_all!(box_patterns, \"box pattern syntax is experimental\");\n \n     visit::walk_crate(&mut visitor, krate);\n }"}, {"sha": "5374671d4b895f10c843a38d27f26a8372415af0", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -324,7 +324,9 @@ impl<'a> Parser<'a> {\n                 self.parse_pat_ident(BindingMode::ByRef(mutbl))?\n             } else if self.eat_keyword(kw::Box) {\n                 // Parse `box pat`\n-                PatKind::Box(self.parse_pat_with_range_pat(false, None)?)\n+                let pat = self.parse_pat_with_range_pat(false, None)?;\n+                self.sess.gated_spans.box_patterns.borrow_mut().push(lo.to(self.prev_span));\n+                PatKind::Box(pat)\n             } else if self.can_be_ident_pat() {\n                 // Parse `ident @ pat`\n                 // This can give false positives and parse nullary enums,"}, {"sha": "c8e60be1db948fb484e6e79524d37f42dbf29742", "filename": "src/libsyntax/sess.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Fsess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Flibsyntax%2Fsess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsess.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -40,6 +40,8 @@ crate struct GatedSpans {\n     pub const_generics: Lock<Vec<Span>>,\n     /// Spans collected for gating `decl_macro`, e.g. `macro m() {}`.\n     pub decl_macro: Lock<Vec<Span>>,\n+    /// Spans collected for gating `box_patterns`, e.g. `box 0`.\n+    pub box_patterns: Lock<Vec<Span>>,\n }\n \n /// Info about a parsing session."}, {"sha": "c5b926d5af28c86c1cc1ade736b83cb358034075", "filename": "src/test/ui/feature-gates/feature-gate-box_patterns.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -2,3 +2,6 @@ fn main() {\n     let box x = Box::new('c'); //~ ERROR box pattern syntax is experimental\n     println!(\"x: {}\", x);\n }\n+\n+macro_rules! accept_pat { ($p:pat) => {} }\n+accept_pat!(box 0); //~ ERROR box pattern syntax is experimental"}, {"sha": "1e47bd41e88705a7cc0f8330877fa5ddcc531cd5", "filename": "src/test/ui/feature-gates/feature-gate-box_patterns.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -7,6 +7,15 @@ LL |     let box x = Box::new('c');\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29641\n    = help: add `#![feature(box_patterns)]` to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: box pattern syntax is experimental\n+  --> $DIR/feature-gate-box_patterns.rs:7:13\n+   |\n+LL | accept_pat!(box 0);\n+   |             ^^^^^\n+   |\n+   = note: for more information, see https://github.com/rust-lang/rust/issues/29641\n+   = help: add `#![feature(box_patterns)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "9667711242ce61d57d9594051811c1bde10c98fd", "filename": "src/test/ui/or-patterns/or-patterns-syntactic-pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2For-patterns%2For-patterns-syntactic-pass.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -4,6 +4,7 @@\n // check-pass\n \n #![feature(or_patterns)]\n+#![feature(box_patterns)]\n \n fn main() {}\n "}, {"sha": "45b31f6125374254c69dcecb8879fc1c4bebe8f5", "filename": "src/test/ui/pattern/rest-pat-syntactic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2aff6b36d7ed5c25700669a92b4a43200ee0fe6b/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Frest-pat-syntactic.rs?ref=2aff6b36d7ed5c25700669a92b4a43200ee0fe6b", "patch": "@@ -3,6 +3,8 @@\n \n // check-pass\n \n+#![feature(box_patterns)]\n+\n fn main() {}\n \n macro_rules! accept_pat {"}]}