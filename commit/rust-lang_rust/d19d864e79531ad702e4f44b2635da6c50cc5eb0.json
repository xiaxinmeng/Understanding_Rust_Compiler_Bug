{"sha": "d19d864e79531ad702e4f44b2635da6c50cc5eb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxOWQ4NjRlNzk1MzFhZDcwMmU0ZjQ0YjI2MzVkYTZjNTBjYzVlYjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-06T07:58:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-06T07:58:24Z"}, "message": "Auto merge of #88631 - camelid:sugg-span, r=davidtwco\n\nImprove structured tuple struct suggestion\n\nPreviously, the span was just for the constructor name, which meant it\nwould result in syntactically-invalid code when applied. Now, the span\nis for the entire expression.\n\nI also changed it to use `span_suggestion_verbose`, for two reasons:\n\n1. Now that the suggestion span has been corrected, the output is a bit\n   cluttered and hard to read. Putting the suggestion its own window\n   creates more space.\n\n2. It's easier to see what's being suggested, since now the version\n   after the suggestion is applied is shown.\n\nr? `@davidtwco`", "tree": {"sha": "2b750bf335f2e0d0c4856020bce6ceae1cfa2c1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b750bf335f2e0d0c4856020bce6ceae1cfa2c1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d19d864e79531ad702e4f44b2635da6c50cc5eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d19d864e79531ad702e4f44b2635da6c50cc5eb0", "html_url": "https://github.com/rust-lang/rust/commit/d19d864e79531ad702e4f44b2635da6c50cc5eb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d19d864e79531ad702e4f44b2635da6c50cc5eb0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2d9bcda7ec267dbabfaef67f7af344ef71e002c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d9bcda7ec267dbabfaef67f7af344ef71e002c", "html_url": "https://github.com/rust-lang/rust/commit/b2d9bcda7ec267dbabfaef67f7af344ef71e002c"}, {"sha": "2226977a875c149effeb7d6b85bce5a5ba0c440c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2226977a875c149effeb7d6b85bce5a5ba0c440c", "html_url": "https://github.com/rust-lang/rust/commit/2226977a875c149effeb7d6b85bce5a5ba0c440c"}], "stats": {"total": 177, "additions": 162, "deletions": 15}, "files": [{"sha": "d578fac4cdb227d0ed1ce86dc250d1cb24a18969", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -1236,6 +1236,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             variant,\n             fields,\n             base_expr.is_none(),\n+            expr.span,\n         );\n         if let Some(base_expr) = base_expr {\n             // If check_expr_struct_fields hit an error, do not attempt to populate\n@@ -1283,6 +1284,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         variant: &'tcx ty::VariantDef,\n         ast_fields: &'tcx [hir::ExprField<'tcx>],\n         check_completeness: bool,\n+        expr_span: Span,\n     ) -> bool {\n         let tcx = self.tcx;\n \n@@ -1334,7 +1336,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         ident,\n                     });\n                 } else {\n-                    self.report_unknown_field(adt_ty, variant, field, ast_fields, kind_name, span);\n+                    self.report_unknown_field(\n+                        adt_ty, variant, field, ast_fields, kind_name, expr_span,\n+                    );\n                 }\n \n                 tcx.ty_error()\n@@ -1467,7 +1471,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         field: &hir::ExprField<'_>,\n         skip_fields: &[hir::ExprField<'_>],\n         kind_name: &str,\n-        ty_span: Span,\n+        expr_span: Span,\n     ) {\n         if variant.is_recovered() {\n             self.set_tainted_by_errors();\n@@ -1510,8 +1514,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         ),\n                     );\n                     err.span_label(field.ident.span, \"field does not exist\");\n-                    err.span_suggestion(\n-                        ty_span,\n+                    err.span_suggestion_verbose(\n+                        expr_span,\n                         &format!(\n                             \"`{adt}::{variant}` is a tuple {kind_name}, use the appropriate syntax\",\n                             adt = ty,\n@@ -1528,8 +1532,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 _ => {\n                     err.span_label(variant.ident.span, format!(\"`{adt}` defined here\", adt = ty));\n                     err.span_label(field.ident.span, \"field does not exist\");\n-                    err.span_suggestion(\n-                        ty_span,\n+                    err.span_suggestion_verbose(\n+                        expr_span,\n                         &format!(\n                             \"`{adt}` is a tuple {kind_name}, use the appropriate syntax\",\n                             adt = ty,"}, {"sha": "2a1f1819c33cd8e796d82ee001f82de181b563f5", "filename": "src/test/ui/issues/issue-4736.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-4736.stderr?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -5,9 +5,12 @@ LL | struct NonCopyable(());\n    |        ----------- `NonCopyable` defined here\n ...\n LL |     let z = NonCopyable{ p: () };\n-   |             -----------  ^ field does not exist\n-   |             |\n-   |             help: `NonCopyable` is a tuple struct, use the appropriate syntax: `NonCopyable(/* fields */)`\n+   |                          ^ field does not exist\n+   |\n+help: `NonCopyable` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let z = NonCopyable(/* fields */);\n+   |             ~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "38e46683b0823d59449583d37c6ebd528f300972", "filename": "src/test/ui/issues/issue-80607.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -5,9 +5,12 @@ LL |     V1(i32),\n    |     -- `Enum::V1` defined here\n ...\n LL |     Enum::V1 { x }\n-   |     --------   ^ field does not exist\n-   |     |\n-   |     help: `Enum::V1` is a tuple variant, use the appropriate syntax: `Enum::V1(/* fields */)`\n+   |                ^ field does not exist\n+   |\n+help: `Enum::V1` is a tuple variant, use the appropriate syntax\n+   |\n+LL |     Enum::V1(/* fields */)\n+   |     ~~~~~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "b328fbe2cfb87a90c625b488bf7bb865bdb838b9", "filename": "src/test/ui/numeric/numeric-fields.stderr", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-fields.stderr?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -5,9 +5,12 @@ LL | struct S(u8, u16);\n    |        - `S` defined here\n ...\n LL |     let s = S{0b1: 10, 0: 11};\n-   |             - ^^^ field does not exist\n-   |             |\n-   |             help: `S` is a tuple struct, use the appropriate syntax: `S(/* fields */)`\n+   |               ^^^ field does not exist\n+   |\n+help: `S` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let s = S(/* fields */);\n+   |             ~~~~~~~~~~~~~~~\n \n error[E0026]: struct `S` does not have a field named `0x1`\n   --> $DIR/numeric-fields.rs:7:17"}, {"sha": "308adcf01fe5d0935166e0e59f7b4f51f0c45896", "filename": "src/test/ui/suggestions/nested-non-tuple-tuple-struct.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.rs?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -0,0 +1,18 @@\n+pub struct S(f32, f32);\n+\n+pub enum E {\n+    V(f32, f32),\n+}\n+\n+fn main() {\n+    let _x = (S { x: 1.0, y: 2.0 }, S { x: 3.0, y: 4.0 });\n+    //~^ ERROR struct `S` has no field named `x`\n+    //~| ERROR struct `S` has no field named `y`\n+    //~| ERROR struct `S` has no field named `x`\n+    //~| ERROR struct `S` has no field named `y`\n+    let _y = (E::V { x: 1.0, y: 2.0 }, E::V { x: 3.0, y: 4.0 });\n+    //~^ ERROR variant `E::V` has no field named `x`\n+    //~| ERROR variant `E::V` has no field named `y`\n+    //~| ERROR variant `E::V` has no field named `x`\n+    //~| ERROR variant `E::V` has no field named `y`\n+}"}, {"sha": "948f09fc3fab745042fb20dba24962208791bc70", "filename": "src/test/ui/suggestions/nested-non-tuple-tuple-struct.stderr", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d19d864e79531ad702e4f44b2635da6c50cc5eb0/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fnested-non-tuple-tuple-struct.stderr?ref=d19d864e79531ad702e4f44b2635da6c50cc5eb0", "patch": "@@ -0,0 +1,116 @@\n+error[E0560]: struct `S` has no field named `x`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:8:19\n+   |\n+LL | pub struct S(f32, f32);\n+   |            - `S` defined here\n+...\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S { x: 3.0, y: 4.0 });\n+   |                   ^ field does not exist\n+   |\n+help: `S` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let _x = (S(/* fields */), S { x: 3.0, y: 4.0 });\n+   |               ~~~~~~~~~~~~~~~\n+\n+error[E0560]: struct `S` has no field named `y`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:8:27\n+   |\n+LL | pub struct S(f32, f32);\n+   |            - `S` defined here\n+...\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S { x: 3.0, y: 4.0 });\n+   |                           ^ field does not exist\n+   |\n+help: `S` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let _x = (S(/* fields */), S { x: 3.0, y: 4.0 });\n+   |               ~~~~~~~~~~~~~~~\n+\n+error[E0560]: struct `S` has no field named `x`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:8:41\n+   |\n+LL | pub struct S(f32, f32);\n+   |            - `S` defined here\n+...\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S { x: 3.0, y: 4.0 });\n+   |                                         ^ field does not exist\n+   |\n+help: `S` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S(/* fields */));\n+   |                                     ~~~~~~~~~~~~~~~\n+\n+error[E0560]: struct `S` has no field named `y`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:8:49\n+   |\n+LL | pub struct S(f32, f32);\n+   |            - `S` defined here\n+...\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S { x: 3.0, y: 4.0 });\n+   |                                                 ^ field does not exist\n+   |\n+help: `S` is a tuple struct, use the appropriate syntax\n+   |\n+LL |     let _x = (S { x: 1.0, y: 2.0 }, S(/* fields */));\n+   |                                     ~~~~~~~~~~~~~~~\n+\n+error[E0559]: variant `E::V` has no field named `x`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:13:22\n+   |\n+LL |     V(f32, f32),\n+   |     - `E::V` defined here\n+...\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V { x: 3.0, y: 4.0 });\n+   |                      ^ field does not exist\n+   |\n+help: `E::V` is a tuple variant, use the appropriate syntax\n+   |\n+LL |     let _y = (E::V(/* fields */), E::V { x: 3.0, y: 4.0 });\n+   |               ~~~~~~~~~~~~~~~~~~\n+\n+error[E0559]: variant `E::V` has no field named `y`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:13:30\n+   |\n+LL |     V(f32, f32),\n+   |     - `E::V` defined here\n+...\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V { x: 3.0, y: 4.0 });\n+   |                              ^ field does not exist\n+   |\n+help: `E::V` is a tuple variant, use the appropriate syntax\n+   |\n+LL |     let _y = (E::V(/* fields */), E::V { x: 3.0, y: 4.0 });\n+   |               ~~~~~~~~~~~~~~~~~~\n+\n+error[E0559]: variant `E::V` has no field named `x`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:13:47\n+   |\n+LL |     V(f32, f32),\n+   |     - `E::V` defined here\n+...\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V { x: 3.0, y: 4.0 });\n+   |                                               ^ field does not exist\n+   |\n+help: `E::V` is a tuple variant, use the appropriate syntax\n+   |\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V(/* fields */));\n+   |                                        ~~~~~~~~~~~~~~~~~~\n+\n+error[E0559]: variant `E::V` has no field named `y`\n+  --> $DIR/nested-non-tuple-tuple-struct.rs:13:55\n+   |\n+LL |     V(f32, f32),\n+   |     - `E::V` defined here\n+...\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V { x: 3.0, y: 4.0 });\n+   |                                                       ^ field does not exist\n+   |\n+help: `E::V` is a tuple variant, use the appropriate syntax\n+   |\n+LL |     let _y = (E::V { x: 1.0, y: 2.0 }, E::V(/* fields */));\n+   |                                        ~~~~~~~~~~~~~~~~~~\n+\n+error: aborting due to 8 previous errors\n+\n+Some errors have detailed explanations: E0559, E0560.\n+For more information about an error, try `rustc --explain E0559`."}]}