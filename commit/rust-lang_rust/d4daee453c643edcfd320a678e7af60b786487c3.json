{"sha": "d4daee453c643edcfd320a678e7af60b786487c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZGFlZTQ1M2M2NDNlZGNmZDMyMGE2NzhlN2FmNjBiNzg2NDg3YzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-18T06:45:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-18T06:45:57Z"}, "message": "auto merge of #5918 : catamorphism/rust/Warnings, r=catamorphism", "tree": {"sha": "b556b2cb6581633c588e9199e9cdda14a07f4538", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b556b2cb6581633c588e9199e9cdda14a07f4538"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4daee453c643edcfd320a678e7af60b786487c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4daee453c643edcfd320a678e7af60b786487c3", "html_url": "https://github.com/rust-lang/rust/commit/d4daee453c643edcfd320a678e7af60b786487c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4daee453c643edcfd320a678e7af60b786487c3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf8887047f7dc6569d0d3b0bdc2ed6342930923", "url": "https://api.github.com/repos/rust-lang/rust/commits/acf8887047f7dc6569d0d3b0bdc2ed6342930923", "html_url": "https://github.com/rust-lang/rust/commit/acf8887047f7dc6569d0d3b0bdc2ed6342930923"}, {"sha": "f86bf0ee6ecddcbcf220a376b16311d9a5115448", "url": "https://api.github.com/repos/rust-lang/rust/commits/f86bf0ee6ecddcbcf220a376b16311d9a5115448", "html_url": "https://github.com/rust-lang/rust/commit/f86bf0ee6ecddcbcf220a376b16311d9a5115448"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ca67e6366b5f47d1f52d257469dcbe598560ffe2", "filename": "src/libcore/repr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4daee453c643edcfd320a678e7af60b786487c3/src%2Flibcore%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4daee453c643edcfd320a678e7af60b786487c3/src%2Flibcore%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frepr.rs?ref=d4daee453c643edcfd320a678e7af60b786487c3", "patch": "@@ -23,9 +23,9 @@ use io::{Writer, WriterUtil};\n use libc::c_void;\n use managed;\n use ptr;\n+#[cfg(stage0)] use sys;\n use reflect;\n use reflect::{MovePtr, align};\n-use sys;\n use to_str::ToStr;\n use vec::UnboxedVecRepr;\n use vec::raw::{VecRepr, SliceRepr};\n@@ -479,7 +479,7 @@ impl TyVisitor for ReprVisitor {\n     }\n \n     #[cfg(not(stage0))]\n-    fn visit_enter_enum(&self, n_variants: uint,\n+    fn visit_enter_enum(&self, _n_variants: uint,\n                         get_disr: extern unsafe fn(ptr: *Opaque) -> int,\n                         _sz: uint, _align: uint) -> bool {\n         let disr = unsafe { get_disr(transmute(self.ptr)) };"}]}