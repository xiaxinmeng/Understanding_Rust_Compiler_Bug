{"sha": "8c4dc18d2a51321070abccd34182381bdc66054d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNGRjMThkMmE1MTMyMTA3MGFiY2NkMzQxODIzODFiZGM2NjA1NGQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-08-05T18:51:35Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-08-06T17:51:52Z"}, "message": "Add opaque structs to TRPL:FFI\n\nFixes #27303", "tree": {"sha": "29563adbcacbb584fd39531bfa3a466fa7d9d4bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29563adbcacbb584fd39531bfa3a466fa7d9d4bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4dc18d2a51321070abccd34182381bdc66054d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4dc18d2a51321070abccd34182381bdc66054d", "html_url": "https://github.com/rust-lang/rust/commit/8c4dc18d2a51321070abccd34182381bdc66054d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4dc18d2a51321070abccd34182381bdc66054d/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d03456183e85fe7bd465bbe7c8f67885a2528444", "url": "https://api.github.com/repos/rust-lang/rust/commits/d03456183e85fe7bd465bbe7c8f67885a2528444", "html_url": "https://github.com/rust-lang/rust/commit/d03456183e85fe7bd465bbe7c8f67885a2528444"}], "stats": {"total": 53, "additions": 53, "deletions": 0}, "files": [{"sha": "878947e10adb42449e9e0a4c9046a4604e9527ec", "filename": "src/doc/trpl/ffi.md", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/8c4dc18d2a51321070abccd34182381bdc66054d/src%2Fdoc%2Ftrpl%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/8c4dc18d2a51321070abccd34182381bdc66054d/src%2Fdoc%2Ftrpl%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fffi.md?ref=8c4dc18d2a51321070abccd34182381bdc66054d", "patch": "@@ -555,3 +555,56 @@ pub extern fn oh_no() -> i32 {\n # fn main() {}\n ```\n \n+# Representing opaque structs\n+\n+Sometimes, a C library wants to provide a pointer to something, but not let you\n+know the internal details of the thing it wants. The simplest way is to use a\n+`void *` argument:\n+\n+```c\n+void foo(void *arg);\n+void bar(void *arg);\n+```\n+\n+We can represent this in Rust with the `c_void` type:\n+\n+```rust\n+# #![feature(libc)]\n+extern crate libc;\n+\n+extern \"C\" {\n+    pub fn foo(arg: *mut libc::c_void);\n+    pub fn bar(arg: *mut libc::c_void);\n+}\n+# fn main() {}\n+```\n+\n+This is a perfectly valid way of handling the situation. However, we can do a bit\n+better. To solve this, some C libraries will instead create a `struct`, where\n+the details and memory layout of the struct are private. This gives some amount\n+of type safety. These structures are called \u2018opaque\u2019. Here\u2019s an example, in C:\n+\n+```c\n+struct Foo; /* Foo is a structure, but its contents are not part of the public interface */\n+struct Bar;\n+void foo(struct Foo *arg);\n+void bar(struct Bar *arg);\n+```\n+\n+To do this in Rust, let\u2019s create our own opaque types with `enum`:\n+\n+```rust\n+pub enum Foo {}\n+pub enum Bar {}\n+\n+extern \"C\" {\n+    pub fn foo(arg: *mut Foo);\n+    pub fn bar(arg: *mut Bar);\n+}\n+# fn main() {}\n+```\n+\n+By using an `enum` with no variants, we create an opaque type that we can\u2019t\n+instantiate, as it has no variants. But because our `Foo` and `Bar` types are\n+different, we\u2019ll get type safety between the two of them, so we cannot\n+accidentally pass a pointer to `Foo` to `bar()`."}]}