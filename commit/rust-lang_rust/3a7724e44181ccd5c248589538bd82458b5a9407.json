{"sha": "3a7724e44181ccd5c248589538bd82458b5a9407", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhNzcyNGU0NDE4MWNjZDVjMjQ4NTg5NTM4YmQ4MjQ1OGI1YTk0MDc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-18T13:00:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-18T13:00:43Z"}, "message": "Merge #2875\n\n2875: Improve parameter hints a bit & add emacs support r=matklad a=flodiebold\n\n - just include the name, not e.g. `mut`\r\n - don't return empty hints (or `_`)\r\n\r\nCC @brotzeit for the Emacs change\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "e7dfad0f3f90e709580040a3a8894658ee926fe4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7dfad0f3f90e709580040a3a8894658ee926fe4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a7724e44181ccd5c248589538bd82458b5a9407", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeIwF8CRBK7hj4Ov3rIwAAdHIIACXxM0I9qx1O1Zfthb2lJHPU\nE20e/JGWn2Vsf9bG9vfyD9Ea2u7a2FxKa44pbby4Y4lwvGFw8H3d9SWQRRRFgu4i\nMG2aGxMjKd400FrtCralxRXyY932EzsEZ+XTznp073Wc59G9l3qGaCL0Pb2xE2dN\ngqHNtFBJk9HCYoUhbYBoM4gEBa0/kjdsM6kYQBTkOrjDZ/oNe37MggUtyiW7ECpB\nJ7lMIfYZLZZT3Wsf9kr2/ervEGEOh1qsbmZJCq7OSObSMQlyM/hLe3WSmp36eAN4\n79cxilI9xrrX2U2rEGN695deukUjq+REnu9COG8u39DH4WRbIPXdFkTz/yHiSY0=\n=8I4p\n-----END PGP SIGNATURE-----\n", "payload": "tree e7dfad0f3f90e709580040a3a8894658ee926fe4\nparent d1d91dfe4d52856403a17e2644a22c919690010d\nparent 18ec4e3403854995d44841a066ff3b190d8115e6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579352443 +0000\ncommitter GitHub <noreply@github.com> 1579352443 +0000\n\nMerge #2875\n\n2875: Improve parameter hints a bit & add emacs support r=matklad a=flodiebold\n\n - just include the name, not e.g. `mut`\r\n - don't return empty hints (or `_`)\r\n\r\nCC @brotzeit for the Emacs change\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a7724e44181ccd5c248589538bd82458b5a9407", "html_url": "https://github.com/rust-lang/rust/commit/3a7724e44181ccd5c248589538bd82458b5a9407", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a7724e44181ccd5c248589538bd82458b5a9407/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1d91dfe4d52856403a17e2644a22c919690010d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1d91dfe4d52856403a17e2644a22c919690010d", "html_url": "https://github.com/rust-lang/rust/commit/d1d91dfe4d52856403a17e2644a22c919690010d"}, {"sha": "18ec4e3403854995d44841a066ff3b190d8115e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/18ec4e3403854995d44841a066ff3b190d8115e6", "html_url": "https://github.com/rust-lang/rust/commit/18ec4e3403854995d44841a066ff3b190d8115e6"}], "stats": {"total": 61, "additions": 38, "deletions": 23}, "files": [{"sha": "1e4a472b444283e9ffb9284a428589ed879f14d3", "filename": "crates/ra_ide/src/display/function_signature.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3a7724e44181ccd5c248589538bd82458b5a9407/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a7724e44181ccd5c248589538bd82458b5a9407/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Ffunction_signature.rs?ref=3a7724e44181ccd5c248589538bd82458b5a9407", "patch": "@@ -169,9 +169,22 @@ impl From<&'_ ast::FnDef> for FunctionSignature {\n                     res.push(self_param.syntax().text().to_string())\n                 }\n \n-                res.extend(param_list.params().map(|param| {\n-                    param.pat().map(|pat| pat.syntax().text().to_string()).unwrap_or_default()\n-                }));\n+                res.extend(\n+                    param_list\n+                        .params()\n+                        .map(|param| {\n+                            Some(\n+                                param\n+                                    .pat()?\n+                                    .syntax()\n+                                    .descendants()\n+                                    .find_map(ast::Name::cast)?\n+                                    .text()\n+                                    .to_string(),\n+                            )\n+                        })\n+                        .map(|param| param.unwrap_or_default()),\n+                );\n             }\n             res\n         }"}, {"sha": "236557541f2ea08f4e1d45b87d15c588a5e15f6a", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3a7724e44181ccd5c248589538bd82458b5a9407/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a7724e44181ccd5c248589538bd82458b5a9407/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=3a7724e44181ccd5c248589538bd82458b5a9407", "patch": "@@ -116,7 +116,7 @@ fn get_param_name_hints(\n     let hints = parameters\n         .zip(args)\n         .filter_map(|(param, arg)| {\n-            if arg.syntax().kind() == SyntaxKind::LITERAL {\n+            if arg.syntax().kind() == SyntaxKind::LITERAL && !param.is_empty() {\n                 Some((arg.syntax().text_range(), param))\n             } else {\n                 None\n@@ -683,12 +683,12 @@ fn main() {\n struct Test {}\n \n impl Test {\n-    fn method(&self, param: i32) -> i32 {\n+    fn method(&self, mut param: i32) -> i32 {\n         param * 2\n     }\n }\n \n-fn test_func(foo: i32, bar: i32, msg: &str, _: i32, last: i32) -> i32 {\n+fn test_func(mut foo: i32, bar: i32, msg: &str, _: i32, last: i32) -> i32 {\n     foo + bar\n }\n \n@@ -704,37 +704,32 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, None).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [207; 218),\n+                range: [215; 226),\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [251; 252),\n+                range: [259; 260),\n                 kind: ParameterHint,\n                 label: \"foo\",\n             },\n             InlayHint {\n-                range: [254; 255),\n+                range: [262; 263),\n                 kind: ParameterHint,\n                 label: \"bar\",\n             },\n             InlayHint {\n-                range: [257; 264),\n+                range: [265; 272),\n                 kind: ParameterHint,\n                 label: \"msg\",\n             },\n             InlayHint {\n-                range: [266; 267),\n-                kind: ParameterHint,\n-                label: \"_\",\n-            },\n-            InlayHint {\n-                range: [323; 326),\n+                range: [331; 334),\n                 kind: ParameterHint,\n                 label: \"param\",\n             },\n             InlayHint {\n-                range: [350; 354),\n+                range: [358; 362),\n                 kind: ParameterHint,\n                 label: \"param\",\n             },"}, {"sha": "06db4f15fdff59b20884ef3e06c3e9d2aad078a1", "filename": "editors/emacs/rust-analyzer.el", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/3a7724e44181ccd5c248589538bd82458b5a9407/editors%2Femacs%2Frust-analyzer.el", "raw_url": "https://github.com/rust-lang/rust/raw/3a7724e44181ccd5c248589538bd82458b5a9407/editors%2Femacs%2Frust-analyzer.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Frust-analyzer.el?ref=3a7724e44181ccd5c248589538bd82458b5a9407", "patch": "@@ -210,9 +210,9 @@\n ;; inlay hints\n (defun rust-analyzer--update-inlay-hints (buffer)\n   (if (and (rust-analyzer--initialized?) (eq buffer (current-buffer)))\n-    (lsp-send-request-async\n-     (lsp-make-request \"rust-analyzer/inlayHints\"\n-                       (list :textDocument (lsp--text-document-identifier)))\n+    (lsp-request-async\n+     \"rust-analyzer/inlayHints\"\n+     (list :textDocument (lsp--text-document-identifier))\n      (lambda (res)\n        (remove-overlays (point-min) (point-max) 'rust-analyzer--inlay-hint t)\n        (dolist (hint res)\n@@ -221,9 +221,16 @@\n                  (overlay (make-overlay beg end)))\n            (overlay-put overlay 'rust-analyzer--inlay-hint t)\n            (overlay-put overlay 'evaporate t)\n-           (overlay-put overlay 'after-string (propertize (concat \": \" label)\n-                                                          'font-lock-face 'font-lock-comment-face)))))\n-     'tick))\n+           (cond\n+            ((string= kind \"TypeHint\")\n+             (overlay-put overlay 'after-string (propertize (concat \": \" label)\n+                                                            'font-lock-face 'font-lock-comment-face)))\n+            ((string= kind \"ParameterHint\")\n+             (overlay-put overlay 'before-string (propertize (concat label \": \")\n+                                                            'font-lock-face 'font-lock-comment-face)))\n+            )\n+           )))\n+     :mode 'tick))\n   nil)\n \n (defvar-local rust-analyzer--inlay-hints-timer nil)"}]}