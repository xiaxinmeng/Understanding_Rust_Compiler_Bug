{"sha": "79ed23ff815bc39d0062ade40b2c38dd37e77373", "node_id": "C_kwDOAAsO6NoAKDc5ZWQyM2ZmODE1YmMzOWQwMDYyYWRlNDBiMmMzOGRkMzdlNzczNzM", "commit": {"author": {"name": "Raiki Tamura", "email": "tamaron1203@gmail.com", "date": "2023-01-05T09:30:13Z"}, "committer": {"name": "Raiki Tamura", "email": "tamaron1203@gmail.com", "date": "2023-01-05T09:30:13Z"}, "message": "fix", "tree": {"sha": "f8890068101fdaf4256e6ae937ec425d21b12b6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8890068101fdaf4256e6ae937ec425d21b12b6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79ed23ff815bc39d0062ade40b2c38dd37e77373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79ed23ff815bc39d0062ade40b2c38dd37e77373", "html_url": "https://github.com/rust-lang/rust/commit/79ed23ff815bc39d0062ade40b2c38dd37e77373", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79ed23ff815bc39d0062ade40b2c38dd37e77373/comments", "author": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tamaroning", "id": 20992019, "node_id": "MDQ6VXNlcjIwOTkyMDE5", "avatar_url": "https://avatars.githubusercontent.com/u/20992019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tamaroning", "html_url": "https://github.com/tamaroning", "followers_url": "https://api.github.com/users/tamaroning/followers", "following_url": "https://api.github.com/users/tamaroning/following{/other_user}", "gists_url": "https://api.github.com/users/tamaroning/gists{/gist_id}", "starred_url": "https://api.github.com/users/tamaroning/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tamaroning/subscriptions", "organizations_url": "https://api.github.com/users/tamaroning/orgs", "repos_url": "https://api.github.com/users/tamaroning/repos", "events_url": "https://api.github.com/users/tamaroning/events{/privacy}", "received_events_url": "https://api.github.com/users/tamaroning/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61ff54e5c22736bad5fc4f41d3cc36208475510c", "url": "https://api.github.com/repos/rust-lang/rust/commits/61ff54e5c22736bad5fc4f41d3cc36208475510c", "html_url": "https://github.com/rust-lang/rust/commit/61ff54e5c22736bad5fc4f41d3cc36208475510c"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "7cbc456244e404ccea3208fe96d70c6f56731a93", "filename": "clippy_lints/src/loops/single_element_loop.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79ed23ff815bc39d0062ade40b2c38dd37e77373/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ed23ff815bc39d0062ade40b2c38dd37e77373/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fsingle_element_loop.rs?ref=79ed23ff815bc39d0062ade40b2c38dd37e77373", "patch": "@@ -1,13 +1,26 @@\n use super::SINGLE_ELEMENT_LOOP;\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{indent_of, snippet_with_applicability};\n+use clippy_utils::visitors::for_each_expr;\n use if_chain::if_chain;\n use rustc_ast::util::parser::PREC_PREFIX;\n use rustc_ast::Mutability;\n use rustc_errors::Applicability;\n use rustc_hir::{is_range_literal, BorrowKind, Expr, ExprKind, Pat};\n use rustc_lint::LateContext;\n use rustc_span::edition::Edition;\n+use std::ops::ControlFlow;\n+\n+fn contains_break_or_continue(expr: &Expr<'_>) -> bool {\n+    for_each_expr(expr, |e| {\n+        if matches!(e.kind, ExprKind::Break(..) | ExprKind::Continue(..)) {\n+            ControlFlow::Break(())\n+        } else {\n+            ControlFlow::Continue(())\n+        }\n+    })\n+    .is_some()\n+}\n \n pub(super) fn check<'tcx>(\n     cx: &LateContext<'tcx>,\n@@ -67,6 +80,7 @@ pub(super) fn check<'tcx>(\n     if_chain! {\n         if let ExprKind::Block(block, _) = body.kind;\n         if !block.stmts.is_empty();\n+        if !contains_break_or_continue(body);\n         then {\n             let mut applicability = Applicability::MachineApplicable;\n             let pat_snip = snippet_with_applicability(cx, pat.span, \"..\", &mut applicability);"}, {"sha": "a0dcc0172e8b0ba5cba4f7952aad8c521f9023aa", "filename": "tests/ui/single_element_loop.fixed", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.fixed?ref=79ed23ff815bc39d0062ade40b2c38dd37e77373", "patch": "@@ -33,4 +33,31 @@ fn main() {\n         let item = 0..5;\n         dbg!(item);\n     }\n+\n+    // should not lint (issue #10018)\n+    for e in [42] {\n+        if e > 0 {\n+            continue;\n+        }\n+    }\n+\n+    // should not lint (issue #10018)\n+    for e in [42] {\n+        if e > 0 {\n+            break;\n+        }\n+    }\n+\n+    // should lint (issue #10018)\n+    {\n+        let _ = 42;\n+        let _f = |n: u32| {\n+            for i in 0..n {\n+                if i > 10 {\n+                    dbg!(i);\n+                    break;\n+                }\n+            }\n+        };\n+    }\n }"}, {"sha": "bc014035c98a5671c8ccc59c9b96ebff077c646e", "filename": "tests/ui/single_element_loop.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.rs?ref=79ed23ff815bc39d0062ade40b2c38dd37e77373", "patch": "@@ -27,4 +27,30 @@ fn main() {\n     for item in [0..5].into_iter() {\n         dbg!(item);\n     }\n+\n+    // should not lint (issue #10018)\n+    for e in [42] {\n+        if e > 0 {\n+            continue;\n+        }\n+    }\n+\n+    // should not lint (issue #10018)\n+    for e in [42] {\n+        if e > 0 {\n+            break;\n+        }\n+    }\n+\n+    // should lint (issue #10018)\n+    for _ in [42] {\n+        let _f = |n: u32| {\n+            for i in 0..n {\n+                if i > 10 {\n+                    dbg!(i);\n+                    break;\n+                }\n+            }\n+        };\n+    }\n }"}, {"sha": "14437a59745e04896bb17e386eefb04cb505f7a8", "filename": "tests/ui/single_element_loop.stderr", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79ed23ff815bc39d0062ade40b2c38dd37e77373/tests%2Fui%2Fsingle_element_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_element_loop.stderr?ref=79ed23ff815bc39d0062ade40b2c38dd37e77373", "patch": "@@ -95,5 +95,32 @@ LL +         dbg!(item);\n LL +     }\n    |\n \n-error: aborting due to 6 previous errors\n+error: for loop over a single element\n+  --> $DIR/single_element_loop.rs:46:5\n+   |\n+LL | /     for _ in [42] {\n+LL | |         let _f = |n: u32| {\n+LL | |             for i in 0..n {\n+LL | |                 if i > 10 {\n+...  |\n+LL | |         };\n+LL | |     }\n+   | |_____^\n+   |\n+help: try\n+   |\n+LL ~     {\n+LL +         let _ = 42;\n+LL +         let _f = |n: u32| {\n+LL +             for i in 0..n {\n+LL +                 if i > 10 {\n+LL +                     dbg!(i);\n+LL +                     break;\n+LL +                 }\n+LL +             }\n+LL +         };\n+LL +     }\n+   |\n+\n+error: aborting due to 7 previous errors\n "}]}