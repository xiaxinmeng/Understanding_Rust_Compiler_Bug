{"sha": "32a81d1e161a8b4a498c88ddb79955775d18fbfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYTgxZDFlMTYxYThiNGE0OThjODhkZGI3OTk1NTc3NWQxOGZiZmQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-14T16:49:34Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-17T18:11:39Z"}, "message": "configure: Enable libc++ with LLVM with clang\n\nWhen clang is enabled, also pass through --enable-libcpp to LLVM's configure\ncommand line to help it pick up the most recent c++ runtime library. This also\nchanges the mklldeps.py script to pick up on whether LLVM was linked against\nstdc++ or c++ based on the --cxxflags that llvm-config prints.\n\nIn an ongoing attempt to update LLVM, the bots need to update their C compilers\nto something that supports c++11 (LLVM recently switched). The OSX bots are\nrunning Lion (10.7), which only supports up to gcc 4.2 and clang 3.2. Apparently\nthe libstdc++ is too old (even on the most updated command line tools) for LLVM,\nbut using libc++ instead appears to work just fine.", "tree": {"sha": "63c802362f6a81e094f416faa3f6b57c8fd6cfc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c802362f6a81e094f416faa3f6b57c8fd6cfc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32a81d1e161a8b4a498c88ddb79955775d18fbfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32a81d1e161a8b4a498c88ddb79955775d18fbfd", "html_url": "https://github.com/rust-lang/rust/commit/32a81d1e161a8b4a498c88ddb79955775d18fbfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32a81d1e161a8b4a498c88ddb79955775d18fbfd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "30ff17f809869dec37d7b501fb532dc88fd47832", "url": "https://api.github.com/repos/rust-lang/rust/commits/30ff17f809869dec37d7b501fb532dc88fd47832", "html_url": "https://github.com/rust-lang/rust/commit/30ff17f809869dec37d7b501fb532dc88fd47832"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "5b6c26daaa34b6ad1a5978e60f424fe68bd1a4e6", "filename": "configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/32a81d1e161a8b4a498c88ddb79955775d18fbfd/configure", "raw_url": "https://github.com/rust-lang/rust/raw/32a81d1e161a8b4a498c88ddb79955775d18fbfd/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=32a81d1e161a8b4a498c88ddb79955775d18fbfd", "patch": "@@ -938,13 +938,15 @@ do\n \n             LLVM_CXX_64=\"ccache clang++ -Qunused-arguments\"\n             LLVM_CC_64=\"ccache clang -Qunused-arguments\"\n+            LLVM_OPTS=\"$LLVM_OPTS --enable-libcpp\"\n             ;;\n             (\"clang\")\n             LLVM_CXX_32=\"clang++ -m32 -Qunused-arguments\"\n             LLVM_CC_32=\"clang -m32 -Qunused-arguments\"\n \n             LLVM_CXX_64=\"clang++ -Qunused-arguments\"\n             LLVM_CC_64=\"clang -Qunused-arguments\"\n+            LLVM_OPTS=\"$LLVM_OPTS --enable-libcpp\"\n             ;;\n             (\"ccache gcc\")\n             LLVM_CXX_32=\"ccache g++ -m32\""}, {"sha": "8ad9ea2813bedae118c0c26fef39a82ecdb6806b", "filename": "src/etc/mklldeps.py", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/32a81d1e161a8b4a498c88ddb79955775d18fbfd/src%2Fetc%2Fmklldeps.py", "raw_url": "https://github.com/rust-lang/rust/raw/32a81d1e161a8b4a498c88ddb79955775d18fbfd/src%2Fetc%2Fmklldeps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmklldeps.py?ref=32a81d1e161a8b4a498c88ddb79955775d18fbfd", "patch": "@@ -56,7 +56,7 @@\n     f.write(\"#[cfg(\" + ', '.join(cfg) + \")]\\n\")\n \n     # LLVM libs\n-    args = [llconfig, '--libs']\n+    args = [llconfig, '--libs', '--system-libs']\n     args.extend(components)\n     proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     out, err = proc.communicate()\n@@ -65,9 +65,13 @@\n         print(\"failed to run llconfig: args = `{}`\".format(args))\n         sys.exit(1)\n \n-    for lib in out.strip().split(' '):\n-        lib = lib[2:] # chop of the leading '-l'\n-        f.write(\"#[link(name = \\\"\" + lib + \"\\\", kind = \\\"static\\\")]\\n\")\n+    for lib in out.strip().replace(\"\\n\", ' ').split(' '):\n+        lib = lib.strip()[2:] # chop of the leading '-l'\n+        f.write(\"#[link(name = \\\"\" + lib + \"\\\"\")\n+        # LLVM libraries are all static libraries\n+        if 'LLVM' in lib:\n+            f.write(\", kind = \\\"static\\\"\")\n+        f.write(\")]\\n\")\n \n     # LLVM ldflags\n     args = [llconfig, '--ldflags']\n@@ -82,8 +86,19 @@\n         if lib[:2] == \"-l\":\n             f.write(\"#[link(name = \\\"\" + lib[2:] + \"\\\")]\\n\")\n \n-    #extra\n-    f.write(\"#[link(name = \\\"stdc++\\\")]\\n\")\n-    if os == 'win32':\n-        f.write(\"#[link(name = \\\"imagehlp\\\")]\\n\")\n+    # C++ runtime library\n+    args = [llconfig, '--cxxflags']\n+    proc = subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    out, err = proc.communicate()\n+\n+    if err:\n+        print(\"failed to run llconfig: args = `{}`\".format(args))\n+        sys.exit(1)\n+\n+    if 'stdlib=libc++' in out:\n+        f.write(\"#[link(name = \\\"c++\\\")]\\n\")\n+    else:\n+        f.write(\"#[link(name = \\\"stdc++\\\")]\\n\")\n+\n+    # Attach everything to an extern block\n     f.write(\"extern {}\\n\")"}]}