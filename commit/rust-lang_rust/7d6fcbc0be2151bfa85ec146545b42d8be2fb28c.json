{"sha": "7d6fcbc0be2151bfa85ec146545b42d8be2fb28c", "node_id": "C_kwDOAAsO6NoAKDdkNmZjYmMwYmUyMTUxYmZhODVlYzE0NjU0NWI0MmQ4YmUyZmIyOGM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-12-05T15:28:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-05T15:28:28Z"}, "message": "Merge #10944\n\n10944: internal: Prefer resolution of inert attributes r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10942\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "77cb9448ddfe276213be3b01460f2e623b1cf0fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77cb9448ddfe276213be3b01460f2e623b1cf0fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhrNqcCRBK7hj4Ov3rIwAAsiIIAHKmww+OWpenM+lDS+WVZTFt\nIBN5VdgZeZc6yQxKXlEHiFYYJ/bsb7bSeHqe9MwuG0epMABukI9JF6hBq1RRf5PJ\no/mEFeW7a+VWBHSCgqT+9XD5A/AgvFafUBqQmoMFnCDgUKavhMDvtNXBc65bx06v\nr7IZz5IB9A0EoYyR7vFBtNAlmK1shONfLQn+rlapAGm6mpk415g/lHSl56xbAAs4\nIwThTMLz0qvx52OVuCu6T/SZTDKkuEORc4QFzUHZvPJ8GNPcL4Wf/rhtuwo8lgp3\n7SBCmN5lbEC9uIRJJa9JKSH9hWauVU66I8GzNqM8l24Y65VCcqwiZtjzVNpilNU=\n=c7lB\n-----END PGP SIGNATURE-----\n", "payload": "tree 77cb9448ddfe276213be3b01460f2e623b1cf0fc\nparent 6f84bbfa1e277969daacb93b618bfe61c5d667c9\nparent 89e1d19ec5f5275f970b7fc56ecded4a221002f0\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638718108 +0000\ncommitter GitHub <noreply@github.com> 1638718108 +0000\n\nMerge #10944\n\n10944: internal: Prefer resolution of inert attributes r=Veykril a=Veykril\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/10942\r\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c", "html_url": "https://github.com/rust-lang/rust/commit/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f84bbfa1e277969daacb93b618bfe61c5d667c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f84bbfa1e277969daacb93b618bfe61c5d667c9", "html_url": "https://github.com/rust-lang/rust/commit/6f84bbfa1e277969daacb93b618bfe61c5d667c9"}, {"sha": "89e1d19ec5f5275f970b7fc56ecded4a221002f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/89e1d19ec5f5275f970b7fc56ecded4a221002f0", "html_url": "https://github.com/rust-lang/rust/commit/89e1d19ec5f5275f970b7fc56ecded4a221002f0"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "880596b37cd28ea2ce7d633819d521dfd3385255", "filename": "crates/hir/src/source_analyzer.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6fcbc0be2151bfa85ec146545b42d8be2fb28c/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsource_analyzer.rs?ref=7d6fcbc0be2151bfa85ec146545b42d8be2fb28c", "patch": "@@ -335,17 +335,16 @@ impl SourceAnalyzer {\n                 }\n             }\n         } else if is_path_of_attr {\n-            let res = resolve_hir_path_as_macro(db, &self.resolver, &hir_path);\n-            return match res {\n-                Some(_) => res.map(PathResolution::Macro),\n-                None => path.as_single_name_ref().and_then(|name_ref| {\n-                    if let builtin @ Some(_) = BuiltinAttr::by_name(&name_ref.text()) {\n-                        builtin.map(PathResolution::BuiltinAttr)\n-                    } else if let tool @ Some(_) = ToolModule::by_name(&name_ref.text()) {\n-                        tool.map(PathResolution::ToolModule)\n-                    } else {\n-                        None\n-                    }\n+            let name_ref = path.as_single_name_ref();\n+            let builtin =\n+                name_ref.as_ref().map(ast::NameRef::text).as_deref().and_then(BuiltinAttr::by_name);\n+            if let builtin @ Some(_) = builtin {\n+                return builtin.map(PathResolution::BuiltinAttr);\n+            }\n+            return match resolve_hir_path_as_macro(db, &self.resolver, &hir_path) {\n+                res @ Some(m) if m.is_attr() => res.map(PathResolution::Macro),\n+                _ => name_ref.and_then(|name_ref| {\n+                    ToolModule::by_name(&name_ref.text()).map(PathResolution::ToolModule)\n                 }),\n             };\n         }"}]}