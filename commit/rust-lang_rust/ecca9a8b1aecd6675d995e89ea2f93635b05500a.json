{"sha": "ecca9a8b1aecd6675d995e89ea2f93635b05500a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjY2E5YThiMWFlY2Q2Njc1ZDk5NWU4OWVhMmY5MzYzNWIwNTUwMGE=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-06-29T14:53:44Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-07-06T18:11:45Z"}, "message": "Add s to FUTURE_PRELUDE_COLLISION", "tree": {"sha": "8bf60f47d155fa7f958be4eedc166bb5381d8f36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bf60f47d155fa7f958be4eedc166bb5381d8f36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecca9a8b1aecd6675d995e89ea2f93635b05500a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecca9a8b1aecd6675d995e89ea2f93635b05500a", "html_url": "https://github.com/rust-lang/rust/commit/ecca9a8b1aecd6675d995e89ea2f93635b05500a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecca9a8b1aecd6675d995e89ea2f93635b05500a/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d49658f5c7adc403311b815c9ec8d23e4551de2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d49658f5c7adc403311b815c9ec8d23e4551de2", "html_url": "https://github.com/rust-lang/rust/commit/1d49658f5c7adc403311b815c9ec8d23e4551de2"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "a276cb14acb44d5e383a2ff270d3b68e7178b044", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -2972,7 +2972,7 @@ declare_lint_pass! {\n         PROC_MACRO_BACK_COMPAT,\n         RUST_2021_INCOMPATIBLE_OR_PATTERNS,\n         LARGE_ASSIGNMENTS,\n-        FUTURE_PRELUDE_COLLISION,\n+        FUTURE_PRELUDE_COLLISIONS,\n         RESERVED_PREFIX,\n         UNSUPPORTED_CALLING_CONVENTIONS,\n     ]\n@@ -3221,13 +3221,13 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `future_prelude_collision` lint detects the usage of trait methods which are ambiguous\n+    /// The `future_prelude_collisions` lint detects the usage of trait methods which are ambiguous\n     /// with traits added to the prelude in future editions.\n     ///\n     /// ### Example\n     ///\n     /// ```rust,compile_fail\n-    /// #![deny(future_prelude_collision)]\n+    /// #![deny(future_prelude_collisions)]\n     ///\n     /// trait Foo {\n     ///     fn try_into(self) -> Result<String, !>;\n@@ -3259,7 +3259,7 @@ declare_lint! {\n     ///  is called directly on a type.\n     ///\n     /// [prelude changes]: https://blog.rust-lang.org/inside-rust/2021/03/04/planning-rust-2021.html#prelude-changes\n-    pub FUTURE_PRELUDE_COLLISION,\n+    pub FUTURE_PRELUDE_COLLISIONS,\n     Allow,\n     \"detects the usage of trait methods which are ambiguous with traits added to the \\\n         prelude in future editions\","}, {"sha": "cf17ff2eab5be1e735fad47ee1ff248f6eaf8689", "filename": "compiler/rustc_typeck/src/check/method/prelude2021.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fprelude2021.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -5,7 +5,7 @@ use rustc_ast::Mutability;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_middle::ty::{Ref, Ty};\n-use rustc_session::lint::builtin::FUTURE_PRELUDE_COLLISION;\n+use rustc_session::lint::builtin::FUTURE_PRELUDE_COLLISIONS;\n use rustc_span::symbol::kw::Underscore;\n use rustc_span::symbol::{sym, Ident};\n use rustc_span::Span;\n@@ -67,7 +67,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // Inherent impls only require not relying on autoref and autoderef in order to\n             // ensure that the trait implementation won't be used\n             self.tcx.struct_span_lint_hir(\n-                FUTURE_PRELUDE_COLLISION,\n+                FUTURE_PRELUDE_COLLISIONS,\n                 self_expr.hir_id,\n                 self_expr.span,\n                 |lint| {\n@@ -128,7 +128,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             // trait implementations require full disambiguation to not clash with the new prelude\n             // additions (i.e. convert from dot-call to fully-qualified call)\n             self.tcx.struct_span_lint_hir(\n-                FUTURE_PRELUDE_COLLISION,\n+                FUTURE_PRELUDE_COLLISIONS,\n                 call_expr.hir_id,\n                 call_expr.span,\n                 |lint| {\n@@ -212,7 +212,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             return;\n         }\n \n-        self.tcx.struct_span_lint_hir(FUTURE_PRELUDE_COLLISION, expr_id, span, |lint| {\n+        self.tcx.struct_span_lint_hir(FUTURE_PRELUDE_COLLISIONS, expr_id, span, |lint| {\n             // \"type\" refers to either a type or, more likely, a trait from which\n             // the associated function or method is from.\n             let trait_path = self.trait_path_or_bare_name(span, expr_id, pick.item.container.id());"}, {"sha": "e37b4cd09601011365a1fdcdb3ccb718c937d853", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.fixed?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "a560c4b92e1ee62ac729dfb106fea4f3a5be3281", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "da455f2d15a225d136dfdde372e6baf7a257649f", "filename": "src/test/ui/rust-2021/future-prelude-collision-imported.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-imported.stderr?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -7,8 +7,8 @@ LL |         let _: u32 = 3u8.try_into().unwrap();\n note: the lint level is defined here\n   --> $DIR/future-prelude-collision-imported.rs:4:9\n    |\n-LL | #![warn(future_prelude_collision)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(future_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "7e64f9ae7bf0435f831b08b111311fbedff88fcc", "filename": "src/test/ui/rust-2021/future-prelude-collision-shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-shadow.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "1c809d0ba09d4b5b155e785846c6d933a1e0b04a", "filename": "src/test/ui/rust-2021/future-prelude-collision-unneeded.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision-unneeded.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,12 +1,14 @@\n // edition:2018\n // check-pass\n #![allow(unused)]\n-#![deny(future_prelude_collision)]\n+#![deny(future_prelude_collisions)]\n \n struct S;\n \n impl S {\n-    fn try_into(self) -> S { S }\n+    fn try_into(self) -> S {\n+        S\n+    }\n }\n \n // See https://github.com/rust-lang/rust/issues/86633"}, {"sha": "c8f29c325d9a9c99221e376a1289f2b59da66ec0", "filename": "src/test/ui/rust-2021/future-prelude-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.fixed?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(self) -> Result<u32, ()>;"}, {"sha": "7059535b8777e5362b32af1027970674e2870dee", "filename": "src/test/ui/rust-2021/future-prelude-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n // edition:2018\n // check-pass\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(self) -> Result<u32, ()>;"}, {"sha": "46e52baf83814cf1abe88d721692a0d7ad2f8e9f", "filename": "src/test/ui/rust-2021/future-prelude-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Ffuture-prelude-collision.stderr?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -7,8 +7,8 @@ LL |     let _: u32 = 3u8.try_into().unwrap();\n note: the lint level is defined here\n   --> $DIR/future-prelude-collision.rs:4:9\n    |\n-LL | #![warn(future_prelude_collision)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(future_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "9851a1d42b67d93de30db92d41c92cc253e77f67", "filename": "src/test/ui/rust-2021/generic-type-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.fixed?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // run-rustfix\n // edition 2018\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait MyTrait<A> {\n     fn from_iter(x: Option<A>);"}, {"sha": "18deaa55cfe3e5f8555abac86999995d53af0495", "filename": "src/test/ui/rust-2021/generic-type-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n // run-rustfix\n // edition 2018\n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait MyTrait<A> {\n     fn from_iter(x: Option<A>);"}, {"sha": "1839c3e72792364a0688eba1db3167a2a5830dde", "filename": "src/test/ui/rust-2021/generic-type-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Fgeneric-type-collision.stderr?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -7,8 +7,8 @@ LL |     <Vec<i32>>::from_iter(None);\n note: the lint level is defined here\n   --> $DIR/generic-type-collision.rs:4:9\n    |\n-LL | #![warn(future_prelude_collision)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(future_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "d6be9e56f96c1fd580d6310603b54e34622ee677", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.fixed?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -5,7 +5,7 @@\n // run-rustfix\n // edition:2018\n \n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(&self) -> Result<u32, ()>;"}, {"sha": "67be6157d45b28314a471c8a6760b36b65cf6f18", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -5,7 +5,7 @@\n // run-rustfix\n // edition:2018\n \n-#![warn(future_prelude_collision)]\n+#![warn(future_prelude_collisions)]\n \n trait TryIntoU32 {\n     fn try_into(&self) -> Result<u32, ()>;"}, {"sha": "4d7a04735aca023f439634bbdb7798b029aa4bb1", "filename": "src/test/ui/rust-2021/inherent-dyn-collision.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-dyn-collision.stderr?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -7,8 +7,8 @@ LL |         get_dyn_trait().try_into().unwrap()\n note: the lint level is defined here\n   --> $DIR/inherent-dyn-collision.rs:8:9\n    |\n-LL | #![warn(future_prelude_collision)]\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![warn(future_prelude_collisions)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = warning: this is accepted in the current edition (Rust 2018) but is a hard error in Rust 2021!\n    = note: for more information, see issue #85684 <https://github.com/rust-lang/rust/issues/85684>\n "}, {"sha": "f99d98bd8901e027287dcd6f3f2d5a20d83f7143", "filename": "src/test/ui/rust-2021/inherent-method-collision.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecca9a8b1aecd6675d995e89ea2f93635b05500a/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Finherent-method-collision.rs?ref=ecca9a8b1aecd6675d995e89ea2f93635b05500a", "patch": "@@ -2,7 +2,7 @@\n //\n // check-pass\n \n-#![deny(future_prelude_collision)]\n+#![deny(future_prelude_collisions)]\n \n pub struct MySeq {}\n "}]}