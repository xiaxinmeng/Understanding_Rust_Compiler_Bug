{"sha": "0c53b215de0c57833756300e81ac9c5f84a541a3", "node_id": "C_kwDOAAsO6NoAKDBjNTNiMjE1ZGUwYzU3ODMzNzU2MzAwZTgxYWM5YzVmODRhNTQxYTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-01-25T11:31:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-25T11:31:42Z"}, "message": "Rollup merge of #106823 - m-ou-se:format-args-as-str-guarantees, r=dtolnay\n\nAllow fmt::Arguments::as_str() to return more Some(_).\n\nThis adjusts the documentation to allow optimization of format_args!() to be visible through fmt::Arguments::as_str().\n\nThis allows for future changes like https://github.com/rust-lang/rust/pull/106824.", "tree": {"sha": "2ce5f0b6bd7dbe2a93ded41509cbeef83c9723b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ce5f0b6bd7dbe2a93ded41509cbeef83c9723b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c53b215de0c57833756300e81ac9c5f84a541a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0RMeCRBK7hj4Ov3rIwAAgpUIAKoeCZv6slp+17teOsrppBuy\nSQRjVgTmftjYjj4tINU+A5lRDAJzocUtgvzFRxz5GHmt46k9gTi/Rc0js77LZMML\nyxm4pgGC4cf6YdhPi68xL+CEZd3kOQ9LycCJsDaBEvxPraMJqksEjcUSlPJOF8Ie\nhHMBVmsU48JoKvcZyS1wD/NfTf93aukcB9D3Kue5jFms7/UvN9awEgJx1X7Mblci\nMQKoFLrD0n6AWrRe2t1+U4ruyXfFkpVKssTO8cpmx57DcCuqe05pGBR/HaPYsbKN\nvjJVDjfzzdmEoS095QlBnQcprdKLZPugln2LIlmS/1DvNGmtjpS2f42MPW5+lQo=\n=wu52\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ce5f0b6bd7dbe2a93ded41509cbeef83c9723b2\nparent 9e6873f7888c64bbded5de761489c0a0f0df826b\nparent a37b4842220a647902a25fcfe68a7d52cda056ad\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1674646302 +0530\ncommitter GitHub <noreply@github.com> 1674646302 +0530\n\nRollup merge of #106823 - m-ou-se:format-args-as-str-guarantees, r=dtolnay\n\nAllow fmt::Arguments::as_str() to return more Some(_).\n\nThis adjusts the documentation to allow optimization of format_args!() to be visible through fmt::Arguments::as_str().\n\nThis allows for future changes like https://github.com/rust-lang/rust/pull/106824.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c53b215de0c57833756300e81ac9c5f84a541a3", "html_url": "https://github.com/rust-lang/rust/commit/0c53b215de0c57833756300e81ac9c5f84a541a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c53b215de0c57833756300e81ac9c5f84a541a3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e6873f7888c64bbded5de761489c0a0f0df826b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e6873f7888c64bbded5de761489c0a0f0df826b", "html_url": "https://github.com/rust-lang/rust/commit/9e6873f7888c64bbded5de761489c0a0f0df826b"}, {"sha": "a37b4842220a647902a25fcfe68a7d52cda056ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/a37b4842220a647902a25fcfe68a7d52cda056ad", "html_url": "https://github.com/rust-lang/rust/commit/a37b4842220a647902a25fcfe68a7d52cda056ad"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "0145ba5e3cde63815a4c80a7b76bfc91873fbb0b", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0c53b215de0c57833756300e81ac9c5f84a541a3/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c53b215de0c57833756300e81ac9c5f84a541a3/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=0c53b215de0c57833756300e81ac9c5f84a541a3", "patch": "@@ -489,9 +489,26 @@ pub struct Arguments<'a> {\n }\n \n impl<'a> Arguments<'a> {\n-    /// Get the formatted string, if it has no arguments to be formatted.\n+    /// Get the formatted string, if it has no arguments to be formatted at runtime.\n     ///\n-    /// This can be used to avoid allocations in the most trivial case.\n+    /// This can be used to avoid allocations in some cases.\n+    ///\n+    /// # Guarantees\n+    ///\n+    /// For `format_args!(\"just a literal\")`, this function is guaranteed to\n+    /// return `Some(\"just a literal\")`.\n+    ///\n+    /// For most cases with placeholders, this function will return `None`.\n+    ///\n+    /// However, the compiler may perform optimizations that can cause this\n+    /// function to return `Some(_)` even if the format string contains\n+    /// placeholders. For example, `format_args!(\"Hello, {}!\", \"world\")` may be\n+    /// optimized to `format_args!(\"Hello, world!\")`, such that `as_str()`\n+    /// returns `Some(\"Hello, world!\")`.\n+    ///\n+    /// The behavior for anything but the trivial case (without placeholders)\n+    /// is not guaranteed, and should not be relied upon for anything other\n+    /// than optimization.\n     ///\n     /// # Examples\n     ///\n@@ -512,7 +529,7 @@ impl<'a> Arguments<'a> {\n     /// ```rust\n     /// assert_eq!(format_args!(\"hello\").as_str(), Some(\"hello\"));\n     /// assert_eq!(format_args!(\"\").as_str(), Some(\"\"));\n-    /// assert_eq!(format_args!(\"{}\", 1).as_str(), None);\n+    /// assert_eq!(format_args!(\"{:?}\", std::env::current_dir()).as_str(), None);\n     /// ```\n     #[stable(feature = \"fmt_as_str\", since = \"1.52.0\")]\n     #[rustc_const_unstable(feature = \"const_arguments_as_str\", issue = \"103900\")]"}]}