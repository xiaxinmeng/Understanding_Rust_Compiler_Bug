{"sha": "d0f56db9630f4b01a6a170aac220aa1b891d5016", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwZjU2ZGI5NjMwZjRiMDFhNmExNzBhYWMyMjBhYTFiODkxZDUwMTY=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-24T19:50:38Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-26T22:14:43Z"}, "message": "Change expected error message in kindchk compile-fail tests.", "tree": {"sha": "39fa09635e12e145b605363b2bce6cd44004d86a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39fa09635e12e145b605363b2bce6cd44004d86a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0f56db9630f4b01a6a170aac220aa1b891d5016", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f56db9630f4b01a6a170aac220aa1b891d5016", "html_url": "https://github.com/rust-lang/rust/commit/d0f56db9630f4b01a6a170aac220aa1b891d5016", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0f56db9630f4b01a6a170aac220aa1b891d5016/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffc8c0ba210630121c58290b1652fea66e0d1da8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc8c0ba210630121c58290b1652fea66e0d1da8", "html_url": "https://github.com/rust-lang/rust/commit/ffc8c0ba210630121c58290b1652fea66e0d1da8"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "38983a9aca6a0c38ed4635f6fb27edd652bef50f", "filename": "src/test/compile-fail/kindck-nonsendable-1.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs?ref=d0f56db9630f4b01a6a170aac220aa1b891d5016", "patch": "@@ -12,7 +12,7 @@ fn foo(_x: @uint) {}\n \n fn main() {\n     let x = @3u;\n-    let _: ~fn() = || foo(x); //~ ERROR value has non-owned type `@uint`\n-    let _: ~fn() = || foo(x); //~ ERROR value has non-owned type `@uint`\n-    let _: ~fn() = || foo(x); //~ ERROR value has non-owned type `@uint`\n+    let _: ~fn() = || foo(x); //~ ERROR does not fulfill `Owned`\n+    let _: ~fn() = || foo(x); //~ ERROR does not fulfill `Owned`\n+    let _: ~fn() = || foo(x); //~ ERROR does not fulfill `Owned`\n }"}, {"sha": "c2352e35a46e92add4e236393c5ab616a5fd2e1e", "filename": "src/test/compile-fail/kindck-owned-trait.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-owned-trait.rs?ref=d0f56db9630f4b01a6a170aac220aa1b891d5016", "patch": "@@ -11,7 +11,9 @@\n trait foo { fn foo(&self); }\n \n fn to_foo<T:Copy + foo>(t: T) -> @foo {\n-    @t as @foo //~ ERROR value may contain borrowed pointers; add `'static` bound\n+    @t as @foo\n+    //~^ ERROR value may contain borrowed pointers; add `'static` bound\n+    //~^^ ERROR cannot pack type\n }\n \n fn to_foo2<T:Copy + foo + 'static>(t: T) -> @foo {"}, {"sha": "3f859b7dc84e65609f32a78ee4c63ef8f7e280ea", "filename": "src/test/compile-fail/kindck-owned.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fkindck-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-owned.rs?ref=d0f56db9630f4b01a6a170aac220aa1b891d5016", "patch": "@@ -9,8 +9,7 @@\n // except according to those terms.\n \n fn copy1<T:Copy>(t: T) -> @fn() -> T {\n-    let result: @fn() -> T = || copy t;\n-    //~^ ERROR value may contain borrowed pointers\n+    let result: @fn() -> T = || copy t; //~ ERROR does not fulfill `'static`\n     result\n }\n "}, {"sha": "605e59d56c893151c8dbf54285d7e605f5820138", "filename": "src/test/compile-fail/no-send-res-ports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0f56db9630f4b01a6a170aac220aa1b891d5016/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs?ref=d0f56db9630f4b01a6a170aac220aa1b891d5016", "patch": "@@ -32,7 +32,7 @@ fn main() {\n     let x = Cell::new(foo(Port(@())));\n \n     do task::spawn {\n-        let y = x.take();   //~ ERROR value has non-owned type\n+        let y = x.take();   //~ ERROR does not fulfill `Owned`\n         error!(y);\n     }\n }"}]}