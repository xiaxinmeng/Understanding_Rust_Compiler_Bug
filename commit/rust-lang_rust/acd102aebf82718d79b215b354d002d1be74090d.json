{"sha": "acd102aebf82718d79b215b354d002d1be74090d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDEwMmFlYmY4MjcxOGQ3OWIyMTViMzU0ZDAwMmQxYmU3NDA5MGQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-09-29T16:34:51Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-10-03T22:12:28Z"}, "message": "metadata: Do not pass crate name after renaming to `register_crate`\n\nIt's entirely irrelevant to crate loading", "tree": {"sha": "3a2fe6d39dcaceb912cfa23817f0c303184aaa2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a2fe6d39dcaceb912cfa23817f0c303184aaa2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd102aebf82718d79b215b354d002d1be74090d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd102aebf82718d79b215b354d002d1be74090d", "html_url": "https://github.com/rust-lang/rust/commit/acd102aebf82718d79b215b354d002d1be74090d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd102aebf82718d79b215b354d002d1be74090d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b507971119198600a9afca52f76a0a8441160152", "url": "https://api.github.com/repos/rust-lang/rust/commits/b507971119198600a9afca52f76a0a8441160152", "html_url": "https://github.com/rust-lang/rust/commit/b507971119198600a9afca52f76a0a8441160152"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "83727d6714d74726ab37f69386d0ea495fea7f31", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acd102aebf82718d79b215b354d002d1be74090d/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd102aebf82718d79b215b354d002d1be74090d/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=acd102aebf82718d79b215b354d002d1be74090d", "patch": "@@ -191,7 +191,6 @@ impl<'a> CrateLoader<'a> {\n         &mut self,\n         host_lib: Option<Library>,\n         root: &Option<CratePaths>,\n-        ident: Symbol,\n         span: Span,\n         lib: Library,\n         dep_kind: DepKind,\n@@ -204,16 +203,15 @@ impl<'a> CrateLoader<'a> {\n             .map(|e| e.is_private_dep)\n             .unwrap_or(false);\n \n-        info!(\"register crate `extern crate {} as {}` (private_dep = {})\",\n-            crate_root.name, ident, private_dep);\n+        info!(\"register crate `{}` (private_dep = {})\", crate_root.name, private_dep);\n \n         // Claim this crate number and cache it\n         let cnum = self.cstore.alloc_new_crate_num();\n \n         // Stash paths for top-most crate locally if necessary.\n         let crate_paths = if root.is_none() {\n             Some(CratePaths {\n-                ident: ident.to_string(),\n+                ident: crate_root.name.to_string(),\n                 dylib: lib.dylib.clone().map(|p| p.0),\n                 rlib:  lib.rlib.clone().map(|p| p.0),\n                 rmeta: lib.rmeta.clone().map(|p| p.0),\n@@ -391,7 +389,7 @@ impl<'a> CrateLoader<'a> {\n                 Ok((cnum, data))\n             }\n             (LoadResult::Loaded(library), host_library) => {\n-                Ok(self.register_crate(host_library, root, ident, span, library, dep_kind, name))\n+                Ok(self.register_crate(host_library, root, span, library, dep_kind, name))\n             }\n             _ => panic!()\n         }"}]}