{"sha": "34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MTgyODA0ZTg2NmE5ZjJmMGM5MzdhYWQ1ZTAxZjhmMmI3YzBmZGE=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-07-26T17:12:25Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-08-06T10:21:01Z"}, "message": "Move some code around in preparation of splitting a function", "tree": {"sha": "4793e2fc7e7b6784752a7b55ae7dab0dffb3a5b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4793e2fc7e7b6784752a7b55ae7dab0dffb3a5b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "html_url": "https://github.com/rust-lang/rust/commit/34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34182804e866a9f2f0c937aad5e01f8f2b7c0fda/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14021feea92f1bb7a71338ba96bfe81ab6b9604d", "url": "https://api.github.com/repos/rust-lang/rust/commits/14021feea92f1bb7a71338ba96bfe81ab6b9604d", "html_url": "https://github.com/rust-lang/rust/commit/14021feea92f1bb7a71338ba96bfe81ab6b9604d"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "f74b9070535c0c28dd54911ff2698f547c25c5c1", "filename": "compiler/rustc_trait_selection/src/opaque_types.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/34182804e866a9f2f0c937aad5e01f8f2b7c0fda/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34182804e866a9f2f0c937aad5e01f8f2b7c0fda/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fopaque_types.rs?ref=34182804e866a9f2f0c937aad5e01f8f2b7c0fda", "patch": "@@ -981,21 +981,6 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n         let ty_var = infcx\n             .next_ty_var(TypeVariableOrigin { kind: TypeVariableOriginKind::TypeInference, span });\n \n-        let item_bounds = tcx.explicit_item_bounds(def_id);\n-        debug!(\"instantiate_opaque_types: bounds={:#?}\", item_bounds);\n-        let bounds: Vec<_> =\n-            item_bounds.iter().map(|(bound, _)| bound.subst(tcx, substs)).collect();\n-\n-        let param_env = tcx.param_env(def_id);\n-        let InferOk { value: bounds, obligations } = infcx.partially_normalize_associated_types_in(\n-            ObligationCause::misc(span, self.body_id),\n-            param_env,\n-            bounds,\n-        );\n-        self.obligations.extend(obligations);\n-\n-        debug!(\"instantiate_opaque_types: bounds={:?}\", bounds);\n-\n         // Make sure that we are in fact defining the *entire* type\n         // (e.g., `type Foo<T: Bound> = impl Bar;` needs to be\n         // defined by a function like `fn foo<T: Bound>() -> Foo<T>`).\n@@ -1015,6 +1000,21 @@ impl<'a, 'tcx> Instantiator<'a, 'tcx> {\n         );\n         debug!(\"instantiate_opaque_types: ty_var={:?}\", ty_var);\n \n+        let item_bounds = tcx.explicit_item_bounds(def_id);\n+        debug!(\"instantiate_opaque_types: bounds={:#?}\", item_bounds);\n+        let bounds: Vec<_> =\n+            item_bounds.iter().map(|(bound, _)| bound.subst(tcx, substs)).collect();\n+\n+        let param_env = tcx.param_env(def_id);\n+        let InferOk { value: bounds, obligations } = infcx.partially_normalize_associated_types_in(\n+            ObligationCause::misc(span, self.body_id),\n+            param_env,\n+            bounds,\n+        );\n+        self.obligations.extend(obligations);\n+\n+        debug!(\"instantiate_opaque_types: bounds={:?}\", bounds);\n+\n         for predicate in &bounds {\n             if let ty::PredicateKind::Projection(projection) = predicate.kind().skip_binder() {\n                 if projection.ty.references_error() {"}]}