{"sha": "6fd144c0946cdb1993e3feabb1b42e27ef8aaf70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZDE0NGMwOTQ2Y2RiMTk5M2UzZmVhYmIxYjQyZTI3ZWY4YWFmNzA=", "commit": {"author": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2014-09-24T04:47:25Z"}, "committer": {"name": "NODA, Kai", "email": "nodakai@gmail.com", "date": "2014-09-25T08:10:07Z"}, "message": "rustdoc: replace DIV inside H1 with SPAN.\n\nW3C HTML5 spec states that H1 must enclose \"phrasing content\" which\ndoesn't include DIV.  But SPAN is OK.\nhttp://www.w3.org/TR/html5/sections.html#the-h1,-h2,-h3,-h4,-h5,-and-h6-elements", "tree": {"sha": "70b3dfdb072ac5c757d2171a89eaeef301b0f078", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b3dfdb072ac5c757d2171a89eaeef301b0f078"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70", "html_url": "https://github.com/rust-lang/rust/commit/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70/comments", "author": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nodakai", "id": 90726, "node_id": "MDQ6VXNlcjkwNzI2", "avatar_url": "https://avatars.githubusercontent.com/u/90726?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nodakai", "html_url": "https://github.com/nodakai", "followers_url": "https://api.github.com/users/nodakai/followers", "following_url": "https://api.github.com/users/nodakai/following{/other_user}", "gists_url": "https://api.github.com/users/nodakai/gists{/gist_id}", "starred_url": "https://api.github.com/users/nodakai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nodakai/subscriptions", "organizations_url": "https://api.github.com/users/nodakai/orgs", "repos_url": "https://api.github.com/users/nodakai/repos", "events_url": "https://api.github.com/users/nodakai/events{/privacy}", "received_events_url": "https://api.github.com/users/nodakai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e13d3aa00e8cfdf1a64f58f6c649460400231c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e13d3aa00e8cfdf1a64f58f6c649460400231c0", "html_url": "https://github.com/rust-lang/rust/commit/5e13d3aa00e8cfdf1a64f58f6c649460400231c0"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "3cd3fe3053a375cb5d87317d78bce9e5929d0e21", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd144c0946cdb1993e3feabb1b42e27ef8aaf70/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=6fd144c0946cdb1993e3feabb1b42e27ef8aaf70", "patch": "@@ -1304,7 +1304,7 @@ impl<'a> Item<'a> {\n impl<'a> fmt::Show for Item<'a> {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         // Write the breadcrumb trail header for the top\n-        try!(write!(fmt, \"\\n<h1 class='fqn'><div class='in-band'>\"));\n+        try!(write!(fmt, \"\\n<h1 class='fqn'><span class='in-band'>\"));\n         match self.item.inner {\n             clean::ModuleItem(ref m) => if m.is_crate {\n                     try!(write!(fmt, \"Crate \"));\n@@ -1337,8 +1337,9 @@ impl<'a> fmt::Show for Item<'a> {\n         // Write stability level\n         try!(write!(fmt, \"<wbr>{}\", Stability(&self.item.stability)));\n \n+        try!(write!(fmt, \"</span>\")); // in-band\n         // Links to out-of-band information, i.e. src and stability dashboard\n-        try!(write!(fmt, \"</div><div class='out-of-band'>\"));\n+        try!(write!(fmt, \"<span class='out-of-band'>\"));\n \n         // Write stability dashboard link\n         match self.item.inner {\n@@ -1370,7 +1371,7 @@ impl<'a> fmt::Show for Item<'a> {\n             }\n         }\n \n-        try!(write!(fmt, \"</div>\"));\n+        try!(write!(fmt, \"</span>\")); // out-of-band\n \n         try!(write!(fmt, \"</h1>\\n\"));\n "}]}