{"sha": "c15c22139faacd41cc7e098a15aa6b820e0a20ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNWMyMjEzOWZhYWNkNDFjYzdlMDk4YTE1YWE2YjgyMGUwYTIwYWI=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-06-24T11:07:03Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2020-06-24T11:07:03Z"}, "message": "Make Debug less verbose for VfsPath and use Display in analysis-stats", "tree": {"sha": "604561ee29b4ef3fabb68cf269b07a85db3154a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/604561ee29b4ef3fabb68cf269b07a85db3154a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c15c22139faacd41cc7e098a15aa6b820e0a20ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c15c22139faacd41cc7e098a15aa6b820e0a20ab", "html_url": "https://github.com/rust-lang/rust/commit/c15c22139faacd41cc7e098a15aa6b820e0a20ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c15c22139faacd41cc7e098a15aa6b820e0a20ab/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dff62def2ea31e7eb0b010c35d60cd53318eab80", "url": "https://api.github.com/repos/rust-lang/rust/commits/dff62def2ea31e7eb0b010c35d60cd53318eab80", "html_url": "https://github.com/rust-lang/rust/commit/dff62def2ea31e7eb0b010c35d60cd53318eab80"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "2f4c29e068249295b9f1d54583a265db9ecef8d1", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c15c22139faacd41cc7e098a15aa6b820e0a20ab/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c15c22139faacd41cc7e098a15aa6b820e0a20ab/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=c15c22139faacd41cc7e098a15aa6b820e0a20ab", "patch": "@@ -121,7 +121,7 @@ pub fn analysis_stats(\n             let original_file = src.file_id.original_file(db);\n             let path = vfs.file_path(original_file);\n             let syntax_range = src.value.syntax().text_range();\n-            format_to!(msg, \" ({:?} {:?})\", path, syntax_range);\n+            format_to!(msg, \" ({} {:?})\", path, syntax_range);\n         }\n         if verbosity.is_spammy() {\n             bar.println(msg.to_string());"}, {"sha": "940f91d0e5a213e1ae9f3e090d48d0a42e676eb5", "filename": "crates/vfs/src/vfs_path.rs", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c15c22139faacd41cc7e098a15aa6b820e0a20ab/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c15c22139faacd41cc7e098a15aa6b820e0a20ab/crates%2Fvfs%2Fsrc%2Fvfs_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Fvfs_path.rs?ref=c15c22139faacd41cc7e098a15aa6b820e0a20ab", "patch": "@@ -5,7 +5,7 @@ use paths::{AbsPath, AbsPathBuf};\n \n /// Long-term, we want to support files which do not reside in the file-system,\n /// so we treat VfsPaths as opaque identifiers.\n-#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n pub struct VfsPath(VfsPathRepr);\n \n impl VfsPath {\n@@ -50,7 +50,7 @@ impl VfsPath {\n     }\n }\n \n-#[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n+#[derive(Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n enum VfsPathRepr {\n     PathBuf(AbsPathBuf),\n     VirtualPath(VirtualPath),\n@@ -71,6 +71,21 @@ impl fmt::Display for VfsPath {\n     }\n }\n \n+impl fmt::Debug for VfsPath {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        fmt::Debug::fmt(&self.0, f)\n+    }\n+}\n+\n+impl fmt::Debug for VfsPathRepr {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match &self {\n+            VfsPathRepr::PathBuf(it) => fmt::Debug::fmt(&it.display(), f),\n+            VfsPathRepr::VirtualPath(VirtualPath(it)) => fmt::Debug::fmt(&it, f),\n+        }\n+    }\n+}\n+\n #[derive(Debug, Clone, Ord, PartialOrd, Eq, PartialEq, Hash)]\n struct VirtualPath(String);\n "}]}