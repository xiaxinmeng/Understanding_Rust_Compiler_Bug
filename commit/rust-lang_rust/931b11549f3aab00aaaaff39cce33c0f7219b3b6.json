{"sha": "931b11549f3aab00aaaaff39cce33c0f7219b3b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMWIxMTU0OWYzYWFiMDBhYWFhZmYzOWNjZTMzYzBmNzIxOWIzYjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-14T00:51:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-14T00:51:05Z"}, "message": "auto merge of #17189 : bkoropoff/rust/extern-existing-crate, r=alexcrichton\n\nWhen checking for an existing crate, compare against the `crate_metadata::name` field, which is the crate name which was requested during resolution, rather than the result of the `crate_metadata::name()` method, which is the crate name within the crate metadata, as these may not match when using the --extern option to `rustc`.\r\n\r\nThis fixes spurious \"multiple crate version\" warnings under the following scenario:\r\n\r\n- The crate `foo`, is referenced multiple times\r\n- `--extern foo=./path/to/libbar.rlib` is specified to rustc\r\n- The internal crate name of `libbar.rlib` is not `foo`\r\n\r\nThe behavior surrounding `Context::should_match_name` and the comments in `loader.rs` both lead me to believe that this scenario is intended to work.\r\n\r\nFixes #17186", "tree": {"sha": "db06daabf58611692de3b7d914dc8a40b168b9ed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db06daabf58611692de3b7d914dc8a40b168b9ed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931b11549f3aab00aaaaff39cce33c0f7219b3b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931b11549f3aab00aaaaff39cce33c0f7219b3b6", "html_url": "https://github.com/rust-lang/rust/commit/931b11549f3aab00aaaaff39cce33c0f7219b3b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931b11549f3aab00aaaaff39cce33c0f7219b3b6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79a5448f41dcc6ab52663105a6b02fc5af4c503e", "url": "https://api.github.com/repos/rust-lang/rust/commits/79a5448f41dcc6ab52663105a6b02fc5af4c503e", "html_url": "https://github.com/rust-lang/rust/commit/79a5448f41dcc6ab52663105a6b02fc5af4c503e"}, {"sha": "3da255d35a7f9d53e4c31d5712f88ff14eaaf45e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3da255d35a7f9d53e4c31d5712f88ff14eaaf45e", "html_url": "https://github.com/rust-lang/rust/commit/3da255d35a7f9d53e4c31d5712f88ff14eaaf45e"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "b82c9c93376e2b5d4ca186ed79219f1006ac18ae", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=931b11549f3aab00aaaaff39cce33c0f7219b3b6", "patch": "@@ -145,7 +145,7 @@ fn extract_crate_info(e: &Env, i: &ast::ViewItem) -> Option<CrateInfo> {\n     match i.node {\n         ast::ViewItemExternCrate(ident, ref path_opt, id) => {\n             let ident = token::get_ident(ident);\n-            debug!(\"resolving extern crate stmt. ident: {:?} path_opt: {:?}\",\n+            debug!(\"resolving extern crate stmt. ident: {} path_opt: {}\",\n                    ident, path_opt);\n             let name = match *path_opt {\n                 Some((ref path_str, _)) => {\n@@ -281,7 +281,7 @@ fn existing_match(e: &Env, name: &str,\n                   hash: Option<&Svh>) -> Option<ast::CrateNum> {\n     let mut ret = None;\n     e.sess.cstore.iter_crate_data(|cnum, data| {\n-        if data.name().as_slice() != name { return }\n+        if data.name.as_slice() != name { return }\n \n         match hash {\n             Some(hash) if *hash == data.hash() => { ret = Some(cnum); return }"}, {"sha": "3787b879c1ff67158924fe7a9bc0b773bcc9dcfe", "filename": "src/test/run-make/extern-diff-internal-name/Makefile", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2FMakefile?ref=931b11549f3aab00aaaaff39cce33c0f7219b3b6", "patch": "@@ -0,0 +1,6 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) lib.rs\n+\t$(RUSTC) test.rs --extern foo=$(TMPDIR)/libbar.rlib 2>&1 | \\\n+\t\t{ ! grep \"using multiple versions of crate\"; }"}, {"sha": "e8779bba13c8887b40cc90f8752d77e15f76d4c8", "filename": "src/test/run-make/extern-diff-internal-name/lib.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Flib.rs?ref=931b11549f3aab00aaaaff39cce33c0f7219b3b6", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"bar\"]\n+#![crate_type = \"rlib\"]"}, {"sha": "ab1cf96999dcee9c74db38ac5c8c6e44bc29a9aa", "filename": "src/test/run-make/extern-diff-internal-name/test.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931b11549f3aab00aaaaff39cce33c0f7219b3b6/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-diff-internal-name%2Ftest.rs?ref=931b11549f3aab00aaaaff39cce33c0f7219b3b6", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(phase)]\n+\n+#[phase(plugin, link)]\n+extern crate foo;\n+\n+fn main() {\n+}"}]}