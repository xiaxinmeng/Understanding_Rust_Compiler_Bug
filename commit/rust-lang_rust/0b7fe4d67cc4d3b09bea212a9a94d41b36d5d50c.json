{"sha": "0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiN2ZlNGQ2N2NjNGQzYjA5YmVhMjEyYTlhOTRkNDFiMzZkNWQ1MGM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-11T15:51:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-11T15:51:26Z"}, "message": "Rollup merge of #36699 - bluss:repeat-str, r=alexcrichton\n\nAdd method str::repeat(self, usize) -> String\n\nIt is relatively simple to repeat a string n times:\n`(0..n).map(|_| s).collect::<String>()`. It becomes slightly more\ncomplicated to do it \u201cright\u201d (sizing the allocation up front), which\nwarrants a method that does it for us.\n\nThis method is useful in writing testcases, or when generating text.\n`format!()` can be used to repeat single characters, but not repeating\nstrings like this.", "tree": {"sha": "21598ece634c0a905bed73f441b825d0c896c3c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21598ece634c0a905bed73f441b825d0c896c3c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "html_url": "https://github.com/rust-lang/rust/commit/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6717dba27629735c4305de018070db0e188f6b17", "url": "https://api.github.com/repos/rust-lang/rust/commits/6717dba27629735c4305de018070db0e188f6b17", "html_url": "https://github.com/rust-lang/rust/commit/6717dba27629735c4305de018070db0e188f6b17"}, {"sha": "2b7222d3ececbdc9840a3d7bd34f6cca905b80ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b7222d3ececbdc9840a3d7bd34f6cca905b80ad", "html_url": "https://github.com/rust-lang/rust/commit/2b7222d3ececbdc9840a3d7bd34f6cca905b80ad"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "48a74bdecbbefa60db93ba3a74c94dcc1d0e79a3", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "patch": "@@ -1789,4 +1789,24 @@ impl str {\n             String::from_utf8_unchecked(slice.into_vec())\n         }\n     }\n+\n+    /// Create a [`String`] by repeating a string `n` times.\n+    ///\n+    /// [`String`]: string/struct.String.html\n+    ///\n+    /// # Examples\n+    ///\n+    /// Basic usage:\n+    ///\n+    /// ```\n+    /// #![feature(repeat_str)]\n+    ///\n+    /// assert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n+    /// ```\n+    #[unstable(feature = \"repeat_str\", issue = \"37079\")]\n+    pub fn repeat(&self, n: usize) -> String {\n+        let mut s = String::with_capacity(self.len() * n);\n+        s.extend((0..n).map(|_| self));\n+        s\n+    }\n }"}, {"sha": "c2b34647c32791afe93ce5328866481a9839ce59", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "patch": "@@ -19,6 +19,7 @@\n #![feature(enumset)]\n #![feature(pattern)]\n #![feature(rand)]\n+#![feature(repeat_str)]\n #![feature(step_by)]\n #![feature(str_escape)]\n #![feature(str_replacen)]"}, {"sha": "cc56bbf4890aa46de435ab3048d1952aeaaa7e18", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=0b7fe4d67cc4d3b09bea212a9a94d41b36d5d50c", "patch": "@@ -1286,6 +1286,13 @@ fn test_cow_from() {\n     }\n }\n \n+#[test]\n+fn test_repeat() {\n+    assert_eq!(\"\".repeat(3), \"\");\n+    assert_eq!(\"abc\".repeat(0), \"\");\n+    assert_eq!(\"\u03b1\".repeat(3), \"\u03b1\u03b1\u03b1\");\n+}\n+\n mod pattern {\n     use std::str::pattern::Pattern;\n     use std::str::pattern::{Searcher, ReverseSearcher};"}]}