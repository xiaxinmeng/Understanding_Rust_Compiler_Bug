{"sha": "ee66c841655c3abb528841704d991c4a5a67ff9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNjZjODQxNjU1YzNhYmI1Mjg4NDE3MDRkOTkxYzRhNWE2N2ZmOWQ=", "commit": {"author": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-19T22:06:53Z"}, "committer": {"name": "Jakub Bukaj", "email": "jakub@jakub.cc", "date": "2014-11-19T22:34:01Z"}, "message": "Fixes to the roll-up", "tree": {"sha": "586a16ef24193ba5fb488f5470c1f156ac31c984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/586a16ef24193ba5fb488f5470c1f156ac31c984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee66c841655c3abb528841704d991c4a5a67ff9d", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee66c841655c3abb528841704d991c4a5a67ff9d", "html_url": "https://github.com/rust-lang/rust/commit/ee66c841655c3abb528841704d991c4a5a67ff9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee66c841655c3abb528841704d991c4a5a67ff9d/comments", "author": null, "committer": null, "parents": [{"sha": "2e9f705b930901a406eeba3cf2b01c015cb86b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e9f705b930901a406eeba3cf2b01c015cb86b4d", "html_url": "https://github.com/rust-lang/rust/commit/2e9f705b930901a406eeba3cf2b01c015cb86b4d"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "e2a706e59f0f12436f75e185ebd9a7c35c6f2ebe", "filename": "src/doc/guide-error-handling.md", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Fdoc%2Fguide-error-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Fdoc%2Fguide-error-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-error-handling.md?ref=ee66c841655c3abb528841704d991c4a5a67ff9d", "patch": "@@ -84,6 +84,8 @@ While we know that we've covered all possible cases, Rust can't tell. It\n doesn't know that probability is between 0.0 and 1.0. So we add another case:\n \n ```rust\n+use Event::NewRelease;\n+\n enum Event {\n     NewRelease,\n }\n@@ -106,7 +108,7 @@ fn descriptive_probability(event: Event) -> &'static str {\n }\n \n fn main() {\n-    std::io::println(descriptive_probability(NewRelease));\n+    println!(\"{}\", descriptive_probability(NewRelease));\n }\n ```\n \n@@ -151,15 +153,14 @@ enum Version { Version1, Version2 }\n #[deriving(Show)]\n enum ParseError { InvalidHeaderLength, InvalidVersion }\n \n-\n fn parse_version(header: &[u8]) -> Result<Version, ParseError> {\n     if header.len() < 1 {\n-        return Err(InvalidHeaderLength);\n+        return Err(ParseError::InvalidHeaderLength);\n     }\n     match header[0] {\n-        1 => Ok(Version1),\n-        2 => Ok(Version2),\n-        _ => Err(InvalidVersion)\n+        1 => Ok(Version::Version1),\n+        2 => Ok(Version::Version2),\n+        _ => Err(ParseError::InvalidVersion)\n     }\n }\n "}, {"sha": "41a7ce7d78e5709df508e59005f824dcee0a783f", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=ee66c841655c3abb528841704d991c4a5a67ff9d", "patch": "@@ -212,7 +212,7 @@ pub fn walk_local<'v, V: Visitor<'v>>(visitor: &mut V, local: &'v Local) {\n \n pub fn walk_lifetime_def<'v, V: Visitor<'v>>(visitor: &mut V,\n                                               lifetime_def: &'v LifetimeDef) {\n-    visitor.visit_lifetime_ref(&lifetime_def.lifetime);\n+    visitor.visit_name(lifetime_def.lifetime.span, lifetime_def.lifetime.name);\n     for bound in lifetime_def.bounds.iter() {\n         visitor.visit_lifetime_ref(bound);\n     }"}, {"sha": "d10337e768c71a06090136348d55510084fe5e0b", "filename": "src/test/compile-fail/bad-lit-suffixes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Ftest%2Fcompile-fail%2Fbad-lit-suffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Ftest%2Fcompile-fail%2Fbad-lit-suffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-lit-suffixes.rs?ref=ee66c841655c3abb528841704d991c4a5a67ff9d", "patch": "@@ -36,6 +36,6 @@ fn main() {\n \n     1234suffix; //~ ERROR illegal suffix `suffix` for numeric literal\n     0b101suffix; //~ ERROR illegal suffix `suffix` for numeric literal\n-    1.0suffix; //~ ERROR illegal suffix `suffix` for numeric literal\n-    1.0e10suffix; //~ ERROR illegal suffix `suffix` for numeric literal\n+    1.0suffix; //~ ERROR illegal suffix `suffix` for float literal\n+    1.0e10suffix; //~ ERROR illegal suffix `suffix` for float literal\n }"}, {"sha": "692018594571ef6ff75b31ac3c0e80f5c76ecad3", "filename": "src/test/compile-fail/issue-19086.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee66c841655c3abb528841704d991c4a5a67ff9d/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19086.rs?ref=ee66c841655c3abb528841704d991c4a5a67ff9d", "patch": "@@ -8,11 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn main() {\n-    enum Foo {\n-        FooB { x: i32, y: i32 }\n-    }\n+use Foo::FooB;\n \n+enum Foo {\n+    FooB { x: i32, y: i32 }\n+}\n+\n+fn main() {\n     let f = FooB { x: 3, y: 4 };\n     match f {\n         FooB(a, b) => println!(\"{} {}\", a, b),"}]}