{"sha": "51de26cfd977edc7b0dc5450474a840359a79443", "node_id": "C_kwDOAAsO6NoAKDUxZGUyNmNmZDk3N2VkYzdiMGRjNTQ1MDQ3NGE4NDAzNTlhNzk0NDM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-01-03T22:51:20Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-04-18T18:59:08Z"}, "message": "* If type filter is in quotes, throw an error.\n* If there are generics, don't allow to have quotes.", "tree": {"sha": "8fa0ad96312db3273a03baa22a50994ea9d45512", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fa0ad96312db3273a03baa22a50994ea9d45512"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51de26cfd977edc7b0dc5450474a840359a79443", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51de26cfd977edc7b0dc5450474a840359a79443", "html_url": "https://github.com/rust-lang/rust/commit/51de26cfd977edc7b0dc5450474a840359a79443", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51de26cfd977edc7b0dc5450474a840359a79443/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbcf1762ddd06a895b0bb235fa0718901dc73184", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbcf1762ddd06a895b0bb235fa0718901dc73184", "html_url": "https://github.com/rust-lang/rust/commit/bbcf1762ddd06a895b0bb235fa0718901dc73184"}], "stats": {"total": 103, "additions": 45, "deletions": 58}, "files": [{"sha": "03518cd5ae82efd404e3a0ae48a88dccb40447ab", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/51de26cfd977edc7b0dc5450474a840359a79443/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/51de26cfd977edc7b0dc5450474a840359a79443/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=51de26cfd977edc7b0dc5450474a840359a79443", "patch": "@@ -216,11 +216,13 @@ window.initSearch = function(rawSearchIndex) {\n         }\n         function isPathStart(query) {\n             var pos = query.pos;\n-            return pos + 1 < query.length && query.userQuery[pos] === ':' && query.userQuery[pos + 1] === ':';\n+            return pos + 1 < query.length && query.userQuery[pos] === ':' &&\n+                query.userQuery[pos + 1] === ':';\n         }\n         function isReturnArrow(query) {\n             var pos = query.pos;\n-            return pos + 1 < query.length && query.userQuery[pos] === '-' && query.userQuery[pos + 1] === '>';\n+            return pos + 1 < query.length && query.userQuery[pos] === '-' &&\n+                query.userQuery[pos + 1] === '>';\n         }\n         function removeEmptyStringsFromArray(x) {\n             for (var i = 0, len = x.length; i < len; ++i) {\n@@ -235,6 +237,9 @@ window.initSearch = function(rawSearchIndex) {\n             if (name === '*' || (name.length === 0 && generics.length === 0)) {\n                 return;\n             }\n+            if (query.literalSearch && query.totalElems > 0) {\n+                throw new Error(\"You cannot have more than one element if you use quotes\");\n+            }\n             var paths = name.split(\"::\");\n             removeEmptyStringsFromArray(paths);\n             // In case we only have something like `<p>`, there is no name but it remains valid.\n@@ -320,6 +325,9 @@ window.initSearch = function(rawSearchIndex) {\n                 } else if (c === \":\" && query.typeFilter === null && !isPathStart(query) &&\n                            query.elems.length === 1)\n                 {\n+                    if (query.literalSearch) {\n+                        throw new Error(\"You cannot use quotes on type filter\");\n+                    }\n                     // The type filter doesn't count as an element since it's a modifier.\n                     query.typeFilter = query.elems.pop().name;\n                     query.pos += 1;\n@@ -400,7 +408,7 @@ window.initSearch = function(rawSearchIndex) {\n         if (!query.literalSearch) {\n             // If there is more than one element in the query, we switch to literalSearch in any\n             // case.\n-            query.literalSearch = query.foundElems > 1;\n+            query.literalSearch = query.totalElems > 1;\n         }\n         if (query.elemName !== null) {\n             query.foundElems += 1;"}, {"sha": "c5d106120ad7c4622afc096f9c038da6118f8e32", "filename": "src/test/rustdoc-js-std/parser-errors.js", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js", "raw_url": "https://github.com/rust-lang/rust/raw/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-errors.js?ref=51de26cfd977edc7b0dc5450474a840359a79443", "patch": "@@ -1,4 +1,4 @@\n-const QUERY = ['<\"P\">', '\"P\" \"P\"', 'P \"P\"'];\n+const QUERY = ['<\"P\">', '\"P\" \"P\"', 'P \"P\"', '\"p\" p', '\"const\": p'];\n \n const PARSED = [\n     {\n@@ -40,4 +40,30 @@ const PARSED = [\n         userQuery: \"p \\\"p\\\"\",\n         error: \"Cannot use literal search when there is more than one element\",\n     },\n+    {\n+        args: [],\n+        elemName: null,\n+        elems: [],\n+        foundElems: 0,\n+        id: \"\\\"p\\\" p\",\n+        nameSplit: null,\n+        original: \"\\\"p\\\" p\",\n+        returned: [],\n+        typeFilter: null,\n+        userQuery: \"\\\"p\\\" p\",\n+        error: \"You cannot have more than one element if you use quotes\",\n+    },\n+    {\n+        args: [],\n+        elemName: null,\n+        elems: [],\n+        foundElems: 0,\n+        id: \"\\\"const\\\": p\",\n+        nameSplit: null,\n+        original: \"\\\"const\\\": p\",\n+        returned: [],\n+        typeFilter: null,\n+        userQuery: \"\\\"const\\\": p\",\n+        error: \"You cannot use quotes on type filter\",\n+    },\n ];"}, {"sha": "f1713fbaf885e4f9d5eeb1f7e7b2cebeb529daf5", "filename": "src/test/rustdoc-js-std/parser-literal.js", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-literal.js", "raw_url": "https://github.com/rust-lang/rust/raw/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-literal.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-literal.js?ref=51de26cfd977edc7b0dc5450474a840359a79443", "patch": "@@ -1,4 +1,4 @@\n-const QUERY = ['\"R\"<P>'];\n+const QUERY = ['R<P>'];\n \n const PARSED = [\n     {\n@@ -20,12 +20,12 @@ const PARSED = [\n             ],\n         }],\n         foundElems: 1,\n-        id: \"\\\"R\\\"<P>\",\n+        id: \"R<P>\",\n         nameSplit: null,\n-        original: \"\\\"R\\\"<P>\",\n+        original: \"R<P>\",\n         returned: [],\n         typeFilter: -1,\n-        userQuery: \"\\\"r\\\"<p>\",\n+        userQuery: \"r<p>\",\n         error: null,\n     }\n ];"}, {"sha": "1c59a3d50ee93c332542e5e7e56c181a4f058c58", "filename": "src/test/rustdoc-js-std/parser-quote.js", "status": "modified", "additions": 1, "deletions": 48, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-quote.js", "raw_url": "https://github.com/rust-lang/rust/raw/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js-std%2Fparser-quote.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Fparser-quote.js?ref=51de26cfd977edc7b0dc5450474a840359a79443", "patch": "@@ -1,4 +1,4 @@\n-const QUERY = ['-> \"p\"', '\"const\": \"p\"', '(\"p\")', '\"p\"<p>'];\n+const QUERY = ['-> \"p\"', '(\"p\")'];\n \n const PARSED = [\n     {\n@@ -20,27 +20,6 @@ const PARSED = [\n         userQuery: \"-> \\\"p\\\"\",\n         error: null,\n     },\n-    // This one checks that if quotes are used on the type filter, they're\n-    // simply ignored.\n-    {\n-        args: [],\n-        elemName: null,\n-        elems: [{\n-            name: \"p\",\n-            fullPath: [\"p\"],\n-            pathWithoutLast: [],\n-            pathLast: \"p\",\n-            generics: [],\n-        }],\n-        foundElems: 1,\n-        id: \"\\\"const\\\": \\\"p\\\"\",\n-        nameSplit: null,\n-        original: \"\\\"const\\\": \\\"p\\\"\",\n-        returned: [],\n-        typeFilter: 17,\n-        userQuery: \"\\\"const\\\": \\\"p\\\"\",\n-        error: null,\n-    },\n     {\n         args: [{\n             name: \"p\",\n@@ -60,30 +39,4 @@ const PARSED = [\n         userQuery: \"(\\\"p\\\")\",\n         error: null,\n     },\n-    // This test checks that a literal item can still have generics.\n-    {\n-        args: [],\n-        elemName: null,\n-        elems: [{\n-            name: \"p\",\n-            fullPath: [\"p\"],\n-            pathWithoutLast: [],\n-            pathLast: \"p\",\n-            generics: [{\n-                name: \"p\",\n-                fullPath: [\"p\"],\n-                pathWithoutLast: [],\n-                pathLast: \"p\",\n-                generics: [],\n-            }],\n-        }],\n-        foundElems: 1,\n-        id: \"\\\"p\\\"<p>\",\n-        nameSplit: null,\n-        original: \"\\\"p\\\"<p>\",\n-        returned: [],\n-        typeFilter: -1,\n-        userQuery: \"\\\"p\\\"<p>\",\n-        error: null,\n-    },\n ];"}, {"sha": "4aa6b355b6dfbbf902dbf2d26aa95b09180b0530", "filename": "src/test/rustdoc-js/generics.js", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js%2Fgenerics.js", "raw_url": "https://github.com/rust-lang/rust/raw/51de26cfd977edc7b0dc5450474a840359a79443/src%2Ftest%2Frustdoc-js%2Fgenerics.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fgenerics.js?ref=51de26cfd977edc7b0dc5450474a840359a79443", "patch": "@@ -1,10 +1,10 @@\n // exact-check\n \n const QUERY = [\n-    '\"R\"<P>',\n+    'R<P>',\n     '\"P\"',\n     'P',\n-    '\"ExtraCreditStructMulti\"<ExtraCreditInnerMulti, ExtraCreditInnerMulti>',\n+    'ExtraCreditStructMulti<ExtraCreditInnerMulti, ExtraCreditInnerMulti>',\n     'TraitCat',\n     'TraitDog',\n     'Result<String>',"}]}