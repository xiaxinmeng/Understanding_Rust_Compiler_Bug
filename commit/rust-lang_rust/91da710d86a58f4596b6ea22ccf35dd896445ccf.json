{"sha": "91da710d86a58f4596b6ea22ccf35dd896445ccf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZGE3MTBkODZhNThmNDU5NmI2ZWEyMmNjZjM1ZGQ4OTY0NDVjY2Y=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-01-31T12:37:06Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2012-02-06T08:56:41Z"}, "message": "Add monad iface test", "tree": {"sha": "612c394d43b5a7d51a0dd4ca7d7f8db4bff40a2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/612c394d43b5a7d51a0dd4ca7d7f8db4bff40a2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91da710d86a58f4596b6ea22ccf35dd896445ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91da710d86a58f4596b6ea22ccf35dd896445ccf", "html_url": "https://github.com/rust-lang/rust/commit/91da710d86a58f4596b6ea22ccf35dd896445ccf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91da710d86a58f4596b6ea22ccf35dd896445ccf/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0fa5cd2edbbb611ff3759a31357a70ca9582245", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0fa5cd2edbbb611ff3759a31357a70ca9582245", "html_url": "https://github.com/rust-lang/rust/commit/e0fa5cd2edbbb611ff3759a31357a70ca9582245"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "bdfb6ff8b707bf0ef74d12dfa00395b6ad5e1080", "filename": "src/test/run-pass/monad.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/91da710d86a58f4596b6ea22ccf35dd896445ccf/src%2Ftest%2Frun-pass%2Fmonad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91da710d86a58f4596b6ea22ccf35dd896445ccf/src%2Ftest%2Frun-pass%2Fmonad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmonad.rs?ref=91da710d86a58f4596b6ea22ccf35dd896445ccf", "patch": "@@ -0,0 +1,31 @@\n+iface monad<A> {\n+    fn bind<B>(fn(A) -> self<B>) -> self<B>;\n+}\n+\n+impl <A> of monad<A> for [A] {\n+    fn bind<B>(f: fn(A) -> [B]) -> [B] {\n+        let r = [];\n+        for elt in self { r += f(elt); }\n+        r\n+    }\n+}\n+\n+impl <A> of monad<A> for option<A> {\n+    fn bind<B>(f: fn(A) -> option<B>) -> option<B> {\n+        alt self {\n+          some(a) { f(a) }\n+          none { none }\n+        }\n+    }\n+}\n+\n+fn transform(x: option<int>) -> option<str> {\n+    x.bind {|n| some(n + 1)}.bind {|n| some(int::str(n))}\n+}\n+\n+fn main() {\n+    assert transform(some(10)) == some(\"11\");\n+    assert transform(none) == none;\n+    assert [\"hi\"].bind {|x| [x, x + \"!\"]}.bind {|x| [x, x + \"?\"]} ==\n+        [\"hi\", \"hi?\", \"hi!\", \"hi!?\"];\n+}"}]}