{"sha": "fe9a02c211ed93c55f064811e5f374baf58903f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlOWEwMmMyMTFlZDkzYzU1ZjA2NDgxMWU1ZjM3NGJhZjU4OTAzZjM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-28T14:58:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-28T14:58:23Z"}, "message": "Rollup merge of #79460 - bugadani:simplify, r=jonas-schievink\n\nRemove intermediate vectors from `add_bounds`\n\nThis PR removes two short lived vectors that don't serve any obvious purpose.", "tree": {"sha": "ec7996f0e38d197874c2fb21ee0f855eb0939599", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec7996f0e38d197874c2fb21ee0f855eb0939599"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe9a02c211ed93c55f064811e5f374baf58903f3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfwmWPCRBK7hj4Ov3rIwAAdHIIAE8D0OgBqxZ5qKNoDrXdIDhK\nSzUAX8u5GjeP6KY/7XbN4JIzVW4tqL+9X8XCp8z8dWWGlkt02zvmHoRZzaOor1AG\nFSFvU5nhn5ORSG2dReUl/76yvpfeVSSwZLfeCh5OuijlO35Ep7o3LCMRha+at8P5\nFUw1M/GQ6D/fkL0NVLRgE8LaLTTYVQUVMj5LkB1O1wCZAnfaeb1V9aCRMdJY8iag\nXLTR6Yg7nFEZYiAYEt0+tO2/qN7/wriigEsfPQ6bej9KTf/jhe/C4g6LB9Ad7T2e\nr+payf4a2GaTUwFegPZY16IZ7zSPj6Z9D+K1Lv8p6Jt0f2Vf77i3xOKbc1ROdpA=\n=dX4M\n-----END PGP SIGNATURE-----\n", "payload": "tree ec7996f0e38d197874c2fb21ee0f855eb0939599\nparent 13375864edb3d87fd4fbab95240edab0ea7a6ea5\nparent d212ea792e24f409259a05e741ec95faac250193\nauthor Jonas Schievink <jonasschievink@gmail.com> 1606575503 +0100\ncommitter GitHub <noreply@github.com> 1606575503 +0100\n\nRollup merge of #79460 - bugadani:simplify, r=jonas-schievink\n\nRemove intermediate vectors from `add_bounds`\n\nThis PR removes two short lived vectors that don't serve any obvious purpose.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe9a02c211ed93c55f064811e5f374baf58903f3", "html_url": "https://github.com/rust-lang/rust/commit/fe9a02c211ed93c55f064811e5f374baf58903f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe9a02c211ed93c55f064811e5f374baf58903f3/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13375864edb3d87fd4fbab95240edab0ea7a6ea5", "url": "https://api.github.com/repos/rust-lang/rust/commits/13375864edb3d87fd4fbab95240edab0ea7a6ea5", "html_url": "https://github.com/rust-lang/rust/commit/13375864edb3d87fd4fbab95240edab0ea7a6ea5"}, {"sha": "d212ea792e24f409259a05e741ec95faac250193", "url": "https://api.github.com/repos/rust-lang/rust/commits/d212ea792e24f409259a05e741ec95faac250193", "html_url": "https://github.com/rust-lang/rust/commit/d212ea792e24f409259a05e741ec95faac250193"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "7888cb1b9f5991d47bdd79e92dd4d2959f7fc3f4", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/fe9a02c211ed93c55f064811e5f374baf58903f3/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe9a02c211ed93c55f064811e5f374baf58903f3/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=fe9a02c211ed93c55f064811e5f374baf58903f3", "patch": "@@ -823,34 +823,25 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         ast_bounds: &[hir::GenericBound<'_>],\n         bounds: &mut Bounds<'tcx>,\n     ) {\n-        let mut trait_bounds = Vec::new();\n-        let mut region_bounds = Vec::new();\n-\n         let constness = self.default_constness_for_trait_bounds();\n         for ast_bound in ast_bounds {\n             match *ast_bound {\n                 hir::GenericBound::Trait(ref b, hir::TraitBoundModifier::None) => {\n-                    trait_bounds.push((b, constness))\n+                    self.instantiate_poly_trait_ref(b, constness, param_ty, bounds);\n                 }\n                 hir::GenericBound::Trait(ref b, hir::TraitBoundModifier::MaybeConst) => {\n-                    trait_bounds.push((b, Constness::NotConst))\n+                    self.instantiate_poly_trait_ref(b, Constness::NotConst, param_ty, bounds);\n                 }\n                 hir::GenericBound::Trait(_, hir::TraitBoundModifier::Maybe) => {}\n                 hir::GenericBound::LangItemTrait(lang_item, span, hir_id, args) => self\n                     .instantiate_lang_item_trait_ref(\n                         lang_item, span, hir_id, args, param_ty, bounds,\n                     ),\n-                hir::GenericBound::Outlives(ref l) => region_bounds.push(l),\n+                hir::GenericBound::Outlives(ref l) => {\n+                    bounds.region_bounds.push((self.ast_region_to_region(l, None), l.span))\n+                }\n             }\n         }\n-\n-        for (bound, constness) in trait_bounds {\n-            let _ = self.instantiate_poly_trait_ref(bound, constness, param_ty, bounds);\n-        }\n-\n-        bounds.region_bounds.extend(\n-            region_bounds.into_iter().map(|r| (self.ast_region_to_region(r, None), r.span)),\n-        );\n     }\n \n     /// Translates a list of bounds from the HIR into the `Bounds` data structure."}]}