{"sha": "e962a1d51e28579debb7ce0aa7e9ebaa95947218", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5NjJhMWQ1MWUyODU3OWRlYmI3Y2UwYWE3ZTllYmFhOTU5NDcyMTg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-25T14:14:32Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-03-25T14:14:32Z"}, "message": "Rollup merge of #23702 - dotdash:match_reass, r=eddyb\n\n The reassignment checker effectively only checks whether the last\nassignment in a body affects the discriminant, but it should of course\ncheck all the assignments.\n\nFixes #23698", "tree": {"sha": "52ebffa2c227d1ff4ad12aa0d9cf04a759fadff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ebffa2c227d1ff4ad12aa0d9cf04a759fadff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e962a1d51e28579debb7ce0aa7e9ebaa95947218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e962a1d51e28579debb7ce0aa7e9ebaa95947218", "html_url": "https://github.com/rust-lang/rust/commit/e962a1d51e28579debb7ce0aa7e9ebaa95947218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e962a1d51e28579debb7ce0aa7e9ebaa95947218/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2354fc9fac56866878ce86f02635a4950e1ac984", "url": "https://api.github.com/repos/rust-lang/rust/commits/2354fc9fac56866878ce86f02635a4950e1ac984", "html_url": "https://github.com/rust-lang/rust/commit/2354fc9fac56866878ce86f02635a4950e1ac984"}, {"sha": "cc259fb6c36c6033d2befcb11535a98adda03b3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc259fb6c36c6033d2befcb11535a98adda03b3f", "html_url": "https://github.com/rust-lang/rust/commit/cc259fb6c36c6033d2befcb11535a98adda03b3f"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "c48b63cdcb6c4bccc640fff215ce3a650a90c720", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e962a1d51e28579debb7ce0aa7e9ebaa95947218/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e962a1d51e28579debb7ce0aa7e9ebaa95947218/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=e962a1d51e28579debb7ce0aa7e9ebaa95947218", "patch": "@@ -1352,12 +1352,12 @@ impl<'tcx> euv::Delegate<'tcx> for ReassignmentChecker {\n     fn mutate(&mut self, _: ast::NodeId, _: Span, cmt: mc::cmt, _: euv::MutateMode) {\n         match cmt.cat {\n             mc::cat_upvar(mc::Upvar { id: ty::UpvarId { var_id: vid, .. }, .. }) |\n-            mc::cat_local(vid) => self.reassigned = self.node == vid,\n+            mc::cat_local(vid) => self.reassigned |= self.node == vid,\n             mc::cat_interior(ref base_cmt, mc::InteriorField(field)) => {\n                 match base_cmt.cat {\n                     mc::cat_upvar(mc::Upvar { id: ty::UpvarId { var_id: vid, .. }, .. }) |\n                     mc::cat_local(vid) => {\n-                        self.reassigned = self.node == vid && Some(field) == self.field\n+                        self.reassigned |= self.node == vid && Some(field) == self.field\n                     },\n                     _ => {}\n                 }"}, {"sha": "759296ad46b877ce7f979404f2b9a1bfcbf67fe0", "filename": "src/test/run-pass/match-reassign.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e962a1d51e28579debb7ce0aa7e9ebaa95947218/src%2Ftest%2Frun-pass%2Fmatch-reassign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e962a1d51e28579debb7ce0aa7e9ebaa95947218/src%2Ftest%2Frun-pass%2Fmatch-reassign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-reassign.rs?ref=e962a1d51e28579debb7ce0aa7e9ebaa95947218", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #23698: The reassignment checker only cared\n+// about the last assigment in a match arm body\n+\n+// Use an extra function to make sure no extra assignments\n+// are introduced by macros in the match statement\n+fn check_eq(x: i32, y: i32) {\n+    assert_eq!(x, y);\n+}\n+\n+#[allow(unused_assignments)]\n+fn main() {\n+    let mut x = Box::new(1);\n+    match x {\n+        y => {\n+            x = Box::new(2);\n+            let _tmp = 1; // This assignment used to throw off the reassignment checker\n+            check_eq(*y, 1);\n+        }\n+    }\n+}"}]}