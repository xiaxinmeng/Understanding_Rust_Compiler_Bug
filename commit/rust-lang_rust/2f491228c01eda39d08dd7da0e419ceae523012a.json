{"sha": "2f491228c01eda39d08dd7da0e419ceae523012a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNDkxMjI4YzAxZWRhMzlkMDhkZDdkYTBlNDE5Y2VhZTUyMzAxMmE=", "commit": {"author": {"name": "Geoffrey Thomas", "email": "geofft@ldpreload.com", "date": "2015-04-23T21:17:14Z"}, "committer": {"name": "Geoffrey Thomas", "email": "geofft@ldpreload.com", "date": "2015-04-23T21:17:14Z"}, "message": "TRPL: Remove references to \"advanced macros chapter\"\n\nThis was merged back into the regular macros chapter, but a few\nreferences lingered and caused broken links.", "tree": {"sha": "04aff533adeaa23cb2c987f8610a41eb7031f875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04aff533adeaa23cb2c987f8610a41eb7031f875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f491228c01eda39d08dd7da0e419ceae523012a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f491228c01eda39d08dd7da0e419ceae523012a", "html_url": "https://github.com/rust-lang/rust/commit/2f491228c01eda39d08dd7da0e419ceae523012a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f491228c01eda39d08dd7da0e419ceae523012a/comments", "author": {"login": "geofft", "id": 74644, "node_id": "MDQ6VXNlcjc0NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/74644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofft", "html_url": "https://github.com/geofft", "followers_url": "https://api.github.com/users/geofft/followers", "following_url": "https://api.github.com/users/geofft/following{/other_user}", "gists_url": "https://api.github.com/users/geofft/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofft/subscriptions", "organizations_url": "https://api.github.com/users/geofft/orgs", "repos_url": "https://api.github.com/users/geofft/repos", "events_url": "https://api.github.com/users/geofft/events{/privacy}", "received_events_url": "https://api.github.com/users/geofft/received_events", "type": "User", "site_admin": false}, "committer": {"login": "geofft", "id": 74644, "node_id": "MDQ6VXNlcjc0NjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/74644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geofft", "html_url": "https://github.com/geofft", "followers_url": "https://api.github.com/users/geofft/followers", "following_url": "https://api.github.com/users/geofft/following{/other_user}", "gists_url": "https://api.github.com/users/geofft/gists{/gist_id}", "starred_url": "https://api.github.com/users/geofft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geofft/subscriptions", "organizations_url": "https://api.github.com/users/geofft/orgs", "repos_url": "https://api.github.com/users/geofft/repos", "events_url": "https://api.github.com/users/geofft/events{/privacy}", "received_events_url": "https://api.github.com/users/geofft/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad2684c41c9b30ead713c095b70e706ab056f07d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2684c41c9b30ead713c095b70e706ab056f07d", "html_url": "https://github.com/rust-lang/rust/commit/ad2684c41c9b30ead713c095b70e706ab056f07d"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "9d01f104ddaafcdcb824ccf4241189c743667c58", "filename": "src/doc/trpl/macros.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2f491228c01eda39d08dd7da0e419ceae523012a/src%2Fdoc%2Ftrpl%2Fmacros.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f491228c01eda39d08dd7da0e419ceae523012a/src%2Fdoc%2Ftrpl%2Fmacros.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fmacros.md?ref=2f491228c01eda39d08dd7da0e419ceae523012a", "patch": "@@ -57,8 +57,7 @@ let x: Vec<u32> = {\n We can implement this shorthand, using a macro: [^actual]\n \n [^actual]: The actual definition of `vec!` in libcollections differs from the\n-           one presented here, for reasons of efficiency and reusability. Some\n-           of these are mentioned in the [advanced macros chapter][].\n+           one presented here, for reasons of efficiency and reusability.\n \n ```rust\n macro_rules! vec {\n@@ -106,7 +105,7 @@ These have [their own little grammar] within the language.\n \n The matcher `$x:expr` will match any Rust expression, binding that syntax tree\n to the \u2018metavariable\u2019 `$x`. The identifier `expr` is a \u2018fragment specifier\u2019;\n-the full possibilities are enumerated in the [advanced macros chapter][].\n+the full possibilities are enumerated later in this chapter.\n Surrounding the matcher with `$(...),*` will match zero or more expressions,\n separated by commas.\n "}]}