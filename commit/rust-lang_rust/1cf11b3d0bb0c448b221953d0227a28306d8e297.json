{"sha": "1cf11b3d0bb0c448b221953d0227a28306d8e297", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZjExYjNkMGJiMGM0NDhiMjIxOTUzZDAyMjdhMjgzMDZkOGUyOTc=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-12-06T13:10:51Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2017-12-06T13:10:51Z"}, "message": "Rename fs::read_utf8 to read_string", "tree": {"sha": "c27c94f4a5c24db02dc87a676e3162279f6fb265", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c27c94f4a5c24db02dc87a676e3162279f6fb265"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cf11b3d0bb0c448b221953d0227a28306d8e297", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf11b3d0bb0c448b221953d0227a28306d8e297", "html_url": "https://github.com/rust-lang/rust/commit/1cf11b3d0bb0c448b221953d0227a28306d8e297", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cf11b3d0bb0c448b221953d0227a28306d8e297/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e2f756583b4c7cbbb0bd2fc2543fa02eefea96b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e2f756583b4c7cbbb0bd2fc2543fa02eefea96b", "html_url": "https://github.com/rust-lang/rust/commit/7e2f756583b4c7cbbb0bd2fc2543fa02eefea96b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "a5884f75e0acd36e5fdcf8db98ef8bace47a714b", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cf11b3d0bb0c448b221953d0227a28306d8e297/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf11b3d0bb0c448b221953d0227a28306d8e297/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=1cf11b3d0bb0c448b221953d0227a28306d8e297", "patch": "@@ -281,12 +281,12 @@ pub fn read<P: AsRef<Path>>(path: P) -> io::Result<Vec<u8>> {\n /// use std::net::SocketAddr;\n ///\n /// # fn foo() -> Result<(), Box<std::error::Error + 'static>> {\n-/// let foo: SocketAddr = fs::read_utf8(\"address.txt\")?.parse()?;\n+/// let foo: SocketAddr = fs::read_string(\"address.txt\")?.parse()?;\n /// # Ok(())\n /// # }\n /// ```\n #[unstable(feature = \"fs_read_write\", issue = /* FIXME */ \"0\")]\n-pub fn read_utf8<P: AsRef<Path>>(path: P) -> io::Result<String> {\n+pub fn read_string<P: AsRef<Path>>(path: P) -> io::Result<String> {\n     let mut string = String::new();\n     File::open(path)?.read_to_string(&mut string)?;\n     Ok(string)\n@@ -3044,12 +3044,12 @@ mod tests {\n         assert!(v == &bytes[..]);\n \n         check!(fs::write(&tmpdir.join(\"not-utf8\"), &[0xFF]));\n-        error_contains!(fs::read_utf8(&tmpdir.join(\"not-utf8\")),\n+        error_contains!(fs::read_string(&tmpdir.join(\"not-utf8\")),\n                         \"stream did not contain valid UTF-8\");\n \n         let s = \"\ud800\udc41\ud800\udc13\ud800\udc20\ud800\udc34\ud800\udc0d\";\n         check!(fs::write(&tmpdir.join(\"utf8\"), s.as_bytes()));\n-        let string = check!(fs::read_utf8(&tmpdir.join(\"utf8\")));\n+        let string = check!(fs::read_string(&tmpdir.join(\"utf8\")));\n         assert_eq!(string, s);\n     }\n "}]}