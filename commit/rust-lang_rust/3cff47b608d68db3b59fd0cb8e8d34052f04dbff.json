{"sha": "3cff47b608d68db3b59fd0cb8e8d34052f04dbff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZmY0N2I2MDhkNjhkYjNiNTlmZDBjYjhlOGQzNDA1MmYwNGRiZmY=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-09-17T05:09:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T05:09:50Z"}, "message": "Rollup merge of #89014 - durin42:llvm-14-module-pass-manager, r=nikic\n\nPassWrapper: handle separate Module*SanitizerPass\n\nChange ab41eef9aca3 in LLVM split MemorySanitizerPass into\nMemorySanitizerPass for functions and ModuleMemorySanitizerPass for\nmodules. There's a related change for ThreadSanitizerPass, and in here\nsince we're using a ModulePassManager I only add the module flavor of\nthe pass on LLVM 14.\n\nr? `@nikic` cc `@nagisa`", "tree": {"sha": "2bc8ac1d9dd8d3f9c3f31cf50763048966c8112c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bc8ac1d9dd8d3f9c3f31cf50763048966c8112c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cff47b608d68db3b59fd0cb8e8d34052f04dbff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRCMeCRBK7hj4Ov3rIwAA5bMIAK8HXbRdzOknjtJycvCkiV0G\nHPLsTADlGm0w+qFz8awyWpbHroK0qqSw4nLUGeQB6/0DH1514Mct1To0CiH9kdZ9\nLqDZm1FwRqmmL+mi+185TqhFV1ybX8OSSOQjTsL/0+3PuzPxZvM9ajlr7En2wpCm\n5Z9jUAHpKnny78OJ6y2quAf2iccYpr/+QL/sNB16raw+kXuP3vgCnPvtbM2a1hKD\nqwrepx0Nd6t2UtPm34lYgqA/rxMNsNRfYwN76GvWP/DfF4no4K/DP/+F4tDjm7Wq\niZI4kHnxTqodj/GvePjXbSR14XIDqoRl/I9C95U9XUYX2rPr8QGVsLVH/qwyd/4=\n=0ZPz\n-----END PGP SIGNATURE-----\n", "payload": "tree 2bc8ac1d9dd8d3f9c3f31cf50763048966c8112c\nparent c97ff098f192901b81dc2ad7142195757853964d\nparent bc4d8af123ce376261b1abd7acbc7d67a0197280\nauthor Yuki Okushi <jtitor@2k36.org> 1631855390 +0900\ncommitter GitHub <noreply@github.com> 1631855390 +0900\n\nRollup merge of #89014 - durin42:llvm-14-module-pass-manager, r=nikic\n\nPassWrapper: handle separate Module*SanitizerPass\n\nChange ab41eef9aca3 in LLVM split MemorySanitizerPass into\nMemorySanitizerPass for functions and ModuleMemorySanitizerPass for\nmodules. There's a related change for ThreadSanitizerPass, and in here\nsince we're using a ModulePassManager I only add the module flavor of\nthe pass on LLVM 14.\n\nr? `@nikic` cc `@nagisa`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cff47b608d68db3b59fd0cb8e8d34052f04dbff", "html_url": "https://github.com/rust-lang/rust/commit/3cff47b608d68db3b59fd0cb8e8d34052f04dbff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cff47b608d68db3b59fd0cb8e8d34052f04dbff/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c97ff098f192901b81dc2ad7142195757853964d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c97ff098f192901b81dc2ad7142195757853964d", "html_url": "https://github.com/rust-lang/rust/commit/c97ff098f192901b81dc2ad7142195757853964d"}, {"sha": "bc4d8af123ce376261b1abd7acbc7d67a0197280", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc4d8af123ce376261b1abd7acbc7d67a0197280", "html_url": "https://github.com/rust-lang/rust/commit/bc4d8af123ce376261b1abd7acbc7d67a0197280"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "b7cad1c3ba6d9367cd57bc247dcdc444a8553193", "filename": "compiler/rustc_llvm/llvm-wrapper/PassWrapper.cpp", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3cff47b608d68db3b59fd0cb8e8d34052f04dbff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3cff47b608d68db3b59fd0cb8e8d34052f04dbff/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fllvm-wrapper%2FPassWrapper.cpp?ref=3cff47b608d68db3b59fd0cb8e8d34052f04dbff", "patch": "@@ -875,7 +875,11 @@ LLVMRustOptimizeWithNewPassManager(\n #if LLVM_VERSION_GE(11, 0)\n       OptimizerLastEPCallbacks.push_back(\n         [Options](ModulePassManager &MPM, OptimizationLevel Level) {\n+#if LLVM_VERSION_GE(14, 0)\n+          MPM.addPass(ModuleMemorySanitizerPass(Options));\n+#else\n           MPM.addPass(MemorySanitizerPass(Options));\n+#endif\n           MPM.addPass(createModuleToFunctionPassAdaptor(MemorySanitizerPass(Options)));\n         }\n       );\n@@ -897,7 +901,11 @@ LLVMRustOptimizeWithNewPassManager(\n #if LLVM_VERSION_GE(11, 0)\n       OptimizerLastEPCallbacks.push_back(\n         [](ModulePassManager &MPM, OptimizationLevel Level) {\n+#if LLVM_VERSION_GE(14, 0)\n+          MPM.addPass(ModuleThreadSanitizerPass());\n+#else\n           MPM.addPass(ThreadSanitizerPass());\n+#endif\n           MPM.addPass(createModuleToFunctionPassAdaptor(ThreadSanitizerPass()));\n         }\n       );"}]}