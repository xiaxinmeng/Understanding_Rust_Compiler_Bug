{"sha": "5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZTlmZWViOGNiNDhhODlmZWZmZTU3OWNmYzFhOTI4MWI0ZGZiYjA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-09-15T09:19:19Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2016-09-15T16:48:16Z"}, "message": "Add std::ptr::eq, for referential equality of &T references.\n\nFixes https://github.com/rust-lang/rfcs/issues/1155", "tree": {"sha": "f619e76dc0caf0752720201e3f61f2c9e3cb583b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f619e76dc0caf0752720201e3f61f2c9e3cb583b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0", "html_url": "https://github.com/rust-lang/rust/commit/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eba2270a9cc1c0785cf42fa87fe154f425a2eea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eba2270a9cc1c0785cf42fa87fe154f425a2eea0", "html_url": "https://github.com/rust-lang/rust/commit/eba2270a9cc1c0785cf42fa87fe154f425a2eea0"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "69682652a6a512a312999aceb57e9222f9ec35ac", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=5ce9feeb8cb48a89feffe579cfc1a9281b4dfbb0", "patch": "@@ -479,6 +479,40 @@ impl<T: ?Sized> PartialEq for *mut T {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Eq for *mut T {}\n \n+/// Compare raw pointers for equality.\n+///\n+/// This is the same as using the `==` operator, but less generic:\n+/// the arguments have to be `*const T` raw pointers,\n+/// not anything that implements `PartialEq`.\n+///\n+/// This can be used to compare `&T` references (which coerce to `*const T` implicitly)\n+/// by their address rather than comparing the values they point to\n+/// (which is what the `PartialEq for &T` implementation does).\n+///\n+/// # Examples\n+///\n+/// ```\n+/// #![feature(ptr_eq)]\n+/// use std::ptr;\n+///\n+/// let five = 5;\n+/// let other_five = 5;\n+/// let five_ref = &five;\n+/// let same_five_ref = &five;\n+/// let other_five_ref = &other_five;\n+///\n+/// assert!(five_ref == same_five_ref);\n+/// assert!(five_ref == other_five_ref);\n+///\n+/// assert!(ptr::eq(five_ref, same_five_ref));\n+/// assert!(!ptr::eq(five_ref, other_five_ref));\n+/// ```\n+#[unstable(feature = \"ptr_eq\", reason = \"newly added\", issue = \"36497\")]\n+#[inline]\n+pub fn eq<T: ?Sized>(a: *const T, b: *const T) -> bool {\n+    a == b\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized> Clone for *const T {\n     #[inline]"}]}