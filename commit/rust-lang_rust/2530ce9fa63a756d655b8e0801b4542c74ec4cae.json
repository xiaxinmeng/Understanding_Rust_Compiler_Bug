{"sha": "2530ce9fa63a756d655b8e0801b4542c74ec4cae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MzBjZTlmYTYzYTc1NmQ2NTViOGUwODAxYjQ1NDJjNzRlYzRjYWU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-11-21T09:10:35Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2018-12-30T13:47:12Z"}, "message": "Add comment.", "tree": {"sha": "e70c7bdb30c4e040c88de308fe28d62c87ce7f0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e70c7bdb30c4e040c88de308fe28d62c87ce7f0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2530ce9fa63a756d655b8e0801b4542c74ec4cae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2530ce9fa63a756d655b8e0801b4542c74ec4cae", "html_url": "https://github.com/rust-lang/rust/commit/2530ce9fa63a756d655b8e0801b4542c74ec4cae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2530ce9fa63a756d655b8e0801b4542c74ec4cae/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f42a188d9464427803a609905f12a40248c791d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f42a188d9464427803a609905f12a40248c791d", "html_url": "https://github.com/rust-lang/rust/commit/2f42a188d9464427803a609905f12a40248c791d"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "c59c143f74b6227623321141946c611864813c28", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2530ce9fa63a756d655b8e0801b4542c74ec4cae/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2530ce9fa63a756d655b8e0801b4542c74ec4cae/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=2530ce9fa63a756d655b8e0801b4542c74ec4cae", "patch": "@@ -144,6 +144,13 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             _ => {}\n         }\n \n+        // Now, we look for the implementation of a Fn trait on the object's type.\n+        // We first do it with the explicit instruction to look for an impl of\n+        // `Fn<Tuple>`, with the tuple `Tuple` having an arity corresponding\n+        // to the number of call parameters.\n+        // If that fails (or_else branch), we try again without specifying the\n+        // shape of the tuple (hence the None). This allows to detect an Fn trait\n+        // is implemented, and use this information for diagnostic.\n         self.try_overloaded_call_traits(call_expr, adjusted_ty, Some(arg_exprs))\n             .or_else(|| self.try_overloaded_call_traits(call_expr, adjusted_ty, None))\n             .map(|(autoref, method)| {"}]}