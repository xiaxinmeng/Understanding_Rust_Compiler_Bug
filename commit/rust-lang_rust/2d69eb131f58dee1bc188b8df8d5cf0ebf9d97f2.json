{"sha": "2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNjllYjEzMWY1OGRlZTFiYzE4OGI4ZGY4ZDVjZjBlYmY5ZDk3ZjI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-03-13T18:27:09Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-03-13T18:27:09Z"}, "message": "Use chalk_ir::ClosureId", "tree": {"sha": "b22507ea0b79fcd5d38dcf5ae8b731467a38cc41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b22507ea0b79fcd5d38dcf5ae8b731467a38cc41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "html_url": "https://github.com/rust-lang/rust/commit/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be7a31fbd64943f71afe11b0413c99496526dddc", "url": "https://api.github.com/repos/rust-lang/rust/commits/be7a31fbd64943f71afe11b0413c99496526dddc", "html_url": "https://github.com/rust-lang/rust/commit/be7a31fbd64943f71afe11b0413c99496526dddc"}], "stats": {"total": 40, "additions": 17, "deletions": 23}, "files": [{"sha": "1b59616ba144e5b3927c0c3616d1035cafde202b", "filename": "crates/hir_ty/src/db.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdb.rs?ref=2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "patch": "@@ -85,7 +85,7 @@ pub trait HirDatabase: DefDatabase + Upcast<dyn DefDatabase> {\n     #[salsa::interned]\n     fn intern_impl_trait_id(&self, id: OpaqueTyId) -> InternedOpaqueTyId;\n     #[salsa::interned]\n-    fn intern_closure(&self, id: (DefWithBodyId, ExprId)) -> ClosureId;\n+    fn intern_closure(&self, id: (DefWithBodyId, ExprId)) -> InternedClosureId;\n \n     #[salsa::invoke(chalk::associated_ty_data_query)]\n     fn associated_ty_data(&self, id: chalk::AssocTypeId) -> Arc<chalk::AssociatedTyDatum>;\n@@ -157,8 +157,8 @@ pub struct InternedOpaqueTyId(salsa::InternId);\n impl_intern_key!(InternedOpaqueTyId);\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub struct ClosureId(salsa::InternId);\n-impl_intern_key!(ClosureId);\n+pub struct InternedClosureId(salsa::InternId);\n+impl_intern_key!(InternedClosureId);\n \n /// This exists just for Chalk, because Chalk just has a single `FnDefId` where\n /// we have different IDs for struct and enum variant constructors."}, {"sha": "2e21d796c3d569f49462b8d6b277c9caa7b8a335", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "patch": "@@ -264,8 +264,9 @@ impl<'a> InferenceContext<'a> {\n                     substs: Substs(sig_tys.clone().into()),\n                 })\n                 .intern(&Interner);\n+                let closure_id = self.db.intern_closure((self.owner, tgt_expr)).into();\n                 let closure_ty =\n-                    TyKind::Closure(self.owner, tgt_expr, Substs::single(sig_ty)).intern(&Interner);\n+                    TyKind::Closure(closure_id, Substs::single(sig_ty)).intern(&Interner);\n \n                 // Eagerly try to relate the closure type with the expected\n                 // type, otherwise we often won't have enough information to"}, {"sha": "ec2010e4bc191ef50a540634a7ec70bd8df4d971", "filename": "crates/hir_ty/src/lib.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flib.rs?ref=2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "patch": "@@ -27,9 +27,8 @@ use std::{iter, mem, ops::Deref, sync::Arc};\n \n use base_db::salsa;\n use hir_def::{\n-    builtin_type::BuiltinType, expr::ExprId, type_ref::Rawness, AssocContainerId, DefWithBodyId,\n-    FunctionId, GenericDefId, HasModule, LifetimeParamId, Lookup, TraitId, TypeAliasId,\n-    TypeParamId,\n+    builtin_type::BuiltinType, expr::ExprId, type_ref::Rawness, AssocContainerId, FunctionId,\n+    GenericDefId, HasModule, LifetimeParamId, Lookup, TraitId, TypeAliasId, TypeParamId,\n };\n use itertools::Itertools;\n \n@@ -53,7 +52,8 @@ pub use crate::traits::chalk::Interner;\n \n pub type ForeignDefId = chalk_ir::ForeignDefId<Interner>;\n pub type AssocTypeId = chalk_ir::AssocTypeId<Interner>;\n-pub(crate) type FnDefId = chalk_ir::FnDefId<Interner>;\n+pub type FnDefId = chalk_ir::FnDefId<Interner>;\n+pub type ClosureId = chalk_ir::ClosureId<Interner>;\n \n #[derive(Clone, PartialEq, Eq, Debug, Hash)]\n pub enum Lifetime {\n@@ -195,7 +195,7 @@ pub enum TyKind {\n     ///\n     /// The closure signature is stored in a `FnPtr` type in the first type\n     /// parameter.\n-    Closure(DefWithBodyId, ExprId, Substs),\n+    Closure(ClosureId, Substs),\n \n     /// Represents a foreign type declared in external blocks.\n     ForeignType(ForeignDefId),\n@@ -734,9 +734,7 @@ impl Ty {\n                 ty_id == ty_id2\n             }\n             (TyKind::ForeignType(ty_id, ..), TyKind::ForeignType(ty_id2, ..)) => ty_id == ty_id2,\n-            (TyKind::Closure(def, expr, _), TyKind::Closure(def2, expr2, _)) => {\n-                expr == expr2 && def == def2\n-            }\n+            (TyKind::Closure(id1, _), TyKind::Closure(id2, _)) => id1 == id2,\n             (TyKind::Ref(mutability, ..), TyKind::Ref(mutability2, ..))\n             | (TyKind::Raw(mutability, ..), TyKind::Raw(mutability2, ..)) => {\n                 mutability == mutability2"}, {"sha": "e7217bc115b76fa1bb117eda364d1294b01c58be", "filename": "crates/hir_ty/src/traits/chalk.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk.rs?ref=2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "patch": "@@ -716,14 +716,14 @@ impl From<crate::db::InternedOpaqueTyId> for OpaqueTyId {\n     }\n }\n \n-impl From<chalk_ir::ClosureId<Interner>> for crate::db::ClosureId {\n+impl From<chalk_ir::ClosureId<Interner>> for crate::db::InternedClosureId {\n     fn from(id: chalk_ir::ClosureId<Interner>) -> Self {\n         Self::from_intern_id(id.0)\n     }\n }\n \n-impl From<crate::db::ClosureId> for chalk_ir::ClosureId<Interner> {\n-    fn from(id: crate::db::ClosureId) -> Self {\n+impl From<crate::db::InternedClosureId> for chalk_ir::ClosureId<Interner> {\n+    fn from(id: crate::db::InternedClosureId) -> Self {\n         chalk_ir::ClosureId(id.as_intern_id())\n     }\n }"}, {"sha": "56a30363b1b8c1482a4227017a8bab0a4d279445", "filename": "crates/hir_ty/src/traits/chalk/mapping.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits%2Fchalk%2Fmapping.rs?ref=2d69eb131f58dee1bc188b8df8d5cf0ebf9d97f2", "patch": "@@ -72,10 +72,9 @@ impl ToChalk for Ty {\n             }\n             TyKind::Never => chalk_ir::TyKind::Never.intern(&Interner),\n \n-            TyKind::Closure(def, expr, substs) => {\n-                let closure_id = db.intern_closure((def, expr));\n+            TyKind::Closure(closure_id, substs) => {\n                 let substitution = substs.to_chalk(db);\n-                chalk_ir::TyKind::Closure(closure_id.into(), substitution).intern(&Interner)\n+                chalk_ir::TyKind::Closure(closure_id, substitution).intern(&Interner)\n             }\n \n             TyKind::Adt(adt_id, substs) => {\n@@ -203,11 +202,7 @@ impl ToChalk for Ty {\n                 TyKind::FnDef(fn_def_id, from_chalk(db, subst))\n             }\n \n-            chalk_ir::TyKind::Closure(id, subst) => {\n-                let id: crate::db::ClosureId = id.into();\n-                let (def, expr) = db.lookup_intern_closure(id);\n-                TyKind::Closure(def, expr, from_chalk(db, subst))\n-            }\n+            chalk_ir::TyKind::Closure(id, subst) => TyKind::Closure(id, from_chalk(db, subst)),\n \n             chalk_ir::TyKind::Foreign(foreign_def_id) => TyKind::ForeignType(foreign_def_id),\n             chalk_ir::TyKind::Generator(_, _) => unimplemented!(), // FIXME"}]}