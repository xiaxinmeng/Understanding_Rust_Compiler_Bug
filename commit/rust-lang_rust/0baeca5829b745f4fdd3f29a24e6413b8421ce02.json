{"sha": "0baeca5829b745f4fdd3f29a24e6413b8421ce02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYWVjYTU4MjliNzQ1ZjRmZGQzZjI5YTI0ZTY0MTNiODQyMWNlMDI=", "commit": {"author": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T17:57:13Z"}, "committer": {"name": "Ga\u00ebtan Cassiers", "email": "gaetan.cassiers@gmail.com", "date": "2015-05-24T17:57:13Z"}, "message": "Add rewrite for ExprParen", "tree": {"sha": "3a5d003b8d4079dd4889231cda0c9b650dcd238e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a5d003b8d4079dd4889231cda0c9b650dcd238e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0baeca5829b745f4fdd3f29a24e6413b8421ce02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0baeca5829b745f4fdd3f29a24e6413b8421ce02", "html_url": "https://github.com/rust-lang/rust/commit/0baeca5829b745f4fdd3f29a24e6413b8421ce02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0baeca5829b745f4fdd3f29a24e6413b8421ce02/comments", "author": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cassiersg", "id": 9348542, "node_id": "MDQ6VXNlcjkzNDg1NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/9348542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cassiersg", "html_url": "https://github.com/cassiersg", "followers_url": "https://api.github.com/users/cassiersg/followers", "following_url": "https://api.github.com/users/cassiersg/following{/other_user}", "gists_url": "https://api.github.com/users/cassiersg/gists{/gist_id}", "starred_url": "https://api.github.com/users/cassiersg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cassiersg/subscriptions", "organizations_url": "https://api.github.com/users/cassiersg/orgs", "repos_url": "https://api.github.com/users/cassiersg/repos", "events_url": "https://api.github.com/users/cassiersg/events{/privacy}", "received_events_url": "https://api.github.com/users/cassiersg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a5ef17eb12e1599ac6e14e267eaa6a246488cc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a5ef17eb12e1599ac6e14e267eaa6a246488cc2", "html_url": "https://github.com/rust-lang/rust/commit/6a5ef17eb12e1599ac6e14e267eaa6a246488cc2"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "66a79a3a777ce82b2daf7edd6bbb831243472d9f", "filename": "src/expr.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0baeca5829b745f4fdd3f29a24e6413b8421ce02/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baeca5829b745f4fdd3f29a24e6413b8421ce02/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=0baeca5829b745f4fdd3f29a24e6413b8421ce02", "patch": "@@ -125,6 +125,23 @@ impl<'a> FmtVisitor<'a> {\n         format!(\"{}({})\", callee_str, args_str)\n     }\n \n+    fn rewrite_paren(&mut self, subexpr: &ast::Expr, width: usize, offset: usize) -> String {\n+        debug!(\"rewrite_paren, width: {}, offset: {}\", width, offset);\n+        // 1 is for opening paren\n+        let subexpr_str = self.rewrite_expr(subexpr, width-1, offset+1);\n+        debug!(\"rewrite_paren, subexpr_str: `{}`\", subexpr_str);\n+        let mut lines = subexpr_str.rsplit('\\n');\n+        let last_line_len = lines.next().unwrap().len();\n+        let last_line_offset = if lines.next().is_none() {offset+1} else {0};\n+        if width + offset - last_line_offset - last_line_len > 0 {\n+            format!(\"({})\", subexpr_str)\n+        } else {\n+            // FIXME That's correct unless we have width < 2. Return an Optrion for such cases ?\n+            format!(\"({}\\n{} )\", subexpr_str, make_indent(offset))\n+        }\n+    }\n+\n+\n     pub fn rewrite_expr(&mut self, expr: &ast::Expr, width: usize, offset: usize) -> String {\n         match expr.node {\n             ast::Expr_::ExprLit(ref l) => {\n@@ -140,6 +157,9 @@ impl<'a> FmtVisitor<'a> {\n             ast::Expr_::ExprCall(ref callee, ref args) => {\n                 return self.rewrite_call(callee, args, width, offset);\n             }\n+            ast::Expr_::ExprParen(ref subexpr) => {\n+                return self.rewrite_paren(subexpr, width, offset);\n+            }\n             _ => {}\n         }\n "}]}