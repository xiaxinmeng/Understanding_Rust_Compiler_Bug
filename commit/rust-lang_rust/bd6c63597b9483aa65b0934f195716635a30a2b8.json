{"sha": "bd6c63597b9483aa65b0934f195716635a30a2b8", "node_id": "C_kwDOAAsO6NoAKGJkNmM2MzU5N2I5NDgzYWE2NWIwOTM0ZjE5NTcxNjYzNWEzMGEyYjg", "commit": {"author": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-10T19:20:15Z"}, "committer": {"name": "Kyle Matsuda", "email": "kyle.yoshio.matsuda@gmail.com", "date": "2023-01-14T07:13:07Z"}, "message": "change usages of const_param_default query to bound_const_param_default", "tree": {"sha": "a2919a82210becddad298eef49e74dcb21e2d432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2919a82210becddad298eef49e74dcb21e2d432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd6c63597b9483aa65b0934f195716635a30a2b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd6c63597b9483aa65b0934f195716635a30a2b8", "html_url": "https://github.com/rust-lang/rust/commit/bd6c63597b9483aa65b0934f195716635a30a2b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd6c63597b9483aa65b0934f195716635a30a2b8/comments", "author": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kylematsuda", "id": 17287790, "node_id": "MDQ6VXNlcjE3Mjg3Nzkw", "avatar_url": "https://avatars.githubusercontent.com/u/17287790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kylematsuda", "html_url": "https://github.com/kylematsuda", "followers_url": "https://api.github.com/users/kylematsuda/followers", "following_url": "https://api.github.com/users/kylematsuda/following{/other_user}", "gists_url": "https://api.github.com/users/kylematsuda/gists{/gist_id}", "starred_url": "https://api.github.com/users/kylematsuda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kylematsuda/subscriptions", "organizations_url": "https://api.github.com/users/kylematsuda/orgs", "repos_url": "https://api.github.com/users/kylematsuda/repos", "events_url": "https://api.github.com/users/kylematsuda/events{/privacy}", "received_events_url": "https://api.github.com/users/kylematsuda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c84917ad2efe6badd83d2acad64a2ad30ec68ddf", "html_url": "https://github.com/rust-lang/rust/commit/c84917ad2efe6badd83d2acad64a2ad30ec68ddf"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "cc29d40c0becdb2660eef245f7603047d10be12c", "filename": "compiler/rustc_hir_analysis/src/check/wfcheck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=bd6c63597b9483aa65b0934f195716635a30a2b8", "patch": "@@ -1350,7 +1350,7 @@ fn check_where_clauses<'tcx>(wfcx: &WfCheckingCtxt<'_, 'tcx>, span: Span, def_id\n                     // is incorrect when dealing with unused substs, for example\n                     // for `struct Foo<const N: usize, const M: usize = { 1 - 2 }>`\n                     // we should eagerly error.\n-                    let default_ct = tcx.const_param_default(param.def_id);\n+                    let default_ct = tcx.bound_const_param_default(param.def_id).subst_identity();\n                     if !default_ct.needs_subst() {\n                         wfcx.register_wf_obligation(\n                             tcx.def_span(param.def_id),\n@@ -1396,7 +1396,7 @@ fn check_where_clauses<'tcx>(wfcx: &WfCheckingCtxt<'_, 'tcx>, span: Span, def_id\n             GenericParamDefKind::Const { .. } => {\n                 // If the param has a default, ...\n                 if is_our_default(param) {\n-                    let default_ct = tcx.const_param_default(param.def_id);\n+                    let default_ct = tcx.bound_const_param_default(param.def_id).subst_identity();\n                     // ... and it's not a dependent default, ...\n                     if !default_ct.needs_subst() {\n                         // ... then substitute it with the default."}, {"sha": "f7caf30c74c5c026abeff268c68fdcfa9514ed12", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=bd6c63597b9483aa65b0934f195716635a30a2b8", "patch": "@@ -2070,7 +2070,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                 hir::GenericParamKind::Const { ref default, .. } => {\n                     let def_id = param.def_id.to_def_id();\n                     if default.is_some() {\n-                        record!(self.tables.const_param_default[def_id] <- self.tcx.const_param_default(def_id))\n+                        record!(self.tables.const_param_default[def_id] <- self.tcx.bound_const_param_default(def_id).subst_identity())\n                     }\n                 }\n             }"}, {"sha": "9ee1e012ef20fcae88ce48ccabd6d8c1d5d5fe8c", "filename": "compiler/rustc_privacy/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c63597b9483aa65b0934f195716635a30a2b8/compiler%2Frustc_privacy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_privacy%2Fsrc%2Flib.rs?ref=bd6c63597b9483aa65b0934f195716635a30a2b8", "patch": "@@ -838,7 +838,9 @@ impl ReachEverythingInTheInterfaceVisitor<'_, '_> {\n                 GenericParamDefKind::Const { has_default } => {\n                     self.visit(self.ev.tcx.type_of(param.def_id));\n                     if has_default {\n-                        self.visit(self.ev.tcx.const_param_default(param.def_id));\n+                        self.visit(\n+                            self.ev.tcx.bound_const_param_default(param.def_id).subst_identity(),\n+                        );\n                     }\n                 }\n             }"}, {"sha": "869c1e3512f4020fbca941e7c17f19fec2436909", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd6c63597b9483aa65b0934f195716635a30a2b8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd6c63597b9483aa65b0934f195716635a30a2b8/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=bd6c63597b9483aa65b0934f195716635a30a2b8", "patch": "@@ -506,7 +506,9 @@ fn clean_generic_param_def<'tcx>(\n                     Some(def.def_id),\n                 )),\n                 default: match has_default {\n-                    true => Some(Box::new(cx.tcx.const_param_default(def.def_id).to_string())),\n+                    true => Some(Box::new(\n+                        cx.tcx.bound_const_param_default(def.def_id).subst_identity().to_string(),\n+                    )),\n                     false => None,\n                 },\n             },"}]}