{"sha": "aca61b2c07f2f7b644ca000385473af9de2d5f77", "node_id": "C_kwDOAAsO6NoAKGFjYTYxYjJjMDdmMmY3YjY0NGNhMDAwMzg1NDczYWY5ZGUyZDVmNzc", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2023-05-27T12:37:18Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2023-06-13T13:47:02Z"}, "message": "Test that a couple more types of unsafe-ops get a wrapping unsafe block added", "tree": {"sha": "8e1da0299c6fc1e42f14f5da8e1a25026b380307", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e1da0299c6fc1e42f14f5da8e1a25026b380307"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aca61b2c07f2f7b644ca000385473af9de2d5f77", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIYEABYIAC4WIQSil6aeYAADwGp0ncHG9XSMbdFgewUCZIhzVhAcZ2l0QG5lbW8x\nNTcuY29tAAoJEMb1dIxt0WB7IEYA+QH6MQ100J4rS+EBE0dZI7hBLtzeGaFZ8Scz\nT1SnFqE9AQCsnZy7RbkGRquYe5Xkd4AxB+bSgTqNe6BUCT3dp3EUAw==\n=VsII\n-----END PGP SIGNATURE-----", "payload": "tree 8e1da0299c6fc1e42f14f5da8e1a25026b380307\nparent 975152ce30b8c0aa3cb7a3dca0a17c6c20e9db5b\nauthor Wim Looman <git@nemo157.com> 1685191038 +0200\ncommitter Wim Looman <git@nemo157.com> 1686664022 +0200\n\nTest that a couple more types of unsafe-ops get a wrapping unsafe block added\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aca61b2c07f2f7b644ca000385473af9de2d5f77", "html_url": "https://github.com/rust-lang/rust/commit/aca61b2c07f2f7b644ca000385473af9de2d5f77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aca61b2c07f2f7b644ca000385473af9de2d5f77/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "975152ce30b8c0aa3cb7a3dca0a17c6c20e9db5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/975152ce30b8c0aa3cb7a3dca0a17c6c20e9db5b", "html_url": "https://github.com/rust-lang/rust/commit/975152ce30b8c0aa3cb7a3dca0a17c6c20e9db5b"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "c36aabb7c92fac2bad06cd9818d58b3c90abc6cf", "filename": "tests/ui/unsafe/wrapping-unsafe-block-sugg.fixed", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.fixed?ref=aca61b2c07f2f7b644ca000385473af9de2d5f77", "patch": "@@ -9,4 +9,15 @@ pub unsafe fn foo() { unsafe {\n     unsf(); //~ ERROR call to unsafe function is unsafe\n }}\n \n+pub unsafe fn bar(x: *const i32) -> i32 { unsafe {\n+    let y = *x; //~ ERROR dereference of raw pointer is unsafe and requires unsafe block\n+    y + *x //~ ERROR dereference of raw pointer is unsafe and requires unsafe block\n+}}\n+\n+static mut BAZ: i32 = 0;\n+pub unsafe fn baz() -> i32 { unsafe {\n+    let y = BAZ; //~ ERROR use of mutable static is unsafe and requires unsafe block\n+    y + BAZ //~ ERROR use of mutable static is unsafe and requires unsafe block\n+}}\n+\n fn main() {}"}, {"sha": "95e22d1bc4d5e82241c12c63a122f3f52bbe852c", "filename": "tests/ui/unsafe/wrapping-unsafe-block-sugg.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.rs?ref=aca61b2c07f2f7b644ca000385473af9de2d5f77", "patch": "@@ -9,4 +9,15 @@ pub unsafe fn foo() {\n     unsf(); //~ ERROR call to unsafe function is unsafe\n }\n \n+pub unsafe fn bar(x: *const i32) -> i32 {\n+    let y = *x; //~ ERROR dereference of raw pointer is unsafe and requires unsafe block\n+    y + *x //~ ERROR dereference of raw pointer is unsafe and requires unsafe block\n+}\n+\n+static mut BAZ: i32 = 0;\n+pub unsafe fn baz() -> i32 {\n+    let y = BAZ; //~ ERROR use of mutable static is unsafe and requires unsafe block\n+    y + BAZ //~ ERROR use of mutable static is unsafe and requires unsafe block\n+}\n+\n fn main() {}"}, {"sha": "b05d87069abe44cf1b39c8f03712fe2c6247a8e4", "filename": "tests/ui/unsafe/wrapping-unsafe-block-sugg.stderr", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/aca61b2c07f2f7b644ca000385473af9de2d5f77/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsafe%2Fwrapping-unsafe-block-sugg.stderr?ref=aca61b2c07f2f7b644ca000385473af9de2d5f77", "patch": "@@ -26,5 +26,51 @@ LL |     unsf();\n    |\n    = note: consult the function's documentation for information on how to avoid undefined behavior\n \n-error: aborting due to 2 previous errors\n+error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/wrapping-unsafe-block-sugg.rs:13:13\n+   |\n+LL |     let y = *x;\n+   |             ^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+help: consider wrapping the function body in an unsafe block\n+   |\n+LL ~ pub unsafe fn bar(x: *const i32) -> i32 { unsafe {\n+LL |     let y = *x;\n+LL |     y + *x\n+LL ~ }}\n+   |\n+\n+error: dereference of raw pointer is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/wrapping-unsafe-block-sugg.rs:14:9\n+   |\n+LL |     y + *x\n+   |         ^^ dereference of raw pointer\n+   |\n+   = note: raw pointers may be null, dangling or unaligned; they can violate aliasing rules and cause data races: all of these are undefined behavior\n+\n+error: use of mutable static is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/wrapping-unsafe-block-sugg.rs:19:13\n+   |\n+LL |     let y = BAZ;\n+   |             ^^^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+help: consider wrapping the function body in an unsafe block\n+   |\n+LL ~ pub unsafe fn baz() -> i32 { unsafe {\n+LL |     let y = BAZ;\n+LL |     y + BAZ\n+LL ~ }}\n+   |\n+\n+error: use of mutable static is unsafe and requires unsafe block (error E0133)\n+  --> $DIR/wrapping-unsafe-block-sugg.rs:20:9\n+   |\n+LL |     y + BAZ\n+   |         ^^^ use of mutable static\n+   |\n+   = note: mutable statics can be mutated by multiple threads: aliasing violations or data races will cause undefined behavior\n+\n+error: aborting due to 6 previous errors\n "}]}