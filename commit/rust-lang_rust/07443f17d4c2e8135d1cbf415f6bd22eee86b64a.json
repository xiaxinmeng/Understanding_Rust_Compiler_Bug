{"sha": "07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NDQzZjE3ZDRjMmU4MTM1ZDFjYmY0MTVmNmJkMjJlZWU4NmI2NGE=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2020-03-12T01:02:52Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2020-04-26T11:24:16Z"}, "message": "Update name", "tree": {"sha": "1fc883588b4098f527849ab69f4fa8fef23b55cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fc883588b4098f527849ab69f4fa8fef23b55cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "html_url": "https://github.com/rust-lang/rust/commit/07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15262ec6be6fcfc9f27e174a0714d5a62e775fb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/15262ec6be6fcfc9f27e174a0714d5a62e775fb0", "html_url": "https://github.com/rust-lang/rust/commit/15262ec6be6fcfc9f27e174a0714d5a62e775fb0"}], "stats": {"total": 316, "additions": 158, "deletions": 158}, "files": [{"sha": "f4c164a324e32e387bd157dbc6f2f78993e7d348", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -660,8 +660,8 @@ impl Read for File {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     #[inline]\n@@ -680,8 +680,8 @@ impl Write for File {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.inner.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.inner.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -705,8 +705,8 @@ impl Read for &File {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     #[inline]\n@@ -725,8 +725,8 @@ impl Write for &File {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.inner.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.inner.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {"}, {"sha": "046b1a68880248577058f819601a6f34e541cd08", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -292,8 +292,8 @@ impl<R: Read> Read for BufReader<R> {\n         Ok(nread)\n     }\n \n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     // we can't skip unconditionally because of the large buffer case in read.\n@@ -684,8 +684,8 @@ impl<W: Write> Write for BufWriter<W> {\n         }\n     }\n \n-    fn can_write_vectored(&self) -> bool {\n-        self.get_ref().can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.get_ref().is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {"}, {"sha": "f3e3fc81a5d8249d029ed65d82de764bdeddf2dd", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -266,7 +266,7 @@ where\n         Ok(nread)\n     }\n \n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -377,7 +377,7 @@ impl Write for Cursor<&mut [u8]> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -398,7 +398,7 @@ impl Write for Cursor<&mut Vec<u8>> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -419,7 +419,7 @@ impl Write for Cursor<Vec<u8>> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -442,7 +442,7 @@ impl Write for Cursor<Box<[u8]>> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "01dff0b3eb3909c25b05057e84089a43ca763699", "filename": "src/libstd/io/impls.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fimpls.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -21,8 +21,8 @@ impl<R: Read + ?Sized> Read for &mut R {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        (**self).can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        (**self).is_read_vectored()\n     }\n \n     #[inline]\n@@ -58,8 +58,8 @@ impl<W: Write + ?Sized> Write for &mut W {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        (**self).can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        (**self).is_write_vectored()\n     }\n \n     #[inline]\n@@ -120,8 +120,8 @@ impl<R: Read + ?Sized> Read for Box<R> {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        (**self).can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        (**self).is_read_vectored()\n     }\n \n     #[inline]\n@@ -157,8 +157,8 @@ impl<W: Write + ?Sized> Write for Box<W> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        (**self).can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        (**self).is_write_vectored()\n     }\n \n     #[inline]\n@@ -261,7 +261,7 @@ impl Read for &[u8] {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -342,7 +342,7 @@ impl Write for &mut [u8] {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -382,7 +382,7 @@ impl Write for Vec<u8> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "c9db48db9bd408a1915de921cf8794ce37819f0f", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -588,8 +588,8 @@ pub trait Read {\n     /// and coalesce writes into a single buffer for higher performance.\n     ///\n     /// The default implementation returns `false`.\n-    #[unstable(feature = \"can_vector\", issue = \"none\")]\n-    fn can_read_vectored(&self) -> bool {\n+    #[unstable(feature = \"can_vector\", issue = \"69941\")]\n+    fn is_read_vectored(&self) -> bool {\n         false\n     }\n \n@@ -1325,8 +1325,8 @@ pub trait Write {\n     /// and coalesce writes into a single buffer for higher performance.\n     ///\n     /// The default implementation returns `false`.\n-    #[unstable(feature = \"can_vector\", issue = \"none\")]\n-    fn can_write_vectored(&self) -> bool {\n+    #[unstable(feature = \"can_vector\", issue = \"69941\")]\n+    fn is_write_vectored(&self) -> bool {\n         false\n     }\n "}, {"sha": "b65b150d2c3a18ef41bf55d91b36abbce3dd5dac", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -88,8 +88,8 @@ impl Read for StdinRaw {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     #[inline]\n@@ -107,8 +107,8 @@ impl Write for StdoutRaw {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -125,8 +125,8 @@ impl Write for StderrRaw {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -156,9 +156,9 @@ impl<W: io::Write> io::Write for Maybe<W> {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         match self {\n-            Maybe::Real(w) => w.can_write_vectored(),\n+            Maybe::Real(w) => w.is_write_vectored(),\n             Maybe::Fake => true,\n         }\n     }\n@@ -187,9 +187,9 @@ impl<R: io::Read> io::Read for Maybe<R> {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         match self {\n-            Maybe::Real(w) => w.can_read_vectored(),\n+            Maybe::Real(w) => w.is_read_vectored(),\n             Maybe::Fake => true,\n         }\n     }\n@@ -383,8 +383,8 @@ impl Read for Stdin {\n         self.lock().read_vectored(bufs)\n     }\n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.lock().can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.lock().is_read_vectored()\n     }\n     #[inline]\n     unsafe fn initializer(&self) -> Initializer {\n@@ -412,8 +412,8 @@ impl Read for StdinLock<'_> {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     #[inline]\n@@ -584,8 +584,8 @@ impl Write for Stdout {\n         self.lock().write_vectored(bufs)\n     }\n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.lock().can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.lock().is_write_vectored()\n     }\n     fn flush(&mut self) -> io::Result<()> {\n         self.lock().flush()\n@@ -606,8 +606,8 @@ impl Write for StdoutLock<'_> {\n         self.inner.borrow_mut().write_vectored(bufs)\n     }\n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.inner.borrow_mut().can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.inner.borrow_mut().is_write_vectored()\n     }\n     fn flush(&mut self) -> io::Result<()> {\n         self.inner.borrow_mut().flush()\n@@ -758,8 +758,8 @@ impl Write for Stderr {\n         self.lock().write_vectored(bufs)\n     }\n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.lock().can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.lock().is_write_vectored()\n     }\n     fn flush(&mut self) -> io::Result<()> {\n         self.lock().flush()\n@@ -780,8 +780,8 @@ impl Write for StderrLock<'_> {\n         self.inner.borrow_mut().write_vectored(bufs)\n     }\n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.inner.borrow_mut().can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.inner.borrow_mut().is_write_vectored()\n     }\n     fn flush(&mut self) -> io::Result<()> {\n         self.inner.borrow_mut().flush()"}, {"sha": "b9d5dc27db0063d80bde763d74e51400f361e6e0", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -180,7 +180,7 @@ impl Read for Repeat {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -241,7 +241,7 @@ impl Write for Sink {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "9ac54dd5f7a65e328092e72bf1aae22438310125", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -577,8 +577,8 @@ impl Read for TcpStream {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     #[inline]\n@@ -597,8 +597,8 @@ impl Write for TcpStream {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -616,8 +616,8 @@ impl Read for &TcpStream {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     #[inline]\n@@ -636,8 +636,8 @@ impl Write for &TcpStream {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {"}, {"sha": "b457d190b951066d429b92cafbd1b6b0564de0a4", "filename": "src/libstd/process.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -245,8 +245,8 @@ impl Write for ChildStdin {\n         self.inner.write_vectored(bufs)\n     }\n \n-    fn can_write_vectored(&self) -> bool {\n-        self.inner.can_write_vectored()\n+    fn is_write_vectored(&self) -> bool {\n+        self.inner.is_write_vectored()\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -305,8 +305,8 @@ impl Read for ChildStdout {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     #[inline]\n@@ -366,8 +366,8 @@ impl Read for ChildStderr {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     #[inline]"}, {"sha": "9323d7d89cf1e8b027848dabe46e41e187bdde0e", "filename": "src/libstd/sys/cloudabi/shims/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -214,7 +214,7 @@ impl File {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "9d40fa1a8eaed19ee276c8ce843c91ea48fb4375", "filename": "src/libstd/sys/cloudabi/shims/net.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -59,7 +59,7 @@ impl TcpStream {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "b2b68a0f0ca66daafdce6040b65b8f870f05fb7f", "filename": "src/libstd/sys/cloudabi/shims/pipe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fshims%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -24,7 +24,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "82ccab1462ba868bc3a9315bcac5a0716ca2830e", "filename": "src/libstd/sys/hermit/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -302,7 +302,7 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         false\n     }\n \n@@ -315,7 +315,7 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         false\n     }\n "}, {"sha": "5b5379c8b0581fe334096dd77a2940c55f5634df", "filename": "src/libstd/sys/hermit/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -100,7 +100,7 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -120,7 +120,7 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "10d0925823eb94660278ce2390c892c093d7e3c6", "filename": "src/libstd/sys/hermit/pipe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -12,7 +12,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -24,7 +24,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "208265de465adf3a1b81120c1eabe0f7f599a159", "filename": "src/libstd/sys/hermit/stdio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fhermit%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fhermit%2Fstdio.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -22,7 +22,7 @@ impl Stdin {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n }\n@@ -57,7 +57,7 @@ impl Stdout {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -96,7 +96,7 @@ impl Stderr {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "90158030c7fbe19c8a6c00f8d2e367fb8bc6fa45", "filename": "src/libstd/sys/sgx/fd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Ffd.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -35,7 +35,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -48,7 +48,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "ecb5b51cccdcd965d85e9ee8e22ecb878d876719", "filename": "src/libstd/sys/sgx/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -202,7 +202,7 @@ impl File {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -214,7 +214,7 @@ impl File {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "75a48e98e734bea335bed273474c73cb552cd546", "filename": "src/libstd/sys/sgx/net.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -150,7 +150,7 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         self.inner.inner.can_read_vectored()\n     }\n \n@@ -163,8 +163,8 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.inner.inner.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.inner.inner.is_write_vectored()\n     }\n \n     pub fn peer_addr(&self) -> io::Result<SocketAddr> {"}, {"sha": "10d0925823eb94660278ce2390c892c093d7e3c6", "filename": "src/libstd/sys/sgx/pipe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fsgx%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -12,7 +12,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -24,7 +24,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "ca1a2b5b3fbdc6edea8192e0f2ad515ae034a2cb", "filename": "src/libstd/sys/unix/ext/net.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -656,8 +656,8 @@ impl io::Write for UnixStream {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n-        io::Write::can_write_vectored(&&*self)\n+    fn is_write_vectored(&self) -> bool {\n+        io::Write::is_write_vectored(&&*self)\n     }\n \n     fn flush(&mut self) -> io::Result<()> {\n@@ -676,7 +676,7 @@ impl<'a> io::Write for &'a UnixStream {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         self.0.can_write_vectored()\n     }\n "}, {"sha": "1ef7ffacfcf1413d2143ceea2477cbe0b44c9bda", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -65,7 +65,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -122,7 +122,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "2cfc63d94922daea14b0894edbf848192eb84ca2", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -829,8 +829,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     pub fn read_at(&self, buf: &mut [u8], offset: u64) -> io::Result<usize> {\n@@ -846,8 +846,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn write_at(&self, buf: &[u8], offset: u64) -> io::Result<usize> {"}, {"sha": "a2912387108e136ebdac33134937e9a95d6ff444", "filename": "src/libstd/sys/unix/l4re.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fl4re.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fl4re.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fl4re.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -55,7 +55,7 @@ pub mod net {\n             unimpl!();\n         }\n \n-        pub fn can_read_vectored(&self) -> bool {\n+        pub fn is_read_vectored(&self) -> bool {\n             unimpl!();\n         }\n \n@@ -79,7 +79,7 @@ pub mod net {\n             unimpl!();\n         }\n \n-        pub fn can_write_vectored(&self) -> bool {\n+        pub fn is_write_vectored(&self) -> bool {\n             unimpl!();\n         }\n \n@@ -179,7 +179,7 @@ pub mod net {\n             unimpl!();\n         }\n \n-        pub fn can_read_vectored(&self) -> bool {\n+        pub fn is_read_vectored(&self) -> bool {\n             unimpl!();\n         }\n \n@@ -191,7 +191,7 @@ pub mod net {\n             unimpl!();\n         }\n \n-        pub fn can_write_vectored(&self) -> bool {\n+        pub fn is_write_vectored(&self) -> bool {\n             unimpl!();\n         }\n "}, {"sha": "f062bc012f7ef2c14c1e6900cb2da04bcaf7ba81", "filename": "src/libstd/sys/unix/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -227,8 +227,8 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     fn recv_from_with_flags(\n@@ -269,8 +269,8 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn set_timeout(&self, dur: Option<Duration>, kind: libc::c_int) -> io::Result<()> {"}, {"sha": "f2a2eabef9132509db4c864a40ba769b0974fb0f", "filename": "src/libstd/sys/unix/pipe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -65,8 +65,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n@@ -78,8 +78,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn fd(&self) -> &FileDesc {"}, {"sha": "f8353214cbca037fa635f342bf6e700a0aabf8e1", "filename": "src/libstd/sys/unix/stdio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstdio.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -22,7 +22,7 @@ impl io::Read for Stdin {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         true\n     }\n }\n@@ -43,7 +43,7 @@ impl io::Write for Stdout {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -68,7 +68,7 @@ impl io::Write for Stderr {\n     }\n \n     #[inline]\n-    fn can_write_vectored(&self) -> bool {\n+    fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "23e9dc428ce2366999c52a3b6855f8799c8c4adb", "filename": "src/libstd/sys/vxworks/fd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffd.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -55,7 +55,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    fn can_read_vectored(&self) -> bool {\n+    fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -105,7 +105,7 @@ impl FileDesc {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "557e65ca01b1cca63e92b556335042e81ed5acee", "filename": "src/libstd/sys/vxworks/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -352,8 +352,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     pub fn read_at(&self, buf: &mut [u8], offset: u64) -> io::Result<usize> {\n@@ -369,8 +369,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn write_at(&self, buf: &[u8], offset: u64) -> io::Result<usize> {"}, {"sha": "de0b15b43a2e2dd12918bfd0c978469df3a75e11", "filename": "src/libstd/sys/vxworks/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -164,8 +164,8 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     fn recv_from_with_flags(\n@@ -206,8 +206,8 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn set_timeout(&self, dur: Option<Duration>, kind: libc::c_int) -> io::Result<()> {"}, {"sha": "a18376212af51a32e8044194fa39892aced42b1d", "filename": "src/libstd/sys/vxworks/pipe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -30,8 +30,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.0.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.0.is_read_vectored()\n     }\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n@@ -43,8 +43,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.0.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.0.is_write_vectored()\n     }\n \n     pub fn fd(&self) -> &FileDesc {"}, {"sha": "793daea43c215baf07149e2157d73781a7102634", "filename": "src/libstd/sys/wasi/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -400,7 +400,7 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -413,7 +413,7 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "30b6b984f3041c114ca6bcd9ef8c60db15df5b4a", "filename": "src/libstd/sys/wasi/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -48,7 +48,7 @@ impl TcpStream {\n         unsupported()\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         unsupported()\n     }\n \n@@ -60,7 +60,7 @@ impl TcpStream {\n         unsupported()\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         unsupported()\n     }\n "}, {"sha": "10d0925823eb94660278ce2390c892c093d7e3c6", "filename": "src/libstd/sys/wasi/pipe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -12,7 +12,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -24,7 +24,7 @@ impl AnonPipe {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "9f9e35566ecf59bcbc46291a6deed0558f09740b", "filename": "src/libstd/sys/wasi/stdio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasi%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasi%2Fstdio.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -20,7 +20,7 @@ impl Stdin {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -43,7 +43,7 @@ impl Stdout {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n \n@@ -70,7 +70,7 @@ impl Stderr {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "ecb5b51cccdcd965d85e9ee8e22ecb878d876719", "filename": "src/libstd/sys/wasm/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasm%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasm%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -202,7 +202,7 @@ impl File {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -214,7 +214,7 @@ impl File {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "5c9f1098f9b7f0e8422840ffcce0a91d5ae1223b", "filename": "src/libstd/sys/wasm/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -44,7 +44,7 @@ impl TcpStream {\n         match self.0 {}\n     }\n \n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         match self.0 {}\n     }\n \n@@ -56,7 +56,7 @@ impl TcpStream {\n         match self.0 {}\n     }\n \n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         match self.0 {}\n     }\n "}, {"sha": "cdbfac267b9a1ac60722998f49df00165116f88b", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -410,8 +410,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.handle.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.handle.is_read_vectored()\n     }\n \n     pub fn read_at(&self, buf: &mut [u8], offset: u64) -> io::Result<usize> {\n@@ -427,8 +427,8 @@ impl File {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.handle.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.handle.is_write_vectored()\n     }\n \n     pub fn write_at(&self, buf: &[u8], offset: u64) -> io::Result<usize> {"}, {"sha": "2131cfc2c94bccba1458215e7b4d5c8ba7c03b14", "filename": "src/libstd/sys/windows/handle.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fhandle.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -93,7 +93,7 @@ impl RawHandle {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         false\n     }\n \n@@ -177,7 +177,7 @@ impl RawHandle {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         false\n     }\n "}, {"sha": "a15ded92f08c4a463510774d8ced2ce43c7820a8", "filename": "src/libstd/sys/windows/net.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -267,7 +267,7 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n+    pub fn is_read_vectored(&self) -> bool {\n         true\n     }\n \n@@ -330,7 +330,7 @@ impl Socket {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n+    pub fn is_write_vectored(&self) -> bool {\n         true\n     }\n "}, {"sha": "104a8db46596e17c3067983b8b0ebab04f98ea78", "filename": "src/libstd/sys/windows/pipe.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -183,8 +183,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n@@ -196,8 +196,8 @@ impl AnonPipe {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.inner.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.inner.is_write_vectored()\n     }\n }\n "}, {"sha": "a9b6079de7564e612d3b0efa88bdb04a9f0b9c5c", "filename": "src/libstd/sys_common/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys_common%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07443f17d4c2e8135d1cbf415f6bd22eee86b64a/src%2Flibstd%2Fsys_common%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fnet.rs?ref=07443f17d4c2e8135d1cbf415f6bd22eee86b64a", "patch": "@@ -266,8 +266,8 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_read_vectored(&self) -> bool {\n-        self.inner.can_read_vectored()\n+    pub fn is_read_vectored(&self) -> bool {\n+        self.inner.is_read_vectored()\n     }\n \n     pub fn write(&self, buf: &[u8]) -> io::Result<usize> {\n@@ -283,8 +283,8 @@ impl TcpStream {\n     }\n \n     #[inline]\n-    pub fn can_write_vectored(&self) -> bool {\n-        self.inner.can_write_vectored()\n+    pub fn is_write_vectored(&self) -> bool {\n+        self.inner.is_write_vectored()\n     }\n \n     pub fn peer_addr(&self) -> io::Result<SocketAddr> {"}]}