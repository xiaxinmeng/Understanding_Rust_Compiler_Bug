{"sha": "7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNGExNzZkZDNhMTc4OWQ1ZDEwY2I5OTVhNjJkYWExODVjYjljZGQ=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-10T05:01:27Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-15T01:02:17Z"}, "message": "Use parentheses for cond! macro instead of preceding pipes\n\nThis is temporary. Once the macro parser has improved or been re-written these can be removed.", "tree": {"sha": "3344b5785ebbc1a25aa137c916ed0d09b2324b46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3344b5785ebbc1a25aa137c916ed0d09b2324b46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "html_url": "https://github.com/rust-lang/rust/commit/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9824e18c2b02d74bd1bf646fea5f05477ca5071", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9824e18c2b02d74bd1bf646fea5f05477ca5071", "html_url": "https://github.com/rust-lang/rust/commit/b9824e18c2b02d74bd1bf646fea5f05477ca5071"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "6b051fa21b1e5780cdde6abecce55dcd7dae91d0", "filename": "src/libstd/fun_treemap.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Flibstd%2Ffun_treemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Flibstd%2Ffun_treemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffun_treemap.rs?ref=7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "patch": "@@ -37,8 +37,8 @@ pub fn insert<K:Copy + Eq + Ord,V:Copy>(m: Treemap<K, V>, k: K, v: V) -> Treemap\n     @match m {\n         @Empty => Node(@k, @v, @Empty, @Empty),\n         @Node(@copy kk, vv, left, right) => cond!(\n-            | k <  kk { Node(@kk, vv, insert(left, k, v), right) }\n-            | k == kk { Node(@kk, @v, left, right)               }\n+            (k <  kk) { Node(@kk, vv, insert(left, k, v), right) }\n+            (k == kk) { Node(@kk, @v, left, right)               }\n             _         { Node(@kk, vv, left, insert(right, k, v)) }\n         )\n     }\n@@ -49,8 +49,8 @@ pub fn find<K:Eq + Ord,V:Copy>(m: Treemap<K, V>, k: K) -> Option<V> {\n     match *m {\n         Empty => None,\n         Node(@ref kk, @copy v, left, right) => cond!(\n-            | k == *kk { Some(v)        }\n-            | k <  *kk { find(left, k)  }\n+            (k == *kk) { Some(v)        }\n+            (k <  *kk) { find(left, k)  }\n             _          { find(right, k) }\n         )\n     }"}, {"sha": "f9ca84473fb3cdbdac376bc53647cde07534c188", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "patch": "@@ -559,21 +559,21 @@ pub fn core_macros() -> ~str {\n     //\n     // ~~~\n     // let clamped = cond!(\n-    //     | x > mx { mx }\n-    //     | x < mn { mn }\n+    //     (x > mx) { mx }\n+    //     (x < mn) { mn }\n     //     _        { x  }\n     // );\n     // ~~~\n     //\n     // The optional default case is denoted by `_`.\n     //\n     macro_rules! cond (\n-        ($( | $pred:expr $body:block)+ _ $default:block ) => (\n+        ( $(($pred:expr) $body:block)+ _ $default:block ) => (\n             $(if $pred $body else)+\n             $default\n         );\n         // for if the default case was ommitted\n-        ( $( | $pred:expr $body:block )+ ) => (\n+        ( $(($pred:expr) $body:block)+ ) => (\n             $(if $pred $body)else+\n         );\n     )"}, {"sha": "6b90308f8a8680c82b63fadf2ab392cca5203495", "filename": "src/test/run-pass/cond-macro-no-default.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Ftest%2Frun-pass%2Fcond-macro-no-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Ftest%2Frun-pass%2Fcond-macro-no-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcond-macro-no-default.rs?ref=7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "patch": "@@ -10,8 +10,8 @@\n \n fn clamp<T:Copy + Ord + Signed>(x: T, mn: T, mx: T) -> T {\n     cond!(\n-        | x > mx { return mx; }\n-        | x < mn { return mn; }\n+        (x > mx) { return mx; }\n+        (x < mn) { return mn; }\n     )\n     return x;\n }\n@@ -20,4 +20,4 @@ fn main() {\n     assert_eq!(clamp(1, 2, 4), 2);\n     assert_eq!(clamp(8, 2, 4), 4);\n     assert_eq!(clamp(3, 2, 4), 3);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "929752b3f1a0daf1cf8d002f3e3d894f8ced6dec", "filename": "src/test/run-pass/cond-macro.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Ftest%2Frun-pass%2Fcond-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e4a176dd3a1789d5d10cb995a62daa185cb9cdd/src%2Ftest%2Frun-pass%2Fcond-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcond-macro.rs?ref=7e4a176dd3a1789d5d10cb995a62daa185cb9cdd", "patch": "@@ -10,8 +10,8 @@\n \n fn clamp<T:Copy + Ord + Signed>(x: T, mn: T, mx: T) -> T {\n     cond!(\n-        | x > mx { mx }\n-        | x < mn { mn }\n+        (x > mx) { mx }\n+        (x < mn) { mn }\n         _        { x  }\n     )\n }\n@@ -20,4 +20,4 @@ fn main() {\n     assert_eq!(clamp(1, 2, 4), 2);\n     assert_eq!(clamp(8, 2, 4), 4);\n     assert_eq!(clamp(3, 2, 4), 3);\n-}\n\\ No newline at end of file\n+}"}]}