{"sha": "0a8e401188062f0c60c989978352663b1e25e70e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOGU0MDExODgwNjJmMGM2MGM5ODk5NzgzNTI2NjNiMWUyNWU3MGU=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-04T17:12:33Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-03-04T17:12:33Z"}, "message": "Add debug_assert_matches macro.", "tree": {"sha": "5549d3b3a03b0c8359a55438b745180898efe409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5549d3b3a03b0c8359a55438b745180898efe409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a8e401188062f0c60c989978352663b1e25e70e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8e401188062f0c60c989978352663b1e25e70e", "html_url": "https://github.com/rust-lang/rust/commit/0a8e401188062f0c60c989978352663b1e25e70e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a8e401188062f0c60c989978352663b1e25e70e/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfce60ea3760acf8537d882fbae4fd1086e2b332", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfce60ea3760acf8537d882fbae4fd1086e2b332", "html_url": "https://github.com/rust-lang/rust/commit/cfce60ea3760acf8537d882fbae4fd1086e2b332"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "1d41d7f64bbfb11457ac3df777f9b4a80ff366e1", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0a8e401188062f0c60c989978352663b1e25e70e/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a8e401188062f0c60c989978352663b1e25e70e/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=0a8e401188062f0c60c989978352663b1e25e70e", "patch": "@@ -260,6 +260,40 @@ macro_rules! debug_assert_ne {\n     ($($arg:tt)*) => (if $crate::cfg!(debug_assertions) { $crate::assert_ne!($($arg)*); })\n }\n \n+/// Asserts that an expression matches any of the given patterns.\n+///\n+/// Like in a `match` expression, the pattern can be optionally followed by `if`\n+/// and a guard expression that has access to names bound by the pattern.\n+///\n+/// On panic, this macro will print the value of the expression with its\n+/// debug representation.\n+///\n+/// Unlike [`assert_matches!`], `debug_assert_matches!` statements are only\n+/// enabled in non optimized builds by default. An optimized build will not\n+/// execute `debug_assert_matches!` statements unless `-C debug-assertions` is\n+/// passed to the compiler. This makes `debug_assert_matches!` useful for\n+/// checks that are too expensive to be present in a release build but may be\n+/// helpful during development. The result of expanding `debug_assert_matches!`\n+/// is always type checked.\n+///\n+/// # Examples\n+///\n+/// ```\n+/// let a = 1u32.checked_add(2);\n+/// let b = 1u32.checked_sub(2);\n+/// debug_assert_matches!(a, Some(_));\n+/// debug_assert_matches!(b, None);\n+///\n+/// let c = Ok(\"abc\".to_string());\n+/// debug_assert_matches!(a, Ok(x) | Err(x) if x.len() < 100);\n+/// ```\n+#[macro_export]\n+#[unstable(feature = \"assert_matches\", issue = \"none\")]\n+#[allow_internal_unstable(assert_matches)]\n+macro_rules! debug_assert_matches {\n+    ($($arg:tt)*) => (if $crate::cfg!(debug_assertions) { $crate::assert_matches!($($arg)*); })\n+}\n+\n /// Returns whether the given expression matches any of the given patterns.\n ///\n /// Like in a `match` expression, the pattern can be optionally followed by `if`"}, {"sha": "467f69d45b5d1ec57394bea8e20672853de9bc1f", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a8e401188062f0c60c989978352663b1e25e70e/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a8e401188062f0c60c989978352663b1e25e70e/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=0a8e401188062f0c60c989978352663b1e25e70e", "patch": "@@ -551,8 +551,8 @@ pub use std_detect::detect;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow(deprecated, deprecated_in_future)]\n pub use core::{\n-    assert_eq, assert_matches, assert_ne, debug_assert, debug_assert_eq, debug_assert_ne, matches,\n-    r#try, todo, unimplemented, unreachable, write, writeln,\n+    assert_eq, assert_matches, assert_ne, debug_assert, debug_assert_eq, debug_assert_matches,\n+    debug_assert_ne, matches, r#try, todo, unimplemented, unreachable, write, writeln,\n };\n \n // Re-export built-in macros defined through libcore."}]}