{"sha": "44fdb98764e13faecbe2c307798bbe97348bddde", "node_id": "C_kwDOAAsO6NoAKDQ0ZmRiOTg3NjRlMTNmYWVjYmUyYzMwNzc5OGJiZTk3MzQ4YmRkZGU", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-12-16T23:35:15Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-12-16T23:35:15Z"}, "message": "Use field span in `rustc_macros` when emitting decode call\n\nThis will cause backtraces to point to the location of\nthe field in the struct/enum, rather than the derive macro.\n\nThis makes it clear which field was being decoded when the\nbacktrace was captured (which is especially useful if\nthere are multiple fields with the same type).", "tree": {"sha": "4c3fa0f912950bb696db5d92f54f65a8fe0e0dfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c3fa0f912950bb696db5d92f54f65a8fe0e0dfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44fdb98764e13faecbe2c307798bbe97348bddde", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmG7zXwACgkQtAh+UQ6Y\nsWQaxg/+Pi9aNVaTTVPB3Wmx2XXvNKtDtvlsjeNFs18WZJX+kAKu82qnjze2+gJA\nf6EZAD5YZsNqvhs31IaCkrAyPx8p05olaErTMiGx18iC8l4TlaQRLDdxqNY5Z8Kr\nYe6EWxKZoDB20Ir0roqzAwL7LeNxMdEGuHCnfYFdUXIo91L3BSrwO0FxENdhEiHW\nHJEpGVzBkD+5H2pEfH61eZdorQMk+Apqzwdt7RSBErecRyR7r6pJbYwJ956VZtg/\nzjGniaYecrCasnkxEltA3kHgBfTE14IqgbThRqJwUOeHNdbG3reS/dEaHzzEgDR8\niHEtqHw5S/4D0e5PBAot7CPujFYpgob4LS5YgT4raCikwp7v03o8ZqSnObPvCQY8\nygC8vzvZbsCMFQPmd2ybUzdek4ghbzmx1MbLUlaR8YVEDPXVesg+L0ZG0tcpqBZw\n+B2bVRi5YUh4hqOvD1xfKYIu5Hcc9QEZ6O44jm7HfWIw+HIAZ27f8Nb/HPKm+tbE\nPp1wOMwn1MHMqUN+pmhVpp3vak7p/jcwxPWMn1gWfGQt0GDfh2oIqmS1axBjutDj\nhVIwPDBdINBoWm1wTW29bNJPHUwUL9ta7qOmLHvQnMVf6MD2Lkc254cfC4Hmx9jD\nVelNcxGfw4rNTldm1xKMWevDPxzQ8ULPNu0TGxeEJVQrMsvJ1Ms=\n=A1XR\n-----END PGP SIGNATURE-----", "payload": "tree 4c3fa0f912950bb696db5d92f54f65a8fe0e0dfe\nparent 5531927e8af9b99ad923af4c827c91038bca51ee\nauthor Aaron Hill <aa1ronham@gmail.com> 1639697715 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1639697715 -0500\n\nUse field span in `rustc_macros` when emitting decode call\n\nThis will cause backtraces to point to the location of\nthe field in the struct/enum, rather than the derive macro.\n\nThis makes it clear which field was being decoded when the\nbacktrace was captured (which is especially useful if\nthere are multiple fields with the same type).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44fdb98764e13faecbe2c307798bbe97348bddde", "html_url": "https://github.com/rust-lang/rust/commit/44fdb98764e13faecbe2c307798bbe97348bddde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44fdb98764e13faecbe2c307798bbe97348bddde/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5531927e8af9b99ad923af4c827c91038bca51ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/5531927e8af9b99ad923af4c827c91038bca51ee", "html_url": "https://github.com/rust-lang/rust/commit/5531927e8af9b99ad923af4c827c91038bca51ee"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "3351564299ca521421e17a32143c69b91fa2776f", "filename": "compiler/rustc_macros/src/serialize.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/44fdb98764e13faecbe2c307798bbe97348bddde/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44fdb98764e13faecbe2c307798bbe97348bddde/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fserialize.rs?ref=44fdb98764e13faecbe2c307798bbe97348bddde", "patch": "@@ -1,6 +1,7 @@\n use proc_macro2::TokenStream;\n-use quote::quote;\n+use quote::{quote, quote_spanned};\n use syn::parse_quote;\n+use syn::spanned::Spanned;\n \n pub fn type_decodable_derive(mut s: synstructure::Structure<'_>) -> proc_macro2::TokenStream {\n     let decoder_ty = quote! { __D };\n@@ -104,27 +105,30 @@ fn decodable_body(\n }\n \n fn decode_field(field: &syn::Field, index: usize, is_struct: bool) -> proc_macro2::TokenStream {\n+    let field_span = field.ident.as_ref().map_or(field.ty.span(), |ident| ident.span());\n+\n     let decode_inner_method = if let syn::Type::Reference(_) = field.ty {\n         quote! { ::rustc_middle::ty::codec::RefDecodable::decode }\n     } else {\n         quote! { ::rustc_serialize::Decodable::decode }\n     };\n     let (decode_method, opt_field_name) = if is_struct {\n         let field_name = field.ident.as_ref().map_or_else(|| index.to_string(), |i| i.to_string());\n-        (\n-            proc_macro2::Ident::new(\"read_struct_field\", proc_macro2::Span::call_site()),\n-            quote! { #field_name, },\n-        )\n+        (proc_macro2::Ident::new(\"read_struct_field\", field_span), quote! { #field_name, })\n     } else {\n-        (\n-            proc_macro2::Ident::new(\"read_enum_variant_arg\", proc_macro2::Span::call_site()),\n-            quote! {},\n-        )\n+        (proc_macro2::Ident::new(\"read_enum_variant_arg\", field_span), quote! {})\n+    };\n+\n+    let __decoder = quote! { __decoder };\n+    // Use the span of the field for the method call, so\n+    // that backtraces will point to the field.\n+    let decode_call = quote_spanned! {field_span=>\n+        ::rustc_serialize::Decoder::#decode_method(\n+                #__decoder, #opt_field_name #decode_inner_method)\n     };\n \n     quote! {\n-        match ::rustc_serialize::Decoder::#decode_method(\n-            __decoder, #opt_field_name #decode_inner_method) {\n+        match #decode_call  {\n             ::std::result::Result::Ok(__res) => __res,\n             ::std::result::Result::Err(__err) => return ::std::result::Result::Err(__err),\n         }"}]}