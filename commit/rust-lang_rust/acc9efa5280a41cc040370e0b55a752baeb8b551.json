{"sha": "acc9efa5280a41cc040370e0b55a752baeb8b551", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjYzllZmE1MjgwYTQxY2MwNDAzNzBlMGI1NWE3NTJiYWViOGI1NTE=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2016-09-24T16:37:04Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2016-11-18T16:21:47Z"}, "message": "[LLVM 4.0] Update AlwaysInliner pass header and constructor", "tree": {"sha": "f8afa5484e92d2a999b2f4778252f300af949f44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8afa5484e92d2a999b2f4778252f300af949f44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acc9efa5280a41cc040370e0b55a752baeb8b551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acc9efa5280a41cc040370e0b55a752baeb8b551", "html_url": "https://github.com/rust-lang/rust/commit/acc9efa5280a41cc040370e0b55a752baeb8b551", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acc9efa5280a41cc040370e0b55a752baeb8b551/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d061fdc04ed78ff65138e96c212ecc678a9f8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/01d061fdc04ed78ff65138e96c212ecc678a9f8f", "html_url": "https://github.com/rust-lang/rust/commit/01d061fdc04ed78ff65138e96c212ecc678a9f8f"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "70f7ee3004dd437a74832efc6e9b72c7abdf245c", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/acc9efa5280a41cc040370e0b55a752baeb8b551/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/acc9efa5280a41cc040370e0b55a752baeb8b551/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=acc9efa5280a41cc040370e0b55a752baeb8b551", "patch": "@@ -22,6 +22,9 @@\n #include \"llvm/Target/TargetSubtargetInfo.h\"\n #include \"llvm/Transforms/IPO/PassManagerBuilder.h\"\n \n+#if LLVM_VERSION_GE(4, 0)\n+#include \"llvm/Transforms/IPO/AlwaysInliner.h\"\n+#endif\n \n #include \"llvm-c/Transforms/PassManagerBuilder.h\"\n \n@@ -539,7 +542,11 @@ LLVMRustPrintPasses() {\n \n extern \"C\" void\n LLVMRustAddAlwaysInlinePass(LLVMPassManagerBuilderRef PMB, bool AddLifetimes) {\n+#if LLVM_VERSION_GE(4, 0)\n+    unwrap(PMB)->Inliner = llvm::createAlwaysInlinerLegacyPass(AddLifetimes);\n+#else\n     unwrap(PMB)->Inliner = createAlwaysInlinerPass(AddLifetimes);\n+#endif\n }\n \n extern \"C\" void"}]}