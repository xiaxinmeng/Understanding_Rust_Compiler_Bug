{"sha": "631543dcb4e79d3c134a7dfc8e87b62287e96796", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTU0M2RjYjRlNzlkM2MxMzRhN2RmYzhlODdiNjIyODdlOTY3OTY=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-17T11:49:18Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:11Z"}, "message": "restore Vec::extend specialization for vec::IntoIter sources that\nwas lost during refactoring", "tree": {"sha": "6aec12873e134a944cee381765a9841a28738fa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aec12873e134a944cee381765a9841a28738fa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/631543dcb4e79d3c134a7dfc8e87b62287e96796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/631543dcb4e79d3c134a7dfc8e87b62287e96796", "html_url": "https://github.com/rust-lang/rust/commit/631543dcb4e79d3c134a7dfc8e87b62287e96796", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/631543dcb4e79d3c134a7dfc8e87b62287e96796/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07a8c1b95ad23a0d08bffce2613eb36cd0be8400", "url": "https://api.github.com/repos/rust-lang/rust/commits/07a8c1b95ad23a0d08bffce2613eb36cd0be8400", "html_url": "https://github.com/rust-lang/rust/commit/07a8c1b95ad23a0d08bffce2613eb36cd0be8400"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "29878851da5ce04b7041ea8c130cad9e11155596", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/631543dcb4e79d3c134a7dfc8e87b62287e96796/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/631543dcb4e79d3c134a7dfc8e87b62287e96796/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=631543dcb4e79d3c134a7dfc8e87b62287e96796", "patch": "@@ -2297,6 +2297,15 @@ where\n     }\n }\n \n+impl<T> SpecExtend<T, IntoIter<T>> for Vec<T> {\n+    fn spec_extend(&mut self, mut iterator: IntoIter<T>) {\n+        unsafe {\n+            self.append_elements(iterator.as_slice() as _);\n+        }\n+        iterator.ptr = iterator.end;\n+    }\n+}\n+\n impl<'a, T: 'a, I> SpecExtend<&'a T, I> for Vec<T>\n where\n     I: Iterator<Item = &'a T>,"}]}