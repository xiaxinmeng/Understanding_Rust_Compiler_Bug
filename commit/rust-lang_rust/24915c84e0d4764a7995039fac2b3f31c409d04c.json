{"sha": "24915c84e0d4764a7995039fac2b3f31c409d04c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0OTE1Yzg0ZTBkNDc2NGE3OTk1MDM5ZmFjMmIzZjMxYzQwOWQwNGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-14T19:24:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-15T01:45:54Z"}, "message": "mk: Move version info to top of main.mk\n\nJust so it's easier to find.", "tree": {"sha": "2c9c73a35e5aa760e9c3360082f94ff9e3e6e8d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c9c73a35e5aa760e9c3360082f94ff9e3e6e8d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24915c84e0d4764a7995039fac2b3f31c409d04c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24915c84e0d4764a7995039fac2b3f31c409d04c", "html_url": "https://github.com/rust-lang/rust/commit/24915c84e0d4764a7995039fac2b3f31c409d04c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24915c84e0d4764a7995039fac2b3f31c409d04c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "334af011f01ceda1086d335231ada3363190b8a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/334af011f01ceda1086d335231ada3363190b8a9", "html_url": "https://github.com/rust-lang/rust/commit/334af011f01ceda1086d335231ada3363190b8a9"}], "stats": {"total": 55, "additions": 33, "deletions": 22}, "files": [{"sha": "aa5ae77b3ac7780c2ed71b86925e258b4d012779", "filename": "mk/main.mk", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/24915c84e0d4764a7995039fac2b3f31c409d04c/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/24915c84e0d4764a7995039fac2b3f31c409d04c/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=24915c84e0d4764a7995039fac2b3f31c409d04c", "patch": "@@ -8,6 +8,39 @@\n # option. This file may not be copied, modified, or distributed\n # except according to those terms.\n \n+######################################################################\n+# Version numbers and strings\n+######################################################################\n+\n+# The version number\n+CFG_RELEASE = 0.10-pre\n+\n+# The version string plus commit information\n+CFG_VERSION = $(CFG_RELEASE)\n+CFG_GIT_DIR := $(CFG_SRC_DIR).git\n+# since $(CFG_GIT) may contain spaces (especially on Windows),\n+# we need to escape them. (\" \" to r\"\\ \")\n+# Note that $(subst ...) ignores space after `subst`,\n+# so we use a hack: define $(SPACE) which contains space character.\n+SPACE :=\n+SPACE +=\n+ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT))),)\n+ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT_DIR))),)\n+    CFG_VERSION += $(shell git --git-dir='$(CFG_GIT_DIR)' log -1 \\\n+                     --pretty=format:'(%h %ci)')\n+    CFG_VER_HASH = $(shell git --git-dir='$(CFG_GIT_DIR)' rev-parse HEAD)\n+endif\n+endif\n+\n+# windows exe's need numeric versions - don't use anything but\n+# numbers and dots here\n+CFG_VERSION_WIN = $(subst -pre,,$(CFG_RELEASE))\n+\n+\n+######################################################################\n+# More configuration\n+######################################################################\n+\n # We track all of the object files we might build so that we can find\n # and include all of the .d files in one fell swoop.\n ALL_OBJ_FILES :=\n@@ -97,28 +130,6 @@ else\n   CFG_VALGRIND_COMPILE :=\n endif\n \n-# version-string calculation\n-CFG_GIT_DIR := $(CFG_SRC_DIR).git\n-CFG_RELEASE = 0.10-pre\n-CFG_VERSION = $(CFG_RELEASE)\n-# windows exe's need numeric versions - don't use anything but\n-# numbers and dots here\n-CFG_VERSION_WIN = 0.10\n-\n-# since $(CFG_GIT) may contain spaces (especially on Windows),\n-# we need to escape them. (\" \" to r\"\\ \")\n-# Note that $(subst ...) ignores space after `subst`,\n-# so we use a hack: define $(SPACE) which contains space character.\n-SPACE :=\n-SPACE +=\n-ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT))),)\n-ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT_DIR))),)\n-    CFG_VERSION += $(shell git --git-dir='$(CFG_GIT_DIR)' log -1 \\\n-                     --pretty=format:'(%h %ci)')\n-    CFG_VER_HASH = $(shell git --git-dir='$(CFG_GIT_DIR)' rev-parse HEAD)\n-endif\n-endif\n-\n ifdef CFG_ENABLE_VALGRIND\n   $(info cfg: enabling valgrind (CFG_ENABLE_VALGRIND))\n else"}]}