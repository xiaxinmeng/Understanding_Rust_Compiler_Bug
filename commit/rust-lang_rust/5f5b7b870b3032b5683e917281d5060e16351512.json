{"sha": "5f5b7b870b3032b5683e917281d5060e16351512", "node_id": "C_kwDOAAsO6NoAKDVmNWI3Yjg3MGIzMDMyYjU2ODNlOTE3MjgxZDUwNjBlMTYzNTE1MTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-10-06T05:07:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-06T05:07:35Z"}, "message": "Rollup merge of #102672 - notriddle:notriddle/fqn-in-band, r=GuillaumeGomez\n\nrustdoc: remove unused CSS class `in-band`\n\nSince a7c25b29575c17434406b69773f8c2961af343b3 removed `in-band` from code headers, the only remaining uses of the `in-band` class are:\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/write_shared.rs#L520-L521\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/templates/print_item.html#L2-L3\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/context.rs#L637-L638\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/mod.rs#L368-L369\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/mod.rs#L401-L402\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/static/js/main.js#L525\n\nSince all of these uses are nested below `h1.fqn`, we can get rid of it, and the support code that was used for when `in-band` was part of item rendering.", "tree": {"sha": "34db4034381ac5cc0c5a707e4b9a89eb2400e7e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34db4034381ac5cc0c5a707e4b9a89eb2400e7e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f5b7b870b3032b5683e917281d5060e16351512", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjPmKXCRBK7hj4Ov3rIwAA1z8IAG2WiZH2IjwDUzX3nphLZovI\n4biB/tToO5EAd/2CQdgkshP/09yHnnGIzl8WP6hQc24NaxW97SLOLVXdMBKb1tvW\n/DPcrODj7rh38PGiLVKmkW4w64SCQWxofbSIhBWNBYiAea9x5UnjNWCTiFoBr3nH\n/3IkzhzrUFKMDUb68ERCFW8dZh4xq14u8KH3EvZlM3OSkmSxzUHWiGUkUxQX3hc6\njLHZo3P585Krm7aaFpkCS5SJl+ibf0UaK36dz0BafT12yJxtaMYgAE2A8iZvyFt+\nWMXIpNRM9j66nmrY70xIP4A1tZJVwBpLU2qTFupdm1hHzq6IdWBP8oqEi8AGFow=\n=x6gy\n-----END PGP SIGNATURE-----\n", "payload": "tree 34db4034381ac5cc0c5a707e4b9a89eb2400e7e9\nparent 27579a214dc2a918e67bffb51a0825005e8bd42e\nparent 3cb03cb34247383ffb67a017ae70134741e8c4da\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1665032855 +0200\ncommitter GitHub <noreply@github.com> 1665032855 +0200\n\nRollup merge of #102672 - notriddle:notriddle/fqn-in-band, r=GuillaumeGomez\n\nrustdoc: remove unused CSS class `in-band`\n\nSince a7c25b29575c17434406b69773f8c2961af343b3 removed `in-band` from code headers, the only remaining uses of the `in-band` class are:\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/write_shared.rs#L520-L521\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/templates/print_item.html#L2-L3\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/context.rs#L637-L638\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/mod.rs#L368-L369\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/render/mod.rs#L401-L402\n\nhttps://github.com/rust-lang/rust/blob/02cd79afb8080fce8c8ce35533c54d8ecf8f390e/src/librustdoc/html/static/js/main.js#L525\n\nSince all of these uses are nested below `h1.fqn`, we can get rid of it, and the support code that was used for when `in-band` was part of item rendering.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f5b7b870b3032b5683e917281d5060e16351512", "html_url": "https://github.com/rust-lang/rust/commit/5f5b7b870b3032b5683e917281d5060e16351512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f5b7b870b3032b5683e917281d5060e16351512/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27579a214dc2a918e67bffb51a0825005e8bd42e", "url": "https://api.github.com/repos/rust-lang/rust/commits/27579a214dc2a918e67bffb51a0825005e8bd42e", "html_url": "https://github.com/rust-lang/rust/commit/27579a214dc2a918e67bffb51a0825005e8bd42e"}, {"sha": "3cb03cb34247383ffb67a017ae70134741e8c4da", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cb03cb34247383ffb67a017ae70134741e8c4da", "html_url": "https://github.com/rust-lang/rust/commit/3cb03cb34247383ffb67a017ae70134741e8c4da"}], "stats": {"total": 108, "additions": 45, "deletions": 63}, "files": [{"sha": "902b9522429903c1dca388e31222ecf133d83b12", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -634,9 +634,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                 write!(\n                     buf,\n                     \"<div class=\\\"main-heading\\\">\\\n-                     <h1 class=\\\"fqn\\\">\\\n-                         <span class=\\\"in-band\\\">Rustdoc settings</span>\\\n-                     </h1>\\\n+                     <h1 class=\\\"fqn\\\">Rustdoc settings</h1>\\\n                      <span class=\\\"out-of-band\\\">\\\n                          <a id=\\\"back\\\" href=\\\"javascript:void(0)\\\" onclick=\\\"history.back();\\\">\\\n                             Back\\"}, {"sha": "4bbb322d3701cf864f09202bd85be47383c30e38", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -364,11 +364,7 @@ impl AllTypes {\n             }\n         }\n \n-        f.write_str(\n-            \"<h1 class=\\\"fqn\\\">\\\n-                 <span class=\\\"in-band\\\">List of all items</span>\\\n-             </h1>\",\n-        );\n+        f.write_str(\"<h1 class=\\\"fqn\\\">List of all items</h1>\");\n         // Note: print_entries does not escape the title, because we know the current set of titles\n         // doesn't require escaping.\n         print_entries(f, &self.structs, ItemSection::Structs);\n@@ -398,9 +394,7 @@ fn scrape_examples_help(shared: &SharedContext<'_>) -> String {\n     let mut ids = IdMap::default();\n     format!(\n         \"<div class=\\\"main-heading\\\">\\\n-            <h1 class=\\\"fqn\\\">\\\n-                <span class=\\\"in-band\\\">About scraped examples</span>\\\n-            </h1>\\\n+            <h1 class=\\\"fqn\\\">About scraped examples</h1>\\\n         </div>\\\n         <div>{}</div>\",\n         Markdown {"}, {"sha": "85f63c985b37663d1e7d42137de337cac8ba1aed", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -517,9 +517,7 @@ if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};\n             };\n \n             let content = format!(\n-                \"<h1 class=\\\"fqn\\\">\\\n-                     <span class=\\\"in-band\\\">List of all crates</span>\\\n-                </h1><ul class=\\\"all-items\\\">{}</ul>\",\n+                \"<h1 class=\\\"fqn\\\">List of all crates</h1><ul class=\\\"all-items\\\">{}</ul>\",\n                 krates\n                     .iter()\n                     .map(|s| {"}, {"sha": "b86b8f9dbf8646afa921ff142aea14f444289c77", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -148,6 +148,13 @@ h1, h2, h3, h4 {\n h1.fqn {\n \tmargin: 0;\n \tpadding: 0;\n+\tflex-grow: 1;\n+\t/* We use overflow-wrap: break-word for Safari, which doesn't recognize\n+\t   `anywhere`: https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap */\n+\toverflow-wrap: break-word;\n+\t/* Then override it with `anywhere`, which is required to make non-Safari browsers break\n+\t   more aggressively when we want them to. */\n+\toverflow-wrap: anywhere;\n }\n .main-heading {\n \tdisplay: flex;\n@@ -214,7 +221,7 @@ pre.rust a,\n .sidebar h2 a,\n .sidebar h3 a,\n .mobile-topbar h2 a,\n-.in-band a,\n+h1.fqn a,\n .search-results a,\n .module-item .stab,\n .import-item .stab,\n@@ -654,19 +661,6 @@ pre.example-line-numbers {\n \tfont-weight: normal;\n }\n \n-.in-band {\n-\tflex-grow: 1;\n-\tmargin: 0px;\n-\tpadding: 0px;\n-\t/* We use overflow-wrap: break-word for Safari, which doesn't recognize\n-\t   `anywhere`: https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-wrap */\n-\toverflow-wrap: break-word;\n-\t/* Then override it with `anywhere`, which is required to make non-Safari browsers break\n-\t   more aggressively when we want them to. */\n-\toverflow-wrap: anywhere;\n-\tbackground-color: var(--main-background-color);\n-}\n-\n .docblock code, .docblock-short code,\n pre, .rustdoc.source .example-wrap {\n \tbackground-color: var(--code-block-background-color);\n@@ -752,7 +746,7 @@ a {\n \tdisplay: initial;\n }\n \n-.in-band:hover > .anchor, .impl:hover > .anchor, .method.trait-impl:hover > .anchor,\n+.impl:hover > .anchor, .method.trait-impl:hover > .anchor,\n .type.trait-impl:hover > .anchor, .associatedconstant.trait-impl:hover > .anchor,\n .associatedtype.trait-impl:hover > .anchor {\n \tdisplay: inline-block;"}, {"sha": "6d21ffdc792543e06a8b0cf82afd55ce2aee3ad8", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -522,7 +522,7 @@ function loadCss(cssFileName) {\n         }\n \n         let currentNbImpls = implementors.getElementsByClassName(\"impl\").length;\n-        const traitName = document.querySelector(\"h1.fqn > .in-band > .trait\").textContent;\n+        const traitName = document.querySelector(\"h1.fqn > .trait\").textContent;\n         const baseIdName = \"impl-\" + traitName + \"-\";\n         const libs = Object.getOwnPropertyNames(imp);\n         // We don't want to include impls from this JS file, when the HTML already has them."}, {"sha": "b6ce3ea3dee996972e2f2dcf2d932a1bb5255088", "filename": "src/librustdoc/html/templates/print_item.html", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fprint_item.html?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -1,18 +1,16 @@\n <div class=\"main-heading\"> {#- -#}\n     <h1 class=\"fqn\"> {#- -#}\n-        <span class=\"in-band\"> {#- -#}\n-            {{-typ-}}\n-            {#- The breadcrumbs of the item path, like std::string -#}\n-            {%- for component in path_components -%}\n-            <a href=\"{{component.path|safe}}index.html\">{{component.name}}</a>::<wbr>\n-            {%- endfor -%}\n-            <a class=\"{{item_type}}\" href=\"#\">{{name}}</a> {#- -#}\n-            <button id=\"copy-path\" onclick=\"copy_path(this)\" title=\"Copy item path to clipboard\"> {#- -#}\n-                <img src=\"{{static_root_path|safe}}clipboard{{page.resource_suffix}}.svg\" {# -#}\n-                    width=\"19\" height=\"18\" {# -#}\n-                    alt=\"Copy item path\"> {#- -#}\n-            </button> {#- -#}\n-        </span> {#- -#}\n+        {{-typ-}}\n+        {#- The breadcrumbs of the item path, like std::string -#}\n+        {%- for component in path_components -%}\n+        <a href=\"{{component.path|safe}}index.html\">{{component.name}}</a>::<wbr>\n+        {%- endfor -%}\n+        <a class=\"{{item_type}}\" href=\"#\">{{name}}</a> {#- -#}\n+        <button id=\"copy-path\" onclick=\"copy_path(this)\" title=\"Copy item path to clipboard\"> {#- -#}\n+            <img src=\"{{static_root_path|safe}}clipboard{{page.resource_suffix}}.svg\" {# -#}\n+                width=\"19\" height=\"18\" {# -#}\n+                alt=\"Copy item path\"> {#- -#}\n+        </button> {#- -#}\n     </h1> {#- -#}\n     <span class=\"out-of-band\"> {#- -#}\n         {% if !stability_since_raw.is_empty() %}"}, {"sha": "fc05fe669d12fb13b471b342c7f416ab94a306c7", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -10,8 +10,8 @@ local-storage: {\"rustdoc-theme\": \"light\", \"rustdoc-use-system-theme\": \"false\"}\n reload:\n \n assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(0, 0, 0)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(0, 0, 0)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(173, 55, 138)\"})\n+assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(0, 0, 0)\"})\n+assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(173, 55, 138)\"})\n assert-css: (\n     \".rightside .srclink\",\n     {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n@@ -41,7 +41,7 @@ goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(0, 0, 0)\"})\n \n assert-css: (\".sidebar a\", {\"color\": \"rgb(53, 109, 164)\"})\n-assert-css: (\".in-band a\", {\"color\": \"rgb(0, 0, 0)\"})\n+assert-css: (\"h1.fqn a\", {\"color\": \"rgb(0, 0, 0)\"})\n \n // We move the cursor over the \"Implementations\" title so the anchor is displayed.\n move-cursor-to: \"h2#implementations\"\n@@ -60,8 +60,8 @@ local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n \n assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(221, 221, 221)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(221, 221, 221)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(45, 191, 184)\"})\n+assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(221, 221, 221)\"})\n+assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(45, 191, 184)\"})\n assert-css: (\n     \".rightside .srclink\",\n     {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n@@ -91,7 +91,7 @@ goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(221, 221, 221)\"})\n \n assert-css: (\".sidebar a\", {\"color\": \"rgb(253, 191, 53)\"})\n-assert-css: (\".in-band a\", {\"color\": \"rgb(221, 221, 221)\"})\n+assert-css: (\"h1.fqn a\", {\"color\": \"rgb(221, 221, 221)\"})\n \n // We move the cursor over the \"Implementations\" title so the anchor is displayed.\n move-cursor-to: \"h2#implementations\"\n@@ -110,8 +110,8 @@ local-storage: {\"rustdoc-theme\": \"ayu\", \"rustdoc-use-system-theme\": \"false\"}\n goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n \n assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(197, 197, 197)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(255, 255, 255)\"})\n-assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(255, 160, 165)\"})\n+assert-css: (\".fqn a:nth-of-type(1)\", {\"color\": \"rgb(255, 255, 255)\"})\n+assert-css: (\".fqn a:nth-of-type(2)\", {\"color\": \"rgb(255, 160, 165)\"})\n assert-css: (\n     \".rightside .srclink\",\n     {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n@@ -141,7 +141,7 @@ goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(255, 255, 255)\"})\n \n assert-css: (\".sidebar a\", {\"color\": \"rgb(83, 177, 219)\"})\n-assert-css: (\".in-band a\", {\"color\": \"rgb(255, 255, 255)\"})\n+assert-css: (\"h1.fqn a\", {\"color\": \"rgb(255, 255, 255)\"})\n \n // We move the cursor over the \"Implementations\" title so the anchor is displayed.\n move-cursor-to: \"h2#implementations\""}, {"sha": "c197d4dd29c293a43c469c44f2cbe972d619ad03", "filename": "src/test/rustdoc-gui/search-result-go-to-first.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-result-go-to-first.goml?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -3,17 +3,17 @@\n // First, we check that the first page doesn't have the string we're looking for to ensure\n // that the feature is changing page as expected.\n goto: file://|DOC_PATH|/test_docs/index.html\n-assert-text-false: (\".fqn .in-band\", \"Struct test_docs::Foo\")\n+assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n \n // We now check that we land on the search result page if \"go_to_first\" isn't set.\n goto: file://|DOC_PATH|/test_docs/index.html?search=struct%3AFoo\n // Waiting for the search results to appear...\n wait-for: \"#titles\"\n-assert-text-false: (\".fqn .in-band\", \"Struct test_docs::Foo\")\n+assert-text-false: (\".fqn\", \"Struct test_docs::Foo\")\n // Ensure that the search results are displayed, not the \"normal\" content.\n assert-css: (\"#main-content\", {\"display\": \"none\"})\n \n // Now we can check that the feature is working as expected!\n goto: file://|DOC_PATH|/test_docs/index.html?search=struct%3AFoo&go_to_first=true\n // Waiting for the page to load...\n-wait-for-text: (\".fqn .in-band\", \"Struct test_docs::Foo\")\n+wait-for-text: (\".fqn\", \"Struct test_docs::Foo\")"}, {"sha": "c902d186cc2abe5c5d017ffcc53c121cdb5f7595", "filename": "src/test/rustdoc-gui/toggle-click-deadspace.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-click-deadspace.goml?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -12,4 +12,4 @@ assert-attribute-false: (\".impl-items .rustdoc-toggle\", {\"open\": \"\"})\n \n // Click the \"Trait\" part of \"impl Trait\" and verify it navigates.\n click: \"#impl-Trait-for-Foo h3 a:first-of-type\"\n-assert-text: (\".fqn .in-band\", \"Trait lib2::Trait\")\n+assert-text: (\".fqn\", \"Trait lib2::Trait\")"}, {"sha": "0c947ea2e28788aaab6f11a7b0f38e9a410e6c42", "filename": "src/test/rustdoc/index-page.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Findex-page.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Findex-page.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Findex-page.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -5,7 +5,7 @@\n #![crate_name = \"foo\"]\n \n // @has foo/../index.html\n-// @has - '//span[@class=\"in-band\"]' 'List of all crates'\n+// @has - '//h1[@class=\"fqn\"]' 'List of all crates'\n // @has - '//ul[@class=\"all-items\"]//a[@href=\"foo/index.html\"]' 'foo'\n // @has - '//ul[@class=\"all-items\"]//a[@href=\"all_item_types/index.html\"]' 'all_item_types'\n pub struct Foo;"}, {"sha": "ea1273850912d27035272f46da4df74f8eb575ae", "filename": "src/test/rustdoc/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fkeyword.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -7,7 +7,7 @@\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a' 'Keywords'\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a/@href' '#keywords'\n // @has foo/keyword.match.html '//a[@class=\"keyword\"]' 'match'\n-// @has foo/keyword.match.html '//span[@class=\"in-band\"]' 'Keyword match'\n+// @has foo/keyword.match.html '//h1[@class=\"fqn\"]' 'Keyword match'\n // @has foo/keyword.match.html '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/foo/index.html"}, {"sha": "ea8d2d1660266a45ea9744264a8f572f91270ab9", "filename": "src/test/rustdoc/primitive-reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-reference.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -9,7 +9,7 @@\n // @has - '//div[@class=\"sidebar-elems\"]//li/a/@href' '#primitives'\n // @has foo/primitive.reference.html\n // @has - '//a[@class=\"primitive\"]' 'reference'\n-// @has - '//span[@class=\"in-band\"]' 'Primitive Type reference'\n+// @has - '//h1[@class=\"fqn\"]' 'Primitive Type reference'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n \n // There should be only one implementation listed."}, {"sha": "cdddd6b65078e9f2098d61fd539479ae3203ce96", "filename": "src/test/rustdoc/primitive-slice-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-slice-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-slice-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-slice-auto-trait.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.slice.html '//a[@class=\"primitive\"]' 'slice'\n-// @has - '//span[@class=\"in-band\"]' 'Primitive Type slice'\n+// @has - '//h1[@class=\"fqn\"]' 'Primitive Type slice'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'impl<T> Send for [T]where T: Send'"}, {"sha": "df681457f0f1f27f495a1780bfde020dd220cc7a", "filename": "src/test/rustdoc/primitive-tuple-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-tuple-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-tuple-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-tuple-auto-trait.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.tuple.html '//a[@class=\"primitive\"]' 'tuple'\n-// @has - '//span[@class=\"in-band\"]' 'Primitive Type tuple'\n+// @has - '//h1[@class=\"fqn\"]' 'Primitive Type tuple'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'Send'"}, {"sha": "391e33bea616a511a5cb3e0f57b2b69ddba5b65c", "filename": "src/test/rustdoc/primitive-unit-auto-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-unit-auto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive-unit-auto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-unit-auto-trait.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -4,7 +4,7 @@\n #![feature(rustdoc_internals)]\n \n // @has foo/primitive.unit.html '//a[@class=\"primitive\"]' 'unit'\n-// @has - '//span[@class=\"in-band\"]' 'Primitive Type unit'\n+// @has - '//h1[@class=\"fqn\"]' 'Primitive Type unit'\n // @has - '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has - '//h2[@id=\"synthetic-implementations\"]' 'Auto Trait Implementations'\n // @has - '//div[@id=\"synthetic-implementations-list\"]//h3' 'impl Send for ()'"}, {"sha": "6347fdac3db53bbbd652a7fa94ee558b35a0313f", "filename": "src/test/rustdoc/primitive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f5b7b870b3032b5683e917281d5060e16351512/src%2Ftest%2Frustdoc%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive.rs?ref=5f5b7b870b3032b5683e917281d5060e16351512", "patch": "@@ -7,7 +7,7 @@\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a' 'Primitive Types'\n // @has foo/index.html '//div[@class=\"sidebar-elems\"]//li/a/@href' '#primitives'\n // @has foo/primitive.i32.html '//a[@class=\"primitive\"]' 'i32'\n-// @has foo/primitive.i32.html '//span[@class=\"in-band\"]' 'Primitive Type i32'\n+// @has foo/primitive.i32.html '//h1[@class=\"fqn\"]' 'Primitive Type i32'\n // @has foo/primitive.i32.html '//section[@id=\"main-content\"]//div[@class=\"docblock\"]//p' 'this is a test!'\n // @has foo/index.html '//a/@href' '../foo/index.html'\n // @!has foo/index.html '//span' '\ud83d\udd12'"}]}