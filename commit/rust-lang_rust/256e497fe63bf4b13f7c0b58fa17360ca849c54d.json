{"sha": "256e497fe63bf4b13f7c0b58fa17360ca849c54d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NmU0OTdmZTYzYmY0YjEzZjdjMGI1OGZhMTczNjBjYTg0OWM1NGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-26T15:31:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-26T15:31:49Z"}, "message": "Auto merge of #42245 - frewsxcv:rollup, r=frewsxcv\n\nRollup of 7 pull requests\n\n- Successful merges: #42169, #42215, #42216, #42224, #42230, #42236, #42241\n- Failed merges:", "tree": {"sha": "48ce0f683bf00fa6f1225aa1a77ba735b03412ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48ce0f683bf00fa6f1225aa1a77ba735b03412ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/256e497fe63bf4b13f7c0b58fa17360ca849c54d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/256e497fe63bf4b13f7c0b58fa17360ca849c54d", "html_url": "https://github.com/rust-lang/rust/commit/256e497fe63bf4b13f7c0b58fa17360ca849c54d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/256e497fe63bf4b13f7c0b58fa17360ca849c54d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c732446eddeb2d387763c7974d7e78217e44519a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c732446eddeb2d387763c7974d7e78217e44519a", "html_url": "https://github.com/rust-lang/rust/commit/c732446eddeb2d387763c7974d7e78217e44519a"}, {"sha": "252a28638396d72f4c3a3dff6717b7aaddc017cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/252a28638396d72f4c3a3dff6717b7aaddc017cc", "html_url": "https://github.com/rust-lang/rust/commit/252a28638396d72f4c3a3dff6717b7aaddc017cc"}], "stats": {"total": 208, "additions": 168, "deletions": 40}, "files": [{"sha": "56050c20c69151d117309df59f110f62f2411805", "filename": "src/doc/unstable-book/src/library-features/step-trait.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fstep-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fstep-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fstep-trait.md?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -1,7 +1,7 @@\n # `step_trait`\n \n-The tracking issue for this feature is: [#27741]\n+The tracking issue for this feature is: [#42168]\n \n-[#27741]: https://github.com/rust-lang/rust/issues/27741\n+[#42168]: https://github.com/rust-lang/rust/issues/42168\n \n ------------------------"}, {"sha": "233ff8a51545dd12b9ca826f14c1806634d71259", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -393,7 +393,12 @@ impl<T> [T] {\n     }\n \n     /// Returns a reference to an element or subslice, without doing bounds\n-    /// checking. So use it very carefully!\n+    /// checking.\n+    ///\n+    /// This is generally not recommended, use with caution! For a safe\n+    /// alternative see [`get`].\n+    ///\n+    /// [`get`]: #method.get\n     ///\n     /// # Examples\n     ///\n@@ -413,7 +418,12 @@ impl<T> [T] {\n     }\n \n     /// Returns a mutable reference to an element or subslice, without doing\n-    /// bounds checking. So use it very carefully!\n+    /// bounds checking.\n+    ///\n+    /// This is generally not recommended, use with caution! For a safe\n+    /// alternative see [`get_mut`].\n+    ///\n+    /// [`get_mut`]: #method.get_mut\n     ///\n     /// # Examples\n     ///"}, {"sha": "eb32f4781948df7d2fa99c63cbde502ad75fff13", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -435,6 +435,12 @@ impl str {\n     /// Creates a string slice from another string slice, bypassing safety\n     /// checks.\n     ///\n+    /// This is generally not recommended, use with caution! For a safe\n+    /// alternative see [`str`] and [`Index`].\n+    ///\n+    /// [`str`]: primitive.str.html\n+    /// [`Index`]: ops/trait.Index.html\n+    ///\n     /// This new slice goes from `begin` to `end`, including `begin` but\n     /// excluding `end`.\n     ///\n@@ -477,6 +483,11 @@ impl str {\n \n     /// Creates a string slice from another string slice, bypassing safety\n     /// checks.\n+    /// This is generally not recommended, use with caution! For a safe\n+    /// alternative see [`str`] and [`IndexMut`].\n+    ///\n+    /// [`str`]: primitive.str.html\n+    /// [`IndexMut`]: ops/trait.IndexMut.html\n     ///\n     /// This new slice goes from `begin` to `end`, including `begin` but\n     /// excluding `end`.\n@@ -1018,7 +1029,7 @@ impl str {\n     ///\n     /// ```\n     /// let x = \"(///)\".to_string();\n-    /// let d: Vec<_> = x.split('/').collect();;\n+    /// let d: Vec<_> = x.split('/').collect();\n     ///\n     /// assert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n     /// ```"}, {"sha": "5eefa59e7ea10198f7f9419c39395d0c4058153b", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -309,7 +309,7 @@ pub use self::iterator::Iterator;\n \n #[unstable(feature = \"step_trait\",\n            reason = \"likely to be replaced by finer-grained traits\",\n-           issue = \"27741\")]\n+           issue = \"42168\")]\n pub use self::range::Step;\n #[unstable(feature = \"step_by\", reason = \"recent addition\",\n            issue = \"27741\")]"}, {"sha": "e02823fd81280f7d44011fa9f277f83d0c2a9608", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -20,7 +20,7 @@ use super::{FusedIterator, TrustedLen};\n /// two `Step` objects.\n #[unstable(feature = \"step_trait\",\n            reason = \"likely to be replaced by finer-grained traits\",\n-           issue = \"27741\")]\n+           issue = \"42168\")]\n pub trait Step: PartialOrd + Sized {\n     /// Steps `self` if possible.\n     fn step(&self, by: &Self) -> Option<Self>;\n@@ -55,7 +55,7 @@ macro_rules! step_impl_unsigned {\n     ($($t:ty)*) => ($(\n         #[unstable(feature = \"step_trait\",\n                    reason = \"likely to be replaced by finer-grained traits\",\n-                   issue = \"27741\")]\n+                   issue = \"42168\")]\n         impl Step for $t {\n             #[inline]\n             fn step(&self, by: &$t) -> Option<$t> {\n@@ -115,7 +115,7 @@ macro_rules! step_impl_signed {\n     ($($t:ty)*) => ($(\n         #[unstable(feature = \"step_trait\",\n                    reason = \"likely to be replaced by finer-grained traits\",\n-                   issue = \"27741\")]\n+                   issue = \"42168\")]\n         impl Step for $t {\n             #[inline]\n             fn step(&self, by: &$t) -> Option<$t> {\n@@ -187,7 +187,7 @@ macro_rules! step_impl_no_between {\n     ($($t:ty)*) => ($(\n         #[unstable(feature = \"step_trait\",\n                    reason = \"likely to be replaced by finer-grained traits\",\n-                   issue = \"27741\")]\n+                   issue = \"42168\")]\n         impl Step for $t {\n             #[inline]\n             fn step(&self, by: &$t) -> Option<$t> {"}, {"sha": "17678ef2bbd8fd85162c988f3386c0a78a5d5cc6", "filename": "src/librustc_llvm/Cargo.lock", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c732446eddeb2d387763c7974d7e78217e44519a/src%2Flibrustc_llvm%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/c732446eddeb2d387763c7974d7e78217e44519a/src%2Flibrustc_llvm%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2FCargo.lock?ref=c732446eddeb2d387763c7974d7e78217e44519a", "patch": "@@ -1,22 +0,0 @@\n-[root]\n-name = \"rustc_llvm\"\n-version = \"0.0.0\"\n-dependencies = [\n- \"build_helper 0.1.0\",\n- \"gcc 0.3.28 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustc_bitflags 0.0.0\",\n-]\n-\n-[[package]]\n-name = \"build_helper\"\n-version = \"0.1.0\"\n-\n-[[package]]\n-name = \"gcc\"\n-version = \"0.3.28\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-\n-[[package]]\n-name = \"rustc_bitflags\"\n-version = \"0.0.0\"\n-"}, {"sha": "698850f0e9e7fa6e20908930f6b3d3b5a23040d0", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -141,7 +141,7 @@ impl<'a, 'tcx> Visitor<'tcx> for CheckCrateVisitor<'a, 'tcx> {\n         let outer_penv = self.tcx.infer_ctxt(body_id, Reveal::UserFacing).enter(|infcx| {\n             let param_env = infcx.param_env.clone();\n             let outer_penv = mem::replace(&mut self.param_env, param_env);\n-            let region_maps = &self.tcx.region_maps(item_def_id);;\n+            let region_maps = &self.tcx.region_maps(item_def_id);\n             euv::ExprUseVisitor::new(self, region_maps, &infcx).consume_body(body);\n             outer_penv\n         });"}, {"sha": "a3fa1279ffb4575866cb091e27afe236bbfb85ca", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -901,7 +901,7 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n         let llty = type_of::type_of(bcx.ccx, val.ty);\n         let cast_ptr = bcx.pointercast(dst.llval, llty.ptr_to());\n         let in_type = val.ty;\n-        let out_type = dst.ty.to_ty(bcx.tcx());;\n+        let out_type = dst.ty.to_ty(bcx.tcx());\n         let llalign = cmp::min(bcx.ccx.align_of(in_type), bcx.ccx.align_of(out_type));\n         self.store_operand(bcx, cast_ptr, Some(llalign), val);\n     }"}, {"sha": "0c9d74df2485c30eb9aacdceb21642b6d06810c1", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -963,7 +963,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n     pub fn prohibit_projection(&self, span: Span) {\n         let mut err = struct_span_err!(self.tcx().sess, span, E0229,\n                                        \"associated type bindings are not allowed here\");\n-        err.span_label(span, \"associate type not allowed here\").emit();\n+        err.span_label(span, \"associated type not allowed here\").emit();\n     }\n \n     // Check a type Path and convert it to a Ty."}, {"sha": "69843199348b585ee053cfefb98ea6853f7f1482", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -1545,7 +1545,7 @@ pub fn create_dir<P: AsRef<Path>>(path: P) -> io::Result<()> {\n /// determined to not exist) are outlined by `fs::create_dir`.\n ///\n /// Notable exception is made for situations where any of the directories\n-/// specified in the `path` could not be created as it was created concurrently.\n+/// specified in the `path` could not be created as it was being created concurrently.\n /// Such cases are considered success. In other words: calling `create_dir_all`\n /// concurrently from multiple threads or processes is guaranteed to not fail\n /// due to race itself."}, {"sha": "d15f9937f13828faff915c8a195fc907cd7b12b9", "filename": "src/test/compile-fail/E0229.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2FE0229.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2FE0229.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0229.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -22,7 +22,7 @@ impl Foo for isize {\n \n fn baz<I>(x: &<I as Foo<A=Bar>>::A) {}\n //~^ ERROR associated type bindings are not allowed here [E0229]\n-//~| NOTE associate type not allowed here\n+//~| NOTE associated type not allowed here\n \n fn main() {\n }"}, {"sha": "e1acc8eb475ac1cfe883573d5cba87425e2a4611", "filename": "src/test/compile-fail/issue-23543.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-23543.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-23543.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23543.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -16,7 +16,7 @@ pub trait D {\n     fn f<T>(self)\n         where T<Bogus = Foo>: A;\n         //~^ ERROR associated type bindings are not allowed here [E0229]\n-        //~| NOTE associate type not allowed here\n+        //~| NOTE associated type not allowed here\n }\n \n fn main() {}"}, {"sha": "3cd6f9ebc7185b8992c53c8cc37c0d29257eb549", "filename": "src/test/compile-fail/issue-23544.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-23544.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-23544.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23544.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -14,7 +14,7 @@ pub trait D {\n     fn f<T>(self)\n         where T<Bogus = Self::AlsoBogus>: A;\n         //~^ ERROR associated type bindings are not allowed here [E0229]\n-        //~| NOTE associate type not allowed here\n+        //~| NOTE associated type not allowed here\n }\n \n fn main() {}"}, {"sha": "2f513b034c36da8a2e681a67d08bb0197fccac44", "filename": "src/test/compile-fail/issue-36379.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-36379.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-36379.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-36379.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(conservative_impl_trait, rustc_attrs)]\n+\n+fn _test() -> impl Default { }\n+\n+#[rustc_error]\n+fn main() { } //~ ERROR compilation successful"}, {"sha": "e1f7f64e01a666f1817f2f26dcc1756f511406ad", "filename": "src/test/compile-fail/issue-37550.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-37550.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-37550.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-37550.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(const_fn)]\n+\n+const fn x() {\n+    let t = true; //~ ERROR blocks in constant functions are limited to items and tail expressions\n+    let x = || t; //~ ERROR blocks in constant functions are limited to items and tail expressions\n+}\n+\n+fn main() {}"}, {"sha": "f86f570d25dc6729173211355c5ba406f0fe93b1", "filename": "src/test/compile-fail/issue-37665.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-37665.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z unstable-options --unpretty=mir\n+\n+use std::path::MAIN_SEPARATOR;\n+\n+fn main() {\n+    let mut foo : String = \"hello\".to_string();\n+    foo.push(MAIN_SEPARATOR);\n+    println!(\"{}\", foo);\n+    let x: () = 0; //~ ERROR: mismatched types\n+}"}, {"sha": "311d0ceb4d37bc30853b432a169badb79c040357", "filename": "src/test/compile-fail/issue-38160.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-38160.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-38160.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38160.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(associated_consts, rustc_attrs)]\n+#![allow(warnings)]\n+\n+trait MyTrait {\n+    const MY_CONST: &'static str;\n+}\n+\n+macro_rules! my_macro {\n+    () => {\n+        struct MyStruct;\n+\n+        impl MyTrait for MyStruct {\n+            const MY_CONST: &'static str = stringify!(abc);\n+        }\n+    }\n+}\n+\n+my_macro!();\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}, {"sha": "65b17a3db0b59310d279dc59df768459cd3a4fae", "filename": "src/test/compile-fail/issue-38954.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-38954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-38954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-38954.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+fn _test(ref _p: str) {}\n+\n+#[rustc_error]\n+fn main() { } //~ ERROR compilation successful"}, {"sha": "9d8abbfc65d07309584172448605ea701ca1f50d", "filename": "src/test/compile-fail/issue-39362.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-39362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Fcompile-fail%2Fissue-39362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-39362.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+enum Foo {\n+    Bar { bar: Bar, id: usize }\n+}\n+\n+enum Bar {\n+    A, B, C, D, E, F\n+}\n+\n+fn test(f: Foo) {\n+    match f {\n+        //~^ ERROR non-exhaustive patterns\n+        //~| patterns\n+        Foo::Bar { bar: Bar::A, .. } => (),\n+        Foo::Bar { bar: Bar::B, .. } => (),\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "49dc970ba3f0dfbe1e6c7ead8b0b144c1ef0ad8c", "filename": "src/test/run-pass/issue-16671.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "raw_url": "https://github.com/rust-lang/rust/raw/256e497fe63bf4b13f7c0b58fa17360ca849c54d/src%2Ftest%2Frun-pass%2Fissue-16671.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16671.rs?ref=256e497fe63bf4b13f7c0b58fa17360ca849c54d", "patch": "@@ -13,7 +13,7 @@\n fn foo<F: FnOnce()>(_f: F) { }\n \n fn main() {\n-    let mut var = Vec::new();;\n+    let mut var = Vec::new();\n     foo(move|| {\n         var.push(1);\n     });"}]}