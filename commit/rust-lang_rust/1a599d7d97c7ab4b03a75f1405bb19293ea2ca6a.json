{"sha": "1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "node_id": "C_kwDOAAsO6NoAKDFhNTk5ZDdkOTdjN2FiNGIwM2E3NWYxNDA1YmIxOTI5M2VhMmNhNmE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-25T19:53:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-25T19:53:09Z"}, "message": "Rollup merge of #107675 - jsgf:link-directives, r=davidtwco\n\nImplement -Zlink-directives=yes/no\n\n`-Zlink-directives=no` will ignored `#[link]` directives while compiling a crate, so nothing is emitted into the crate's metadata.  The assumption is that the build system already knows about the crate's native dependencies and can provide them at link time without these directives.\n\nThis is another way to address issue # #70093, which is currently addressed by `-Zlink-native-libraries` (implemented in #70095). The latter is implemented at link time, which has the effect of ignoring `#[link]` in *every* crate. This makes it a very large hammer as it requires all native dependencies to be known to the build system to be at all usable, including those in sysroot libraries. I think this means its effectively unused, and definitely under-used.\n\nBeing able to control this on a crate-by-crate basis should make it much easier to apply when needed.\n\nI'm not sure if we need both mechanisms, but we can decide that later.\n\ncc `@pcwalton` `@cramertj`", "tree": {"sha": "a9c4b6d0c3d15586deab0f97608a33141fd65f3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9c4b6d0c3d15586deab0f97608a33141fd65f3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj+mclCRBK7hj4Ov3rIwAAe1wIACoul2ZXOzQLObdvU30OpqoT\nQN9T0DcYPql/2XkOS27IPE4SOgBE00LevEiaruve7Q7AXWsoCV/jb9h+0V7L6xvz\nPtC312jParcmr+E3H9uiSmfOvlpvy0fmnTpgDR7cktRgVbS7GNAo/m+Nsw0G1ZgE\nD+jD+zG4414SYDFrzDRcMPBpIlvt8HO0DeP8boBPx8dvJUZazm5Gp6bchYRpSOe9\n3N8wEyerz0fP/TKyvJ9NGkKU1bV6h+BnPA/9WLbT8cW/pJReokBv1WDonZGSJ/Ip\nAUnOi+1Qt0o92Jw0yQBiYBRiUSPE6w2svGBS7dmC/mZvbO3wEkBR0uc/HDA4OlY=\n=DrVL\n-----END PGP SIGNATURE-----\n", "payload": "tree a9c4b6d0c3d15586deab0f97608a33141fd65f3b\nparent a4119ba0aeb6b32375be85a1f47cfc785b147084\nparent fde2e40e43b487357fad103beec0ec228b077f61\nauthor Michael Goulet <michael@errs.io> 1677354789 -0800\ncommitter GitHub <noreply@github.com> 1677354789 -0800\n\nRollup merge of #107675 - jsgf:link-directives, r=davidtwco\n\nImplement -Zlink-directives=yes/no\n\n`-Zlink-directives=no` will ignored `#[link]` directives while compiling a crate, so nothing is emitted into the crate's metadata.  The assumption is that the build system already knows about the crate's native dependencies and can provide them at link time without these directives.\n\nThis is another way to address issue # #70093, which is currently addressed by `-Zlink-native-libraries` (implemented in #70095). The latter is implemented at link time, which has the effect of ignoring `#[link]` in *every* crate. This makes it a very large hammer as it requires all native dependencies to be known to the build system to be at all usable, including those in sysroot libraries. I think this means its effectively unused, and definitely under-used.\n\nBeing able to control this on a crate-by-crate basis should make it much easier to apply when needed.\n\nI'm not sure if we need both mechanisms, but we can decide that later.\n\ncc `@pcwalton` `@cramertj`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "html_url": "https://github.com/rust-lang/rust/commit/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4119ba0aeb6b32375be85a1f47cfc785b147084", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4119ba0aeb6b32375be85a1f47cfc785b147084", "html_url": "https://github.com/rust-lang/rust/commit/a4119ba0aeb6b32375be85a1f47cfc785b147084"}, {"sha": "fde2e40e43b487357fad103beec0ec228b077f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde2e40e43b487357fad103beec0ec228b077f61", "html_url": "https://github.com/rust-lang/rust/commit/fde2e40e43b487357fad103beec0ec228b077f61"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "18d84a7023aa14ef4ca7a0f00c320db9456264ba", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "patch": "@@ -756,6 +756,7 @@ fn test_unstable_options_tracking_hash() {\n     tracked!(instrument_coverage, Some(InstrumentCoverage::All));\n     tracked!(instrument_mcount, true);\n     tracked!(instrument_xray, Some(InstrumentXRay::default()));\n+    tracked!(link_directives, false);\n     tracked!(link_only, true);\n     tracked!(llvm_plugins, vec![String::from(\"plugin_name\")]);\n     tracked!(location_detail, LocationDetail { file: true, line: false, column: false });"}, {"sha": "d6f68b2e140553e79cafe1b16e2ca7911e97400b", "filename": "compiler/rustc_metadata/src/native_libs.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fnative_libs.rs?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "patch": "@@ -103,8 +103,13 @@ impl<'tcx> Collector<'tcx> {\n         }\n \n         // Process all of the #[link(..)]-style arguments\n-        let sess = &self.tcx.sess;\n+        let sess = self.tcx.sess;\n         let features = self.tcx.features();\n+\n+        if !sess.opts.unstable_opts.link_directives {\n+            return;\n+        }\n+\n         for m in self.tcx.hir().attrs(it.hir_id()).iter().filter(|a| a.has_name(sym::link)) {\n             let Some(items) = m.meta_item_list() else {\n                 continue;"}, {"sha": "4beac931632bec350d75f7de385904992f42dcc3", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "patch": "@@ -1489,6 +1489,8 @@ options! {\n         \"keep hygiene data after analysis (default: no)\"),\n     layout_seed: Option<u64> = (None, parse_opt_number, [TRACKED],\n         \"seed layout randomization\"),\n+    link_directives: bool = (true, parse_bool, [TRACKED],\n+        \"honor #[link] directives in the compiled crate (default: yes)\"),\n     link_native_libraries: bool = (true, parse_bool, [UNTRACKED],\n         \"link native libraries in the linker invocation (default: yes)\"),\n     link_only: bool = (false, parse_bool, [TRACKED],"}, {"sha": "6aa9785f44e33d20747944ce9b32dd0f8f18648b", "filename": "tests/rustdoc-ui/z-help.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Frustdoc-ui%2Fz-help.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Frustdoc-ui%2Fz-help.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fz-help.stdout?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "patch": "@@ -81,6 +81,7 @@\n          Multiple options can be combined with commas.\n     -Z                     keep-hygiene-data=val -- keep hygiene data after analysis (default: no)\n     -Z                           layout-seed=val -- seed layout randomization\n+    -Z                       link-directives=val -- honor #[link] directives in the compiled crate (default: yes)\n     -Z                 link-native-libraries=val -- link native libraries in the linker invocation (default: yes)\n     -Z                             link-only=val -- link the `.rlink` file generated by `-Z no-link` (default: no)\n     -Z                          llvm-plugins=val -- a list LLVM plugins to enable (space separated)"}, {"sha": "83f9b16c4086ae1033a18af661e1b459134f6185", "filename": "tests/ui/issues/issue-70093/issue-70093-link-directives.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093-link-directives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093-link-directives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093-link-directives.rs?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "patch": "@@ -0,0 +1,10 @@\n+// run-pass\n+// compile-flags: -Zlink-directives=no\n+// ignore-windows - this will probably only work on unixish systems\n+// ignore-fuchsia - missing __libc_start_main for some reason (#84733)\n+// ignore-cross-compile - default-linker-libraries=yes doesn't play well with cross compiling\n+\n+#[link(name = \"some-random-non-existent-library\", kind = \"static\")]\n+extern \"C\" {}\n+\n+fn main() {}"}, {"sha": "86459dc904a6eb0abc8ee4db79205e3a49a1025a", "filename": "tests/ui/issues/issue-70093/issue-70093.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-70093%2Fissue-70093.rs?ref=1a599d7d97c7ab4b03a75f1405bb19293ea2ca6a", "previous_filename": "tests/ui/issues/issue-70093.rs"}]}