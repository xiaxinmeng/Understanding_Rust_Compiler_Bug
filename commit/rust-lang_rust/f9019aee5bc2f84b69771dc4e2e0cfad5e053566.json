{"sha": "f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5MDE5YWVlNWJjMmY4NGI2OTc3MWRjNGUyZTBjZmFkNWUwNTM1NjY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-23T11:44:33Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-23T11:44:33Z"}, "message": "Simplify local accessors", "tree": {"sha": "34d64b9867597af2cd78e490d01bfc379dc0cb2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34d64b9867597af2cd78e490d01bfc379dc0cb2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlq06KEACgkQpp+NIls6\n19k1WQ/9FXw4YueSrL9uK+5Pt/z+9B8BU+pFO/fHO7w1WfMGLZUPkybSSY81KGxC\nFUzTYbdoIaxjk4GxW7iOxmXKNj56b/KsZw/YU8LuLzgqgO0R72LbN0gkXDcz4CYj\nE9UwNUl1HxPEShVsNdltxnQ/sk+hmZ+G4jeipf57lo+ezNuioDPxYFjoB4b34v24\nlLqewz50XJQQwAhoKeSPnHTa7eRNmpOQxUhFhh944s0uzt/zIFIQUGUQ7IpVXgj7\n52iOT83CMaf7TiniFBEK2kC5PfpZq+EVGP10+aAFIPF4CylyNmNmwYaiAtREYyJh\nyZQl5PmExvH7PjWfNkNsoflmrjITTFKSxn9RDJXPR/3PljzaTzj88Fqgzq/I1Dcl\nLv4lYu+1kH2YTLrpsoU/UDslTJbqmZcYhGRRwXrtAwnRYbnCzbD4NDybMfA2np07\nGzlZi8E1BSIr457p4dNsdXzD9fWs2yHCI6d54NxTeXQV4x6kyd2kpjiaZYfYnt8v\nY982K8KXeP3gr31Gw9vgimYX4DTpr/j+16Qz2mV4tYMMj1gPFo5M5fPb3z2Xlk4R\nUIHwJS+El7iY7VkwPHWMD17Qe01T5Wf/l/BjnYK7d+J8FvQ5WpBuz5vNGJLmXIYj\n82sOqz/7bgJg01AkzYH8vMOhuyGGe3AaO8beWCxKQROb+crVQic=\n=kgk2\n-----END PGP SIGNATURE-----", "payload": "tree 34d64b9867597af2cd78e490d01bfc379dc0cb2e\nparent 4ea4dd23cde23a8f3c02d77140ae0eb30a0cee25\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521805473 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521805473 +0100\n\nSimplify local accessors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "html_url": "https://github.com/rust-lang/rust/commit/f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9019aee5bc2f84b69771dc4e2e0cfad5e053566/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ea4dd23cde23a8f3c02d77140ae0eb30a0cee25", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea4dd23cde23a8f3c02d77140ae0eb30a0cee25", "html_url": "https://github.com/rust-lang/rust/commit/4ea4dd23cde23a8f3c02d77140ae0eb30a0cee25"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "b8bfcd756cd231d711c9c5880e6af8a2947e9c0c", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f9019aee5bc2f84b69771dc4e2e0cfad5e053566/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9019aee5bc2f84b69771dc4e2e0cfad5e053566/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "patch": "@@ -17,6 +17,7 @@ use rustc::mir::interpret::{\n     GlobalId, Value, Pointer, PrimVal, PrimValKind,\n     EvalError, EvalResult, EvalErrorKind, MemoryPointer,\n };\n+use std::mem;\n \n use super::{Place, PlaceExtra, Memory,\n             HasMemory, MemoryKind,\n@@ -1704,20 +1705,17 @@ impl<'mir, 'tcx> Frame<'mir, 'tcx> {\n         }\n     }\n \n-    pub fn storage_live(&mut self, local: mir::Local) -> EvalResult<'tcx, Option<Value>> {\n+    pub fn storage_live(&mut self, local: mir::Local) -> Option<Value> {\n         trace!(\"{:?} is now live\", local);\n \n-        let old = self.locals[local];\n-        self.locals[local] = Some(Value::ByVal(PrimVal::Undef)); // StorageLive *always* kills the value that's currently stored\n-        return Ok(old);\n+        // StorageLive *always* kills the value that's currently stored\n+        mem::replace(&mut self.locals[local], Some(Value::ByVal(PrimVal::Undef)))\n     }\n \n     /// Returns the old value of the local\n-    pub fn storage_dead(&mut self, local: mir::Local) -> EvalResult<'tcx, Option<Value>> {\n+    pub fn storage_dead(&mut self, local: mir::Local) -> Option<Value> {\n         trace!(\"{:?} is now dead\", local);\n \n-        let old = self.locals[local];\n-        self.locals[local] = None;\n-        return Ok(old);\n+        self.locals[local].take()\n     }\n }"}, {"sha": "752c94dec2087a8cc65871d72e7f02b3ce0f98ec", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9019aee5bc2f84b69771dc4e2e0cfad5e053566/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9019aee5bc2f84b69771dc4e2e0cfad5e053566/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=f9019aee5bc2f84b69771dc4e2e0cfad5e053566", "patch": "@@ -69,13 +69,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n \n             // Mark locals as alive\n             StorageLive(local) => {\n-                let old_val = self.frame_mut().storage_live(local)?;\n+                let old_val = self.frame_mut().storage_live(local);\n                 self.deallocate_local(old_val)?;\n             }\n \n             // Mark locals as dead\n             StorageDead(local) => {\n-                let old_val = self.frame_mut().storage_dead(local)?;\n+                let old_val = self.frame_mut().storage_dead(local);\n                 self.deallocate_local(old_val)?;\n             }\n "}]}