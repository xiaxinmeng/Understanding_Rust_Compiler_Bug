{"sha": "1077d574cf626fbe49f1150ade4c931353a01c8e", "node_id": "C_kwDOAAsO6NoAKDEwNzdkNTc0Y2Y2MjZmYmU0OWYxMTUwYWRlNGM5MzEzNTNhMDFjOGU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-15T16:04:51Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-15T16:04:51Z"}, "message": "remove redundant clones", "tree": {"sha": "8ef4c0d71a51329b8bc6117572c1a3bfa2923c79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ef4c0d71a51329b8bc6117572c1a3bfa2923c79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1077d574cf626fbe49f1150ade4c931353a01c8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1077d574cf626fbe49f1150ade4c931353a01c8e", "html_url": "https://github.com/rust-lang/rust/commit/1077d574cf626fbe49f1150ade4c931353a01c8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1077d574cf626fbe49f1150ade4c931353a01c8e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "281648698693def16f1985ca85948f5efc7e9e3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/281648698693def16f1985ca85948f5efc7e9e3f", "html_url": "https://github.com/rust-lang/rust/commit/281648698693def16f1985ca85948f5efc7e9e3f"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "c14c7f2fa0dcc18c142d886d9e2dc658a90f1954", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1077d574cf626fbe49f1150ade4c931353a01c8e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1077d574cf626fbe49f1150ade4c931353a01c8e/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=1077d574cf626fbe49f1150ade4c931353a01c8e", "patch": "@@ -570,15 +570,13 @@ impl<'a> Parser<'a> {\n         let expect = tokens_to_string(&expected);\n         let actual = super::token_descr(&self.token);\n         let (msg_exp, (label_sp, label_exp)) = if expected.len() > 1 {\n+            let fmt = format!(\"expected one of {expect}, found {actual}\");\n             let short_expect = if expected.len() > 6 {\n                 format!(\"{} possible tokens\", expected.len())\n             } else {\n-                expect.clone()\n+                expect\n             };\n-            (\n-                format!(\"expected one of {expect}, found {actual}\"),\n-                (self.prev_token.span.shrink_to_hi(), format!(\"expected one of {short_expect}\")),\n-            )\n+            (fmt, (self.prev_token.span.shrink_to_hi(), format!(\"expected one of {short_expect}\")))\n         } else if expected.is_empty() {\n             (\n                 format!(\"unexpected token: {actual}\"),"}, {"sha": "cef982fcb41efccce73719676f8c52ecf898d665", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1077d574cf626fbe49f1150ade4c931353a01c8e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1077d574cf626fbe49f1150ade4c931353a01c8e/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=1077d574cf626fbe49f1150ade4c931353a01c8e", "patch": "@@ -2944,22 +2944,25 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             rustc_transmute::Answer::No(reason) => {\n                 let dst = trait_ref.skip_binder().substs.type_at(0);\n                 let src = trait_ref.skip_binder().substs.type_at(1);\n-                let custom_err_msg = format!(\"`{src}` cannot be safely transmuted into `{dst}` in the defining scope of `{scope}`\").to_string();\n+                let custom_err_msg = format!(\n+                    \"`{src}` cannot be safely transmuted into `{dst}` in the defining scope of `{scope}`\"\n+                );\n                 let reason_msg = match reason {\n                     rustc_transmute::Reason::SrcIsUnspecified => {\n-                        format!(\"`{src}` does not have a well-specified layout\").to_string()\n+                        format!(\"`{src}` does not have a well-specified layout\")\n                     }\n+\n                     rustc_transmute::Reason::DstIsUnspecified => {\n-                        format!(\"`{dst}` does not have a well-specified layout\").to_string()\n+                        format!(\"`{dst}` does not have a well-specified layout\")\n                     }\n+\n                     rustc_transmute::Reason::DstIsBitIncompatible => {\n                         format!(\"At least one value of `{src}` isn't a bit-valid value of `{dst}`\")\n-                            .to_string()\n                     }\n+\n                     rustc_transmute::Reason::DstIsPrivate => format!(\n                         \"`{dst}` is or contains a type or field that is not visible in that scope\"\n-                    )\n-                    .to_string(),\n+                    ),\n                     // FIXME(bryangarza): Include the number of bytes of src and dst\n                     rustc_transmute::Reason::DstIsTooBig => {\n                         format!(\"The size of `{src}` is smaller than the size of `{dst}`\")"}]}