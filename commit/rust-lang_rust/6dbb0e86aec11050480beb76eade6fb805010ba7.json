{"sha": "6dbb0e86aec11050480beb76eade6fb805010ba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkYmIwZTg2YWVjMTEwNTA0ODBiZWI3NmVhZGU2ZmI4MDUwMTBiYTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-10T21:36:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-10T21:36:46Z"}, "message": "Auto merge of #33319 - birkenfeld:issue31424, r=jseyfried\n\nborrowck: do not suggest to change \"&mut self\" to \"&mut mut self\"\n\nMatching the snippet string might not be the cleanest, but matching\nthe AST node instead seems to end in a lot of nested `if let`s, so I\ndon't know what's better.\n\nOf course it's entirely possible that there is another API altogether\nthat I just don't know of?\n\nFixes #31424.", "tree": {"sha": "5a703e4f464c8f468f8eeb1ac0570828d637b3e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a703e4f464c8f468f8eeb1ac0570828d637b3e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6dbb0e86aec11050480beb76eade6fb805010ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6dbb0e86aec11050480beb76eade6fb805010ba7", "html_url": "https://github.com/rust-lang/rust/commit/6dbb0e86aec11050480beb76eade6fb805010ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6dbb0e86aec11050480beb76eade6fb805010ba7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04308ceefaaa208e636f594c7895b95950b9e44e", "url": "https://api.github.com/repos/rust-lang/rust/commits/04308ceefaaa208e636f594c7895b95950b9e44e", "html_url": "https://github.com/rust-lang/rust/commit/04308ceefaaa208e636f594c7895b95950b9e44e"}, {"sha": "fef827672ddb0df866c77239f3fc034ed98de556", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef827672ddb0df866c77239f3fc034ed98de556", "html_url": "https://github.com/rust-lang/rust/commit/fef827672ddb0df866c77239f3fc034ed98de556"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "8518a27bd2cc0376376509c9c289fdc81381eb08", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6dbb0e86aec11050480beb76eade6fb805010ba7/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dbb0e86aec11050480beb76eade6fb805010ba7/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=6dbb0e86aec11050480beb76eade6fb805010ba7", "patch": "@@ -970,11 +970,13 @@ impl<'a, 'tcx> BorrowckCtxt<'a, 'tcx> {\n                         if let Categorization::Local(local_id) = err.cmt.cat {\n                             let span = self.tcx.map.span(local_id);\n                             if let Ok(snippet) = self.tcx.sess.codemap().span_to_snippet(span) {\n-                                db.span_suggestion(\n-                                    span,\n-                                    &format!(\"to make the {} mutable, use `mut` as shown:\",\n-                                             self.cmt_to_string(&err.cmt)),\n-                                    format!(\"mut {}\", snippet));\n+                                if snippet != \"self\" {\n+                                    db.span_suggestion(\n+                                        span,\n+                                        &format!(\"to make the {} mutable, use `mut` as shown:\",\n+                                                 self.cmt_to_string(&err.cmt)),\n+                                        format!(\"mut {}\", snippet));\n+                                }\n                             }\n                         }\n                     }"}, {"sha": "262efab22a2941ec0ab97fd260c562b21fa9dc27", "filename": "src/test/compile-fail/issue-31424.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6dbb0e86aec11050480beb76eade6fb805010ba7/src%2Ftest%2Fcompile-fail%2Fissue-31424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6dbb0e86aec11050480beb76eade6fb805010ba7/src%2Ftest%2Fcompile-fail%2Fissue-31424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31424.rs?ref=6dbb0e86aec11050480beb76eade6fb805010ba7", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// forbid-output: &mut mut self\n+\n+struct Struct;\n+\n+impl Struct {\n+    fn foo(&mut self) {\n+        (&mut self).bar();\n+        //~^ ERROR cannot borrow immutable argument `self` as mutable\n+        // ... and no SUGGESTION that suggests `&mut mut self`\n+    }\n+\n+    // In this case we could keep the suggestion, but to distinguish the\n+    // two cases is pretty hard. It's an obscure case anyway.\n+    fn bar(self: &mut Self) {\n+        (&mut self).bar();\n+        //~^ ERROR cannot borrow immutable argument `self` as mutable\n+    }\n+}\n+\n+fn main () {}"}]}