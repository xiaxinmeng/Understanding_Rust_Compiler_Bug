{"sha": "639d88a6936491cfc3b879bb54989e458b4c93c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzOWQ4OGE2OTM2NDkxY2ZjM2I4NzliYjU0OTg5ZTQ1OGI0YzkzYzQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-16T13:03:03Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-09-16T13:03:03Z"}, "message": "Move expr_uniq case in trans to a saner place\n\nNote that unique pointers are still broken in more ways than I can count.", "tree": {"sha": "61f81daa81cb333feb36a6f3d807437c834ccf04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61f81daa81cb333feb36a6f3d807437c834ccf04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/639d88a6936491cfc3b879bb54989e458b4c93c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/639d88a6936491cfc3b879bb54989e458b4c93c4", "html_url": "https://github.com/rust-lang/rust/commit/639d88a6936491cfc3b879bb54989e458b4c93c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/639d88a6936491cfc3b879bb54989e458b4c93c4/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8a35234ad65a006243aee60406fa9f8a05c08f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a35234ad65a006243aee60406fa9f8a05c08f0", "html_url": "https://github.com/rust-lang/rust/commit/f8a35234ad65a006243aee60406fa9f8a05c08f0"}], "stats": {"total": 16, "additions": 4, "deletions": 12}, "files": [{"sha": "815086c8e910a22810441ed9f338a5735be78b2b", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/639d88a6936491cfc3b879bb54989e458b4c93c4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/639d88a6936491cfc3b879bb54989e458b4c93c4/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=639d88a6936491cfc3b879bb54989e458b4c93c4", "patch": "@@ -3103,19 +3103,10 @@ fn trans_lval_gen(cx: @block_ctxt, e: @ast::expr) -> lval_result {\n             };\n         ret lval_mem(sub.bcx, val);\n       }\n-      ast::expr_uniq(contents) { ret trans_uniq(cx, contents); }\n       ast::expr_self_method(ident) {\n         alt copy cx.fcx.llself {\n           some(pair) {\n-            let r = pair.v;\n-            let t = pair.t;\n-            ret trans_field(cx, e.span, r, t, ident);\n-          }\n-          _ {\n-            // Shouldn't happen.\n-            bcx_ccx(cx).sess.bug(\"trans_lval called on \\\n-                                         expr_self_method in \\\n-                                         a context without llself\");\n+            ret trans_field(cx, e.span, pair.v, pair.t, ident);\n           }\n         }\n       }\n@@ -4109,6 +4100,7 @@ fn trans_expr_out(cx: @block_ctxt, e: @ast::expr, output: out_method) ->\n         CondBr(cx, cond, then_cx.llbb, else_cx.llbb);\n         ret rslt(join_branches(cx, [check_res, els]), C_nil());\n       }\n+      ast::expr_uniq(contents) { ret trans_uniq(cx, contents); }\n       ast::expr_break. { ret trans_break(e.span, cx); }\n       ast::expr_cont. { ret trans_cont(e.span, cx); }\n       ast::expr_ret(ex) { ret trans_ret(cx, ex); }\n@@ -4348,7 +4340,7 @@ fn trans_put(in_cx: @block_ctxt, e: option::t<@ast::expr>) -> result {\n     ret rslt(next_cx, C_nil());\n }\n \n-fn trans_uniq(cx: @block_ctxt, contents: @ast::expr) -> lval_result {\n+fn trans_uniq(cx: @block_ctxt, contents: @ast::expr) -> result {\n     let bcx = cx;\n \n     let contents_ty = ty::expr_ty(bcx_tcx(bcx), contents);\n@@ -4364,7 +4356,7 @@ fn trans_uniq(cx: @block_ctxt, contents: @ast::expr) -> lval_result {\n \n     let llptr = Load(bcx, llptrptr);\n     r = trans_expr_out(bcx, contents, save_in(llptr));\n-    ret lval_val(r.bcx, llptrptr);\n+    ret rslt(r.bcx, llptrptr);\n }\n \n fn trans_break_cont(sp: span, cx: @block_ctxt, to_end: bool) -> result {"}]}