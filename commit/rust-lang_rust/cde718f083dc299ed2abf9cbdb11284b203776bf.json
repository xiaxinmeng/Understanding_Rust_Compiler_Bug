{"sha": "cde718f083dc299ed2abf9cbdb11284b203776bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkZTcxOGYwODNkYzI5OWVkMmFiZjljYmRiMTEyODRiMjAzNzc2YmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T14:25:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-01T14:25:08Z"}, "message": "Auto merge of #1087 - RalfJung:toolchain, r=oli-obk\n\nadd toolchain mgmt script\n\nI've been using a variant of this script for some time now, and figured others might find it useful as well.", "tree": {"sha": "28465a948c9084704f59eb82a29545e0e235987f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28465a948c9084704f59eb82a29545e0e235987f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cde718f083dc299ed2abf9cbdb11284b203776bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cde718f083dc299ed2abf9cbdb11284b203776bf", "html_url": "https://github.com/rust-lang/rust/commit/cde718f083dc299ed2abf9cbdb11284b203776bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cde718f083dc299ed2abf9cbdb11284b203776bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41df5021bddb5228ae57aa5d02ae61c5e9ac0ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/41df5021bddb5228ae57aa5d02ae61c5e9ac0ec6", "html_url": "https://github.com/rust-lang/rust/commit/41df5021bddb5228ae57aa5d02ae61c5e9ac0ec6"}, {"sha": "9501d044c1afcd2c7921e48ef17930977d156dec", "url": "https://api.github.com/repos/rust-lang/rust/commits/9501d044c1afcd2c7921e48ef17930977d156dec", "html_url": "https://github.com/rust-lang/rust/commit/9501d044c1afcd2c7921e48ef17930977d156dec"}], "stats": {"total": 92, "additions": 65, "deletions": 27}, "files": [{"sha": "c673e107d55d516dacef2c2de543eca09abf9269", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/cde718f083dc299ed2abf9cbdb11284b203776bf/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/cde718f083dc299ed2abf9cbdb11284b203776bf/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=cde718f083dc299ed2abf9cbdb11284b203776bf", "patch": "@@ -12,6 +12,22 @@ on the [Rust Zulip].\n \n [Rust Zulip]: https://rust-lang.zulipchat.com\n \n+## Building Miri with a pre-built rustc\n+\n+Miri heavily relies on internal rustc interfaces to execute MIR.  Still, some\n+things (like adding support for a new intrinsic or a shim for an external\n+function being called) can be done by working just on the Miri side.\n+\n+The `rust-version` file contains the commit hash of rustc that Miri is currently\n+tested against. Other versions will likely not work. After installing\n+[`rustup-toolchain-install-master`], you can run the following command to\n+install that exact version of rustc as a toolchain:\n+```\n+./rustup-toolchain\n+```\n+\n+[`rustup-toolchain-install-master`]: https://github.com/kennytm/rustup-toolchain-install-master\n+\n ### Fixing Miri when rustc changes\n \n Miri is heavily tied to rustc internals, so it is very common that rustc changes\n@@ -20,36 +36,12 @@ Usually, Miri will require changes similar to the other consumers of the changed\n rustc API, so reading the rustc PR diff is a good way to get an idea for what is\n needed.\n \n-When submitting a PR against Miri after fixing it for rustc changes, make sure\n-you update the `rust-version` file.  That file always contains the exact rustc\n-git commit with which Miri works, and it is the version that our CI tests Miri\n-against.\n-\n-## Building Miri with a nightly rustc\n-\n-Miri heavily relies on internal rustc interfaces to execute MIR.  Still, some\n-things (like adding support for a new intrinsic or a shim for an external\n-function being called) can be done by working just on the Miri side.\n-\n-To prepare, make sure you are using a nightly Rust compiler.  You also need to\n-have the `rust-src` and `rustc-dev` components installed, which you can add via\n-`rustup component add rust-src rustc-dev`.  Then you should be able to just\n-`cargo build` Miri.\n-\n-In case this fails, your nightly might be incompatible with Miri master.  The\n-`rust-version` file contains the commit hash of rustc that Miri is currently\n-tested against; you can use that to find a nightly that works or you might have\n-to wait for the next nightly to get released. You can also use\n-[`rustup-toolchain-install-master`](https://github.com/kennytm/rustup-toolchain-install-master)\n-to install that exact version of rustc as a toolchain:\n+To update the `rustc-version` file and install the latest rustc, you can run:\n ```\n-rustup-toolchain-install-master $(cat rust-version) -c rust-src -c rustc-dev\n+./rustup-toolchain HEAD\n ```\n \n-Another common problem is outdated dependencies: Miri does not come with a\n-lockfile (it cannot, due to how it gets embedded into the rustc build). So you\n-have to run `cargo update` every now and then yourself to make sure you are\n-using the latest versions of everything (which is what gets tested on CI).\n+Now try `./miri test`, and submit a PR once that works again.\n \n ## Testing the Miri driver\n [testing-miri]: #testing-the-miri-driver"}, {"sha": "4e8e0b01ebc475702cace61fddb0b802ea99daca", "filename": "rustup-toolchain", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/cde718f083dc299ed2abf9cbdb11284b203776bf/rustup-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/cde718f083dc299ed2abf9cbdb11284b203776bf/rustup-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustup-toolchain?ref=cde718f083dc299ed2abf9cbdb11284b203776bf", "patch": "@@ -0,0 +1,46 @@\n+#!/bin/bash\n+set -e\n+# Manages a rustup toolchain called \"miri\".\n+#\n+# All commands set \"miri\" as the override toolchain for the current directory,\n+# and make the `rust-version` file match that toolchain.\n+#\n+# USAGE:\n+#\n+# ./rustup-toolchain: Update \"miri\" toolchain to match `rust-version` (the known-good version for this commit).\n+# \n+# ./rustup-toolchain HEAD: Update \"miri\" toolchain and `rust-version` file to latest rustc HEAD.\n+# \n+# ./rustup-toolchain $COMMIT: Update \"miri\" toolchain and `rust-version` file to match that commit.\n+\n+# Make sure rustup-toolchain-install-master is installed.\n+if ! which rustup-toolchain-install-master >/dev/null; then\n+    echo \"Please install rustup-toolchain-install-master by running 'cargo install rustup-toolchain-install-master'\"\n+    exit 1\n+fi\n+\n+# Determine new commit.\n+if [[ \"$1\" == \"\" ]]; then\n+    NEW_COMMIT=$(cat rust-version)\n+elif [[ \"$1\" == \"HEAD\" ]]; then\n+    NEW_COMMIT=$(git ls-remote https://github.com/rust-lang/rust/ HEAD | cut -f 1)\n+else\n+    NEW_COMMIT=\"$1\"\n+fi\n+echo \"$NEW_COMMIT\" > rust-version\n+\n+# Check if we already are at that commit.\n+CUR_COMMIT=$(rustc +miri --version -v 2>/dev/null | egrep \"^commit-hash: \" | cut -d \" \" -f 2)\n+if [[ \"$CUR_COMMIT\" == \"$NEW_COMMIT\" ]]; then\n+    echo \"miri toolchain is already at commit $CUR_COMMIT.\"\n+    rustup override set miri\n+    exit 0\n+fi\n+\n+# Install and setup new toolchain.\n+rustup toolchain uninstall miri\n+rustup-toolchain-install-master -n miri -c rust-src -c rustc-dev -- \"$NEW_COMMIT\"\n+rustup override set miri\n+\n+# Cleanup.\n+cargo clean"}]}