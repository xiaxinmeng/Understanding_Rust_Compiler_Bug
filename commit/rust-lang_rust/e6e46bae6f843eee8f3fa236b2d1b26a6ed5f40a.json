{"sha": "e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "node_id": "C_kwDOAAsO6NoAKGU2ZTQ2YmFlNmY4NDNlZWU4ZjNmYTIzNmIyZDFiMjZhNmVkNWY0MGE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-12T03:28:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-12T03:28:47Z"}, "message": "Rollup merge of #110018 - jfgoog:host-and-target-linker, r=wesleywiser\n\nPass host linker to compiletest.\n\nTests marked `// force-host` were using the default linker, even if a custom linker was configured in config.toml.\n\nThis change adds a new flag, --host-linker, to compiletest, and renames --linker to --target-linker.", "tree": {"sha": "05f947569f2189abac3a67529379bd6fdfa6de50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05f947569f2189abac3a67529379bd6fdfa6de50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkNiVvCRBK7hj4Ov3rIwAAuc4IADQO0yJf/arIsOdUG2jZERl6\n37zkcWwz0KhjDlf5h4cd8fc1nOPLHYiBMvSvUix+GmJdvkLbTlPzw0BfVsiJaM/O\n5RhT3//DCkMlZKJuJEnX7aTr1y4b2wEUOjAoWZK1eSJzny7Hj2FXXEVhwaks39It\nyYlJFeQh5pDI1NzJiFPXMtTaU2OEmzdB8gWWWhHrhMbxBTH7PV2V3JP3ir/QOmRe\nD+qnjGIV0SITVHAlQEYwYWcD9jE6wUFOw6KNA559wM7rDOr85JhYY7Wf3qbpmHFa\njqfzXx7GUsVFrCjpS19MQ9pAN6PS6QFj9gkV+reuSPACP9R9uh4eVUskLT9Ai7g=\n=BtkF\n-----END PGP SIGNATURE-----\n", "payload": "tree 05f947569f2189abac3a67529379bd6fdfa6de50\nparent 90b55973ddaa71546a225c890ad52ae2603a745d\nparent 7944930b0908cecfd58a47ca2b7b2b42136ada14\nauthor Michael Goulet <michael@errs.io> 1681270127 -0700\ncommitter GitHub <noreply@github.com> 1681270127 -0700\n\nRollup merge of #110018 - jfgoog:host-and-target-linker, r=wesleywiser\n\nPass host linker to compiletest.\n\nTests marked `// force-host` were using the default linker, even if a custom linker was configured in config.toml.\n\nThis change adds a new flag, --host-linker, to compiletest, and renames --linker to --target-linker.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "html_url": "https://github.com/rust-lang/rust/commit/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b55973ddaa71546a225c890ad52ae2603a745d", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b55973ddaa71546a225c890ad52ae2603a745d", "html_url": "https://github.com/rust-lang/rust/commit/90b55973ddaa71546a225c890ad52ae2603a745d"}, {"sha": "7944930b0908cecfd58a47ca2b7b2b42136ada14", "url": "https://api.github.com/repos/rust-lang/rust/commits/7944930b0908cecfd58a47ca2b7b2b42136ada14", "html_url": "https://github.com/rust-lang/rust/commit/7944930b0908cecfd58a47ca2b7b2b42136ada14"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "f9c5837b7d61365b7de80934400ee2495e202811", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "patch": "@@ -1535,7 +1535,10 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n         flags.extend(builder.config.cmd.rustc_args().iter().map(|s| s.to_string()));\n \n         if let Some(linker) = builder.linker(target) {\n-            cmd.arg(\"--linker\").arg(linker);\n+            cmd.arg(\"--target-linker\").arg(linker);\n+        }\n+        if let Some(linker) = builder.linker(compiler.host) {\n+            cmd.arg(\"--host-linker\").arg(linker);\n         }\n \n         let mut hostflags = flags.clone();"}, {"sha": "d2f494942cf9bdf8b2d61c517f08a2eea88ab16c", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "patch": "@@ -313,7 +313,8 @@ pub struct Config {\n     pub cflags: String,\n     pub cxxflags: String,\n     pub ar: String,\n-    pub linker: Option<String>,\n+    pub target_linker: Option<String>,\n+    pub host_linker: Option<String>,\n     pub llvm_components: String,\n \n     /// Path to a NodeJS executable. Used for JS doctests, emscripten and WASM tests"}, {"sha": "6a91d25a82436cbc55fe86dfaca9d003d74b8d7d", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "patch": "@@ -134,7 +134,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         .reqopt(\"\", \"cflags\", \"flags for the C compiler\", \"FLAGS\")\n         .reqopt(\"\", \"cxxflags\", \"flags for the CXX compiler\", \"FLAGS\")\n         .optopt(\"\", \"ar\", \"path to an archiver\", \"PATH\")\n-        .optopt(\"\", \"linker\", \"path to a linker\", \"PATH\")\n+        .optopt(\"\", \"target-linker\", \"path to a linker for the target\", \"PATH\")\n+        .optopt(\"\", \"host-linker\", \"path to a linker for the host\", \"PATH\")\n         .reqopt(\"\", \"llvm-components\", \"list of LLVM components built in\", \"LIST\")\n         .optopt(\"\", \"llvm-bin-dir\", \"Path to LLVM's `bin` directory\", \"PATH\")\n         .optopt(\"\", \"nodejs\", \"the name of nodejs\", \"PATH\")\n@@ -307,7 +308,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         cflags: matches.opt_str(\"cflags\").unwrap(),\n         cxxflags: matches.opt_str(\"cxxflags\").unwrap(),\n         ar: matches.opt_str(\"ar\").unwrap_or_else(|| String::from(\"ar\")),\n-        linker: matches.opt_str(\"linker\"),\n+        target_linker: matches.opt_str(\"target-linker\"),\n+        host_linker: matches.opt_str(\"host-linker\"),\n         llvm_components: matches.opt_str(\"llvm-components\").unwrap(),\n         nodejs: matches.opt_str(\"nodejs\"),\n         npm: matches.opt_str(\"npm\"),\n@@ -350,7 +352,8 @@ pub fn log_config(config: &Config) {\n     logv(c, format!(\"adb_test_dir: {:?}\", config.adb_test_dir));\n     logv(c, format!(\"adb_device_status: {}\", config.adb_device_status));\n     logv(c, format!(\"ar: {}\", config.ar));\n-    logv(c, format!(\"linker: {:?}\", config.linker));\n+    logv(c, format!(\"target-linker: {:?}\", config.target_linker));\n+    logv(c, format!(\"host-linker: {:?}\", config.host_linker));\n     logv(c, format!(\"verbose: {}\", config.verbose));\n     logv(c, format!(\"format: {:?}\", config.format));\n     logv(c, \"\\n\".to_string());"}, {"sha": "0fa5c54ae8e68deb69905cdc6128b2d31ad45e71", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=e6e46bae6f843eee8f3fa236b2d1b26a6ed5f40a", "patch": "@@ -1570,7 +1570,7 @@ impl<'test> TestCx<'test> {\n             rustdoc.arg(\"--output-format\").arg(\"json\").arg(\"-Zunstable-options\");\n         }\n \n-        if let Some(ref linker) = self.config.linker {\n+        if let Some(ref linker) = self.config.target_linker {\n             rustdoc.arg(format!(\"-Clinker={}\", linker));\n         }\n \n@@ -2083,10 +2083,15 @@ impl<'test> TestCx<'test> {\n \n         if self.props.force_host {\n             self.maybe_add_external_args(&mut rustc, &self.config.host_rustcflags);\n+            if !is_rustdoc {\n+                if let Some(ref linker) = self.config.host_linker {\n+                    rustc.arg(format!(\"-Clinker={}\", linker));\n+                }\n+            }\n         } else {\n             self.maybe_add_external_args(&mut rustc, &self.config.target_rustcflags);\n             if !is_rustdoc {\n-                if let Some(ref linker) = self.config.linker {\n+                if let Some(ref linker) = self.config.target_linker {\n                     rustc.arg(format!(\"-Clinker={}\", linker));\n                 }\n             }\n@@ -3039,7 +3044,7 @@ impl<'test> TestCx<'test> {\n             cmd.env(\"NODE\", node);\n         }\n \n-        if let Some(ref linker) = self.config.linker {\n+        if let Some(ref linker) = self.config.target_linker {\n             cmd.env(\"RUSTC_LINKER\", linker);\n         }\n "}]}