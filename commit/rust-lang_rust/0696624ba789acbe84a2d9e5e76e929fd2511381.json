{"sha": "0696624ba789acbe84a2d9e5e76e929fd2511381", "node_id": "C_kwDOAAsO6NoAKDA2OTY2MjRiYTc4OWFjYmU4NGEyZDllNWU3NmU5MjlmZDI1MTEzODE", "commit": {"author": {"name": "Federico Guerinoni", "email": "guerinoni.federico@gmail.com", "date": "2022-07-30T12:33:10Z"}, "committer": {"name": "Federico Guerinoni", "email": "guerinoni.federico@gmail.com", "date": "2022-08-01T21:39:00Z"}, "message": "Add `elapsed_instant` lint\n\nCloses #8603\n\nSigned-off-by: Federico Guerinoni <guerinoni.federico@gmail.com>", "tree": {"sha": "586fc787401c74d195c66da35b08e3593b35b5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/586fc787401c74d195c66da35b08e3593b35b5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0696624ba789acbe84a2d9e5e76e929fd2511381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0696624ba789acbe84a2d9e5e76e929fd2511381", "html_url": "https://github.com/rust-lang/rust/commit/0696624ba789acbe84a2d9e5e76e929fd2511381", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0696624ba789acbe84a2d9e5e76e929fd2511381/comments", "author": {"login": "guerinoni", "id": 41150432, "node_id": "MDQ6VXNlcjQxMTUwNDMy", "avatar_url": "https://avatars.githubusercontent.com/u/41150432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerinoni", "html_url": "https://github.com/guerinoni", "followers_url": "https://api.github.com/users/guerinoni/followers", "following_url": "https://api.github.com/users/guerinoni/following{/other_user}", "gists_url": "https://api.github.com/users/guerinoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerinoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerinoni/subscriptions", "organizations_url": "https://api.github.com/users/guerinoni/orgs", "repos_url": "https://api.github.com/users/guerinoni/repos", "events_url": "https://api.github.com/users/guerinoni/events{/privacy}", "received_events_url": "https://api.github.com/users/guerinoni/received_events", "type": "User", "site_admin": false}, "committer": {"login": "guerinoni", "id": 41150432, "node_id": "MDQ6VXNlcjQxMTUwNDMy", "avatar_url": "https://avatars.githubusercontent.com/u/41150432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guerinoni", "html_url": "https://github.com/guerinoni", "followers_url": "https://api.github.com/users/guerinoni/followers", "following_url": "https://api.github.com/users/guerinoni/following{/other_user}", "gists_url": "https://api.github.com/users/guerinoni/gists{/gist_id}", "starred_url": "https://api.github.com/users/guerinoni/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guerinoni/subscriptions", "organizations_url": "https://api.github.com/users/guerinoni/orgs", "repos_url": "https://api.github.com/users/guerinoni/repos", "events_url": "https://api.github.com/users/guerinoni/events{/privacy}", "received_events_url": "https://api.github.com/users/guerinoni/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0ed68776e2f8177198982587bce6685410548d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ed68776e2f8177198982587bce6685410548d1", "html_url": "https://github.com/rust-lang/rust/commit/a0ed68776e2f8177198982587bce6685410548d1"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "84f06d98879974b267da0652e87243402aba5f3b", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -3686,6 +3686,7 @@ Released 2018-09-13\n [`manual_find`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_find\n [`manual_find_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_find_map\n [`manual_flatten`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten\n+[`manual_instant_elapsed`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_instant_elapsed\n [`manual_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_map\n [`manual_memcpy`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n [`manual_non_exhaustive`]: https://rust-lang.github.io/rust-clippy/master/index.html#manual_non_exhaustive"}, {"sha": "c2bc4badc43cce637dc6eb620cf88f3d8525a2bf", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -244,6 +244,7 @@ store.register_lints(&[\n     manual_assert::MANUAL_ASSERT,\n     manual_async_fn::MANUAL_ASYNC_FN,\n     manual_bits::MANUAL_BITS,\n+    manual_instant_elapsed::MANUAL_INSTANT_ELAPSED,\n     manual_non_exhaustive::MANUAL_NON_EXHAUSTIVE,\n     manual_ok_or::MANUAL_OK_OR,\n     manual_rem_euclid::MANUAL_REM_EUCLID,"}, {"sha": "4250ee055e6c911fab465c440a5f44a67c113aec", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -49,6 +49,7 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(loops::EXPLICIT_ITER_LOOP),\n     LintId::of(macro_use::MACRO_USE_IMPORTS),\n     LintId::of(manual_assert::MANUAL_ASSERT),\n+    LintId::of(manual_instant_elapsed::MANUAL_INSTANT_ELAPSED),\n     LintId::of(manual_ok_or::MANUAL_OK_OR),\n     LintId::of(matches::MATCH_BOOL),\n     LintId::of(matches::MATCH_ON_VEC_ITEMS),"}, {"sha": "88c1a727f8dc387369519ca919fe76a062c20c81", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -273,6 +273,7 @@ mod main_recursion;\n mod manual_assert;\n mod manual_async_fn;\n mod manual_bits;\n+mod manual_instant_elapsed;\n mod manual_non_exhaustive;\n mod manual_ok_or;\n mod manual_rem_euclid;\n@@ -929,6 +930,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(move || Box::new(operators::Operators::new(verbose_bit_mask_threshold)));\n     store.register_late_pass(|| Box::new(invalid_utf8_in_unchecked::InvalidUtf8InUnchecked));\n     store.register_late_pass(|| Box::new(std_instead_of_core::StdReexports::default()));\n+    store.register_late_pass(|| Box::new(manual_instant_elapsed::ManualInstantElapsed));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "331cda1db8990c8927794f5828420b71e9fa55fd", "filename": "clippy_lints/src/manual_instant_elapsed.rs", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Fmanual_instant_elapsed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_lints%2Fsrc%2Fmanual_instant_elapsed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_instant_elapsed.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -0,0 +1,69 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use rustc_errors::Applicability;\n+use rustc_hir::{BinOpKind, Expr, ExprKind};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::source_map::Spanned;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Lints subtraction between `Instant::now()` and another `Instant`.\n+    ///\n+    /// ### Why is this bad?\n+    /// It is easy to accidentally write `prev_instant - Instant::now()`, which will always be 0ns\n+    /// as `Instant` subtraction saturates.\n+    ///\n+    /// `prev_instant.elapsed()` also more clearly signals intention.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// use std::time::Instant;\n+    /// let prev_instant = Instant::now();\n+    /// let duration = Instant::now() - prev_instant;\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// use std::time::Instant;\n+    /// let prev_instant = Instant::now();\n+    /// let duration = prev_instant.elapsed();\n+    /// ```\n+    #[clippy::version = \"1.64.0\"]\n+    pub MANUAL_INSTANT_ELAPSED,\n+    pedantic,\n+    \"subtraction between `Instant::now()` and previous `Instant`\"\n+}\n+\n+declare_lint_pass!(ManualInstantElapsed => [MANUAL_INSTANT_ELAPSED]);\n+\n+impl LateLintPass<'_> for ManualInstantElapsed {\n+    fn check_expr(&mut self, cx: &LateContext<'_>, expr: &'_ Expr<'_>) {\n+        if let ExprKind::Binary(Spanned {node: BinOpKind::Sub, ..}, lhs, rhs) = expr.kind\n+            && check_instant_now_call(cx, lhs)\n+            && let ty_resolved = cx.typeck_results().expr_ty(rhs)\n+            && let rustc_middle::ty::Adt(def, _) = ty_resolved.kind()\n+            && clippy_utils::match_def_path(cx, def.did(), &clippy_utils::paths::INSTANT)\n+            && let Some(sugg) = clippy_utils::sugg::Sugg::hir_opt(cx, rhs)\n+        {\n+            span_lint_and_sugg(\n+                cx,\n+                MANUAL_INSTANT_ELAPSED,\n+                expr.span,\n+                \"manual implementation of `Instant::elapsed`\",\n+                \"try\",\n+                format!(\"{}.elapsed()\", sugg.maybe_par()),\n+                Applicability::MachineApplicable,\n+            );\n+        }\n+    }\n+}\n+\n+fn check_instant_now_call(cx: &LateContext<'_>, expr_block: &'_ Expr<'_>) -> bool {\n+    if let ExprKind::Call(fn_expr, []) = expr_block.kind\n+        && let Some(fn_id) = clippy_utils::path_def_id(cx, fn_expr)\n+        && clippy_utils::match_def_path(cx, fn_id, &clippy_utils::paths::INSTANT_NOW)\n+    {\n+        true\n+    } else {\n+        false\n+    }\n+}"}, {"sha": "8d697a301c444c354efd1ee383a5be24eae64099", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -194,3 +194,5 @@ pub const VEC_RESIZE: [&str; 4] = [\"alloc\", \"vec\", \"Vec\", \"resize\"];\n pub const WEAK_ARC: [&str; 3] = [\"alloc\", \"sync\", \"Weak\"];\n pub const WEAK_RC: [&str; 3] = [\"alloc\", \"rc\", \"Weak\"];\n pub const PTR_NON_NULL: [&str; 4] = [\"core\", \"ptr\", \"non_null\", \"NonNull\"];\n+pub const INSTANT_NOW: [&str; 4] = [\"std\", \"time\", \"Instant\", \"now\"];\n+pub const INSTANT: [&str; 3] = [\"std\", \"time\", \"Instant\"];"}, {"sha": "0fa776b7b2e4ed4b504691488e28d6ba9451b1f2", "filename": "tests/ui/manual_instant_elapsed.fixed", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_instant_elapsed.fixed?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -0,0 +1,27 @@\n+// run-rustfix\n+#![warn(clippy::manual_instant_elapsed)]\n+#![allow(clippy::unnecessary_operation)]\n+#![allow(unused_variables)]\n+#![allow(unused_must_use)]\n+\n+use std::time::Instant;\n+\n+fn main() {\n+    let prev_instant = Instant::now();\n+\n+    {\n+        // don't influence\n+        let another_instant = Instant::now();\n+    }\n+\n+    let duration = prev_instant.elapsed();\n+\n+    // don't catch\n+    let duration = prev_instant.elapsed();\n+\n+    Instant::now() - duration;\n+\n+    let ref_to_instant = &Instant::now();\n+\n+    (*ref_to_instant).elapsed(); // to ensure parens are added correctly\n+}"}, {"sha": "5b11b84535ddc46e766f706f0b0a295aa854f978", "filename": "tests/ui/manual_instant_elapsed.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_instant_elapsed.rs?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -0,0 +1,27 @@\n+// run-rustfix\n+#![warn(clippy::manual_instant_elapsed)]\n+#![allow(clippy::unnecessary_operation)]\n+#![allow(unused_variables)]\n+#![allow(unused_must_use)]\n+\n+use std::time::Instant;\n+\n+fn main() {\n+    let prev_instant = Instant::now();\n+\n+    {\n+        // don't influence\n+        let another_instant = Instant::now();\n+    }\n+\n+    let duration = Instant::now() - prev_instant;\n+\n+    // don't catch\n+    let duration = prev_instant.elapsed();\n+\n+    Instant::now() - duration;\n+\n+    let ref_to_instant = &Instant::now();\n+\n+    Instant::now() - *ref_to_instant; // to ensure parens are added correctly\n+}"}, {"sha": "5537f5642a23cd01488caa8cc7f131cd82f4a19b", "filename": "tests/ui/manual_instant_elapsed.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0696624ba789acbe84a2d9e5e76e929fd2511381/tests%2Fui%2Fmanual_instant_elapsed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_instant_elapsed.stderr?ref=0696624ba789acbe84a2d9e5e76e929fd2511381", "patch": "@@ -0,0 +1,16 @@\n+error: manual implementation of `Instant::elapsed`\n+  --> $DIR/manual_instant_elapsed.rs:17:20\n+   |\n+LL |     let duration = Instant::now() - prev_instant;\n+   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `prev_instant.elapsed()`\n+   |\n+   = note: `-D clippy::manual-instant-elapsed` implied by `-D warnings`\n+\n+error: manual implementation of `Instant::elapsed`\n+  --> $DIR/manual_instant_elapsed.rs:26:5\n+   |\n+LL |     Instant::now() - *ref_to_instant; // to ensure parens are added correctly\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(*ref_to_instant).elapsed()`\n+\n+error: aborting due to 2 previous errors\n+"}]}