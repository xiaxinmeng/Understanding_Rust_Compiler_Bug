{"sha": "c274e4969f058b1c644243181ece9f829efa7594", "node_id": "C_kwDOAAsO6NoAKGMyNzRlNDk2OWYwNThiMWM2NDQyNDMxODFlY2U5ZjgyOWVmYTc1OTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-05T19:53:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-05T19:53:45Z"}, "message": "Auto merge of #94648 - RalfJung:rollup-4iorcrd, r=RalfJung\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #94630 (Update note about tier 2 docs.)\n - #94633 (Suggest removing a semicolon after derive attributes)\n - #94642 (Fix source code pages scroll)\n - #94645 (do not attempt to open cgroup files under Miri)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "0ddc168615acabe0f03bfb299bc268c6a7327285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ddc168615acabe0f03bfb299bc268c6a7327285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c274e4969f058b1c644243181ece9f829efa7594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c274e4969f058b1c644243181ece9f829efa7594", "html_url": "https://github.com/rust-lang/rust/commit/c274e4969f058b1c644243181ece9f829efa7594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c274e4969f058b1c644243181ece9f829efa7594/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab2bd41ce0da79f82e7bfd281bb746a6eee21346", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab2bd41ce0da79f82e7bfd281bb746a6eee21346", "html_url": "https://github.com/rust-lang/rust/commit/ab2bd41ce0da79f82e7bfd281bb746a6eee21346"}, {"sha": "00fd87e68ae02bb2a8b04fc00d6e9dd471470485", "url": "https://api.github.com/repos/rust-lang/rust/commits/00fd87e68ae02bb2a8b04fc00d6e9dd471470485", "html_url": "https://github.com/rust-lang/rust/commit/00fd87e68ae02bb2a8b04fc00d6e9dd471470485"}], "stats": {"total": 104, "additions": 93, "deletions": 11}, "files": [{"sha": "4f91f1fecbaf14dae9ec7b5a1421db037a170850", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -449,6 +449,16 @@ impl<'a> Parser<'a> {\n         if end.is_doc_comment() {\n             err.span_label(end.span, \"this doc comment doesn't document anything\");\n         }\n+        if end.meta_kind().is_some() {\n+            if self.token.kind == TokenKind::Semi {\n+                err.span_suggestion_verbose(\n+                    self.token.span,\n+                    \"consider removing this semicolon\",\n+                    String::new(),\n+                    Applicability::MaybeIncorrect,\n+                );\n+            }\n+        }\n         if let [.., penultimate, _] = attrs {\n             err.span_label(start.span.to(penultimate.span), \"other attributes here\");\n         }"}, {"sha": "2d5d306ed62bbb7017db8845389d65d4cd79dee1", "filename": "library/std/src/sys/unix/thread.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fthread.rs?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -384,6 +384,11 @@ fn cgroup2_quota() -> usize {\n     use crate::path::PathBuf;\n \n     let mut quota = usize::MAX;\n+    if cfg!(miri) {\n+        // Attempting to open a file fails under default flags due to isolation.\n+        // And Miri does not have parallelism anyway.\n+        return quota;\n+    }\n \n     let _: Option<()> = try {\n         let mut buf = Vec::with_capacity(128);"}, {"sha": "7a00b048a9b18c2b52fdfe0f2ec36f56aa58ee4c", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -73,7 +73,8 @@ Tier Policy.\n \n All tier 2 targets with host tools support the full standard library.\n \n-**NOTE:** Tier 2 targets currently do not build the `rust-docs` component.\n+**NOTE:** The `rust-docs` component is not usually built for tier 2 targets,\n+so Rustup may install the documentation for a similar tier 1 target instead.\n \n target | notes\n -------|-------\n@@ -114,7 +115,8 @@ The `std` column in the table below has the following meanings:\n \n [`no_std`]: https://rust-embedded.github.io/book/intro/no-std.html\n \n-**NOTE:** Tier 2 targets currently do not build the `rust-docs` component.\n+**NOTE:** The `rust-docs` component is not usually built for tier 2 targets,\n+so Rustup may install the documentation for a similar tier 1 target instead.\n \n target | std | notes\n -------|:---:|-------"}, {"sha": "aa77e62ba5acb03e4a4527f248d9ff9f9a8f9cef", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -149,7 +149,7 @@ function createSourceSidebar() {\n \n var lineNumbersRegex = /^#?(\\d+)(?:-(\\d+))?$/;\n \n-function highlightSourceLines(scrollTo, match) {\n+function highlightSourceLines(match) {\n     if (typeof match === \"undefined\") {\n         match = window.location.hash.match(lineNumbersRegex);\n     }\n@@ -170,11 +170,9 @@ function highlightSourceLines(scrollTo, match) {\n     if (!elem) {\n         return;\n     }\n-    if (scrollTo) {\n-        var x = document.getElementById(from);\n-        if (x) {\n-            x.scrollIntoView();\n-        }\n+    var x = document.getElementById(from);\n+    if (x) {\n+        x.scrollIntoView();\n     }\n     onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(e) {\n         onEachLazy(e.getElementsByTagName(\"span\"), function(i_e) {\n@@ -198,7 +196,7 @@ var handleSourceHighlight = (function() {\n             y = window.scrollY;\n         if (searchState.browserSupportsHistoryApi()) {\n             history.replaceState(null, null, \"#\" + name);\n-            highlightSourceLines(true);\n+            highlightSourceLines();\n         } else {\n             location.replace(\"#\" + name);\n         }\n@@ -230,15 +228,15 @@ var handleSourceHighlight = (function() {\n window.addEventListener(\"hashchange\", function() {\n     var match = window.location.hash.match(lineNumbersRegex);\n     if (match) {\n-        return highlightSourceLines(false, match);\n+        return highlightSourceLines(match);\n     }\n });\n \n onEachLazy(document.getElementsByClassName(\"line-numbers\"), function(el) {\n     el.addEventListener(\"click\", handleSourceHighlight);\n });\n \n-highlightSourceLines(true);\n+highlightSourceLines();\n \n window.createSourceSidebar = createSourceSidebar;\n })();"}, {"sha": "4e51c8dcac0af8106a44805d434a6001c6449e9e", "filename": "src/test/rustdoc-gui/source-anchor-scroll.goml", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Frustdoc-gui%2Fsource-anchor-scroll.goml", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Frustdoc-gui%2Fsource-anchor-scroll.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsource-anchor-scroll.goml?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -0,0 +1,20 @@\n+// We check that when the anchor changes and is output of the displayed content,\n+// the page is scrolled to it.\n+goto: file://|DOC_PATH|/src/link_to_definition/lib.rs.html\n+\n+// We reduce the window size to make it easier to make an element \"out of the page\".\n+size: (600, 800)\n+// We check that the scroll is at the top first.\n+assert-property: (\"html\", {\"scrollTop\": \"0\"})\n+\n+click: '//a[text() = \"barbar\"]'\n+assert-property: (\"html\", {\"scrollTop\": \"125\"})\n+click: '//a[text() = \"bar\"]'\n+assert-property: (\"html\", {\"scrollTop\": \"166\"})\n+click: '//a[text() = \"sub_fn\"]'\n+assert-property: (\"html\", {\"scrollTop\": \"53\"})\n+\n+// We now check that clicking on lines doesn't change the scroll\n+// Extra information: the \"sub_fn\" function header is on line 1.\n+click: '//*[@id=\"6\"]'\n+assert-property: (\"html\", {\"scrollTop\": \"53\"})"}, {"sha": "419a9cceec5f3fe9bb5164d10e34558aacb22778", "filename": "src/test/rustdoc-gui/src/link_to_definition/lib.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flink_to_definition%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flink_to_definition%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Flink_to_definition%2Flib.rs?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -1,6 +1,35 @@\n+pub fn sub_fn() {\n+    barbar();\n+}\n+fn barbar() {\n+    bar(vec![], vec![], vec![], vec![], Bar { a: \"a\".into(), b: 0 });\n+}\n+\n pub struct Bar {\n     pub a: String,\n     pub b: u32,\n }\n \n pub fn foo(_b: &Bar) {}\n+\n+// The goal now is to add\n+// a lot of lines so\n+// that the next content\n+// will be out of the screen\n+// to allow us to test that\n+// if the anchor changes to\n+// something outside of the\n+// current view, it'll\n+// scroll to it as expected.\n+\n+// More filling content.\n+\n+pub fn bar(\n+  _a: Vec<String>,\n+  _b: Vec<String>,\n+  _c: Vec<String>,\n+  _d: Vec<String>,\n+  _e: Bar,\n+) {\n+    sub_fn();\n+}"}, {"sha": "56fe40b916baf9f0030891836b47e97056890e11", "filename": "src/test/ui/parser/attr-with-a-semicolon.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.rs?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -0,0 +1,4 @@\n+#[derive(Debug, Clone)]; //~ERROR expected item after attributes\n+struct Foo;\n+\n+fn main() {}"}, {"sha": "49ed30150d0d733fea348e1bcf371b0eb0c70c01", "filename": "src/test/ui/parser/attr-with-a-semicolon.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c274e4969f058b1c644243181ece9f829efa7594/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fattr-with-a-semicolon.stderr?ref=c274e4969f058b1c644243181ece9f829efa7594", "patch": "@@ -0,0 +1,14 @@\n+error: expected item after attributes\n+  --> $DIR/attr-with-a-semicolon.rs:1:1\n+   |\n+LL | #[derive(Debug, Clone)];\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: consider removing this semicolon\n+   |\n+LL - #[derive(Debug, Clone)];\n+LL + #[derive(Debug, Clone)]\n+   | \n+\n+error: aborting due to previous error\n+"}]}