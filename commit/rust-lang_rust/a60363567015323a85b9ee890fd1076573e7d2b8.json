{"sha": "a60363567015323a85b9ee890fd1076573e7d2b8", "node_id": "C_kwDOAAsO6NoAKGE2MDM2MzU2NzAxNTMyM2E4NWI5ZWU4OTBmZDEwNzY1NzNlN2QyYjg", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-22T09:49:31Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-11-22T18:49:29Z"}, "message": "`rustc_arena`: remove a couple of `ref` patterns", "tree": {"sha": "99229dc6f63e08da7b7d285263fcf3b4cfddfbe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99229dc6f63e08da7b7d285263fcf3b4cfddfbe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a60363567015323a85b9ee890fd1076573e7d2b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a60363567015323a85b9ee890fd1076573e7d2b8", "html_url": "https://github.com/rust-lang/rust/commit/a60363567015323a85b9ee890fd1076573e7d2b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a60363567015323a85b9ee890fd1076573e7d2b8/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "616df0f03ba343588ccc7894758f89825012d711", "url": "https://api.github.com/repos/rust-lang/rust/commits/616df0f03ba343588ccc7894758f89825012d711", "html_url": "https://github.com/rust-lang/rust/commit/616df0f03ba343588ccc7894758f89825012d711"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "49a070badc6de5c30c6cbd4b81b0407b970d9621", "filename": "compiler/rustc_arena/src/tests.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a60363567015323a85b9ee890fd1076573e7d2b8/compiler%2Frustc_arena%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a60363567015323a85b9ee890fd1076573e7d2b8/compiler%2Frustc_arena%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Ftests.rs?ref=a60363567015323a85b9ee890fd1076573e7d2b8", "patch": "@@ -52,19 +52,15 @@ fn test_arena_alloc_nested() {\n \n     impl<'a> Wrap<'a> {\n         fn alloc_inner<F: Fn() -> Inner>(&self, f: F) -> &Inner {\n-            let r: &EI<'_> = self.0.alloc(EI::I(f()));\n-            if let &EI::I(ref i) = r {\n-                i\n-            } else {\n-                panic!(\"mismatch\");\n+            match self.0.alloc(EI::I(f())) {\n+                EI::I(i) => i,\n+                _ => panic!(\"mismatch\"),\n             }\n         }\n         fn alloc_outer<F: Fn() -> Outer<'a>>(&self, f: F) -> &Outer<'_> {\n-            let r: &EI<'_> = self.0.alloc(EI::O(f()));\n-            if let &EI::O(ref o) = r {\n-                o\n-            } else {\n-                panic!(\"mismatch\");\n+            match self.0.alloc(EI::O(f())) {\n+                EI::O(o) => o,\n+                _ => panic!(\"mismatch\"),\n             }\n         }\n     }"}]}