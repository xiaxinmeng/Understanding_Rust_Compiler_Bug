{"sha": "9e58908e27d47683800ab0869a98502a6f485a62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNTg5MDhlMjdkNDc2ODM4MDBhYjA4NjlhOTg1MDJhNmY0ODVhNjI=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-05-22T03:04:57Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-07-15T15:38:11Z"}, "message": "Use cfg_if in libpanic_abort.\n\nThis allows setting a default abort using the core intrinsic.", "tree": {"sha": "850c5201cbe8561ea56b0d19bdc1a56b99b0daa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/850c5201cbe8561ea56b0d19bdc1a56b99b0daa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e58908e27d47683800ab0869a98502a6f485a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e58908e27d47683800ab0869a98502a6f485a62", "html_url": "https://github.com/rust-lang/rust/commit/9e58908e27d47683800ab0869a98502a6f485a62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e58908e27d47683800ab0869a98502a6f485a62/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "432b4c14aad49f27bad3c59bb3bc85595e21a71b", "url": "https://api.github.com/repos/rust-lang/rust/commits/432b4c14aad49f27bad3c59bb3bc85595e21a71b", "html_url": "https://github.com/rust-lang/rust/commit/432b4c14aad49f27bad3c59bb3bc85595e21a71b"}], "stats": {"total": 36, "additions": 20, "deletions": 16}, "files": [{"sha": "28ff6b3b1ebf29a7c3b9c51d70fc920e6299b660", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e58908e27d47683800ab0869a98502a6f485a62/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9e58908e27d47683800ab0869a98502a6f485a62/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=9e58908e27d47683800ab0869a98502a6f485a62", "patch": "@@ -2056,6 +2056,7 @@ dependencies = [\n name = \"panic_abort\"\n version = \"0.0.0\"\n dependencies = [\n+ \"cfg-if\",\n  \"compiler_builtins\",\n  \"core\",\n  \"libc\","}, {"sha": "dc385022440e04da18fa35401831f8cbf94fdf1a", "filename": "src/libpanic_abort/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e58908e27d47683800ab0869a98502a6f485a62/src%2Flibpanic_abort%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9e58908e27d47683800ab0869a98502a6f485a62/src%2Flibpanic_abort%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_abort%2FCargo.toml?ref=9e58908e27d47683800ab0869a98502a6f485a62", "patch": "@@ -11,6 +11,7 @@ bench = false\n doc = false\n \n [dependencies]\n+cfg-if = { version = \"0.1.8\", features = ['rustc-dep-of-std'] }\n core = { path = \"../libcore\" }\n libc = { version = \"0.2\", default-features = false }\n compiler_builtins = \"0.1.0\""}, {"sha": "497f40cafd3ed18c795914e4d36f8a52757cddf9", "filename": "src/libpanic_abort/lib.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9e58908e27d47683800ab0869a98502a6f485a62/src%2Flibpanic_abort%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e58908e27d47683800ab0869a98502a6f485a62/src%2Flibpanic_abort%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_abort%2Flib.rs?ref=9e58908e27d47683800ab0869a98502a6f485a62", "patch": "@@ -40,23 +40,25 @@ pub unsafe extern \"C\" fn __rust_panic_cleanup(_: *mut u8) -> *mut (dyn Any + Sen\n pub unsafe extern \"C\" fn __rust_start_panic(_payload: usize) -> u32 {\n     abort();\n \n-    #[cfg(any(unix, target_os = \"cloudabi\"))]\n-    unsafe fn abort() -> ! {\n-        libc::abort();\n-    }\n-\n-    #[cfg(any(windows, all(target_arch = \"wasm32\", not(target_os = \"emscripten\"))))]\n-    unsafe fn abort() -> ! {\n-        core::intrinsics::abort();\n-    }\n-\n-    #[cfg(any(target_os = \"hermit\", all(target_vendor = \"fortanix\", target_env = \"sgx\")))]\n-    unsafe fn abort() -> ! {\n-        // call std::sys::abort_internal\n-        extern \"C\" {\n-            pub fn __rust_abort() -> !;\n+    cfg_if::cfg_if! {\n+        if #[cfg(any(unix, target_os = \"cloudabi\"))] {\n+            unsafe fn abort() -> ! {\n+                libc::abort();\n+            }\n+        } else if #[cfg(any(target_os = \"hermit\",\n+                        all(target_vendor = \"fortanix\", target_env = \"sgx\")))] {\n+            unsafe fn abort() -> ! {\n+                // call std::sys::abort_internal\n+                extern \"C\" {\n+                    pub fn __rust_abort() -> !;\n+                }\n+                __rust_abort();\n+            }\n+        } else {\n+            unsafe fn abort() -> ! {\n+                core::intrinsics::abort();\n+            }\n         }\n-        __rust_abort();\n     }\n }\n "}]}