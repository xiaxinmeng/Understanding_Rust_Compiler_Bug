{"sha": "c8346376264ea99cafd6550b5b5f460cf82b326f", "node_id": "C_kwDOAAsO6NoAKGM4MzQ2Mzc2MjY0ZWE5OWNhZmQ2NTUwYjViNWY0NjBjZjgyYjMyNmY", "commit": {"author": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-09-12T21:32:09Z"}, "committer": {"name": "Christian Poveda", "email": "git@pvdrz.com", "date": "2022-09-13T20:16:41Z"}, "message": "address review comments", "tree": {"sha": "d4aff5aa053c6916728623863cd834b54d329d58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4aff5aa053c6916728623863cd834b54d329d58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8346376264ea99cafd6550b5b5f460cf82b326f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQRsB8A/3NrzTlMMjT0nUl7150IKUAUCYyDlKQAKCRAnUl7150IK\nUP7sAP92HzYUyJwYQGjC0fglPRb03zGQBXUT2MdApg1oYtYHHAD+KAsFRvzPs7T2\nnHtDwpbhRVdwJ6jf50PUfB0/Ld6++go=\n=71O3\n-----END PGP SIGNATURE-----", "payload": "tree d4aff5aa053c6916728623863cd834b54d329d58\nparent b16d301dd9f2138b91a05e398a61d3ddeb8f6b7b\nauthor Christian Poveda <git@pvdrz.com> 1663018329 -0500\ncommitter Christian Poveda <git@pvdrz.com> 1663100201 -0500\n\naddress review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8346376264ea99cafd6550b5b5f460cf82b326f", "html_url": "https://github.com/rust-lang/rust/commit/c8346376264ea99cafd6550b5b5f460cf82b326f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8346376264ea99cafd6550b5b5f460cf82b326f/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b16d301dd9f2138b91a05e398a61d3ddeb8f6b7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b16d301dd9f2138b91a05e398a61d3ddeb8f6b7b", "html_url": "https://github.com/rust-lang/rust/commit/b16d301dd9f2138b91a05e398a61d3ddeb8f6b7b"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "3f33273e1e541d577409d58e6fd756da531580bc", "filename": "src/clock.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8346376264ea99cafd6550b5b5f460cf82b326f/src%2Fclock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8346376264ea99cafd6550b5b5f460cf82b326f/src%2Fclock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclock.rs?ref=c8346376264ea99cafd6550b5b5f460cf82b326f", "patch": "@@ -1,13 +1,9 @@\n-use std::sync::atomic::AtomicU64;\n+use std::sync::atomic::{AtomicU64, Ordering};\n use std::time::{Duration, Instant as StdInstant};\n \n-use rustc_data_structures::sync::Ordering;\n-\n-use crate::*;\n-\n-/// When using a virtual clock, this defines how many nanoseconds do we pretend\n-/// are passing for each basic block.\n-const NANOSECOND_PER_BASIC_BLOCK: u64 = 10;\n+/// When using a virtual clock, this defines how many nanoseconds we pretend are passing for each\n+/// basic block.\n+const NANOSECONDS_PER_BASIC_BLOCK: u64 = 10;\n \n #[derive(Debug)]\n pub struct Instant {\n@@ -83,7 +79,7 @@ impl Clock {\n                 // Time will pass without us doing anything.\n             }\n             ClockKind::Virtual { nanoseconds } => {\n-                nanoseconds.fetch_add(NANOSECOND_PER_BASIC_BLOCK, Ordering::SeqCst);\n+                nanoseconds.fetch_add(NANOSECONDS_PER_BASIC_BLOCK, Ordering::SeqCst);\n             }\n         }\n     }"}, {"sha": "f083ab499009994be03a277b91ea80e50cefbabb", "filename": "src/shims/time.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8346376264ea99cafd6550b5b5f460cf82b326f/src%2Fshims%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8346376264ea99cafd6550b5b5f460cf82b326f/src%2Fshims%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftime.rs?ref=c8346376264ea99cafd6550b5b5f460cf82b326f", "patch": "@@ -38,7 +38,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             [this.eval_libc_i32(\"CLOCK_MONOTONIC\")?, this.eval_libc_i32(\"CLOCK_MONOTONIC_COARSE\")?];\n \n         let duration = if absolute_clocks.contains(&clk_id) {\n-            this.check_no_isolation(\"`clock_gettime` with real time clocks\")?;\n+            this.check_no_isolation(\"`clock_gettime` with `REALTIME` clocks\")?;\n             system_time_to_duration(&SystemTime::now())?\n         } else if relative_clocks.contains(&clk_id) {\n             this.machine.clock.now().duration_since(this.machine.clock.anchor())"}, {"sha": "b6444319b59b9ca40dcd37544fed6ffc337b7ae9", "filename": "tests/pass/shims/time-with-isolation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8346376264ea99cafd6550b5b5f460cf82b326f/tests%2Fpass%2Fshims%2Ftime-with-isolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8346376264ea99cafd6550b5b5f460cf82b326f/tests%2Fpass%2Fshims%2Ftime-with-isolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Fshims%2Ftime-with-isolation.rs?ref=c8346376264ea99cafd6550b5b5f460cf82b326f", "patch": "@@ -8,7 +8,7 @@ fn test_sleep() {\n     assert!((after - before).as_secs() >= 3600);\n }\n \n-/// Ensure that time passes even if we don't sleep (but just wor).\n+/// Ensure that time passes even if we don't sleep (but just work).\n fn test_time_passes() {\n     // Check `Instant`.\n     let now1 = Instant::now();"}]}