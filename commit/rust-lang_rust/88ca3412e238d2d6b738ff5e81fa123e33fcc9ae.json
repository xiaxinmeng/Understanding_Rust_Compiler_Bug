{"sha": "88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4Y2EzNDEyZTIzOGQyZDZiNzM4ZmY1ZTgxZmExMjNlMzNmY2M5YWU=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-11T14:01:53Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-18T11:55:27Z"}, "message": "Switched from FxHashMap to BTreeMap to preserve ordering when iterating.", "tree": {"sha": "d79ec60e0a10eac1feff2ad0cac76b03377818e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79ec60e0a10eac1feff2ad0cac76b03377818e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlug568ACgkQAXYLT59T\n8VSIJg//ag6tq8yMbLWNA9ou4nTwcsI2joIHFJUdTv+qcICLlRJQ0sIG17fQXXiB\nJDSLYxFZ2zswTV9bSDkh7Hs2P0phNKYeXfwzSAXbLzD7EhiFVTtX7CRddPUjISf2\nbqxnuTOcpBEMQpYK4r4EfElX2cTRLPrOV14uSRL6YYj8XqfZeGPVTs8Q4hQ11dU8\nEXmrMCPQ7U9q81z2nvRDp18C0V/DJpQQ4YMnLsXHmEypNAw64X7JUsgMe03j6hYp\nZeJbrVoJ+023LyUfhPaSlv3RuignARKazLKjyX58NPff4xce42RFM1HcBXT9qPzk\ngITjE89SLvpuUPV+LoNwNAUU3Ba+l/AsK/9KVK5GiM6VAeRycrTUrEjmJLSsd9Uw\nVfdLhCZ4auq6mGwKSUSDlVKhGGiPfwPSP2LlAIABh9mbyM25073Eia23HshA7izC\nNONYa7pnxLqkak4WX7JMTPzFdr5pu38V6t9Rs17UYw43GEhGx0G532D1pdX48AKn\nuyJPZH8vu0qkYls7tdNtNUt1euILIIegIvs14Di5mWhpi1chRWJCiga0xJ/EmCU9\nYcc7Py8SHGEMvkpJERYOdJ6iDwKs8NDTQeOxj2btbK7b6gkXtyVKn6IlpdWEW4Ld\np2P8CgBvcx8xwoxpspK8dDGFUn0u+ss04Eey4vIikEdogQEhaEk=\n=WTWR\n-----END PGP SIGNATURE-----", "payload": "tree d79ec60e0a10eac1feff2ad0cac76b03377818e9\nparent 783bad4295f0eca1598572cee9f7171562f8e673\nauthor David Wood <david@davidtw.co> 1536674513 +0200\ncommitter David Wood <david@davidtw.co> 1537271727 +0200\n\nSwitched from FxHashMap to BTreeMap to preserve ordering when iterating.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "html_url": "https://github.com/rust-lang/rust/commit/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "783bad4295f0eca1598572cee9f7171562f8e673", "url": "https://api.github.com/repos/rust-lang/rust/commits/783bad4295f0eca1598572cee9f7171562f8e673", "html_url": "https://github.com/rust-lang/rust/commit/783bad4295f0eca1598572cee9f7171562f8e673"}], "stats": {"total": 29, "additions": 17, "deletions": 12}, "files": [{"sha": "c7e53714e3e847a5ed8bdacd25d6bc68e8a6bb71", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "patch": "@@ -27,12 +27,13 @@ use rustc::ty::{self, ParamEnv, TyCtxt, Ty};\n \n use rustc_errors::{Applicability, Diagnostic, DiagnosticBuilder, Level};\n use rustc_data_structures::bit_set::BitSet;\n-use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::dominators::Dominators;\n use rustc_data_structures::indexed_vec::Idx;\n use smallvec::SmallVec;\n \n use std::rc::Rc;\n+use std::collections::BTreeMap;\n \n use syntax_pos::Span;\n \n@@ -256,7 +257,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n         locals_are_invalidated_at_exit,\n         access_place_error_reported: FxHashSet(),\n         reservation_error_reported: FxHashSet(),\n-        move_error_reported: FxHashMap(),\n+        move_error_reported: BTreeMap::new(),\n         uninitialized_error_reported: FxHashSet(),\n         errors_buffer,\n         nonlexical_regioncx: regioncx,\n@@ -336,7 +337,7 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n     }\n \n     // Buffer any move errors that we collected and de-duplicated.\n-    for (_, (_, diag)) in mbcx.move_error_reported.drain() {\n+    for (_, (_, diag)) in mbcx.move_error_reported {\n         diag.buffer(&mut mbcx.errors_buffer);\n     }\n \n@@ -425,7 +426,11 @@ pub struct MirBorrowckCtxt<'cx, 'gcx: 'tcx, 'tcx: 'cx> {\n     /// `Place` of the previous most diagnostic. This happens instead of buffering the error. Once\n     /// all move errors have been reported, any diagnostics in this map are added to the buffer\n     /// to be emitted.\n-    move_error_reported: FxHashMap<Vec<MoveOutIndex>, (Place<'tcx>, DiagnosticBuilder<'cx>)>,\n+    ///\n+    /// `BTreeMap` is used to preserve the order of insertions when iterating. This is necessary\n+    /// when errors in the map are being re-added to the error buffer so that errors with the\n+    /// same primary span come out in a consistent order.\n+    move_error_reported: BTreeMap<Vec<MoveOutIndex>, (Place<'tcx>, DiagnosticBuilder<'cx>)>,\n     /// This field keeps track of errors reported in the checking of uninitialized variables,\n     /// so that we don't report seemingly duplicate errors.\n     uninitialized_error_reported: FxHashSet<Place<'tcx>>,"}, {"sha": "ce1880c584a6e94e1dcfb6114c4001fbb9d18074", "filename": "src/test/ui/borrowck/borrowck-multiple-captures.nll.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-multiple-captures.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/88ca3412e238d2d6b738ff5e81fa123e33fcc9ae/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-multiple-captures.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-multiple-captures.nll.stderr?ref=88ca3412e238d2d6b738ff5e81fa123e33fcc9ae", "patch": "@@ -26,31 +26,31 @@ LL |         drop(x2); //~ ERROR cannot move `x2` into closure because it is bor\n LL |     borrow(&*p2);\n    |            ---- borrow later used here\n \n-error[E0382]: use of moved value: `x2`\n+error[E0382]: use of moved value: `x1`\n   --> $DIR/borrowck-multiple-captures.rs:35:19\n    |\n-LL |     drop(x2);\n+LL |     drop(x1);\n    |          -- value moved here\n+...\n LL |     thread::spawn(move|| {\n    |                   ^^^^^^ value used here after move\n LL |         drop(x1); //~ ERROR capture of moved value: `x1`\n-LL |         drop(x2); //~ ERROR capture of moved value: `x2`\n    |              -- use occurs due to use in closure\n    |\n-   = note: move occurs because `x2` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n+   = note: move occurs because `x1` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n \n-error[E0382]: use of moved value: `x1`\n+error[E0382]: use of moved value: `x2`\n   --> $DIR/borrowck-multiple-captures.rs:35:19\n    |\n-LL |     drop(x1);\n+LL |     drop(x2);\n    |          -- value moved here\n-...\n LL |     thread::spawn(move|| {\n    |                   ^^^^^^ value used here after move\n LL |         drop(x1); //~ ERROR capture of moved value: `x1`\n+LL |         drop(x2); //~ ERROR capture of moved value: `x2`\n    |              -- use occurs due to use in closure\n    |\n-   = note: move occurs because `x1` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n+   = note: move occurs because `x2` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n \n error[E0382]: use of moved value: `x`\n   --> $DIR/borrowck-multiple-captures.rs:46:14"}]}