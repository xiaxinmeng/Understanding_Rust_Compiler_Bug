{"sha": "fc3ed0c8084960ea40e95ee0505d42ede96e8158", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjM2VkMGM4MDg0OTYwZWE0MGU5NWVlMDUwNWQ0MmVkZTk2ZTgxNTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-30T15:57:40Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-10-30T16:29:24Z"}, "message": "rollup merge of #18413 : bkoropoff/issue-18412", "tree": {"sha": "bb170a131ee266293053d16ef9ad12114d4efff1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb170a131ee266293053d16ef9ad12114d4efff1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc3ed0c8084960ea40e95ee0505d42ede96e8158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3ed0c8084960ea40e95ee0505d42ede96e8158", "html_url": "https://github.com/rust-lang/rust/commit/fc3ed0c8084960ea40e95ee0505d42ede96e8158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc3ed0c8084960ea40e95ee0505d42ede96e8158/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3ba5186758589983f13e088ce9ee2003265b9c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3ba5186758589983f13e088ce9ee2003265b9c5", "html_url": "https://github.com/rust-lang/rust/commit/f3ba5186758589983f13e088ce9ee2003265b9c5"}, {"sha": "12619bede2cb08d8d58375e2dd188bd27a03d896", "url": "https://api.github.com/repos/rust-lang/rust/commits/12619bede2cb08d8d58375e2dd188bd27a03d896", "html_url": "https://github.com/rust-lang/rust/commit/12619bede2cb08d8d58375e2dd188bd27a03d896"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "2fcc4f6af151700a88e9292c0a49f08fddea2642", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=fc3ed0c8084960ea40e95ee0505d42ede96e8158", "patch": "@@ -833,7 +833,7 @@ fn trans_def<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n \n     let _icx = push_ctxt(\"trans_def_lvalue\");\n     match def {\n-        def::DefFn(..) | def::DefStaticMethod(..) |\n+        def::DefFn(..) | def::DefStaticMethod(..) | def::DefMethod(..) |\n         def::DefStruct(_) | def::DefVariant(..) => {\n             trans_def_fn_unadjusted(bcx, ref_expr, def)\n         }\n@@ -1191,10 +1191,12 @@ fn trans_def_fn_unadjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let llfn = match def {\n         def::DefFn(did, _, _) |\n         def::DefStruct(did) | def::DefVariant(_, did, _) |\n-        def::DefStaticMethod(did, def::FromImpl(_), _) => {\n+        def::DefStaticMethod(did, def::FromImpl(_), _) |\n+        def::DefMethod(did, _, def::FromImpl(_)) => {\n             callee::trans_fn_ref(bcx, did, ExprId(ref_expr.id))\n         }\n-        def::DefStaticMethod(impl_did, def::FromTrait(trait_did), _) => {\n+        def::DefStaticMethod(impl_did, def::FromTrait(trait_did), _) |\n+        def::DefMethod(impl_did, _, def::FromTrait(trait_did)) => {\n             meth::trans_static_method_callee(bcx, impl_did,\n                                              trait_did, ref_expr.id)\n         }"}, {"sha": "3a1dbb887be67d40c0571071a80651096a405527", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=fc3ed0c8084960ea40e95ee0505d42ede96e8158", "patch": "@@ -3631,7 +3631,7 @@ pub fn expr_kind(tcx: &ctxt, expr: &ast::Expr) -> ExprKind {\n                 def::DefFn(_, _, true) => RvalueDpsExpr,\n \n                 // Fn pointers are just scalar values.\n-                def::DefFn(..) | def::DefStaticMethod(..) => RvalueDatumExpr,\n+                def::DefFn(..) | def::DefStaticMethod(..) | def::DefMethod(..) => RvalueDatumExpr,\n \n                 // Note: there is actually a good case to be made that\n                 // DefArg's, particularly those of immediate type, ought to"}, {"sha": "c03301f17f31fe15776d32e126dcd41f5cb8e4cb", "filename": "src/test/run-pass/issue-18412.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Ftest%2Frun-pass%2Fissue-18412.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc3ed0c8084960ea40e95ee0505d42ede96e8158/src%2Ftest%2Frun-pass%2Fissue-18412.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18412.rs?ref=fc3ed0c8084960ea40e95ee0505d42ede96e8158", "patch": "@@ -0,0 +1,36 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(tuple_indexing)]\n+\n+// Test that non-static methods can be assigned to local variables as\n+// function pointers.\n+\n+trait Foo {\n+    fn foo(&self) -> uint;\n+}\n+\n+struct A(uint);\n+\n+impl A {\n+    fn bar(&self) -> uint { self.0 }\n+}\n+\n+impl Foo for A {\n+    fn foo(&self) -> uint { self.bar() }\n+}\n+\n+fn main() {\n+    let f = A::bar;\n+    let g = Foo::foo;\n+    let a = A(42);\n+\n+    assert_eq!(f(&a), g(&a));\n+}"}]}