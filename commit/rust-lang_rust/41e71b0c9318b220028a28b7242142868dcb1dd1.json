{"sha": "41e71b0c9318b220028a28b7242142868dcb1dd1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxZTcxYjBjOTMxOGIyMjAwMjhhMjhiNzI0MjE0Mjg2OGRjYjFkZDE=", "commit": {"author": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-09T09:32:08Z"}, "committer": {"name": "Samy Kacimi", "email": "samy.kacimi@protonmail.ch", "date": "2019-07-09T12:13:28Z"}, "message": "normalize use of backticks in compiler messages for libsyntax/feature_gate\n\nhttps://github.com/rust-lang/rust/issues/60532", "tree": {"sha": "69ffe2ed61671432d11cff4bae85839d649a9bfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69ffe2ed61671432d11cff4bae85839d649a9bfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41e71b0c9318b220028a28b7242142868dcb1dd1", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEExrhwoK6DmrCETV5+4ilOki9MVuUFAl0khOgACgkQ4ilOki9M\nVuUGCAwAgTjPXIF48HJGS33NIBPQRvEC/hFm4A8Totn3pDOnVnhduD8AL+MLzZu0\n0uRH2lve0DP6uGA6UWzaCLmgKBPaBTeOo8alW9IxSErGXu1l2dR/FnvSSJUn36z/\nG3S8BfOKnk2DgWEgAKTAXdkJETSFtayU3Jd+/yqV025ZXOVLVz5duGo2t35flNY6\nL9wm2czL2uddMegn236M1JyTh9eBIuI+96Y0iEZRpVHpMc1OMYOecPygR9BPuv6b\nhdYmFqV8l/N1BF82Sm8kL1MeDn5WXkQNNxcW9ZnQlgo6Xx7eNu6pqwm8TxC4jutA\nEjjEoBHCPEkoeqrHHWUErBnXyzQ+T7nGy1PGgnhnmOjYrbZ0zpAOa4q3pSaHpzmQ\nb6Y0pqr898BIO1I6ctLc/uUP4BA0YTdgv1FQ+5H6CYImSxPE70WjVj3ucIuYZtLV\nv0cqLL8ZAOpFKJbdJsIl2y61q9Csz1H2wd5WT92+kxUUua4eWQGTNcYH5Ms+g/op\n6yqtH9yL\n=KMLJ\n-----END PGP SIGNATURE-----", "payload": "tree 69ffe2ed61671432d11cff4bae85839d649a9bfe\nparent 909f5a049415a815b23502a5498de9a99bbf276b\nauthor Samy Kacimi <samy.kacimi@protonmail.ch> 1562664728 +0200\ncommitter Samy Kacimi <samy.kacimi@protonmail.ch> 1562674408 +0200\n\nnormalize use of backticks in compiler messages for libsyntax/feature_gate\n\nhttps://github.com/rust-lang/rust/issues/60532\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41e71b0c9318b220028a28b7242142868dcb1dd1", "html_url": "https://github.com/rust-lang/rust/commit/41e71b0c9318b220028a28b7242142868dcb1dd1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41e71b0c9318b220028a28b7242142868dcb1dd1/comments", "author": null, "committer": null, "parents": [{"sha": "909f5a049415a815b23502a5498de9a99bbf276b", "url": "https://api.github.com/repos/rust-lang/rust/commits/909f5a049415a815b23502a5498de9a99bbf276b", "html_url": "https://github.com/rust-lang/rust/commit/909f5a049415a815b23502a5498de9a99bbf276b"}], "stats": {"total": 1386, "additions": 693, "deletions": 693}, "files": [{"sha": "84a012f03c9d3fe28bcbe3ad320fd984791f32db", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1465,7 +1465,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n         cfg_fn!(dropck_eyepatch))),\n     (sym::unwind, Whitelisted, template!(List: \"allowed|aborts\"), Gated(Stability::Unstable,\n                                 sym::unwind_attributes,\n-                                \"#[unwind] is experimental\",\n+                                \"`#[unwind]` is experimental\",\n                                 cfg_fn!(unwind_attributes))),\n     (sym::used, Whitelisted, template!(Word), Ungated),\n \n@@ -1551,13 +1551,13 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n \n     (sym::alloc_error_handler, Normal, template!(Word), Gated(Stability::Unstable,\n                         sym::alloc_error_handler,\n-                        \"#[alloc_error_handler] is an unstable feature\",\n+                        \"`#[alloc_error_handler]` is an unstable feature\",\n                         cfg_fn!(alloc_error_handler))),\n \n     // RFC 2412\n     (sym::optimize, Whitelisted, template!(List: \"size|speed\"), Gated(Stability::Unstable,\n                             sym::optimize_attribute,\n-                            \"#[optimize] attribute is an unstable feature\",\n+                            \"`#[optimize]` attribute is an unstable feature\",\n                             cfg_fn!(optimize_attribute))),\n \n     // Crate level attributes\n@@ -1674,7 +1674,7 @@ impl<'a> Context<'a> {\n                 if let Some(content) = attr.meta_item_list() {\n                     if content.iter().any(|c| c.check_name(sym::include)) {\n                         gate_feature!(self, external_doc, attr.span,\n-                            \"#[doc(include = \\\"...\\\")] is experimental\"\n+                            \"`#[doc(include = \\\"...\\\")]` is experimental\"\n                         );\n                     }\n                 }\n@@ -1803,7 +1803,7 @@ fn leveled_feature_err<'a, S: Into<MultiSpan>>(\n \n     // #23973: do not suggest `#![feature(...)]` if we are in beta/stable\n     if sess.unstable_features.is_nightly_build() {\n-        err.help(&format!(\"add #![feature({})] to the crate attributes to enable\", feature));\n+        err.help(&format!(\"add `#![feature({})]` to the crate attributes to enable\", feature));\n     }\n \n     // If we're on stable and only emitting a \"soft\" warning, add a note to\n@@ -1985,23 +1985,23 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             if let Some(content) = attr.meta_item_list() {\n                 if content.len() == 1 && content[0].check_name(sym::cfg) {\n                     gate_feature_post!(&self, doc_cfg, attr.span,\n-                        \"#[doc(cfg(...))] is experimental\"\n+                        \"`#[doc(cfg(...))]` is experimental\"\n                     );\n                 } else if content.iter().any(|c| c.check_name(sym::masked)) {\n                     gate_feature_post!(&self, doc_masked, attr.span,\n-                        \"#[doc(masked)] is experimental\"\n+                        \"`#[doc(masked)]` is experimental\"\n                     );\n                 } else if content.iter().any(|c| c.check_name(sym::spotlight)) {\n                     gate_feature_post!(&self, doc_spotlight, attr.span,\n-                        \"#[doc(spotlight)] is experimental\"\n+                        \"`#[doc(spotlight)]` is experimental\"\n                     );\n                 } else if content.iter().any(|c| c.check_name(sym::alias)) {\n                     gate_feature_post!(&self, doc_alias, attr.span,\n-                        \"#[doc(alias = \\\"...\\\")] is experimental\"\n+                        \"`#[doc(alias = \\\"...\\\")]` is experimental\"\n                     );\n                 } else if content.iter().any(|c| c.check_name(sym::keyword)) {\n                     gate_feature_post!(&self, doc_keyword, attr.span,\n-                        \"#[doc(keyword = \\\"...\\\")] is experimental\"\n+                        \"`#[doc(keyword = \\\"...\\\")]` is experimental\"\n                     );\n                 }\n             }\n@@ -2044,13 +2044,13 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                 }\n                 if attr::contains_name(&i.attrs[..], sym::start) {\n                     gate_feature_post!(&self, start, i.span,\n-                                      \"a #[start] function is an experimental \\\n+                                      \"a `#[start]` function is an experimental \\\n                                        feature whose signature may change \\\n                                        over time\");\n                 }\n                 if attr::contains_name(&i.attrs[..], sym::main) {\n                     gate_feature_post!(&self, main, i.span,\n-                                       \"declaration of a nonstandard #[main] \\\n+                                       \"declaration of a non-standard `#[main]` \\\n                                         function may change over time, for now \\\n                                         a top-level `fn main()` is required\");\n                 }\n@@ -2638,7 +2638,7 @@ fn maybe_stage_features(span_handler: &Handler, krate: &ast::Crate,\n             if attr.check_name(sym::feature) {\n                 let release_channel = option_env!(\"CFG_RELEASE_CHANNEL\").unwrap_or(\"(unknown)\");\n                 span_err!(span_handler, attr.span, E0554,\n-                          \"#![feature] may not be used on the {} release channel\",\n+                          \"`#![feature]` may not be used on the {} release channel\",\n                           release_channel);\n             }\n         }"}, {"sha": "c5c1326c4f3363f10da5f9be8deb00101f14a0d9", "filename": "src/test/ui-fulldeps/gated-plugin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fgated-plugin.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![plugin(attr_plugin_test)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29597\n-   = help: add #![feature(plugin)] to the crate attributes to enable\n+   = help: add `#![feature(plugin)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "02056d30eae9cd24e6fadce448e7eec38234eba9", "filename": "src/test/ui-fulldeps/hash-stable-is-unstable.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -9,7 +9,7 @@ LL | extern crate rustc_data_structures;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n   --> $DIR/hash-stable-is-unstable.rs:5:1\n@@ -18,7 +18,7 @@ LL | extern crate rustc;\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n   --> $DIR/hash-stable-is-unstable.rs:7:1\n@@ -27,7 +27,7 @@ LL | extern crate rustc_macros;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n   --> $DIR/hash-stable-is-unstable.rs:10:5\n@@ -36,7 +36,7 @@ LL | use rustc_macros::HashStable;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n   --> $DIR/hash-stable-is-unstable.rs:13:10\n@@ -45,7 +45,7 @@ LL | #[derive(HashStable)]\n    |          ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error: aborting due to 6 previous errors\n "}, {"sha": "c3a8c92149916183726406580aef15eb471cd4cd", "filename": "src/test/ui/async-await/feature-async-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Ffeature-async-closure.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let _ = async || {};\n    |             ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62290\n-   = help: add #![feature(async_closure)] to the crate attributes to enable\n+   = help: add `#![feature(async_closure)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6021700dfbb1dfb7680f56187842b3a884f22b79", "filename": "src/test/ui/attributes/obsolete-attr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fobsolete-attr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[fixed_stack_segment] fn f() {}\n    |   ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ab_isize` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/obsolete-attr.rs:3:3\n@@ -14,7 +14,7 @@ LL | #[ab_isize=\"stdcall\"] extern {}\n    |   ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b46db5662932cfd3c6c5760c921146885a9a5c2f", "filename": "src/test/ui/attributes/unknown-attr.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Funknown-attr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![mutable_doc]\n    |    ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `dance` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/unknown-attr.rs:7:3\n@@ -14,7 +14,7 @@ LL | #[dance] mod a {}\n    |   ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `dance` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/unknown-attr.rs:9:3\n@@ -23,7 +23,7 @@ LL | #[dance] fn main() {}\n    |   ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "140661738d60b5cb6b48b294b2a7920cfb8e3b9b", "filename": "src/test/ui/cast/cast-ptr-to-int-const.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcast%2Fcast-ptr-to-int-const.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         main as u32\n    |         ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0658]: casting pointers to integers in constants is unstable\n   --> $DIR/cast-ptr-to-int-const.rs:9:9\n@@ -14,7 +14,7 @@ LL |         &Y as *const u32 as u32\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5a70a5efc7f2a39ce92d76407025160e2d603ab3", "filename": "src/test/ui/conditional-compilation/cfg-attr-crate-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-crate-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![cfg_attr(broken, no_core)]\n    |                     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n-   = help: add #![feature(no_core)] to the crate attributes to enable\n+   = help: add `#![feature(no_core)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5e9adf178073710561ece452fdb59e1d60569478", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-invalid-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-1.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![cfg_attr(broken, no_core, no_std)]\n    |                     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n-   = help: add #![feature(no_core)] to the crate attributes to enable\n+   = help: add `#![feature(no_core)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "06b67156651cce9a1f22411508516dd71f05d13a", "filename": "src/test/ui/conditional-compilation/cfg-attr-multi-invalid-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-multi-invalid-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![cfg_attr(broken, no_std, no_core)]\n    |                             ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n-   = help: add #![feature(no_core)] to the crate attributes to enable\n+   = help: add `#![feature(no_core)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "cf4d0fc5ad07f611417a3fefde3d40922fe774b0", "filename": "src/test/ui/conditional-compilation/cfg-attr-unknown-attribute-macro-expansion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -8,7 +8,7 @@ LL | foo!();\n    | ------- in this macro invocation\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b73d7da30b8aca96bc60b820ea3f502ac74f719c", "filename": "src/test/ui/conditional-compilation/cfg-generic-params.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-generic-params.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -23,7 +23,7 @@ LL | fn f_lt_yes<#[cfg_attr(yes, unknown)] 'a>() {}\n    |                             ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:21:29\n@@ -32,7 +32,7 @@ LL | fn f_ty_yes<#[cfg_attr(yes, unknown)] T>() {}\n    |                             ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:24:34\n@@ -41,7 +41,7 @@ LL | type FnYes = for<#[cfg_attr(yes, unknown)] 'a> fn();\n    |                                  ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:28:40\n@@ -50,7 +50,7 @@ LL | type PolyYes = dyn for<#[cfg_attr(yes, unknown)] 'a> Copy;\n    |                                        ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/cfg-generic-params.rs:32:43\n@@ -59,7 +59,7 @@ LL | struct WhereYes where for<#[cfg_attr(yes, unknown)] 'a> u8: Copy;\n    |                                           ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 8 previous errors\n "}, {"sha": "cfb1f8b581c85039c1ca3d3cf1d25133d99a3f49", "filename": "src/test/ui/const-generics/const-param-in-trait-ungated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-in-trait-ungated.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | trait Trait<const T: ()> {}\n    |                   ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n-   = help: add #![feature(const_generics)] to the crate attributes to enable\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "c659074a091c89b81398f94b4390a99f55c3cd95", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param-ungated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param-ungated.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -11,7 +11,7 @@ LL | struct B<T, const N: T>(PhantomData<[T; N]>);\n    |                   ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n-   = help: add #![feature(const_generics)] to the crate attributes to enable\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "fe7b6fdb1904d7fcb85b3be677dec5a04da974c9", "filename": "src/test/ui/const-generics/issue-60263.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60263.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60263.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-60263.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | struct B<const I: u8>;\n    |                ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n-   = help: add #![feature(const_generics)] to the crate attributes to enable\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6bfb9ee73e6c7a1f6487fa6ca30289a39949f957", "filename": "src/test/ui/consts/const-deref-ptr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-deref-ptr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     static C: u64 = unsafe {*(0xdeadbeef as *const u64)};\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5bf43cb8b6add97333571bfdcd9f020579ce4837", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_union.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_union.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     Foo { u }.i\n    |     ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51909\n-   = help: add #![feature(const_fn_union)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn_union)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "ac0ff7025d1c0b506d1e952c9d2c4f733a07e8a2", "filename": "src/test/ui/consts/const-eval/feature-gate-const_panic.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_panic.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | const Z: () = panic!(\"cheese\");\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n-   = help: add #![feature(const_panic)] to the crate attributes to enable\n+   = help: add `#![feature(const_panic)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0658]: panicking in constants is unstable\n@@ -15,7 +15,7 @@ LL | const X: () = unimplemented!();\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n-   = help: add #![feature(const_panic)] to the crate attributes to enable\n+   = help: add `#![feature(const_panic)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0658]: panicking in constants is unstable\n@@ -25,7 +25,7 @@ LL | const Y: () = unreachable!();\n    |               ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n-   = help: add #![feature(const_panic)] to the crate attributes to enable\n+   = help: add `#![feature(const_panic)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 3 previous errors"}, {"sha": "d8a3bac5ce689cf9fae183dbd97b569d3c927204", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         match &1 as *const i32 as usize {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0019]: constant contains unimplemented expression type\n   --> $DIR/match-test-ptr-null.rs:6:15"}, {"sha": "70a10d9a0c12ab9b12b876c2a0d16ebb4389fb78", "filename": "src/test/ui/consts/min_const_fn/allow_const_fn_ptr_feature_gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fallow_const_fn_ptr_feature_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fallow_const_fn_ptr_feature_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fallow_const_fn_ptr_feature_gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc_allow_const_fn_ptr]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "d3f2ece1f9294db108ffde245b493efd10967075", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_unsafe.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_unsafe.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | const fn bad_const_fn_deref_raw(x: *mut usize) -> &'static usize { unsafe {\n    |                                                                             ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error[E0658]: dereferencing raw pointers in constant functions is unstable\n   --> $DIR/min_const_fn_unsafe.rs:53:70\n@@ -14,7 +14,7 @@ LL | const unsafe fn bad_const_unsafe_deref_raw(x: *mut usize) -> usize { *x }\n    |                                                                      ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error[E0658]: dereferencing raw pointers in constant functions is unstable\n   --> $DIR/min_const_fn_unsafe.rs:56:83\n@@ -23,7 +23,7 @@ LL | const unsafe fn bad_const_unsafe_deref_raw_ref(x: *mut usize) -> &'static u\n    |                                                                                   ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error[E0658]: unions in const fn are unstable\n   --> $DIR/min_const_fn_unsafe.rs:63:5\n@@ -32,7 +32,7 @@ LL |     Foo { x: () }.y\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51909\n-   = help: add #![feature(const_fn_union)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn_union)]` to the crate attributes to enable\n \n error[E0133]: dereference of raw pointer is unsafe and requires unsafe function or block\n   --> $DIR/min_const_fn_unsafe.rs:50:77"}, {"sha": "0c09f7ec52fa20ff8cf25cd21aba8c7d54184e0b", "filename": "src/test/ui/consts/projection_qualif.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fprojection_qualif.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -17,7 +17,7 @@ LL |         unsafe { *b = 5; }\n    |                  ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "84c4e33e55a1a83bcb7529494bc276b5f9cec8dd", "filename": "src/test/ui/custom_attribute.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fcustom_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fcustom_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcustom_attribute.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[foo]\n    |   ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/custom_attribute.rs:5:7\n@@ -14,7 +14,7 @@ LL |     #[foo]\n    |       ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/custom_attribute.rs:7:7\n@@ -23,7 +23,7 @@ LL |     #[foo]\n    |       ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "afd7bda49fd7002f01dcdd97e7ebfb053fc5b835", "filename": "src/test/ui/enum-discriminant/feature-gate-arbitrary_enum_discriminant.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fenum-discriminant%2Ffeature-gate-arbitrary_enum_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fenum-discriminant%2Ffeature-gate-arbitrary_enum_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fenum-discriminant%2Ffeature-gate-arbitrary_enum_discriminant.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |   Tuple() = 2,\n    |             ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60553\n-   = help: add #![feature(arbitrary_enum_discriminant)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_enum_discriminant)]` to the crate attributes to enable\n \n error[E0658]: discriminants on non-unit variants are experimental\n   --> $DIR/feature-gate-arbitrary_enum_discriminant.rs:8:14\n@@ -14,7 +14,7 @@ LL |   Struct{} = 3,\n    |              ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60553\n-   = help: add #![feature(arbitrary_enum_discriminant)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_enum_discriminant)]` to the crate attributes to enable\n \n error[E0658]: custom discriminant values are not allowed in enums with tuple or struct variants\n   --> $DIR/feature-gate-arbitrary_enum_discriminant.rs:4:10\n@@ -29,7 +29,7 @@ LL |   Struct{} = 3,\n    |   ------------ struct variant defined here\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60553\n-   = help: add #![feature(arbitrary_enum_discriminant)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_enum_discriminant)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "a4580f1cb23420bce4e483d3080d982bbde2c506", "filename": "src/test/ui/error-codes/E0395.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0395.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | static BAZ: bool = unsafe { (&FOO as *const i32) == (&BAR as *const i32) };\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n-   = help: add #![feature(const_compare_raw_pointers)] to the crate attributes to enable\n+   = help: add `#![feature(const_compare_raw_pointers)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "f0aa739a6934a407eb8cea5aee38f450431cbde2", "filename": "src/test/ui/error-codes/E0396.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0396.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | const VALUE: u8 = unsafe { *REG_ADDR };\n    |                            ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51911\n-   = help: add #![feature(const_raw_ptr_deref)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_deref)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "071dbccd80ba0d3a96f4e368dc1cf918605203ac", "filename": "src/test/ui/error-codes/E0658.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0658.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35118\n-   = help: add #![feature(repr128)] to the crate attributes to enable\n+   = help: add `#![feature(repr128)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6349b92f3e6925bb4b81ae176bdf6959f7a1bdc3", "filename": "src/test/ui/existential-type/issue-60371.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fexistential-type%2Fissue-60371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fexistential-type%2Fissue-60371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential-type%2Fissue-60371.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     existential type Item: Bug;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/34511\n-   = help: add #![feature(existential_type)] to the crate attributes to enable\n+   = help: add `#![feature(existential_type)]` to the crate attributes to enable\n \n error[E0277]: the trait bound `(): Bug` is not satisfied\n   --> $DIR/issue-60371.rs:8:5"}, {"sha": "547874cefdd4e889f00a428b3b262460109257f1", "filename": "src/test/ui/explore-issue-38412.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplore-issue-38412.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let Record { a_stable_pub: _, a_unstable_declared_pub: _, a_unstable_un\n    |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:30:5\n@@ -14,7 +14,7 @@ LL |     r.a_unstable_undeclared_pub;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0616]: field `b_crate` of struct `pub_and_stability::Record` is private\n   --> $DIR/explore-issue-38412.rs:31:5\n@@ -41,7 +41,7 @@ LL |     t.2;\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0616]: field `3` of struct `pub_and_stability::Tuple` is private\n   --> $DIR/explore-issue-38412.rs:38:5\n@@ -68,7 +68,7 @@ LL |     r.unstable_undeclared_trait_method();\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:48:7\n@@ -77,7 +77,7 @@ LL |     r.unstable_undeclared();\n    |       ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0624]: method `pub_crate` is private\n   --> $DIR/explore-issue-38412.rs:50:7\n@@ -104,7 +104,7 @@ LL |     t.unstable_undeclared_trait_method();\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_undeclared'\n   --> $DIR/explore-issue-38412.rs:61:7\n@@ -113,7 +113,7 @@ LL |     t.unstable_undeclared();\n    |       ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38412\n-   = help: add #![feature(unstable_undeclared)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_undeclared)]` to the crate attributes to enable\n \n error[E0624]: method `pub_crate` is private\n   --> $DIR/explore-issue-38412.rs:63:7"}, {"sha": "7fc0fdde6fba81d649fcb03aff161af9d2d90161", "filename": "src/test/ui/feature-gate-optimize_attribute.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,17 +1,17 @@\n #![crate_type=\"rlib\"]\n-#![optimize(speed)] //~ ERROR #[optimize] attribute is an unstable feature\n+#![optimize(speed)] //~ ERROR `#[optimize]` attribute is an unstable feature\n \n-#[optimize(size)] //~ ERROR #[optimize] attribute is an unstable feature\n+#[optimize(size)] //~ ERROR `#[optimize]` attribute is an unstable feature\n mod module {\n \n-#[optimize(size)] //~ ERROR #[optimize] attribute is an unstable feature\n+#[optimize(size)] //~ ERROR `#[optimize]` attribute is an unstable feature\n fn size() {}\n \n-#[optimize(speed)] //~ ERROR #[optimize] attribute is an unstable feature\n+#[optimize(speed)] //~ ERROR `#[optimize]` attribute is an unstable feature\n fn speed() {}\n \n #[optimize(banana)]\n-//~^ ERROR #[optimize] attribute is an unstable feature\n+//~^ ERROR `#[optimize]` attribute is an unstable feature\n //~| ERROR E0722\n fn not_known() {}\n "}, {"sha": "4ec512eaf39a4f857dd8d5e415c8fbcd3f9bbb57", "filename": "src/test/ui/feature-gate-optimize_attribute.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-optimize_attribute.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,47 +1,47 @@\n-error[E0658]: #[optimize] attribute is an unstable feature\n+error[E0658]: `#[optimize]` attribute is an unstable feature\n   --> $DIR/feature-gate-optimize_attribute.rs:7:1\n    |\n LL | #[optimize(size)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n-   = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(optimize_attribute)]` to the crate attributes to enable\n \n-error[E0658]: #[optimize] attribute is an unstable feature\n+error[E0658]: `#[optimize]` attribute is an unstable feature\n   --> $DIR/feature-gate-optimize_attribute.rs:10:1\n    |\n LL | #[optimize(speed)]\n    | ^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n-   = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(optimize_attribute)]` to the crate attributes to enable\n \n-error[E0658]: #[optimize] attribute is an unstable feature\n+error[E0658]: `#[optimize]` attribute is an unstable feature\n   --> $DIR/feature-gate-optimize_attribute.rs:13:1\n    |\n LL | #[optimize(banana)]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n-   = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(optimize_attribute)]` to the crate attributes to enable\n \n-error[E0658]: #[optimize] attribute is an unstable feature\n+error[E0658]: `#[optimize]` attribute is an unstable feature\n   --> $DIR/feature-gate-optimize_attribute.rs:4:1\n    |\n LL | #[optimize(size)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n-   = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(optimize_attribute)]` to the crate attributes to enable\n \n-error[E0658]: #[optimize] attribute is an unstable feature\n+error[E0658]: `#[optimize]` attribute is an unstable feature\n   --> $DIR/feature-gate-optimize_attribute.rs:2:1\n    |\n LL | #![optimize(speed)]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54882\n-   = help: add #![feature(optimize_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(optimize_attribute)]` to the crate attributes to enable\n \n error[E0722]: invalid argument\n   --> $DIR/feature-gate-optimize_attribute.rs:13:12"}, {"sha": "0d4f03e211b52d98b610b07aef2ca83fc01e4ddc", "filename": "src/test/ui/feature-gate/await-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Fawait-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Fawait-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fawait-macro.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     await!(bar());\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(await_macro)] to the crate attributes to enable\n+   = help: add `#![feature(await_macro)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "a446b105480c9c1fc343fab9ca5819182d7dc8b4", "filename": "src/test/ui/feature-gate/feature-gate-c_variadic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-c_variadic.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | pub unsafe extern \"C\" fn test(_: i32, ap: ...) { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44930\n-   = help: add #![feature(c_variadic)] to the crate attributes to enable\n+   = help: add `#![feature(c_variadic)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5ab45e01e50c5cc8aa3373a29679f5f9e083be0b", "filename": "src/test/ui/feature-gate/feature-gate-cfg_doctest.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-cfg_doctest.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[cfg(doctest)]\n    |       ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62210\n-   = help: add #![feature(cfg_doctest)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_doctest)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "059559dd92831dc80b4b1e4033bcfab197471f7d", "filename": "src/test/ui/feature-gate/feature-gate-static-nobundle-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Ffeature-gate-static-nobundle-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,7 +1,7 @@\n error[E0658]: kind=\"static-nobundle\" is feature gated\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/37403\n-   = help: add #![feature(static_nobundle)] to the crate attributes to enable\n+   = help: add `#![feature(static_nobundle)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "adbbebd40c57f4b0c3dc5129b039bd6f711ee702", "filename": "src/test/ui/feature-gate/issue-49983-see-issue-0.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-49983-see-issue-0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-49983-see-issue-0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-49983-see-issue-0.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'ptr_internals': use NonNull inste\n LL | #[allow(unused_imports)] use core::ptr::Unique;\n    |                              ^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(ptr_internals)] to the crate attributes to enable\n+   = help: add `#![feature(ptr_internals)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5ee05154c3a2a269de3e8fc319207e0f3f56f728", "filename": "src/test/ui/feature-gated-feature-in-macro-arg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gated-feature-in-macro-arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gated-feature-in-macro-arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gated-feature-in-macro-arg.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -6,7 +6,7 @@ LL | |             fn atomic_fence();\n LL | |         }\n    | |_________^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "0d2e355535deea4545f930f798295380cf45112f", "filename": "src/test/ui/feature-gates/feature-gate-abi-msp430-interrupt.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi-msp430-interrupt.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | extern \"msp430-interrupt\" fn foo() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "88e0b8667be543ceeb7a377847b18a388db06f58", "filename": "src/test/ui/feature-gates/feature-gate-abi.stderr", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: intrinsics are subject to change\n LL | extern \"rust-intrinsic\" fn f1() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:13:1\n@@ -13,15 +13,15 @@ LL | extern \"platform-intrinsic\" fn f2() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:14:1\n    |\n LL | extern \"vectorcall\" fn f3() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:15:1\n@@ -30,7 +30,7 @@ LL | extern \"rust-call\" fn f4() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:16:1\n@@ -39,7 +39,7 @@ LL | extern \"msp430-interrupt\" fn f5() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:17:1\n@@ -48,7 +48,7 @@ LL | extern \"ptx-kernel\" fn f6() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:18:1\n@@ -57,15 +57,15 @@ LL | extern \"x86-interrupt\" fn f7() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:19:1\n    |\n LL | extern \"thiscall\" fn f8() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:20:1\n@@ -74,15 +74,15 @@ LL | extern \"amdgpu-kernel\" fn f9() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:24:5\n    |\n LL |     extern \"rust-intrinsic\" fn m1();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:25:5\n@@ -91,15 +91,15 @@ LL |     extern \"platform-intrinsic\" fn m2();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:26:5\n    |\n LL |     extern \"vectorcall\" fn m3();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:27:5\n@@ -108,7 +108,7 @@ LL |     extern \"rust-call\" fn m4();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:28:5\n@@ -117,7 +117,7 @@ LL |     extern \"msp430-interrupt\" fn m5();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:29:5\n@@ -126,7 +126,7 @@ LL |     extern \"ptx-kernel\" fn m6();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:30:5\n@@ -135,15 +135,15 @@ LL |     extern \"x86-interrupt\" fn m7();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:31:5\n    |\n LL |     extern \"thiscall\" fn m8();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:32:5\n@@ -152,15 +152,15 @@ LL |     extern \"amdgpu-kernel\" fn m9();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:34:5\n    |\n LL |     extern \"rust-intrinsic\" fn dm1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:35:5\n@@ -169,15 +169,15 @@ LL |     extern \"platform-intrinsic\" fn dm2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:36:5\n    |\n LL |     extern \"vectorcall\" fn dm3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:37:5\n@@ -186,7 +186,7 @@ LL |     extern \"rust-call\" fn dm4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:38:5\n@@ -195,7 +195,7 @@ LL |     extern \"msp430-interrupt\" fn dm5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:39:5\n@@ -204,7 +204,7 @@ LL |     extern \"ptx-kernel\" fn dm6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:40:5\n@@ -213,15 +213,15 @@ LL |     extern \"x86-interrupt\" fn dm7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:41:5\n    |\n LL |     extern \"thiscall\" fn dm8() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:42:5\n@@ -230,15 +230,15 @@ LL |     extern \"amdgpu-kernel\" fn dm9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:49:5\n    |\n LL |     extern \"rust-intrinsic\" fn m1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:50:5\n@@ -247,15 +247,15 @@ LL |     extern \"platform-intrinsic\" fn m2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:51:5\n    |\n LL |     extern \"vectorcall\" fn m3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:52:5\n@@ -264,7 +264,7 @@ LL |     extern \"rust-call\" fn m4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:53:5\n@@ -273,7 +273,7 @@ LL |     extern \"msp430-interrupt\" fn m5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:54:5\n@@ -282,7 +282,7 @@ LL |     extern \"ptx-kernel\" fn m6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:55:5\n@@ -291,15 +291,15 @@ LL |     extern \"x86-interrupt\" fn m7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:56:5\n    |\n LL |     extern \"thiscall\" fn m8() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:57:5\n@@ -308,15 +308,15 @@ LL |     extern \"amdgpu-kernel\" fn m9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:62:5\n    |\n LL |     extern \"rust-intrinsic\" fn im1() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:63:5\n@@ -325,15 +325,15 @@ LL |     extern \"platform-intrinsic\" fn im2() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:64:5\n    |\n LL |     extern \"vectorcall\" fn im3() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:65:5\n@@ -342,7 +342,7 @@ LL |     extern \"rust-call\" fn im4() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:66:5\n@@ -351,7 +351,7 @@ LL |     extern \"msp430-interrupt\" fn im5() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:67:5\n@@ -360,7 +360,7 @@ LL |     extern \"ptx-kernel\" fn im6() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:68:5\n@@ -369,15 +369,15 @@ LL |     extern \"x86-interrupt\" fn im7() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:69:5\n    |\n LL |     extern \"thiscall\" fn im8() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:70:5\n@@ -386,15 +386,15 @@ LL |     extern \"amdgpu-kernel\" fn im9() {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:74:11\n    |\n LL | type A1 = extern \"rust-intrinsic\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:75:11\n@@ -403,15 +403,15 @@ LL | type A2 = extern \"platform-intrinsic\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:76:11\n    |\n LL | type A3 = extern \"vectorcall\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:77:11\n@@ -420,7 +420,7 @@ LL | type A4 = extern \"rust-call\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:78:11\n@@ -429,7 +429,7 @@ LL | type A5 = extern \"msp430-interrupt\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:79:11\n@@ -438,7 +438,7 @@ LL | type A6 = extern \"ptx-kernel\" fn ();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:80:11\n@@ -447,15 +447,15 @@ LL | type A7 = extern \"x86-interrupt\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:81:11\n    |\n LL | type A8 = extern \"thiscall\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:82:11\n@@ -464,15 +464,15 @@ LL | type A9 = extern \"amdgpu-kernel\" fn();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-abi.rs:85:1\n    |\n LL | extern \"rust-intrinsic\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n   --> $DIR/feature-gate-abi.rs:86:1\n@@ -481,15 +481,15 @@ LL | extern \"platform-intrinsic\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(platform_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:87:1\n    |\n LL | extern \"vectorcall\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_vectorcall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-abi.rs:88:1\n@@ -498,7 +498,7 @@ LL | extern \"rust-call\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:89:1\n@@ -507,7 +507,7 @@ LL | extern \"msp430-interrupt\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38487\n-   = help: add #![feature(abi_msp430_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:90:1\n@@ -516,7 +516,7 @@ LL | extern \"ptx-kernel\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/38788\n-   = help: add #![feature(abi_ptx)] to the crate attributes to enable\n+   = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:91:1\n@@ -525,15 +525,15 @@ LL | extern \"x86-interrupt\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/40180\n-   = help: add #![feature(abi_x86_interrupt)] to the crate attributes to enable\n+   = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:92:1\n    |\n LL | extern \"thiscall\" {}\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(abi_thiscall)] to the crate attributes to enable\n+   = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n   --> $DIR/feature-gate-abi.rs:93:1\n@@ -542,7 +542,7 @@ LL | extern \"amdgpu-kernel\" {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51575\n-   = help: add #![feature(abi_amdgpu_kernel)] to the crate attributes to enable\n+   = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error: aborting due to 63 previous errors\n "}, {"sha": "4954a7d1f71f64395ac09d5e1f664ad4d9fab0f2", "filename": "src/test/ui/feature-gates/feature-gate-abi_unadjusted.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi_unadjusted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi_unadjusted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi_unadjusted.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -6,7 +6,7 @@ LL | |\n LL | | }\n    | |_^\n    |\n-   = help: add #![feature(abi_unadjusted)] to the crate attributes to enable\n+   = help: add `#![feature(abi_unadjusted)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "17b4f775ad4de77bd77005ba759ef1d9015f295c", "filename": "src/test/ui/feature-gates/feature-gate-alloc-error-handler.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@\n \n use core::alloc::Layout;\n \n-#[alloc_error_handler] //~ ERROR #[alloc_error_handler] is an unstable feature\n+#[alloc_error_handler] //~ ERROR `#[alloc_error_handler]` is an unstable feature\n fn oom(info: Layout) -> ! {\n     loop {}\n }"}, {"sha": "d18cc09ffe777367003f084dfff949838a83ec42", "filename": "src/test/ui/feature-gates/feature-gate-alloc-error-handler.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-alloc-error-handler.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[alloc_error_handler] is an unstable feature\n+error[E0658]: `#[alloc_error_handler]` is an unstable feature\n   --> $DIR/feature-gate-alloc-error-handler.rs:8:1\n    |\n LL | #[alloc_error_handler]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51540\n-   = help: add #![feature(alloc_error_handler)] to the crate attributes to enable\n+   = help: add `#![feature(alloc_error_handler)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6e276f7bccd69648e3dff5ad32e51b8bb20ef60c", "filename": "src/test/ui/feature-gates/feature-gate-allocator_internals.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allocator_internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allocator_internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allocator_internals.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[default_lib_allocator]` attribute is an experimental featur\n LL | #![default_lib_allocator]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(allocator_internals)] to the crate attributes to enable\n+   = help: add `#![feature(allocator_internals)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "72f5642e72a2d7334265c1ef627ef3ab738cc004", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unsafe-nested-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL |         #[allow_internal_unsafe]\n LL | bar!();\n    | ------- in this macro invocation\n    |\n-   = help: add #![feature(allow_internal_unsafe)] to the crate attributes to enable\n+   = help: add `#![feature(allow_internal_unsafe)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "71005943362724d77b441744fb576334f6b79b93", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unstable-nested-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL |         #[allow_internal_unstable()]\n LL | bar!();\n    | ------- in this macro invocation\n    |\n-   = help: add #![feature(allow_internal_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "a1acfd553738f04a9fcc76b9f978456c63e6248c", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unstable-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-struct.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: allow_internal_unstable side-steps feature gating and stability ch\n LL | #[allow_internal_unstable()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(allow_internal_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "3c1a4bfc7d2ca3f767c921873ee9fbcf6436b957", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: allow_internal_unstable side-steps feature gating and stability ch\n LL | #[allow_internal_unstable()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(allow_internal_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "37bf3a262aaa0a1d46de86ad686a2fcf2d086e55", "filename": "src/test/ui/feature-gates/feature-gate-allow_fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow_fail.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[allow_fail]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/46488\n-   = help: add #![feature(allow_fail)] to the crate attributes to enable\n+   = help: add `#![feature(allow_fail)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "ed5fef689180d7daeb8732d5cf88485ec585021d", "filename": "src/test/ui/feature-gates/feature-gate-arbitrary-self-types.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary-self-types.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     fn foo(self: Ptr<Self>);\n    |                  ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error[E0658]: `Ptr<Bar>` cannot be used as the type of `self` without the `arbitrary_self_types` feature\n@@ -15,7 +15,7 @@ LL |     fn foo(self: Ptr<Self>) {}\n    |                  ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error[E0658]: `std::boxed::Box<Ptr<Bar>>` cannot be used as the type of `self` without the `arbitrary_self_types` feature\n@@ -25,7 +25,7 @@ LL |     fn bar(self: Box<Ptr<Self>>) {}\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error: aborting due to 3 previous errors"}, {"sha": "4963f9f461c1e01df3b2b411fb14d01c39fade2f", "filename": "src/test/ui/feature-gates/feature-gate-arbitrary_self_types-raw-pointer.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-arbitrary_self_types-raw-pointer.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     fn bar(self: *const Self);\n    |                  ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error[E0658]: `*const Foo` cannot be used as the type of `self` without the `arbitrary_self_types` feature\n@@ -15,7 +15,7 @@ LL |     fn foo(self: *const Self) {}\n    |                  ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error[E0658]: `*const ()` cannot be used as the type of `self` without the `arbitrary_self_types` feature\n@@ -25,7 +25,7 @@ LL |     fn bar(self: *const Self) {}\n    |                  ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44874\n-   = help: add #![feature(arbitrary_self_types)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_self_types)]` to the crate attributes to enable\n    = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n \n error: aborting due to 3 previous errors"}, {"sha": "0d7f8d819ab5ed56288032f4c6ee7a55cba28605", "filename": "src/test/ui/feature-gates/feature-gate-asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         asm!(\"\");\n    |         ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29722\n-   = help: add #![feature(asm)] to the crate attributes to enable\n+   = help: add `#![feature(asm)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b60a34be43404fd89e4f2841921be8e50c8e7ee9", "filename": "src/test/ui/feature-gates/feature-gate-asm2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-asm2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         println!(\"{:?}\", asm!(\"\"));\n    |                          ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29722\n-   = help: add #![feature(asm)] to the crate attributes to enable\n+   = help: add `#![feature(asm)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6d3f40c807ecdee10807091fdc7411450fc5c2bc", "filename": "src/test/ui/feature-gates/feature-gate-assoc-type-defaults.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-assoc-type-defaults.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     type Bar = u8;\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29661\n-   = help: add #![feature(associated_type_defaults)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_defaults)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "cd74916bea48a8a18b41dee659da983a79d4edb2", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     type A: Iterator<Item: Copy>;\n    |                      ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:15:22\n@@ -14,7 +14,7 @@ LL |     type B: Iterator<Item: 'static>;\n    |                      ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:19:20\n@@ -23,7 +23,7 @@ LL | struct _St1<T: Tr1<As1: Tr2>> {\n    |                    ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:26:18\n@@ -32,7 +32,7 @@ LL | enum _En1<T: Tr1<As1: Tr2>> {\n    |                  ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:33:19\n@@ -41,7 +41,7 @@ LL | union _Un1<T: Tr1<As1: Tr2>> {\n    |                   ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:40:37\n@@ -50,7 +50,7 @@ LL | type _TaWhere1<T> where T: Iterator<Item: Copy> = T;\n    |                                     ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:43:22\n@@ -59,7 +59,7 @@ LL | fn _apit(_: impl Tr1<As1: Copy>) {}\n    |                      ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:45:26\n@@ -68,7 +68,7 @@ LL | fn _apit_dyn(_: &dyn Tr1<As1: Copy>) {}\n    |                          ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:48:24\n@@ -77,7 +77,7 @@ LL | fn _rpit() -> impl Tr1<As1: Copy> { S1 }\n    |                        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:51:31\n@@ -86,7 +86,7 @@ LL | fn _rpit_dyn() -> Box<dyn Tr1<As1: Copy>> { Box::new(S1) }\n    |                               ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:54:23\n@@ -95,7 +95,7 @@ LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    |                       ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:60:24\n@@ -104,7 +104,7 @@ LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    |                        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0658]: associated type bounds are unstable\n   --> $DIR/feature-gate-associated_type_bounds.rs:67:21\n@@ -113,7 +113,7 @@ LL |     let _: impl Tr1<As1: Copy> = S1;\n    |                     ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/52662\n-   = help: add #![feature(associated_type_bounds)] to the crate attributes to enable\n+   = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:54:14"}, {"sha": "0157ed5534423199adfe93650e20dfe4c82661fe", "filename": "src/test/ui/feature-gates/feature-gate-async-await-2015-edition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await-2015-edition.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -23,7 +23,7 @@ LL | async fn foo() {}\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n+   = help: add `#![feature(async_await)]` to the crate attributes to enable\n \n error: aborting due to 4 previous errors\n "}, {"sha": "9f4a90157a49548006fa2342bdb912c7d6dd7490", "filename": "src/test/ui/feature-gates/feature-gate-async-await.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-async-await.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -11,7 +11,7 @@ LL |     async fn foo() {}\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n+   = help: add `#![feature(async_await)]` to the crate attributes to enable\n \n error[E0658]: async fn is unstable\n   --> $DIR/feature-gate-async-await.rs:10:5\n@@ -20,7 +20,7 @@ LL |     async fn foo();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n+   = help: add `#![feature(async_await)]` to the crate attributes to enable\n \n error[E0658]: async fn is unstable\n   --> $DIR/feature-gate-async-await.rs:14:1\n@@ -29,7 +29,7 @@ LL | async fn foo() {}\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n+   = help: add `#![feature(async_await)]` to the crate attributes to enable\n \n error[E0658]: async blocks are unstable\n   --> $DIR/feature-gate-async-await.rs:17:13\n@@ -38,7 +38,7 @@ LL |     let _ = async {};\n    |             ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50547\n-   = help: add #![feature(async_await)] to the crate attributes to enable\n+   = help: add `#![feature(async_await)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "1f243b23677892bb53d56abf83ef2fa1b6dcd046", "filename": "src/test/ui/feature-gates/feature-gate-box-expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box-expr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let x = box 'c';\n    |             ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49733\n-   = help: add #![feature(box_syntax)] to the crate attributes to enable\n+   = help: add `#![feature(box_syntax)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "d2dafe93a862fbc0d2291ea747cdf6d8a9718637", "filename": "src/test/ui/feature-gates/feature-gate-box_patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_patterns.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let box x = Box::new('c');\n    |         ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29641\n-   = help: add #![feature(box_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(box_patterns)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "61b0534d2dc3ec129e0a193d8c16bc75969e72f5", "filename": "src/test/ui/feature-gates/feature-gate-box_syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-box_syntax.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let x = box 3;\n    |             ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49733\n-   = help: add #![feature(box_syntax)] to the crate attributes to enable\n+   = help: add `#![feature(box_syntax)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "1765bc7809c8cf2adcd3b1cd95a413cf51854c1d", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-has-atomic.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-has-atomic.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:21:7\n@@ -14,7 +14,7 @@ LL | #[cfg(target_has_atomic = \"8\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:26:7\n@@ -23,7 +23,7 @@ LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:31:7\n@@ -32,7 +32,7 @@ LL | #[cfg(target_has_atomic = \"16\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:36:7\n@@ -41,7 +41,7 @@ LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:41:7\n@@ -50,7 +50,7 @@ LL | #[cfg(target_has_atomic = \"32\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:46:7\n@@ -59,7 +59,7 @@ LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:51:7\n@@ -68,7 +68,7 @@ LL | #[cfg(target_has_atomic = \"64\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:56:7\n@@ -77,7 +77,7 @@ LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:61:7\n@@ -86,7 +86,7 @@ LL | #[cfg(target_has_atomic = \"128\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:66:7\n@@ -95,7 +95,7 @@ LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:71:7\n@@ -104,7 +104,7 @@ LL | #[cfg(target_has_atomic = \"ptr\")]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:78:10\n@@ -113,7 +113,7 @@ LL |     cfg!(target_has_atomic = \"8\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:80:10\n@@ -122,7 +122,7 @@ LL |     cfg!(target_has_atomic = \"16\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:82:10\n@@ -131,7 +131,7 @@ LL |     cfg!(target_has_atomic = \"32\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:84:10\n@@ -140,7 +140,7 @@ LL |     cfg!(target_has_atomic = \"64\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:86:10\n@@ -149,7 +149,7 @@ LL |     cfg!(target_has_atomic = \"128\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error[E0658]: `cfg(target_has_atomic)` is experimental and subject to change\n   --> $DIR/feature-gate-cfg-target-has-atomic.rs:88:10\n@@ -158,7 +158,7 @@ LL |     cfg!(target_has_atomic = \"ptr\");\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32976\n-   = help: add #![feature(cfg_target_has_atomic)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_has_atomic)]` to the crate attributes to enable\n \n error: aborting due to 18 previous errors\n "}, {"sha": "576544931018347567635a01a3afd3d04fdb47a4", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-thread-local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-thread-local.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[cfg_attr(target_thread_local, thread_local)]\n    |                ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29594\n-   = help: add #![feature(cfg_target_thread_local)] to the crate attributes to enable\n+   = help: add `#![feature(cfg_target_thread_local)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "9d04aef8621ea3d36758fb5027c683b5cb7d564e", "filename": "src/test/ui/feature-gates/feature-gate-compiler-builtins.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-compiler-builtins.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-compiler-builtins.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-compiler-builtins.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[compiler_builtins]` attribute is used to identify the `comp\n LL | #![compiler_builtins]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(compiler_builtins)] to the crate attributes to enable\n+   = help: add `#![feature(compiler_builtins)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "4dc687451df9c7456f848e44d6c3e2bc743cb330", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let a = concat_idents!(X, Y_1);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n-   = help: add #![feature(concat_idents)] to the crate attributes to enable\n+   = help: add `#![feature(concat_idents)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'concat_idents': `concat_idents` is not stable enough for use and is subject to change\n   --> $DIR/feature-gate-concat_idents.rs:6:13\n@@ -14,7 +14,7 @@ LL |     let b = concat_idents!(X, Y_2);\n    |             ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n-   = help: add #![feature(concat_idents)] to the crate attributes to enable\n+   = help: add `#![feature(concat_idents)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4eb038b4a552d01c094428182df15014cfd2f5e2", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     concat_idents!(a, b);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n-   = help: add #![feature(concat_idents)] to the crate attributes to enable\n+   = help: add `#![feature(concat_idents)]` to the crate attributes to enable\n \n error[E0425]: cannot find value `ab` in this scope\n   --> $DIR/feature-gate-concat_idents2.rs:4:5"}, {"sha": "e96cd4734d84723b22a43f994855ec08cda2bd9f", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents3.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents3.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     assert_eq!(10, concat_idents!(X, Y_1));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n-   = help: add #![feature(concat_idents)] to the crate attributes to enable\n+   = help: add `#![feature(concat_idents)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'concat_idents': `concat_idents` is not stable enough for use and is subject to change\n   --> $DIR/feature-gate-concat_idents3.rs:8:20\n@@ -14,7 +14,7 @@ LL |     assert_eq!(20, concat_idents!(X, Y_2));\n    |                    ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29599\n-   = help: add #![feature(concat_idents)] to the crate attributes to enable\n+   = help: add `#![feature(concat_idents)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c5c39cc2009666febf3562a06a472671c3211302", "filename": "src/test/ui/feature-gates/feature-gate-const_fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_fn.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -23,7 +23,7 @@ LL |     const fn foo() -> u32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n-   = help: add #![feature(const_fn)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0658]: const fn is unstable\n   --> $DIR/feature-gate-const_fn.rs:8:5\n@@ -32,7 +32,7 @@ LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n-   = help: add #![feature(const_fn)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "468e9c31d37e25a711aea94424e71eb6d77be513", "filename": "src/test/ui/feature-gates/feature-gate-const_generics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_generics.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | fn foo<const X: ()>() {}\n    |              ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n-   = help: add #![feature(const_generics)] to the crate attributes to enable\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error[E0658]: const generics are unstable\n   --> $DIR/feature-gate-const_generics.rs:3:18\n@@ -14,7 +14,7 @@ LL | struct Foo<const X: usize>([(); X]);\n    |                  ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44580\n-   = help: add #![feature(const_generics)] to the crate attributes to enable\n+   = help: add `#![feature(const_generics)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "41b653d98dcbf1f8817ee8c79c1b59ed99b829eb", "filename": "src/test/ui/feature-gates/feature-gate-const_transmute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-const_transmute.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | const TRANSMUTED_U32: u32 = unsafe { mem::transmute(Foo(3)) };\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53605\n-   = help: add #![feature(const_transmute)] to the crate attributes to enable\n+   = help: add `#![feature(const_transmute)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "1e061eced3660620d718d3674ba843c628877dc8", "filename": "src/test/ui/feature-gates/feature-gate-crate_visibility_modifier.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-crate_visibility_modifier.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | crate struct Bender {\n    | ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53120\n-   = help: add #![feature(crate_visibility_modifier)] to the crate attributes to enable\n+   = help: add `#![feature(crate_visibility_modifier)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "12175feadd63ab84e283f642b78b5868d1b966a2", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[fake_attr]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:8:3\n@@ -14,7 +14,7 @@ LL | #[fake_attr(100)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:9:3\n@@ -23,7 +23,7 @@ LL | #[fake_attr(1, 2, 3)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:10:3\n@@ -32,7 +32,7 @@ LL | #[fake_attr(\"hello\")]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:11:3\n@@ -41,7 +41,7 @@ LL | #[fake_attr(name = \"hello\")]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:12:3\n@@ -50,7 +50,7 @@ LL | #[fake_attr(1, \"hi\", key = 12, true, false)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:13:3\n@@ -59,7 +59,7 @@ LL | #[fake_attr(key = \"hello\", val = 10)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:14:3\n@@ -68,7 +68,7 @@ LL | #[fake_attr(key(\"hello\"), val(10))]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:15:3\n@@ -77,7 +77,7 @@ LL | #[fake_attr(enabled = true, disabled = false)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:16:3\n@@ -86,7 +86,7 @@ LL | #[fake_attr(true)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:17:3\n@@ -95,7 +95,7 @@ LL | #[fake_attr(pi = 3.14159)]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:18:3\n@@ -104,7 +104,7 @@ LL | #[fake_attr(b\"hi\")]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `fake_doc` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute.rs:19:3\n@@ -113,7 +113,7 @@ LL | #[fake_doc(r\"doc\")]\n    |   ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 13 previous errors\n "}, {"sha": "f159308dcb829d4f0d236aea14c65b067aa64624", "filename": "src/test/ui/feature-gates/feature-gate-custom_attribute2.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_attribute2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | struct StLt<#[lt_struct] 'a>(&'a u32);\n    |             ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_struct` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:8:13\n@@ -14,7 +14,7 @@ LL | struct StTy<#[ty_struct] I>(I);\n    |             ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_enum` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:11:11\n@@ -23,7 +23,7 @@ LL | enum EnLt<#[lt_enum] 'b> { A(&'b u32), B }\n    |           ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_enum` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:13:11\n@@ -32,7 +32,7 @@ LL | enum EnTy<#[ty_enum] J> { A(J), B }\n    |           ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_trait` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:16:12\n@@ -41,7 +41,7 @@ LL | trait TrLt<#[lt_trait] 'c> { fn foo(&self, _: &'c [u32]) -> &'c u32; }\n    |            ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_trait` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:18:12\n@@ -50,7 +50,7 @@ LL | trait TrTy<#[ty_trait] K> { fn foo(&self, _: K); }\n    |            ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_type` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:21:11\n@@ -59,7 +59,7 @@ LL | type TyLt<#[lt_type] 'd> = &'d u32;\n    |           ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_type` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:23:11\n@@ -68,7 +68,7 @@ LL | type TyTy<#[ty_type] L> = (L, );\n    |           ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:26:6\n@@ -77,7 +77,7 @@ LL | impl<#[lt_inherent] 'e> StLt<'e> { }\n    |      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_inherent` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:28:6\n@@ -86,7 +86,7 @@ LL | impl<#[ty_inherent] M> StTy<M> { }\n    |      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:31:6\n@@ -95,7 +95,7 @@ LL | impl<#[lt_impl_for] 'f> TrLt<'f> for StLt<'f> {\n    |      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_impl_for` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:35:6\n@@ -104,7 +104,7 @@ LL | impl<#[ty_impl_for] N> TrTy<N> for StTy<N> {\n    |      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_fn` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:40:9\n@@ -113,7 +113,7 @@ LL | fn f_lt<#[lt_fn] 'g>(_: &'g [u32]) -> &'g u32 { loop { } }\n    |         ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_fn` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:42:9\n@@ -122,7 +122,7 @@ LL | fn f_ty<#[ty_fn] O>(_: O) { }\n    |         ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_meth` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:46:13\n@@ -131,7 +131,7 @@ LL |     fn m_lt<#[lt_meth] 'h>(_: &'h [u32]) -> &'h u32 { loop { } }\n    |             ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `ty_meth` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:48:13\n@@ -140,7 +140,7 @@ LL |     fn m_ty<#[ty_meth] P>(_: P) { }\n    |             ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `lt_hof` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-custom_attribute2.rs:53:19\n@@ -149,7 +149,7 @@ LL |     where Q: for <#[lt_hof] 'i> Fn(&'i [u32]) -> &'i u32\n    |                   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 17 previous errors\n "}, {"sha": "1cc53db2c364c750141d7ac18a0859cb301964c6", "filename": "src/test/ui/feature-gates/feature-gate-custom_test_frameworks.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-custom_test_frameworks.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[test_case]\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50297\n-   = help: add #![feature(custom_test_frameworks)] to the crate attributes to enable\n+   = help: add `#![feature(custom_test_frameworks)]` to the crate attributes to enable\n \n error[E0658]: custom test frameworks are an unstable feature\n   --> $DIR/feature-gate-custom_test_frameworks.rs:1:1\n@@ -14,7 +14,7 @@ LL | #![test_runner(main)]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50297\n-   = help: add #![feature(custom_test_frameworks)] to the crate attributes to enable\n+   = help: add `#![feature(custom_test_frameworks)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "905a1b1531044f593c88ae0f03d2fd06193bda7b", "filename": "src/test/ui/feature-gates/feature-gate-decl_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-decl_macro.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | macro m() {}\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/39412\n-   = help: add #![feature(decl_macro)] to the crate attributes to enable\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "adb6fc217a32991a09e514b73439ef95dc0d00ed", "filename": "src/test/ui/feature-gates/feature-gate-doc_alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,4 +1,4 @@\n-#[doc(alias = \"foo\")] //~ ERROR: #[doc(alias = \"...\")] is experimental\n+#[doc(alias = \"foo\")] //~ ERROR: `#[doc(alias = \"...\")]` is experimental\n pub struct Foo;\n \n fn main() {}"}, {"sha": "dddaa45de8ff8fd56d73e4268ffa30154876aa15", "filename": "src/test/ui/feature-gates/feature-gate-doc_alias.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_alias.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(alias = \"...\")] is experimental\n+error[E0658]: `#[doc(alias = \"...\")]` is experimental\n   --> $DIR/feature-gate-doc_alias.rs:1:1\n    |\n LL | #[doc(alias = \"foo\")]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/50146\n-   = help: add #![feature(doc_alias)] to the crate attributes to enable\n+   = help: add `#![feature(doc_alias)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "9bf97a4a4771c738d3b70157f83c31000ac5d260", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg-cfg-rustdoc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg-cfg-rustdoc.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[cfg(rustdoc)]\n    |       ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n-   = help: add #![feature(doc_cfg)] to the crate attributes to enable\n+   = help: add `#![feature(doc_cfg)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "bb3846e7f6b5517ff72ae1a15988eba268a9edca", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,2 +1,2 @@\n-#[doc(cfg(unix))] //~ ERROR: #[doc(cfg(...))] is experimental\n+#[doc(cfg(unix))] //~ ERROR: `#[doc(cfg(...))]` is experimental\n fn main() {}"}, {"sha": "7b0a231df4c3ed05af2c296f8c7c6a7df3dd172f", "filename": "src/test/ui/feature-gates/feature-gate-doc_cfg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_cfg.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(cfg(...))] is experimental\n+error[E0658]: `#[doc(cfg(...))]` is experimental\n   --> $DIR/feature-gate-doc_cfg.rs:1:1\n    |\n LL | #[doc(cfg(unix))]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43781\n-   = help: add #![feature(doc_cfg)] to the crate attributes to enable\n+   = help: add `#![feature(doc_cfg)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6cdcfa67c3a9ba489254e7df1de7d0219b3bb85b", "filename": "src/test/ui/feature-gates/feature-gate-doc_keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,4 +1,4 @@\n-#[doc(keyword = \"match\")] //~ ERROR: #[doc(keyword = \"...\")] is experimental\n+#[doc(keyword = \"match\")] //~ ERROR: `#[doc(keyword = \"...\")]` is experimental\n /// wonderful\n mod foo{}\n "}, {"sha": "abde0bea9b23045a13779ff4c1e9c2b0e0a6f0e2", "filename": "src/test/ui/feature-gates/feature-gate-doc_keyword.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_keyword.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(keyword = \"...\")] is experimental\n+error[E0658]: `#[doc(keyword = \"...\")]` is experimental\n   --> $DIR/feature-gate-doc_keyword.rs:1:1\n    |\n LL | #[doc(keyword = \"match\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51315\n-   = help: add #![feature(doc_keyword)] to the crate attributes to enable\n+   = help: add `#![feature(doc_keyword)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "bde3af6b594c2c78b03949806922addfe7e4ad3f", "filename": "src/test/ui/feature-gates/feature-gate-doc_masked.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,4 +1,4 @@\n-#[doc(masked)] //~ ERROR: #[doc(masked)] is experimental\n+#[doc(masked)] //~ ERROR: `#[doc(masked)]` is experimental\n extern crate std as realstd;\n \n fn main() {}"}, {"sha": "0d334fab410dd2bc279328eeb0dc6aaa8e8cac70", "filename": "src/test/ui/feature-gates/feature-gate-doc_masked.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_masked.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(masked)] is experimental\n+error[E0658]: `#[doc(masked)]` is experimental\n   --> $DIR/feature-gate-doc_masked.rs:1:1\n    |\n LL | #[doc(masked)]\n    | ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44027\n-   = help: add #![feature(doc_masked)] to the crate attributes to enable\n+   = help: add `#![feature(doc_masked)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "452b45b34456bbb37771e3bbe31eefc1602cfa39", "filename": "src/test/ui/feature-gates/feature-gate-doc_spotlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,4 +1,4 @@\n-#[doc(spotlight)] //~ ERROR: #[doc(spotlight)] is experimental\n+#[doc(spotlight)] //~ ERROR: `#[doc(spotlight)]` is experimental\n trait SomeTrait {}\n \n fn main() {}"}, {"sha": "16532e443347bbbca37dfc07bf688619110a376e", "filename": "src/test/ui/feature-gates/feature-gate-doc_spotlight.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-doc_spotlight.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(spotlight)] is experimental\n+error[E0658]: `#[doc(spotlight)]` is experimental\n   --> $DIR/feature-gate-doc_spotlight.rs:1:1\n    |\n LL | #[doc(spotlight)]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/45040\n-   = help: add #![feature(doc_spotlight)] to the crate attributes to enable\n+   = help: add `#![feature(doc_spotlight)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "581b760ba4f47f30f5ab937be7122de0d04e6fcb", "filename": "src/test/ui/feature-gates/feature-gate-dropck-ugeh.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-dropck-ugeh.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[unsafe_destructor_blind_to_params] // This is the UGEH attribute\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/28498\n-   = help: add #![feature(dropck_parametricity)] to the crate attributes to enable\n+   = help: add `#![feature(dropck_parametricity)]` to the crate attributes to enable\n \n warning: use of deprecated attribute `dropck_parametricity`: unsafe_destructor_blind_to_params has been replaced by may_dangle and will be removed in the future. See https://github.com/rust-lang/rust/issues/34761\n   --> $DIR/feature-gate-dropck-ugeh.rs:16:5"}, {"sha": "ee20408d1781f2262f192e3d0cfa8afbea4cbc18", "filename": "src/test/ui/feature-gates/feature-gate-exclusive-range-pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-exclusive-range-pattern.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         0 .. 3 => {}\n    |         ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/37854\n-   = help: add #![feature(exclusive_range_pattern)] to the crate attributes to enable\n+   = help: add `#![feature(exclusive_range_pattern)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "29d047d22e127a799d089728c3864e9d24427b42", "filename": "src/test/ui/feature-gates/feature-gate-existential-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-existential-type.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | existential type Foo: std::fmt::Debug;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/34511\n-   = help: add #![feature(existential_type)] to the crate attributes to enable\n+   = help: add `#![feature(existential_type)]` to the crate attributes to enable\n \n error[E0658]: existential types are unstable\n   --> $DIR/feature-gate-existential-type.rs:11:5\n@@ -14,7 +14,7 @@ LL |     existential type Baa: std::fmt::Debug;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/34511\n-   = help: add #![feature(existential_type)] to the crate attributes to enable\n+   = help: add `#![feature(existential_type)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f82c64f9ca66bc36bbd64f22c9ef6d0becceede9", "filename": "src/test/ui/feature-gates/feature-gate-extern_types.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-extern_types.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     type T;\n    |     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43467\n-   = help: add #![feature(extern_types)] to the crate attributes to enable\n+   = help: add `#![feature(extern_types)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "dec3fa185791c520b238a87d12a11b24b6bb18dd", "filename": "src/test/ui/feature-gates/feature-gate-external_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,2 +1,2 @@\n-#[doc(include=\"asdf.md\")] //~ ERROR: #[doc(include = \"...\")] is experimental\n+#[doc(include=\"asdf.md\")] //~ ERROR: `#[doc(include = \"...\")]` is experimental\n fn main() {}"}, {"sha": "a5a874374d1ebf8c12ad8424f0fce9637f149e05", "filename": "src/test/ui/feature-gates/feature-gate-external_doc.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-external_doc.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[doc(include = \"...\")] is experimental\n+error[E0658]: `#[doc(include = \"...\")]` is experimental\n   --> $DIR/feature-gate-external_doc.rs:1:1\n    |\n LL | #[doc(include=\"asdf.md\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44732\n-   = help: add #![feature(external_doc)] to the crate attributes to enable\n+   = help: add `#![feature(external_doc)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b452db86bb9faf127a845b9b06183cbba3408c9f", "filename": "src/test/ui/feature-gates/feature-gate-ffi_returns_twice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-ffi_returns_twice.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[ffi_returns_twice]\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/58314\n-   = help: add #![feature(ffi_returns_twice)] to the crate attributes to enable\n+   = help: add `#![feature(ffi_returns_twice)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b836a508f7b59b374abedf2a5d5573cfea169e4b", "filename": "src/test/ui/feature-gates/feature-gate-format_args_nl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-format_args_nl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-format_args_nl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-format_args_nl.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'format_args_nl': `format_args_nl`\n LL |     format_args_nl!(\"\");\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(format_args_nl)] to the crate attributes to enable\n+   = help: add `#![feature(format_args_nl)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "409148484c8e45a5324007ecb448143ee569a3f6", "filename": "src/test/ui/feature-gates/feature-gate-fundamental.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-fundamental.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[fundamental]\n    | ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29635\n-   = help: add #![feature(fundamental)] to the crate attributes to enable\n+   = help: add `#![feature(fundamental)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "cdb056012542bd970e6a30cbe1e95451cd65a842", "filename": "src/test/ui/feature-gates/feature-gate-generators.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generators.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     yield true;\n    |     ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/43122\n-   = help: add #![feature(generators)] to the crate attributes to enable\n+   = help: add `#![feature(generators)]` to the crate attributes to enable\n \n error[E0627]: yield statement outside of generator literal\n   --> $DIR/feature-gate-generators.rs:2:5"}, {"sha": "04473f410693a12222fcef1e8ac7c444f6634f51", "filename": "src/test/ui/feature-gates/feature-gate-generic_associated_types.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-generic_associated_types.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     type Pointer<T>: Deref<Target = T>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:6:5\n@@ -14,7 +14,7 @@ LL |     type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:6:5\n@@ -23,7 +23,7 @@ LL |     type Pointer2<T>: Deref<Target = T> where T: Clone, U: Clone;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:14:5\n@@ -32,7 +32,7 @@ LL |     type Pointer<Usize> = Box<Usize>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: generic associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:16:5\n@@ -41,7 +41,7 @@ LL |     type Pointer2<U32> = Box<U32>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:21:5\n@@ -50,7 +50,7 @@ LL |     type Assoc where Self: Sized;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error[E0658]: where clauses on associated types are unstable\n   --> $DIR/feature-gate-generic_associated_types.rs:26:5\n@@ -59,7 +59,7 @@ LL |     type Assoc where Self: Sized = Foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error: aborting due to 7 previous errors\n "}, {"sha": "416078489f173ad400169cacf53280ac8dead12b", "filename": "src/test/ui/feature-gates/feature-gate-global_asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-global_asm.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | global_asm!(\"\");\n    | ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35119\n-   = help: add #![feature(global_asm)] to the crate attributes to enable\n+   = help: add `#![feature(global_asm)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "09843f05af1b9fdd308c220b8e86f0c239c2b82d", "filename": "src/test/ui/feature-gates/feature-gate-intrinsics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-intrinsics.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -6,15 +6,15 @@ LL | |     fn bar();\n LL | | }\n    | |_^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n   --> $DIR/feature-gate-intrinsics.rs:5:1\n    |\n LL | extern \"rust-intrinsic\" fn baz() {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0093]: unrecognized intrinsic function: `bar`\n   --> $DIR/feature-gate-intrinsics.rs:2:5"}, {"sha": "11b2b3e740a392f0712ca4f210314e866ef8b846", "filename": "src/test/ui/feature-gates/feature-gate-is_sorted.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-is_sorted.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     assert!([1, 2, 2, 9].iter().is_sorted());\n    |                                 ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n-   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+   = help: add `#![feature(is_sorted)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n   --> $DIR/feature-gate-is_sorted.rs:5:39\n@@ -14,7 +14,7 @@ LL |     assert!(![-2i32, -1, 0, 3].iter().is_sorted_by_key(|n| n.abs()));\n    |                                       ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n-   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+   = help: add `#![feature(is_sorted)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n   --> $DIR/feature-gate-is_sorted.rs:9:26\n@@ -23,7 +23,7 @@ LL |     assert!([1, 2, 2, 9].is_sorted());\n    |                          ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n-   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+   = help: add `#![feature(is_sorted)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'is_sorted': new API\n   --> $DIR/feature-gate-is_sorted.rs:11:32\n@@ -32,7 +32,7 @@ LL |     assert!(![-2i32, -1, 0, 3].is_sorted_by_key(|n| n.abs()));\n    |                                ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53485\n-   = help: add #![feature(is_sorted)] to the crate attributes to enable\n+   = help: add `#![feature(is_sorted)]` to the crate attributes to enable\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a417e0eec22f2fe07b3c16db2bf1cba462088a38", "filename": "src/test/ui/feature-gates/feature-gate-label_break_value.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-label_break_value.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     'a: {\n    |     ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/48594\n-   = help: add #![feature(label_break_value)] to the crate attributes to enable\n+   = help: add `#![feature(label_break_value)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "c2496863fea4416348c069caeae12d7ce67b9375", "filename": "src/test/ui/feature-gates/feature-gate-lang-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lang-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lang-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lang-items.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: language items are subject to change\n LL | #[lang = \"foo\"]\n    | ^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(lang_items)] to the crate attributes to enable\n+   = help: add `#![feature(lang_items)]` to the crate attributes to enable\n \n error[E0522]: definition of an unknown language item: `foo`\n   --> $DIR/feature-gate-lang-items.rs:1:1"}, {"sha": "bd690b3f89b11896a3fd3da6cee4177653343536", "filename": "src/test/ui/feature-gates/feature-gate-link_args.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_args.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[link_args = \"-l expected_use_case\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n-   = help: add #![feature(link_args)] to the crate attributes to enable\n+   = help: add `#![feature(link_args)]` to the crate attributes to enable\n \n error[E0658]: the `link_args` attribute is experimental and not portable across platforms, it is recommended to use `#[link(name = \"foo\")] instead\n   --> $DIR/feature-gate-link_args.rs:16:1\n@@ -14,7 +14,7 @@ LL | #[link_args = \"-l unexected_use_on_non_extern_item\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n-   = help: add #![feature(link_args)] to the crate attributes to enable\n+   = help: add `#![feature(link_args)]` to the crate attributes to enable\n \n error[E0658]: the `link_args` attribute is experimental and not portable across platforms, it is recommended to use `#[link(name = \"foo\")] instead\n   --> $DIR/feature-gate-link_args.rs:9:1\n@@ -23,7 +23,7 @@ LL | #![link_args = \"-l unexpected_use_as_inner_attr_on_mod\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29596\n-   = help: add #![feature(link_args)] to the crate attributes to enable\n+   = help: add `#![feature(link_args)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "58aa4ed7497ced77ba801ab6fa7f9ce8696f7a58", "filename": "src/test/ui/feature-gates/feature-gate-link_cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_cfg.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[link(name = \"foo\", cfg(foo))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/37406\n-   = help: add #![feature(link_cfg)] to the crate attributes to enable\n+   = help: add `#![feature(link_cfg)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6c8e76d269394a46d68f1161d6df696ef7a8623c", "filename": "src/test/ui/feature-gates/feature-gate-link_llvm_intrinsics.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-link_llvm_intrinsics.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     fn sqrt(x: f32) -> f32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29602\n-   = help: add #![feature(link_llvm_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(link_llvm_intrinsics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "d3f2aa6ba8b12c00e36a1c67124b4bff34273890", "filename": "src/test/ui/feature-gates/feature-gate-linkage.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-linkage.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[linkage = \"extern_weak\"] static foo: isize;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29603\n-   = help: add #![feature(linkage)] to the crate attributes to enable\n+   = help: add `#![feature(linkage)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "390a1bf580f6f403884dbf7fa0d4397885354f2b", "filename": "src/test/ui/feature-gates/feature-gate-lint-reasons.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-lint-reasons.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![warn(nonstandard_style, reason = \"the standard should be respected\")]\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54503\n-   = help: add #![feature(lint_reasons)] to the crate attributes to enable\n+   = help: add `#![feature(lint_reasons)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "58f522cf823085d7e51bcf1caec6e1eae9ea319a", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     log_syntax!()\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(log_syntax)] to the crate attributes to enable\n+   = help: add `#![feature(log_syntax)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "3228b9c3013b7083625e52db1910199454ed2b3b", "filename": "src/test/ui/feature-gates/feature-gate-log_syntax2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-log_syntax2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     println!(\"{:?}\", log_syntax!());\n    |                      ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(log_syntax)] to the crate attributes to enable\n+   = help: add `#![feature(log_syntax)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "e8b3ab5dda20daddd5e4d2df8552e7738936e0d7", "filename": "src/test/ui/feature-gates/feature-gate-macros_in_extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-macros_in_extern.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     returns_isize!(rust_get_test_int);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/feature-gate-macros_in_extern.rs:21:5\n@@ -14,7 +14,7 @@ LL |     takes_u32_returns_u32!(rust_dbg_extern_identity_u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/feature-gate-macros_in_extern.rs:23:5\n@@ -23,7 +23,7 @@ LL |     emits_nothing!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9c304a1792fc291f320b1475f0cade80c94e37cf", "filename": "src/test/ui/feature-gates/feature-gate-main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,2 +1,2 @@\n #[main]\n-fn foo() {} //~ ERROR: declaration of a nonstandard #[main] function may change over time\n+fn foo() {} //~ ERROR: declaration of a non-standard `#[main]` function may change over time"}, {"sha": "513758e030938c374e8ee4a268430a8d3f7685ac", "filename": "src/test/ui/feature-gates/feature-gate-main.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-main.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: declaration of a nonstandard #[main] function may change over time, for now a top-level `fn main()` is required\n+error[E0658]: declaration of a non-standard `#[main]` function may change over time, for now a top-level `fn main()` is required\n   --> $DIR/feature-gate-main.rs:2:1\n    |\n LL | fn foo() {}\n    | ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29634\n-   = help: add #![feature(main)] to the crate attributes to enable\n+   = help: add `#![feature(main)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "94dfaf9206d142506925bf5a1ef84f148539e776", "filename": "src/test/ui/feature-gates/feature-gate-marker_trait_attr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-marker_trait_attr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[marker] trait ExplicitMarker {}\n    | ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29864\n-   = help: add #![feature(marker_trait_attr)] to the crate attributes to enable\n+   = help: add `#![feature(marker_trait_attr)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "c47bb75e6bc0703cc5261bdee99d6b88e1375223", "filename": "src/test/ui/feature-gates/feature-gate-may-dangle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-may-dangle.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | unsafe impl<#[may_dangle] A> Drop for Pt<A> {\n    |             ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/34761\n-   = help: add #![feature(dropck_eyepatch)] to the crate attributes to enable\n+   = help: add `#![feature(dropck_eyepatch)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "98c9e2b0c9f164b7007145999a35a7ba719a8461", "filename": "src/test/ui/feature-gates/feature-gate-min_const_fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_const_fn.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -23,7 +23,7 @@ LL |     const fn foo() -> u32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n-   = help: add #![feature(const_fn)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error[E0658]: const fn is unstable\n   --> $DIR/feature-gate-min_const_fn.rs:8:5\n@@ -32,7 +32,7 @@ LL |     const fn bar() -> u32 { 0 }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/57563\n-   = help: add #![feature(const_fn)] to the crate attributes to enable\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "d4041f4ecd8fc513e0e617b5b7b49683a662b252", "filename": "src/test/ui/feature-gates/feature-gate-naked_functions.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-naked_functions.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[naked]\n    | ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32408\n-   = help: add #![feature(naked_functions)] to the crate attributes to enable\n+   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n \n error[E0658]: the `#[naked]` attribute is an experimental feature\n   --> $DIR/feature-gate-naked_functions.rs:5:1\n@@ -14,7 +14,7 @@ LL | #[naked]\n    | ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32408\n-   = help: add #![feature(naked_functions)] to the crate attributes to enable\n+   = help: add `#![feature(naked_functions)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2b213acebb5037876de477db8089a0f572a8f325", "filename": "src/test/ui/feature-gates/feature-gate-needs-allocator.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-needs-allocator.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-needs-allocator.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-needs-allocator.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[needs_allocator]` attribute is an experimental feature\n LL | #![needs_allocator]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(allocator_internals)] to the crate attributes to enable\n+   = help: add `#![feature(allocator_internals)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "d86ab99b82bd5bd79cc654b35c4ad105b82018f5", "filename": "src/test/ui/feature-gates/feature-gate-never_type.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-never_type.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | type Ma = (u32, !, i32);\n    |                 ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n+   = help: add `#![feature(never_type)]` to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n   --> $DIR/feature-gate-never_type.rs:8:20\n@@ -14,7 +14,7 @@ LL | type Meeshka = Vec<!>;\n    |                    ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n+   = help: add `#![feature(never_type)]` to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n   --> $DIR/feature-gate-never_type.rs:9:24\n@@ -23,7 +23,7 @@ LL | type Mow = &'static fn(!) -> !;\n    |                        ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n+   = help: add `#![feature(never_type)]` to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n   --> $DIR/feature-gate-never_type.rs:10:27\n@@ -32,7 +32,7 @@ LL | type Skwoz = &'static mut !;\n    |                           ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n+   = help: add `#![feature(never_type)]` to the crate attributes to enable\n \n error[E0658]: The `!` type is experimental\n   --> $DIR/feature-gate-never_type.rs:13:16\n@@ -41,7 +41,7 @@ LL |     type Wub = !;\n    |                ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35121\n-   = help: add #![feature(never_type)] to the crate attributes to enable\n+   = help: add `#![feature(never_type)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "7d5af0802c40aa84c5ab365dbc32fca64ef119cf", "filename": "src/test/ui/feature-gates/feature-gate-no-debug.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no-debug.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[no_debug]\n    | ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29721\n-   = help: add #![feature(no_debug)] to the crate attributes to enable\n+   = help: add `#![feature(no_debug)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "4d4ca96544e563e75768a58385a3d17e67b0b3fb", "filename": "src/test/ui/feature-gates/feature-gate-no_core.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-no_core.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![no_core]\n    | ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29639\n-   = help: add #![feature(no_core)] to the crate attributes to enable\n+   = help: add `#![feature(no_core)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "02d21c90fe77b4e997042a0a35475732a88692b3", "filename": "src/test/ui/feature-gates/feature-gate-non_ascii_idents.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_ascii_idents.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | extern crate core as b\u00e4z;\n    |                      ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:3:5\n@@ -14,7 +14,7 @@ LL | use f\u00f6\u00f6::bar;\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:5:5\n@@ -23,7 +23,7 @@ LL | mod f\u00f6\u00f6 {\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:9:4\n@@ -32,7 +32,7 @@ LL | fn b\u00e4r(\n    |    ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:10:5\n@@ -41,7 +41,7 @@ LL |     b\u00e4z: isize\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:12:9\n@@ -50,7 +50,7 @@ LL |     let _\u00f6: isize;\n    |         ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:15:10\n@@ -59,7 +59,7 @@ LL |         (_\u00e4, _) => {}\n    |          ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:19:8\n@@ -68,7 +68,7 @@ LL | struct F\u00f6\u00f6 {\n    |        ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:20:5\n@@ -77,7 +77,7 @@ LL |     f\u00f6\u00f6: isize\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:23:6\n@@ -86,7 +86,7 @@ LL | enum B\u00e4r {\n    |      ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:24:5\n@@ -95,7 +95,7 @@ LL |     B\u00e4z {\n    |     ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:25:9\n@@ -104,7 +104,7 @@ LL |         q\u00fcx: isize\n    |         ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/feature-gate-non_ascii_idents.rs:30:8\n@@ -113,7 +113,7 @@ LL |     fn q\u00fcx();\n    |        ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error: aborting due to 13 previous errors\n "}, {"sha": "8a01aa9eb6a9a74d45ccd2c9256e90052c5a1843", "filename": "src/test/ui/feature-gates/feature-gate-non_exhaustive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-non_exhaustive.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[non_exhaustive]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44109\n-   = help: add #![feature(non_exhaustive)] to the crate attributes to enable\n+   = help: add `#![feature(non_exhaustive)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "a5ec3599f6a17c0e5de402d318ce49fa3b149608", "filename": "src/test/ui/feature-gates/feature-gate-omit-gdb-pretty-printer-section.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-omit-gdb-pretty-printer-section.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-omit-gdb-pretty-printer-section.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-omit-gdb-pretty-printer-section.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[omit_gdb_pretty_printer_section]` attribute is just used fo\n LL | #[omit_gdb_pretty_printer_section]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(omit_gdb_pretty_printer_section)] to the crate attributes to enable\n+   = help: add `#![feature(omit_gdb_pretty_printer_section)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "6c230f8cada8b2c9024cb064d811fafad79a6177", "filename": "src/test/ui/feature-gates/feature-gate-on-unimplemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-on-unimplemented.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc_on_unimplemented = \"test error `{Self}` with `{Bar}`\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29628\n-   = help: add #![feature(on_unimplemented)] to the crate attributes to enable\n+   = help: add `#![feature(on_unimplemented)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "0c3dd451b2723bc00178ad33b89448ed99c1157f", "filename": "src/test/ui/feature-gates/feature-gate-optin-builtin-traits.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-optin-builtin-traits.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | auto trait AutoDummyTrait {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n-   = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n+   = help: add `#![feature(optin_builtin_traits)]` to the crate attributes to enable\n \n error[E0658]: negative trait bounds are not yet fully implemented; use marker types for now\n   --> $DIR/feature-gate-optin-builtin-traits.rs:9:1\n@@ -14,7 +14,7 @@ LL | impl !AutoDummyTrait for DummyStruct {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n-   = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n+   = help: add `#![feature(optin_builtin_traits)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0da9653c9af73bdea7696d3681ebff88a162f233", "filename": "src/test/ui/feature-gates/feature-gate-plugin.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![plugin(foo)]\n    | ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29597\n-   = help: add #![feature(plugin)] to the crate attributes to enable\n+   = help: add `#![feature(plugin)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "93473bfd27b45530b6b7da832db0fbeffec99273", "filename": "src/test/ui/feature-gates/feature-gate-plugin_registrar.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-plugin_registrar.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | pub fn registrar() {}\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29597\n-   = help: add #![feature(plugin_registrar)] to the crate attributes to enable\n+   = help: add `#![feature(plugin_registrar)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "8686aed8f82932e932283742a522a4558723ae58", "filename": "src/test/ui/feature-gates/feature-gate-prelude_import.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-prelude_import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-prelude_import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-prelude_import.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: `#[prelude_import]` is for use by rustc only\n LL | #[prelude_import]\n    | ^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(prelude_import)] to the crate attributes to enable\n+   = help: add `#![feature(prelude_import)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "18e6503c5524e51d9a1bf5c54cc5bbad6acdcdba", "filename": "src/test/ui/feature-gates/feature-gate-profiler-runtime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-profiler-runtime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-profiler-runtime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-profiler-runtime.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[profiler_runtime]` attribute is used to identify the `profi\n LL | #![profiler_runtime]\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(profiler_runtime)] to the crate attributes to enable\n+   = help: add `#![feature(profiler_runtime)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "dfaa85bc5f014efeb96c63c05fd6f3f1d805e786", "filename": "src/test/ui/feature-gates/feature-gate-repr-simd.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(repr_simd)] to the crate attributes to enable\n+   = help: add `#![feature(repr_simd)]` to the crate attributes to enable\n \n error[E0658]: SIMD types are experimental and possibly buggy\n   --> $DIR/feature-gate-repr-simd.rs:5:1\n@@ -14,7 +14,7 @@ LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(repr_simd)] to the crate attributes to enable\n+   = help: add `#![feature(repr_simd)]` to the crate attributes to enable\n \n warning[E0566]: conflicting representation hints\n   --> $DIR/feature-gate-repr-simd.rs:4:8"}, {"sha": "2139a5da600df560f1adb2d4f9a903f21480951a", "filename": "src/test/ui/feature-gates/feature-gate-repr128.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr128.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/35118\n-   = help: add #![feature(repr128)] to the crate attributes to enable\n+   = help: add `#![feature(repr128)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "e9dd0867fcaee622f5e12beeb99598d4c6c03133", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc_variance]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: the `#[rustc_error]` attribute is just used for rustc unit tests and will never be stable\n   --> $DIR/feature-gate-rustc-attrs-1.rs:6:1\n@@ -14,7 +14,7 @@ LL | #[rustc_error]\n    | ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: the `#[rustc_nonnull_optimization_guaranteed]` attribute is just used to enable niche optimizations in libcore and will never be stable\n   --> $DIR/feature-gate-rustc-attrs-1.rs:7:1\n@@ -23,7 +23,7 @@ LL | #[rustc_nonnull_optimization_guaranteed]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f098635c70287b38106a4409b12e068a824e30fc", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc::unknown]\n    |   ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: macro `rustc::unknown` may not be used in attributes\n   --> $DIR/feature-gate-rustc-attrs.rs:8:1\n@@ -20,7 +20,7 @@ LL | #[unknown::rustc]\n    |            ^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: macro `unknown::rustc` may not be used in attributes\n   --> $DIR/feature-gate-rustc-attrs.rs:13:1\n@@ -35,7 +35,7 @@ LL | #[rustc_unknown]\n    |   ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: The attribute `rustc_unknown` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/feature-gate-rustc-attrs.rs:20:3\n@@ -44,7 +44,7 @@ LL | #[rustc_unknown]\n    |   ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: used by the test suite\n   --> $DIR/feature-gate-rustc-attrs.rs:18:1\n@@ -53,7 +53,7 @@ LL | #[rustc_dummy]\n    | ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error: aborting due to 7 previous errors\n "}, {"sha": "d7b7cf72a266b35963491a8b9bbbfbf771d71bf7", "filename": "src/test/ui/feature-gates/feature-gate-rustc_const_unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc_const_unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc_const_unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc_const_unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[rustc_const_unstable]` attribute is an internal feature\n LL | #[rustc_const_unstable(feature=\"fzzzzzt\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(rustc_const_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_const_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b13ec215f8c08c0cab1d38adae880ab37ad51d59", "filename": "src/test/ui/feature-gates/feature-gate-sanitizer-runtime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-sanitizer-runtime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-sanitizer-runtime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-sanitizer-runtime.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: the `#[sanitizer_runtime]` attribute is used to identify crates th\n LL | #![sanitizer_runtime]\n    | ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(sanitizer_runtime)] to the crate attributes to enable\n+   = help: add `#![feature(sanitizer_runtime)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b72ac1e4936befb13ac4b018848197a833d1f8f4", "filename": "src/test/ui/feature-gates/feature-gate-simd.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-simd.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(repr_simd)] to the crate attributes to enable\n+   = help: add `#![feature(repr_simd)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "e88fddaa81fbeabb9c8e4aac3b755af990d51f82", "filename": "src/test/ui/feature-gates/feature-gate-slice-patterns.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-slice-patterns.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |         [1, 2, ..] => {}\n    |                ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n   --> $DIR/feature-gate-slice-patterns.rs:7:13\n@@ -14,7 +14,7 @@ LL |         [1, .., 5] => {}\n    |             ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n   --> $DIR/feature-gate-slice-patterns.rs:8:10\n@@ -23,7 +23,7 @@ LL |         [.., 4, 5] => {}\n    |          ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n   --> $DIR/feature-gate-slice-patterns.rs:13:11\n@@ -32,7 +32,7 @@ LL |         [ xs.., 4, 5 ] => {}\n    |           ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n   --> $DIR/feature-gate-slice-patterns.rs:14:14\n@@ -41,7 +41,7 @@ LL |         [ 1, xs.., 5 ] => {}\n    |              ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error[E0658]: syntax for subslices in slice patterns is not yet stabilized\n   --> $DIR/feature-gate-slice-patterns.rs:15:17\n@@ -50,7 +50,7 @@ LL |         [ 1, 2, xs.. ] => {}\n    |                 ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/62254\n-   = help: add #![feature(slice_patterns)] to the crate attributes to enable\n+   = help: add `#![feature(slice_patterns)]` to the crate attributes to enable\n \n error: aborting due to 6 previous errors\n "}, {"sha": "0bd4c7c85b74a9648cffcdfa158d5d49b7042a05", "filename": "src/test/ui/feature-gates/feature-gate-start.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,3 +1,3 @@\n #[start]\n fn foo(_: isize, _: *const *const u8) -> isize { 0 }\n-//~^ ERROR a #[start] function is an experimental feature\n+//~^ ERROR a `#[start]` function is an experimental feature"}, {"sha": "c769ef8ee9272a27acf427ff22de6ef8c8b8ad81", "filename": "src/test/ui/feature-gates/feature-gate-start.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-start.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: a #[start] function is an experimental feature whose signature may change over time\n+error[E0658]: a `#[start]` function is an experimental feature whose signature may change over time\n   --> $DIR/feature-gate-start.rs:2:1\n    |\n LL | fn foo(_: isize, _: *const *const u8) -> isize { 0 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29633\n-   = help: add #![feature(start)] to the crate attributes to enable\n+   = help: add `#![feature(start)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "f2e29cf0678ae1c21bec4fb507bf72a0c6bcb50e", "filename": "src/test/ui/feature-gates/feature-gate-static-nobundle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-static-nobundle.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[link(name=\"foo\", kind=\"static-nobundle\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/37403\n-   = help: add #![feature(static_nobundle)] to the crate attributes to enable\n+   = help: add `#![feature(static_nobundle)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "70c70638ea918fe695f9f5b39f807503cfdd190e", "filename": "src/test/ui/feature-gates/feature-gate-stmt_expr_attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-stmt_expr_attributes.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | const X: i32 = #[allow(dead_code)] 8;\n    |                ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "9f154d9bc50a53d4c9bcb69fdaa519700856debf", "filename": "src/test/ui/feature-gates/feature-gate-thread_local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-thread_local.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[thread_local]\n    | ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29594\n-   = help: add #![feature(thread_local)] to the crate attributes to enable\n+   = help: add `#![feature(thread_local)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "eb41ee45d225bff5d7ce36b9d31dfc396d6294c4", "filename": "src/test/ui/feature-gates/feature-gate-trace_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trace_macros.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     trace_macros!(true);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+   = help: add `#![feature(trace_macros)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "9250e27d15807eaec9a3131dfe62894bafbb6d2d", "filename": "src/test/ui/feature-gates/feature-gate-trait-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-trait-alias.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | trait Foo = Default;\n    | ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/41517\n-   = help: add #![feature(trait_alias)] to the crate attributes to enable\n+   = help: add `#![feature(trait_alias)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "8e727c33f20f8eed16b7a87da713ddefa6f04122", "filename": "src/test/ui/feature-gates/feature-gate-transparent_enums.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_enums.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | enum OkButUnstableEnum {\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60405\n-   = help: add #![feature(transparent_enums)] to the crate attributes to enable\n+   = help: add `#![feature(transparent_enums)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "356950d06414e64f1f53aa6e584be99a865a997a", "filename": "src/test/ui/feature-gates/feature-gate-transparent_unions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-transparent_unions.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | union OkButUnstableUnion {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60405\n-   = help: add #![feature(transparent_unions)] to the crate attributes to enable\n+   = help: add `#![feature(transparent_unions)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "565f3610a2e21efdcf0e4448c70e5171a40ef9c9", "filename": "src/test/ui/feature-gates/feature-gate-try_blocks.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_blocks.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -9,7 +9,7 @@ LL | |     };\n    | |_____^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/31436\n-   = help: add #![feature(try_blocks)] to the crate attributes to enable\n+   = help: add `#![feature(try_blocks)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5bd9dffa7f0f854c11a743c962ad43eff22eb692", "filename": "src/test/ui/feature-gates/feature-gate-try_reserve.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-try_reserve.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     v.try_reserve(10);\n    |       ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/48043\n-   = help: add #![feature(try_reserve)] to the crate attributes to enable\n+   = help: add `#![feature(try_reserve)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "83f95529f0d9d3b6672be19a6438c45b214ffdf8", "filename": "src/test/ui/feature-gates/feature-gate-type_ascription.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-type_ascription.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let a = 10: u8;\n    |             ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/23416\n-   = help: add #![feature(type_ascription)] to the crate attributes to enable\n+   = help: add `#![feature(type_ascription)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "fc4317b316a37781546828153421cf72e71a89f2", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-manual-impls.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-manual-impls.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     extern \"rust-call\" fn call(self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:17:5\n@@ -14,7 +14,7 @@ LL |     extern \"rust-call\" fn call_once(self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:23:5\n@@ -23,7 +23,7 @@ LL |     extern \"rust-call\" fn call_mut(&self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:29:5\n@@ -32,7 +32,7 @@ LL |     extern \"rust-call\" fn call_once(&self, args: ()) -> () {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:9:6\n@@ -41,7 +41,7 @@ LL | impl Fn<()> for Foo {\n    |      ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0229]: associated type bindings are not allowed here\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:15:12\n@@ -56,7 +56,7 @@ LL | impl FnMut<()> for Bar {\n    |      ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n   --> $DIR/feature-gate-unboxed-closures-manual-impls.rs:27:6\n@@ -65,7 +65,7 @@ LL | impl FnOnce<()> for Baz {\n    |      ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error: aborting due to 8 previous errors\n "}, {"sha": "ee3ba665cefa3452702ba6a3b7a2d0d699836961", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-method-calls.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-method-calls.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     f.call(());\n    |       ^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n   --> $DIR/feature-gate-unboxed-closures-method-calls.rs:5:7\n@@ -14,7 +14,7 @@ LL |     f.call_mut(());\n    |       ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n   --> $DIR/feature-gate-unboxed-closures-method-calls.rs:6:7\n@@ -23,7 +23,7 @@ LL |     f.call_once(());\n    |       ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "f7cb1ab64175c5174a60d52f34ccb4725b7f980c", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures-ufcs-calls.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures-ufcs-calls.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     Fn::call(&f, ());\n    |     ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n   --> $DIR/feature-gate-unboxed-closures-ufcs-calls.rs:5:5\n@@ -14,7 +14,7 @@ LL |     FnMut::call_mut(&mut f, ());\n    |     ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'fn_traits'\n   --> $DIR/feature-gate-unboxed-closures-ufcs-calls.rs:6:5\n@@ -23,7 +23,7 @@ LL |     FnOnce::call_once(f, ());\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(fn_traits)] to the crate attributes to enable\n+   = help: add `#![feature(fn_traits)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "723c6619887aa905bc3d56be81233da760654c97", "filename": "src/test/ui/feature-gates/feature-gate-unboxed-closures.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unboxed-closures.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL | |     }\n    | |_____^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n   --> $DIR/feature-gate-unboxed-closures.rs:5:6\n@@ -16,7 +16,7 @@ LL | impl FnOnce<(u32, u32)> for Test {\n    |      ^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d4c62399e9be02648933043b20784b0d34d55c19", "filename": "src/test/ui/feature-gates/feature-gate-unsized_tuple_coercion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unsized_tuple_coercion.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let _ : &(dyn Send,) = &((),);\n    |                            ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/42877\n-   = help: add #![feature(unsized_tuple_coercion)] to the crate attributes to enable\n+   = help: add `#![feature(unsized_tuple_coercion)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "f59a34e2c81f6897103088ae9b869e7f591e3793", "filename": "src/test/ui/feature-gates/feature-gate-untagged_unions.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-untagged_unions.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n-   = help: add #![feature(untagged_unions)] to the crate attributes to enable\n+   = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\n \n error[E0658]: unions with non-`Copy` fields are unstable\n   --> $DIR/feature-gate-untagged_unions.rs:13:1\n@@ -18,7 +18,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n-   = help: add #![feature(untagged_unions)] to the crate attributes to enable\n+   = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\n \n error[E0658]: unions with `Drop` implementations are unstable\n   --> $DIR/feature-gate-untagged_unions.rs:17:1\n@@ -29,7 +29,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32836\n-   = help: add #![feature(untagged_unions)] to the crate attributes to enable\n+   = help: add `#![feature(untagged_unions)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "08e8ec9a56e5150b341b6a5ebf3d51deb3e60fbe", "filename": "src/test/ui/feature-gates/feature-gate-unwind-attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -8,7 +8,7 @@ extern {\n     fn extern_fn();\n // CHECK-NOT: Function Attrs: nounwind\n // CHECK: declare void @unwinding_extern_fn\n-    #[unwind(allowed)] //~ ERROR #[unwind] is experimental\n+    #[unwind(allowed)] //~ ERROR `#[unwind]` is experimental\n     fn unwinding_extern_fn();\n }\n "}, {"sha": "639b87e016214880256e759222137f553e32e3f1", "filename": "src/test/ui/feature-gates/feature-gate-unwind-attributes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -1,11 +1,11 @@\n-error[E0658]: #[unwind] is experimental\n+error[E0658]: `#[unwind]` is experimental\n   --> $DIR/feature-gate-unwind-attributes.rs:11:5\n    |\n LL |     #[unwind(allowed)]\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/58760\n-   = help: add #![feature(unwind_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(unwind_attributes)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "92a836cadfa7b638abc26c02a03ed7a219b32e72", "filename": "src/test/ui/imports/local-modularized-tricky-fail-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -8,7 +8,7 @@ LL |                 () => ( struct \u0411; )\n    |                                ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/local-modularized-tricky-fail-2.rs:36:24\n@@ -20,7 +20,7 @@ LL |         () => ( struct \u0413; )\n    |                        ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/local-modularized-tricky-fail-2.rs:46:24\n@@ -32,7 +32,7 @@ LL |         () => ( struct \u0414; )\n    |                        ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "79a0b60b0a7cf82c1ff84872c963ff464c8df67e", "filename": "src/test/ui/inference/inference_unstable_forced.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Finference_unstable_forced.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     assert_eq!('x'.ipu_flatten(), 0);\n    |                    ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/99999\n-   = help: add #![feature(ipu_flatten)] to the crate attributes to enable\n+   = help: add `#![feature(ipu_flatten)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "5a3a2356150dd53db664e5f2ab58b2a6dadcace5", "filename": "src/test/ui/internal/internal-unstable-noallow.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'function'\n LL |     call_unstable_noallow!();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0658]: use of unstable library feature 'struct_field'\n@@ -13,7 +13,7 @@ error[E0658]: use of unstable library feature 'struct_field'\n LL |     construct_unstable_noallow!(0);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(struct_field)] to the crate attributes to enable\n+   = help: add `#![feature(struct_field)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0658]: use of unstable library feature 'method'\n@@ -22,7 +22,7 @@ error[E0658]: use of unstable library feature 'method'\n LL |     |x: internal_unstable::Foo| { call_method_noallow!(x) };\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(method)] to the crate attributes to enable\n+   = help: add `#![feature(method)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error[E0658]: use of unstable library feature 'struct2_field'\n@@ -31,7 +31,7 @@ error[E0658]: use of unstable library feature 'struct2_field'\n LL |     |x: internal_unstable::Bar| { access_field_noallow!(x) };\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(struct2_field)] to the crate attributes to enable\n+   = help: add `#![feature(struct2_field)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 4 previous errors"}, {"sha": "558e3dbb78df69775f52f740a0c915ad23070c04", "filename": "src/test/ui/internal/internal-unstable-thread-local.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-thread-local.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-thread-local.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-thread-local.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'function'\n LL | thread_local!(static BAR: () = internal_unstable::unstable());\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "2c9d14692103fe0fb4b53cbc476554d7f352c9b7", "filename": "src/test/ui/internal/internal-unstable.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,31 +4,31 @@ error[E0658]: use of unstable library feature 'function'\n LL |     pass_through_allow!(internal_unstable::unstable());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n   --> $DIR/internal-unstable.rs:35:27\n    |\n LL |     pass_through_noallow!(internal_unstable::unstable());\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n   --> $DIR/internal-unstable.rs:39:22\n    |\n LL |     println!(\"{:?}\", internal_unstable::unstable());\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n   --> $DIR/internal-unstable.rs:41:10\n    |\n LL |     bar!(internal_unstable::unstable());\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'function'\n   --> $DIR/internal-unstable.rs:12:9\n@@ -39,7 +39,7 @@ LL |         internal_unstable::unstable();\n LL |     bar!(internal_unstable::unstable());\n    |     ------------------------------------ in this macro invocation\n    |\n-   = help: add #![feature(function)] to the crate attributes to enable\n+   = help: add `#![feature(function)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "a43aa16aedc28441c85c5592c2ec18520d027171", "filename": "src/test/ui/intrinsics/unchecked_math_unstable.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fintrinsics%2Funchecked_math_unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fintrinsics%2Funchecked_math_unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Funchecked_math_unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,23 +4,23 @@ error[E0658]: use of unstable library feature 'core_intrinsics': intrinsics are\n LL |         let add = std::intrinsics::unchecked_add(x, y);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(core_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(core_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'core_intrinsics': intrinsics are unlikely to ever be stabilized, instead they should be used through stabilized interfaces in the rest of the standard library\n   --> $DIR/unchecked_math_unstable.rs:5:19\n    |\n LL |         let sub = std::intrinsics::unchecked_sub(x, y);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(core_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(core_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'core_intrinsics': intrinsics are unlikely to ever be stabilized, instead they should be used through stabilized interfaces in the rest of the standard library\n   --> $DIR/unchecked_math_unstable.rs:6:19\n    |\n LL |         let mul = std::intrinsics::unchecked_mul(x, y);\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(core_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(core_intrinsics)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "bb667e7b7d48384b7d5638b845119027bc79b252", "filename": "src/test/ui/issues/issue-17458.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17458.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | static X: usize = unsafe { core::ptr::null::<usize>() as usize };\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "7d6ef5eee0787bdd2f1d0db30fd5d2f986c5c525", "filename": "src/test/ui/issues/issue-18294.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-18294.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     const Y: usize = unsafe { &X as *const u32 as usize };\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "a3fa7ebba8ef1cbd09337504898250a500533ba3", "filename": "src/test/ui/issues/issue-20313.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20313.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     fn sqrt(x: f32) -> f32;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29602\n-   = help: add #![feature(link_llvm_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(link_llvm_intrinsics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "43561938ef1c6c4a6140aa2d2db4e04a792eaf39", "filename": "src/test/ui/issues/issue-23024.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-23024.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     println!(\"{:?}\",(vfnfer[0] as dyn Fn)(3));\n    |                                       ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0107]: wrong number of type arguments: expected 1, found 0\n   --> $DIR/issue-23024.rs:9:39"}, {"sha": "84d5aeef63a6fbf722da7a841c161d37041e037a", "filename": "src/test/ui/issues/issue-25826.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25826.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     const A: bool = unsafe { id::<u8> as *const () < id::<u16> as *const ()\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53020\n-   = help: add #![feature(const_compare_raw_pointers)] to the crate attributes to enable\n+   = help: add `#![feature(const_compare_raw_pointers)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "7e53bb54457a47e47308f591626983e9903291d5", "filename": "src/test/ui/issues/issue-28075.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-28075.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-28075.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28075.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL | use lint_stability::{unstable, deprecated};\n    |                      ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "d2e46683b9034b4cd1813493165600694f453837", "filename": "src/test/ui/issues/issue-28388-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-28388-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-28388-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28388-3.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL | use lint_stability::UnstableEnum::{};\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "43bb4105c8dbf633b88d9a0e951964b01806008e", "filename": "src/test/ui/issues/issue-32655.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -8,7 +8,7 @@ LL | foo!();\n    | ------- in this macro invocation\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `derive_Clone` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/issue-32655.rs:18:7\n@@ -17,7 +17,7 @@ LL |     #[derive_Clone]\n    |       ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "029826f09a2dcd5cb105b004ca339af82901df51", "filename": "src/test/ui/issues/issue-32782.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL |         #[allow_internal_unstable]\n LL | foo!();\n    | ------- in this macro invocation\n    |\n-   = help: add #![feature(allow_internal_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b620abbf436d7b01cc5d483e158cb67556156631", "filename": "src/test/ui/issues/issue-32829.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32829.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | static S : u64 = { { panic!(\"foo\"); 0 } };\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51999\n-   = help: add #![feature(const_panic)] to the crate attributes to enable\n+   = help: add `#![feature(const_panic)]` to the crate attributes to enable\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "b1b9754523f67a463106304ba90afc371e57ae24", "filename": "src/test/ui/issues/issue-37887.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37887.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -11,7 +11,7 @@ LL |     extern crate libc;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27812\n-   = help: add #![feature(rustc_private)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3ab876dbf42548118ff5407b5f059217146cde9e", "filename": "src/test/ui/issues/issue-49074.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49074.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[marco_use] // typo\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_use`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: cannot find macro `bar!` in this scope\n   --> $DIR/issue-49074.rs:12:4"}, {"sha": "2db6f42405c179180718f95b364217e5ecf40777", "filename": "src/test/ui/issues/issue-52023-array-size-pointer-cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52023-array-size-pointer-cast.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let _ = [0; (&0 as *const i32) as usize];\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n-   = help: add #![feature(const_raw_ptr_to_usize_cast)] to the crate attributes to enable\n+   = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n error[E0080]: it is undefined behavior to use this value\n   --> $DIR/issue-52023-array-size-pointer-cast.rs:2:17"}, {"sha": "842ebd196983b074220d39a61147f396dcdb03c5", "filename": "src/test/ui/issues/issue-52489.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-52489.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fissues%2Fissue-52489.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52489.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'issue_52489_unstable'\n LL | use issue_52489;\n    |     ^^^^^^^^^^^\n    |\n-   = help: add #![feature(issue_52489_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(issue_52489_unstable)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b46941067ad017cf0b8a43a0ca95e208b651b69b", "filename": "src/test/ui/linkage-attr/linkage4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flinkage-attr%2Flinkage4.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[linkage = \"external\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29603\n-   = help: add #![feature(linkage)] to the crate attributes to enable\n+   = help: add `#![feature(linkage)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "3bc1d6fc135e59e572f83bb7aca4d930fb533825", "filename": "src/test/ui/lint/lint-output-format.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-output-format.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,23 +4,23 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL | extern crate lint_output_format;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-output-format.rs:7:31\n    |\n LL | use lint_output_format::{foo, bar};\n    |                               ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-output-format.rs:11:14\n    |\n LL |     let _y = bar();\n    |              ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "5b7537fa234a452e04eb987e317608c092c3106c", "filename": "src/test/ui/lint/lint-stability-2.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,255 +4,255 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL |         foo.method_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:42:9\n    |\n LL |         Foo::method_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:44:9\n    |\n LL |         <Foo>::method_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:46:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:48:9\n    |\n LL |         <Foo>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:51:13\n    |\n LL |         foo.method_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:53:9\n    |\n LL |         Foo::method_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:55:9\n    |\n LL |         <Foo>::method_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:57:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:59:9\n    |\n LL |         <Foo>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:62:13\n    |\n LL |         foo.method_unstable();\n    |             ^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:63:9\n    |\n LL |         Foo::method_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:64:9\n    |\n LL |         <Foo>::method_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:65:13\n    |\n LL |         foo.trait_unstable();\n    |             ^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:66:9\n    |\n LL |         <Foo>::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:68:13\n    |\n LL |         foo.method_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:70:9\n    |\n LL |         Foo::method_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:72:9\n    |\n LL |         <Foo>::method_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:74:13\n    |\n LL |         foo.trait_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:76:9\n    |\n LL |         <Foo>::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:131:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:133:9\n    |\n LL |         <Foo>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:135:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:137:9\n    |\n LL |         <Foo>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:139:13\n    |\n LL |         foo.trait_unstable();\n    |             ^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:140:9\n    |\n LL |         <Foo>::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:141:13\n    |\n LL |         foo.trait_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:143:9\n    |\n LL |         <Foo>::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:154:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:156:13\n    |\n LL |         foo.trait_deprecated_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-2.rs:158:13\n    |\n LL |         foo.trait_unstable();\n    |             ^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability-2.rs:159:13\n    |\n LL |         foo.trait_unstable_text();\n    |             ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to 32 previous errors\n "}, {"sha": "b6a08186b5fb883e71d495b88b604928bb08383e", "filename": "src/test/ui/lint/lint-stability-fields.stderr", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-fields.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,343 +4,343 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL |         let x = Unstable {\n    |                 ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:61:13\n    |\n LL |         let Unstable {\n    |             ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:67:13\n    |\n LL |         let Unstable\n    |             ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:72:17\n    |\n LL |         let x = reexport::Unstable2(1, 2, 3);\n    |                 ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:74:17\n    |\n LL |         let x = Unstable2(1, 2, 3);\n    |                 ^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:80:13\n    |\n LL |         let Unstable2\n    |             ^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:85:13\n    |\n LL |         let Unstable2\n    |             ^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:90:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:100:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:106:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:110:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:116:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:121:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:21:13\n    |\n LL |             override1: 2,\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:22:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:26:17\n    |\n LL |         let _ = x.override1;\n    |                 ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:27:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:31:13\n    |\n LL |             override1: _,\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:32:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:40:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:41:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:44:20\n    |\n LL |                    _,\n    |                    ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:45:20\n    |\n LL |                    _)\n    |                    ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:52:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:54:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:57:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:59:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:62:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:64:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:76:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:78:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:81:14\n    |\n LL |             (_,\n    |              ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:83:14\n    |\n LL |              _)\n    |              ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:91:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:93:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:96:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:98:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:101:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:103:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:112:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:114:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:117:14\n    |\n LL |             (_,\n    |              ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability-fields.rs:119:14\n    |\n LL |              _)\n    |              ^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to 43 previous errors\n "}, {"sha": "167140ef92b46281c8c3499402c9899224012693", "filename": "src/test/ui/lint/lint-stability.stderr", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Flint%2Flint-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,327 +4,327 @@ error[E0658]: use of unstable library feature 'unstable_test_feature'\n LL |     extern crate stability_cfg2;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:45:9\n    |\n LL |         deprecated_unstable();\n    |         ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:47:9\n    |\n LL |         Trait::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:49:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:52:9\n    |\n LL |         deprecated_unstable_text();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:54:9\n    |\n LL |         Trait::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:56:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:59:9\n    |\n LL |         unstable();\n    |         ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:60:9\n    |\n LL |         Trait::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:61:9\n    |\n LL |         <Foo as Trait>::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability.rs:63:9\n    |\n LL |         unstable_text();\n    |         ^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability.rs:65:9\n    |\n LL |         Trait::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability.rs:67:9\n    |\n LL |         <Foo as Trait>::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:99:17\n    |\n LL |         let _ = DeprecatedUnstableStruct {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:103:17\n    |\n LL |         let _ = UnstableStruct { i: 0 };\n    |                 ^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:107:17\n    |\n LL |         let _ = DeprecatedUnstableUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:109:17\n    |\n LL |         let _ = UnstableUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:113:17\n    |\n LL |         let _ = Enum::DeprecatedUnstableVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:115:17\n    |\n LL |         let _ = Enum::UnstableVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:119:17\n    |\n LL |         let _ = DeprecatedUnstableTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:121:17\n    |\n LL |         let _ = UnstableTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:130:25\n    |\n LL |         macro_test_arg!(deprecated_unstable_text());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:144:9\n    |\n LL |         Trait::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:146:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:148:9\n    |\n LL |         Trait::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:150:9\n    |\n LL |         <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:152:9\n    |\n LL |         Trait::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:153:9\n    |\n LL |         <Foo as Trait>::trait_unstable(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability.rs:154:9\n    |\n LL |         Trait::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': text\n   --> $DIR/lint-stability.rs:156:9\n    |\n LL |         <Foo as Trait>::trait_unstable_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:172:10\n    |\n LL |     impl UnstableTrait for S { }\n    |          ^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:174:24\n    |\n LL |     trait LocalTrait : UnstableTrait { }\n    |                        ^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:179:9\n    |\n LL |         fn trait_unstable(&self) {}\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:184:5\n    |\n LL |     extern crate inherited_stability;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:185:9\n    |\n LL |     use self::inherited_stability::*;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:188:9\n    |\n LL |         unstable();\n    |         ^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:191:9\n    |\n LL |         stable_mod::unstable();\n    |         ^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:195:9\n    |\n LL |         unstable_mod::unstable();\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:197:17\n    |\n LL |         let _ = Unstable::UnstableVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:88:48\n    |\n LL |         struct S1<T: TraitWithAssociatedTypes>(T::TypeUnstable);\n    |                                                ^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature'\n   --> $DIR/lint-stability.rs:92:13\n    |\n LL |             TypeUnstable = u8,\n    |             ^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to 41 previous errors\n "}, {"sha": "44233d7b7dda3120c84201cfabc7f6697ce16223", "filename": "src/test/ui/macros/macro-reexport-removed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-reexport-removed.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -17,7 +17,7 @@ LL | #[macro_reexport(macro_one)]\n    |   ^^^^^^^^^^^^^^ help: a built-in attribute with a similar name exists: `macro_export`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6f84c450a2efb5b1b38f1851f0ae8aab18cfcff4", "filename": "src/test/ui/macros/macro-stability.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-stability.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,23 +4,23 @@ error[E0658]: use of unstable library feature 'local_unstable'\n LL |     local_unstable!();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(local_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(local_unstable)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'local_unstable'\n   --> $DIR/macro-stability.rs:20:5\n    |\n LL |     local_unstable_modern!();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(local_unstable)] to the crate attributes to enable\n+   = help: add `#![feature(local_unstable)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_macros'\n   --> $DIR/macro-stability.rs:21:5\n    |\n LL |     unstable_macro!();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(unstable_macros)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_macros)]` to the crate attributes to enable\n \n warning: use of deprecated item 'deprecated_macro': deprecation reason\n   --> $DIR/macro-stability.rs:24:5"}, {"sha": "6ee33f4ab61f60c90c1db39b43d43d97a99fd569", "filename": "src/test/ui/macros/macros-in-extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-in-extern.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     returns_isize!(rust_get_test_int);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/macros-in-extern.rs:28:5\n@@ -14,7 +14,7 @@ LL |     takes_u32_returns_u32!(rust_dbg_extern_identity_u32);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/macros-in-extern.rs:30:5\n@@ -23,7 +23,7 @@ LL |     emits_nothing!();\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "ab5d9f8cda48387e650f6bc733f70b3a88d6c292", "filename": "src/test/ui/panic-runtime/needs-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneeds-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![panic_runtime]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32837\n-   = help: add #![feature(panic_runtime)] to the crate attributes to enable\n+   = help: add `#![feature(panic_runtime)]` to the crate attributes to enable\n \n error[E0658]: the `#[needs_panic_runtime]` attribute is an experimental feature\n   --> $DIR/needs-gate.rs:5:1\n@@ -14,7 +14,7 @@ LL | #![needs_panic_runtime]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/32837\n-   = help: add #![feature(needs_panic_runtime)] to the crate attributes to enable\n+   = help: add `#![feature(needs_panic_runtime)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d8884de1fe84d6a2df4bc6e902ca19aee7f848b7", "filename": "src/test/ui/parser/fn-arg-doc-comment.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Ffn-arg-doc-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Ffn-arg-doc-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffn-arg-doc-comment.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -23,7 +23,7 @@ LL |     /// Comment\n    |     ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60406\n-   = help: add #![feature(param_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(param_attrs)]` to the crate attributes to enable\n \n error[E0658]: attributes on function parameters are unstable\n   --> $DIR/fn-arg-doc-comment.rs:8:5\n@@ -32,7 +32,7 @@ LL |     /// Other\n    |     ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60406\n-   = help: add #![feature(param_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(param_attrs)]` to the crate attributes to enable\n \n error[E0308]: mismatched types\n   --> $DIR/fn-arg-doc-comment.rs:22:7"}, {"sha": "6a25c743e776637fbdda10319b7338c36b3a1d89", "filename": "src/test/ui/parser/issue-17383.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-17383.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -8,7 +8,7 @@ LL |     B(usize)\n    |     -------- tuple variant defined here\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60553\n-   = help: add #![feature(arbitrary_enum_discriminant)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_enum_discriminant)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "70acc70e092e05442a858be2b0c40464cec0f689", "filename": "src/test/ui/parser/tag-variant-disr-non-nullary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftag-variant-disr-non-nullary.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -18,7 +18,7 @@ LL |     Other2(usize, usize),\n    |     -------------------- tuple variant defined here\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60553\n-   = help: add #![feature(arbitrary_enum_discriminant)] to the crate attributes to enable\n+   = help: add `#![feature(arbitrary_enum_discriminant)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "14a392db4e11835fbfa5704e5c449c79876760c0", "filename": "src/test/ui/proc-macro/attr-stmt-expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.rs?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -9,7 +9,7 @@ fn print_str(string: &'static str) {\n     // macros are handled a bit differently\n     #[expect_print_expr]\n     //~^ ERROR attributes on expressions are experimental\n-    //~| HELP add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+    //~| HELP add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n     println!(\"{}\", string)\n }\n \n@@ -22,6 +22,6 @@ fn main() {\n \n     #[expect_expr]\n     //~^ ERROR attributes on expressions are experimental\n-    //~| HELP add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+    //~| HELP add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n     print_str(\"string\")\n }"}, {"sha": "d931a25dd4145310fd0573d5226612ffbb25fe51", "filename": "src/test/ui/proc-macro/attr-stmt-expr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattr-stmt-expr.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[expect_print_expr]\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/attr-stmt-expr.rs:23:5\n@@ -14,7 +14,7 @@ LL |     #[expect_expr]\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "984ea4fb8addd3a6a09a78f1f3da58eda43e4cb0", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |             #[empty_helper]\n    |               ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0659]: `empty_helper` is ambiguous (derive helper attribute vs any other name)\n   --> $DIR/derive-helper-shadowing.rs:8:3"}, {"sha": "a6c0ce6260a4d0ab564dfc46537d26ea4fbe6597", "filename": "src/test/ui/proc-macro/derive-still-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-still-gated.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[derive_Empty]\n    |   ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "3a729846d785246be633688f99c2921d257b7cb1", "filename": "src/test/ui/proc-macro/expand-to-unstable-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable-2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[derive(Unstable)]\n    |          ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: The attribute `rustc_foo` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/expand-to-unstable-2.rs:6:10\n@@ -14,7 +14,7 @@ LL | #[derive(Unstable)]\n    |          ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6df00765866a633cdd434ac8aa242c60fd686e1e", "filename": "src/test/ui/proc-macro/expand-to-unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-to-unstable.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature 'core_intrinsics': intrinsics are\n LL | #[derive(Unstable)]\n    |          ^^^^^^^^\n    |\n-   = help: add #![feature(core_intrinsics)] to the crate attributes to enable\n+   = help: add `#![feature(core_intrinsics)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "b5c08587e1958eb9a82ec60a06fe13f2220f8bd1", "filename": "src/test/ui/proc-macro/issue-41211.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-41211.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #![identity_attr]\n    |    ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: inconsistent resolution for a macro: first custom attribute, then attribute macro\n   --> $DIR/issue-41211.rs:8:4"}, {"sha": "6049c2aa4482e425866b9ee60fc58137f3746fe3", "filename": "src/test/ui/proc-macro/macros-in-extern.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacros-in-extern.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[empty_attr]\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/macros-in-extern.rs:18:5\n@@ -14,7 +14,7 @@ LL |     #[identity_attr]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error[E0658]: macro invocations in `extern {}` blocks are experimental\n   --> $DIR/macros-in-extern.rs:22:5\n@@ -23,7 +23,7 @@ LL |     identity!(fn rust_dbg_extern_identity_u32(arg: u32) -> u32;);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/49476\n-   = help: add #![feature(macros_in_extern)] to the crate attributes to enable\n+   = help: add `#![feature(macros_in_extern)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "ad96f78c77ad026947b1941d51e027e090dc81e7", "filename": "src/test/ui/proc-macro/more-gates.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmore-gates.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[attr2mac1]\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n   --> $DIR/more-gates.rs:12:1\n@@ -14,7 +14,7 @@ LL | #[attr2mac2]\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n   --> $DIR/more-gates.rs:16:1\n@@ -23,7 +23,7 @@ LL | mac2mac1!();\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n   --> $DIR/more-gates.rs:17:1\n@@ -32,7 +32,7 @@ LL | mac2mac2!();\n    | ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot expand to macro definitions\n   --> $DIR/more-gates.rs:19:1\n@@ -41,7 +41,7 @@ LL | tricky!();\n    | ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "02dfce1a735846c0e114bb3dea2ce8bb69405434", "filename": "src/test/ui/proc-macro/proc-macro-attributes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-attributes.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[C]\n    |   ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0659]: `B` is ambiguous (derive helper attribute vs any other name)\n   --> $DIR/proc-macro-attributes.rs:6:3"}, {"sha": "8197bbd71fb2a93a6868429227d6ab994e99a4c9", "filename": "src/test/ui/proc-macro/proc-macro-gates.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #![empty_attr]\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n-   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(custom_inner_attributes)]` to the crate attributes to enable\n \n error[E0658]: non-builtin inner attributes are unstable\n   --> $DIR/proc-macro-gates.rs:17:5\n@@ -14,7 +14,7 @@ LL |     #![empty_attr]\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n-   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(custom_inner_attributes)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to modules\n   --> $DIR/proc-macro-gates.rs:13:1\n@@ -23,7 +23,7 @@ LL | #[empty_attr]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to modules\n   --> $DIR/proc-macro-gates.rs:17:5\n@@ -32,7 +32,7 @@ LL |     #![empty_attr]\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error: custom attribute invocations must be of the form #[foo] or #[foo(..)], the macro name must only be followed by a delimiter token\n   --> $DIR/proc-macro-gates.rs:21:1\n@@ -47,7 +47,7 @@ LL |     #[empty_attr]\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to statements\n   --> $DIR/proc-macro-gates.rs:34:5\n@@ -56,7 +56,7 @@ LL |     #[empty_attr]\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to statements\n   --> $DIR/proc-macro-gates.rs:38:5\n@@ -65,7 +65,7 @@ LL |     #[empty_attr]\n    |     ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n   --> $DIR/proc-macro-gates.rs:42:14\n@@ -74,7 +74,7 @@ LL |     let _x = #[identity_attr] 2;\n    |              ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n   --> $DIR/proc-macro-gates.rs:45:15\n@@ -83,7 +83,7 @@ LL |     let _x = [#[identity_attr] 2];\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: custom attributes cannot be applied to expressions\n   --> $DIR/proc-macro-gates.rs:48:14\n@@ -92,7 +92,7 @@ LL |     let _x = #[identity_attr] println!();\n    |              ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to types\n   --> $DIR/proc-macro-gates.rs:53:13\n@@ -101,7 +101,7 @@ LL |     let _x: identity!(u32) = 3;\n    |             ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to patterns\n   --> $DIR/proc-macro-gates.rs:54:12\n@@ -110,7 +110,7 @@ LL |     if let identity!(Some(_x)) = Some(3) {}\n    |            ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to statements\n   --> $DIR/proc-macro-gates.rs:57:5\n@@ -119,7 +119,7 @@ LL |     empty!(struct S;);\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to statements\n   --> $DIR/proc-macro-gates.rs:58:5\n@@ -128,7 +128,7 @@ LL |     empty!(let _x = 3;);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to expressions\n   --> $DIR/proc-macro-gates.rs:60:14\n@@ -137,7 +137,7 @@ LL |     let _x = identity!(3);\n    |              ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error[E0658]: procedural macros cannot be expanded to expressions\n   --> $DIR/proc-macro-gates.rs:61:15\n@@ -146,7 +146,7 @@ LL |     let _x = [empty!(3)];\n    |               ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54727\n-   = help: add #![feature(proc_macro_hygiene)] to the crate attributes to enable\n+   = help: add `#![feature(proc_macro_hygiene)]` to the crate attributes to enable\n \n error: aborting due to 17 previous errors\n "}, {"sha": "88847193884bc6d063fe41983c6c2f368218238c", "filename": "src/test/ui/proc-macro/proc-macro-gates2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fproc-macro-gates2.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | fn _test6<#[empty_attr] T>() {}\n    |           ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `empty_attr` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/proc-macro-gates2.rs:17:9\n@@ -14,7 +14,7 @@ LL |         #[empty_attr]\n    |         ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "02cf7cdb964e6696e86895b6d54cb216583eb41a", "filename": "src/test/ui/proc-macro/resolve-error.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fresolve-error.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[attr_proc_macra]\n    |   ^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `FooWithLongNan` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/resolve-error.rs:31:3\n@@ -14,7 +14,7 @@ LL | #[FooWithLongNan]\n    |   ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: cannot find derive macro `FooWithLongNan` in this scope\n   --> $DIR/resolve-error.rs:22:10"}, {"sha": "cbd111b47bf12a925a67b717c994e5b115d02249", "filename": "src/test/ui/reserved/reserved-attr-on-macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freserved%2Freserved-attr-on-macro.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc_attribute_should_be_reserved]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: The attribute `rustc_attribute_should_be_reserved` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/reserved-attr-on-macro.rs:1:3\n@@ -14,7 +14,7 @@ LL | #[rustc_attribute_should_be_reserved]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: cannot determine resolution for the macro `foo`\n   --> $DIR/reserved-attr-on-macro.rs:10:5"}, {"sha": "abe200944b9696e6cd6d00a7a3fd0cee5b973ae7", "filename": "src/test/ui/rfc-2497-if-let-chains/feature-gate.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Ffeature-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -14,7 +14,7 @@ LL |     if (let 0 = 1) {}\n    |         ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:18:11\n@@ -23,7 +23,7 @@ LL |     if (((let 0 = 1))) {}\n    |           ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:22:16\n@@ -32,7 +32,7 @@ LL |     if true && let 0 = 1 {}\n    |                ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:26:8\n@@ -41,7 +41,7 @@ LL |     if let 0 = 1 && true {}\n    |        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:30:9\n@@ -50,7 +50,7 @@ LL |     if (let 0 = 1) && true {}\n    |         ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:34:17\n@@ -59,7 +59,7 @@ LL |     if true && (let 0 = 1) {}\n    |                 ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:38:9\n@@ -68,7 +68,7 @@ LL |     if (let 0 = 1) && (let 0 = 1) {}\n    |         ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:38:24\n@@ -77,7 +77,7 @@ LL |     if (let 0 = 1) && (let 0 = 1) {}\n    |                        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:8\n@@ -86,7 +86,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:21\n@@ -95,7 +95,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |                     ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:35\n@@ -104,7 +104,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |                                   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:48\n@@ -113,7 +113,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |                                                ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:44:61\n@@ -122,7 +122,7 @@ LL |     if let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {}\n    |                                                             ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:56:8\n@@ -131,7 +131,7 @@ LL |     if let Range { start: _, end: _ } = (true..true) && false {}\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:64:12\n@@ -140,7 +140,7 @@ LL |     while (let 0 = 1) {}\n    |            ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:68:14\n@@ -149,7 +149,7 @@ LL |     while (((let 0 = 1))) {}\n    |              ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:72:19\n@@ -158,7 +158,7 @@ LL |     while true && let 0 = 1 {}\n    |                   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:76:11\n@@ -167,7 +167,7 @@ LL |     while let 0 = 1 && true {}\n    |           ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:80:12\n@@ -176,7 +176,7 @@ LL |     while (let 0 = 1) && true {}\n    |            ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:84:20\n@@ -185,7 +185,7 @@ LL |     while true && (let 0 = 1) {}\n    |                    ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:88:12\n@@ -194,7 +194,7 @@ LL |     while (let 0 = 1) && (let 0 = 1) {}\n    |            ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:88:27\n@@ -203,7 +203,7 @@ LL |     while (let 0 = 1) && (let 0 = 1) {}\n    |                           ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:11\n@@ -212,7 +212,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |           ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:24\n@@ -221,7 +221,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |                        ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:38\n@@ -230,7 +230,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |                                      ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:51\n@@ -239,7 +239,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |                                                   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:94:64\n@@ -248,7 +248,7 @@ LL |     while let 0 = 1 && let 1 = 2 && (let 2 = 3 && let 3 = 4 && let 4 = 5) {\n    |                                                                ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:106:11\n@@ -257,7 +257,7 @@ LL |     while let Range { start: _, end: _ } = (true..true) && false {}\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:129:20\n@@ -266,7 +266,7 @@ LL |     #[cfg(FALSE)] (let 0 = 1);\n    |                    ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:114:17\n@@ -275,7 +275,7 @@ LL |     noop_expr!((let 0 = 1));\n    |                 ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:123:16\n@@ -284,7 +284,7 @@ LL |     use_expr!((let 0 = 1 && 0 == 0));\n    |                ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error[E0658]: `let` expressions in this position are experimental\n   --> $DIR/feature-gate.rs:126:16\n@@ -293,7 +293,7 @@ LL |     use_expr!((let 0 = 1));\n    |                ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/53667\n-   = help: add #![feature(let_chains)] to the crate attributes to enable\n+   = help: add `#![feature(let_chains)]` to the crate attributes to enable\n \n error: `let` expressions are not supported here\n   --> $DIR/feature-gate.rs:14:9"}, {"sha": "a4db4b6207d140ff3eb0ae330ce494393670868f", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-builtin-attrs.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-builtin-attrs.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -269,7 +269,7 @@ LL |         #[test] a: i32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:23:5\n@@ -278,7 +278,7 @@ LL |     #[test] a: u32,\n    |     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:38:5\n@@ -287,7 +287,7 @@ LL |     #[test] a: u32,\n    |     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:58:9\n@@ -296,7 +296,7 @@ LL |         #[test] a: i32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:79:9\n@@ -305,7 +305,7 @@ LL |         #[test] a: i32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:98:9\n@@ -314,7 +314,7 @@ LL |         #[test] a: i32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:117:9\n@@ -323,7 +323,7 @@ LL |         #[test] a: i32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `test` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/param-attrs-builtin-attrs.rs:134:9\n@@ -332,7 +332,7 @@ LL |         #[test] a: u32,\n    |         ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 52 previous errors\n "}, {"sha": "704c41f0fa64165ada8ef3c1656a204392d19561", "filename": "src/test/ui/rfc-2565-param-attrs/param-attrs-feature-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2565-param-attrs%2Fparam-attrs-feature-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -11,7 +11,7 @@ LL |     /// Foo\n    |     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60406\n-   = help: add #![feature(param_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(param_attrs)]` to the crate attributes to enable\n \n error[E0658]: attributes on function parameters are unstable\n   --> $DIR/param-attrs-feature-gate.rs:9:5\n@@ -20,7 +20,7 @@ LL |     #[allow(C)] a: u8\n    |     ^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/60406\n-   = help: add #![feature(param_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(param_attrs)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "fa879371628d370479a02897f29e2059830a7eee", "filename": "src/test/ui/rfc1445/feature-gate.no_gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1445%2Ffeature-gate.no_gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[structural_match]\n    | ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/31434\n-   = help: add #![feature(structural_match)] to the crate attributes to enable\n+   = help: add `#![feature(structural_match)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "fb43a50df782393eb47189a0b0df1d90be7a0d2d", "filename": "src/test/ui/rfc1598-generic-associated-types/gat-dont-ice-on-absent-feature.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-dont-ice-on-absent-feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-dont-ice-on-absent-feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fgat-dont-ice-on-absent-feature.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     type Item<'b> = &'b Foo;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44265\n-   = help: add #![feature(generic_associated_types)] to the crate attributes to enable\n+   = help: add `#![feature(generic_associated_types)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "f85122922c83edf95d125654b7ae23bc8dd5ad4d", "filename": "src/test/ui/rust-unstable-column-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frust-unstable-column-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Frust-unstable-column-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-unstable-column-gated.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -4,7 +4,7 @@ error[E0658]: use of unstable library feature '__rust_unstable_column': internal\n LL |     println!(\"{}\", __rust_unstable_column!());\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: add #![feature(__rust_unstable_column)] to the crate attributes to enable\n+   = help: add `#![feature(__rust_unstable_column)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "e0af720187a7901df6fba3bb3fe812b0a086f17e", "filename": "src/test/ui/span/gated-features-attr-spans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fgated-features-attr-spans.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[repr(simd)]\n    | ^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/27731\n-   = help: add #![feature(repr_simd)] to the crate attributes to enable\n+   = help: add `#![feature(repr_simd)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "65f03e756a2bfc23eacc1a1981e8b09c75639e39", "filename": "src/test/ui/span/issue-36530.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[foo]\n    |   ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: non-builtin inner attributes are unstable\n   --> $DIR/issue-36530.rs:5:5\n@@ -14,7 +14,7 @@ LL |     #![foo]\n    |     ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/54726\n-   = help: add #![feature(custom_inner_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(custom_inner_attributes)]` to the crate attributes to enable\n \n error[E0658]: The attribute `foo` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/issue-36530.rs:5:8\n@@ -23,7 +23,7 @@ LL |     #![foo]\n    |        ^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 3 previous errors\n "}, {"sha": "2cf6c586e4169d98a4f53d2acf6985c2e556086c", "filename": "src/test/ui/specialization/defaultimpl/specialization-feature-gate-default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fdefaultimpl%2Fspecialization-feature-gate-default.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -7,7 +7,7 @@ LL | | }\n    | |_^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/31844\n-   = help: add #![feature(specialization)] to the crate attributes to enable\n+   = help: add `#![feature(specialization)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "df2ad8a9b265d4359dda03befa340d67cb07619a", "filename": "src/test/ui/specialization/specialization-feature-gate-default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-default.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     default fn foo(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/31844\n-   = help: add #![feature(specialization)] to the crate attributes to enable\n+   = help: add `#![feature(specialization)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "3463e77ec7d9bb1ef5215cfba5200ca8e64004d4", "filename": "src/test/ui/stability-attribute/stability-attribute-issue.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fstability-attribute-issue.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     unstable();\n    |     ^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/1\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_test_feature': message\n   --> $DIR/stability-attribute-issue.rs:10:5\n@@ -14,7 +14,7 @@ LL |     unstable_msg();\n    |     ^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/2\n-   = help: add #![feature(unstable_test_feature)] to the crate attributes to enable\n+   = help: add `#![feature(unstable_test_feature)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b6d0f9ec3d899effd4385bf941261b7189b17713", "filename": "src/test/ui/stmt_expr_attrs_no_feature.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstmt_expr_attrs_no_feature.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     #[rustfmt::skip]\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:95:18\n@@ -14,7 +14,7 @@ LL |     fn y(a: [u8; #[rustc_dummy] 5]);\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:102:19\n@@ -23,7 +23,7 @@ LL |     const Y: u8 = #[rustc_dummy] 5;\n    |                   ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:108:19\n@@ -32,7 +32,7 @@ LL |     const Y: [u8; #[rustc_dummy] 5];\n    |                   ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:114:18\n@@ -41,7 +41,7 @@ LL |     field2: [u8; #[rustc_dummy] 5]\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:119:10\n@@ -50,7 +50,7 @@ LL |     [u8; #[rustc_dummy] 5]\n    |          ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:125:14\n@@ -59,7 +59,7 @@ LL |         [u8; #[rustc_dummy] 5]\n    |              ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:130:22\n@@ -68,7 +68,7 @@ LL |         field2: [u8; #[rustc_dummy] 5]\n    |                      ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n   --> $DIR/stmt_expr_attrs_no_feature.rs:138:14\n@@ -77,7 +77,7 @@ LL |         6 => #[rustc_dummy] (),\n    |              ^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/15701\n-   = help: add #![feature(stmt_expr_attributes)] to the crate attributes to enable\n+   = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error: aborting due to 9 previous errors\n "}, {"sha": "7c28e88272829ff9ec5fecb8be996a31464376f6", "filename": "src/test/ui/suggestions/attribute-typos.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fattribute-typos.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustc_err]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(rustc_attrs)] to the crate attributes to enable\n+   = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: The attribute `rustc_err` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/attribute-typos.rs:7:3\n@@ -14,7 +14,7 @@ LL | #[rustc_err]\n    |   ^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `tests` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/attribute-typos.rs:4:3\n@@ -23,7 +23,7 @@ LL | #[tests]\n    |   ^^^^^ help: a built-in attribute with a similar name exists: `test`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error[E0658]: The attribute `deprcated` is currently unknown to the compiler and may have meaning added to it in the future\n   --> $DIR/attribute-typos.rs:1:3\n@@ -32,7 +32,7 @@ LL | #[deprcated]\n    |   ^^^^^^^^^ help: a built-in attribute with a similar name exists: `deprecated`\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: aborting due to 4 previous errors\n "}, {"sha": "c546bc4ef7e0a7487b4c6b549a1945a8b2545b64", "filename": "src/test/ui/syntax-trait-polarity-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsyntax-trait-polarity-feature-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | impl !Send for TestType {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/13231\n-   = help: add #![feature(optin_builtin_traits)] to the crate attributes to enable\n+   = help: add `#![feature(optin_builtin_traits)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "9f17110b6d87481d156519571183e087aa826377", "filename": "src/test/ui/target-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[target_feature(enable = \"avx512bw\")]\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44839\n-   = help: add #![feature(avx512_target_feature)] to the crate attributes to enable\n+   = help: add `#![feature(avx512_target_feature)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "32c9a1e8b6ed1eb6fd8eb1a38fb099b5ac438df5", "filename": "src/test/ui/tool-attributes/tool-attributes-misplaced-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftool-attributes%2Ftool-attributes-misplaced-1.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | #[rustfmt]\n    |   ^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29642\n-   = help: add #![feature(custom_attribute)] to the crate attributes to enable\n+   = help: add `#![feature(custom_attribute)]` to the crate attributes to enable\n \n error: cannot find derive macro `rustfmt` in this scope\n   --> $DIR/tool-attributes-misplaced-1.rs:4:10"}, {"sha": "adf813c162acc2f14944ade38bf99c7c1350be2b", "filename": "src/test/ui/trace_macros-gate.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     trace_macros!();\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+   = help: add `#![feature(trace_macros)]` to the crate attributes to enable\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-gate.rs:4:5\n@@ -20,7 +20,7 @@ LL |     trace_macros!(true);\n    |     ^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+   = help: add `#![feature(trace_macros)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'trace_macros': `trace_macros` is not stable enough for use and is subject to change\n   --> $DIR/trace_macros-gate.rs:7:5\n@@ -29,7 +29,7 @@ LL |     trace_macros!(false);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+   = help: add `#![feature(trace_macros)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'trace_macros': `trace_macros` is not stable enough for use and is subject to change\n   --> $DIR/trace_macros-gate.rs:10:26\n@@ -41,7 +41,7 @@ LL |     expando!(true);\n    |     --------------- in this macro invocation\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29598\n-   = help: add #![feature(trace_macros)] to the crate attributes to enable\n+   = help: add `#![feature(trace_macros)]` to the crate attributes to enable\n \n error: aborting due to 5 previous errors\n "}, {"sha": "a76954287e4d474a253433a42591a2ed029dd0ab", "filename": "src/test/ui/unboxed-closures/unboxed-closure-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     let x: Box<dyn Foo(isize)>;\n    |                    ^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error: aborting due to previous error\n "}, {"sha": "c116728190f3e10d8a96f8ba57abbcaf2b4596c7", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-not-used-on-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL | fn bar1(x: &dyn Fn<(), Output=()>) {\n    |                 ^^^^^^^^^^^^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: the precise format of `Fn`-family traits' type parameters is subject to change. Use parenthetical notation (Fn(Foo, Bar) -> Baz) instead\n   --> $DIR/unboxed-closure-sugar-not-used-on-fn.rs:7:28\n@@ -14,7 +14,7 @@ LL | fn bar2<T>(x: &T) where T: Fn<()> {\n    |                            ^^^^^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/29625\n-   = help: add #![feature(unboxed_closures)] to the crate attributes to enable\n+   = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n "}, {"sha": "df9910f191cd4cb33d653c3473a08484cd614d9b", "filename": "src/test/ui/utf8_idents.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Futf8_idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e71b0c9318b220028a28b7242142868dcb1dd1/src%2Ftest%2Fui%2Futf8_idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Futf8_idents.stderr?ref=41e71b0c9318b220028a28b7242142868dcb1dd1", "patch": "@@ -5,7 +5,7 @@ LL |     '\u03b2,\n    |     ^^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/utf8_idents.rs:3:5\n@@ -14,7 +14,7 @@ LL |     \u03b3\n    |     ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/utf8_idents.rs:8:5\n@@ -23,7 +23,7 @@ LL |     \u03b4: usize\n    |     ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n error[E0658]: non-ascii idents are not fully supported\n   --> $DIR/utf8_idents.rs:12:9\n@@ -32,7 +32,7 @@ LL |     let \u03b1 = 0.00001f64;\n    |         ^\n    |\n    = note: for more information, see https://github.com/rust-lang/rust/issues/55467\n-   = help: add #![feature(non_ascii_idents)] to the crate attributes to enable\n+   = help: add `#![feature(non_ascii_idents)]` to the crate attributes to enable\n \n warning: type parameter `\u03b3` should have an upper camel case name\n   --> $DIR/utf8_idents.rs:3:5"}]}