{"sha": "2efd8c6e05777a0245437e9b9d1e47431701faf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlZmQ4YzZlMDU3NzdhMDI0NTQzN2U5YjlkMWU0NzQzMTcwMWZhZjA=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-05-12T08:32:19Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-05-12T08:32:19Z"}, "message": "Fix comments; minor refactoring", "tree": {"sha": "63d8ddd9e8263671321fd526f480d4d642a448d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63d8ddd9e8263671321fd526f480d4d642a448d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2efd8c6e05777a0245437e9b9d1e47431701faf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2efd8c6e05777a0245437e9b9d1e47431701faf0", "html_url": "https://github.com/rust-lang/rust/commit/2efd8c6e05777a0245437e9b9d1e47431701faf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2efd8c6e05777a0245437e9b9d1e47431701faf0/comments", "author": null, "committer": null, "parents": [{"sha": "e6e3f24e0cdea503be1a2e8c47297106d26d9aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e3f24e0cdea503be1a2e8c47297106d26d9aaa", "html_url": "https://github.com/rust-lang/rust/commit/e6e3f24e0cdea503be1a2e8c47297106d26d9aaa"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "fb13598dea9ab5522e715e4c697f84ab66cfd449", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2efd8c6e05777a0245437e9b9d1e47431701faf0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2efd8c6e05777a0245437e9b9d1e47431701faf0/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=2efd8c6e05777a0245437e9b9d1e47431701faf0", "patch": "@@ -1060,13 +1060,15 @@ fn lint_or_fun_call<'a, 'tcx: 'a>(\n \n     impl<'a, 'tcx> intravisit::Visitor<'tcx> for FunCallFinder<'a, 'tcx> {\n         fn visit_expr(&mut self, expr: &'tcx hir::Expr) {\n-            let found = match &expr.node {\n+            let call_found = match &expr.node {\n+                // ignore enum and struct constructors\n                 hir::ExprKind::Call(..) => !is_ctor_function(self.cx, expr),\n                 hir::ExprKind::MethodCall(..) => true,\n                 _ => false,\n             };\n \n-            if found {\n+            if call_found {\n+                // don't lint for constant values\n                 let owner_def = self.cx.tcx.hir().get_parent_did_by_hir_id(expr.hir_id);\n                 let promotable = self\n                     .cx\n@@ -1162,7 +1164,6 @@ fn lint_or_fun_call<'a, 'tcx: 'a>(\n             return;\n         }\n \n-        // ignore enum and struct constructors\n         let mut finder = FunCallFinder { cx: &cx, found: false };\n         finder.visit_expr(&arg);\n         if !finder.found {"}]}