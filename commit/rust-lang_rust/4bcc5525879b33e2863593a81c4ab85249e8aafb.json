{"sha": "4bcc5525879b33e2863593a81c4ab85249e8aafb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiY2M1NTI1ODc5YjMzZTI4NjM1OTNhODFjNGFiODUyNDllOGFhZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-28T14:20:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-28T14:20:53Z"}, "message": "Auto merge of #6991 - matthiaskrgr:5396, r=giraffate\n\nredundant_pattern_matching: look inside Refs\n\nlook inside refs and detect if let &None = ...\n\nFixes https://github.com/rust-lang/rust-clippy/issues/5396\n\nchangelog:  redundant_pattern_matching: look inside Refs to fix FNs with \"if let &None = .. \"", "tree": {"sha": "c98198c27872ba3342398e23f528e4b972f42fce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c98198c27872ba3342398e23f528e4b972f42fce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bcc5525879b33e2863593a81c4ab85249e8aafb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcc5525879b33e2863593a81c4ab85249e8aafb", "html_url": "https://github.com/rust-lang/rust/commit/4bcc5525879b33e2863593a81c4ab85249e8aafb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bcc5525879b33e2863593a81c4ab85249e8aafb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e56a2b27f005e7f81756ccc281eca69900dddd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e56a2b27f005e7f81756ccc281eca69900dddd7", "html_url": "https://github.com/rust-lang/rust/commit/8e56a2b27f005e7f81756ccc281eca69900dddd7"}, {"sha": "e006c77d611e20692beb3f319b0fec8cb6f09dc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e006c77d611e20692beb3f319b0fec8cb6f09dc3", "html_url": "https://github.com/rust-lang/rust/commit/e006c77d611e20692beb3f319b0fec8cb6f09dc3"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "425124b78f4776d7302e87e25bbda033573cc0f0", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4bcc5525879b33e2863593a81c4ab85249e8aafb/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcc5525879b33e2863593a81c4ab85249e8aafb/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=4bcc5525879b33e2863593a81c4ab85249e8aafb", "patch": "@@ -1723,7 +1723,13 @@ mod redundant_pattern_match {\n         arms: &[Arm<'_>],\n         keyword: &'static str,\n     ) {\n-        let good_method = match arms[0].pat.kind {\n+        // also look inside refs\n+        let mut kind = &arms[0].pat.kind;\n+        // if we have &None for example, peel it so we can detect \"if let None = x\"\n+        if let PatKind::Ref(inner, _mutability) = kind {\n+            kind = &inner.kind;\n+        }\n+        let good_method = match kind {\n             PatKind::TupleStruct(ref path, ref patterns, _) if patterns.len() == 1 => {\n                 if let PatKind::Wild = patterns[0].kind {\n                     if match_qpath(path, &paths::RESULT_OK) {"}, {"sha": "67474e65cde4fb2f1fedfb64bcc5bedcc86684af", "filename": "tests/ui/match_ref_pats.stderr", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4bcc5525879b33e2863593a81c4ab85249e8aafb/tests%2Fui%2Fmatch_ref_pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bcc5525879b33e2863593a81c4ab85249e8aafb/tests%2Fui%2Fmatch_ref_pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_ref_pats.stderr?ref=4bcc5525879b33e2863593a81c4ab85249e8aafb", "patch": "@@ -46,6 +46,14 @@ LL |         Some(v) => println!(\"{:?}\", v),\n LL |         None => println!(\"none\"),\n    |\n \n+error: redundant pattern matching, consider using `is_none()`\n+  --> $DIR/match_ref_pats.rs:35:12\n+   |\n+LL |     if let &None = a {\n+   |     -------^^^^^---- help: try this: `if a.is_none()`\n+   |\n+   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n+\n error: you don't need to add `&` to all patterns\n   --> $DIR/match_ref_pats.rs:35:5\n    |\n@@ -59,6 +67,12 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n LL |     if let None = *a {\n    |            ^^^^   ^^\n \n+error: redundant pattern matching, consider using `is_none()`\n+  --> $DIR/match_ref_pats.rs:40:12\n+   |\n+LL |     if let &None = &b {\n+   |     -------^^^^^----- help: try this: `if b.is_none()`\n+\n error: you don't need to add `&` to both the expression and the patterns\n   --> $DIR/match_ref_pats.rs:40:5\n    |\n@@ -87,5 +101,5 @@ LL |         match *foo_variant!(0) {\n LL |             Foo::A => println!(\"A\"),\n    |\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 8 previous errors\n "}]}