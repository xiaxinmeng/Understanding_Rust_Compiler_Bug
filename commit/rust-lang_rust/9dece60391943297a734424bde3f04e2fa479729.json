{"sha": "9dece60391943297a734424bde3f04e2fa479729", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkZWNlNjAzOTE5NDMyOTdhNzM0NDI0YmRlM2YwNGUyZmE0Nzk3Mjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-08T21:36:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-08T21:36:44Z"}, "message": "auto merge of #11375 : alexcrichton/rust/issue-11372, r=pcwalton\n\nCloses #11372", "tree": {"sha": "a5a0005937c1e94396db16454c42d3ea9206ac0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5a0005937c1e94396db16454c42d3ea9206ac0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dece60391943297a734424bde3f04e2fa479729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dece60391943297a734424bde3f04e2fa479729", "html_url": "https://github.com/rust-lang/rust/commit/9dece60391943297a734424bde3f04e2fa479729", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dece60391943297a734424bde3f04e2fa479729/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97005c0068f22032cbc30205a25dc88851eba424", "url": "https://api.github.com/repos/rust-lang/rust/commits/97005c0068f22032cbc30205a25dc88851eba424", "html_url": "https://github.com/rust-lang/rust/commit/97005c0068f22032cbc30205a25dc88851eba424"}, {"sha": "75165f78de69379bd765a85ab01e20ac9eef7893", "url": "https://api.github.com/repos/rust-lang/rust/commits/75165f78de69379bd765a85ab01e20ac9eef7893", "html_url": "https://github.com/rust-lang/rust/commit/75165f78de69379bd765a85ab01e20ac9eef7893"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "47213e3943473231df15740bfac40b4e594f301e", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dece60391943297a734424bde3f04e2fa479729/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dece60391943297a734424bde3f04e2fa479729/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=9dece60391943297a734424bde3f04e2fa479729", "patch": "@@ -322,7 +322,7 @@ mod test {\n     use io;\n     use prelude::*;\n     use super::*;\n-    use super::super::mem::{MemReader, MemWriter};\n+    use super::super::mem::{MemReader, MemWriter, BufReader};\n     use Harness = extra::test::BenchHarness;\n \n     /// A type, free to create, primarily intended for benchmarking creation of wrappers that, just\n@@ -526,6 +526,12 @@ mod test {\n         assert_eq!(reader.read(buf), None);\n     }\n \n+    #[test]\n+    fn read_char_buffered() {\n+        let buf = [195u8, 159u8];\n+        let mut reader = BufferedReader::with_capacity(1, BufReader::new(buf));\n+        assert_eq!(reader.read_char(), Some('\u00df'));\n+    }\n \n     #[bench]\n     fn bench_buffered_reader(bh: &mut Harness) {"}, {"sha": "5f5978470570bdf5b560b0b107d3698c1a944240", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9dece60391943297a734424bde3f04e2fa479729/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dece60391943297a734424bde3f04e2fa479729/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9dece60391943297a734424bde3f04e2fa479729", "patch": "@@ -1212,9 +1212,15 @@ pub trait Buffer: Reader {\n         };\n         if width == 0 { return None } // not uf8\n         let mut buf = [0, ..4];\n-        match self.read(buf.mut_slice_to(width)) {\n-            Some(n) if n == width => {}\n-            Some(..) | None => return None // read error\n+        {\n+            let mut start = 0;\n+            loop {\n+                match self.read(buf.mut_slice(start, width)) {\n+                    Some(n) if n == width - start => break,\n+                    Some(n) if n < width - start => { start += n; }\n+                    Some(..) | None => return None // read error\n+                }\n+            }\n         }\n         match str::from_utf8_opt(buf.slice_to(width)) {\n             Some(s) => Some(s.char_at(0)),"}]}