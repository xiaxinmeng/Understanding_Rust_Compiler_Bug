{"sha": "a3a03b65dca9dc174bd58cd3d877ede18fc58637", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYTAzYjY1ZGNhOWRjMTc0YmQ1OGNkM2Q4NzdlZGUxOGZjNTg2Mzc=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-06-12T15:49:39Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-06-12T15:49:39Z"}, "message": "Merge #1398\n\n1398: check for cancellation when executing queries r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "464e2eaab5133f137e9d5c36fb34f6f6876c0432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/464e2eaab5133f137e9d5c36fb34f6f6876c0432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3a03b65dca9dc174bd58cd3d877ede18fc58637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3a03b65dca9dc174bd58cd3d877ede18fc58637", "html_url": "https://github.com/rust-lang/rust/commit/a3a03b65dca9dc174bd58cd3d877ede18fc58637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3a03b65dca9dc174bd58cd3d877ede18fc58637/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c452d2842c2ac7156178a05fe477e8832253a2c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c452d2842c2ac7156178a05fe477e8832253a2c4", "html_url": "https://github.com/rust-lang/rust/commit/c452d2842c2ac7156178a05fe477e8832253a2c4"}, {"sha": "b8cae2cf8f7d2a0162d614e25ef95d7e4a5d3677", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8cae2cf8f7d2a0162d614e25ef95d7e4a5d3677", "html_url": "https://github.com/rust-lang/rust/commit/b8cae2cf8f7d2a0162d614e25ef95d7e4a5d3677"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "033af163234eb38f9245f2e5aef1feb9522d1422", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=a3a03b65dca9dc174bd58cd3d877ede18fc58637", "patch": "@@ -61,7 +61,6 @@ impl HirFileId {\n         db: &impl AstDatabase,\n         file_id: HirFileId,\n     ) -> Option<TreeArc<SyntaxNode>> {\n-        db.check_canceled();\n         match file_id.0 {\n             HirFileIdRepr::File(file_id) => Some(db.parse(file_id).tree.syntax().to_owned()),\n             HirFileIdRepr::Macro(macro_file) => db.parse_macro(macro_file),"}, {"sha": "3532faf01e169699334ab30603ef4243e6f8f97f", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=a3a03b65dca9dc174bd58cd3d877ede18fc58637", "patch": "@@ -234,7 +234,6 @@ impl CrateDefMap {\n         db: &(impl DefDatabase + AstDatabase),\n         krate: Crate,\n     ) -> Arc<CrateDefMap> {\n-        db.check_canceled();\n         let _p = profile(\"crate_def_map_query\");\n         let def_map = {\n             let edition = krate.edition(db);"}, {"sha": "e150d7fd8fa3b320eef66669454b5f43e2ae8ff1", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=a3a03b65dca9dc174bd58cd3d877ede18fc58637", "patch": "@@ -54,7 +54,6 @@ mod unify;\n /// The entry point of type inference.\n pub fn infer_query(db: &impl HirDatabase, def: DefWithBody) -> Arc<InferenceResult> {\n     let _p = profile(\"infer_query\");\n-    db.check_canceled();\n     let body = def.body(db);\n     let resolver = def.resolver(db);\n     let mut ctx = InferenceContext::new(db, body, resolver);"}, {"sha": "fda7f9c04450bae18fbed75ad41fe7f58caecdcd", "filename": "crates/ra_hir/src/ty/traits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftraits.rs?ref=a3a03b65dca9dc174bd58cd3d877ede18fc58637", "patch": "@@ -83,7 +83,6 @@ pub(crate) fn implements_query(\n     krate: Crate,\n     trait_ref: Canonical<TraitRef>,\n ) -> Option<Solution> {\n-    db.check_canceled();\n     let _p = profile(\"implements_query\");\n     let goal: chalk_ir::Goal = trait_ref.value.to_chalk(db).cast();\n     debug!(\"goal: {:?}\", goal);"}, {"sha": "82b061419010594b343a1ab5d4d54b73afa9846a", "filename": "crates/ra_ide_api/src/db.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3a03b65dca9dc174bd58cd3d877ede18fc58637/crates%2Fra_ide_api%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdb.rs?ref=a3a03b65dca9dc174bd58cd3d877ede18fc58637", "patch": "@@ -33,8 +33,12 @@ impl salsa::Database for RootDatabase {\n         Canceled::throw()\n     }\n     fn salsa_event(&self, event: impl Fn() -> salsa::Event<RootDatabase>) {\n-        if let salsa::EventKind::DidValidateMemoizedValue { .. } = event().kind {\n-            self.check_canceled();\n+        match event().kind {\n+            salsa::EventKind::DidValidateMemoizedValue { .. }\n+            | salsa::EventKind::WillExecute { .. } => {\n+                self.check_canceled();\n+            }\n+            _ => (),\n         }\n     }\n }"}]}