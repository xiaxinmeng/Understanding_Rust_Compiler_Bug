{"sha": "ea28abee2877dcd08c14097d4c12c05da1b581bf", "node_id": "C_kwDOAAsO6NoAKGVhMjhhYmVlMjg3N2RjZDA4YzE0MDk3ZDRjMTJjMDVkYTFiNTgxYmY", "commit": {"author": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2021-10-16T16:18:00Z"}, "committer": {"name": "woppopo", "email": "woppopo@protonmail.com", "date": "2021-10-17T09:39:54Z"}, "message": "Make Result::as_mut const", "tree": {"sha": "30c6ad04b54b9ea26cd9a2c14dfafb07972d3e1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30c6ad04b54b9ea26cd9a2c14dfafb07972d3e1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea28abee2877dcd08c14097d4c12c05da1b581bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea28abee2877dcd08c14097d4c12c05da1b581bf", "html_url": "https://github.com/rust-lang/rust/commit/ea28abee2877dcd08c14097d4c12c05da1b581bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea28abee2877dcd08c14097d4c12c05da1b581bf/comments", "author": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilasta", "id": 77098789, "node_id": "MDQ6VXNlcjc3MDk4Nzg5", "avatar_url": "https://avatars.githubusercontent.com/u/77098789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilasta", "html_url": "https://github.com/lilasta", "followers_url": "https://api.github.com/users/lilasta/followers", "following_url": "https://api.github.com/users/lilasta/following{/other_user}", "gists_url": "https://api.github.com/users/lilasta/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilasta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilasta/subscriptions", "organizations_url": "https://api.github.com/users/lilasta/orgs", "repos_url": "https://api.github.com/users/lilasta/repos", "events_url": "https://api.github.com/users/lilasta/events{/privacy}", "received_events_url": "https://api.github.com/users/lilasta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12b5bce0d7b124393d11459557415d37aef13d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/12b5bce0d7b124393d11459557415d37aef13d6a", "html_url": "https://github.com/rust-lang/rust/commit/12b5bce0d7b124393d11459557415d37aef13d6a"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "75f2c222ba83461bda54d49e52103c8f489930e7", "filename": "library/core/src/result.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Fsrc%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Fsrc%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fresult.rs?ref=ea28abee2877dcd08c14097d4c12c05da1b581bf", "patch": "@@ -729,7 +729,8 @@ impl<T, E> Result<T, E> {\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    pub fn as_mut(&mut self) -> Result<&mut T, &mut E> {\n+    #[rustc_const_unstable(feature = \"const_result\", issue = \"82814\")]\n+    pub const fn as_mut(&mut self) -> Result<&mut T, &mut E> {\n         match *self {\n             Ok(ref mut x) => Ok(x),\n             Err(ref mut x) => Err(x),"}, {"sha": "6958f07227afeb88d2f6bd031475c78dd74b1750", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=ea28abee2877dcd08c14097d4c12c05da1b581bf", "patch": "@@ -65,6 +65,7 @@\n #![feature(once_cell)]\n #![feature(unsized_tuple_coercion)]\n #![feature(const_option)]\n+#![feature(const_result)]\n #![feature(integer_atomics)]\n #![feature(int_roundings)]\n #![feature(slice_group_by)]"}, {"sha": "1652c1b83de3383fc36a7b01d06b5d3ddda625d8", "filename": "library/core/tests/result.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Ftests%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea28abee2877dcd08c14097d4c12c05da1b581bf/library%2Fcore%2Ftests%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fresult.rs?ref=ea28abee2877dcd08c14097d4c12c05da1b581bf", "patch": "@@ -352,6 +352,29 @@ fn result_const() {\n     assert!(!IS_ERR)\n }\n \n+#[test]\n+const fn result_const_mut() {\n+    let mut result: Result<usize, bool> = Ok(32);\n+\n+    {\n+        let as_mut = result.as_mut();\n+        match as_mut {\n+            Ok(v) => *v = 42,\n+            Err(_) => unreachable!(),\n+        }\n+    }\n+\n+    let mut result_err: Result<usize, bool> = Err(false);\n+\n+    {\n+        let as_mut = result_err.as_mut();\n+        match as_mut {\n+            Ok(_) => unreachable!(),\n+            Err(v) => *v = true,\n+        }\n+    }\n+}\n+\n #[test]\n fn result_opt_conversions() {\n     #[derive(Copy, Clone, Debug, PartialEq)]"}]}