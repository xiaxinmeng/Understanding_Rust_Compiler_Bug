{"sha": "ba9c398144a0d4840fd02b5f3184ab71ef8264da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhOWMzOTgxNDRhMGQ0ODQwZmQwMmI1ZjMxODRhYjcxZWY4MjY0ZGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T13:35:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-04T13:44:21Z"}, "message": "Modernize postfix completion tests", "tree": {"sha": "8f6d84be1abe0fdbd3da2da97e5f2491bbef8dbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f6d84be1abe0fdbd3da2da97e5f2491bbef8dbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba9c398144a0d4840fd02b5f3184ab71ef8264da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba9c398144a0d4840fd02b5f3184ab71ef8264da", "html_url": "https://github.com/rust-lang/rust/commit/ba9c398144a0d4840fd02b5f3184ab71ef8264da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba9c398144a0d4840fd02b5f3184ab71ef8264da/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a7fd6d23949c3b444ef9091effdc33ddbadb1bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a7fd6d23949c3b444ef9091effdc33ddbadb1bf", "html_url": "https://github.com/rust-lang/rust/commit/7a7fd6d23949c3b444ef9091effdc33ddbadb1bf"}], "stats": {"total": 635, "additions": 123, "deletions": 512}, "files": [{"sha": "14013dc2f97d649f5192b3dd1a110235c68ce71a", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 123, "deletions": 512, "changes": 635, "blob_url": "https://github.com/rust-lang/rust/blob/ba9c398144a0d4840fd02b5f3184ab71ef8264da/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba9c398144a0d4840fd02b5f3184ab71ef8264da/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=ba9c398144a0d4840fd02b5f3184ab71ef8264da", "patch": "@@ -8,14 +8,13 @@ use ra_text_edit::TextEdit;\n \n use crate::{\n     completion::{\n+        completion_config::SnippetCap,\n         completion_context::CompletionContext,\n         completion_item::{Builder, CompletionKind, Completions},\n     },\n-    CompletionItem,\n+    CompletionItem, CompletionItemKind,\n };\n \n-use super::completion_config::SnippetCap;\n-\n pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     if !ctx.config.enable_postfix_completions {\n         return;\n@@ -103,10 +102,9 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n             &format!(\"while {} {{\\n    $0\\n}}\", receiver_text),\n         )\n         .add_to(acc);\n+        postfix_snippet(ctx, cap, &dot_receiver, \"not\", \"!expr\", &format!(\"!{}\", receiver_text))\n+            .add_to(acc);\n     }\n-    // !&&&42 is a compiler error, ergo process it before considering the references\n-    postfix_snippet(ctx, cap, &dot_receiver, \"not\", \"!expr\", &format!(\"!{}\", receiver_text))\n-        .add_to(acc);\n \n     postfix_snippet(ctx, cap, &dot_receiver, \"ref\", \"&expr\", &format!(\"&{}\", receiver_text))\n         .add_to(acc);\n@@ -125,41 +123,43 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n     let dot_receiver = include_references(dot_receiver);\n     let receiver_text =\n         get_receiver_text(&dot_receiver, ctx.dot_receiver_is_ambiguous_float_literal);\n+\n     match try_enum {\n-        Some(try_enum) => {\n-            match try_enum {\n-                TryEnum::Result => {\n-                    postfix_snippet(\n+        Some(try_enum) => match try_enum {\n+            TryEnum::Result => {\n+                postfix_snippet(\n                     ctx,\n                     cap,\n                     &dot_receiver,\n                     \"match\",\n                     \"match expr {}\",\n-                    &format!(\"match {} {{\\n    Ok(${{1:_}}) => {{$2\\\\}},\\n    Err(${{3:_}}) => {{$0\\\\}},\\n}}\", receiver_text),\n+                    &format!(\"match {} {{\\n    Ok(${{1:_}}) => {{$2}},\\n    Err(${{3:_}}) => {{$0}},\\n}}\", receiver_text),\n                 )\n                 .add_to(acc);\n-                }\n-                TryEnum::Option => {\n-                    postfix_snippet(\n+            }\n+            TryEnum::Option => {\n+                postfix_snippet(\n                     ctx,\n                     cap,\n                     &dot_receiver,\n                     \"match\",\n                     \"match expr {}\",\n-                    &format!(\"match {} {{\\n    Some(${{1:_}}) => {{$2\\\\}},\\n    None => {{$0\\\\}},\\n}}\", receiver_text),\n+                    &format!(\n+                        \"match {} {{\\n    Some(${{1:_}}) => {{$2}},\\n    None => {{$0}},\\n}}\",\n+                        receiver_text\n+                    ),\n                 )\n                 .add_to(acc);\n-                }\n             }\n-        }\n+        },\n         None => {\n             postfix_snippet(\n                 ctx,\n                 cap,\n                 &dot_receiver,\n                 \"match\",\n                 \"match expr {}\",\n-                &format!(\"match {} {{\\n    ${{1:_}} => {{$0\\\\}},\\n}}\", receiver_text),\n+                &format!(\"match {} {{\\n    ${{1:_}} => {{$0}},\\n}}\", receiver_text),\n             )\n             .add_to(acc);\n         }\n@@ -232,536 +232,147 @@ fn postfix_snippet(\n     };\n     CompletionItem::new(CompletionKind::Postfix, ctx.source_range(), label)\n         .detail(detail)\n+        .kind(CompletionItemKind::Snippet)\n         .snippet_edit(cap, edit)\n }\n \n #[cfg(test)]\n mod tests {\n-    use insta::assert_debug_snapshot;\n+    use expect::{expect, Expect};\n \n-    use crate::completion::{test_utils::do_completion, CompletionItem, CompletionKind};\n+    use crate::completion::{\n+        test_utils::{check_edit, completion_list},\n+        CompletionKind,\n+    };\n \n-    fn do_postfix_completion(code: &str) -> Vec<CompletionItem> {\n-        do_completion(code, CompletionKind::Postfix)\n+    fn check(ra_fixture: &str, expect: Expect) {\n+        let actual = completion_list(ra_fixture, CompletionKind::Postfix);\n+        expect.assert_eq(&actual)\n     }\n \n     #[test]\n     fn postfix_completion_works_for_trivial_path_expression() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                fn main() {\n-                    let bar = true;\n-                    bar.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"Box::new(bar)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"${1}(bar)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"dbg!(bar)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"if\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"if bar {\\n    $0\\n}\",\n-                detail: \"if expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"!bar\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"&bar\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"&mut bar\",\n-                detail: \"&mut expr\",\n-            },\n-            CompletionItem {\n-                label: \"while\",\n-                source_range: 40..40,\n-                delete: 36..40,\n-                insert: \"while bar {\\n    $0\\n}\",\n-                detail: \"while expr {}\",\n-            },\n-        ]\n-        \"###\n+        check(\n+            r#\"\n+fn main() {\n+    let bar = true;\n+    bar.<|>\n+}\n+\"#,\n+            expect![[r#\"\n+                sn box Box::new(expr)\n+                sn call function(expr)\n+                sn dbg dbg!(expr)\n+                sn if if expr {}\n+                sn match match expr {}\n+                sn not !expr\n+                sn ref &expr\n+                sn refm &mut expr\n+                sn while while expr {}\n+            \"#]],\n         );\n     }\n \n     #[test]\n-    fn postfix_completion_works_for_option() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                enum Option<T> {\n-                    Some(T),\n-                    None,\n-                }\n-\n-                fn main() {\n-                    let bar = Option::Some(true);\n-                    bar.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"Box::new(bar)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"${1}(bar)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"dbg!(bar)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"ifl\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"if let Some($1) = bar {\\n    $0\\n}\",\n-                detail: \"if let Some {}\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"match bar {\\n    Some(${1:_}) => {$2\\\\},\\n    None => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"!bar\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"&bar\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"&mut bar\",\n-                detail: \"&mut expr\",\n-            },\n-            CompletionItem {\n-                label: \"while\",\n-                source_range: 97..97,\n-                delete: 93..97,\n-                insert: \"while let Some($1) = bar {\\n    $0\\n}\",\n-                detail: \"while let Some {}\",\n-            },\n-        ]\n-        \"###\n-        );\n+    fn postfix_type_filtering() {\n+        check(\n+            r#\"\n+fn main() {\n+    let bar: u8 = 12;\n+    bar.<|>\n+}\n+\"#,\n+            expect![[r#\"\n+                sn box Box::new(expr)\n+                sn call function(expr)\n+                sn dbg dbg!(expr)\n+                sn match match expr {}\n+                sn ref &expr\n+                sn refm &mut expr\n+            \"#]],\n+        )\n     }\n \n     #[test]\n-    fn postfix_completion_works_for_result() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                enum Result<T, E> {\n-                    Ok(T),\n-                    Err(E),\n-                }\n+    fn option_iflet() {\n+        check_edit(\n+            \"ifl\",\n+            r#\"\n+enum Option<T> { Some(T), None }\n+\n+fn main() {\n+    let bar = Option::Some(true);\n+    bar.<|>\n+}\n+\"#,\n+            r#\"\n+enum Option<T> { Some(T), None }\n \n-                fn main() {\n-                    let bar = Result::Ok(true);\n-                    bar.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"Box::new(bar)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"${1}(bar)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"dbg!(bar)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"ifl\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"if let Ok($1) = bar {\\n    $0\\n}\",\n-                detail: \"if let Ok {}\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"match bar {\\n    Ok(${1:_}) => {$2\\\\},\\n    Err(${3:_}) => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"!bar\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"&bar\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"&mut bar\",\n-                detail: \"&mut expr\",\n-            },\n-            CompletionItem {\n-                label: \"while\",\n-                source_range: 98..98,\n-                delete: 94..98,\n-                insert: \"while let Ok($1) = bar {\\n    $0\\n}\",\n-                detail: \"while let Ok {}\",\n-            },\n-        ]\n-        \"###\n+fn main() {\n+    let bar = Option::Some(true);\n+    if let Some($1) = bar {\n+    $0\n+}\n+}\n+\"#,\n         );\n     }\n \n     #[test]\n-    fn some_postfix_completions_ignored() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                fn main() {\n-                    let bar: u8 = 12;\n-                    bar.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"Box::new(bar)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"${1}(bar)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"dbg!(bar)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"!bar\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"&bar\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 42..42,\n-                delete: 38..42,\n-                insert: \"&mut bar\",\n-                detail: \"&mut expr\",\n-            },\n-        ]\n-        \"###\n+    fn result_match() {\n+        check_edit(\n+            \"match\",\n+            r#\"\n+enum Result<T, E> { Ok(T), Err(E) }\n+\n+fn main() {\n+    let bar = Result::Ok(true);\n+    bar.<|>\n+}\n+\"#,\n+            r#\"\n+enum Result<T, E> { Ok(T), Err(E) }\n+\n+fn main() {\n+    let bar = Result::Ok(true);\n+    match bar {\n+    Ok(${1:_}) => {$2},\n+    Err(${3:_}) => {$0},\n+}\n+}\n+\"#,\n         );\n     }\n \n     #[test]\n     fn postfix_completion_works_for_ambiguous_float_literal() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                fn main() {\n-                    42.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"Box::new(42)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"${1}(42)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"dbg!(42)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"match 42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"!42\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"&42\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 19..19,\n-                delete: 16..19,\n-                insert: \"&mut 42\",\n-                detail: \"&mut expr\",\n-            },\n-        ]\n-        \"###\n-        );\n+        check_edit(\"refm\", r#\"fn main() { 42.<|> }\"#, r#\"fn main() { &mut 42 }\"#)\n     }\n \n     #[test]\n     fn works_in_simple_macro() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                macro_rules! m { ($e:expr) => { $e } }\n-                fn main() {\n-                    let bar: u8 = 12;\n-                    m!(bar.b<|>)\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"Box::new(bar)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"${1}(bar)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"dbg!(bar)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"!bar\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"&bar\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 84..85,\n-                delete: 80..85,\n-                insert: \"&mut bar\",\n-                detail: \"&mut expr\",\n-            },\n-        ]\n-        \"###\n+        check_edit(\n+            \"dbg\",\n+            r#\"\n+macro_rules! m { ($e:expr) => { $e } }\n+fn main() {\n+    let bar: u8 = 12;\n+    m!(bar.d<|>)\n+}\n+\"#,\n+            r#\"\n+macro_rules! m { ($e:expr) => { $e } }\n+fn main() {\n+    let bar: u8 = 12;\n+    m!(dbg!(bar))\n+}\n+\"#,\n         );\n     }\n \n     #[test]\n     fn postfix_completion_for_references() {\n-        assert_debug_snapshot!(\n-            do_postfix_completion(\n-                r#\"\n-                fn main() {\n-                    &&&&42.<|>\n-                }\n-                \"#,\n-            ),\n-            @r###\"\n-        [\n-            CompletionItem {\n-                label: \"box\",\n-                source_range: 23..23,\n-                delete: 16..23,\n-                insert: \"Box::new(&&&&42)\",\n-                detail: \"Box::new(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"call\",\n-                source_range: 23..23,\n-                delete: 16..23,\n-                insert: \"${1}(&&&&42)\",\n-                detail: \"function(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"dbg\",\n-                source_range: 23..23,\n-                delete: 16..23,\n-                insert: \"dbg!(&&&&42)\",\n-                detail: \"dbg!(expr)\",\n-            },\n-            CompletionItem {\n-                label: \"match\",\n-                source_range: 23..23,\n-                delete: 16..23,\n-                insert: \"match &&&&42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n-                detail: \"match expr {}\",\n-            },\n-            CompletionItem {\n-                label: \"not\",\n-                source_range: 23..23,\n-                delete: 20..23,\n-                insert: \"!42\",\n-                detail: \"!expr\",\n-            },\n-            CompletionItem {\n-                label: \"ref\",\n-                source_range: 23..23,\n-                delete: 20..23,\n-                insert: \"&42\",\n-                detail: \"&expr\",\n-            },\n-            CompletionItem {\n-                label: \"refm\",\n-                source_range: 23..23,\n-                delete: 20..23,\n-                insert: \"&mut 42\",\n-                detail: \"&mut expr\",\n-            },\n-        ]\n-        \"###\n-        );\n+        check_edit(\"dbg\", r#\"fn main() { &&42.<|> }\"#, r#\"fn main() { dbg!(&&42) }\"#);\n+        check_edit(\"refm\", r#\"fn main() { &&42.<|> }\"#, r#\"fn main() { &&&mut 42 }\"#);\n     }\n }"}]}