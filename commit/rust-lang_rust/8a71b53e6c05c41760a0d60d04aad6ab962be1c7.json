{"sha": "8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNzFiNTNlNmMwNWM0MTc2MGEwZDYwZDA0YWFkNmFiOTYyYmUxYzc=", "commit": {"author": {"name": "Virgile Andreani", "email": "virgile.andreani@anbuco.fr", "date": "2014-01-28T18:40:38Z"}, "committer": {"name": "Virgile Andreani", "email": "virgile.andreani@anbuco.fr", "date": "2014-01-28T22:51:52Z"}, "message": "Rename CopyableVector to CloneableVector", "tree": {"sha": "c39ab3e8f351172f39cbc58161b7b649a22fb8f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c39ab3e8f351172f39cbc58161b7b649a22fb8f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "html_url": "https://github.com/rust-lang/rust/commit/8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/comments", "author": {"login": "Armavica", "id": 5855503, "node_id": "MDQ6VXNlcjU4NTU1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5855503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armavica", "html_url": "https://github.com/Armavica", "followers_url": "https://api.github.com/users/Armavica/followers", "following_url": "https://api.github.com/users/Armavica/following{/other_user}", "gists_url": "https://api.github.com/users/Armavica/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armavica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armavica/subscriptions", "organizations_url": "https://api.github.com/users/Armavica/orgs", "repos_url": "https://api.github.com/users/Armavica/repos", "events_url": "https://api.github.com/users/Armavica/events{/privacy}", "received_events_url": "https://api.github.com/users/Armavica/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Armavica", "id": 5855503, "node_id": "MDQ6VXNlcjU4NTU1MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5855503?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Armavica", "html_url": "https://github.com/Armavica", "followers_url": "https://api.github.com/users/Armavica/followers", "following_url": "https://api.github.com/users/Armavica/following{/other_user}", "gists_url": "https://api.github.com/users/Armavica/gists{/gist_id}", "starred_url": "https://api.github.com/users/Armavica/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Armavica/subscriptions", "organizations_url": "https://api.github.com/users/Armavica/orgs", "repos_url": "https://api.github.com/users/Armavica/repos", "events_url": "https://api.github.com/users/Armavica/events{/privacy}", "received_events_url": "https://api.github.com/users/Armavica/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6bd05303c37d354e08278fcdebd95ca7fec9fd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6bd05303c37d354e08278fcdebd95ca7fec9fd9", "html_url": "https://github.com/rust-lang/rust/commit/c6bd05303c37d354e08278fcdebd95ca7fec9fd9"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "c5c9524f0b35baf9b0e960bd4978b4911b55c58d", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -101,7 +101,7 @@ syn keyword rustTrait ImmutableTuple5 ImmutableTuple6 ImmutableTuple7 ImmutableT\n syn keyword rustTrait ImmutableTuple9 ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n syn keyword rustTrait ImmutableEqVector ImmutableTotalOrdVector ImmutableCopyableVector\n syn keyword rustTrait OwnedVector OwnedCopyableVector OwnedEqVector MutableVector\n-syn keyword rustTrait Vector VectorVector CopyableVector ImmutableVector\n+syn keyword rustTrait Vector VectorVector CloneableVector ImmutableVector\n \n \"syn keyword rustFunction stream\n syn keyword rustTrait Port Chan GenericChan GenericSmartChan GenericPort Peekable"}, {"sha": "6e6aa9ad3faaf48f7b43e1ce1705e2d29f650214", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -72,7 +72,7 @@ use ptr::RawPtr;\n use ptr;\n use str::StrSlice;\n use str;\n-use vec::{CopyableVector, ImmutableVector, MutableVector};\n+use vec::{CloneableVector, ImmutableVector, MutableVector};\n use vec;\n use unstable::intrinsics;\n "}, {"sha": "cfe0bc6be874b64797b026ea0446b25b5f8f25e8", "filename": "src/libstd/io/comm_adapters.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fio%2Fcomm_adapters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fio%2Fcomm_adapters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcomm_adapters.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -15,7 +15,7 @@ use cmp;\n use io;\n use option::{None, Option, Some};\n use super::{Reader, Writer};\n-use vec::{bytes, CopyableVector, MutableVector, ImmutableVector};\n+use vec::{bytes, CloneableVector, MutableVector, ImmutableVector};\n \n /// Allows reading from a port.\n ///"}, {"sha": "67f6d006b5787896ddfbe185460b7c18ff6bbc7c", "filename": "src/libstd/num/strconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fnum%2Fstrconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fnum%2Fstrconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fstrconv.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -18,7 +18,7 @@ use option::{None, Option, Some};\n use char;\n use str::{StrSlice};\n use str;\n-use vec::{CopyableVector, ImmutableVector, MutableVector};\n+use vec::{CloneableVector, ImmutableVector, MutableVector};\n use vec::OwnedVector;\n use num;\n use num::{NumCast, Zero, One, cast, Integer};"}, {"sha": "7c50ad7dfe3fefec61e88660b254349aa46fe2da", "filename": "src/libstd/path/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fpath%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fpath%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fmod.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -73,7 +73,7 @@ use str;\n use str::{OwnedStr, Str, StrSlice};\n use to_str::ToStr;\n use vec;\n-use vec::{CopyableVector, OwnedCopyableVector, OwnedVector, Vector};\n+use vec::{CloneableVector, OwnedCopyableVector, OwnedVector, Vector};\n use vec::{ImmutableEqVector, ImmutableVector};\n \n /// Typedef for POSIX file paths."}, {"sha": "88cd5ab58c769e8f4ea6e455026966282a1af4ef", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -21,7 +21,7 @@ use str;\n use str::Str;\n use to_bytes::IterBytes;\n use vec;\n-use vec::{CopyableVector, RevSplits, Splits, Vector, VectorVector,\n+use vec::{CloneableVector, RevSplits, Splits, Vector, VectorVector,\n           ImmutableEqVector, OwnedVector, ImmutableVector, OwnedCopyableVector};\n use super::{BytesContainer, GenericPath, GenericPathUnsafe};\n \n@@ -332,7 +332,7 @@ impl Path {\n \n     /// Returns a normalized byte vector representation of a path, by removing all empty\n     /// components, and unnecessary . and .. components.\n-    fn normalize<V: Vector<u8>+CopyableVector<u8>>(v: V) -> ~[u8] {\n+    fn normalize<V: Vector<u8>+CloneableVector<u8>>(v: V) -> ~[u8] {\n         // borrowck is being very picky\n         let val = {\n             let is_abs = !v.as_slice().is_empty() && v.as_slice()[0] == SEP_BYTE;"}, {"sha": "5422dace1dd1a55f27eb9cc28c083d28ea890dfa", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -78,7 +78,7 @@ pub use tuple::{Tuple9, Tuple10, Tuple11, Tuple12};\n pub use vec::{ImmutableEqVector, ImmutableTotalOrdVector, ImmutableCopyableVector};\n pub use vec::{OwnedVector, OwnedCopyableVector,OwnedEqVector};\n pub use vec::{MutableVector, MutableTotalOrdVector};\n-pub use vec::{Vector, VectorVector, CopyableVector, ImmutableVector};\n+pub use vec::{Vector, VectorVector, CloneableVector, ImmutableVector};\n \n // Reexported runtime types\n pub use comm::{Port, Chan, SharedChan};"}, {"sha": "9f6a40e879c67ad5b0a408907edaa391f7e61614", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a71b53e6c05c41760a0d60d04aad6ab962be1c7/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=8a71b53e6c05c41760a0d60d04aad6ab962be1c7", "patch": "@@ -798,8 +798,8 @@ impl<T> Container for ~[T] {\n     }\n }\n \n-/// Extension methods for vector slices with copyable elements\n-pub trait CopyableVector<T> {\n+/// Extension methods for vector slices with cloneable elements\n+pub trait CloneableVector<T> {\n     /// Copy `self` into a new owned vector\n     fn to_owned(&self) -> ~[T];\n \n@@ -808,7 +808,7 @@ pub trait CopyableVector<T> {\n }\n \n /// Extension methods for vector slices\n-impl<'a, T: Clone> CopyableVector<T> for &'a [T] {\n+impl<'a, T: Clone> CloneableVector<T> for &'a [T] {\n     /// Returns a copy of `v`.\n     #[inline]\n     fn to_owned(&self) -> ~[T] {\n@@ -824,7 +824,7 @@ impl<'a, T: Clone> CopyableVector<T> for &'a [T] {\n }\n \n /// Extension methods for owned vectors\n-impl<T: Clone> CopyableVector<T> for ~[T] {\n+impl<T: Clone> CloneableVector<T> for ~[T] {\n     #[inline]\n     fn to_owned(&self) -> ~[T] { self.clone() }\n \n@@ -833,7 +833,7 @@ impl<T: Clone> CopyableVector<T> for ~[T] {\n }\n \n /// Extension methods for managed vectors\n-impl<T: Clone> CopyableVector<T> for @[T] {\n+impl<T: Clone> CloneableVector<T> for @[T] {\n     #[inline]\n     fn to_owned(&self) -> ~[T] { self.as_slice().to_owned() }\n "}]}