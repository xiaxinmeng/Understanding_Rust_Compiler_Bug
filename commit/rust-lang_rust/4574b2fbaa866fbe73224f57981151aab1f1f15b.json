{"sha": "4574b2fbaa866fbe73224f57981151aab1f1f15b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NzRiMmZiYWE4NjZmYmU3MzIyNGY1Nzk4MTE1MWFhYjFmMWYxNWI=", "commit": {"author": {"name": "Jonas Hietala", "email": "tradet.h@gmail.com", "date": "2014-07-20T12:45:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-21T16:54:31Z"}, "message": "Main bitv example: prime sieve.", "tree": {"sha": "89ad142f47f6e23deb7b3aeff7692f05140ffb60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89ad142f47f6e23deb7b3aeff7692f05140ffb60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4574b2fbaa866fbe73224f57981151aab1f1f15b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4574b2fbaa866fbe73224f57981151aab1f1f15b", "html_url": "https://github.com/rust-lang/rust/commit/4574b2fbaa866fbe73224f57981151aab1f1f15b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4574b2fbaa866fbe73224f57981151aab1f1f15b/comments", "author": {"login": "treeman", "id": 162027, "node_id": "MDQ6VXNlcjE2MjAyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162027?v=4", "gravatar_id": "", "url": "https://api.github.com/users/treeman", "html_url": "https://github.com/treeman", "followers_url": "https://api.github.com/users/treeman/followers", "following_url": "https://api.github.com/users/treeman/following{/other_user}", "gists_url": "https://api.github.com/users/treeman/gists{/gist_id}", "starred_url": "https://api.github.com/users/treeman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/treeman/subscriptions", "organizations_url": "https://api.github.com/users/treeman/orgs", "repos_url": "https://api.github.com/users/treeman/repos", "events_url": "https://api.github.com/users/treeman/events{/privacy}", "received_events_url": "https://api.github.com/users/treeman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26047f15e5f1db33d66979554c29fba3cf4d2c33", "url": "https://api.github.com/repos/rust-lang/rust/commits/26047f15e5f1db33d66979554c29fba3cf4d2c33", "html_url": "https://github.com/rust-lang/rust/commit/26047f15e5f1db33d66979554c29fba3cf4d2c33"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "75e7642b3e9d88ce596028a421bcfd9f90787682", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4574b2fbaa866fbe73224f57981151aab1f1f15b/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4574b2fbaa866fbe73224f57981151aab1f1f15b/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=4574b2fbaa866fbe73224f57981151aab1f1f15b", "patch": "@@ -8,6 +8,55 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+//! Collections implemented with bit vectors.\n+//!\n+//! # Example\n+//!\n+//! This is a simple example of the [Sieve of Eratosthenes][sieve]\n+//! which calculates prime numbers up to a given limit.\n+//!\n+//! [sieve]: http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\n+//!\n+//! ```\n+//! use std::collections::{BitvSet, Bitv};\n+//! use std::iter;\n+//!\n+//! let max_prime = 10000;\n+//!\n+//! // Store the primes as a BitvSet\n+//! let primes = {\n+//!     let mut bv = Bitv::with_capacity(max_prime, true);\n+//!\n+//!     // Neither 0 nor 1 are prime\n+//!     bv.set(0, false);\n+//!     bv.set(1, false);\n+//!\n+//!     for i in range(2, max_prime) {\n+//!         // if i is a prime\n+//!         if bv.get(i) {\n+//!             // mark all multiples of i as non-prime (any multiples below i * i\n+//!             // will have been marked as non-prime previously)\n+//!             for j in iter::range_step(i * i, max_prime, i) { bv.set(j, false) }\n+//!         }\n+//!     }\n+//!     BitvSet::from_bitv(bv)\n+//! };\n+//!\n+//! // Simple primality tests below our max bound\n+//! let print_primes = 20;\n+//! print!(\"The primes below {} are: \", print_primes);\n+//! for x in range(0, print_primes) {\n+//!     if primes.contains(&x) {\n+//!         print!(\"{} \", x);\n+//!     }\n+//! }\n+//! println!(\"\");\n+//!\n+//! // We can manipulate the internal Bitv\n+//! let num_primes = primes.get_ref().iter().filter(|x| *x).count();\n+//! println!(\"There are {} primes below {}\", num_primes, max_prime);\n+//! ```\n+\n #![allow(missing_doc)]\n \n use core::prelude::*;"}]}