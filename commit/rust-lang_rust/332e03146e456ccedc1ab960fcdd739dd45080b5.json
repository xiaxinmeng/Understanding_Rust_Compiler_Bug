{"sha": "332e03146e456ccedc1ab960fcdd739dd45080b5", "node_id": "C_kwDOAAsO6NoAKDMzMmUwMzE0NmU0NTZjY2VkYzFhYjk2MGZjZGQ3MzlkZDQ1MDgwYjU", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-07-16T10:44:33Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-08-08T19:04:44Z"}, "message": "Fix the lint in clippy itself", "tree": {"sha": "b0ef6684651f21af3798f0e546b14ddaaa5ab942", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0ef6684651f21af3798f0e546b14ddaaa5ab942"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/332e03146e456ccedc1ab960fcdd739dd45080b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/332e03146e456ccedc1ab960fcdd739dd45080b5", "html_url": "https://github.com/rust-lang/rust/commit/332e03146e456ccedc1ab960fcdd739dd45080b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/332e03146e456ccedc1ab960fcdd739dd45080b5/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73cd95465e85f878fc5c30a79ce76a9fb59d690c", "url": "https://api.github.com/repos/rust-lang/rust/commits/73cd95465e85f878fc5c30a79ce76a9fb59d690c", "html_url": "https://github.com/rust-lang/rust/commit/73cd95465e85f878fc5c30a79ce76a9fb59d690c"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "e0b94f7190af31c6d03c0fc41fd208e848c76614", "filename": "clippy_lints/src/dereference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fdereference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fdereference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdereference.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -760,7 +760,7 @@ fn walk_parents<'tcx>(cx: &LateContext<'tcx>, e: &'tcx Expr<'_>) -> (Position, &\n                                     .and_then(|subs| subs.get(1..))\n                                 {\n                                     Some(subs) => cx.tcx.mk_substs(subs.iter().copied()),\n-                                    None => cx.tcx.mk_substs([].iter()),\n+                                    None => cx.tcx.mk_substs(std::iter::empty::<ty::subst::GenericArg<'_>>()),\n                                 } && let impl_ty = if cx.tcx.fn_sig(id).skip_binder().inputs()[0].is_ref() {\n                                     // Trait methods taking `&self`\n                                     sub_ty"}, {"sha": "9ca443b7dff6cbe67a24c5008dee96d2d09be293", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -516,7 +516,10 @@ fn param_env_for_derived_eq(tcx: TyCtxt<'_>, did: DefId, eq_trait_id: DefId) ->\n         tcx.mk_predicates(ty_predicates.iter().map(|&(p, _)| p).chain(\n             params.iter().filter(|&&(_, needs_eq)| needs_eq).map(|&(param, _)| {\n                 tcx.mk_predicate(Binder::dummy(PredicateKind::Trait(TraitPredicate {\n-                    trait_ref: TraitRef::new(eq_trait_id, tcx.mk_substs([tcx.mk_param_from_def(param)].into_iter())),\n+                    trait_ref: TraitRef::new(\n+                        eq_trait_id,\n+                        tcx.mk_substs(std::iter::once(tcx.mk_param_from_def(param))),\n+                    ),\n                     constness: BoundConstness::NotConst,\n                     polarity: ImplPolarity::Positive,\n                 })))"}, {"sha": "8693ca9af83003f2492158e481fae972649e5276", "filename": "clippy_lints/src/redundant_slicing.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Fredundant_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_slicing.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -11,6 +11,8 @@ use rustc_middle::ty::adjustment::{Adjust, AutoBorrow, AutoBorrowMutability};\n use rustc_middle::ty::subst::GenericArg;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n+use std::iter;\n+\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for redundant slicing expressions which use the full range, and\n@@ -134,7 +136,7 @@ impl<'tcx> LateLintPass<'tcx> for RedundantSlicing {\n                 } else if let Some(target_id) = cx.tcx.lang_items().deref_target() {\n                     if let Ok(deref_ty) = cx.tcx.try_normalize_erasing_regions(\n                         cx.param_env,\n-                        cx.tcx.mk_projection(target_id, cx.tcx.mk_substs([GenericArg::from(indexed_ty)].into_iter())),\n+                        cx.tcx.mk_projection(target_id, cx.tcx.mk_substs(iter::once(GenericArg::from(indexed_ty)))),\n                     ) {\n                         if deref_ty == expr_ty {\n                             let snip = snippet_with_context(cx, indexed.span, ctxt, \"..\", &mut app).0;"}, {"sha": "f3ba096237f567c238b4f7984aa4d8fb6c50ca14", "filename": "clippy_lints/src/types/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes%2Fmod.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -490,6 +490,7 @@ impl Types {\n                         }\n                     }\n                 }\n+                #[allow(clippy::iter_empty)]\n                 match *qpath {\n                     QPath::Resolved(Some(ty), p) => {\n                         context.is_nested_call = true;"}, {"sha": "47b72f4783e32bd7525b5524c36889822f9c546e", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -350,7 +350,7 @@ define_Conf! {\n     /// Lint: DISALLOWED_SCRIPT_IDENTS.\n     ///\n     /// The list of unicode scripts allowed to be used in the scope.\n-    (allowed_scripts: Vec<String> = [\"Latin\"].iter().map(ToString::to_string).collect()),\n+    (allowed_scripts: Vec<String> = vec![\"Latin\".to_string()]),\n     /// Lint: NON_SEND_FIELDS_IN_SEND_TY.\n     ///\n     /// Whether to apply the raw pointer heuristic to determine if a type is `Send`."}, {"sha": "b1148bccc2a283d025cb530f18197437bfbe9079", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/332e03146e456ccedc1ab960fcdd739dd45080b5/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=332e03146e456ccedc1ab960fcdd739dd45080b5", "patch": "@@ -797,7 +797,7 @@ fn get_lint_group_and_level_or_lint(\n     let result = cx.lint_store.check_lint_name(\n         lint_name,\n         Some(sym::clippy),\n-        &[Ident::with_dummy_span(sym::clippy)].into_iter().collect(),\n+        &std::iter::once(Ident::with_dummy_span(sym::clippy)).collect(),\n     );\n     if let CheckLintNameResult::Tool(Ok(lint_lst)) = result {\n         if let Some(group) = get_lint_group(cx, lint_lst[0]) {"}]}