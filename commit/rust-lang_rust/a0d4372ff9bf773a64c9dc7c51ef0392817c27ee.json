{"sha": "a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZDQzNzJmZjliZjc3M2E2NGM5ZGM3YzUxZWYwMzkyODE3YzI3ZWU=", "commit": {"author": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T12:28:05Z"}, "committer": {"name": "Frank Steffahn", "email": "frank.steffahn@stu.uni-kiel.de", "date": "2021-08-22T14:42:23Z"}, "message": "Fix typos \u201ca\u201d\u2192\u201can\u201d", "tree": {"sha": "1a6b6f51c3383e3ff4b0ca91777833902c6b4742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a6b6f51c3383e3ff4b0ca91777833902c6b4742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "html_url": "https://github.com/rust-lang/rust/commit/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee/comments", "author": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steffahn", "id": 3986214, "node_id": "MDQ6VXNlcjM5ODYyMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3986214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steffahn", "html_url": "https://github.com/steffahn", "followers_url": "https://api.github.com/users/steffahn/followers", "following_url": "https://api.github.com/users/steffahn/following{/other_user}", "gists_url": "https://api.github.com/users/steffahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/steffahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steffahn/subscriptions", "organizations_url": "https://api.github.com/users/steffahn/orgs", "repos_url": "https://api.github.com/users/steffahn/repos", "events_url": "https://api.github.com/users/steffahn/events{/privacy}", "received_events_url": "https://api.github.com/users/steffahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19691b2de84f0f35a6633d5409101f7f4b93662a", "url": "https://api.github.com/repos/rust-lang/rust/commits/19691b2de84f0f35a6633d5409101f7f4b93662a", "html_url": "https://github.com/rust-lang/rust/commit/19691b2de84f0f35a6633d5409101f7f4b93662a"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "9e5dfd9dbaf0d39596a82932164169fb777ba62d", "filename": "src/data_race.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee/src%2Fdata_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0d4372ff9bf773a64c9dc7c51ef0392817c27ee/src%2Fdata_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdata_race.rs?ref=a0d4372ff9bf773a64c9dc7c51ef0392817c27ee", "patch": "@@ -42,7 +42,7 @@\n //!    order exists in which all threads observe all modifications in the same\n //!    order (see Sequentially-consistent ordering below) \"\n //! So in the absence of weak memory effects a seq-cst load & a seq-cst store is identical\n-//! to a acquire load and a release store given the global sequentially consistent order\n+//! to an acquire load and a release store given the global sequentially consistent order\n //! of the schedule.\n //!\n //! The timestamps used in the data-race detector assign each sequence of non-atomic operations\n@@ -142,7 +142,7 @@ impl ThreadClockSet {\n         self.fence_release.clone_from(&self.clock);\n     }\n \n-    /// Apply the effects of a acquire fence to this\n+    /// Apply the effects of an acquire fence to this\n     /// set of thread vector clocks.\n     #[inline]\n     fn apply_acquire_fence(&mut self) {\n@@ -503,7 +503,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n         this.validate_atomic_store(dest, atomic)\n     }\n \n-    /// Perform a atomic operation on a memory location.\n+    /// Perform an atomic operation on a memory location.\n     fn atomic_op_immediate(\n         &mut self,\n         place: &MPlaceTy<'tcx, Tag>,\n@@ -695,7 +695,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: MiriEvalContextExt<'mir, 'tcx> {\n                 log::trace!(\"Atomic fence on {:?} with ordering {:?}\", index, atomic);\n \n                 // Apply data-race detection for the current fences\n-                // this treats AcqRel and SeqCst as the same as a acquire\n+                // this treats AcqRel and SeqCst as the same as an acquire\n                 // and release fence applied in the same timestamp.\n                 if atomic != AtomicFenceOp::Release {\n                     // Either Acquire | AcqRel | SeqCst"}]}