{"sha": "5e2ff63e29c20353b9929337e4c3b641adbf488f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMmZmNjNlMjljMjAzNTNiOTkyOTMzN2U0YzNiNjQxYWRiZjQ4OGY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-18T22:24:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-18T22:24:42Z"}, "message": "Rollup merge of #55919 - Turbo87:num-tests, r=dtolnay\n\ncore/tests/num: Simplify `test_int_from_str_overflow()` test code\n\nThis commit changes the test code to compare against easier-to-read, static values instead of relying on the result of `wrapping_add()` which may or may not result in the value that we expect.", "tree": {"sha": "f58a0244c2880c68e65bb2c8a6900ec269bc2f33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f58a0244c2880c68e65bb2c8a6900ec269bc2f33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e2ff63e29c20353b9929337e4c3b641adbf488f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb8eaqCRBK7hj4Ov3rIwAAdHIIADj4ck7OtZmAJTzU4ZIH5SNe\n7zj8VFeDLagDPmCSTupzJF5wTG79px7K6SAK2Xo/v8oATg+M4HuFIgqXJwnL9iZP\novuss0jf7AKIFi4HkiyEVSubRmisfjF643Cpo3E7R1qdahts98/+Nf7MXAaLs9rd\nhVQZChT9Rvq04XSZoNxvDuExMeJnvsqeNfghpphgLqcJg9RCSiA4aNP4IqdT1gq1\nEDj6JvvXFP/kSTerWyqVEsa2ZFIGoPqh3GhTxnvv5v0DHYitLsRv8eU1YkS8/VXL\nGhXmvIyQq7mIZZQiEKxq5yua1yP7sz1G8umX4iiJJSQpEgPsTq5n26KDZfd/eGY=\n=X/s1\n-----END PGP SIGNATURE-----\n", "payload": "tree f58a0244c2880c68e65bb2c8a6900ec269bc2f33\nparent c87c31b1114ff80110fa160cae648bc54275c553\nparent cfbae3e1940f75fa1f5f99bf60f68ed9756a202b\nauthor Pietro Albini <pietro@pietroalbini.org> 1542579882 +0100\ncommitter GitHub <noreply@github.com> 1542579882 +0100\n\nRollup merge of #55919 - Turbo87:num-tests, r=dtolnay\n\ncore/tests/num: Simplify `test_int_from_str_overflow()` test code\n\nThis commit changes the test code to compare against easier-to-read, static values instead of relying on the result of `wrapping_add()` which may or may not result in the value that we expect.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e2ff63e29c20353b9929337e4c3b641adbf488f", "html_url": "https://github.com/rust-lang/rust/commit/5e2ff63e29c20353b9929337e4c3b641adbf488f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e2ff63e29c20353b9929337e4c3b641adbf488f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c87c31b1114ff80110fa160cae648bc54275c553", "url": "https://api.github.com/repos/rust-lang/rust/commits/c87c31b1114ff80110fa160cae648bc54275c553", "html_url": "https://github.com/rust-lang/rust/commit/c87c31b1114ff80110fa160cae648bc54275c553"}, {"sha": "cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b", "html_url": "https://github.com/rust-lang/rust/commit/cfbae3e1940f75fa1f5f99bf60f68ed9756a202b"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "0928f7560e175cd818c3d7353247f0d2c89f0be8", "filename": "src/libcore/tests/num/mod.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5e2ff63e29c20353b9929337e4c3b641adbf488f/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e2ff63e29c20353b9929337e4c3b641adbf488f/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs?ref=5e2ff63e29c20353b9929337e4c3b641adbf488f", "patch": "@@ -82,36 +82,28 @@ fn from_str_issue7588() {\n \n #[test]\n fn test_int_from_str_overflow() {\n-    let mut i8_val: i8 = 127;\n-    assert_eq!(\"127\".parse::<i8>().ok(), Some(i8_val));\n+    assert_eq!(\"127\".parse::<i8>().ok(), Some(127i8));\n     assert_eq!(\"128\".parse::<i8>().ok(), None);\n \n-    i8_val = i8_val.wrapping_add(1);\n-    assert_eq!(\"-128\".parse::<i8>().ok(), Some(i8_val));\n+    assert_eq!(\"-128\".parse::<i8>().ok(), Some(-128i8));\n     assert_eq!(\"-129\".parse::<i8>().ok(), None);\n \n-    let mut i16_val: i16 = 32_767;\n-    assert_eq!(\"32767\".parse::<i16>().ok(), Some(i16_val));\n+    assert_eq!(\"32767\".parse::<i16>().ok(), Some(32_767i16));\n     assert_eq!(\"32768\".parse::<i16>().ok(), None);\n \n-    i16_val = i16_val.wrapping_add(1);\n-    assert_eq!(\"-32768\".parse::<i16>().ok(), Some(i16_val));\n+    assert_eq!(\"-32768\".parse::<i16>().ok(), Some(-32_768i16));\n     assert_eq!(\"-32769\".parse::<i16>().ok(), None);\n \n-    let mut i32_val: i32 = 2_147_483_647;\n-    assert_eq!(\"2147483647\".parse::<i32>().ok(), Some(i32_val));\n+    assert_eq!(\"2147483647\".parse::<i32>().ok(), Some(2_147_483_647i32));\n     assert_eq!(\"2147483648\".parse::<i32>().ok(), None);\n \n-    i32_val = i32_val.wrapping_add(1);\n-    assert_eq!(\"-2147483648\".parse::<i32>().ok(), Some(i32_val));\n+    assert_eq!(\"-2147483648\".parse::<i32>().ok(), Some(-2_147_483_648i32));\n     assert_eq!(\"-2147483649\".parse::<i32>().ok(), None);\n \n-    let mut i64_val: i64 = 9_223_372_036_854_775_807;\n-    assert_eq!(\"9223372036854775807\".parse::<i64>().ok(), Some(i64_val));\n+    assert_eq!(\"9223372036854775807\".parse::<i64>().ok(), Some(9_223_372_036_854_775_807i64));\n     assert_eq!(\"9223372036854775808\".parse::<i64>().ok(), None);\n \n-    i64_val = i64_val.wrapping_add(1);\n-    assert_eq!(\"-9223372036854775808\".parse::<i64>().ok(), Some(i64_val));\n+    assert_eq!(\"-9223372036854775808\".parse::<i64>().ok(), Some(-9_223_372_036_854_775_808i64));\n     assert_eq!(\"-9223372036854775809\".parse::<i64>().ok(), None);\n }\n "}]}