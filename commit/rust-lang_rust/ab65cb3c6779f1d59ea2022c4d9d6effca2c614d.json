{"sha": "ab65cb3c6779f1d59ea2022c4d9d6effca2c614d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNjVjYjNjNjc3OWYxZDU5ZWEyMDIyYzRkOWQ2ZWZmY2EyYzYxNGQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-05T18:01:12Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-05T18:01:12Z"}, "message": "support relative XARGO_RUST_SRC", "tree": {"sha": "2cda37593d08229cdb77c9854ab5ad7b0c457947", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cda37593d08229cdb77c9854ab5ad7b0c457947"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d", "html_url": "https://github.com/rust-lang/rust/commit/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a0605d62f4e472e0dc28917a3201332980526aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a0605d62f4e472e0dc28917a3201332980526aa", "html_url": "https://github.com/rust-lang/rust/commit/9a0605d62f4e472e0dc28917a3201332980526aa"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "68f25b411a9d929555a787c6d54a3b18f83be8e1", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab65cb3c6779f1d59ea2022c4d9d6effca2c614d/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=ab65cb3c6779f1d59ea2022c4d9d6effca2c614d", "patch": "@@ -257,7 +257,10 @@ fn setup(subcommand: MiriCommand) {\n \n     // Determine where the rust sources are located.  `XARGO_RUST_SRC` env var trumps everything.\n     let rust_src = match std::env::var_os(\"XARGO_RUST_SRC\") {\n-        Some(val) => PathBuf::from(val),\n+        Some(val) => {\n+            let val = PathBuf::from(val);\n+            val.canonicalize().unwrap_or(val)\n+        }\n         None => {\n             // Check for `rust-src` rustup component.\n             let sysroot = miri()"}]}