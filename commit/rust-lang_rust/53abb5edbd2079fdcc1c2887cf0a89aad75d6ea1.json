{"sha": "53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYWJiNWVkYmQyMDc5ZmRjYzFjMjg4N2NmMGE4OWFhZDc1ZDZlYTE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-19T13:56:29Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-09-19T13:56:29Z"}, "message": "use && for fn() even in legacy mode to work around mem leak", "tree": {"sha": "04e41a90d5260e20601552147ba076141c819f8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04e41a90d5260e20601552147ba076141c819f8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1", "html_url": "https://github.com/rust-lang/rust/commit/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d4928f7808813de62fefcb89139bfb7382b250b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d4928f7808813de62fefcb89139bfb7382b250b", "html_url": "https://github.com/rust-lang/rust/commit/8d4928f7808813de62fefcb89139bfb7382b250b"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "78a5485ebaef40079fcd7ac3648c906111b5ceb3", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=53abb5edbd2079fdcc1c2887cf0a89aad75d6ea1", "patch": "@@ -1090,12 +1090,22 @@ pure fn mach_sty(cfg: @session::config, t: t) -> sty {\n }\n \n fn default_arg_mode_for_ty(tcx: ctxt, ty: ty::t) -> ast::rmode {\n-    if ty::type_is_immediate(ty) {\n+    return if ty::type_is_immediate(ty) {\n         ast::by_val\n-    } else if tcx.legacy_modes {\n+    } else if tcx.legacy_modes || type_is_fn(ty) {\n+        //                        ^^^^^^^^^^^^^^\n+        // FIXME(#2202) --- We retain by-ref by default to workaround a memory\n+        // leak that otherwise results when @fn is upcast to &fn.\n         ast::by_ref\n     } else {\n         ast::by_copy\n+    };\n+\n+    fn type_is_fn(ty: t) -> bool {\n+        match get(ty).sty {\n+            ty_fn(*) => true,\n+            _ => false\n+        }\n     }\n }\n "}]}