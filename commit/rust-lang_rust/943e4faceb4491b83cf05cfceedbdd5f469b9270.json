{"sha": "943e4faceb4491b83cf05cfceedbdd5f469b9270", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0M2U0ZmFjZWI0NDkxYjgzY2YwNWNmY2VlZGJkZDVmNDY5YjkyNzA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-20T10:36:33Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-20T11:31:59Z"}, "message": "Show enum variant on Self qualified paths", "tree": {"sha": "e6daf7ff8f426c25479b28cef33fb535246ee554", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6daf7ff8f426c25479b28cef33fb535246ee554"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/943e4faceb4491b83cf05cfceedbdd5f469b9270", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/943e4faceb4491b83cf05cfceedbdd5f469b9270", "html_url": "https://github.com/rust-lang/rust/commit/943e4faceb4491b83cf05cfceedbdd5f469b9270", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/943e4faceb4491b83cf05cfceedbdd5f469b9270/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3125555a8de6fad4529408436800a6b1243a442", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3125555a8de6fad4529408436800a6b1243a442", "html_url": "https://github.com/rust-lang/rust/commit/f3125555a8de6fad4529408436800a6b1243a442"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "882c4dcbce954327668f626f4f566f97ea7a1db3", "filename": "crates/completion/src/completions/qualified_path.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/943e4faceb4491b83cf05cfceedbdd5f469b9270/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/943e4faceb4491b83cf05cfceedbdd5f469b9270/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fqualified_path.rs?ref=943e4faceb4491b83cf05cfceedbdd5f469b9270", "patch": "@@ -118,6 +118,12 @@ pub(crate) fn complete_qualified_path(acc: &mut Completions, ctx: &CompletionCon\n                     _ => return,\n                 };\n \n+                if let Some(Adt::Enum(e)) = ty.as_adt() {\n+                    for variant in e.variants(ctx.db) {\n+                        acc.add_enum_variant(ctx, variant, None);\n+                    }\n+                }\n+\n                 let traits_in_scope = ctx.scope.traits_in_scope();\n                 let mut seen = FxHashSet::default();\n                 ty.iterate_path_candidates(ctx.db, krate, &traits_in_scope, None, |_ty, item| {\n@@ -752,4 +758,27 @@ fn main() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn completes_self_enum() {\n+        check(\n+            r#\"\n+enum Foo {\n+    Bar,\n+    Baz,\n+}\n+\n+impl Foo {\n+    fn foo(self) {\n+        Self::<|>\n+    }\n+}\n+\"#,\n+            expect![[r#\"\n+                ev Bar    ()\n+                ev Baz    ()\n+                me foo(\u2026) fn foo(self)\n+            \"#]],\n+        );\n+    }\n }"}]}