{"sha": "c10eb221da59f6fabe308e79d11df5b86855da5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMGViMjIxZGE1OWY2ZmFiZTMwOGU3OWQxMWRmNWI4Njg1NWRhNWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-19T23:50:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-21T01:23:48Z"}, "message": "Get windows working under the bare function regime\n\nHad to ignore some task failure tests due to the current implementation\nof spawn which guarantees that there's always something in the spawned\ntask that needs to be unwound.\n\nFixed some win-specific build problems.", "tree": {"sha": "0072e619f558393a431152a34e84f1acdeb1c261", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0072e619f558393a431152a34e84f1acdeb1c261"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c10eb221da59f6fabe308e79d11df5b86855da5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c10eb221da59f6fabe308e79d11df5b86855da5a", "html_url": "https://github.com/rust-lang/rust/commit/c10eb221da59f6fabe308e79d11df5b86855da5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c10eb221da59f6fabe308e79d11df5b86855da5a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c38f7dfd7ccf2e57913500f8a7548b2b8de1932", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c38f7dfd7ccf2e57913500f8a7548b2b8de1932", "html_url": "https://github.com/rust-lang/rust/commit/5c38f7dfd7ccf2e57913500f8a7548b2b8de1932"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "f3c7bc9406c3fb1268472db11a852500746aefbb", "filename": "src/compiletest/procsrv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Fcompiletest%2Fprocsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Fcompiletest%2Fprocsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fprocsrv.rs?ref=c10eb221da59f6fabe308e79d11df5b86855da5a", "patch": "@@ -164,7 +164,7 @@ fn maybe_with_lib_path<@T>(_path: str, f: fn@() -> T) -> T {\n     f()\n }\n \n-fn with_lib_path<@T>(path: str, f: fn() -> T) -> T {\n+fn with_lib_path<@T>(path: str, f: fn@() -> T) -> T {\n     let maybe_oldpath = getenv(util::lib_path_env_var());\n     append_lib_path(path);\n     let res = f();"}, {"sha": "ca67e2ead6e40bef2c4d47444f1ecd8bc588915c", "filename": "src/test/run-pass/terminate-in-initializer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fterminate-in-initializer.rs?ref=c10eb221da59f6fabe308e79d11df5b86855da5a", "patch": "@@ -1,3 +1,4 @@\n+// xfail-win32 leaks\n // Issue #787\n // Don't try to clean up uninitizaed locals\n "}, {"sha": "8ed8b56af3df475ead4f5adc99380fb4dd202d77", "filename": "src/test/stdtest/task.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Ftest%2Fstdtest%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c10eb221da59f6fabe308e79d11df5b86855da5a/src%2Ftest%2Fstdtest%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fstdtest%2Ftask.rs?ref=c10eb221da59f6fabe308e79d11df5b86855da5a", "patch": "@@ -5,7 +5,15 @@ import std::comm;\n #[test]\n fn test_sleep() { task::sleep(1000000u); }\n \n+// FIXME: Leaks on windows\n #[test]\n+#[cfg(target_os = \"win32\")]\n+#[ignore]\n+fn test_unsupervise() { }\n+\n+#[test]\n+#[cfg(target_os = \"macos\")]\n+#[cfg(target_os = \"linux\")]\n fn test_unsupervise() {\n     fn# f(&&_i: ()) { task::unsupervise(); fail; }\n     task::spawn((), f);\n@@ -38,7 +46,15 @@ fn test_join_chan() {\n     }\n }\n \n+// FIXME: Leaks on windows\n+#[test]\n+#[cfg(target_os = \"win32\")]\n+#[ignore]\n+fn test_join_chan_fail() { }\n+\n #[test]\n+#[cfg(target_os = \"macos\")]\n+#[cfg(target_os = \"linux\")]\n fn test_join_chan_fail() {\n     fn# failer(&&_i: ()) { task::unsupervise(); fail }\n "}]}