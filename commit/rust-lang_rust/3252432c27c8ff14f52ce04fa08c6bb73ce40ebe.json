{"sha": "3252432c27c8ff14f52ce04fa08c6bb73ce40ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNTI0MzJjMjdjOGZmMTRmNTJjZTA0ZmEwOGM2YmI3M2NlNDBlYmU=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-02T21:06:50Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-06-18T22:24:38Z"}, "message": "improve comments for unsized suggestions", "tree": {"sha": "321c7b1ae1241e4712c8c0d8f21dc533f5b46f53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/321c7b1ae1241e4712c8c0d8f21dc533f5b46f53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe", "html_url": "https://github.com/rust-lang/rust/commit/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69f0dc69a45889f58c5e13fabdd8c8eabfd604a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/69f0dc69a45889f58c5e13fabdd8c8eabfd604a1", "html_url": "https://github.com/rust-lang/rust/commit/69f0dc69a45889f58c5e13fabdd8c8eabfd604a1"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "648cd483bf6c426a6f18f9d5da204fff84b715e2", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3252432c27c8ff14f52ce04fa08c6bb73ce40ebe/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=3252432c27c8ff14f52ce04fa08c6bb73ce40ebe", "patch": "@@ -1811,6 +1811,8 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n             .iter()\n             .filter(|param| param.span == span)\n             .filter(|param| {\n+                // Check that none of the explicit trait bounds is `Sized`. Assume that an explicit\n+                // `Sized` bound is there intentionally and we don't need to suggest relaxing it.\n                 param\n                     .bounds\n                     .iter()\n@@ -1827,6 +1829,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n                 item\n                 @\n                 hir::Item {\n+                    // Only suggest indirection for uses of type parameters in ADTs.\n                     kind:\n                         hir::ItemKind::Enum(..) | hir::ItemKind::Struct(..) | hir::ItemKind::Union(..),\n                     ..\n@@ -1838,6 +1841,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n             }\n             _ => {}\n         };\n+        // Didn't add an indirection suggestion, so add a general suggestion to relax `Sized`.\n         let (span, separator) = match param.bounds {\n             [] => (span.shrink_to_hi(), \":\"),\n             [.., bound] => (bound.span().shrink_to_hi(), \" +\"),\n@@ -1858,7 +1862,7 @@ impl<'a, 'tcx> InferCtxtPrivExt<'tcx> for InferCtxt<'a, 'tcx> {\n     ) -> bool {\n         // Suggesting `T: ?Sized` is only valid in an ADT if `T` is only used in a\n         // borrow. `struct S<'a, T: ?Sized>(&'a T);` is valid, `struct S<T: ?Sized>(T);`\n-        // is not.\n+        // is not. Look for invalid \"bare\" parameter uses, and suggest using indirection.\n         let mut visitor =\n             FindTypeParam { param: param.name.ident().name, invalid_spans: vec![], nested: false };\n         visitor.visit_item(item);"}]}