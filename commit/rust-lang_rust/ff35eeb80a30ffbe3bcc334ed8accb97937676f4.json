{"sha": "ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMzVlZWI4MGEzMGZmYmUzYmNjMzM0ZWQ4YWNjYjk3OTM3Njc2ZjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-10T16:12:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-19T08:29:29Z"}, "message": "Recycle skolemization counts and add some comments.", "tree": {"sha": "73d66fbf1d4336aebe395f34e728fb7d425f778f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73d66fbf1d4336aebe395f34e728fb7d425f778f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "html_url": "https://github.com/rust-lang/rust/commit/ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff35eeb80a30ffbe3bcc334ed8accb97937676f4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7be059ffcd640096911b62b9135d2ffbf3a05abc", "url": "https://api.github.com/repos/rust-lang/rust/commits/7be059ffcd640096911b62b9135d2ffbf3a05abc", "html_url": "https://github.com/rust-lang/rust/commit/7be059ffcd640096911b62b9135d2ffbf3a05abc"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "d462c223bc65b2174241ac3cf2342353a07b4a35", "filename": "src/librustc/middle/infer/higher_ranked/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ff35eeb80a30ffbe3bcc334ed8accb97937676f4/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff35eeb80a30ffbe3bcc334ed8accb97937676f4/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "patch": "@@ -76,7 +76,9 @@ impl<'tcx,C> HigherRankedRelations<'tcx> for C\n             // fresh concrete region.\n             let (b_prime, skol_map) = {\n                 replace_late_bound_regions(self.tcx(), b, |br, _| {\n-                    let skol = self.infcx().region_vars.new_skolemized(br);\n+                    let skol =\n+                        self.infcx().region_vars.new_skolemized(\n+                            br, &snapshot.region_vars_snapshot);\n                     debug!(\"Bound region {} skolemized to {}\",\n                            bound_region_to_string(self.tcx(), \"\", false, br),\n                            skol);"}, {"sha": "d34373e66a1e029aceae2923c462f5510d7eaa00", "filename": "src/librustc/middle/infer/region_inference/mod.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ff35eeb80a30ffbe3bcc334ed8accb97937676f4/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff35eeb80a30ffbe3bcc334ed8accb97937676f4/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs?ref=ff35eeb80a30ffbe3bcc334ed8accb97937676f4", "patch": "@@ -226,7 +226,8 @@ pub struct RegionVarBindings<'a, 'tcx: 'a> {\n #[deriving(Show)]\n #[allow(missing_copy_implementations)]\n pub struct RegionSnapshot {\n-    length: uint\n+    length: uint,\n+    skolemization_count: uint,\n }\n \n impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n@@ -254,7 +255,7 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         let length = self.undo_log.borrow().len();\n         debug!(\"RegionVarBindings: start_snapshot({})\", length);\n         self.undo_log.borrow_mut().push(OpenSnapshot);\n-        RegionSnapshot { length: length }\n+        RegionSnapshot { length: length, skolemization_count: self.skolemization_count.get() }\n     }\n \n     pub fn commit(&self, snapshot: RegionSnapshot) {\n@@ -268,6 +269,7 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         } else {\n             (*undo_log)[snapshot.length] = CommitedSnapshot;\n         }\n+        self.skolemization_count.set(snapshot.skolemization_count);\n     }\n \n     pub fn rollback_to(&self, snapshot: RegionSnapshot) {\n@@ -306,6 +308,7 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         }\n         let c = undo_log.pop().unwrap();\n         assert!(c == OpenSnapshot);\n+        self.skolemization_count.set(snapshot.skolemization_count);\n     }\n \n     pub fn num_vars(&self) -> uint {\n@@ -324,7 +327,25 @@ impl<'a, 'tcx> RegionVarBindings<'a, 'tcx> {\n         return vid;\n     }\n \n-    pub fn new_skolemized(&self, br: ty::BoundRegion) -> Region {\n+    /// Creates a new skolemized region. Skolemized regions are fresh\n+    /// regions used when performing higher-ranked computations. They\n+    /// must be used in a very particular way and are never supposed\n+    /// to \"escape\" out into error messages or the code at large.\n+    ///\n+    /// The idea is to always create a snapshot. Skolemized regions\n+    /// can be created in the context of this snapshot, but once the\n+    /// snapshot is commited or rolled back, their numbers will be\n+    /// recycled, so you must be finished with them. See the extensive\n+    /// comments in `higher_ranked.rs` to see how it works (in\n+    /// particular, the subtyping comparison).\n+    ///\n+    /// The `snapshot` argument to this function is not really used;\n+    /// it's just there to make it explicit which snapshot bounds the\n+    /// skolemized region that results.\n+    pub fn new_skolemized(&self, br: ty::BoundRegion, snapshot: &RegionSnapshot) -> Region {\n+        assert!(self.in_snapshot());\n+        assert!(self.undo_log.borrow()[snapshot.length] == OpenSnapshot);\n+\n         let sc = self.skolemization_count.get();\n         self.skolemization_count.set(sc + 1);\n         ReInfer(ReSkolemized(sc, br))"}]}