{"sha": "c459ab3a0f6ddb980d03abf68ed08ffd1bf41307", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NTlhYjNhMGY2ZGRiOTgwZDAzYWJmNjhlZDA4ZmZkMWJmNDEzMDc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-17T09:06:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-17T09:06:25Z"}, "message": "Rollup merge of #79088 - euclio:span-label-doc, r=estebank\n\nclarify `span_label` documentation\n\nFixes #71857.\n\nr? ``@estebank``\n\ncc ``@RalfJung``", "tree": {"sha": "5322e38012e0cf94735356c41c7becb634af4141", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5322e38012e0cf94735356c41c7becb634af4141"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfs5KRCRBK7hj4Ov3rIwAAdHIIAGGw5akR8Ea6+esCMOLa92S1\nJiqJN+R0T4bZcY1NJC1SjpKeSSakAI6Z6aWmuLfave+V+AUSHdLn4xPXofBwUz9v\nT2x5JsgMMHTKo5zHd2Tarx004T88cU7KFu+FF2kea0pLS3VaBGOdV2stTuBhiu6F\nfKQIvwCFN9uVZ2iD2+NkBwhKI1DU6JQtF1sQsDQJpXvUiXemlTnDd615M1ZQxELq\nSYyk/60x7izypMgGnwEViHuVvjkyolIFCTiucbutais8tbYs0feneatuI7WSmw3K\nqEdT53FNMg/LA1s8QwgQzIccWPfEw8Q5QPr5ZCUI/cJgwBAsdgRczpadWXwGD9U=\n=w5dv\n-----END PGP SIGNATURE-----\n", "payload": "tree 5322e38012e0cf94735356c41c7becb634af4141\nparent 70a4e433b1de88bd520582c7cfd035d6dd658925\nparent a78966df830c7be793823c7e5ba32c3cacad26e3\nauthor Mara Bos <m-ou.se@m-ou.se> 1605603985 +0100\ncommitter GitHub <noreply@github.com> 1605603985 +0100\n\nRollup merge of #79088 - euclio:span-label-doc, r=estebank\n\nclarify `span_label` documentation\n\nFixes #71857.\n\nr? ``@estebank``\n\ncc ``@RalfJung``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307", "html_url": "https://github.com/rust-lang/rust/commit/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70a4e433b1de88bd520582c7cfd035d6dd658925", "url": "https://api.github.com/repos/rust-lang/rust/commits/70a4e433b1de88bd520582c7cfd035d6dd658925", "html_url": "https://github.com/rust-lang/rust/commit/70a4e433b1de88bd520582c7cfd035d6dd658925"}, {"sha": "a78966df830c7be793823c7e5ba32c3cacad26e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a78966df830c7be793823c7e5ba32c3cacad26e3", "html_url": "https://github.com/rust-lang/rust/commit/a78966df830c7be793823c7e5ba32c3cacad26e3"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "c9259a1502c8d8c518eb586ba91e1702669d1ddb", "filename": "compiler/rustc_errors/src/diagnostic_builder.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c459ab3a0f6ddb980d03abf68ed08ffd1bf41307/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic_builder.rs?ref=c459ab3a0f6ddb980d03abf68ed08ffd1bf41307", "patch": "@@ -184,16 +184,18 @@ impl<'a> DiagnosticBuilder<'a> {\n         self.cancel();\n     }\n \n-    /// Adds a span/label to be included in the resulting snippet.\n+    /// Appends a labeled span to the diagnostic.\n     ///\n-    /// This is pushed onto the [`MultiSpan`] that was created when the diagnostic\n-    /// was first built. That means it will be shown together with the original\n-    /// span/label, *not* a span added by one of the `span_{note,warn,help,suggestions}` methods.\n+    /// Labels are used to convey additional context for the diagnostic's primary span. They will\n+    /// be shown together with the original diagnostic's span, *not* with spans added by\n+    /// `span_note`, `span_help`, etc. Therefore, if the primary span is not displayable (because\n+    /// the span is `DUMMY_SP` or the source code isn't found), labels will not be displayed\n+    /// either.\n     ///\n-    /// This span is *not* considered a [\"primary span\"][`MultiSpan`]; only\n-    /// the `Span` supplied when creating the diagnostic is primary.\n-    ///\n-    /// [`MultiSpan`]: ../rustc_span/struct.MultiSpan.html\n+    /// Implementation-wise, the label span is pushed onto the [`MultiSpan`] that was created when\n+    /// the diagnostic was constructed. However, the label span is *not* considered a\n+    /// [\"primary span\"][`MultiSpan`]; only the `Span` supplied when creating the diagnostic is\n+    /// primary.\n     pub fn span_label(&mut self, span: Span, label: impl Into<String>) -> &mut Self {\n         self.0.diagnostic.span_label(span, label);\n         self"}]}